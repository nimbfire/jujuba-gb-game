                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Fri Feb 28 11:17:07 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc65100
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _instanciate_chars
                             14 	.globl _copy_map
                             15 	.globl _helper_copy_map
                             16 	.globl _change_char
                             17 	.globl _map_water
                             18 	.globl _init
                             19 	.globl _main
                             20 	.globl _timers
                             21 	.globl _performantDelay
                             22 	.globl _item3
                             23 	.globl _item2
                             24 	.globl _item1
                             25 	.globl _key
                             26 	.globl _player
                             27 	.globl _horse
                             28 	.globl _cat
                             29 	.globl _dog2
                             30 	.globl _dog1
                             31 	.globl _bunny
                             32 	.globl _map
                             33 	.globl _current_map
                             34 	.globl _input_timer
                             35 	.globl _characters_available
                             36 	.globl _timer
                             37 	.globl _running
                             38 	.globl _spritePalette
                             39 	.globl _sprites_park
                             40 	.globl _MapTest
                             41 	.globl _Map10
                             42 	.globl _Map9
                             43 	.globl _Map8
                             44 	.globl _Map7
                             45 	.globl _Map6
                             46 	.globl _Map5
                             47 	.globl _Map4
                             48 	.globl _Map3
                             49 	.globl _Map2
                             50 	.globl _Map1
                             51 	.globl _Characters
                             52 	.globl _map_loop
                             53 	.globl _map_init
                             54 	.globl _got_key
                             55 	.globl _got_door
                             56 	.globl _is_ded
                             57 	.globl __get_next_map_position
                             58 	.globl _dog1_power_apply
                             59 	.globl _get_player_map_position
                             60 	.globl _player_input
                             61 	.globl _can_move_to_map_pos
                             62 	.globl _can_move
                             63 	.globl _move_character
                             64 	.globl _set_character_sprite
                             65 ;--------------------------------------------------------
                             66 ; special function registers
                             67 ;--------------------------------------------------------
                             68 ;--------------------------------------------------------
                             69 ; special function bits 
                             70 ;--------------------------------------------------------
                             71 ;--------------------------------------------------------
                             72 ; internal ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DATA
   0000                      75 _Characters::
   0000                      76 	.ds 496
   01F0                      77 _Map1::
   01F0                      78 	.ds 360
   0358                      79 _Map2::
   0358                      80 	.ds 360
   04C0                      81 _Map3::
   04C0                      82 	.ds 360
   0628                      83 _Map4::
   0628                      84 	.ds 360
   0790                      85 _Map5::
   0790                      86 	.ds 360
   08F8                      87 _Map6::
   08F8                      88 	.ds 360
   0A60                      89 _Map7::
   0A60                      90 	.ds 360
   0BC8                      91 _Map8::
   0BC8                      92 	.ds 360
   0D30                      93 _Map9::
   0D30                      94 	.ds 360
   0E98                      95 _Map10::
   0E98                      96 	.ds 360
   1000                      97 _MapTest::
   1000                      98 	.ds 360
   1168                      99 _sprites_park::
   1168                     100 	.ds 1936
   18F8                     101 _spritePalette::
   18F8                     102 	.ds 8
   1900                     103 _running::
   1900                     104 	.ds 1
   1901                     105 _timer::
   1901                     106 	.ds 1
   1902                     107 _characters_available::
   1902                     108 	.ds 1
   1903                     109 _input_timer::
   1903                     110 	.ds 1
   1904                     111 _current_map::
   1904                     112 	.ds 1
   1905                     113 _map::
   1905                     114 	.ds 360
   1A6D                     115 _bunny::
   1A6D                     116 	.ds 14
   1A7B                     117 _dog1::
   1A7B                     118 	.ds 14
   1A89                     119 _dog2::
   1A89                     120 	.ds 14
   1A97                     121 _cat::
   1A97                     122 	.ds 14
   1AA5                     123 _horse::
   1AA5                     124 	.ds 14
   1AB3                     125 _player::
   1AB3                     126 	.ds 2
   1AB5                     127 _key::
   1AB5                     128 	.ds 6
   1ABB                     129 _item1::
   1ABB                     130 	.ds 6
   1AC1                     131 _item2::
   1AC1                     132 	.ds 6
   1AC7                     133 _item3::
   1AC7                     134 	.ds 6
                            135 ;--------------------------------------------------------
                            136 ; overlayable items in internal ram 
                            137 ;--------------------------------------------------------
                            138 	.area _OVERLAY
                            139 ;--------------------------------------------------------
                            140 ; indirectly addressable internal ram data
                            141 ;--------------------------------------------------------
                            142 	.area _ISEG
                            143 ;--------------------------------------------------------
                            144 ; bit data
                            145 ;--------------------------------------------------------
                            146 	.area _BSEG
                            147 ;--------------------------------------------------------
                            148 ; external ram data
                            149 ;--------------------------------------------------------
                            150 	.area _XSEG
                            151 ;--------------------------------------------------------
                            152 ; global & static initialisations
                            153 ;--------------------------------------------------------
                            154 	.area _GSINIT
                            155 	.area _GSFINAL
                            156 	.area _GSINIT
                            157 ;	game.c 26
                            158 ;	game.c 1138
                            159 ;	genArrayInit
                            160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            161 	ld	hl,#_Characters
   0003 CD 00 00            162 	call	__initrleblock
   0006 2C                  163 	.db	44
   0007 09 00 00 09 00 09   164 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   165 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   166 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   167 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   168 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         169 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               170 	.db	-5,0x00
   0035 7F                  171 	.db	127
   0036 13 00 1E 0A 9E 00   172 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   173 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   174 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   175 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   176 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   177 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   178 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   179 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   180 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   181 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   182 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   183 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   184 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   185 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   186 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   187 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  188 	.db	127
   00B6 00 00 04 70 04 40   189 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   190 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   191 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   192 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   193 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   194 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   195 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   196 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   197 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   198 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   199 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   200 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   201 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   202 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   203 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   204 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  205 	.db	62
   0136 00 00 39 14 FF 00   206 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   207 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   208 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   209 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   210 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   211 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   212 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   213 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               214 	.db	-127,0x00
   0176 04                  215 	.db	4
   0177 00 00 00 00         216 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  217 	.db	0
                            218 ;	game.c 25
                            219 ;	game.c 1138
                            220 ;	genArrayInit
                            221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            222 	ld	hl,#_Map1
   017F CD 00 00            223 	call	__initrleblock
   0182 04                  224 	.db	4
   0183 01 01 01 01         225 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               226 	.db	-16,0x16
   0189 04                  227 	.db	4
   018A 01 0A 02 01         228 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               229 	.db	-15,0x09
   0190 0C                  230 	.db	12
   0191 16 01 01 02 15 15   231 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         232 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               233 	.db	-6,0x15
   019F 09                  234 	.db	9
   01A0 02 09 16 02 01 02   235 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  236 	.db	0x17
   01A9 FA 15               237 	.db	-6,0x15
   01AB 20                  238 	.db	32
   01AC 17 15 15 15 17 15   239 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   240 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   241 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   242 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               243 	.db	-5,0x02
   01CE 06                  244 	.db	6
   01CF 01 15 01 01 01 17   245 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               246 	.db	-5,0x0B
   01D7 3E                  247 	.db	62
   01D8 01 01 01 15 02 02   248 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   249 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   250 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   251 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   252 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   253 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   254 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   255 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               256 	.db	-6,0x15
   0218 0C                  257 	.db	12
   0219 02 02 15 02 02 02   258 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         259 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               260 	.db	-8,0x15
   0227 3C                  261 	.db	60
   0228 17 17 17 15 15 15   262 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   263 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   264 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   265 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   266 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   267 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   268 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         269 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               270 	.db	-7,0x15
   0266 07                  271 	.db	7
   0267 17 17 15 15 15 01   272 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               273 	.db	-10,0x15
   0270 28                  274 	.db	40
   0271 17 15 15 15 15 17   275 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   276 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   277 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   278 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   279 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               280 	.db	-5,0x0B
   029B 0F                  281 	.db	15
   029C 04 2E 00 02 01 02   282 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   283 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               284 	.db	-5,0x0B
   02AD 03                  285 	.db	3
   02AE 04 00 00            286 	.db	0x04, 0x00, 0x00
   02B1 00                  287 	.db	0
                            288 ;	game.c 25
                            289 ;	game.c 1138
                            290 ;	genArrayInit
                            291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            292 	ld	hl,#_Map2
   02B5 CD 00 00            293 	call	__initrleblock
   02B8 FB 00               294 	.db	-5,0x00
   02BA 01                  295 	.db	1
   02BB 2D                  296 	.db	0x2D
   02BC F9 00               297 	.db	-7,0x00
   02BE 04                  298 	.db	4
   02BF 2D 00 15 15         299 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               300 	.db	-6,0x00
   02C5 7F                  301 	.db	127
   02C6 0B 0B 00 0B 0B 0B   302 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   303 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   304 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   305 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   306 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   307 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   308 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   309 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   310 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   311 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   312 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   313 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   314 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   315 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   316 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   317 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  318 	.db	53
   0346 00 00 2D 00 00 00   319 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   320 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   321 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   322 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   323 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   324 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      325 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               326 	.db	-5,0x0B
   037D 03                  327 	.db	3
   037E 15 00 15            328 	.db	0x15, 0x00, 0x15
   0381 FB 0B               329 	.db	-5,0x0B
   0383 37                  330 	.db	55
   0384 15 15 0B 15 15 00   331 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   332 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   333 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   334 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   335 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   336 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   337 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               338 	.db	-5,0x0B
   03BD 09                  339 	.db	9
   03BE 15 15 0B 15 15 00   340 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  341 	.db	0x15
   03C7 F6 0B               342 	.db	-10,0x0B
   03C9 07                  343 	.db	7
   03CA 15 15 15 0B 15 15   344 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               345 	.db	-16,0x15
   03D3 09                  346 	.db	9
   03D4 00 15 15 00 00 00   347 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  348 	.db	0x15
   03DD F9 00               349 	.db	-7,0x00
   03DF 09                  350 	.db	9
   03E0 15 15 15 00 00 15   351 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  352 	.db	0x15
   03E9 FB 00               353 	.db	-5,0x00
   03EB FB 15               354 	.db	-5,0x15
   03ED FB 00               355 	.db	-5,0x00
   03EF 02                  356 	.db	2
   03F0 15 15               357 	.db	0x15, 0x15
   03F2 00                  358 	.db	0
                            359 ;	game.c 25
                            360 ;	game.c 1138
                            361 ;	genArrayInit
                            362 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            363 	ld	hl,#_Map3
   03F6 CD 00 00            364 	call	__initrleblock
   03F9 F2 01               365 	.db	-14,0x01
   03FB 03                  366 	.db	3
   03FC 2D 0B 0B            367 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               368 	.db	-5,0x01
   0401 02                  369 	.db	2
   0402 17 17               370 	.db	0x17, 0x17
   0404 FA 15               371 	.db	-6,0x15
   0406 0E                  372 	.db	14
   0407 17 17 15 15 0B 15   373 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   374 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               375 	.db	-5,0x01
   0417 08                  376 	.db	8
   0418 29 01 01 01 2D 01   377 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               378 	.db	-5,0x01
   0422 7F                  379 	.db	127
   0423 15 15 2D 15 15 15   380 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   381 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   382 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   383 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   384 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   385 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   386 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   387 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   388 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   389 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   390 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   391 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   392 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   393 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   394 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   395 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  396 	.db	61
   04A3 01 15 17 15 15 01   397 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   398 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   399 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   400 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   401 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   402 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   403 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      404 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               405 	.db	-5,0x01
   04E2 0B                  406 	.db	11
   04E3 15 15 01 15 2D 01   407 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            408 	.db	0x15, 0x15, 0x0B
   04EE FB 15               409 	.db	-5,0x15
   04F0 59                  410 	.db	89
   04F1 17 15 15 17 15 15   411 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   412 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   413 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   414 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   415 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   416 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   417 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   418 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   419 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   420 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   421 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  422 	.db	0x17
   054A 00                  423 	.db	0
                            424 ;	game.c 25
                            425 ;	game.c 1138
                            426 ;	genArrayInit
                            427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            428 	ld	hl,#_Map4
   054E CD 00 00            429 	call	__initrleblock
   0551 06                  430 	.db	6
   0552 00 00 0A 0A 15 15   431 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               432 	.db	-5,0x0B
   055A 01                  433 	.db	1
   055B 15                  434 	.db	0x15
   055C FA 0B               435 	.db	-6,0x0B
   055E 25                  436 	.db	37
   055F 15 15 00 0A 2D 06   437 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   438 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   439 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   440 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      441 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               442 	.db	-5,0x0B
   0586 08                  443 	.db	8
   0587 0A 07 0B 0B 15 0B   444 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               445 	.db	-5,0x0B
   0591 01                  446 	.db	1
   0592 15                  447 	.db	0x15
   0593 F6 0B               448 	.db	-10,0x0B
   0595 42                  449 	.db	66
   0596 00 2D 0B 01 00 0B   450 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   451 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   452 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   453 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   454 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   455 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   456 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   457 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               458 	.db	0x15, 0x00
   05D8 F9 0B               459 	.db	-7,0x0B
   05DA 43                  460 	.db	67
   05DB 15 0B 0B 00 0B 15   461 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   462 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   463 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   464 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   465 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   466 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   467 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   468 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            469 	.db	0x15, 0x0B, 0x15
   061E F9 0B               470 	.db	-7,0x0B
   0620 16                  471 	.db	22
   0621 15 15 0B 0B 0B 0B   472 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   473 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   474 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               475 	.db	-5,0x0B
   0639 66                  476 	.db	102
   063A 15 0A 07 15 00 02   477 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   478 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   479 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   480 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   481 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   482 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   483 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   484 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   485 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   486 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   487 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   488 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   489 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  490 	.db	0
                            491 ;	game.c 25
                            492 ;	game.c 1138
                            493 ;	genArrayInit
                            494 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            495 	ld	hl,#_Map5
   06A4 CD 00 00            496 	call	__initrleblock
   06A7 F2 01               497 	.db	-14,0x01
   06A9 03                  498 	.db	3
   06AA 2D 0B 0B            499 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               500 	.db	-5,0x01
   06AF 02                  501 	.db	2
   06B0 17 17               502 	.db	0x17, 0x17
   06B2 FA 15               503 	.db	-6,0x15
   06B4 07                  504 	.db	7
   06B5 17 17 15 15 0B 15   505 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               506 	.db	-5,0x01
   06BE 02                  507 	.db	2
   06BF 17 15               508 	.db	0x17, 0x15
   06C1 FB 01               509 	.db	-5,0x01
   06C3 7F                  510 	.db	127
   06C4 29 01 01 01 2D 01   511 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   512 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   513 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   514 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   515 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   516 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   517 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   518 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   519 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   520 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   521 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   522 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   523 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   524 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   525 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   526 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  527 	.db	74
   0744 01 2D 01 01 01 15   528 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   529 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   530 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   531 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   532 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   533 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   534 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   535 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   536 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               537 	.db	0x01, 0x29
   078E FB 01               538 	.db	-5,0x01
   0790 0B                  539 	.db	11
   0791 15 15 01 15 2D 01   540 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            541 	.db	0x15, 0x15, 0x0B
   079C FB 15               542 	.db	-5,0x15
   079E 59                  543 	.db	89
   079F 17 15 15 17 15 15   544 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   545 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   546 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   547 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   548 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   549 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   550 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   551 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   552 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   553 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   554 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  555 	.db	0x17
   07F8 00                  556 	.db	0
                            557 ;	game.c 25
                            558 ;	game.c 1138
                            559 ;	genArrayInit
                            560 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            561 	ld	hl,#_Map6
   07FC CD 00 00            562 	call	__initrleblock
   07FF BF 00               563 	.db	-65,0x00
   0801 02                  564 	.db	2
   0802 0C 0C               565 	.db	0x0C, 0x0C
   0804 EE 00               566 	.db	-18,0x00
   0806 02                  567 	.db	2
   0807 0C 0C               568 	.db	0x0C, 0x0C
   0809 81 00               569 	.db	-127,0x00
   080B 81 00               570 	.db	-127,0x00
   080D ED 00               571 	.db	-19,0x00
   080F 00                  572 	.db	0
                            573 ;	game.c 25
                            574 ;	game.c 1138
                            575 ;	genArrayInit
                            576 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            577 	ld	hl,#_Map7
   0813 CD 00 00            578 	call	__initrleblock
   0816 BF 00               579 	.db	-65,0x00
   0818 02                  580 	.db	2
   0819 0C 0C               581 	.db	0x0C, 0x0C
   081B EE 00               582 	.db	-18,0x00
   081D 02                  583 	.db	2
   081E 0C 0C               584 	.db	0x0C, 0x0C
   0820 81 00               585 	.db	-127,0x00
   0822 81 00               586 	.db	-127,0x00
   0824 ED 00               587 	.db	-19,0x00
   0826 00                  588 	.db	0
                            589 ;	game.c 25
                            590 ;	game.c 1138
                            591 ;	genArrayInit
                            592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            593 	ld	hl,#_Map8
   082A CD 00 00            594 	call	__initrleblock
   082D BF 00               595 	.db	-65,0x00
   082F 02                  596 	.db	2
   0830 0C 0C               597 	.db	0x0C, 0x0C
   0832 EE 00               598 	.db	-18,0x00
   0834 02                  599 	.db	2
   0835 0C 0C               600 	.db	0x0C, 0x0C
   0837 81 00               601 	.db	-127,0x00
   0839 81 00               602 	.db	-127,0x00
   083B ED 00               603 	.db	-19,0x00
   083D 00                  604 	.db	0
                            605 ;	game.c 25
                            606 ;	game.c 1138
                            607 ;	genArrayInit
                            608 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            609 	ld	hl,#_Map9
   0841 CD 00 00            610 	call	__initrleblock
   0844 BF 00               611 	.db	-65,0x00
   0846 02                  612 	.db	2
   0847 0C 0C               613 	.db	0x0C, 0x0C
   0849 EE 00               614 	.db	-18,0x00
   084B 02                  615 	.db	2
   084C 0C 0C               616 	.db	0x0C, 0x0C
   084E 81 00               617 	.db	-127,0x00
   0850 81 00               618 	.db	-127,0x00
   0852 ED 00               619 	.db	-19,0x00
   0854 00                  620 	.db	0
                            621 ;	game.c 25
                            622 ;	game.c 1138
                            623 ;	genArrayInit
                            624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            625 	ld	hl,#_Map10
   0858 CD 00 00            626 	call	__initrleblock
   085B BF 00               627 	.db	-65,0x00
   085D 02                  628 	.db	2
   085E 0C 0C               629 	.db	0x0C, 0x0C
   0860 EE 00               630 	.db	-18,0x00
   0862 02                  631 	.db	2
   0863 0C 0C               632 	.db	0x0C, 0x0C
   0865 81 00               633 	.db	-127,0x00
   0867 81 00               634 	.db	-127,0x00
   0869 ED 00               635 	.db	-19,0x00
   086B 00                  636 	.db	0
                            637 ;	game.c 25
                            638 ;	game.c 1138
                            639 ;	genArrayInit
                            640 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            641 	ld	hl,#_MapTest
   086F CD 00 00            642 	call	__initrleblock
   0872 E8 00               643 	.db	-24,0x00
   0874 06                  644 	.db	6
   0875 47 4A 59 46 00 5F   645 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087B F4 00               646 	.db	-12,0x00
   087D 01                  647 	.db	1
   087E 2D                  648 	.db	0x2D
   087F ED 00               649 	.db	-19,0x00
   0881 29                  650 	.db	41
   0882 0D 00 2D 00 00 00   651 	.db	0x0D, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x4B
        00 4B
   088A 46 58 4A 00 5F 00   652 	.db	0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62, 0x00
        62 00
   0892 65 00 00 00 0D 00   653 	.db	0x65, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x0D, 0x0D
        0D 0D
   089A 0D 2D 00 4B 46 58   654 	.db	0x0D, 0x2D, 0x00, 0x4B, 0x46, 0x58, 0x4A, 0x00
        4A 00
   08A2 60 00 62 00 66 00   655 	.db	0x60, 0x00, 0x62, 0x00, 0x66, 0x00, 0x00, 0x00
        00 00
   08AA 0D                  656 	.db	0x0D
   08AB FA 00               657 	.db	-6,0x00
   08AD 0A                  658 	.db	10
   08AE 4B 46 58 4A 00 5C   659 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62
        00 62
   08B6 00 67               660 	.db	0x00, 0x67
   08B8 ED 00               661 	.db	-19,0x00
   08BA 01                  662 	.db	1
   08BB 68                  663 	.db	0x68
   08BC EB 00               664 	.db	-21,0x00
   08BE 0A                  665 	.db	10
   08BF 46 62 55 54 49 4A   666 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08C7 49 54               667 	.db	0x49, 0x54
   08C9 F4 00               668 	.db	-12,0x00
   08CB 0A                  669 	.db	10
   08CC 55 4A 57 58 54 53   670 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08D4 4A 52               671 	.db	0x4A, 0x52
   08D6 FB 00               672 	.db	-5,0x00
   08D8 01                  673 	.db	1
   08D9 2E                  674 	.db	0x2E
   08DA EF 00               675 	.db	-17,0x00
   08DC 0C                  676 	.db	12
   08DD 2D 00 00 00 00 47   677 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08E5 57 54 48 46         678 	.db	0x57, 0x54, 0x48, 0x46
   08E9 F8 00               679 	.db	-8,0x00
   08EB 18                  680 	.db	24
   08EC 2D 00 0B 0B 00 00   681 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08F4 4A 57 58 54 53 46   682 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   08FC 52 00 00 00 2D 00   683 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   0904 F0 00               684 	.db	-16,0x00
   0906 0B                  685 	.db	11
   0907 2D 00 0D 0D 00 32   686 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   090F 5A 51 46            687 	.db	0x5A, 0x51, 0x46
   0912 F7 00               688 	.db	-9,0x00
   0914 0E                  689 	.db	14
   0915 2D 00 0E 0E 00 33   690 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   091D 52 55 5A 57 57 46   691 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   0923 FA 00               692 	.db	-6,0x00
   0925 0D                  693 	.db	13
   0926 2D 00 29 29 00 00   694 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   092E 51 54 48 54 58      695 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   0933 E0 00               696 	.db	-32,0x00
   0935 00                  697 	.db	0
                            698 ;	game.c 26
                            699 ;	game.c 1138
                            700 ;	genArrayInit
                            701 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0936 21 68 11            702 	ld	hl,#_sprites_park
   0939 CD 00 00            703 	call	__initrleblock
   093C EC 00               704 	.db	-20,0x00
   093E 09                  705 	.db	9
   093F 10 00 00 00 02 00   706 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   0947 20                  707 	.db	0x20
   0948 F7 00               708 	.db	-9,0x00
   094A 01                  709 	.db	1
   094B 10                  710 	.db	0x10
   094C F7 00               711 	.db	-9,0x00
   094E 21                  712 	.db	33
   094F 94 08 00 00 42 00   713 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   0957 00 80 25 00 50 00   714 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   095F 00 00 90 00 00 00   715 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   0967 80 00 00 10 80 00   716 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   096F 5A                  717 	.db	0x5A
   0970 FB 00               718 	.db	-5,0x00
   0972 05                  719 	.db	5
   0973 02 20 00 00 08      720 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0978 F9 00               721 	.db	-7,0x00
   097A 0B                  722 	.db	11
   097B 01 00 00 08 01 00   723 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   0983 00 00 09            724 	.db	0x00, 0x00, 0x09
   0986 F9 00               725 	.db	-7,0x00
   0988 4C                  726 	.db	76
   0989 10 08 00 00 40 04   727 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   0991 00 00 5A 00 7F 00   728 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   0999 80 00 80 00 80 00   729 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   09A1 80 00 80 00 7E 00   730 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   09A9 81 00 81 00 81 00   731 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   09B1 81 00 7E 00 00 00   732 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09B9 50 00 20 00 00 00   733 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09C1 0A 00 04 00 FF 00   734 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09C9 AA 00 FF 00 FF 00   735 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09D1 55 00 FF 00         736 	.db	0x55, 0x00, 0xFF, 0x00
   09D5 EF FF               737 	.db	-17,0xFF
   09D7 4C                  738 	.db	76
   09D8 00 DD 00 BB 00 F7   739 	.db	0x00, 0xDD, 0x00, 0xBB, 0x00, 0xF7, 0x00, 0xFF
        00 FF
   09E0 00 EE 00 DD 00 FF   740 	.db	0x00, 0xEE, 0x00, 0xDD, 0x00, 0xFF, 0x00, 0xAD
        00 AD
   09E8 00 5C 00 DB 00 29   741 	.db	0x00, 0x5C, 0x00, 0xDB, 0x00, 0x29, 0x00, 0xF6
        00 F6
   09F0 00 49 00 BA 00 D6   742 	.db	0x00, 0x49, 0x00, 0xBA, 0x00, 0xD6, 0x00, 0xFF
        00 FF
   09F8 7E F3 8D C1 BF C1   743 	.db	0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81
        BF 81
   0A00 FF 81 FF 81 FF FF   744 	.db	0xFF, 0x81, 0xFF, 0x81, 0xFF, 0xFF, 0x7E, 0xFF
        7E FF
   0A08 70 FF 80 D9 26 FF   745 	.db	0x70, 0xFF, 0x80, 0xD9, 0x26, 0xFF, 0x01, 0xEB
        01 EB
   0A10 15 F3 8C E1 9E FF   746 	.db	0x15, 0xF3, 0x8C, 0xE1, 0x9E, 0xFF, 0x00, 0x00
        00 00
   0A18 00 42 00 24 00 18   747 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0A20 00 24 00 42         748 	.db	0x00, 0x24, 0x00, 0x42
   0A24 FB 00               749 	.db	-5,0x00
   0A26 0B                  750 	.db	11
   0A27 42 00 24 00 18 00   751 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A2F 24 00 42            752 	.db	0x24, 0x00, 0x42
   0A32 EB 00               753 	.db	-21,0x00
   0A34 4B                  754 	.db	75
   0A35 42 00 24 00 18 00   755 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A3D 24 00 42 00 00 00   756 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A45 6E 10 FF 00 BF 40   757 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A4D 76 08 00 3C 00 3C   758 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A55 80 7F 80 7F 80 7F   759 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A5D 80 7F 80 7F 00 FF   760 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A65 7E 00 DF 20 FF 00   761 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A6D 7E 00 18 24 00 3C   762 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A75 42 00 24 00 18 00   763 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A7D 24 00 42            764 	.db	0x24, 0x00, 0x42
   0A80 FB 00               765 	.db	-5,0x00
   0A82 0B                  766 	.db	11
   0A83 42 00 24 00 18 00   767 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A8B 24 00 42            768 	.db	0x24, 0x00, 0x42
   0A8E FB 00               769 	.db	-5,0x00
   0A90 0B                  770 	.db	11
   0A91 42 00 24 00 18 00   771 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A99 24 00 42            772 	.db	0x24, 0x00, 0x42
   0A9C FB 00               773 	.db	-5,0x00
   0A9E 0B                  774 	.db	11
   0A9F 42 00 24 00 18 00   775 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AA7 24 00 42            776 	.db	0x24, 0x00, 0x42
   0AAA FB 00               777 	.db	-5,0x00
   0AAC 0B                  778 	.db	11
   0AAD 42 00 24 00 18 00   779 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AB5 24 00 42            780 	.db	0x24, 0x00, 0x42
   0AB8 FB 00               781 	.db	-5,0x00
   0ABA 0B                  782 	.db	11
   0ABB 42 00 24 00 18 00   783 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AC3 24 00 42            784 	.db	0x24, 0x00, 0x42
   0AC6 FB 00               785 	.db	-5,0x00
   0AC8 0B                  786 	.db	11
   0AC9 42 00 24 00 18 00   787 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD1 24 00 42            788 	.db	0x24, 0x00, 0x42
   0AD4 FB 00               789 	.db	-5,0x00
   0AD6 0B                  790 	.db	11
   0AD7 42 00 24 00 18 00   791 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0ADF 24 00 42            792 	.db	0x24, 0x00, 0x42
   0AE2 FB 00               793 	.db	-5,0x00
   0AE4 0B                  794 	.db	11
   0AE5 42 00 24 00 18 00   795 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AED 24 00 42            796 	.db	0x24, 0x00, 0x42
   0AF0 EB 00               797 	.db	-21,0x00
   0AF2 0B                  798 	.db	11
   0AF3 42 00 24 00 18 00   799 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AFB 24 00 42            800 	.db	0x24, 0x00, 0x42
   0AFE FB 00               801 	.db	-5,0x00
   0B00 0B                  802 	.db	11
   0B01 42 00 24 00 18 00   803 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B09 24 00 42            804 	.db	0x24, 0x00, 0x42
   0B0C FB 00               805 	.db	-5,0x00
   0B0E 0B                  806 	.db	11
   0B0F 42 00 24 00 18 00   807 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B17 24 00 42            808 	.db	0x24, 0x00, 0x42
   0B1A FB 00               809 	.db	-5,0x00
   0B1C 0B                  810 	.db	11
   0B1D 42 00 24 00 18 00   811 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B25 24 00 42            812 	.db	0x24, 0x00, 0x42
   0B28 FB 00               813 	.db	-5,0x00
   0B2A 0B                  814 	.db	11
   0B2B 42 00 24 00 18 00   815 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B33 24 00 42            816 	.db	0x24, 0x00, 0x42
   0B36 FB 00               817 	.db	-5,0x00
   0B38 0B                  818 	.db	11
   0B39 42 00 24 00 18 00   819 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B41 24 00 42            820 	.db	0x24, 0x00, 0x42
   0B44 FB 00               821 	.db	-5,0x00
   0B46 7F                  822 	.db	127
   0B47 42 00 24 00 18 00   823 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B4F 24 00 42 00 00 00   824 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B57 C7 C7 BB BB BB BB   825 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B5F D7 D7 DB DB 42 C3   826 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B67 FF 00 C7 00 C7 00   827 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B6F EF 00 E7 00 FF 00   828 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B77 76 00 FF 00 BF 00   829 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B7F 7E 00 00 3C 00 3C   830 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B87 42 7E 81 FF 81 FF   831 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B8F 81 FF 81 FF 81 FF   832 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B97 F3 8D C1 BF C1 BF   833 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0B9F 81 FF 81 FF 7E 7E   834 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0BA7 04 02 01 09 09 F9   835 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0BAF 06 06 00 00 00 00   836 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BB7 AA 00 55 00 AA 00   837 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BBF AA 00 55 00 AA 00   838 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BC6 0F                  839 	.db	15
   0BC7 AA AA 55 55 AA AA   840 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BCF AA AA 55 55 AA AA   841 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55
        55
   0BD6 F0 00               842 	.db	-16,0x00
   0BD8 4D                  843 	.db	77
   0BD9 09 00 00 09 00 09   844 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   0BE1 CA 05 FF 00 3F 00   845 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0BE9 00 13 00 1E 0A 9E   846 	.db	0x00, 0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F
        00 9F
   0BF1 02 FF 00 FF 00 7E   847 	.db	0x02, 0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A
        00 4A
   0BF9 94 00 9C 00 9E 0A   848 	.db	0x94, 0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01
        FF 01
   0C01 FE 00 7C 00 4A 00   849 	.db	0xFE, 0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00
        49 00
   0C09 89 89 4F 4F 4F 4A   850 	.db	0x89, 0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F
        8F 8F
   0C11 9F 9F 7F 7F 7F 7F   851 	.db	0x9F, 0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45
        45 45
   0C19 00 00 42 00 24 00   852 	.db	0x00, 0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00
        18 00
   0C21 18 00 24 00 42      853 	.db	0x18, 0x00, 0x24, 0x00, 0x42
   0C26 FB 00               854 	.db	-5,0x00
   0C28 0B                  855 	.db	11
   0C29 42 00 24 00 18 00   856 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C31 24 00 42            857 	.db	0x24, 0x00, 0x42
   0C34 FB 00               858 	.db	-5,0x00
   0C36 0B                  859 	.db	11
   0C37 42 00 24 00 18 00   860 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C3F 24 00 42            861 	.db	0x24, 0x00, 0x42
   0C42 FB 00               862 	.db	-5,0x00
   0C44 0B                  863 	.db	11
   0C45 42 00 24 00 18 00   864 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C4D 24 00 42            865 	.db	0x24, 0x00, 0x42
   0C50 FB 00               866 	.db	-5,0x00
   0C52 0B                  867 	.db	11
   0C53 42 00 24 00 18 00   868 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C5B 24 00 42            869 	.db	0x24, 0x00, 0x42
   0C5E FB 00               870 	.db	-5,0x00
   0C60 0B                  871 	.db	11
   0C61 42 00 24 00 18 00   872 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C69 24 00 42            873 	.db	0x24, 0x00, 0x42
   0C6C FB 00               874 	.db	-5,0x00
   0C6E 0B                  875 	.db	11
   0C6F 42 00 24 00 18 00   876 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C77 24 00 42            877 	.db	0x24, 0x00, 0x42
   0C7A FB 00               878 	.db	-5,0x00
   0C7C 0B                  879 	.db	11
   0C7D 42 00 24 00 18 00   880 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C85 24 00 42            881 	.db	0x24, 0x00, 0x42
   0C88 FB 00               882 	.db	-5,0x00
   0C8A 0B                  883 	.db	11
   0C8B 42 00 24 00 18 00   884 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C93 24 00 42            885 	.db	0x24, 0x00, 0x42
   0C96 FB 00               886 	.db	-5,0x00
   0C98 0B                  887 	.db	11
   0C99 42 00 24 00 18 00   888 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA1 24 00 42            889 	.db	0x24, 0x00, 0x42
   0CA4 EB 00               890 	.db	-21,0x00
   0CA6 0B                  891 	.db	11
   0CA7 42 00 24 00 18 00   892 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CAF 24 00 42            893 	.db	0x24, 0x00, 0x42
   0CB2 FB 00               894 	.db	-5,0x00
   0CB4 0B                  895 	.db	11
   0CB5 42 00 24 00 18 00   896 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CBD 24 00 42            897 	.db	0x24, 0x00, 0x42
   0CC0 FB 00               898 	.db	-5,0x00
   0CC2 0B                  899 	.db	11
   0CC3 42 00 24 00 18 00   900 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CCB 24 00 42            901 	.db	0x24, 0x00, 0x42
   0CCE FB 00               902 	.db	-5,0x00
   0CD0 0B                  903 	.db	11
   0CD1 42 00 24 00 18 00   904 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CD9 24 00 42            905 	.db	0x24, 0x00, 0x42
   0CDC FB 00               906 	.db	-5,0x00
   0CDE 0B                  907 	.db	11
   0CDF 42 00 24 00 18 00   908 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CE7 24 00 42            909 	.db	0x24, 0x00, 0x42
   0CEA FA 00               910 	.db	-6,0x00
   0CEC 7F                  911 	.db	127
   0CED 38 00 44 00 44 00   912 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CF5 44 00 44 00 44 00   913 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0CFD 78 00 44 00 44 00   914 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0D05 44 00 44 00 78 00   915 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D0D 1C 00 20 00 40 00   916 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0D15 40 00 20 00 1C 00   917 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D1D 78 00 44 00 44 00   918 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D25 44 00 44 00 78 00   919 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D2D 7C 00 40 00 40 00   920 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D35 40 00 40 00 7C 00   921 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D3D 7C 00 40 00 40 00   922 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D45 40 00 40 00 40 00   923 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D4D 18 00 20 00 40 00   924 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D55 42 00 24 00 18 00   925 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D5D 44 00 44 00 44 00   926 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D65 44 00 44 00 44 00   927 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D6C 7F                  928 	.db	127
   0D6D 00 10 00 00 00 10   929 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D75 00 10 00 10 00 10   930 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D7D 00 3E 00 08 00 08   931 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D85 00 08 00 48 00 30   932 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D8D 00 44 00 48 00 50   933 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D95 00 50 00 48 00 44   934 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0D9D 00 40 00 40 00 40   935 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0DA5 00 40 00 40 00 78   936 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0DAD 00 44 00 6C 00 54   937 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0DB5 00 44 00 44 00 44   938 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DBD 00 44 00 64 00 64   939 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DC5 00 54 00 4C 00 4C   940 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DCD 00 38 00 44 00 44   941 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DD5 00 44 00 44 00 38   942 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DDD 00 78 00 44 00 44   943 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DE5 00 40 00 40 00 40   944 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DEC 7F                  945 	.db	127
   0DED 00 00 38 00 44 00   946 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DF5 44 00 54 00 38 00   947 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0DFD 00 00 78 00 44 00   948 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E05 78 00 50 00 48 00   949 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0E0D 00 00 38 00 40 00   950 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0E15 38 00 04 00 04 00   951 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E1D 00 00 7C 00 10 00   952 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E25 10 00 10 00 10 00   953 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E2D 00 00 44 00 44 00   954 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E35 44 00 44 00 44 00   955 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E3D 00 00 41 00 41 00   956 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E45 49 00 2A 00 2A 00   957 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E4D 00 00 44 00 44 00   958 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E55 10 00 28 00 44 00   959 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E5D 00 00 44 00 28 00   960 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E65 10 00 10 00 10 00   961 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E6C 7F                  962 	.db	127
   0E6D 00 00 00 7C 00 04   963 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E75 00 10 00 20 00 40   964 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E7D 00 08 00 18 00 28   965 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E85 00 08 00 08 00 08   966 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E8D 00 00 00 38 00 44   967 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E95 00 08 00 10 00 20   968 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0E9D 00 00 00 70 00 08   969 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0EA5 00 30 00 08 00 08   970 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0EAD 00 00 00 10 00 08   971 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0EB5 00 7E 00 04 00 08   972 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EBD 00 00 00 44 00 44   973 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0EC5 00 28 00 10 00 10   974 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0ECD 3C 3C 42 7E 81 FF   975 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0ED5 A1 FF 81 FF 81 FF   976 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EDD 3C 3C 42 7E 81 FF   977 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EE5 A1 FF 81 FF 81 FF   978 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0EEC 7F                  979 	.db	127
   0EED FF 3C 3C 42 7E 81   980 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EF5 FF A1 FF 81 FF 81   981 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0EFD FF 3C 3C 42 7E 81   982 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F05 FF A1 FF 81 FF 81   983 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F0D FF 3C 3C 42 7E 81   984 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F15 FF A1 FF 81 FF 81   985 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F1D FF 3C 3C 42 7E 81   986 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F25 FF A1 FF 81 FF 81   987 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F2D FF 3C 3C 42 7E 81   988 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F35 FF A1 FF 81 FF 81   989 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F3D FF 3C 3C 42 7E 81   990 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F45 FF A1 FF 81 FF 81   991 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F4D FF 3C 3C 42 7E 81   992 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F55 FF A1 FF 81 FF 81   993 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F5D FF 3C 3C 42 7E 81   994 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F65 FF A1 FF 81 FF 81   995 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F6C 7F                  996 	.db	127
   0F6D 81 FF 3C 3C 42 7E   997 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F75 81 FF A1 FF 81 FF   998 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F7D 81 FF 3C 3C 42 7E   999 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F85 81 FF A1 FF 81 FF  1000 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F8D 81 FF 3C 3C 42 7E  1001 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F95 81 FF A1 FF 81 FF  1002 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F9D 81 FF 3C 3C 42 7E  1003 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FA5 81 FF A1 FF 81 FF  1004 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FAD 81 FF 3C 3C 42 7E  1005 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FB5 81 FF A1 FF 81 FF  1006 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FBD 81 FF 3C 3C 42 7E  1007 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FC5 81 FF A1 FF 81 FF  1008 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FCD 81 FF 3C 3C 42 7E  1009 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FD5 81 FF A1 FF 81 FF  1010 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FDD 81 FF 3C 3C 42 7E  1011 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FE5 81 FF A1 FF 81 FF  1012 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FEC 33                 1013 	.db	51
   0FED FF 81 FF 3C 3C 42  1014 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FF5 FF 81 FF A1 FF 81  1015 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0FFD FF 81 FF 3C 3C 42  1016 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1005 FF 81 FF A1 FF 81  1017 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   100D FF 81 FF 3C 3C 42  1018 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1015 FF 81 FF A1 FF 81  1019 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   101D FF 81 FF           1020 	.db	0xFF, 0x81, 0xFF
   1020 00                 1021 	.db	0
                           1022 ;	game.c 44
                           1023 ;	game.c 1138
                           1024 ;	genArrayInit
                           1025 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1021 21 F8 18           1026 	ld	hl,#_spritePalette
   1024 CD 00 00           1027 	call	__initrleblock
   1027 08                 1028 	.db	8
   1028 DC 6B D2 3A 87 29  1029 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   1030 00                 1030 	.db	0
                           1031 ;--------------------------------------------------------
                           1032 ; Home
                           1033 ;--------------------------------------------------------
                           1034 	.area _HOME
                           1035 	.area _CODE
                           1036 ;--------------------------------------------------------
                           1037 ; code
                           1038 ;--------------------------------------------------------
                           1039 	.area _CODE
                           1040 ;	game.c 70
                           1041 ;	genLabel
                           1042 ;	genFunction
                           1043 ;	---------------------------------
                           1044 ; Function performantDelay
                           1045 ; ---------------------------------
   0000                    1046 ___performantDelay_start:
   0000                    1047 _performantDelay:
                           1048 	
                           1049 ;	game.c 72
                           1050 ;	genAssign
   0000 0E 00              1051 	ld	c,#0x00
                           1052 ;	genLabel
   0002                    1053 00101$:
                           1054 ;	genCmpEq
                           1055 ;	AOP_STK for 
                           1056 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1057 	lda	hl,2(sp)
   0004 7E                 1058 	ld	a,(hl)
   0005 B9                 1059 	cp	c
   0006 20 03              1060 	jr	nz,00109$
   0008 C3 15 00           1061 	jp	00105$
   000B                    1062 00109$:
                           1063 ;	game.c 73
                           1064 ;	genCall
                           1065 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1066 	push	bc
   000C CD 00 00           1067 	call	_wait_vbl_done
   000F E1                 1068 	pop	hl
   0010 4D                 1069 	ld	c,l
                           1070 ;	game.c 72
                           1071 ;	genPlus
                           1072 ;	genPlusIncr
                           1073 ; Removed redundent load
   0011 0C                 1074 	inc	c
                           1075 ;	genGoto
   0012 C3 02 00           1076 	jp	00101$
                           1077 ;	genLabel
   0015                    1078 00105$:
                           1079 ;	genEndFunction
                           1080 	
   0015 C9                 1081 	ret
   0016                    1082 ___performantDelay_end:
                           1083 ;	game.c 107
                           1084 ;	genLabel
                           1085 ;	genFunction
                           1086 ;	---------------------------------
                           1087 ; Function timers
                           1088 ; ---------------------------------
   0016                    1089 ___timers_start:
   0016                    1090 _timers:
                           1091 	
                           1092 ;	game.c 109
                           1093 ;	genCmpEq
                           1094 ;	AOP_HL for _input_timer
                           1095 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1096 	ld	hl,#_input_timer
   0019 7E                 1097 	ld	a,(hl)
   001A B7                 1098 	or	a,a
   001B CA 22 00           1099 	jp	z,00102$
   001E                    1100 00106$:
                           1101 ;	game.c 110
                           1102 ;	genMinus
                           1103 ;	AOP_HL for _input_timer
   001E 21 03 19           1104 	ld	hl,#_input_timer
   0021 35                 1105 	dec	(hl)
                           1106 ;	genLabel
   0022                    1107 00102$:
                           1108 ;	game.c 112
                           1109 ;	genPlus
                           1110 ;	AOP_HL for _timer
                           1111 ;	genPlusIncr
   0022 21 01 19           1112 	ld	hl,#_timer
   0025 34                 1113 	inc	(hl)
                           1114 ;	genLabel
   0026                    1115 00103$:
                           1116 ;	genEndFunction
                           1117 	
   0026 C9                 1118 	ret
   0027                    1119 ___timers_end:
                           1120 ;	game.c 116
                           1121 ;	genLabel
                           1122 ;	genFunction
                           1123 ;	---------------------------------
                           1124 ; Function main
                           1125 ; ---------------------------------
   0027                    1126 ___main_start:
   0027                    1127 _main:
                           1128 	
                           1129 ;	game.c 118
                           1130 ;	genCall
                           1131 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1132 	call	_init
                           1133 ;	game.c 119
                           1134 ;	genCall
                           1135 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1136 	call	_map_init
                           1137 ;	game.c 121
                           1138 ;	genLabel
   002D                    1139 00101$:
                           1140 ;	genIfx
                           1141 ;	AOP_HL for _running
   002D AF                 1142 	xor	a,a
   002E 21 00 19           1143 	ld	hl,#_running
   0031 B6                 1144 	or	a,(hl)
   0032 CA 47 00           1145 	jp	z,00103$
                           1146 ;	game.c 123
                           1147 ;	genCall
                           1148 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1149 	call	_timers
                           1150 ;	game.c 124
                           1151 ;	genCall
                           1152 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1153 	call	_map_loop
                           1154 ;	game.c 125
                           1155 ;	genIpush
                           1156 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1157 	ld	a,#0x02
   003D F5                 1158 	push	af
   003E 33                 1159 	inc	sp
                           1160 ;	genCall
   003F CD 00 00           1161 	call	_performantDelay
   0042 E8 01              1162 	lda	sp,1(sp)
                           1163 ;	genGoto
   0044 C3 2D 00           1164 	jp	00101$
                           1165 ;	genLabel
   0047                    1166 00103$:
                           1167 ;	game.c 129
                           1168 ;	genIpush
                           1169 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1170 	ld	hl,#__str_0
   004A E5                 1171 	push	hl
                           1172 ;	genCall
   004B CD 00 00           1173 	call	_printf
   004E E8 02              1174 	lda	sp,2(sp)
                           1175 ;	game.c 130
                           1176 ;	genLabel
   0050                    1177 00105$:
                           1178 ;	genGoto
   0050 C3 50 00           1179 	jp	00105$
                           1180 ;	genLabel
   0053                    1181 00107$:
                           1182 ;	genEndFunction
                           1183 	
   0053 C9                 1184 	ret
   0054                    1185 ___main_end:
   0054                    1186 __str_0:
   0054 54 68 65 20 65 6E  1187 	.ascii "The end"
        64
   005B 0A                 1188 	.db 0x0A
   005C 00                 1189 	.db 0x00
                           1190 ;	game.c 135
                           1191 ;	genLabel
                           1192 ;	genFunction
                           1193 ;	---------------------------------
                           1194 ; Function init
                           1195 ; ---------------------------------
   005D                    1196 ___init_start:
   005D                    1197 _init:
   005D E8 FD              1198 	lda	sp,-3(sp)
                           1199 ;	game.c 136
                           1200 ;	genAssign
                           1201 ;	AOP_HL for _current_map
   005F 21 04 19           1202 	ld	hl,#_current_map
   0062 36 C8              1203 	ld	(hl),#0xC8
                           1204 ;	game.c 137
                           1205 ;	genAssign
                           1206 ;	AOP_HL for _characters_available
   0064 21 02 19           1207 	ld	hl,#_characters_available
   0067 36 02              1208 	ld	(hl),#0x02
                           1209 ;	game.c 139
                           1210 ;	genCall
                           1211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1212 	call	_copy_map
                           1213 ;	game.c 140
                           1214 ;	genIpush
                           1215 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1216 	ld	hl,#_sprites_park
   006F E5                 1217 	push	hl
                           1218 ;	genIpush
   0070 21 00 78           1219 	ld	hl,#0x7800
   0073 E5                 1220 	push	hl
                           1221 ;	genCall
   0074 CD 00 00           1222 	call	_set_bkg_data
   0077 E8 04              1223 	lda	sp,4(sp)
                           1224 ;	game.c 141
                           1225 ;	genIpush
                           1226 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1227 	ld	hl,#_map
   007C E5                 1228 	push	hl
                           1229 ;	genIpush
   007D 21 14 12           1230 	ld	hl,#0x1214
   0080 E5                 1231 	push	hl
                           1232 ;	genIpush
   0081 21 00 00           1233 	ld	hl,#0x0000
   0084 E5                 1234 	push	hl
                           1235 ;	genCall
   0085 CD 00 00           1236 	call	_set_bkg_tiles
   0088 E8 06              1237 	lda	sp,6(sp)
                           1238 ;	game.c 143
                           1239 ;	genIpush
                           1240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1241 	ld	hl,#_Characters
   008D E5                 1242 	push	hl
                           1243 ;	genIpush
   008E 21 00 1E           1244 	ld	hl,#0x1E00
   0091 E5                 1245 	push	hl
                           1246 ;	genCall
   0092 CD 00 00           1247 	call	_set_sprite_data
   0095 E8 04              1248 	lda	sp,4(sp)
                           1249 ;	game.c 144
                           1250 ;	genIpush
                           1251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1252 	ld	hl,#_spritePalette
   009A E5                 1253 	push	hl
                           1254 ;	genIpush
   009B 21 00 04           1255 	ld	hl,#0x0400
   009E E5                 1256 	push	hl
                           1257 ;	genCall
   009F CD 00 00           1258 	call	_set_sprite_palette
   00A2 E8 04              1259 	lda	sp,4(sp)
                           1260 ;	game.c 148
                           1261 ;	genIpush
                           1262 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1263 	ld	hl,#_spritePalette
   00A7 E5                 1264 	push	hl
                           1265 ;	genIpush
   00A8 21 00 03           1266 	ld	hl,#0x0300
   00AB E5                 1267 	push	hl
                           1268 ;	genCall
   00AC CD 00 00           1269 	call	_set_bkg_palette
   00AF E8 04              1270 	lda	sp,4(sp)
                           1271 ;	game.c 149
                           1272 ;	genIpush
                           1273 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1274 	ld	hl,#0x0000
   00B4 E5                 1275 	push	hl
                           1276 ;	genCall
   00B5 CD 00 00           1277 	call	_set_sprite_prop
   00B8 E8 02              1278 	lda	sp,2(sp)
                           1279 ;	game.c 154
                           1280 ;	genAssign
   00BA 01 47 FF           1281 	ld	bc,#0xFF47
                           1282 ;	genAssign (pointer)
   00BD 3E E4              1283 	ld	a,#0xE4
   00BF 02                 1284 	ld	(bc),a
                           1285 ;	game.c 156
                           1286 ;	genAssign
   00C0 01 40 FF           1287 	ld	bc,#0xFF40
                           1288 ;	genAssign
                           1289 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1290 	lda	hl,1(sp)
   00C5 36 40              1291 	ld	(hl),#0x40
   00C7 23                 1292 	inc	hl
   00C8 36 FF              1293 	ld	(hl),#0xFF
                           1294 ;	genPointerGet
                           1295 ;	AOP_STK for _init_sloc0_1_0
                           1296 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1297 	dec	hl
   00CB 5E                 1298 	ld	e,(hl)
   00CC 23                 1299 	inc	hl
   00CD 56                 1300 	ld	d,(hl)
   00CE 1A                 1301 	ld	a,(de)
   00CF 2B                 1302 	dec	hl
   00D0 2B                 1303 	dec	hl
                           1304 ;	genOr
                           1305 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1306 	ld      (hl),a
   00D2 7F                 1307 	ld      a,a
   00D3 F6 80              1308 	or	a,#0x80
                           1309 ;	genAssign (pointer)
   00D5 02                 1310 	ld	(bc),a
                           1311 ;	game.c 158
                           1312 ;	genAssign
   00D6 01 40 FF           1313 	ld	bc,#0xFF40
                           1314 ;	genAssign
                           1315 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1316 	inc	hl
   00DA 36 40              1317 	ld	(hl),#0x40
   00DC 23                 1318 	inc	hl
   00DD 36 FF              1319 	ld	(hl),#0xFF
                           1320 ;	genPointerGet
                           1321 ;	AOP_STK for _init_sloc0_1_0
                           1322 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1323 	dec	hl
   00E0 5E                 1324 	ld	e,(hl)
   00E1 23                 1325 	inc	hl
   00E2 56                 1326 	ld	d,(hl)
   00E3 1A                 1327 	ld	a,(de)
   00E4 2B                 1328 	dec	hl
   00E5 2B                 1329 	dec	hl
                           1330 ;	genOr
                           1331 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1332 	ld      (hl),a
   00E7 7F                 1333 	ld      a,a
   00E8 F6 01              1334 	or	a,#0x01
                           1335 ;	genAssign (pointer)
   00EA 02                 1336 	ld	(bc),a
                           1337 ;	game.c 160
                           1338 ;	genAssign
   00EB 01 40 FF           1339 	ld	bc,#0xFF40
                           1340 ;	genAssign
                           1341 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1342 	inc	hl
   00EF 36 40              1343 	ld	(hl),#0x40
   00F1 23                 1344 	inc	hl
   00F2 36 FF              1345 	ld	(hl),#0xFF
                           1346 ;	genPointerGet
                           1347 ;	AOP_STK for _init_sloc0_1_0
                           1348 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1349 	dec	hl
   00F5 5E                 1350 	ld	e,(hl)
   00F6 23                 1351 	inc	hl
   00F7 56                 1352 	ld	d,(hl)
   00F8 1A                 1353 	ld	a,(de)
   00F9 2B                 1354 	dec	hl
   00FA 2B                 1355 	dec	hl
                           1356 ;	genOr
                           1357 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1358 	ld      (hl),a
   00FC 7F                 1359 	ld      a,a
   00FD F6 02              1360 	or	a,#0x02
                           1361 ;	genAssign (pointer)
   00FF 02                 1362 	ld	(bc),a
                           1363 ;	game.c 162
                           1364 ;	genAssign
                           1365 ;	AOP_HL for _input_timer
   0100 21 03 19           1366 	ld	hl,#_input_timer
   0103 36 00              1367 	ld	(hl),#0x00
                           1368 ;	game.c 163
                           1369 ;	genAssign
                           1370 ;	AOP_HL for _running
   0105 21 00 19           1371 	ld	hl,#_running
   0108 36 01              1372 	ld	(hl),#0x01
                           1373 ;	game.c 164
                           1374 ;	genAssign
                           1375 ;	AOP_HL for _timer
   010A 21 01 19           1376 	ld	hl,#_timer
   010D 36 01              1377 	ld	(hl),#0x01
                           1378 ;	game.c 165
                           1379 ;	genAddrOf
                           1380 ;	AOP_HL for _player
   010F 11 6D 1A           1381 	ld	de,#_bunny
   0112 21 B3 1A           1382 	ld	hl,#_player
   0115 73                 1383 	ld	(hl),e
   0116 23                 1384 	inc	hl
   0117 72                 1385 	ld	(hl),d
                           1386 ;	genLabel
   0118                    1387 00101$:
                           1388 ;	genEndFunction
   0118 E8 03              1389 	lda	sp,3(sp)
   011A C9                 1390 	ret
   011B                    1391 ___init_end:
                           1392 ;	game.c 169
                           1393 ;	genLabel
                           1394 ;	genFunction
                           1395 ;	---------------------------------
                           1396 ; Function map_water
                           1397 ; ---------------------------------
   011B                    1398 ___map_water_start:
   011B                    1399 _map_water:
   011B E8 DC              1400 	lda	sp,-36(sp)
                           1401 ;	game.c 170
                           1402 ;	genAddrOf
   011D F8 14              1403 	lda	hl,20(sp)
   011F 4D                 1404 	ld	c,l
   0120 44                 1405 	ld	b,h
                           1406 ;	genAssign
                           1407 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1408 	lda	hl,2(sp)
   0123 71                 1409 	ld	(hl),c
   0124 23                 1410 	inc	hl
   0125 70                 1411 	ld	(hl),b
                           1412 ;	genArrayInit
                           1413 ;	AOP_STK for _map_water_sloc0_1_0
                           1414 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1415 	push	bc
   0127 2B                 1416 	dec	hl
   0128 2A                 1417 	ld	a,(hl+)
   0129 66                 1418 	ld	h,(hl)
   012A 6F                 1419 	ld	l,a
   012B CD 00 00           1420 	call	__initrleblock
   012E 10                 1421 	.db	16
   012F FF 00 DD 00 AA 00  1422 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1423 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1424 	.db	0
   0140 C1                 1425 	pop	bc
                           1426 ;	game.c 176
                           1427 ;	genAddrOf
                           1428 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1429 	lda	hl,4(sp)
   0143 7D                 1430 	ld	a,l
   0144 54                 1431 	ld	d,h
   0145 F8 02              1432 	lda	hl,2(sp)
   0147 22                 1433 	ld	(hl+),a
   0148 72                 1434 	ld	(hl),d
                           1435 ;	genAssign
                           1436 ;	AOP_STK for _map_water_sloc0_1_0
                           1437 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1438 	dec	hl
   014A 2A                 1439 	ld	a,(hl+)
   014B 5E                 1440 	ld	e,(hl)
   014C F8 00              1441 	lda	hl,0(sp)
   014E 22                 1442 	ld	(hl+),a
   014F 73                 1443 	ld	(hl),e
                           1444 ;	genArrayInit
                           1445 ;	AOP_STK for _map_water_sloc1_1_0
                           1446 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1447 	push	bc
   0151 2B                 1448 	dec	hl
   0152 2A                 1449 	ld	a,(hl+)
   0153 66                 1450 	ld	h,(hl)
   0154 6F                 1451 	ld	l,a
   0155 CD 00 00           1452 	call	__initrleblock
   0158 10                 1453 	.db	16
   0159 FF 00 BB 00 55 00  1454 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1455 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1456 	.db	0
   016A C1                 1457 	pop	bc
                           1458 ;	game.c 182
                           1459 ;	genIpush
                           1460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1461 	push	bc
   016C 3E 20              1462 	ld	a,#0x20
   016E F5                 1463 	push	af
   016F 33                 1464 	inc	sp
                           1465 ;	genIpush
                           1466 ;	AOP_HL for _timer
   0170 21 01 19           1467 	ld	hl,#_timer
   0173 7E                 1468 	ld	a,(hl)
   0174 F5                 1469 	push	af
   0175 33                 1470 	inc	sp
                           1471 ;	genCall
   0176 CD 00 00           1472 	call	__moduchar_rrx_s
                           1473 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1474 	lda	hl,4(sp)
   017B 73                 1475 	ld	(hl),e
   017C E8 02              1476 	lda	sp,2(sp)
   017E C1                 1477 	pop	bc
                           1478 ;	genCmpEq
                           1479 ;	AOP_STK for _map_water_sloc1_1_0
                           1480 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1481 	lda	hl,0(sp)
   0181 7E                 1482 	ld	a,(hl)
   0182 B7                 1483 	or	a,a
   0183 C2 C7 01           1484 	jp	nz,00106$
   0186 18 03              1485 	jr	00111$
   0188                    1486 00110$:
   0188 C3 C7 01           1487 	jp	00106$
   018B                    1488 00111$:
                           1489 ;	game.c 183
                           1490 ;	genIpush
                           1491 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1492 	push	bc
   018C 3E 40              1493 	ld	a,#0x40
   018E F5                 1494 	push	af
   018F 33                 1495 	inc	sp
                           1496 ;	genIpush
                           1497 ;	AOP_HL for _timer
   0190 21 01 19           1498 	ld	hl,#_timer
   0193 7E                 1499 	ld	a,(hl)
   0194 F5                 1500 	push	af
   0195 33                 1501 	inc	sp
                           1502 ;	genCall
   0196 CD 00 00           1503 	call	__moduchar_rrx_s
                           1504 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1505 	lda	hl,4(sp)
   019B 73                 1506 	ld	(hl),e
   019C E8 02              1507 	lda	sp,2(sp)
   019E C1                 1508 	pop	bc
                           1509 ;	genCmpEq
                           1510 ;	AOP_STK for _map_water_sloc1_1_0
                           1511 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1512 	lda	hl,0(sp)
   01A1 7E                 1513 	ld	a,(hl)
   01A2 B7                 1514 	or	a,a
   01A3 C2 B8 01           1515 	jp	nz,00102$
   01A6 18 03              1516 	jr	00113$
   01A8                    1517 00112$:
   01A8 C3 B8 01           1518 	jp	00102$
   01AB                    1519 00113$:
                           1520 ;	game.c 184
                           1521 ;	genIpush
                           1522 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1523 	push	bc
                           1524 ;	genIpush
   01AC 21 0B 01           1525 	ld	hl,#0x010B
   01AF E5                 1526 	push	hl
                           1527 ;	genCall
   01B0 CD 00 00           1528 	call	_set_bkg_data
   01B3 E8 04              1529 	lda	sp,4(sp)
                           1530 ;	genGoto
   01B5 C3 C7 01           1531 	jp	00106$
                           1532 ;	genLabel
   01B8                    1533 00102$:
                           1534 ;	game.c 188
                           1535 ;	genIpush
                           1536 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1537 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1538 	lda	hl,2(sp)
   01BA 2A                 1539 	ld	a,(hl+)
   01BB 66                 1540 	ld	h,(hl)
   01BC 6F                 1541 	ld	l,a
   01BD E5                 1542 	push	hl
                           1543 ;	genIpush
   01BE 21 0B 01           1544 	ld	hl,#0x010B
   01C1 E5                 1545 	push	hl
                           1546 ;	genCall
   01C2 CD 00 00           1547 	call	_set_bkg_data
   01C5 E8 04              1548 	lda	sp,4(sp)
                           1549 ;	genLabel
   01C7                    1550 00106$:
                           1551 ;	genEndFunction
   01C7 E8 24              1552 	lda	sp,36(sp)
   01C9 C9                 1553 	ret
   01CA                    1554 ___map_water_end:
                           1555 ;	game.c 233
                           1556 ;	genLabel
                           1557 ;	genFunction
                           1558 ;	---------------------------------
                           1559 ; Function change_char
                           1560 ; ---------------------------------
   01CA                    1561 ___change_char_start:
   01CA                    1562 _change_char:
                           1563 	
                           1564 ;	game.c 235
                           1565 ;	genCmpEq
                           1566 ;	AOP_HL for _characters_available
                           1567 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1568 	ld	hl,#_characters_available
   01CD 7E                 1569 	ld	a,(hl)
   01CE FE 01              1570 	cp	a,#0x01
   01D0 C2 DE 01           1571 	jp	nz,00102$
   01D3 18 03              1572 	jr	00135$
   01D5                    1573 00134$:
   01D5 C3 DE 01           1574 	jp	00102$
   01D8                    1575 00135$:
                           1576 ;	game.c 236
                           1577 ;	genRet
   01D8 11 00 00           1578 	ld	de,#0x0000
   01DB C3 EE 02           1579 	jp	00121$
                           1580 ;	genLabel
   01DE                    1581 00102$:
                           1582 ;	game.c 239
                           1583 ;	genAssign
                           1584 ;	AOP_HL for _player
   01DE 21 B3 1A           1585 	ld	hl,#_player
   01E1 4E                 1586 	ld	c,(hl)
   01E2 23                 1587 	inc	hl
   01E3 46                 1588 	ld	b,(hl)
                           1589 ;	genPlus
                           1590 ;	genPlusIncr
   01E4 21 08 00           1591 	ld	hl,#0x0008
   01E7 09                 1592 	add	hl,bc
                           1593 ;	genAssign (pointer)
   01E8 36 00              1594 	ld	(hl),#0x00
                           1595 ;	game.c 241
                           1596 ;	genCmpEq
                           1597 ;	AOP_HL for _characters_available
                           1598 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1599 	ld	hl,#_characters_available
   01ED 7E                 1600 	ld	a,(hl)
   01EE FE 02              1601 	cp	a,#0x02
   01F0 C2 2B 02           1602 	jp	nz,00107$
   01F3 18 03              1603 	jr	00137$
   01F5                    1604 00136$:
   01F5 C3 2B 02           1605 	jp	00107$
   01F8                    1606 00137$:
                           1607 ;	game.c 242
                           1608 ;	genAssign
                           1609 ;	AOP_HL for _player
   01F8 21 B3 1A           1610 	ld	hl,#_player
   01FB 4E                 1611 	ld	c,(hl)
   01FC 23                 1612 	inc	hl
   01FD 46                 1613 	ld	b,(hl)
                           1614 ;	genPlus
                           1615 ;	genPlusIncr
                           1616 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1617 	ld	a,c
   01FF C6 0B              1618 	add	a,#0x0B
   0201 4F                 1619 	ld	c,a
   0202 78                 1620 	ld	a,b
   0203 CE 00              1621 	adc	a,#0x00
   0205 47                 1622 	ld	b,a
                           1623 ;	genPointerGet
   0206 0A                 1624 	ld	a,(bc)
                           1625 ;	genCmpEq
                           1626 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1627 	ld	c,a
   0208 FE 01              1628 	cp	a,#0x01
   020A CA 16 02           1629 	jp	z,00103$
   020D                    1630 00138$:
                           1631 ;	genCmpEq
                           1632 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1633 	ld	a,c
   020E FE 02              1634 	cp	a,#0x02
   0210 CA 22 02           1635 	jp	z,00104$
   0213                    1636 00139$:
                           1637 ;	genGoto
   0213 C3 2B 02           1638 	jp	00107$
                           1639 ;	game.c 244
                           1640 ;	genLabel
   0216                    1641 00103$:
                           1642 ;	genAddrOf
                           1643 ;	AOP_HL for _player
   0216 11 7B 1A           1644 	ld	de,#_dog1
   0219 21 B3 1A           1645 	ld	hl,#_player
   021C 73                 1646 	ld	(hl),e
   021D 23                 1647 	inc	hl
   021E 72                 1648 	ld	(hl),d
                           1649 ;	game.c 245
                           1650 ;	genGoto
   021F C3 2B 02           1651 	jp	00107$
                           1652 ;	game.c 247
                           1653 ;	genLabel
   0222                    1654 00104$:
                           1655 ;	genAddrOf
                           1656 ;	AOP_HL for _player
   0222 11 6D 1A           1657 	ld	de,#_bunny
   0225 21 B3 1A           1658 	ld	hl,#_player
   0228 73                 1659 	ld	(hl),e
   0229 23                 1660 	inc	hl
   022A 72                 1661 	ld	(hl),d
                           1662 ;	game.c 249
                           1663 ;	genLabel
   022B                    1664 00107$:
                           1665 ;	game.c 251
                           1666 ;	genCmpEq
                           1667 ;	AOP_HL for _characters_available
                           1668 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1669 	ld	hl,#_characters_available
   022E 7E                 1670 	ld	a,(hl)
   022F FE 03              1671 	cp	a,#0x03
   0231 C2 7E 02           1672 	jp	nz,00113$
   0234 18 03              1673 	jr	00141$
   0236                    1674 00140$:
   0236 C3 7E 02           1675 	jp	00113$
   0239                    1676 00141$:
                           1677 ;	game.c 252
                           1678 ;	genAssign
                           1679 ;	AOP_HL for _player
   0239 21 B3 1A           1680 	ld	hl,#_player
   023C 4E                 1681 	ld	c,(hl)
   023D 23                 1682 	inc	hl
   023E 46                 1683 	ld	b,(hl)
                           1684 ;	genPlus
                           1685 ;	genPlusIncr
                           1686 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1687 	ld	a,c
   0240 C6 0B              1688 	add	a,#0x0B
   0242 4F                 1689 	ld	c,a
   0243 78                 1690 	ld	a,b
   0244 CE 00              1691 	adc	a,#0x00
   0246 47                 1692 	ld	b,a
                           1693 ;	genPointerGet
   0247 0A                 1694 	ld	a,(bc)
                           1695 ;	genCmpEq
                           1696 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1697 	ld	c,a
   0249 FE 01              1698 	cp	a,#0x01
   024B CA 5D 02           1699 	jp	z,00108$
   024E                    1700 00142$:
                           1701 ;	genCmpEq
                           1702 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1703 	ld	a,c
   024F FE 02              1704 	cp	a,#0x02
   0251 CA 69 02           1705 	jp	z,00109$
   0254                    1706 00143$:
                           1707 ;	genCmpEq
                           1708 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1709 	ld	a,c
   0255 FE 03              1710 	cp	a,#0x03
   0257 CA 75 02           1711 	jp	z,00110$
   025A                    1712 00144$:
                           1713 ;	genGoto
   025A C3 7E 02           1714 	jp	00113$
                           1715 ;	game.c 254
                           1716 ;	genLabel
   025D                    1717 00108$:
                           1718 ;	genAddrOf
                           1719 ;	AOP_HL for _player
   025D 11 7B 1A           1720 	ld	de,#_dog1
   0260 21 B3 1A           1721 	ld	hl,#_player
   0263 73                 1722 	ld	(hl),e
   0264 23                 1723 	inc	hl
   0265 72                 1724 	ld	(hl),d
                           1725 ;	game.c 255
                           1726 ;	genGoto
   0266 C3 7E 02           1727 	jp	00113$
                           1728 ;	game.c 257
                           1729 ;	genLabel
   0269                    1730 00109$:
                           1731 ;	genAddrOf
                           1732 ;	AOP_HL for _player
   0269 11 89 1A           1733 	ld	de,#_dog2
   026C 21 B3 1A           1734 	ld	hl,#_player
   026F 73                 1735 	ld	(hl),e
   0270 23                 1736 	inc	hl
   0271 72                 1737 	ld	(hl),d
                           1738 ;	game.c 258
                           1739 ;	genGoto
   0272 C3 7E 02           1740 	jp	00113$
                           1741 ;	game.c 260
                           1742 ;	genLabel
   0275                    1743 00110$:
                           1744 ;	genAddrOf
                           1745 ;	AOP_HL for _player
   0275 11 6D 1A           1746 	ld	de,#_bunny
   0278 21 B3 1A           1747 	ld	hl,#_player
   027B 73                 1748 	ld	(hl),e
   027C 23                 1749 	inc	hl
   027D 72                 1750 	ld	(hl),d
                           1751 ;	game.c 262
                           1752 ;	genLabel
   027E                    1753 00113$:
                           1754 ;	game.c 264
                           1755 ;	genCmpEq
                           1756 ;	AOP_HL for _characters_available
                           1757 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1758 	ld	hl,#_characters_available
   0281 7E                 1759 	ld	a,(hl)
   0282 FE 04              1760 	cp	a,#0x04
   0284 C2 EB 02           1761 	jp	nz,00120$
   0287 18 03              1762 	jr	00146$
   0289                    1763 00145$:
   0289 C3 EB 02           1764 	jp	00120$
   028C                    1765 00146$:
                           1766 ;	game.c 265
                           1767 ;	genAssign
                           1768 ;	AOP_HL for _player
   028C 21 B3 1A           1769 	ld	hl,#_player
   028F 4E                 1770 	ld	c,(hl)
   0290 23                 1771 	inc	hl
   0291 46                 1772 	ld	b,(hl)
                           1773 ;	genPlus
                           1774 ;	genPlusIncr
                           1775 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1776 	ld	a,c
   0293 C6 0B              1777 	add	a,#0x0B
   0295 4F                 1778 	ld	c,a
   0296 78                 1779 	ld	a,b
   0297 CE 00              1780 	adc	a,#0x00
   0299 47                 1781 	ld	b,a
                           1782 ;	genPointerGet
   029A 0A                 1783 	ld	a,(bc)
                           1784 ;	genCmpLt
   029B 4F                 1785 	ld	c,a
   029C FE 01              1786 	cp	#0x01
   029E DA EB 02           1787 	jp	c,00120$
                           1788 ;	genCmpGt
   02A1 3E 04              1789 	ld	a,#0x04
   02A3 91                 1790 	sub	a,c
   02A4 DA EB 02           1791 	jp	c,00120$
                           1792 ;	genMinus
   02A7 0D                 1793 	dec	c
                           1794 ;	genJumpTab
   02A8 59                 1795 	ld	e,c
   02A9 16 00              1796 	ld	d,#0x00
   02AB 21 B2 02           1797 	ld	hl,#00147$
   02AE 19                 1798 	add	hl,de
   02AF 19                 1799 	add	hl,de
   02B0 19                 1800 	add	hl,de
   02B1 E9                 1801 	jp	(hl)
   02B2                    1802 00147$:
   02B2 C3 BE 02           1803 	jp	00114$
   02B5 C3 CA 02           1804 	jp	00115$
   02B8 C3 D6 02           1805 	jp	00116$
   02BB C3 E2 02           1806 	jp	00117$
                           1807 ;	game.c 267
                           1808 ;	genLabel
   02BE                    1809 00114$:
                           1810 ;	genAddrOf
                           1811 ;	AOP_HL for _player
   02BE 11 7B 1A           1812 	ld	de,#_dog1
   02C1 21 B3 1A           1813 	ld	hl,#_player
   02C4 73                 1814 	ld	(hl),e
   02C5 23                 1815 	inc	hl
   02C6 72                 1816 	ld	(hl),d
                           1817 ;	game.c 268
                           1818 ;	genGoto
   02C7 C3 EB 02           1819 	jp	00120$
                           1820 ;	game.c 270
                           1821 ;	genLabel
   02CA                    1822 00115$:
                           1823 ;	genAddrOf
                           1824 ;	AOP_HL for _player
   02CA 11 89 1A           1825 	ld	de,#_dog2
   02CD 21 B3 1A           1826 	ld	hl,#_player
   02D0 73                 1827 	ld	(hl),e
   02D1 23                 1828 	inc	hl
   02D2 72                 1829 	ld	(hl),d
                           1830 ;	game.c 271
                           1831 ;	genGoto
   02D3 C3 EB 02           1832 	jp	00120$
                           1833 ;	game.c 273
                           1834 ;	genLabel
   02D6                    1835 00116$:
                           1836 ;	genAddrOf
                           1837 ;	AOP_HL for _player
   02D6 11 97 1A           1838 	ld	de,#_cat
   02D9 21 B3 1A           1839 	ld	hl,#_player
   02DC 73                 1840 	ld	(hl),e
   02DD 23                 1841 	inc	hl
   02DE 72                 1842 	ld	(hl),d
                           1843 ;	game.c 274
                           1844 ;	genGoto
   02DF C3 EB 02           1845 	jp	00120$
                           1846 ;	game.c 276
                           1847 ;	genLabel
   02E2                    1848 00117$:
                           1849 ;	genAddrOf
                           1850 ;	AOP_HL for _player
   02E2 11 6D 1A           1851 	ld	de,#_bunny
   02E5 21 B3 1A           1852 	ld	hl,#_player
   02E8 73                 1853 	ld	(hl),e
   02E9 23                 1854 	inc	hl
   02EA 72                 1855 	ld	(hl),d
                           1856 ;	game.c 278
                           1857 ;	genLabel
   02EB                    1858 00120$:
                           1859 ;	game.c 283
                           1860 ;	genCall
                           1861 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD 14 11           1862 	call	_rotate_player
                           1863 ;	genLabel
   02EE                    1864 00121$:
                           1865 ;	genEndFunction
                           1866 	
   02EE C9                 1867 	ret
   02EF                    1868 ___change_char_end:
                           1869 ;	game.c 287
                           1870 ;	genLabel
                           1871 ;	genFunction
                           1872 ;	---------------------------------
                           1873 ; Function map_loop
                           1874 ; ---------------------------------
   02EF                    1875 ___map_loop_start:
   02EF                    1876 _map_loop:
                           1877 	
                           1878 ;	game.c 289
                           1879 ;	genIpush
                           1880 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 B3 1A           1881 	ld	hl,#_player
   02F2 E5                 1882 	push	hl
                           1883 ;	genCall
   02F3 CD CC 07           1884 	call	_is_ded
   02F6 42                 1885 	ld	b,d
   02F7 4B                 1886 	ld	c,e
   02F8 E8 02              1887 	lda	sp,2(sp)
                           1888 ;	genIfx
   02FA 79                 1889 	ld	a,c
   02FB B0                 1890 	or	a,b
   02FC CA 02 03           1891 	jp	z,00102$
                           1892 ;	game.c 290
                           1893 ;	genCall
                           1894 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1895 	call	_map_init
                           1896 ;	genLabel
   0302                    1897 00102$:
                           1898 ;	game.c 292
                           1899 ;	genIpush
                           1900 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 B3 1A           1901 	ld	hl,#_player
   0305 E5                 1902 	push	hl
                           1903 ;	genCall
   0306 CD E2 05           1904 	call	_got_door
   0309 E8 02              1905 	lda	sp,2(sp)
                           1906 ;	game.c 294
                           1907 ;	genIpush
                           1908 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 B3 1A           1909 	ld	hl,#_player
   030E E5                 1910 	push	hl
                           1911 ;	genCall
   030F CD 35 05           1912 	call	_got_key
   0312 E8 02              1913 	lda	sp,2(sp)
                           1914 ;	game.c 295
                           1915 ;	genCall
                           1916 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1917 	call	_map_water
                           1918 ;	game.c 298
                           1919 ;	genIpush
                           1920 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 B3 1A           1921 	ld	hl,#_player
   031A E5                 1922 	push	hl
                           1923 ;	genCall
   031B CD 27 0E           1924 	call	_player_input
   031E E8 02              1925 	lda	sp,2(sp)
                           1926 ;	game.c 301
                           1927 ;	genIpush
                           1928 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1929 	ld	hl,#_bunny
   0323 E5                 1930 	push	hl
                           1931 ;	genCall
   0324 CD BA 12           1932 	call	_move_character
   0327 E8 02              1933 	lda	sp,2(sp)
                           1934 ;	game.c 302
                           1935 ;	genIpush
                           1936 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7B 1A           1937 	ld	hl,#_dog1
   032C E5                 1938 	push	hl
                           1939 ;	genCall
   032D CD BA 12           1940 	call	_move_character
   0330 E8 02              1941 	lda	sp,2(sp)
                           1942 ;	game.c 303
                           1943 ;	genIpush
                           1944 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 89 1A           1945 	ld	hl,#_dog2
   0335 E5                 1946 	push	hl
                           1947 ;	genCall
   0336 CD BA 12           1948 	call	_move_character
   0339 E8 02              1949 	lda	sp,2(sp)
                           1950 ;	game.c 304
                           1951 ;	genIpush
                           1952 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 97 1A           1953 	ld	hl,#_cat
   033E E5                 1954 	push	hl
                           1955 ;	genCall
   033F CD BA 12           1956 	call	_move_character
   0342 E8 02              1957 	lda	sp,2(sp)
                           1958 ;	genLabel
   0344                    1959 00103$:
                           1960 ;	genEndFunction
                           1961 	
   0344 C9                 1962 	ret
   0345                    1963 ___map_loop_end:
                           1964 ;	game.c 309
                           1965 ;	genLabel
                           1966 ;	genFunction
                           1967 ;	---------------------------------
                           1968 ; Function helper_copy_map
                           1969 ; ---------------------------------
   0345                    1970 ___helper_copy_map_start:
   0345                    1971 _helper_copy_map:
   0345 E8 FC              1972 	lda	sp,-4(sp)
                           1973 ;	game.c 311
                           1974 ;	genAssign
   0347 01 00 00           1975 	ld	bc,#0x0000
                           1976 ;	genLabel
   034A                    1977 00101$:
                           1978 ;	genCmpLt
   034A 79                 1979 	ld	a,c
   034B D6 68              1980 	sub	a,#0x68
   034D 78                 1981 	ld	a,b
   034E DE 01              1982 	sbc	a,#0x01
   0350 D2 74 03           1983 	jp	nc,00105$
                           1984 ;	game.c 312
                           1985 ;	genPlus
                           1986 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1987 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1988 	ld	hl,#_map
   0356 09                 1989 	add	hl,bc
   0357 7D                 1990 	ld	a,l
   0358 54                 1991 	ld	d,h
   0359 F8 02              1992 	lda	hl,2(sp)
   035B 22                 1993 	ld	(hl+),a
   035C 72                 1994 	ld	(hl),d
                           1995 ;	genPlus
                           1996 ;	AOP_STK for 
                           1997 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           1998 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              1999 	lda	hl,6(sp)
   035F 2A                 2000 	ld	a,(hl+)
   0360 66                 2001 	ld	h,(hl)
   0361 6F                 2002 	ld	l,a
   0362 09                 2003 	add	hl,bc
   0363 7D                 2004 	ld	a,l
   0364 54                 2005 	ld	d,h
   0365 F8 00              2006 	lda	hl,0(sp)
                           2007 ;	genPointerGet
                           2008 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2009 	ld	(hl+),a
   0368 72                 2010 	ld	(hl),d
   0369 5F                 2011 	ld	e,a
   036A 1A                 2012 	ld	a,(de)
                           2013 ;	genAssign (pointer)
                           2014 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2015 	inc	hl
   036C 5E                 2016 	ld	e,(hl)
   036D 23                 2017 	inc	hl
   036E 56                 2018 	ld	d,(hl)
   036F 12                 2019 	ld	(de),a
                           2020 ;	game.c 311
                           2021 ;	genPlus
                           2022 ;	genPlusIncr
   0370 03                 2023 	inc	bc
                           2024 ;	genGoto
   0371 C3 4A 03           2025 	jp	00101$
                           2026 ;	genLabel
   0374                    2027 00105$:
                           2028 ;	genEndFunction
   0374 E8 04              2029 	lda	sp,4(sp)
   0376 C9                 2030 	ret
   0377                    2031 ___helper_copy_map_end:
                           2032 ;	game.c 316
                           2033 ;	genLabel
                           2034 ;	genFunction
                           2035 ;	---------------------------------
                           2036 ; Function copy_map
                           2037 ; ---------------------------------
   0377                    2038 ___copy_map_start:
   0377                    2039 _copy_map:
                           2040 	
                           2041 ;	game.c 317
                           2042 ;	genCmpLt
                           2043 ;	AOP_HL for _current_map
   0377 21 04 19           2044 	ld	hl,#_current_map
   037A 7E                 2045 	ld	a,(hl)
   037B FE 01              2046 	cp	#0x01
   037D DA 2A 04           2047 	jp	c,00111$
                           2048 ;	genCmpGt
                           2049 ;	AOP_HL for _current_map
   0380 3E 0A              2050 	ld	a,#0x0A
   0382 96                 2051 	sub	a,(hl)
   0383 DA 2A 04           2052 	jp	c,00111$
                           2053 ;	genMinus
                           2054 ;	AOP_HL for _current_map
   0386 7E                 2055 	ld	a,(hl)
   0387 C6 FF              2056 	add	a,#0xFF
   0389 4F                 2057 	ld	c,a
                           2058 ;	genJumpTab
   038A 59                 2059 	ld	e,c
   038B 16 00              2060 	ld	d,#0x00
   038D 21 94 03           2061 	ld	hl,#00117$
   0390 19                 2062 	add	hl,de
   0391 19                 2063 	add	hl,de
   0392 19                 2064 	add	hl,de
   0393 E9                 2065 	jp	(hl)
   0394                    2066 00117$:
   0394 C3 B2 03           2067 	jp	00101$
   0397 C3 BE 03           2068 	jp	00102$
   039A C3 CA 03           2069 	jp	00103$
   039D C3 D6 03           2070 	jp	00104$
   03A0 C3 E2 03           2071 	jp	00105$
   03A3 C3 EE 03           2072 	jp	00106$
   03A6 C3 FA 03           2073 	jp	00107$
   03A9 C3 06 04           2074 	jp	00108$
   03AC C3 12 04           2075 	jp	00109$
   03AF C3 1E 04           2076 	jp	00110$
                           2077 ;	game.c 319
                           2078 ;	genLabel
   03B2                    2079 00101$:
                           2080 ;	genIpush
                           2081 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2082 	ld	hl,#_Map1
   03B5 E5                 2083 	push	hl
                           2084 ;	genCall
   03B6 CD 45 03           2085 	call	_helper_copy_map
   03B9 E8 02              2086 	lda	sp,2(sp)
                           2087 ;	game.c 320
                           2088 ;	genGoto
   03BB C3 33 04           2089 	jp	00113$
                           2090 ;	game.c 322
                           2091 ;	genLabel
   03BE                    2092 00102$:
                           2093 ;	genIpush
                           2094 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2095 	ld	hl,#_Map2
   03C1 E5                 2096 	push	hl
                           2097 ;	genCall
   03C2 CD 45 03           2098 	call	_helper_copy_map
   03C5 E8 02              2099 	lda	sp,2(sp)
                           2100 ;	game.c 323
                           2101 ;	genGoto
   03C7 C3 33 04           2102 	jp	00113$
                           2103 ;	game.c 325
                           2104 ;	genLabel
   03CA                    2105 00103$:
                           2106 ;	genIpush
                           2107 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2108 	ld	hl,#_Map3
   03CD E5                 2109 	push	hl
                           2110 ;	genCall
   03CE CD 45 03           2111 	call	_helper_copy_map
   03D1 E8 02              2112 	lda	sp,2(sp)
                           2113 ;	game.c 326
                           2114 ;	genGoto
   03D3 C3 33 04           2115 	jp	00113$
                           2116 ;	game.c 328
                           2117 ;	genLabel
   03D6                    2118 00104$:
                           2119 ;	genIpush
                           2120 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2121 	ld	hl,#_Map4
   03D9 E5                 2122 	push	hl
                           2123 ;	genCall
   03DA CD 45 03           2124 	call	_helper_copy_map
   03DD E8 02              2125 	lda	sp,2(sp)
                           2126 ;	game.c 329
                           2127 ;	genGoto
   03DF C3 33 04           2128 	jp	00113$
                           2129 ;	game.c 331
                           2130 ;	genLabel
   03E2                    2131 00105$:
                           2132 ;	genIpush
                           2133 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2134 	ld	hl,#_MapTest
   03E5 E5                 2135 	push	hl
                           2136 ;	genCall
   03E6 CD 45 03           2137 	call	_helper_copy_map
   03E9 E8 02              2138 	lda	sp,2(sp)
                           2139 ;	game.c 332
                           2140 ;	genGoto
   03EB C3 33 04           2141 	jp	00113$
                           2142 ;	game.c 334
                           2143 ;	genLabel
   03EE                    2144 00106$:
                           2145 ;	genIpush
                           2146 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2147 	ld	hl,#_MapTest
   03F1 E5                 2148 	push	hl
                           2149 ;	genCall
   03F2 CD 45 03           2150 	call	_helper_copy_map
   03F5 E8 02              2151 	lda	sp,2(sp)
                           2152 ;	game.c 335
                           2153 ;	genGoto
   03F7 C3 33 04           2154 	jp	00113$
                           2155 ;	game.c 337
                           2156 ;	genLabel
   03FA                    2157 00107$:
                           2158 ;	genIpush
                           2159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2160 	ld	hl,#_MapTest
   03FD E5                 2161 	push	hl
                           2162 ;	genCall
   03FE CD 45 03           2163 	call	_helper_copy_map
   0401 E8 02              2164 	lda	sp,2(sp)
                           2165 ;	game.c 338
                           2166 ;	genGoto
   0403 C3 33 04           2167 	jp	00113$
                           2168 ;	game.c 340
                           2169 ;	genLabel
   0406                    2170 00108$:
                           2171 ;	genIpush
                           2172 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2173 	ld	hl,#_MapTest
   0409 E5                 2174 	push	hl
                           2175 ;	genCall
   040A CD 45 03           2176 	call	_helper_copy_map
   040D E8 02              2177 	lda	sp,2(sp)
                           2178 ;	game.c 341
                           2179 ;	genGoto
   040F C3 33 04           2180 	jp	00113$
                           2181 ;	game.c 343
                           2182 ;	genLabel
   0412                    2183 00109$:
                           2184 ;	genIpush
                           2185 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2186 	ld	hl,#_MapTest
   0415 E5                 2187 	push	hl
                           2188 ;	genCall
   0416 CD 45 03           2189 	call	_helper_copy_map
   0419 E8 02              2190 	lda	sp,2(sp)
                           2191 ;	game.c 344
                           2192 ;	genGoto
   041B C3 33 04           2193 	jp	00113$
                           2194 ;	game.c 346
                           2195 ;	genLabel
   041E                    2196 00110$:
                           2197 ;	genIpush
                           2198 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2199 	ld	hl,#_MapTest
   0421 E5                 2200 	push	hl
                           2201 ;	genCall
   0422 CD 45 03           2202 	call	_helper_copy_map
   0425 E8 02              2203 	lda	sp,2(sp)
                           2204 ;	game.c 347
                           2205 ;	genGoto
   0427 C3 33 04           2206 	jp	00113$
                           2207 ;	game.c 349
                           2208 ;	genLabel
   042A                    2209 00111$:
                           2210 ;	genIpush
                           2211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2212 	ld	hl,#_MapTest
   042D E5                 2213 	push	hl
                           2214 ;	genCall
   042E CD 45 03           2215 	call	_helper_copy_map
   0431 E8 02              2216 	lda	sp,2(sp)
                           2217 ;	game.c 352
                           2218 ;	genLabel
   0433                    2219 00113$:
                           2220 ;	genEndFunction
                           2221 	
   0433 C9                 2222 	ret
   0434                    2223 ___copy_map_end:
                           2224 ;	game.c 356
                           2225 ;	genLabel
                           2226 ;	genFunction
                           2227 ;	---------------------------------
                           2228 ; Function map_init
                           2229 ; ---------------------------------
   0434                    2230 ___map_init_start:
   0434                    2231 _map_init:
                           2232 	
                           2233 ;	game.c 357
                           2234 ;	genCall
                           2235 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2236 	call	_copy_map
                           2237 ;	game.c 358
                           2238 ;	genIpush
                           2239 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2240 	ld	hl,#_map
   043A E5                 2241 	push	hl
                           2242 ;	genIpush
   043B 21 14 12           2243 	ld	hl,#0x1214
   043E E5                 2244 	push	hl
                           2245 ;	genIpush
   043F 21 00 00           2246 	ld	hl,#0x0000
   0442 E5                 2247 	push	hl
                           2248 ;	genCall
   0443 CD 00 00           2249 	call	_set_bkg_tiles
   0446 E8 06              2250 	lda	sp,6(sp)
                           2251 ;	game.c 359
                           2252 ;	genCall
                           2253 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2254 	call	_instanciate_chars
                           2255 ;	genLabel
   044B                    2256 00101$:
                           2257 ;	genEndFunction
                           2258 	
   044B C9                 2259 	ret
   044C                    2260 ___map_init_end:
                           2261 ;	game.c 374
                           2262 ;	genLabel
                           2263 ;	genFunction
                           2264 ;	---------------------------------
                           2265 ; Function instanciate_chars
                           2266 ; ---------------------------------
   044C                    2267 ___instanciate_chars_start:
   044C                    2268 _instanciate_chars:
                           2269 	
                           2270 ;	game.c 376
                           2271 ;	genAssign (pointer)
   044C 11 6D 1A           2272 	ld	de,#_bunny
   044F 3E 08              2273 	ld	a,#0x08
   0451 12                 2274 	ld	(de),a
                           2275 ;	game.c 377
                           2276 ;	genPlus
                           2277 ;	genPlusIncr
   0452 21 6E 1A           2278 	ld	hl,#_bunny + 1
                           2279 ;	genAssign (pointer)
   0455 36 10              2280 	ld	(hl),#0x10
                           2281 ;	game.c 378
                           2282 ;	genPlus
                           2283 ;	genPlusIncr
   0457 23                 2284 	inc	hl
                           2285 ;	genAssign (pointer)
   0458 36 00              2286 	ld	(hl),#0x00
                           2287 ;	game.c 379
                           2288 ;	genPlus
                           2289 ;	genPlusIncr
   045A 23                 2290 	inc	hl
                           2291 ;	genAssign (pointer)
   045B 36 01              2292 	ld	(hl),#0x01
                           2293 ;	game.c 380
                           2294 ;	genPlus
                           2295 ;	genPlusIncr
   045D 23                 2296 	inc	hl
                           2297 ;	genAssign (pointer)
   045E 36 02              2298 	ld	(hl),#0x02
                           2299 ;	game.c 381
                           2300 ;	genPlus
                           2301 ;	genPlusIncr
   0460 23                 2302 	inc	hl
                           2303 ;	genAssign (pointer)
   0461 36 10              2304 	ld	(hl),#0x10
                           2305 ;	game.c 382
                           2306 ;	genPlus
                           2307 ;	genPlusIncr
   0463 23                 2308 	inc	hl
                           2309 ;	genAssign (pointer)
   0464 36 11              2310 	ld	(hl),#0x11
                           2311 ;	game.c 383
                           2312 ;	genPlus
                           2313 ;	genPlusIncr
   0466 23                 2314 	inc	hl
                           2315 ;	genAssign (pointer)
   0467 36 12              2316 	ld	(hl),#0x12
                           2317 ;	game.c 384
                           2318 ;	genPlus
                           2319 ;	genPlusIncr
   0469 23                 2320 	inc	hl
                           2321 ;	genAssign (pointer)
   046A 36 00              2322 	ld	(hl),#0x00
                           2323 ;	game.c 385
                           2324 ;	genPlus
                           2325 ;	genPlusIncr
   046C 23                 2326 	inc	hl
                           2327 ;	genAssign (pointer)
   046D 36 00              2328 	ld	(hl),#0x00
                           2329 ;	game.c 386
                           2330 ;	genPlus
                           2331 ;	genPlusIncr
   046F 23                 2332 	inc	hl
   0470 23                 2333 	inc	hl
                           2334 ;	genAssign (pointer)
   0471 36 01              2335 	ld	(hl),#0x01
                           2336 ;	game.c 387
                           2337 ;	genPlus
                           2338 ;	genPlusIncr
   0473 23                 2339 	inc	hl
                           2340 ;	genAssign (pointer)
   0474 5D                 2341 	ld	e,l
   0475 54                 2342 	ld	d,h
   0476 3E 90              2343 	ld	a,#0x90
   0478 12                 2344 	ld	(de),a
   0479 13                 2345 	inc	de
   047A 3E 01              2346 	ld	a,#0x01
   047C 12                 2347 	ld	(de),a
                           2348 ;	game.c 389
                           2349 ;	genAssign (pointer)
   047D 11 7B 1A           2350 	ld	de,#_dog1
   0480 3E 10              2351 	ld	a,#0x10
   0482 12                 2352 	ld	(de),a
                           2353 ;	game.c 390
                           2354 ;	genPlus
                           2355 ;	genPlusIncr
   0483 21 7C 1A           2356 	ld	hl,#_dog1 + 1
                           2357 ;	genAssign (pointer)
   0486 36 10              2358 	ld	(hl),#0x10
                           2359 ;	game.c 391
                           2360 ;	genPlus
                           2361 ;	genPlusIncr
   0488 23                 2362 	inc	hl
                           2363 ;	genAssign (pointer)
   0489 36 03              2364 	ld	(hl),#0x03
                           2365 ;	game.c 392
                           2366 ;	genPlus
                           2367 ;	genPlusIncr
   048B 23                 2368 	inc	hl
                           2369 ;	genAssign (pointer)
   048C 36 04              2370 	ld	(hl),#0x04
                           2371 ;	game.c 393
                           2372 ;	genPlus
                           2373 ;	genPlusIncr
   048E 23                 2374 	inc	hl
                           2375 ;	genAssign (pointer)
   048F 36 05              2376 	ld	(hl),#0x05
                           2377 ;	game.c 394
                           2378 ;	genPlus
                           2379 ;	genPlusIncr
   0491 23                 2380 	inc	hl
                           2381 ;	genAssign (pointer)
   0492 36 13              2382 	ld	(hl),#0x13
                           2383 ;	game.c 395
                           2384 ;	genPlus
                           2385 ;	genPlusIncr
   0494 23                 2386 	inc	hl
                           2387 ;	genAssign (pointer)
   0495 36 14              2388 	ld	(hl),#0x14
                           2389 ;	game.c 396
                           2390 ;	genPlus
                           2391 ;	genPlusIncr
   0497 23                 2392 	inc	hl
                           2393 ;	genAssign (pointer)
   0498 36 15              2394 	ld	(hl),#0x15
                           2395 ;	game.c 397
                           2396 ;	genPlus
                           2397 ;	genPlusIncr
   049A 23                 2398 	inc	hl
                           2399 ;	genAssign (pointer)
   049B 36 00              2400 	ld	(hl),#0x00
                           2401 ;	game.c 398
                           2402 ;	genPlus
                           2403 ;	genPlusIncr
   049D 23                 2404 	inc	hl
                           2405 ;	genAssign (pointer)
   049E 36 00              2406 	ld	(hl),#0x00
                           2407 ;	game.c 399
                           2408 ;	genPlus
                           2409 ;	genPlusIncr
   04A0 23                 2410 	inc	hl
   04A1 23                 2411 	inc	hl
                           2412 ;	genAssign (pointer)
   04A2 36 02              2413 	ld	(hl),#0x02
                           2414 ;	game.c 400
                           2415 ;	genPlus
                           2416 ;	genPlusIncr
   04A4 23                 2417 	inc	hl
                           2418 ;	genAssign (pointer)
   04A5 5D                 2419 	ld	e,l
   04A6 54                 2420 	ld	d,h
   04A7 3E 90              2421 	ld	a,#0x90
   04A9 12                 2422 	ld	(de),a
   04AA 13                 2423 	inc	de
   04AB 3E 01              2424 	ld	a,#0x01
   04AD 12                 2425 	ld	(de),a
                           2426 ;	game.c 402
                           2427 ;	genAssign (pointer)
   04AE 11 89 1A           2428 	ld	de,#_dog2
   04B1 3E 08              2429 	ld	a,#0x08
   04B3 12                 2430 	ld	(de),a
                           2431 ;	game.c 403
                           2432 ;	genPlus
                           2433 ;	genPlusIncr
   04B4 21 8A 1A           2434 	ld	hl,#_dog2 + 1
                           2435 ;	genAssign (pointer)
   04B7 36 18              2436 	ld	(hl),#0x18
                           2437 ;	game.c 404
                           2438 ;	genPlus
                           2439 ;	genPlusIncr
   04B9 23                 2440 	inc	hl
                           2441 ;	genAssign (pointer)
   04BA 36 06              2442 	ld	(hl),#0x06
                           2443 ;	game.c 405
                           2444 ;	genPlus
                           2445 ;	genPlusIncr
   04BC 23                 2446 	inc	hl
                           2447 ;	genAssign (pointer)
   04BD 36 07              2448 	ld	(hl),#0x07
                           2449 ;	game.c 406
                           2450 ;	genPlus
                           2451 ;	genPlusIncr
   04BF 23                 2452 	inc	hl
                           2453 ;	genAssign (pointer)
   04C0 36 08              2454 	ld	(hl),#0x08
                           2455 ;	game.c 407
                           2456 ;	genPlus
                           2457 ;	genPlusIncr
   04C2 23                 2458 	inc	hl
                           2459 ;	genAssign (pointer)
   04C3 36 13              2460 	ld	(hl),#0x13
                           2461 ;	game.c 408
                           2462 ;	genPlus
                           2463 ;	genPlusIncr
   04C5 23                 2464 	inc	hl
                           2465 ;	genAssign (pointer)
   04C6 36 14              2466 	ld	(hl),#0x14
                           2467 ;	game.c 409
                           2468 ;	genPlus
                           2469 ;	genPlusIncr
   04C8 23                 2470 	inc	hl
                           2471 ;	genAssign (pointer)
   04C9 36 15              2472 	ld	(hl),#0x15
                           2473 ;	game.c 410
                           2474 ;	genPlus
                           2475 ;	genPlusIncr
   04CB 23                 2476 	inc	hl
                           2477 ;	genAssign (pointer)
   04CC 36 00              2478 	ld	(hl),#0x00
                           2479 ;	game.c 411
                           2480 ;	genPlus
                           2481 ;	genPlusIncr
   04CE 23                 2482 	inc	hl
                           2483 ;	genAssign (pointer)
   04CF 36 00              2484 	ld	(hl),#0x00
                           2485 ;	game.c 412
                           2486 ;	genPlus
                           2487 ;	genPlusIncr
   04D1 23                 2488 	inc	hl
   04D2 23                 2489 	inc	hl
                           2490 ;	genAssign (pointer)
   04D3 36 03              2491 	ld	(hl),#0x03
                           2492 ;	game.c 413
                           2493 ;	genPlus
                           2494 ;	genPlusIncr
   04D5 23                 2495 	inc	hl
                           2496 ;	genAssign (pointer)
   04D6 5D                 2497 	ld	e,l
   04D7 54                 2498 	ld	d,h
   04D8 3E 90              2499 	ld	a,#0x90
   04DA 12                 2500 	ld	(de),a
   04DB 13                 2501 	inc	de
   04DC 3E 01              2502 	ld	a,#0x01
   04DE 12                 2503 	ld	(de),a
                           2504 ;	game.c 415
                           2505 ;	genAssign (pointer)
   04DF 11 97 1A           2506 	ld	de,#_cat
   04E2 3E 10              2507 	ld	a,#0x10
   04E4 12                 2508 	ld	(de),a
                           2509 ;	game.c 416
                           2510 ;	genPlus
                           2511 ;	genPlusIncr
   04E5 21 98 1A           2512 	ld	hl,#_cat + 1
                           2513 ;	genAssign (pointer)
   04E8 36 18              2514 	ld	(hl),#0x18
                           2515 ;	game.c 417
                           2516 ;	genPlus
                           2517 ;	genPlusIncr
   04EA 23                 2518 	inc	hl
                           2519 ;	genAssign (pointer)
   04EB 36 09              2520 	ld	(hl),#0x09
                           2521 ;	game.c 418
                           2522 ;	genPlus
                           2523 ;	genPlusIncr
   04ED 23                 2524 	inc	hl
                           2525 ;	genAssign (pointer)
   04EE 36 0A              2526 	ld	(hl),#0x0A
                           2527 ;	game.c 419
                           2528 ;	genPlus
                           2529 ;	genPlusIncr
   04F0 23                 2530 	inc	hl
                           2531 ;	genAssign (pointer)
   04F1 36 05              2532 	ld	(hl),#0x05
                           2533 ;	game.c 420
                           2534 ;	genPlus
                           2535 ;	genPlusIncr
   04F3 23                 2536 	inc	hl
                           2537 ;	genAssign (pointer)
   04F4 36 13              2538 	ld	(hl),#0x13
                           2539 ;	game.c 421
                           2540 ;	genPlus
                           2541 ;	genPlusIncr
   04F6 23                 2542 	inc	hl
                           2543 ;	genAssign (pointer)
   04F7 36 14              2544 	ld	(hl),#0x14
                           2545 ;	game.c 422
                           2546 ;	genPlus
                           2547 ;	genPlusIncr
   04F9 23                 2548 	inc	hl
                           2549 ;	genAssign (pointer)
   04FA 36 15              2550 	ld	(hl),#0x15
                           2551 ;	game.c 423
                           2552 ;	genPlus
                           2553 ;	genPlusIncr
   04FC 23                 2554 	inc	hl
                           2555 ;	genAssign (pointer)
   04FD 36 00              2556 	ld	(hl),#0x00
                           2557 ;	game.c 424
                           2558 ;	genPlus
                           2559 ;	genPlusIncr
   04FF 23                 2560 	inc	hl
                           2561 ;	genAssign (pointer)
   0500 36 00              2562 	ld	(hl),#0x00
                           2563 ;	game.c 425
                           2564 ;	genPlus
                           2565 ;	genPlusIncr
   0502 23                 2566 	inc	hl
   0503 23                 2567 	inc	hl
                           2568 ;	genAssign (pointer)
   0504 36 04              2569 	ld	(hl),#0x04
                           2570 ;	game.c 426
                           2571 ;	genPlus
                           2572 ;	genPlusIncr
   0506 23                 2573 	inc	hl
                           2574 ;	genAssign (pointer)
   0507 5D                 2575 	ld	e,l
   0508 54                 2576 	ld	d,h
   0509 3E 90              2577 	ld	a,#0x90
   050B 12                 2578 	ld	(de),a
   050C 13                 2579 	inc	de
   050D 3E 01              2580 	ld	a,#0x01
   050F 12                 2581 	ld	(de),a
                           2582 ;	game.c 429
                           2583 ;	genIpush
                           2584 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0510 21 6D 1A           2585 	ld	hl,#_bunny
   0513 E5                 2586 	push	hl
                           2587 ;	genCall
   0514 CD 1A 1B           2588 	call	_set_character_sprite
   0517 E8 02              2589 	lda	sp,2(sp)
                           2590 ;	game.c 430
                           2591 ;	genIpush
                           2592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0519 21 7B 1A           2593 	ld	hl,#_dog1
   051C E5                 2594 	push	hl
                           2595 ;	genCall
   051D CD 1A 1B           2596 	call	_set_character_sprite
   0520 E8 02              2597 	lda	sp,2(sp)
                           2598 ;	game.c 431
                           2599 ;	genIpush
                           2600 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0522 21 89 1A           2601 	ld	hl,#_dog2
   0525 E5                 2602 	push	hl
                           2603 ;	genCall
   0526 CD 1A 1B           2604 	call	_set_character_sprite
   0529 E8 02              2605 	lda	sp,2(sp)
                           2606 ;	game.c 432
                           2607 ;	genIpush
                           2608 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   052B 21 97 1A           2609 	ld	hl,#_cat
   052E E5                 2610 	push	hl
                           2611 ;	genCall
   052F CD 1A 1B           2612 	call	_set_character_sprite
   0532 E8 02              2613 	lda	sp,2(sp)
                           2614 ;	genLabel
   0534                    2615 00101$:
                           2616 ;	genEndFunction
                           2617 	
   0534 C9                 2618 	ret
   0535                    2619 ___instanciate_chars_end:
                           2620 ;	game.c 436
                           2621 ;	genLabel
                           2622 ;	genFunction
                           2623 ;	---------------------------------
                           2624 ; Function got_key
                           2625 ; ---------------------------------
   0535                    2626 ___got_key_start:
   0535                    2627 _got_key:
   0535 E8 FC              2628 	lda	sp,-4(sp)
                           2629 ;	game.c 437
                           2630 ;	genAssign
                           2631 ;	AOP_HL for _player
   0537 21 B3 1A           2632 	ld	hl,#_player
   053A 4E                 2633 	ld	c,(hl)
   053B 23                 2634 	inc	hl
   053C 46                 2635 	ld	b,(hl)
                           2636 ;	genPlus
                           2637 ;	genPlusIncr
   053D 03                 2638 	inc	bc
                           2639 ;	genPointerGet
   053E 0A                 2640 	ld	a,(bc)
   053F 4F                 2641 	ld	c,a
                           2642 ;	genAssign
                           2643 ;	AOP_HL for _player
                           2644 ;	AOP_STK for _got_key_sloc0_1_0
   0540 2B                 2645 	dec	hl
   0541 2A                 2646 	ld	a,(hl+)
   0542 5E                 2647 	ld	e,(hl)
   0543 F8 00              2648 	lda	hl,0(sp)
   0545 22                 2649 	ld	(hl+),a
   0546 73                 2650 	ld	(hl),e
                           2651 ;	genPointerGet
                           2652 ;	AOP_STK for _got_key_sloc0_1_0
   0547 2B                 2653 	dec	hl
   0548 5E                 2654 	ld	e,(hl)
   0549 23                 2655 	inc	hl
   054A 56                 2656 	ld	d,(hl)
   054B 1A                 2657 	ld	a,(de)
   054C 47                 2658 	ld	b,a
                           2659 ;	genIpush
                           2660 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054D 79                 2661 	ld	a,c
   054E F5                 2662 	push	af
   054F 33                 2663 	inc	sp
                           2664 ;	genIpush
   0550 78                 2665 	ld	a,b
   0551 F5                 2666 	push	af
   0552 33                 2667 	inc	sp
                           2668 ;	genCall
   0553 CD CD 0D           2669 	call	_get_player_map_position
   0556 42                 2670 	ld	b,d
   0557 4B                 2671 	ld	c,e
   0558 E8 02              2672 	lda	sp,2(sp)
                           2673 ;	genAssign
                           2674 ;	(registers are the same)
                           2675 ;	game.c 440
                           2676 ;	genPlus
                           2677 ;	Can't optimise plus by inc, falling back to the normal way
   055A 21 05 19           2678 	ld	hl,#_map
   055D 09                 2679 	add	hl,bc
   055E 4D                 2680 	ld	c,l
   055F 44                 2681 	ld	b,h
                           2682 ;	genPointerGet
   0560 0A                 2683 	ld	a,(bc)
   0561 4F                 2684 	ld	c,a
                           2685 ;	genCast
                           2686 ; Removed redundent load
   0562 06 00              2687 	ld	b,#0x00
                           2688 ;	genCmpEq
                           2689 ; genCmpEq: left 2, right 2, result 0
   0564 79                 2690 	ld	a,c
   0565 FE 2E              2691 	cp	a,#0x2E
   0567 C2 71 05           2692 	jp	nz,00116$
   056A 78                 2693 	ld	a,b
   056B B7                 2694 	or	a,a
   056C C2 DF 05           2695 	jp	nz,00109$
   056F 18 03              2696 	jr	00117$
   0571                    2697 00116$:
   0571 C3 DF 05           2698 	jp	00109$
   0574                    2699 00117$:
                           2700 ;	game.c 445
                           2701 ;	genAssign
                           2702 ;	AOP_STK for _got_key_map_position_2_2
   0574 F8 02              2703 	lda	hl,2(sp)
   0576 36 68              2704 	ld	(hl),#0x68
   0578 23                 2705 	inc	hl
   0579 36 01              2706 	ld	(hl),#0x01
                           2707 ;	game.c 446
                           2708 ;	genLabel
   057B                    2709 00104$:
                           2710 ;	genCmpEq
                           2711 ;	AOP_STK for _got_key_map_position_2_2
                           2712 ; genCmpEq: left 2, right 2, result 0
   057B F8 02              2713 	lda	hl,2(sp)
   057D 2A                 2714 	ld	a,(hl+)
   057E B6                 2715 	or	a,(hl)
   057F CA CE 05           2716 	jp	z,00106$
   0582                    2717 00118$:
                           2718 ;	game.c 447
                           2719 ;	genMinus
                           2720 ;	AOP_STK for _got_key_map_position_2_2
   0582 F8 02              2721 	lda	hl,2(sp)
   0584 5E                 2722 	ld	e,(hl)
   0585 23                 2723 	inc	hl
   0586 56                 2724 	ld	d,(hl)
   0587 1B                 2725 	dec	de
   0588 2B                 2726 	dec	hl
   0589 73                 2727 	ld	(hl),e
   058A 23                 2728 	inc	hl
   058B 72                 2729 	ld	(hl),d
                           2730 ;	game.c 449
                           2731 ;	genPlus
                           2732 ;	AOP_STK for _got_key_map_position_2_2
                           2733 ;	AOP_STK for _got_key_sloc0_1_0
                           2734 ;	Can't optimise plus by inc, falling back to the normal way
   058C 11 05 19           2735 	ld	de,#_map
   058F 2B                 2736 	dec	hl
   0590 2A                 2737 	ld	a,(hl+)
   0591 66                 2738 	ld	h,(hl)
   0592 6F                 2739 	ld	l,a
   0593 19                 2740 	add	hl,de
   0594 7D                 2741 	ld	a,l
   0595 54                 2742 	ld	d,h
   0596 F8 00              2743 	lda	hl,0(sp)
                           2744 ;	genPointerGet
                           2745 ;	AOP_STK for _got_key_sloc0_1_0
   0598 22                 2746 	ld	(hl+),a
   0599 72                 2747 	ld	(hl),d
   059A 5F                 2748 	ld	e,a
   059B 1A                 2749 	ld	a,(de)
   059C 4F                 2750 	ld	c,a
                           2751 ;	genCast
                           2752 ; Removed redundent load
   059D 06 00              2753 	ld	b,#0x00
                           2754 ;	genCmpEq
                           2755 ; genCmpEq: left 2, right 2, result 0
   059F 79                 2756 	ld	a,c
   05A0 FE 29              2757 	cp	a,#0x29
   05A2 C2 AA 05           2758 	jp	nz,00119$
   05A5 78                 2759 	ld	a,b
   05A6 B7                 2760 	or	a,a
   05A7 CA B8 05           2761 	jp	z,00101$
   05AA                    2762 00119$:
                           2763 ;	genCmpEq
                           2764 ; genCmpEq: left 2, right 2, result 0
   05AA 79                 2765 	ld	a,c
   05AB FE 2E              2766 	cp	a,#0x2E
   05AD C2 B5 05           2767 	jp	nz,00120$
   05B0 78                 2768 	ld	a,b
   05B1 B7                 2769 	or	a,a
   05B2 CA C3 05           2770 	jp	z,00102$
   05B5                    2771 00120$:
                           2772 ;	genGoto
   05B5 C3 7B 05           2773 	jp	00104$
                           2774 ;	game.c 451
                           2775 ;	genLabel
   05B8                    2776 00101$:
                           2777 ;	genAssign (pointer)
                           2778 ;	AOP_STK for _got_key_sloc0_1_0
   05B8 F8 00              2779 	lda	hl,0(sp)
   05BA 5E                 2780 	ld	e,(hl)
   05BB 23                 2781 	inc	hl
   05BC 56                 2782 	ld	d,(hl)
   05BD 3E 2A              2783 	ld	a,#0x2A
   05BF 12                 2784 	ld	(de),a
                           2785 ;	game.c 452
                           2786 ;	genGoto
   05C0 C3 7B 05           2787 	jp	00104$
                           2788 ;	game.c 454
                           2789 ;	genLabel
   05C3                    2790 00102$:
                           2791 ;	genAssign (pointer)
                           2792 ;	AOP_STK for _got_key_sloc0_1_0
   05C3 F8 00              2793 	lda	hl,0(sp)
   05C5 5E                 2794 	ld	e,(hl)
   05C6 23                 2795 	inc	hl
   05C7 56                 2796 	ld	d,(hl)
   05C8 3E 09              2797 	ld	a,#0x09
   05CA 12                 2798 	ld	(de),a
                           2799 ;	game.c 457
                           2800 ;	genGoto
   05CB C3 7B 05           2801 	jp	00104$
                           2802 ;	genLabel
   05CE                    2803 00106$:
                           2804 ;	game.c 459
                           2805 ;	genIpush
                           2806 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05CE 21 05 19           2807 	ld	hl,#_map
   05D1 E5                 2808 	push	hl
                           2809 ;	genIpush
   05D2 21 14 12           2810 	ld	hl,#0x1214
   05D5 E5                 2811 	push	hl
                           2812 ;	genIpush
   05D6 21 00 00           2813 	ld	hl,#0x0000
   05D9 E5                 2814 	push	hl
                           2815 ;	genCall
   05DA CD 00 00           2816 	call	_set_bkg_tiles
   05DD E8 06              2817 	lda	sp,6(sp)
                           2818 ;	genLabel
   05DF                    2819 00109$:
                           2820 ;	genEndFunction
   05DF E8 04              2821 	lda	sp,4(sp)
   05E1 C9                 2822 	ret
   05E2                    2823 ___got_key_end:
                           2824 ;	game.c 463
                           2825 ;	genLabel
                           2826 ;	genFunction
                           2827 ;	---------------------------------
                           2828 ; Function got_door
                           2829 ; ---------------------------------
   05E2                    2830 ___got_door_start:
   05E2                    2831 _got_door:
   05E2 E8 FE              2832 	lda	sp,-2(sp)
                           2833 ;	game.c 464
                           2834 ;	genAssign
                           2835 ;	AOP_HL for _player
   05E4 21 B3 1A           2836 	ld	hl,#_player
   05E7 4E                 2837 	ld	c,(hl)
   05E8 23                 2838 	inc	hl
   05E9 46                 2839 	ld	b,(hl)
                           2840 ;	genPlus
                           2841 ;	genPlusIncr
   05EA 03                 2842 	inc	bc
                           2843 ;	genPointerGet
   05EB 0A                 2844 	ld	a,(bc)
   05EC 4F                 2845 	ld	c,a
                           2846 ;	genAssign
                           2847 ;	AOP_HL for _player
                           2848 ;	AOP_STK for _got_door_sloc0_1_0
   05ED 2B                 2849 	dec	hl
   05EE 2A                 2850 	ld	a,(hl+)
   05EF 5E                 2851 	ld	e,(hl)
   05F0 F8 00              2852 	lda	hl,0(sp)
   05F2 22                 2853 	ld	(hl+),a
   05F3 73                 2854 	ld	(hl),e
                           2855 ;	genPointerGet
                           2856 ;	AOP_STK for _got_door_sloc0_1_0
   05F4 2B                 2857 	dec	hl
   05F5 5E                 2858 	ld	e,(hl)
   05F6 23                 2859 	inc	hl
   05F7 56                 2860 	ld	d,(hl)
   05F8 1A                 2861 	ld	a,(de)
   05F9 47                 2862 	ld	b,a
                           2863 ;	genIpush
                           2864 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05FA 79                 2865 	ld	a,c
   05FB F5                 2866 	push	af
   05FC 33                 2867 	inc	sp
                           2868 ;	genIpush
   05FD 78                 2869 	ld	a,b
   05FE F5                 2870 	push	af
   05FF 33                 2871 	inc	sp
                           2872 ;	genCall
   0600 CD CD 0D           2873 	call	_get_player_map_position
   0603 42                 2874 	ld	b,d
   0604 4B                 2875 	ld	c,e
   0605 E8 02              2876 	lda	sp,2(sp)
                           2877 ;	genAssign
                           2878 ;	(registers are the same)
                           2879 ;	game.c 466
                           2880 ;	genPlus
                           2881 ;	Can't optimise plus by inc, falling back to the normal way
   0607 21 05 19           2882 	ld	hl,#_map
   060A 09                 2883 	add	hl,bc
   060B 4D                 2884 	ld	c,l
   060C 44                 2885 	ld	b,h
                           2886 ;	genPointerGet
   060D 0A                 2887 	ld	a,(bc)
   060E 4F                 2888 	ld	c,a
                           2889 ;	genCast
                           2890 ; Removed redundent load
   060F 06 00              2891 	ld	b,#0x00
                           2892 ;	genCmpEq
                           2893 ; genCmpEq: left 2, right 2, result 0
   0611 79                 2894 	ld	a,c
   0612 FE 65              2895 	cp	a,#0x65
   0614 C2 1C 06           2896 	jp	nz,00144$
   0617 78                 2897 	ld	a,b
   0618 B7                 2898 	or	a,a
   0619 CA F0 06           2899 	jp	z,00101$
   061C                    2900 00144$:
                           2901 ;	genCmpEq
                           2902 ; genCmpEq: left 2, right 2, result 0
   061C 79                 2903 	ld	a,c
   061D FE 66              2904 	cp	a,#0x66
   061F C2 27 06           2905 	jp	nz,00145$
   0622 78                 2906 	ld	a,b
   0623 B7                 2907 	or	a,a
   0624 CA FB 06           2908 	jp	z,00102$
   0627                    2909 00145$:
                           2910 ;	genCmpEq
                           2911 ; genCmpEq: left 2, right 2, result 0
   0627 79                 2912 	ld	a,c
   0628 FE 67              2913 	cp	a,#0x67
   062A C2 32 06           2914 	jp	nz,00146$
   062D 78                 2915 	ld	a,b
   062E B7                 2916 	or	a,a
   062F CA 06 07           2917 	jp	z,00103$
   0632                    2918 00146$:
                           2919 ;	genCmpEq
                           2920 ; genCmpEq: left 2, right 2, result 0
   0632 79                 2921 	ld	a,c
   0633 FE 68              2922 	cp	a,#0x68
   0635 C2 3D 06           2923 	jp	nz,00147$
   0638 78                 2924 	ld	a,b
   0639 B7                 2925 	or	a,a
   063A CA 11 07           2926 	jp	z,00104$
   063D                    2927 00147$:
                           2928 ;	genCmpEq
                           2929 ; genCmpEq: left 2, right 2, result 0
   063D 79                 2930 	ld	a,c
   063E FE 69              2931 	cp	a,#0x69
   0640 C2 48 06           2932 	jp	nz,00148$
   0643 78                 2933 	ld	a,b
   0644 B7                 2934 	or	a,a
   0645 CA 1C 07           2935 	jp	z,00105$
   0648                    2936 00148$:
                           2937 ;	genCmpEq
                           2938 ; genCmpEq: left 2, right 2, result 0
   0648 79                 2939 	ld	a,c
   0649 FE 6A              2940 	cp	a,#0x6A
   064B C2 53 06           2941 	jp	nz,00149$
   064E 78                 2942 	ld	a,b
   064F B7                 2943 	or	a,a
   0650 CA 27 07           2944 	jp	z,00106$
   0653                    2945 00149$:
                           2946 ;	genCmpEq
                           2947 ; genCmpEq: left 2, right 2, result 0
   0653 79                 2948 	ld	a,c
   0654 FE 6B              2949 	cp	a,#0x6B
   0656 C2 5E 06           2950 	jp	nz,00150$
   0659 78                 2951 	ld	a,b
   065A B7                 2952 	or	a,a
   065B CA 32 07           2953 	jp	z,00107$
   065E                    2954 00150$:
                           2955 ;	genCmpEq
                           2956 ; genCmpEq: left 2, right 2, result 0
   065E 79                 2957 	ld	a,c
   065F FE 6C              2958 	cp	a,#0x6C
   0661 C2 69 06           2959 	jp	nz,00151$
   0664 78                 2960 	ld	a,b
   0665 B7                 2961 	or	a,a
   0666 CA 3D 07           2962 	jp	z,00108$
   0669                    2963 00151$:
                           2964 ;	genCmpEq
                           2965 ; genCmpEq: left 2, right 2, result 0
   0669 79                 2966 	ld	a,c
   066A FE 6D              2967 	cp	a,#0x6D
   066C C2 74 06           2968 	jp	nz,00152$
   066F 78                 2969 	ld	a,b
   0670 B7                 2970 	or	a,a
   0671 CA 48 07           2971 	jp	z,00109$
   0674                    2972 00152$:
                           2973 ;	genCmpEq
                           2974 ; genCmpEq: left 2, right 2, result 0
   0674 79                 2975 	ld	a,c
   0675 FE 6E              2976 	cp	a,#0x6E
   0677 C2 7F 06           2977 	jp	nz,00153$
   067A 78                 2978 	ld	a,b
   067B B7                 2979 	or	a,a
   067C CA 53 07           2980 	jp	z,00110$
   067F                    2981 00153$:
                           2982 ;	genCmpEq
                           2983 ; genCmpEq: left 2, right 2, result 0
   067F 79                 2984 	ld	a,c
   0680 FE 6F              2985 	cp	a,#0x6F
   0682 C2 8A 06           2986 	jp	nz,00154$
   0685 78                 2987 	ld	a,b
   0686 B7                 2988 	or	a,a
   0687 CA 5E 07           2989 	jp	z,00111$
   068A                    2990 00154$:
                           2991 ;	genCmpEq
                           2992 ; genCmpEq: left 2, right 2, result 0
   068A 79                 2993 	ld	a,c
   068B FE 70              2994 	cp	a,#0x70
   068D C2 95 06           2995 	jp	nz,00155$
   0690 78                 2996 	ld	a,b
   0691 B7                 2997 	or	a,a
   0692 CA 69 07           2998 	jp	z,00112$
   0695                    2999 00155$:
                           3000 ;	genCmpEq
                           3001 ; genCmpEq: left 2, right 2, result 0
   0695 79                 3002 	ld	a,c
   0696 FE 71              3003 	cp	a,#0x71
   0698 C2 A0 06           3004 	jp	nz,00156$
   069B 78                 3005 	ld	a,b
   069C B7                 3006 	or	a,a
   069D CA 74 07           3007 	jp	z,00113$
   06A0                    3008 00156$:
                           3009 ;	genCmpEq
                           3010 ; genCmpEq: left 2, right 2, result 0
   06A0 79                 3011 	ld	a,c
   06A1 FE 72              3012 	cp	a,#0x72
   06A3 C2 AB 06           3013 	jp	nz,00157$
   06A6 78                 3014 	ld	a,b
   06A7 B7                 3015 	or	a,a
   06A8 CA 7F 07           3016 	jp	z,00114$
   06AB                    3017 00157$:
                           3018 ;	genCmpEq
                           3019 ; genCmpEq: left 2, right 2, result 0
   06AB 79                 3020 	ld	a,c
   06AC FE 73              3021 	cp	a,#0x73
   06AE C2 B6 06           3022 	jp	nz,00158$
   06B1 78                 3023 	ld	a,b
   06B2 B7                 3024 	or	a,a
   06B3 CA 8A 07           3025 	jp	z,00115$
   06B6                    3026 00158$:
                           3027 ;	genCmpEq
                           3028 ; genCmpEq: left 2, right 2, result 0
   06B6 79                 3029 	ld	a,c
   06B7 FE 74              3030 	cp	a,#0x74
   06B9 C2 C1 06           3031 	jp	nz,00159$
   06BC 78                 3032 	ld	a,b
   06BD B7                 3033 	or	a,a
   06BE CA 95 07           3034 	jp	z,00116$
   06C1                    3035 00159$:
                           3036 ;	genCmpEq
                           3037 ; genCmpEq: left 2, right 2, result 0
   06C1 79                 3038 	ld	a,c
   06C2 FE 75              3039 	cp	a,#0x75
   06C4 C2 CC 06           3040 	jp	nz,00160$
   06C7 78                 3041 	ld	a,b
   06C8 B7                 3042 	or	a,a
   06C9 CA A0 07           3043 	jp	z,00117$
   06CC                    3044 00160$:
                           3045 ;	genCmpEq
                           3046 ; genCmpEq: left 2, right 2, result 0
   06CC 79                 3047 	ld	a,c
   06CD FE 76              3048 	cp	a,#0x76
   06CF C2 D7 06           3049 	jp	nz,00161$
   06D2 78                 3050 	ld	a,b
   06D3 B7                 3051 	or	a,a
   06D4 CA AB 07           3052 	jp	z,00118$
   06D7                    3053 00161$:
                           3054 ;	genCmpEq
                           3055 ; genCmpEq: left 2, right 2, result 0
   06D7 79                 3056 	ld	a,c
   06D8 FE 77              3057 	cp	a,#0x77
   06DA C2 E2 06           3058 	jp	nz,00162$
   06DD 78                 3059 	ld	a,b
   06DE B7                 3060 	or	a,a
   06DF CA B6 07           3061 	jp	z,00119$
   06E2                    3062 00162$:
                           3063 ;	genCmpEq
                           3064 ; genCmpEq: left 2, right 2, result 0
   06E2 79                 3065 	ld	a,c
   06E3 FE 78              3066 	cp	a,#0x78
   06E5 C2 ED 06           3067 	jp	nz,00163$
   06E8 78                 3068 	ld	a,b
   06E9 B7                 3069 	or	a,a
   06EA CA C1 07           3070 	jp	z,00120$
   06ED                    3071 00163$:
                           3072 ;	genGoto
   06ED C3 C9 07           3073 	jp	00122$
                           3074 ;	game.c 468
                           3075 ;	genLabel
   06F0                    3076 00101$:
                           3077 ;	genAssign
                           3078 ;	AOP_HL for _current_map
   06F0 21 04 19           3079 	ld	hl,#_current_map
   06F3 36 01              3080 	ld	(hl),#0x01
                           3081 ;	game.c 469
                           3082 ;	genCall
                           3083 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 CD 34 04           3084 	call	_map_init
                           3085 ;	game.c 470
                           3086 ;	genGoto
   06F8 C3 C9 07           3087 	jp	00122$
                           3088 ;	game.c 472
                           3089 ;	genLabel
   06FB                    3090 00102$:
                           3091 ;	genAssign
                           3092 ;	AOP_HL for _current_map
   06FB 21 04 19           3093 	ld	hl,#_current_map
   06FE 36 02              3094 	ld	(hl),#0x02
                           3095 ;	game.c 473
                           3096 ;	genCall
                           3097 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0700 CD 34 04           3098 	call	_map_init
                           3099 ;	game.c 474
                           3100 ;	genGoto
   0703 C3 C9 07           3101 	jp	00122$
                           3102 ;	game.c 476
                           3103 ;	genLabel
   0706                    3104 00103$:
                           3105 ;	genAssign
                           3106 ;	AOP_HL for _current_map
   0706 21 04 19           3107 	ld	hl,#_current_map
   0709 36 03              3108 	ld	(hl),#0x03
                           3109 ;	game.c 477
                           3110 ;	genCall
                           3111 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   070B CD 34 04           3112 	call	_map_init
                           3113 ;	game.c 478
                           3114 ;	genGoto
   070E C3 C9 07           3115 	jp	00122$
                           3116 ;	game.c 480
                           3117 ;	genLabel
   0711                    3118 00104$:
                           3119 ;	genAssign
                           3120 ;	AOP_HL for _current_map
   0711 21 04 19           3121 	ld	hl,#_current_map
   0714 36 04              3122 	ld	(hl),#0x04
                           3123 ;	game.c 481
                           3124 ;	genCall
                           3125 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0716 CD 34 04           3126 	call	_map_init
                           3127 ;	game.c 482
                           3128 ;	genGoto
   0719 C3 C9 07           3129 	jp	00122$
                           3130 ;	game.c 484
                           3131 ;	genLabel
   071C                    3132 00105$:
                           3133 ;	genAssign
                           3134 ;	AOP_HL for _current_map
   071C 21 04 19           3135 	ld	hl,#_current_map
   071F 36 05              3136 	ld	(hl),#0x05
                           3137 ;	game.c 485
                           3138 ;	genCall
                           3139 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0721 CD 34 04           3140 	call	_map_init
                           3141 ;	game.c 486
                           3142 ;	genGoto
   0724 C3 C9 07           3143 	jp	00122$
                           3144 ;	game.c 488
                           3145 ;	genLabel
   0727                    3146 00106$:
                           3147 ;	genAssign
                           3148 ;	AOP_HL for _current_map
   0727 21 04 19           3149 	ld	hl,#_current_map
   072A 36 06              3150 	ld	(hl),#0x06
                           3151 ;	game.c 489
                           3152 ;	genCall
                           3153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   072C CD 34 04           3154 	call	_map_init
                           3155 ;	game.c 490
                           3156 ;	genGoto
   072F C3 C9 07           3157 	jp	00122$
                           3158 ;	game.c 492
                           3159 ;	genLabel
   0732                    3160 00107$:
                           3161 ;	genAssign
                           3162 ;	AOP_HL for _current_map
   0732 21 04 19           3163 	ld	hl,#_current_map
   0735 36 07              3164 	ld	(hl),#0x07
                           3165 ;	game.c 493
                           3166 ;	genCall
                           3167 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0737 CD 34 04           3168 	call	_map_init
                           3169 ;	game.c 494
                           3170 ;	genGoto
   073A C3 C9 07           3171 	jp	00122$
                           3172 ;	game.c 496
                           3173 ;	genLabel
   073D                    3174 00108$:
                           3175 ;	genAssign
                           3176 ;	AOP_HL for _current_map
   073D 21 04 19           3177 	ld	hl,#_current_map
   0740 36 08              3178 	ld	(hl),#0x08
                           3179 ;	game.c 497
                           3180 ;	genCall
                           3181 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0742 CD 34 04           3182 	call	_map_init
                           3183 ;	game.c 498
                           3184 ;	genGoto
   0745 C3 C9 07           3185 	jp	00122$
                           3186 ;	game.c 500
                           3187 ;	genLabel
   0748                    3188 00109$:
                           3189 ;	genAssign
                           3190 ;	AOP_HL for _current_map
   0748 21 04 19           3191 	ld	hl,#_current_map
   074B 36 09              3192 	ld	(hl),#0x09
                           3193 ;	game.c 501
                           3194 ;	genCall
                           3195 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   074D CD 34 04           3196 	call	_map_init
                           3197 ;	game.c 502
                           3198 ;	genGoto
   0750 C3 C9 07           3199 	jp	00122$
                           3200 ;	game.c 504
                           3201 ;	genLabel
   0753                    3202 00110$:
                           3203 ;	genAssign
                           3204 ;	AOP_HL for _current_map
   0753 21 04 19           3205 	ld	hl,#_current_map
   0756 36 0A              3206 	ld	(hl),#0x0A
                           3207 ;	game.c 505
                           3208 ;	genCall
                           3209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0758 CD 34 04           3210 	call	_map_init
                           3211 ;	game.c 506
                           3212 ;	genGoto
   075B C3 C9 07           3213 	jp	00122$
                           3214 ;	game.c 508
                           3215 ;	genLabel
   075E                    3216 00111$:
                           3217 ;	genAssign
                           3218 ;	AOP_HL for _current_map
   075E 21 04 19           3219 	ld	hl,#_current_map
   0761 36 0B              3220 	ld	(hl),#0x0B
                           3221 ;	game.c 509
                           3222 ;	genCall
                           3223 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0763 CD 34 04           3224 	call	_map_init
                           3225 ;	game.c 510
                           3226 ;	genGoto
   0766 C3 C9 07           3227 	jp	00122$
                           3228 ;	game.c 512
                           3229 ;	genLabel
   0769                    3230 00112$:
                           3231 ;	genAssign
                           3232 ;	AOP_HL for _current_map
   0769 21 04 19           3233 	ld	hl,#_current_map
   076C 36 0C              3234 	ld	(hl),#0x0C
                           3235 ;	game.c 513
                           3236 ;	genCall
                           3237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076E CD 34 04           3238 	call	_map_init
                           3239 ;	game.c 514
                           3240 ;	genGoto
   0771 C3 C9 07           3241 	jp	00122$
                           3242 ;	game.c 516
                           3243 ;	genLabel
   0774                    3244 00113$:
                           3245 ;	genAssign
                           3246 ;	AOP_HL for _current_map
   0774 21 04 19           3247 	ld	hl,#_current_map
   0777 36 0D              3248 	ld	(hl),#0x0D
                           3249 ;	game.c 517
                           3250 ;	genCall
                           3251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0779 CD 34 04           3252 	call	_map_init
                           3253 ;	game.c 518
                           3254 ;	genGoto
   077C C3 C9 07           3255 	jp	00122$
                           3256 ;	game.c 520
                           3257 ;	genLabel
   077F                    3258 00114$:
                           3259 ;	genAssign
                           3260 ;	AOP_HL for _current_map
   077F 21 04 19           3261 	ld	hl,#_current_map
   0782 36 0E              3262 	ld	(hl),#0x0E
                           3263 ;	game.c 521
                           3264 ;	genCall
                           3265 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0784 CD 34 04           3266 	call	_map_init
                           3267 ;	game.c 522
                           3268 ;	genGoto
   0787 C3 C9 07           3269 	jp	00122$
                           3270 ;	game.c 524
                           3271 ;	genLabel
   078A                    3272 00115$:
                           3273 ;	genAssign
                           3274 ;	AOP_HL for _current_map
   078A 21 04 19           3275 	ld	hl,#_current_map
   078D 36 0F              3276 	ld	(hl),#0x0F
                           3277 ;	game.c 525
                           3278 ;	genCall
                           3279 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078F CD 34 04           3280 	call	_map_init
                           3281 ;	game.c 526
                           3282 ;	genGoto
   0792 C3 C9 07           3283 	jp	00122$
                           3284 ;	game.c 528
                           3285 ;	genLabel
   0795                    3286 00116$:
                           3287 ;	genAssign
                           3288 ;	AOP_HL for _current_map
   0795 21 04 19           3289 	ld	hl,#_current_map
   0798 36 10              3290 	ld	(hl),#0x10
                           3291 ;	game.c 529
                           3292 ;	genCall
                           3293 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079A CD 34 04           3294 	call	_map_init
                           3295 ;	game.c 530
                           3296 ;	genGoto
   079D C3 C9 07           3297 	jp	00122$
                           3298 ;	game.c 532
                           3299 ;	genLabel
   07A0                    3300 00117$:
                           3301 ;	genAssign
                           3302 ;	AOP_HL for _current_map
   07A0 21 04 19           3303 	ld	hl,#_current_map
   07A3 36 11              3304 	ld	(hl),#0x11
                           3305 ;	game.c 533
                           3306 ;	genCall
                           3307 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07A5 CD 34 04           3308 	call	_map_init
                           3309 ;	game.c 534
                           3310 ;	genGoto
   07A8 C3 C9 07           3311 	jp	00122$
                           3312 ;	game.c 536
                           3313 ;	genLabel
   07AB                    3314 00118$:
                           3315 ;	genAssign
                           3316 ;	AOP_HL for _current_map
   07AB 21 04 19           3317 	ld	hl,#_current_map
   07AE 36 12              3318 	ld	(hl),#0x12
                           3319 ;	game.c 537
                           3320 ;	genCall
                           3321 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B0 CD 34 04           3322 	call	_map_init
                           3323 ;	game.c 538
                           3324 ;	genGoto
   07B3 C3 C9 07           3325 	jp	00122$
                           3326 ;	game.c 540
                           3327 ;	genLabel
   07B6                    3328 00119$:
                           3329 ;	genAssign
                           3330 ;	AOP_HL for _current_map
   07B6 21 04 19           3331 	ld	hl,#_current_map
   07B9 36 13              3332 	ld	(hl),#0x13
                           3333 ;	game.c 541
                           3334 ;	genCall
                           3335 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BB CD 34 04           3336 	call	_map_init
                           3337 ;	game.c 542
                           3338 ;	genGoto
   07BE C3 C9 07           3339 	jp	00122$
                           3340 ;	game.c 544
                           3341 ;	genLabel
   07C1                    3342 00120$:
                           3343 ;	genAssign
                           3344 ;	AOP_HL for _current_map
   07C1 21 04 19           3345 	ld	hl,#_current_map
   07C4 36 14              3346 	ld	(hl),#0x14
                           3347 ;	game.c 545
                           3348 ;	genCall
                           3349 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C6 CD 34 04           3350 	call	_map_init
                           3351 ;	game.c 547
                           3352 ;	genLabel
   07C9                    3353 00122$:
                           3354 ;	genEndFunction
   07C9 E8 02              3355 	lda	sp,2(sp)
   07CB C9                 3356 	ret
   07CC                    3357 ___got_door_end:
                           3358 ;	game.c 552
                           3359 ;	genLabel
                           3360 ;	genFunction
                           3361 ;	---------------------------------
                           3362 ; Function is_ded
                           3363 ; ---------------------------------
   07CC                    3364 ___is_ded_start:
   07CC                    3365 _is_ded:
   07CC E8 F7              3366 	lda	sp,-9(sp)
                           3367 ;	game.c 558
                           3368 ;	genAssign
                           3369 ;	AOP_STK for 
   07CE F8 0B              3370 	lda	hl,11(sp)
   07D0 4E                 3371 	ld	c,(hl)
   07D1 23                 3372 	inc	hl
   07D2 46                 3373 	ld	b,(hl)
                           3374 ;	genPointerGet
   07D3 59                 3375 	ld	e,c
   07D4 50                 3376 	ld	d,b
   07D5 1A                 3377 	ld	a,(de)
   07D6 4F                 3378 	ld	c,a
   07D7 13                 3379 	inc	de
   07D8 1A                 3380 	ld	a,(de)
   07D9 47                 3381 	ld	b,a
                           3382 ;	genPlus
                           3383 ;	AOP_STK for _is_ded_sloc0_1_0
                           3384 ;	genPlusIncr
                           3385 ;	Can't optimise plus by inc, falling back to the normal way
   07DA 21 09 00           3386 	ld	hl,#0x0009
   07DD 09                 3387 	add	hl,bc
   07DE 7D                 3388 	ld	a,l
   07DF 54                 3389 	ld	d,h
   07E0 F8 03              3390 	lda	hl,3(sp)
                           3391 ;	genPointerGet
                           3392 ;	AOP_STK for _is_ded_sloc0_1_0
   07E2 22                 3393 	ld	(hl+),a
   07E3 72                 3394 	ld	(hl),d
   07E4 5F                 3395 	ld	e,a
   07E5 1A                 3396 	ld	a,(de)
                           3397 ;	genIfx
   07E6 B7                 3398 	or	a,a
   07E7 CA 09 08           3399 	jp	z,00102$
                           3400 ;	genPlus
                           3401 ;	AOP_STK for _is_ded_sloc0_1_0
                           3402 ;	genPlusIncr
                           3403 ;	Can't optimise plus by inc, falling back to the normal way
   07EA 21 0B 00           3404 	ld	hl,#0x000B
   07ED 09                 3405 	add	hl,bc
   07EE 7D                 3406 	ld	a,l
   07EF 54                 3407 	ld	d,h
   07F0 F8 03              3408 	lda	hl,3(sp)
                           3409 ;	genPointerGet
                           3410 ;	AOP_STK for _is_ded_sloc0_1_0
                           3411 ;	AOP_STK for _is_ded_sloc1_1_0
   07F2 22                 3412 	ld	(hl+),a
   07F3 72                 3413 	ld	(hl),d
   07F4 5F                 3414 	ld	e,a
   07F5 1A                 3415 	ld	a,(de)
   07F6 2B                 3416 	dec	hl
   07F7 2B                 3417 	dec	hl
                           3418 ;	genCmpEq
                           3419 ;	AOP_STK for _is_ded_sloc1_1_0
                           3420 ; genCmpEq: left 1, right 1, result 0
   07F8 77                 3421 	ld      (hl),a
                           3422 ; Removed redundent load
   07F9 FE 01              3423 	cp	a,#0x01
   07FB C2 09 08           3424 	jp	nz,00102$
   07FE 18 03              3425 	jr	00112$
   0800                    3426 00111$:
   0800 C3 09 08           3427 	jp	00102$
   0803                    3428 00112$:
                           3429 ;	game.c 559
                           3430 ;	genRet
   0803 11 00 00           3431 	ld	de,#0x0000
   0806 C3 9E 08           3432 	jp	00106$
                           3433 ;	genLabel
   0809                    3434 00102$:
                           3435 ;	game.c 564
                           3436 ;	genPointerGet
                           3437 ;	AOP_STK for _is_ded_sloc1_1_0
   0809 0A                 3438 	ld	a,(bc)
   080A F8 02              3439 	lda	hl,2(sp)
   080C 77                 3440 	ld	(hl),a
                           3441 ;	genCast
                           3442 ;	AOP_STK for _is_ded_sloc1_1_0
                           3443 ;	AOP_STK for _is_ded_sloc0_1_0
   080D 2A                 3444 	ld	a,(hl+)
   080E 22                 3445 	ld	(hl+),a
   080F 36 00              3446 	ld	(hl),#0x00
                           3447 ;	genRightShift
                           3448 ;	AOP_STK for _is_ded_sloc0_1_0
                           3449 ;	AOP_STK for _is_ded_sloc2_1_0
   0811 2B                 3450 	dec	hl
   0812 7E                 3451 	ld	a,(hl)
   0813 F8 00              3452 	lda	hl,0(sp)
   0815 77                 3453 	ld	(hl),a
   0816 F8 04              3454 	lda	hl,4(sp)
   0818 7E                 3455 	ld	a,(hl)
   0819 F8 01              3456 	lda	hl,1(sp)
   081B 77                 3457 	ld	(hl),a
   081C CB 3E              3458 	srl	(hl)
   081E 2B                 3459 	dec	hl
   081F CB 1E              3460 	rr	(hl)
   0821 23                 3461 	inc	hl
   0822 CB 3E              3462 	srl	(hl)
   0824 2B                 3463 	dec	hl
   0825 CB 1E              3464 	rr	(hl)
   0827 23                 3465 	inc	hl
   0828 CB 3E              3466 	srl	(hl)
   082A 2B                 3467 	dec	hl
   082B CB 1E              3468 	rr	(hl)
                           3469 ;	genMinus
                           3470 ;	AOP_STK for _is_ded_sloc2_1_0
                           3471 ;	AOP_STK for _is_ded_sloc0_1_0
   082D 5E                 3472 	ld	e,(hl)
   082E 23                 3473 	inc	hl
   082F 56                 3474 	ld	d,(hl)
   0830 21 01 00           3475 	ld	hl,#0x0001
   0833 7B                 3476 	ld	a,e
   0834 95                 3477 	sub	a,l
   0835 5F                 3478 	ld	e,a
   0836 7A                 3479 	ld	a,d
   0837 9C                 3480 	sbc	a,h
   0838 F8 04              3481 	lda	hl,4(sp)
   083A 32                 3482 	ld      (hl-),a
   083B 73                 3483 	ld	(hl),e
                           3484 ;	genCast
                           3485 ;	AOP_STK for _is_ded_sloc0_1_0
                           3486 ;	AOP_STK for _is_ded__x_1_1
   083C 7E                 3487 	ld	a,(hl)
   083D F8 08              3488 	lda	hl,8(sp)
   083F 77                 3489 	ld	(hl),a
                           3490 ;	game.c 565
                           3491 ;	genPlus
                           3492 ;	genPlusIncr
   0840 03                 3493 	inc	bc
                           3494 ;	genPointerGet
   0841 0A                 3495 	ld	a,(bc)
   0842 4F                 3496 	ld	c,a
                           3497 ;	genCast
                           3498 ; Removed redundent load
   0843 06 00              3499 	ld	b,#0x00
                           3500 ;	genRightShift
   0845 CB 38              3501 	srl	b
   0847 CB 19              3502 	rr	c
   0849 CB 38              3503 	srl	b
   084B CB 19              3504 	rr	c
   084D CB 38              3505 	srl	b
   084F CB 19              3506 	rr	c
                           3507 ;	genMinus
   0851 0B                 3508 	dec	bc
   0852 0B                 3509 	dec	bc
                           3510 ;	genCast
                           3511 ;	AOP_STK for _is_ded__y_1_1
   0853 2B                 3512 	dec	hl
   0854 71                 3513 	ld	(hl),c
                           3514 ;	game.c 570
                           3515 ;	genCast
                           3516 ;	AOP_STK for _is_ded__x_1_1
                           3517 ;	AOP_STK for _is_ded_map_position_1_1
   0855 23                 3518 	inc	hl
   0856 7E                 3519 	ld	a,(hl)
   0857 F8 05              3520 	lda	hl,5(sp)
   0859 22                 3521 	ld	(hl+),a
   085A 36 00              3522 	ld	(hl),#0x00
                           3523 ;	game.c 571
                           3524 ;	genCast
                           3525 ;	AOP_STK for _is_ded__y_1_1
   085C 23                 3526 	inc	hl
   085D 4E                 3527 	ld	c,(hl)
   085E 06 00              3528 	ld	b,#0x00
                           3529 ;	genMult
   0860 59                 3530 	ld	e,c
   0861 50                 3531 	ld	d,b
   0862 6B                 3532 	ld	l,e
   0863 62                 3533 	ld	h,d
   0864 29                 3534 	add	hl,hl
   0865 29                 3535 	add	hl,hl
   0866 19                 3536 	add	hl,de
   0867 29                 3537 	add	hl,hl
   0868 29                 3538 	add	hl,hl
   0869 4D                 3539 	ld	c,l
   086A 44                 3540 	ld	b,h
                           3541 ;	genPlus
                           3542 ;	AOP_STK for _is_ded_map_position_1_1
                           3543 ;	Can't optimise plus by inc, falling back to the normal way
   086B F8 05              3544 	lda	hl,5(sp)
   086D 2A                 3545 	ld	a,(hl+)
   086E 66                 3546 	ld	h,(hl)
   086F 6F                 3547 	ld	l,a
   0870 09                 3548 	add	hl,bc
   0871 7D                 3549 	ld	a,l
   0872 54                 3550 	ld	d,h
   0873 F8 05              3551 	lda	hl,5(sp)
   0875 22                 3552 	ld	(hl+),a
   0876 72                 3553 	ld	(hl),d
                           3554 ;	game.c 573
                           3555 ;	genPlus
                           3556 ;	AOP_STK for _is_ded_map_position_1_1
                           3557 ;	Can't optimise plus by inc, falling back to the normal way
   0877 11 05 19           3558 	ld	de,#_map
   087A 2B                 3559 	dec	hl
   087B 2A                 3560 	ld	a,(hl+)
   087C 66                 3561 	ld	h,(hl)
   087D 6F                 3562 	ld	l,a
   087E 19                 3563 	add	hl,de
   087F 4D                 3564 	ld	c,l
   0880 44                 3565 	ld	b,h
                           3566 ;	genPointerGet
   0881 0A                 3567 	ld	a,(bc)
   0882 4F                 3568 	ld	c,a
                           3569 ;	genCast
                           3570 ; Removed redundent load
   0883 06 00              3571 	ld	b,#0x00
                           3572 ;	genCmpEq
                           3573 ; genCmpEq: left 2, right 2, result 0
   0885 79                 3574 	ld	a,c
   0886 FE 0B              3575 	cp	a,#0x0B
   0888 C2 92 08           3576 	jp	nz,00117$
   088B 78                 3577 	ld	a,b
   088C B7                 3578 	or	a,a
   088D C2 9B 08           3579 	jp	nz,00105$
   0890 18 03              3580 	jr	00118$
   0892                    3581 00117$:
   0892 C3 9B 08           3582 	jp	00105$
   0895                    3583 00118$:
                           3584 ;	game.c 577
                           3585 ;	genRet
   0895 11 01 00           3586 	ld	de,#0x0001
   0898 C3 9E 08           3587 	jp	00106$
                           3588 ;	game.c 578
                           3589 ;	genLabel
   089B                    3590 00105$:
                           3591 ;	game.c 579
                           3592 ;	genRet
   089B 11 00 00           3593 	ld	de,#0x0000
                           3594 ;	genLabel
   089E                    3595 00106$:
                           3596 ;	genEndFunction
   089E E8 09              3597 	lda	sp,9(sp)
   08A0 C9                 3598 	ret
   08A1                    3599 ___is_ded_end:
                           3600 ;	game.c 600
                           3601 ;	genLabel
                           3602 ;	genFunction
                           3603 ;	---------------------------------
                           3604 ; Function dog1_power
                           3605 ; ---------------------------------
   08A1                    3606 ___dog1_power_start:
   08A1                    3607 _dog1_power:
   08A1 E8 F8              3608 	lda	sp,-8(sp)
                           3609 ;	game.c 604
                           3610 ;	genAssign
                           3611 ;	AOP_HL for _player
   08A3 21 B3 1A           3612 	ld	hl,#_player
   08A6 4E                 3613 	ld	c,(hl)
   08A7 23                 3614 	inc	hl
   08A8 46                 3615 	ld	b,(hl)
                           3616 ;	genPlus
                           3617 ;	genPlusIncr
   08A9 03                 3618 	inc	bc
   08AA 03                 3619 	inc	bc
   08AB 03                 3620 	inc	bc
   08AC 03                 3621 	inc	bc
                           3622 ;	genPointerGet
   08AD 0A                 3623 	ld	a,(bc)
   08AE 4F                 3624 	ld	c,a
                           3625 ;	genAssign
                           3626 ;	AOP_HL for _player
                           3627 ;	AOP_STK for _dog1_power_sloc0_1_0
   08AF 2B                 3628 	dec	hl
   08B0 2A                 3629 	ld	a,(hl+)
   08B1 5E                 3630 	ld	e,(hl)
   08B2 F8 02              3631 	lda	hl,2(sp)
   08B4 22                 3632 	ld	(hl+),a
   08B5 73                 3633 	ld	(hl),e
                           3634 ;	genPlus
                           3635 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3636 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3637 ;	genPlusIncr
                           3638 ;	Can't optimise plus by inc, falling back to the normal way
   08B6 2B                 3639 	dec	hl
   08B7 5E                 3640 	ld	e,(hl)
   08B8 23                 3641 	inc	hl
   08B9 56                 3642 	ld	d,(hl)
   08BA 21 0B 00           3643 	ld	hl,#0x000B
   08BD 19                 3644 	add	hl,de
   08BE 7D                 3645 	ld	a,l
   08BF 54                 3646 	ld	d,h
   08C0 F8 00              3647 	lda	hl,0(sp)
                           3648 ;	genPointerGet
                           3649 ;	AOP_STK for _dog1_power_sloc1_1_0
   08C2 22                 3650 	ld	(hl+),a
   08C3 72                 3651 	ld	(hl),d
   08C4 5F                 3652 	ld	e,a
   08C5 1A                 3653 	ld	a,(de)
   08C6 47                 3654 	ld	b,a
                           3655 ;	genIpush
                           3656 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08C7 79                 3657 	ld	a,c
   08C8 F5                 3658 	push	af
   08C9 33                 3659 	inc	sp
                           3660 ;	genIpush
   08CA 78                 3661 	ld	a,b
   08CB F5                 3662 	push	af
   08CC 33                 3663 	inc	sp
                           3664 ;	genCall
   08CD CD 00 00           3665 	call	_set_sprite_tile
   08D0 E8 02              3666 	lda	sp,2(sp)
                           3667 ;	game.c 606
                           3668 ;	genAssign
                           3669 ;	AOP_HL for _player
   08D2 21 B3 1A           3670 	ld	hl,#_player
   08D5 4E                 3671 	ld	c,(hl)
   08D6 23                 3672 	inc	hl
   08D7 46                 3673 	ld	b,(hl)
                           3674 ;	genPlus
                           3675 ;	genPlusIncr
   08D8 03                 3676 	inc	bc
                           3677 ;	genPointerGet
   08D9 0A                 3678 	ld	a,(bc)
   08DA 4F                 3679 	ld	c,a
                           3680 ;	genAssign
                           3681 ;	AOP_HL for _player
                           3682 ;	AOP_STK for _dog1_power_sloc1_1_0
   08DB 2B                 3683 	dec	hl
   08DC 2A                 3684 	ld	a,(hl+)
   08DD 5E                 3685 	ld	e,(hl)
   08DE F8 00              3686 	lda	hl,0(sp)
   08E0 22                 3687 	ld	(hl+),a
   08E1 73                 3688 	ld	(hl),e
                           3689 ;	genPointerGet
                           3690 ;	AOP_STK for _dog1_power_sloc1_1_0
   08E2 2B                 3691 	dec	hl
   08E3 5E                 3692 	ld	e,(hl)
   08E4 23                 3693 	inc	hl
   08E5 56                 3694 	ld	d,(hl)
   08E6 1A                 3695 	ld	a,(de)
   08E7 47                 3696 	ld	b,a
                           3697 ;	genIpush
                           3698 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08E8 79                 3699 	ld	a,c
   08E9 F5                 3700 	push	af
   08EA 33                 3701 	inc	sp
                           3702 ;	genIpush
   08EB 78                 3703 	ld	a,b
   08EC F5                 3704 	push	af
   08ED 33                 3705 	inc	sp
                           3706 ;	genCall
   08EE CD CD 0D           3707 	call	_get_player_map_position
   08F1 42                 3708 	ld	b,d
   08F2 4B                 3709 	ld	c,e
   08F3 E8 02              3710 	lda	sp,2(sp)
                           3711 ;	genAssign
                           3712 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08F5 F8 06              3713 	lda	hl,6(sp)
   08F7 71                 3714 	ld	(hl),c
   08F8 23                 3715 	inc	hl
   08F9 70                 3716 	ld	(hl),b
                           3717 ;	game.c 608
                           3718 ;	genAssign
                           3719 ;	AOP_HL for _player
   08FA 21 B3 1A           3720 	ld	hl,#_player
   08FD 4E                 3721 	ld	c,(hl)
   08FE 23                 3722 	inc	hl
   08FF 46                 3723 	ld	b,(hl)
                           3724 ;	genPlus
                           3725 ;	genPlusIncr
                           3726 ;	Can't optimise plus by inc, falling back to the normal way
   0900 79                 3727 	ld	a,c
   0901 C6 08              3728 	add	a,#0x08
   0903 4F                 3729 	ld	c,a
   0904 78                 3730 	ld	a,b
   0905 CE 00              3731 	adc	a,#0x00
   0907 47                 3732 	ld	b,a
                           3733 ;	genPointerGet
   0908 0A                 3734 	ld	a,(bc)
                           3735 ;	genIpush
                           3736 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0909 4F                 3737 	ld	c,a
   090A F5                 3738 	push	af
   090B 33                 3739 	inc	sp
                           3740 ;	genIpush
                           3741 ;	AOP_STK for _dog1_power_map_position_block_1_1
   090C F8 07              3742 	lda	hl,7(sp)
   090E 2A                 3743 	ld	a,(hl+)
   090F 66                 3744 	ld	h,(hl)
   0910 6F                 3745 	ld	l,a
   0911 E5                 3746 	push	hl
                           3747 ;	genCall
   0912 CD 79 0B           3748 	call	__get_next_map_position
   0915 42                 3749 	ld	b,d
   0916 4B                 3750 	ld	c,e
   0917 E8 03              3751 	lda	sp,3(sp)
                           3752 ;	genAssign
                           3753 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0919 F8 06              3754 	lda	hl,6(sp)
   091B 71                 3755 	ld	(hl),c
   091C 23                 3756 	inc	hl
   091D 70                 3757 	ld	(hl),b
                           3758 ;	game.c 609
                           3759 ;	genAssign
                           3760 ;	AOP_HL for _player
   091E 21 B3 1A           3761 	ld	hl,#_player
   0921 4E                 3762 	ld	c,(hl)
   0922 23                 3763 	inc	hl
   0923 46                 3764 	ld	b,(hl)
                           3765 ;	genPlus
                           3766 ;	genPlusIncr
                           3767 ;	Can't optimise plus by inc, falling back to the normal way
   0924 79                 3768 	ld	a,c
   0925 C6 08              3769 	add	a,#0x08
   0927 4F                 3770 	ld	c,a
   0928 78                 3771 	ld	a,b
   0929 CE 00              3772 	adc	a,#0x00
   092B 47                 3773 	ld	b,a
                           3774 ;	genPointerGet
   092C 0A                 3775 	ld	a,(bc)
                           3776 ;	genIpush
                           3777 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   092D 4F                 3778 	ld	c,a
   092E F5                 3779 	push	af
   092F 33                 3780 	inc	sp
                           3781 ;	genIpush
                           3782 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0930 F8 07              3783 	lda	hl,7(sp)
   0932 2A                 3784 	ld	a,(hl+)
   0933 66                 3785 	ld	h,(hl)
   0934 6F                 3786 	ld	l,a
   0935 E5                 3787 	push	hl
                           3788 ;	genCall
   0936 CD 79 0B           3789 	call	__get_next_map_position
   0939 42                 3790 	ld	b,d
   093A 4B                 3791 	ld	c,e
   093B E8 03              3792 	lda	sp,3(sp)
                           3793 ;	genAssign
                           3794 ;	AOP_STK for _dog1_power_map_position_next_1_1
   093D F8 04              3795 	lda	hl,4(sp)
   093F 71                 3796 	ld	(hl),c
   0940 23                 3797 	inc	hl
   0941 70                 3798 	ld	(hl),b
                           3799 ;	game.c 612
                           3800 ;	genPlus
                           3801 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3802 ;	Can't optimise plus by inc, falling back to the normal way
   0942 11 05 19           3803 	ld	de,#_map
   0945 23                 3804 	inc	hl
   0946 2A                 3805 	ld	a,(hl+)
   0947 66                 3806 	ld	h,(hl)
   0948 6F                 3807 	ld	l,a
   0949 19                 3808 	add	hl,de
   094A 4D                 3809 	ld	c,l
   094B 44                 3810 	ld	b,h
                           3811 ;	genPointerGet
   094C 0A                 3812 	ld	a,(bc)
   094D 4F                 3813 	ld	c,a
                           3814 ;	genCast
                           3815 ; Removed redundent load
   094E 06 00              3816 	ld	b,#0x00
                           3817 ;	genCmpEq
                           3818 ; genCmpEq: left 2, right 2, result 0
   0950 79                 3819 	ld	a,c
   0951 FE 0F              3820 	cp	a,#0x0F
   0953 C2 5B 09           3821 	jp	nz,00137$
   0956 78                 3822 	ld	a,b
   0957 B7                 3823 	or	a,a
   0958 CA 6B 09           3824 	jp	z,00103$
   095B                    3825 00137$:
                           3826 ;	genCmpEq
                           3827 ; genCmpEq: left 2, right 2, result 0
   095B 79                 3828 	ld	a,c
   095C FE 2D              3829 	cp	a,#0x2D
   095E C2 68 09           3830 	jp	nz,00138$
   0961 78                 3831 	ld	a,b
   0962 B7                 3832 	or	a,a
   0963 C2 49 0B           3833 	jp	nz,00123$
   0966 18 03              3834 	jr	00139$
   0968                    3835 00138$:
   0968 C3 49 0B           3836 	jp	00123$
   096B                    3837 00139$:
                           3838 ;	game.c 626
                           3839 ;	genLabel
   096B                    3840 00103$:
                           3841 ;	game.c 618
                           3842 ;	genIpush
                           3843 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3844 ;	AOP_STK for _dog1_power_map_position_next_1_1
   096B F8 04              3845 	lda	hl,4(sp)
   096D 2A                 3846 	ld	a,(hl+)
   096E 66                 3847 	ld	h,(hl)
   096F 6F                 3848 	ld	l,a
   0970 E5                 3849 	push	hl
                           3850 ;	genCall
   0971 CD 6D 0F           3851 	call	_can_move_to_map_pos
   0974 42                 3852 	ld	b,d
   0975 4B                 3853 	ld	c,e
   0976 E8 02              3854 	lda	sp,2(sp)
                           3855 ;	genCmpEq
                           3856 ; genCmpEq: left 2, right 2, result 0
   0978 79                 3857 	ld	a,c
   0979 B0                 3858 	or	a,b
   097A CA 49 0B           3859 	jp	z,00123$
   097D                    3860 00140$:
                           3861 ;	game.c 626
                           3862 ;	genPlus
                           3863 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3864 ;	Can't optimise plus by inc, falling back to the normal way
   097D 11 05 19           3865 	ld	de,#_map
   0980 F8 04              3866 	lda	hl,4(sp)
   0982 2A                 3867 	ld	a,(hl+)
   0983 66                 3868 	ld	h,(hl)
   0984 6F                 3869 	ld	l,a
   0985 19                 3870 	add	hl,de
   0986 4D                 3871 	ld	c,l
   0987 44                 3872 	ld	b,h
                           3873 ;	genPointerGet
   0988 0A                 3874 	ld	a,(bc)
   0989 4F                 3875 	ld	c,a
                           3876 ;	genCast
                           3877 ; Removed redundent load
   098A 06 00              3878 	ld	b,#0x00
                           3879 ;	genCmpLt
   098C 79                 3880 	ld	a,c
   098D D6 0D              3881 	sub	a,#0x0D
   098F 78                 3882 	ld	a,b
   0990 DE 00              3883 	sbc	a,#0x00
   0992 DA BB 09           3884 	jp	c,00105$
                           3885 ;	game.c 627
                           3886 ;	genCmpEq
                           3887 ; genCmpEq: left 2, right 2, result 0
   0995 79                 3888 	ld	a,c
   0996 FE 2F              3889 	cp	a,#0x2F
   0998 C2 A0 09           3890 	jp	nz,00141$
   099B 78                 3891 	ld	a,b
   099C B7                 3892 	or	a,a
   099D CA BB 09           3893 	jp	z,00105$
   09A0                    3894 00141$:
                           3895 ;	game.c 628
                           3896 ;	genCmpEq
                           3897 ; genCmpEq: left 2, right 2, result 0
   09A0 79                 3898 	ld	a,c
   09A1 FE 30              3899 	cp	a,#0x30
   09A3 C2 AB 09           3900 	jp	nz,00142$
   09A6 78                 3901 	ld	a,b
   09A7 B7                 3902 	or	a,a
   09A8 CA BB 09           3903 	jp	z,00105$
   09AB                    3904 00142$:
                           3905 ;	game.c 629
                           3906 ;	genCmpEq
                           3907 ; genCmpEq: left 2, right 2, result 0
   09AB 79                 3908 	ld	a,c
   09AC FE 2A              3909 	cp	a,#0x2A
   09AE C2 B8 09           3910 	jp	nz,00143$
   09B1 78                 3911 	ld	a,b
   09B2 B7                 3912 	or	a,a
   09B3 C2 EF 09           3913 	jp	nz,00106$
   09B6 18 03              3914 	jr	00144$
   09B8                    3915 00143$:
   09B8 C3 EF 09           3916 	jp	00106$
   09BB                    3917 00144$:
                           3918 ;	genLabel
   09BB                    3919 00105$:
                           3920 ;	game.c 631
                           3921 ;	genAssign
                           3922 ;	AOP_HL for _player
                           3923 ;	AOP_STK for _dog1_power_sloc1_1_0
   09BB 21 B3 1A           3924 	ld	hl,#_player
   09BE 2A                 3925 	ld	a,(hl+)
   09BF 5E                 3926 	ld	e,(hl)
   09C0 F8 00              3927 	lda	hl,0(sp)
   09C2 22                 3928 	ld	(hl+),a
   09C3 73                 3929 	ld	(hl),e
                           3930 ;	genPlus
                           3931 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3932 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3933 ;	genPlusIncr
                           3934 ;	Can't optimise plus by inc, falling back to the normal way
   09C4 2B                 3935 	dec	hl
   09C5 5E                 3936 	ld	e,(hl)
   09C6 23                 3937 	inc	hl
   09C7 56                 3938 	ld	d,(hl)
   09C8 21 08 00           3939 	ld	hl,#0x0008
   09CB 19                 3940 	add	hl,de
   09CC 7D                 3941 	ld	a,l
   09CD 54                 3942 	ld	d,h
   09CE F8 02              3943 	lda	hl,2(sp)
                           3944 ;	genPointerGet
                           3945 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3946 ;	AOP_STK for _dog1_power_sloc1_1_0
   09D0 22                 3947 	ld	(hl+),a
   09D1 72                 3948 	ld	(hl),d
   09D2 5F                 3949 	ld	e,a
   09D3 1A                 3950 	ld	a,(de)
   09D4 F8 00              3951 	lda	hl,0(sp)
   09D6 77                 3952 	ld	(hl),a
                           3953 ;	genIpush
                           3954 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09D7 C5                 3955 	push	bc
                           3956 ;	AOP_STK for _dog1_power_map_position_next_1_1
   09D8 F8 06              3957 	lda	hl,6(sp)
   09DA 2A                 3958 	ld	a,(hl+)
   09DB 66                 3959 	ld	h,(hl)
   09DC 6F                 3960 	ld	l,a
   09DD E5                 3961 	push	hl
                           3962 ;	genIpush
                           3963 ;	AOP_STK for _dog1_power_sloc1_1_0
   09DE F8 04              3964 	lda	hl,4(sp)
   09E0 7E                 3965 	ld	a,(hl)
   09E1 F5                 3966 	push	af
   09E2 33                 3967 	inc	sp
                           3968 ;	genIpush
                           3969 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09E3 F8 0B              3970 	lda	hl,11(sp)
   09E5 2A                 3971 	ld	a,(hl+)
   09E6 66                 3972 	ld	h,(hl)
   09E7 6F                 3973 	ld	l,a
   09E8 E5                 3974 	push	hl
                           3975 ;	genCall
   09E9 CD 2D 0C           3976 	call	_dog1_power_apply
   09EC E8 05              3977 	lda	sp,5(sp)
   09EE C1                 3978 	pop	bc
                           3979 ;	genLabel
   09EF                    3980 00106$:
                           3981 ;	game.c 634
                           3982 ;	genCmpEq
                           3983 ; genCmpEq: left 2, right 2, result 0
   09EF 79                 3984 	ld	a,c
   09F0 FE 0D              3985 	cp	a,#0x0D
   09F2 C2 FA 09           3986 	jp	nz,00145$
   09F5 78                 3987 	ld	a,b
   09F6 B7                 3988 	or	a,a
   09F7 CA 0A 0A           3989 	jp	z,00113$
   09FA                    3990 00145$:
                           3991 ;	genCmpEq
                           3992 ; genCmpEq: left 2, right 2, result 0
   09FA 79                 3993 	ld	a,c
   09FB FE 0E              3994 	cp	a,#0x0E
   09FD C2 07 0A           3995 	jp	nz,00146$
   0A00 78                 3996 	ld	a,b
   0A01 B7                 3997 	or	a,a
   0A02 C2 49 0B           3998 	jp	nz,00123$
   0A05 18 03              3999 	jr	00147$
   0A07                    4000 00146$:
   0A07 C3 49 0B           4001 	jp	00123$
   0A0A                    4002 00147$:
                           4003 ;	game.c 636
                           4004 ;	genLabel
   0A0A                    4005 00113$:
                           4006 ;	genPlus
                           4007 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           4008 ;	Can't optimise plus by inc, falling back to the normal way
   0A0A 11 05 19           4009 	ld	de,#_map
   0A0D F8 04              4010 	lda	hl,4(sp)
   0A0F 2A                 4011 	ld	a,(hl+)
   0A10 66                 4012 	ld	h,(hl)
   0A11 6F                 4013 	ld	l,a
   0A12 19                 4014 	add	hl,de
   0A13 4D                 4015 	ld	c,l
   0A14 44                 4016 	ld	b,h
                           4017 ;	genPointerGet
   0A15 0A                 4018 	ld	a,(bc)
   0A16 4F                 4019 	ld	c,a
                           4020 ;	genCast
                           4021 ; Removed redundent load
   0A17 06 00              4022 	ld	b,#0x00
                           4023 ;	genCmpEq
                           4024 ; genCmpEq: left 2, right 2, result 0
   0A19 79                 4025 	ld	a,c
   0A1A FE 0D              4026 	cp	a,#0x0D
   0A1C C2 24 0A           4027 	jp	nz,00148$
   0A1F 78                 4028 	ld	a,b
   0A20 B7                 4029 	or	a,a
   0A21 CA 34 0A           4030 	jp	z,00114$
   0A24                    4031 00148$:
                           4032 ;	genCmpEq
                           4033 ; genCmpEq: left 2, right 2, result 0
   0A24 79                 4034 	ld	a,c
   0A25 FE 0E              4035 	cp	a,#0x0E
   0A27 C2 31 0A           4036 	jp	nz,00149$
   0A2A 78                 4037 	ld	a,b
   0A2B B7                 4038 	or	a,a
   0A2C C2 AF 0A           4039 	jp	nz,00115$
   0A2F 18 03              4040 	jr	00150$
   0A31                    4041 00149$:
   0A31 C3 AF 0A           4042 	jp	00115$
   0A34                    4043 00150$:
                           4044 ;	genLabel
   0A34                    4045 00114$:
                           4046 ;	game.c 638
                           4047 ;	genPlus
                           4048 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           4049 ;	Can't optimise plus by inc, falling back to the normal way
   0A34 11 05 19           4050 	ld	de,#_map
   0A37 F8 06              4051 	lda	hl,6(sp)
   0A39 2A                 4052 	ld	a,(hl+)
   0A3A 66                 4053 	ld	h,(hl)
   0A3B 6F                 4054 	ld	l,a
   0A3C 19                 4055 	add	hl,de
   0A3D 4D                 4056 	ld	c,l
   0A3E 44                 4057 	ld	b,h
                           4058 ;	genPointerGet
                           4059 ;	AOP_STK for _dog1_power_sloc1_1_0
   0A3F 0A                 4060 	ld	a,(bc)
   0A40 F8 00              4061 	lda	hl,0(sp)
   0A42 77                 4062 	ld	(hl),a
                           4063 ;	genCast
                           4064 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4065 ;	AOP_STK for _dog1_power_sloc0_1_0
   0A43 2A                 4066 	ld	a,(hl+)
   0A44 23                 4067 	inc	hl
   0A45 22                 4068 	ld	(hl+),a
   0A46 36 00              4069 	ld	(hl),#0x00
                           4070 ;	genCmpEq
                           4071 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4072 ; genCmpEq: left 2, right 2, result 0
   0A48 2B                 4073 	dec	hl
   0A49 7E                 4074 	ld	a,(hl)
   0A4A FE 0F              4075 	cp	a,#0x0F
   0A4C C2 57 0A           4076 	jp	nz,00151$
   0A4F 23                 4077 	inc	hl
   0A50 7E                 4078 	ld	a,(hl)
   0A51 B7                 4079 	or	a,a
   0A52 C2 5D 0A           4080 	jp	nz,00111$
   0A55 18 03              4081 	jr	00152$
   0A57                    4082 00151$:
   0A57 C3 5D 0A           4083 	jp	00111$
   0A5A                    4084 00152$:
                           4085 ;	game.c 639
                           4086 ;	genAssign (pointer)
   0A5A 3E 0D              4087 	ld	a,#0x0D
   0A5C 02                 4088 	ld	(bc),a
                           4089 ;	genLabel
   0A5D                    4090 00111$:
                           4091 ;	game.c 641
                           4092 ;	genAssign
                           4093 ;	AOP_HL for _player
   0A5D 21 B3 1A           4094 	ld	hl,#_player
   0A60 4E                 4095 	ld	c,(hl)
   0A61 23                 4096 	inc	hl
   0A62 46                 4097 	ld	b,(hl)
                           4098 ;	genPlus
                           4099 ;	genPlusIncr
                           4100 ;	Can't optimise plus by inc, falling back to the normal way
   0A63 79                 4101 	ld	a,c
   0A64 C6 08              4102 	add	a,#0x08
   0A66 4F                 4103 	ld	c,a
   0A67 78                 4104 	ld	a,b
   0A68 CE 00              4105 	adc	a,#0x00
   0A6A 47                 4106 	ld	b,a
                           4107 ;	genPointerGet
   0A6B 0A                 4108 	ld	a,(bc)
   0A6C 4F                 4109 	ld	c,a
                           4110 ;	genIpush
                           4111 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4112 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A6D F8 04              4113 	lda	hl,4(sp)
   0A6F 2A                 4114 	ld	a,(hl+)
   0A70 66                 4115 	ld	h,(hl)
   0A71 6F                 4116 	ld	l,a
   0A72 E5                 4117 	push	hl
                           4118 ;	genIpush
   0A73 79                 4119 	ld	a,c
   0A74 F5                 4120 	push	af
   0A75 33                 4121 	inc	sp
                           4122 ;	genIpush
                           4123 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A76 F8 09              4124 	lda	hl,9(sp)
   0A78 2A                 4125 	ld	a,(hl+)
   0A79 66                 4126 	ld	h,(hl)
   0A7A 6F                 4127 	ld	l,a
   0A7B E5                 4128 	push	hl
                           4129 ;	genCall
   0A7C CD 2D 0C           4130 	call	_dog1_power_apply
   0A7F E8 05              4131 	lda	sp,5(sp)
                           4132 ;	game.c 642
                           4133 ;	genAssign
                           4134 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           4135 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A81 F8 04              4136 	lda	hl,4(sp)
   0A83 2A                 4137 	ld	a,(hl+)
   0A84 5E                 4138 	ld	e,(hl)
   0A85 23                 4139 	inc	hl
   0A86 22                 4140 	ld	(hl+),a
   0A87 73                 4141 	ld	(hl),e
                           4142 ;	game.c 643
                           4143 ;	genAssign
                           4144 ;	AOP_HL for _player
   0A88 21 B3 1A           4145 	ld	hl,#_player
   0A8B 4E                 4146 	ld	c,(hl)
   0A8C 23                 4147 	inc	hl
   0A8D 46                 4148 	ld	b,(hl)
                           4149 ;	genPlus
                           4150 ;	genPlusIncr
                           4151 ;	Can't optimise plus by inc, falling back to the normal way
   0A8E 79                 4152 	ld	a,c
   0A8F C6 08              4153 	add	a,#0x08
   0A91 4F                 4154 	ld	c,a
   0A92 78                 4155 	ld	a,b
   0A93 CE 00              4156 	adc	a,#0x00
   0A95 47                 4157 	ld	b,a
                           4158 ;	genPointerGet
   0A96 0A                 4159 	ld	a,(bc)
                           4160 ;	genIpush
                           4161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A97 4F                 4162 	ld	c,a
   0A98 F5                 4163 	push	af
   0A99 33                 4164 	inc	sp
                           4165 ;	genIpush
                           4166 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A9A F8 05              4167 	lda	hl,5(sp)
   0A9C 2A                 4168 	ld	a,(hl+)
   0A9D 66                 4169 	ld	h,(hl)
   0A9E 6F                 4170 	ld	l,a
   0A9F E5                 4171 	push	hl
                           4172 ;	genCall
   0AA0 CD 79 0B           4173 	call	__get_next_map_position
   0AA3 42                 4174 	ld	b,d
   0AA4 4B                 4175 	ld	c,e
   0AA5 E8 03              4176 	lda	sp,3(sp)
                           4177 ;	genAssign
                           4178 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AA7 F8 04              4179 	lda	hl,4(sp)
   0AA9 71                 4180 	ld	(hl),c
   0AAA 23                 4181 	inc	hl
   0AAB 70                 4182 	ld	(hl),b
                           4183 ;	genGoto
   0AAC C3 0A 0A           4184 	jp	00113$
                           4185 ;	genLabel
   0AAF                    4186 00115$:
                           4187 ;	game.c 646
                           4188 ;	genAssign
                           4189 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           4190 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0AAF F8 04              4191 	lda	hl,4(sp)
   0AB1 2A                 4192 	ld	a,(hl+)
   0AB2 5E                 4193 	ld	e,(hl)
   0AB3 23                 4194 	inc	hl
   0AB4 22                 4195 	ld	(hl+),a
   0AB5 73                 4196 	ld	(hl),e
                           4197 ;	game.c 647
                           4198 ;	genAssign
                           4199 ;	AOP_HL for _player
   0AB6 21 B3 1A           4200 	ld	hl,#_player
   0AB9 4E                 4201 	ld	c,(hl)
   0ABA 23                 4202 	inc	hl
   0ABB 46                 4203 	ld	b,(hl)
                           4204 ;	genPlus
                           4205 ;	genPlusIncr
                           4206 ;	Can't optimise plus by inc, falling back to the normal way
   0ABC 79                 4207 	ld	a,c
   0ABD C6 08              4208 	add	a,#0x08
   0ABF 4F                 4209 	ld	c,a
   0AC0 78                 4210 	ld	a,b
   0AC1 CE 00              4211 	adc	a,#0x00
   0AC3 47                 4212 	ld	b,a
                           4213 ;	genPointerGet
   0AC4 0A                 4214 	ld	a,(bc)
                           4215 ;	genIpush
                           4216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AC5 4F                 4217 	ld	c,a
   0AC6 F5                 4218 	push	af
   0AC7 33                 4219 	inc	sp
                           4220 ;	genIpush
                           4221 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AC8 F8 05              4222 	lda	hl,5(sp)
   0ACA 2A                 4223 	ld	a,(hl+)
   0ACB 66                 4224 	ld	h,(hl)
   0ACC 6F                 4225 	ld	l,a
   0ACD E5                 4226 	push	hl
                           4227 ;	genCall
   0ACE CD 79 0B           4228 	call	__get_next_map_position
   0AD1 42                 4229 	ld	b,d
   0AD2 4B                 4230 	ld	c,e
   0AD3 E8 03              4231 	lda	sp,3(sp)
                           4232 ;	genAssign
                           4233 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AD5 F8 04              4234 	lda	hl,4(sp)
   0AD7 71                 4235 	ld	(hl),c
   0AD8 23                 4236 	inc	hl
   0AD9 70                 4237 	ld	(hl),b
                           4238 ;	game.c 648
                           4239 ;	genIpush
                           4240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4241 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0ADA 2B                 4242 	dec	hl
   0ADB 2A                 4243 	ld	a,(hl+)
   0ADC 66                 4244 	ld	h,(hl)
   0ADD 6F                 4245 	ld	l,a
   0ADE E5                 4246 	push	hl
                           4247 ;	genCall
   0ADF CD 6D 0F           4248 	call	_can_move_to_map_pos
   0AE2 42                 4249 	ld	b,d
   0AE3 4B                 4250 	ld	c,e
   0AE4 E8 02              4251 	lda	sp,2(sp)
                           4252 ;	genIfx
   0AE6 79                 4253 	ld	a,c
   0AE7 B0                 4254 	or	a,b
   0AE8 CA 49 0B           4255 	jp	z,00123$
                           4256 ;	game.c 649
                           4257 ;	genPlus
                           4258 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           4259 ;	Can't optimise plus by inc, falling back to the normal way
   0AEB 11 05 19           4260 	ld	de,#_map
   0AEE F8 06              4261 	lda	hl,6(sp)
   0AF0 2A                 4262 	ld	a,(hl+)
   0AF1 66                 4263 	ld	h,(hl)
   0AF2 6F                 4264 	ld	l,a
   0AF3 19                 4265 	add	hl,de
   0AF4 4D                 4266 	ld	c,l
   0AF5 44                 4267 	ld	b,h
                           4268 ;	genPointerGet
                           4269 ;	AOP_STK for _dog1_power_sloc1_1_0
   0AF6 0A                 4270 	ld	a,(bc)
   0AF7 F8 00              4271 	lda	hl,0(sp)
   0AF9 77                 4272 	ld	(hl),a
                           4273 ;	genCast
                           4274 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4275 ;	AOP_STK for _dog1_power_sloc0_1_0
   0AFA 2A                 4276 	ld	a,(hl+)
   0AFB 23                 4277 	inc	hl
   0AFC 22                 4278 	ld	(hl+),a
   0AFD 36 00              4279 	ld	(hl),#0x00
                           4280 ;	genCmpEq
                           4281 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4282 ; genCmpEq: left 2, right 2, result 0
   0AFF 2B                 4283 	dec	hl
   0B00 7E                 4284 	ld	a,(hl)
   0B01 FE 0F              4285 	cp	a,#0x0F
   0B03 C2 0E 0B           4286 	jp	nz,00153$
   0B06 23                 4287 	inc	hl
   0B07 7E                 4288 	ld	a,(hl)
   0B08 B7                 4289 	or	a,a
   0B09 C2 49 0B           4290 	jp	nz,00123$
   0B0C 18 03              4291 	jr	00154$
   0B0E                    4292 00153$:
   0B0E C3 49 0B           4293 	jp	00123$
   0B11                    4294 00154$:
                           4295 ;	game.c 650
                           4296 ;	genAssign (pointer)
   0B11 3E 0D              4297 	ld	a,#0x0D
   0B13 02                 4298 	ld	(bc),a
                           4299 ;	game.c 651
                           4300 ;	genIpush
                           4301 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B14 21 05 19           4302 	ld	hl,#_map
   0B17 E5                 4303 	push	hl
                           4304 ;	genIpush
   0B18 21 14 12           4305 	ld	hl,#0x1214
   0B1B E5                 4306 	push	hl
                           4307 ;	genIpush
   0B1C 21 00 00           4308 	ld	hl,#0x0000
   0B1F E5                 4309 	push	hl
                           4310 ;	genCall
   0B20 CD 00 00           4311 	call	_set_bkg_tiles
   0B23 E8 06              4312 	lda	sp,6(sp)
                           4313 ;	game.c 652
                           4314 ;	genAssign
                           4315 ;	AOP_HL for _player
   0B25 21 B3 1A           4316 	ld	hl,#_player
   0B28 4E                 4317 	ld	c,(hl)
   0B29 23                 4318 	inc	hl
   0B2A 46                 4319 	ld	b,(hl)
                           4320 ;	genPlus
                           4321 ;	genPlusIncr
                           4322 ;	Can't optimise plus by inc, falling back to the normal way
   0B2B 79                 4323 	ld	a,c
   0B2C C6 08              4324 	add	a,#0x08
   0B2E 4F                 4325 	ld	c,a
   0B2F 78                 4326 	ld	a,b
   0B30 CE 00              4327 	adc	a,#0x00
   0B32 47                 4328 	ld	b,a
                           4329 ;	genPointerGet
   0B33 0A                 4330 	ld	a,(bc)
   0B34 4F                 4331 	ld	c,a
                           4332 ;	genIpush
                           4333 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4334 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0B35 F8 04              4335 	lda	hl,4(sp)
   0B37 2A                 4336 	ld	a,(hl+)
   0B38 66                 4337 	ld	h,(hl)
   0B39 6F                 4338 	ld	l,a
   0B3A E5                 4339 	push	hl
                           4340 ;	genIpush
   0B3B 79                 4341 	ld	a,c
   0B3C F5                 4342 	push	af
   0B3D 33                 4343 	inc	sp
                           4344 ;	genIpush
                           4345 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0B3E F8 09              4346 	lda	hl,9(sp)
   0B40 2A                 4347 	ld	a,(hl+)
   0B41 66                 4348 	ld	h,(hl)
   0B42 6F                 4349 	ld	l,a
   0B43 E5                 4350 	push	hl
                           4351 ;	genCall
   0B44 CD 2D 0C           4352 	call	_dog1_power_apply
   0B47 E8 05              4353 	lda	sp,5(sp)
                           4354 ;	game.c 663
                           4355 ;	genLabel
   0B49                    4356 00123$:
                           4357 ;	game.c 668
                           4358 ;	genAssign
                           4359 ;	AOP_HL for _player
   0B49 21 B3 1A           4360 	ld	hl,#_player
   0B4C 4E                 4361 	ld	c,(hl)
   0B4D 23                 4362 	inc	hl
   0B4E 46                 4363 	ld	b,(hl)
                           4364 ;	genPlus
                           4365 ;	genPlusIncr
   0B4F 03                 4366 	inc	bc
   0B50 03                 4367 	inc	bc
                           4368 ;	genPointerGet
   0B51 0A                 4369 	ld	a,(bc)
   0B52 4F                 4370 	ld	c,a
                           4371 ;	genAssign
                           4372 ;	AOP_HL for _player
                           4373 ;	AOP_STK for _dog1_power_sloc1_1_0
   0B53 2B                 4374 	dec	hl
   0B54 2A                 4375 	ld	a,(hl+)
   0B55 5E                 4376 	ld	e,(hl)
   0B56 F8 00              4377 	lda	hl,0(sp)
   0B58 22                 4378 	ld	(hl+),a
   0B59 73                 4379 	ld	(hl),e
                           4380 ;	genPlus
                           4381 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4382 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4383 ;	genPlusIncr
                           4384 ;	Can't optimise plus by inc, falling back to the normal way
   0B5A 2B                 4385 	dec	hl
   0B5B 5E                 4386 	ld	e,(hl)
   0B5C 23                 4387 	inc	hl
   0B5D 56                 4388 	ld	d,(hl)
   0B5E 21 0B 00           4389 	ld	hl,#0x000B
   0B61 19                 4390 	add	hl,de
   0B62 7D                 4391 	ld	a,l
   0B63 54                 4392 	ld	d,h
   0B64 F8 02              4393 	lda	hl,2(sp)
                           4394 ;	genPointerGet
                           4395 ;	AOP_STK for _dog1_power_sloc0_1_0
   0B66 22                 4396 	ld	(hl+),a
   0B67 72                 4397 	ld	(hl),d
   0B68 5F                 4398 	ld	e,a
   0B69 1A                 4399 	ld	a,(de)
   0B6A 47                 4400 	ld	b,a
                           4401 ;	genIpush
                           4402 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B6B 79                 4403 	ld	a,c
   0B6C F5                 4404 	push	af
   0B6D 33                 4405 	inc	sp
                           4406 ;	genIpush
   0B6E 78                 4407 	ld	a,b
   0B6F F5                 4408 	push	af
   0B70 33                 4409 	inc	sp
                           4410 ;	genCall
   0B71 CD 00 00           4411 	call	_set_sprite_tile
   0B74 E8 02              4412 	lda	sp,2(sp)
                           4413 ;	genLabel
   0B76                    4414 00124$:
                           4415 ;	genEndFunction
   0B76 E8 08              4416 	lda	sp,8(sp)
   0B78 C9                 4417 	ret
   0B79                    4418 ___dog1_power_end:
                           4419 ;	game.c 671
                           4420 ;	genLabel
                           4421 ;	genFunction
                           4422 ;	---------------------------------
                           4423 ; Function _get_next_map_position
                           4424 ; ---------------------------------
   0B79                    4425 ____get_next_map_position_start:
   0B79                    4426 __get_next_map_position:
   0B79 E8 FE              4427 	lda	sp,-2(sp)
                           4428 ;	game.c 672
                           4429 ;	genCmpLt
                           4430 ;	AOP_STK for 
   0B7B F8 06              4431 	lda	hl,6(sp)
   0B7D 7E                 4432 	ld	a,(hl)
   0B7E FE 01              4433 	cp	#0x01
   0B80 DA 25 0C           4434 	jp	c,00113$
                           4435 ;	genCmpGt
                           4436 ;	AOP_STK for 
   0B83 3E 04              4437 	ld	a,#0x04
   0B85 96                 4438 	sub	a,(hl)
   0B86 DA 25 0C           4439 	jp	c,00113$
                           4440 ;	genMinus
                           4441 ;	AOP_STK for 
   0B89 7E                 4442 	ld	a,(hl)
   0B8A C6 FF              4443 	add	a,#0xFF
   0B8C 4F                 4444 	ld	c,a
                           4445 ;	genJumpTab
   0B8D 59                 4446 	ld	e,c
   0B8E 16 00              4447 	ld	d,#0x00
   0B90 21 97 0B           4448 	ld	hl,#00122$
   0B93 19                 4449 	add	hl,de
   0B94 19                 4450 	add	hl,de
   0B95 19                 4451 	add	hl,de
   0B96 E9                 4452 	jp	(hl)
   0B97                    4453 00122$:
   0B97 C3 A3 0B           4454 	jp	00103$
   0B9A C3 C2 0B           4455 	jp	00106$
   0B9D C3 E8 0B           4456 	jp	00109$
   0BA0 C3 05 0C           4457 	jp	00112$
                           4458 ;	game.c 677
                           4459 ;	genLabel
   0BA3                    4460 00103$:
                           4461 ;	game.c 674
                           4462 ;	genCmpGt
                           4463 ;	AOP_STK for 
   0BA3 3E 14              4464 	ld	a,#0x14
   0BA5 F8 04              4465 	lda	hl,4(sp)
   0BA7 96                 4466 	sub	a,(hl)
   0BA8 3E 00              4467 	ld	a,#0x00
   0BAA 23                 4468 	inc	hl
   0BAB 9E                 4469 	sbc	a,(hl)
   0BAC D2 25 0C           4470 	jp	nc,00113$
                           4471 ;	game.c 675
                           4472 ;	genMinus
                           4473 ;	AOP_STK for 
   0BAF 2B                 4474 	dec	hl
   0BB0 5E                 4475 	ld	e,(hl)
   0BB1 23                 4476 	inc	hl
   0BB2 56                 4477 	ld	d,(hl)
   0BB3 21 14 00           4478 	ld	hl,#0x0014
   0BB6 7B                 4479 	ld	a,e
   0BB7 95                 4480 	sub	a,l
   0BB8 5F                 4481 	ld	e,a
   0BB9 7A                 4482 	ld	a,d
   0BBA 9C                 4483 	sbc	a,h
   0BBB F8 05              4484 	lda	hl,5(sp)
   0BBD 32                 4485 	ld      (hl-),a
   0BBE 73                 4486 	ld	(hl),e
                           4487 ;	game.c 677
                           4488 ;	genGoto
   0BBF C3 25 0C           4489 	jp	00113$
                           4490 ;	game.c 682
                           4491 ;	genLabel
   0BC2                    4492 00106$:
                           4493 ;	game.c 679
                           4494 ;	genPlus
                           4495 ;	AOP_STK for 
                           4496 ;	genPlusIncr
   0BC2 F8 04              4497 	lda	hl,4(sp)
   0BC4 4E                 4498 	ld	c,(hl)
   0BC5 23                 4499 	inc	hl
   0BC6 46                 4500 	ld	b,(hl)
   0BC7 03                 4501 	inc	bc
                           4502 ;	genIpush
                           4503 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BC8 C5                 4504 	push	bc
   0BC9 21 14 00           4505 	ld	hl,#0x0014
   0BCC E5                 4506 	push	hl
                           4507 ;	genIpush
   0BCD C5                 4508 	push	bc
                           4509 ;	genCall
   0BCE CD 00 00           4510 	call	__moduint_rrx_s
                           4511 ;	AOP_STK for __get_next_map_position_sloc0_1_0
   0BD1 F8 07              4512 	lda	hl,7(sp)
   0BD3 72                 4513 	ld	(hl),d
   0BD4 2B                 4514 	dec	hl
   0BD5 73                 4515 	ld	(hl),e
   0BD6 E8 04              4516 	lda	sp,4(sp)
   0BD8 C1                 4517 	pop	bc
                           4518 ;	genCmpEq
                           4519 ;	AOP_STK for __get_next_map_position_sloc0_1_0
                           4520 ; genCmpEq: left 2, right 2, result 0
   0BD9 F8 00              4521 	lda	hl,0(sp)
   0BDB 2A                 4522 	ld	a,(hl+)
   0BDC B6                 4523 	or	a,(hl)
   0BDD CA 25 0C           4524 	jp	z,00113$
   0BE0                    4525 00123$:
                           4526 ;	game.c 680
                           4527 ;	genAssign
                           4528 ;	(registers are the same)
                           4529 ;	genAssign
                           4530 ;	AOP_STK for 
   0BE0 F8 04              4531 	lda	hl,4(sp)
   0BE2 71                 4532 	ld	(hl),c
   0BE3 23                 4533 	inc	hl
   0BE4 70                 4534 	ld	(hl),b
                           4535 ;	game.c 682
                           4536 ;	genGoto
   0BE5 C3 25 0C           4537 	jp	00113$
                           4538 ;	game.c 687
                           4539 ;	genLabel
   0BE8                    4540 00109$:
                           4541 ;	game.c 684
                           4542 ;	genCmpLt
                           4543 ;	AOP_STK for 
   0BE8 F8 04              4544 	lda	hl,4(sp)
   0BEA 7E                 4545 	ld	a,(hl)
   0BEB D6 54              4546 	sub	a,#0x54
   0BED 23                 4547 	inc	hl
   0BEE 7E                 4548 	ld	a,(hl)
   0BEF DE 01              4549 	sbc	a,#0x01
   0BF1 D2 25 0C           4550 	jp	nc,00113$
                           4551 ;	game.c 685
                           4552 ;	genPlus
                           4553 ;	AOP_STK for 
                           4554 ;	genPlusIncr
                           4555 ;	Can't optimise plus by inc, falling back to the normal way
   0BF4 2B                 4556 	dec	hl
   0BF5 5E                 4557 	ld	e,(hl)
   0BF6 23                 4558 	inc	hl
   0BF7 56                 4559 	ld	d,(hl)
   0BF8 21 14 00           4560 	ld	hl,#0x0014
   0BFB 19                 4561 	add	hl,de
   0BFC 7D                 4562 	ld	a,l
   0BFD 54                 4563 	ld	d,h
   0BFE F8 04              4564 	lda	hl,4(sp)
   0C00 22                 4565 	ld	(hl+),a
   0C01 72                 4566 	ld	(hl),d
                           4567 ;	game.c 687
                           4568 ;	genGoto
   0C02 C3 25 0C           4569 	jp	00113$
                           4570 ;	game.c 693
                           4571 ;	genLabel
   0C05                    4572 00112$:
                           4573 ;	game.c 689
                           4574 ;	genIpush
                           4575 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C05 21 14 00           4576 	ld	hl,#0x0014
   0C08 E5                 4577 	push	hl
                           4578 ;	genIpush
                           4579 ;	AOP_STK for 
   0C09 F8 06              4580 	lda	hl,6(sp)
   0C0B 2A                 4581 	ld	a,(hl+)
   0C0C 66                 4582 	ld	h,(hl)
   0C0D 6F                 4583 	ld	l,a
   0C0E E5                 4584 	push	hl
                           4585 ;	genCall
   0C0F CD 00 00           4586 	call	__moduint_rrx_s
   0C12 42                 4587 	ld	b,d
   0C13 4B                 4588 	ld	c,e
   0C14 E8 04              4589 	lda	sp,4(sp)
                           4590 ;	genCmpEq
                           4591 ; genCmpEq: left 2, right 2, result 0
   0C16 79                 4592 	ld	a,c
   0C17 B0                 4593 	or	a,b
   0C18 CA 25 0C           4594 	jp	z,00113$
   0C1B                    4595 00124$:
                           4596 ;	game.c 690
                           4597 ;	genMinus
                           4598 ;	AOP_STK for 
   0C1B F8 04              4599 	lda	hl,4(sp)
   0C1D 5E                 4600 	ld	e,(hl)
   0C1E 23                 4601 	inc	hl
   0C1F 56                 4602 	ld	d,(hl)
   0C20 1B                 4603 	dec	de
   0C21 2B                 4604 	dec	hl
   0C22 73                 4605 	ld	(hl),e
   0C23 23                 4606 	inc	hl
   0C24 72                 4607 	ld	(hl),d
                           4608 ;	game.c 694
                           4609 ;	genLabel
   0C25                    4610 00113$:
                           4611 ;	game.c 695
                           4612 ;	genRet
                           4613 ;	AOP_STK for 
   0C25 F8 04              4614 	lda	hl,4(sp)
   0C27 5E                 4615 	ld	e,(hl)
   0C28 23                 4616 	inc	hl
   0C29 56                 4617 	ld	d,(hl)
                           4618 ;	genLabel
   0C2A                    4619 00114$:
                           4620 ;	genEndFunction
   0C2A E8 02              4621 	lda	sp,2(sp)
   0C2C C9                 4622 	ret
   0C2D                    4623 ____get_next_map_position_end:
                           4624 ;	game.c 698
                           4625 ;	genLabel
                           4626 ;	genFunction
                           4627 ;	---------------------------------
                           4628 ; Function dog1_power_apply
                           4629 ; ---------------------------------
   0C2D                    4630 ___dog1_power_apply_start:
   0C2D                    4631 _dog1_power_apply:
   0C2D E8 F9              4632 	lda	sp,-7(sp)
                           4633 ;	game.c 704
                           4634 ;	genPlus
                           4635 ;	AOP_STK for 
                           4636 ;	Can't optimise plus by inc, falling back to the normal way
   0C2F 11 05 19           4637 	ld	de,#_map
   0C32 F8 09              4638 	lda	hl,9(sp)
   0C34 2A                 4639 	ld	a,(hl+)
   0C35 66                 4640 	ld	h,(hl)
   0C36 6F                 4641 	ld	l,a
   0C37 19                 4642 	add	hl,de
   0C38 4D                 4643 	ld	c,l
   0C39 44                 4644 	ld	b,h
                           4645 ;	genPointerGet
                           4646 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0C3A 0A                 4647 	ld	a,(bc)
   0C3B F8 04              4648 	lda	hl,4(sp)
                           4649 ;	genCast
                           4650 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4651 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4652 ; Removed redundent load
   0C3D 32                 4653 	ld      (hl-),a
   0C3E 2B                 4654 	dec	hl
   0C3F 22                 4655 	ld	(hl+),a
   0C40 36 00              4656 	ld	(hl),#0x00
                           4657 ;	genCmpEq
                           4658 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4659 ; genCmpEq: left 2, right 2, result 0
   0C42 2B                 4660 	dec	hl
   0C43 7E                 4661 	ld	a,(hl)
   0C44 FE 2D              4662 	cp	a,#0x2D
   0C46 C2 51 0C           4663 	jp	nz,00129$
   0C49 23                 4664 	inc	hl
   0C4A 7E                 4665 	ld	a,(hl)
   0C4B B7                 4666 	or	a,a
   0C4C C2 57 0C           4667 	jp	nz,00102$
   0C4F 18 03              4668 	jr	00130$
   0C51                    4669 00129$:
   0C51 C3 57 0C           4670 	jp	00102$
   0C54                    4671 00130$:
                           4672 ;	game.c 705
                           4673 ;	genAssign (pointer)
   0C54 3E 2F              4674 	ld	a,#0x2F
   0C56 02                 4675 	ld	(bc),a
                           4676 ;	genLabel
   0C57                    4677 00102$:
                           4678 ;	game.c 707
                           4679 ;	genPointerGet
                           4680 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0C57 0A                 4681 	ld	a,(bc)
   0C58 F8 02              4682 	lda	hl,2(sp)
                           4683 ;	genCast
                           4684 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4685 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4686 ; Removed redundent load
   0C5A 32                 4687 	ld      (hl-),a
   0C5B 2B                 4688 	dec	hl
   0C5C 22                 4689 	ld	(hl+),a
   0C5D 36 00              4690 	ld	(hl),#0x00
                           4691 ;	genCmpEq
                           4692 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4693 ; genCmpEq: left 2, right 2, result 0
   0C5F 2B                 4694 	dec	hl
   0C60 7E                 4695 	ld	a,(hl)
   0C61 FE 0F              4696 	cp	a,#0x0F
   0C63 C2 6E 0C           4697 	jp	nz,00131$
   0C66 23                 4698 	inc	hl
   0C67 7E                 4699 	ld	a,(hl)
   0C68 B7                 4700 	or	a,a
   0C69 C2 74 0C           4701 	jp	nz,00104$
   0C6C 18 03              4702 	jr	00132$
   0C6E                    4703 00131$:
   0C6E C3 74 0C           4704 	jp	00104$
   0C71                    4705 00132$:
                           4706 ;	game.c 708
                           4707 ;	genAssign (pointer)
   0C71 3E 0D              4708 	ld	a,#0x0D
   0C73 02                 4709 	ld	(bc),a
                           4710 ;	genLabel
   0C74                    4711 00104$:
                           4712 ;	game.c 710
                           4713 ;	genIpush
                           4714 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C74 21 05 19           4715 	ld	hl,#_map
   0C77 E5                 4716 	push	hl
                           4717 ;	genIpush
   0C78 21 14 12           4718 	ld	hl,#0x1214
   0C7B E5                 4719 	push	hl
                           4720 ;	genIpush
   0C7C 21 00 00           4721 	ld	hl,#0x0000
   0C7F E5                 4722 	push	hl
                           4723 ;	genCall
   0C80 CD 00 00           4724 	call	_set_bkg_tiles
   0C83 E8 06              4725 	lda	sp,6(sp)
                           4726 ;	game.c 713
                           4727 ;	genIpush
                           4728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C85 21 14 00           4729 	ld	hl,#0x0014
   0C88 E5                 4730 	push	hl
                           4731 ;	genIpush
                           4732 ;	AOP_STK for 
   0C89 F8 0B              4733 	lda	hl,11(sp)
   0C8B 2A                 4734 	ld	a,(hl+)
   0C8C 66                 4735 	ld	h,(hl)
   0C8D 6F                 4736 	ld	l,a
   0C8E E5                 4737 	push	hl
                           4738 ;	genCall
   0C8F CD 00 00           4739 	call	__divuint_rrx_s
   0C92 42                 4740 	ld	b,d
   0C93 4B                 4741 	ld	c,e
   0C94 E8 04              4742 	lda	sp,4(sp)
                           4743 ;	genLeftShift
   0C96 3E 04              4744 	ld	a,#0x03+1
   0C98 18 04              4745 	jr	00134$
   0C9A                    4746 00133$:
   0C9A CB 21              4747 	sla	c
   0C9C CB 10              4748 	rl	b
   0C9E                    4749 00134$:
   0C9E 3D                 4750 	dec	a
   0C9F 20 F9              4751 	jr	nz,00133$
                           4752 ;	genPlus
                           4753 ;	genPlusIncr
                           4754 ;	Can't optimise plus by inc, falling back to the normal way
   0CA1 79                 4755 	ld	a,c
   0CA2 C6 10              4756 	add	a,#0x10
   0CA4 4F                 4757 	ld	c,a
   0CA5 78                 4758 	ld	a,b
   0CA6 CE 00              4759 	adc	a,#0x00
   0CA8 47                 4760 	ld	b,a
                           4761 ;	genCast
                           4762 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CA9 F8 06              4763 	lda	hl,6(sp)
   0CAB 71                 4764 	ld	(hl),c
                           4765 ;	game.c 714
                           4766 ;	genIpush
                           4767 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CAC 21 14 00           4768 	ld	hl,#0x0014
   0CAF E5                 4769 	push	hl
                           4770 ;	genIpush
                           4771 ;	AOP_STK for 
   0CB0 F8 0B              4772 	lda	hl,11(sp)
   0CB2 2A                 4773 	ld	a,(hl+)
   0CB3 66                 4774 	ld	h,(hl)
   0CB4 6F                 4775 	ld	l,a
   0CB5 E5                 4776 	push	hl
                           4777 ;	genCall
   0CB6 CD 00 00           4778 	call	__moduint_rrx_s
   0CB9 4A                 4779 	ld	c,d
   0CBA 43                 4780 	ld	b,e
   0CBB E8 04              4781 	lda	sp,4(sp)
                           4782 ;	genLeftShift
   0CBD 3E 04              4783 	ld	a,#0x03+1
   0CBF 18 04              4784 	jr	00136$
   0CC1                    4785 00135$:
   0CC1 CB 20              4786 	sla	b
   0CC3 CB 11              4787 	rl	c
   0CC5                    4788 00136$:
   0CC5 3D                 4789 	dec	a
   0CC6 20 F9              4790 	jr	nz,00135$
                           4791 ;	genPlus
                           4792 ;	genPlusIncr
                           4793 ;	Can't optimise plus by inc, falling back to the normal way
   0CC8 78                 4794 	ld	a,b
   0CC9 C6 08              4795 	add	a,#0x08
   0CCB 47                 4796 	ld	b,a
   0CCC 79                 4797 	ld	a,c
   0CCD CE 00              4798 	adc	a,#0x00
   0CCF 4F                 4799 	ld	c,a
                           4800 ;	genCast
   0CD0 48                 4801 	ld	c,b
                           4802 ;	game.c 715
                           4803 ;	genIpush
                           4804 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CD1 C5                 4805 	push	bc
   0CD2 21 05 0F           4806 	ld	hl,#0x0F05
   0CD5 E5                 4807 	push	hl
                           4808 ;	genCall
   0CD6 CD 00 00           4809 	call	_set_sprite_tile
   0CD9 E8 02              4810 	lda	sp,2(sp)
   0CDB E1                 4811 	pop	hl
   0CDC 4D                 4812 	ld	c,l
                           4813 ;	game.c 718
                           4814 ;	genAssign
                           4815 ;	AOP_STK for _dog1_power_apply_i_1_1
   0CDD F8 05              4816 	lda	hl,5(sp)
   0CDF 36 04              4817 	ld	(hl),#0x04
                           4818 ;	game.c 719
                           4819 ;	genIpush
                           4820 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CE1 C5                 4821 	push	bc
                           4822 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CE2 23                 4823 	inc	hl
   0CE3 7E                 4824 	ld	a,(hl)
   0CE4 F5                 4825 	push	af
   0CE5 33                 4826 	inc	sp
                           4827 ;	genIpush
   0CE6 79                 4828 	ld	a,c
   0CE7 F5                 4829 	push	af
   0CE8 33                 4830 	inc	sp
                           4831 ;	genIpush
   0CE9 3E 05              4832 	ld	a,#0x05
   0CEB F5                 4833 	push	af
   0CEC 33                 4834 	inc	sp
                           4835 ;	genCall
   0CED CD 00 00           4836 	call	_move_sprite
   0CF0 E8 03              4837 	lda	sp,3(sp)
   0CF2 E1                 4838 	pop	hl
   0CF3 4D                 4839 	ld	c,l
                           4840 ;	game.c 721
                           4841 ;	genLabel
   0CF4                    4842 00110$:
                           4843 ;	genCmpEq
                           4844 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4845 ; genCmpEq: left 1, right 1, result 0
   0CF4 F8 05              4846 	lda	hl,5(sp)
   0CF6 7E                 4847 	ld	a,(hl)
   0CF7 B7                 4848 	or	a,a
   0CF8 CA 5E 0D           4849 	jp	z,00112$
   0CFB                    4850 00137$:
                           4851 ;	game.c 722
                           4852 ;	genCmpLt
                           4853 ;	AOP_STK for 
   0CFB F8 0B              4854 	lda	hl,11(sp)
   0CFD 7E                 4855 	ld	a,(hl)
   0CFE FE 01              4856 	cp	#0x01
   0D00 DA 38 0D           4857 	jp	c,00109$
                           4858 ;	genCmpGt
                           4859 ;	AOP_STK for 
   0D03 3E 04              4860 	ld	a,#0x04
   0D05 96                 4861 	sub	a,(hl)
   0D06 DA 38 0D           4862 	jp	c,00109$
                           4863 ;	genMinus
                           4864 ;	AOP_STK for 
   0D09 7E                 4865 	ld	a,(hl)
   0D0A C6 FF              4866 	add	a,#0xFF
   0D0C 47                 4867 	ld	b,a
                           4868 ;	genJumpTab
   0D0D 58                 4869 	ld	e,b
   0D0E 16 00              4870 	ld	d,#0x00
   0D10 21 17 0D           4871 	ld	hl,#00138$
   0D13 19                 4872 	add	hl,de
   0D14 19                 4873 	add	hl,de
   0D15 19                 4874 	add	hl,de
   0D16 E9                 4875 	jp	(hl)
   0D17                    4876 00138$:
   0D17 C3 23 0D           4877 	jp	00105$
   0D1A C3 2A 0D           4878 	jp	00106$
   0D1D C3 2F 0D           4879 	jp	00107$
   0D20 C3 36 0D           4880 	jp	00108$
                           4881 ;	game.c 724
                           4882 ;	genLabel
   0D23                    4883 00105$:
                           4884 ;	genMinus
                           4885 ;	AOP_STK for _dog1_power_apply_y_1_1
   0D23 F8 06              4886 	lda	hl,6(sp)
   0D25 35                 4887 	dec	(hl)
   0D26 35                 4888 	dec	(hl)
                           4889 ;	game.c 725
                           4890 ;	genGoto
   0D27 C3 38 0D           4891 	jp	00109$
                           4892 ;	game.c 727
                           4893 ;	genLabel
   0D2A                    4894 00106$:
                           4895 ;	genPlus
                           4896 ;	genPlusIncr
                           4897 ; Removed redundent load
   0D2A 0C                 4898 	inc	c
   0D2B 0C                 4899 	inc	c
                           4900 ;	game.c 728
                           4901 ;	genGoto
   0D2C C3 38 0D           4902 	jp	00109$
                           4903 ;	game.c 730
                           4904 ;	genLabel
   0D2F                    4905 00107$:
                           4906 ;	genPlus
                           4907 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4908 ;	genPlusIncr
   0D2F F8 06              4909 	lda	hl,6(sp)
   0D31 34                 4910 	inc	(hl)
   0D32 34                 4911 	inc	(hl)
                           4912 ;	game.c 731
                           4913 ;	genGoto
   0D33 C3 38 0D           4914 	jp	00109$
                           4915 ;	game.c 733
                           4916 ;	genLabel
   0D36                    4917 00108$:
                           4918 ;	genMinus
   0D36 0D                 4919 	dec	c
   0D37 0D                 4920 	dec	c
                           4921 ;	game.c 735
                           4922 ;	genLabel
   0D38                    4923 00109$:
                           4924 ;	game.c 736
                           4925 ;	genIpush
                           4926 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D38 C5                 4927 	push	bc
   0D39 3E 02              4928 	ld	a,#0x02
   0D3B F5                 4929 	push	af
   0D3C 33                 4930 	inc	sp
                           4931 ;	genCall
   0D3D CD 00 00           4932 	call	_performantDelay
   0D40 E8 01              4933 	lda	sp,1(sp)
   0D42 E1                 4934 	pop	hl
   0D43 4D                 4935 	ld	c,l
                           4936 ;	game.c 737
                           4937 ;	genIpush
                           4938 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D44 C5                 4939 	push	bc
                           4940 ;	AOP_STK for _dog1_power_apply_y_1_1
   0D45 F8 08              4941 	lda	hl,8(sp)
   0D47 7E                 4942 	ld	a,(hl)
   0D48 F5                 4943 	push	af
   0D49 33                 4944 	inc	sp
                           4945 ;	genIpush
   0D4A 79                 4946 	ld	a,c
   0D4B F5                 4947 	push	af
   0D4C 33                 4948 	inc	sp
                           4949 ;	genIpush
   0D4D 3E 05              4950 	ld	a,#0x05
   0D4F F5                 4951 	push	af
   0D50 33                 4952 	inc	sp
                           4953 ;	genCall
   0D51 CD 00 00           4954 	call	_move_sprite
   0D54 E8 03              4955 	lda	sp,3(sp)
   0D56 E1                 4956 	pop	hl
   0D57 4D                 4957 	ld	c,l
                           4958 ;	game.c 738
                           4959 ;	genMinus
                           4960 ;	AOP_STK for _dog1_power_apply_i_1_1
   0D58 F8 05              4961 	lda	hl,5(sp)
   0D5A 35                 4962 	dec	(hl)
                           4963 ;	genGoto
   0D5B C3 F4 0C           4964 	jp	00110$
                           4965 ;	genLabel
   0D5E                    4966 00112$:
                           4967 ;	game.c 743
                           4968 ;	genPlus
                           4969 ;	AOP_STK for 
                           4970 ;	Can't optimise plus by inc, falling back to the normal way
   0D5E 11 05 19           4971 	ld	de,#_map
   0D61 F8 0C              4972 	lda	hl,12(sp)
   0D63 2A                 4973 	ld	a,(hl+)
   0D64 66                 4974 	ld	h,(hl)
   0D65 6F                 4975 	ld	l,a
   0D66 19                 4976 	add	hl,de
   0D67 4D                 4977 	ld	c,l
   0D68 44                 4978 	ld	b,h
                           4979 ;	genPointerGet
                           4980 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0D69 0A                 4981 	ld	a,(bc)
   0D6A F8 00              4982 	lda	hl,0(sp)
                           4983 ;	genCmpLt
                           4984 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0D6C 77                 4985 	ld      (hl),a
                           4986 ; Removed redundent load
   0D6D FE 0B              4987 	cp	#0x0B
   0D6F DA A9 0D           4988 	jp	c,00117$
                           4989 ;	genCmpGt
                           4990 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0D72 3E 0E              4991 	ld	a,#0x0E
   0D74 96                 4992 	sub	a,(hl)
   0D75 DA A9 0D           4993 	jp	c,00117$
                           4994 ;	genMinus
                           4995 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4996 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0D78 7E                 4997 	ld	a,(hl)
   0D79 C6 F5              4998 	add	a,#0xF5
   0D7B 23                 4999 	inc	hl
   0D7C 23                 5000 	inc	hl
                           5001 ;	genJumpTab
                           5002 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0D7D 77                 5003 	ld      (hl),a
   0D7E 5F                 5004 	ld      e,a
   0D7F 16 00              5005 	ld	d,#0x00
   0D81 21 88 0D           5006 	ld	hl,#00139$
   0D84 19                 5007 	add	hl,de
   0D85 19                 5008 	add	hl,de
   0D86 19                 5009 	add	hl,de
   0D87 E9                 5010 	jp	(hl)
   0D88                    5011 00139$:
   0D88 C3 94 0D           5012 	jp	00113$
   0D8B C3 9A 0D           5013 	jp	00114$
   0D8E C3 9D 0D           5014 	jp	00115$
   0D91 C3 A3 0D           5015 	jp	00116$
                           5016 ;	game.c 745
                           5017 ;	genLabel
   0D94                    5018 00113$:
                           5019 ;	genAssign (pointer)
   0D94 3E 30              5020 	ld	a,#0x30
   0D96 02                 5021 	ld	(bc),a
                           5022 ;	game.c 746
                           5023 ;	genGoto
   0D97 C3 AC 0D           5024 	jp	00118$
                           5025 ;	game.c 748
                           5026 ;	genLabel
   0D9A                    5027 00114$:
                           5028 ;	genGoto
   0D9A C3 AC 0D           5029 	jp	00118$
                           5030 ;	game.c 750
                           5031 ;	genLabel
   0D9D                    5032 00115$:
                           5033 ;	genAssign (pointer)
   0D9D 3E 0F              5034 	ld	a,#0x0F
   0D9F 02                 5035 	ld	(bc),a
                           5036 ;	game.c 751
                           5037 ;	genGoto
   0DA0 C3 AC 0D           5038 	jp	00118$
                           5039 ;	game.c 753
                           5040 ;	genLabel
   0DA3                    5041 00116$:
                           5042 ;	genAssign (pointer)
   0DA3 3E 0C              5043 	ld	a,#0x0C
   0DA5 02                 5044 	ld	(bc),a
                           5045 ;	game.c 754
                           5046 ;	genGoto
   0DA6 C3 AC 0D           5047 	jp	00118$
                           5048 ;	game.c 756
                           5049 ;	genLabel
   0DA9                    5050 00117$:
                           5051 ;	genAssign (pointer)
   0DA9 3E 2D              5052 	ld	a,#0x2D
   0DAB 02                 5053 	ld	(bc),a
                           5054 ;	game.c 758
                           5055 ;	genLabel
   0DAC                    5056 00118$:
                           5057 ;	game.c 759
                           5058 ;	genIpush
                           5059 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DAC 21 05 19           5060 	ld	hl,#_map
   0DAF E5                 5061 	push	hl
                           5062 ;	genIpush
   0DB0 21 14 12           5063 	ld	hl,#0x1214
   0DB3 E5                 5064 	push	hl
                           5065 ;	genIpush
   0DB4 21 00 00           5066 	ld	hl,#0x0000
   0DB7 E5                 5067 	push	hl
                           5068 ;	genCall
   0DB8 CD 00 00           5069 	call	_set_bkg_tiles
   0DBB E8 06              5070 	lda	sp,6(sp)
                           5071 ;	game.c 760
                           5072 ;	genIpush
                           5073 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DBD 21 00 00           5074 	ld	hl,#0x0000
   0DC0 E5                 5075 	push	hl
                           5076 ;	genIpush
   0DC1 3E 05              5077 	ld	a,#0x05
   0DC3 F5                 5078 	push	af
   0DC4 33                 5079 	inc	sp
                           5080 ;	genCall
   0DC5 CD 00 00           5081 	call	_move_sprite
   0DC8 E8 03              5082 	lda	sp,3(sp)
                           5083 ;	genLabel
   0DCA                    5084 00119$:
                           5085 ;	genEndFunction
   0DCA E8 07              5086 	lda	sp,7(sp)
   0DCC C9                 5087 	ret
   0DCD                    5088 ___dog1_power_apply_end:
                           5089 ;	game.c 765
                           5090 ;	genLabel
                           5091 ;	genFunction
                           5092 ;	---------------------------------
                           5093 ; Function get_player_map_position
                           5094 ; ---------------------------------
   0DCD                    5095 ___get_player_map_position_start:
   0DCD                    5096 _get_player_map_position:
   0DCD E8 FC              5097 	lda	sp,-4(sp)
                           5098 ;	game.c 773
                           5099 ;	genCast
                           5100 ;	AOP_STK for 
   0DCF F8 06              5101 	lda	hl,6(sp)
   0DD1 4E                 5102 	ld	c,(hl)
   0DD2 06 00              5103 	ld	b,#0x00
                           5104 ;	genRightShift
   0DD4 CB 38              5105 	srl	b
   0DD6 CB 19              5106 	rr	c
   0DD8 CB 38              5107 	srl	b
   0DDA CB 19              5108 	rr	c
   0DDC CB 38              5109 	srl	b
   0DDE CB 19              5110 	rr	c
                           5111 ;	genMinus
   0DE0 0B                 5112 	dec	bc
                           5113 ;	genCast
                           5114 ;	AOP_STK for _get_player_map_position__x_1_1
   0DE1 F8 03              5115 	lda	hl,3(sp)
   0DE3 71                 5116 	ld	(hl),c
                           5117 ;	game.c 774
                           5118 ;	genCast
                           5119 ;	AOP_STK for 
   0DE4 F8 07              5120 	lda	hl,7(sp)
   0DE6 46                 5121 	ld	b,(hl)
   0DE7 0E 00              5122 	ld	c,#0x00
                           5123 ;	genRightShift
   0DE9 CB 39              5124 	srl	c
   0DEB CB 18              5125 	rr	b
   0DED CB 39              5126 	srl	c
   0DEF CB 18              5127 	rr	b
   0DF1 CB 39              5128 	srl	c
   0DF3 CB 18              5129 	rr	b
                           5130 ;	genMinus
   0DF5 58                 5131 	ld	e,b
   0DF6 51                 5132 	ld	d,c
   0DF7 1B                 5133 	dec	de
   0DF8 1B                 5134 	dec	de
   0DF9 43                 5135 	ld	b,e
   0DFA 4A                 5136 	ld	c,d
                           5137 ;	genCast
                           5138 ;	AOP_STK for _get_player_map_position__y_1_1
   0DFB F8 02              5139 	lda	hl,2(sp)
   0DFD 70                 5140 	ld	(hl),b
                           5141 ;	game.c 778
                           5142 ;	genCast
                           5143 ;	AOP_STK for _get_player_map_position__x_1_1
                           5144 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0DFE 23                 5145 	inc	hl
   0DFF 7E                 5146 	ld	a,(hl)
   0E00 F8 00              5147 	lda	hl,0(sp)
   0E02 22                 5148 	ld	(hl+),a
   0E03 36 00              5149 	ld	(hl),#0x00
                           5150 ;	game.c 779
                           5151 ;	genCast
                           5152 ;	AOP_STK for _get_player_map_position__y_1_1
   0E05 23                 5153 	inc	hl
   0E06 4E                 5154 	ld	c,(hl)
   0E07 06 00              5155 	ld	b,#0x00
                           5156 ;	genMult
   0E09 59                 5157 	ld	e,c
   0E0A 50                 5158 	ld	d,b
   0E0B 6B                 5159 	ld	l,e
   0E0C 62                 5160 	ld	h,d
   0E0D 29                 5161 	add	hl,hl
   0E0E 29                 5162 	add	hl,hl
   0E0F 19                 5163 	add	hl,de
   0E10 29                 5164 	add	hl,hl
   0E11 29                 5165 	add	hl,hl
   0E12 4D                 5166 	ld	c,l
   0E13 44                 5167 	ld	b,h
                           5168 ;	genPlus
                           5169 ;	AOP_STK for _get_player_map_position_map_position_1_1
                           5170 ;	Can't optimise plus by inc, falling back to the normal way
   0E14 F8 00              5171 	lda	hl,0(sp)
   0E16 2A                 5172 	ld	a,(hl+)
   0E17 66                 5173 	ld	h,(hl)
   0E18 6F                 5174 	ld	l,a
   0E19 09                 5175 	add	hl,bc
   0E1A 7D                 5176 	ld	a,l
   0E1B 54                 5177 	ld	d,h
   0E1C F8 00              5178 	lda	hl,0(sp)
   0E1E 22                 5179 	ld	(hl+),a
   0E1F 72                 5180 	ld	(hl),d
                           5181 ;	game.c 781
                           5182 ;	genRet
                           5183 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0E20 2B                 5184 	dec	hl
   0E21 5E                 5185 	ld	e,(hl)
   0E22 23                 5186 	inc	hl
   0E23 56                 5187 	ld	d,(hl)
                           5188 ;	genLabel
   0E24                    5189 00101$:
                           5190 ;	genEndFunction
   0E24 E8 04              5191 	lda	sp,4(sp)
   0E26 C9                 5192 	ret
   0E27                    5193 ___get_player_map_position_end:
                           5194 ;	game.c 784
                           5195 ;	genLabel
                           5196 ;	genFunction
                           5197 ;	---------------------------------
                           5198 ; Function player_input
                           5199 ; ---------------------------------
   0E27                    5200 ___player_input_start:
   0E27                    5201 _player_input:
   0E27 E8 FB              5202 	lda	sp,-5(sp)
                           5203 ;	game.c 787
                           5204 ;	genAssign
                           5205 ;	AOP_STK for 
   0E29 F8 07              5206 	lda	hl,7(sp)
   0E2B 4E                 5207 	ld	c,(hl)
   0E2C 23                 5208 	inc	hl
   0E2D 46                 5209 	ld	b,(hl)
                           5210 ;	genPointerGet
                           5211 ;	AOP_STK for _player_input_sloc0_1_0
   0E2E 59                 5212 	ld	e,c
   0E2F 50                 5213 	ld	d,b
   0E30 1A                 5214 	ld	a,(de)
   0E31 F8 03              5215 	lda	hl,3(sp)
   0E33 77                 5216 	ld	(hl),a
   0E34 13                 5217 	inc	de
   0E35 1A                 5218 	ld	a,(de)
   0E36 23                 5219 	inc	hl
                           5220 ;	genPlus
                           5221 ;	AOP_STK for _player_input_sloc0_1_0
                           5222 ;	AOP_STK for _player_input_sloc1_1_0
                           5223 ;	genPlusIncr
                           5224 ;	Can't optimise plus by inc, falling back to the normal way
   0E37 32                 5225 	ld      (hl-),a
   0E38 5E                 5226 	ld	e,(hl)
   0E39 23                 5227 	inc	hl
   0E3A 56                 5228 	ld	d,(hl)
   0E3B 21 0A 00           5229 	ld	hl,#0x000A
   0E3E 19                 5230 	add	hl,de
   0E3F 7D                 5231 	ld	a,l
   0E40 54                 5232 	ld	d,h
   0E41 F8 01              5233 	lda	hl,1(sp)
                           5234 ;	genPointerGet
                           5235 ;	AOP_STK for _player_input_sloc1_1_0
                           5236 ;	AOP_STK for _player_input_sloc0_1_0
   0E43 22                 5237 	ld	(hl+),a
   0E44 72                 5238 	ld	(hl),d
   0E45 5F                 5239 	ld	e,a
   0E46 1A                 5240 	ld	a,(de)
   0E47 23                 5241 	inc	hl
                           5242 ;	genCmpEq
                           5243 ;	AOP_STK for _player_input_sloc0_1_0
                           5244 ; genCmpEq: left 1, right 1, result 0
   0E48 77                 5245 	ld      (hl),a
                           5246 ; Removed redundent load
   0E49 B7                 5247 	or	a,a
   0E4A C2 6A 0F           5248 	jp	nz,00115$
   0E4D 18 03              5249 	jr	00128$
   0E4F                    5250 00127$:
   0E4F C3 6A 0F           5251 	jp	00115$
   0E52                    5252 00128$:
                           5253 ;	genCmpEq
                           5254 ;	AOP_HL for _input_timer
                           5255 ; genCmpEq: left 1, right 1, result 0
   0E52 21 03 19           5256 	ld	hl,#_input_timer
   0E55 7E                 5257 	ld	a,(hl)
   0E56 B7                 5258 	or	a,a
   0E57 C2 6A 0F           5259 	jp	nz,00115$
   0E5A 18 03              5260 	jr	00130$
   0E5C                    5261 00129$:
   0E5C C3 6A 0F           5262 	jp	00115$
   0E5F                    5263 00130$:
                           5264 ;	game.c 789
                           5265 ;	genCall
                           5266 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E5F C5                 5267 	push	bc
   0E60 CD 00 00           5268 	call	_joypad
                           5269 ;	AOP_STK for _player_input_sloc1_1_0
   0E63 F8 03              5270 	lda	hl,3(sp)
   0E65 73                 5271 	ld	(hl),e
   0E66 C1                 5272 	pop	bc
                           5273 ;	genCmpEq
                           5274 ;	AOP_STK for _player_input_sloc1_1_0
                           5275 ; genCmpEq: left 1, right 1, result 0
   0E67 F8 01              5276 	lda	hl,1(sp)
   0E69 7E                 5277 	ld	a,(hl)
   0E6A FE 01              5278 	cp	a,#0x01
   0E6C CA 1A 0F           5279 	jp	z,00108$
   0E6F                    5280 00131$:
                           5281 ;	genCmpEq
                           5282 ;	AOP_STK for _player_input_sloc1_1_0
                           5283 ; genCmpEq: left 1, right 1, result 0
   0E6F F8 01              5284 	lda	hl,1(sp)
   0E71 7E                 5285 	ld	a,(hl)
   0E72 FE 02              5286 	cp	a,#0x02
   0E74 CA FB 0E           5287 	jp	z,00107$
   0E77                    5288 00132$:
                           5289 ;	genCmpEq
                           5290 ;	AOP_STK for _player_input_sloc1_1_0
                           5291 ; genCmpEq: left 1, right 1, result 0
   0E77 F8 01              5292 	lda	hl,1(sp)
   0E79 7E                 5293 	ld	a,(hl)
   0E7A FE 04              5294 	cp	a,#0x04
   0E7C CA 39 0F           5295 	jp	z,00109$
   0E7F                    5296 00133$:
                           5297 ;	genCmpEq
                           5298 ;	AOP_STK for _player_input_sloc1_1_0
                           5299 ; genCmpEq: left 1, right 1, result 0
   0E7F F8 01              5300 	lda	hl,1(sp)
   0E81 7E                 5301 	ld	a,(hl)
   0E82 FE 08              5302 	cp	a,#0x08
   0E84 CA 58 0F           5303 	jp	z,00110$
   0E87                    5304 00134$:
                           5305 ;	genCmpEq
                           5306 ;	AOP_STK for _player_input_sloc1_1_0
                           5307 ; genCmpEq: left 1, right 1, result 0
   0E87 F8 01              5308 	lda	hl,1(sp)
   0E89 7E                 5309 	ld	a,(hl)
   0E8A FE 10              5310 	cp	a,#0x10
   0E8C CA 9A 0E           5311 	jp	z,00103$
   0E8F                    5312 00135$:
                           5313 ;	genCmpEq
                           5314 ;	AOP_STK for _player_input_sloc1_1_0
                           5315 ; genCmpEq: left 1, right 1, result 0
   0E8F F8 01              5316 	lda	hl,1(sp)
   0E91 7E                 5317 	ld	a,(hl)
   0E92 FE 20              5318 	cp	a,#0x20
   0E94 CA F3 0E           5319 	jp	z,00106$
   0E97                    5320 00136$:
                           5321 ;	genGoto
   0E97 C3 6A 0F           5322 	jp	00115$
                           5323 ;	game.c 795
                           5324 ;	genLabel
   0E9A                    5325 00103$:
                           5326 ;	game.c 791
                           5327 ;	genPointerGet
                           5328 ;	AOP_STK for _player_input_sloc1_1_0
   0E9A 59                 5329 	ld	e,c
   0E9B 50                 5330 	ld	d,b
   0E9C 1A                 5331 	ld	a,(de)
   0E9D F8 01              5332 	lda	hl,1(sp)
   0E9F 77                 5333 	ld	(hl),a
   0EA0 13                 5334 	inc	de
   0EA1 1A                 5335 	ld	a,(de)
   0EA2 23                 5336 	inc	hl
                           5337 ;	genPlus
                           5338 ;	AOP_STK for _player_input_sloc1_1_0
                           5339 ;	AOP_STK for _player_input_sloc0_1_0
                           5340 ;	genPlusIncr
                           5341 ;	Can't optimise plus by inc, falling back to the normal way
   0EA3 32                 5342 	ld      (hl-),a
   0EA4 5E                 5343 	ld	e,(hl)
   0EA5 23                 5344 	inc	hl
   0EA6 56                 5345 	ld	d,(hl)
   0EA7 21 0B 00           5346 	ld	hl,#0x000B
   0EAA 19                 5347 	add	hl,de
   0EAB 7D                 5348 	ld	a,l
   0EAC 54                 5349 	ld	d,h
   0EAD F8 03              5350 	lda	hl,3(sp)
                           5351 ;	genPointerGet
                           5352 ;	AOP_STK for _player_input_sloc0_1_0
                           5353 ;	AOP_STK for _player_input_sloc2_1_0
   0EAF 22                 5354 	ld	(hl+),a
   0EB0 72                 5355 	ld	(hl),d
   0EB1 5F                 5356 	ld	e,a
   0EB2 1A                 5357 	ld	a,(de)
   0EB3 F8 00              5358 	lda	hl,0(sp)
                           5359 ;	genCmpEq
                           5360 ;	AOP_STK for _player_input_sloc2_1_0
                           5361 ; genCmpEq: left 1, right 1, result 0
   0EB5 77                 5362 	ld      (hl),a
                           5363 ; Removed redundent load
   0EB6 FE 01              5364 	cp	a,#0x01
   0EB8 C2 DE 0E           5365 	jp	nz,00102$
   0EBB 18 03              5366 	jr	00138$
   0EBD                    5367 00137$:
   0EBD C3 DE 0E           5368 	jp	00102$
   0EC0                    5369 00138$:
                           5370 ;	game.c 792
                           5371 ;	genPlus
                           5372 ;	AOP_STK for _player_input_sloc1_1_0
                           5373 ;	genPlusIncr
                           5374 ;	Can't optimise plus by inc, falling back to the normal way
   0EC0 F8 01              5375 	lda	hl,1(sp)
   0EC2 5E                 5376 	ld	e,(hl)
   0EC3 23                 5377 	inc	hl
   0EC4 56                 5378 	ld	d,(hl)
   0EC5 21 0A 00           5379 	ld	hl,#0x000A
   0EC8 19                 5380 	add	hl,de
   0EC9 7D                 5381 	ld	a,l
   0ECA 54                 5382 	ld	d,h
   0ECB 6F                 5383 	ld	l,a
   0ECC 62                 5384 	ld	h,d
                           5385 ;	genAssign (pointer)
   0ECD 36 10              5386 	ld	(hl),#0x10
                           5387 ;	game.c 793
                           5388 ;	genPlus
                           5389 ;	AOP_STK for _player_input_sloc1_1_0
                           5390 ;	genPlusIncr
                           5391 ;	Can't optimise plus by inc, falling back to the normal way
   0ECF F8 01              5392 	lda	hl,1(sp)
   0ED1 5E                 5393 	ld	e,(hl)
   0ED2 23                 5394 	inc	hl
   0ED3 56                 5395 	ld	d,(hl)
   0ED4 21 09 00           5396 	ld	hl,#0x0009
   0ED7 19                 5397 	add	hl,de
   0ED8 7D                 5398 	ld	a,l
   0ED9 54                 5399 	ld	d,h
   0EDA 6F                 5400 	ld	l,a
   0EDB 62                 5401 	ld	h,d
                           5402 ;	genAssign (pointer)
   0EDC 36 01              5403 	ld	(hl),#0x01
                           5404 ;	genLabel
   0EDE                    5405 00102$:
                           5406 ;	game.c 795
                           5407 ;	genCmpEq
                           5408 ;	AOP_STK for _player_input_sloc2_1_0
                           5409 ; genCmpEq: left 1, right 1, result 0
   0EDE F8 00              5410 	lda	hl,0(sp)
   0EE0 7E                 5411 	ld	a,(hl)
   0EE1 FE 02              5412 	cp	a,#0x02
   0EE3 C2 6A 0F           5413 	jp	nz,00115$
   0EE6 18 03              5414 	jr	00140$
   0EE8                    5415 00139$:
   0EE8 C3 6A 0F           5416 	jp	00115$
   0EEB                    5417 00140$:
                           5418 ;	game.c 796
                           5419 ;	genCall
                           5420 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EEB C5                 5421 	push	bc
   0EEC CD A1 08           5422 	call	_dog1_power
   0EEF C1                 5423 	pop	bc
                           5424 ;	game.c 800
                           5425 ;	genGoto
   0EF0 C3 6A 0F           5426 	jp	00115$
                           5427 ;	game.c 804
                           5428 ;	genLabel
   0EF3                    5429 00106$:
                           5430 ;	genCall
                           5431 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EF3 C5                 5432 	push	bc
   0EF4 CD CA 01           5433 	call	_change_char
   0EF7 C1                 5434 	pop	bc
                           5435 ;	game.c 805
                           5436 ;	genGoto
   0EF8 C3 6A 0F           5437 	jp	00115$
                           5438 ;	game.c 808
                           5439 ;	genLabel
   0EFB                    5440 00107$:
                           5441 ;	genAssign
                           5442 ;	AOP_HL for _input_timer
   0EFB 21 03 19           5443 	ld	hl,#_input_timer
   0EFE 36 04              5444 	ld	(hl),#0x04
                           5445 ;	game.c 809
                           5446 ;	genPointerGet
                           5447 ;	AOP_STK for _player_input_sloc1_1_0
   0F00 59                 5448 	ld	e,c
   0F01 50                 5449 	ld	d,b
   0F02 1A                 5450 	ld	a,(de)
   0F03 F8 01              5451 	lda	hl,1(sp)
   0F05 77                 5452 	ld	(hl),a
   0F06 13                 5453 	inc	de
   0F07 1A                 5454 	ld	a,(de)
   0F08 23                 5455 	inc	hl
                           5456 ;	genPlus
                           5457 ;	AOP_STK for _player_input_sloc1_1_0
                           5458 ;	genPlusIncr
                           5459 ;	Can't optimise plus by inc, falling back to the normal way
   0F09 32                 5460 	ld      (hl-),a
   0F0A 5E                 5461 	ld	e,(hl)
   0F0B 23                 5462 	inc	hl
   0F0C 56                 5463 	ld	d,(hl)
   0F0D 21 08 00           5464 	ld	hl,#0x0008
   0F10 19                 5465 	add	hl,de
   0F11 7D                 5466 	ld	a,l
   0F12 54                 5467 	ld	d,h
   0F13 6F                 5468 	ld	l,a
   0F14 62                 5469 	ld	h,d
                           5470 ;	genAssign (pointer)
   0F15 36 04              5471 	ld	(hl),#0x04
                           5472 ;	game.c 810
                           5473 ;	genGoto
   0F17 C3 6A 0F           5474 	jp	00115$
                           5475 ;	game.c 812
                           5476 ;	genLabel
   0F1A                    5477 00108$:
                           5478 ;	genAssign
                           5479 ;	AOP_HL for _input_timer
   0F1A 21 03 19           5480 	ld	hl,#_input_timer
   0F1D 36 04              5481 	ld	(hl),#0x04
                           5482 ;	game.c 813
                           5483 ;	genPointerGet
                           5484 ;	AOP_STK for _player_input_sloc1_1_0
   0F1F 59                 5485 	ld	e,c
   0F20 50                 5486 	ld	d,b
   0F21 1A                 5487 	ld	a,(de)
   0F22 F8 01              5488 	lda	hl,1(sp)
   0F24 77                 5489 	ld	(hl),a
   0F25 13                 5490 	inc	de
   0F26 1A                 5491 	ld	a,(de)
   0F27 23                 5492 	inc	hl
                           5493 ;	genPlus
                           5494 ;	AOP_STK for _player_input_sloc1_1_0
                           5495 ;	genPlusIncr
                           5496 ;	Can't optimise plus by inc, falling back to the normal way
   0F28 32                 5497 	ld      (hl-),a
   0F29 5E                 5498 	ld	e,(hl)
   0F2A 23                 5499 	inc	hl
   0F2B 56                 5500 	ld	d,(hl)
   0F2C 21 08 00           5501 	ld	hl,#0x0008
   0F2F 19                 5502 	add	hl,de
   0F30 7D                 5503 	ld	a,l
   0F31 54                 5504 	ld	d,h
   0F32 6F                 5505 	ld	l,a
   0F33 62                 5506 	ld	h,d
                           5507 ;	genAssign (pointer)
   0F34 36 02              5508 	ld	(hl),#0x02
                           5509 ;	game.c 814
                           5510 ;	genGoto
   0F36 C3 6A 0F           5511 	jp	00115$
                           5512 ;	game.c 816
                           5513 ;	genLabel
   0F39                    5514 00109$:
                           5515 ;	genAssign
                           5516 ;	AOP_HL for _input_timer
   0F39 21 03 19           5517 	ld	hl,#_input_timer
   0F3C 36 04              5518 	ld	(hl),#0x04
                           5519 ;	game.c 817
                           5520 ;	genPointerGet
                           5521 ;	AOP_STK for _player_input_sloc1_1_0
   0F3E 59                 5522 	ld	e,c
   0F3F 50                 5523 	ld	d,b
   0F40 1A                 5524 	ld	a,(de)
   0F41 F8 01              5525 	lda	hl,1(sp)
   0F43 77                 5526 	ld	(hl),a
   0F44 13                 5527 	inc	de
   0F45 1A                 5528 	ld	a,(de)
   0F46 23                 5529 	inc	hl
                           5530 ;	genPlus
                           5531 ;	AOP_STK for _player_input_sloc1_1_0
                           5532 ;	genPlusIncr
                           5533 ;	Can't optimise plus by inc, falling back to the normal way
   0F47 32                 5534 	ld      (hl-),a
   0F48 5E                 5535 	ld	e,(hl)
   0F49 23                 5536 	inc	hl
   0F4A 56                 5537 	ld	d,(hl)
   0F4B 21 08 00           5538 	ld	hl,#0x0008
   0F4E 19                 5539 	add	hl,de
   0F4F 7D                 5540 	ld	a,l
   0F50 54                 5541 	ld	d,h
   0F51 6F                 5542 	ld	l,a
   0F52 62                 5543 	ld	h,d
                           5544 ;	genAssign (pointer)
   0F53 36 01              5545 	ld	(hl),#0x01
                           5546 ;	game.c 818
                           5547 ;	genGoto
   0F55 C3 6A 0F           5548 	jp	00115$
                           5549 ;	game.c 820
                           5550 ;	genLabel
   0F58                    5551 00110$:
                           5552 ;	genPointerGet
   0F58 59                 5553 	ld	e,c
   0F59 50                 5554 	ld	d,b
   0F5A 1A                 5555 	ld	a,(de)
   0F5B 4F                 5556 	ld	c,a
   0F5C 13                 5557 	inc	de
   0F5D 1A                 5558 	ld	a,(de)
   0F5E 47                 5559 	ld	b,a
                           5560 ;	genPlus
                           5561 ;	genPlusIncr
   0F5F 21 08 00           5562 	ld	hl,#0x0008
   0F62 09                 5563 	add	hl,bc
                           5564 ;	genAssign (pointer)
   0F63 36 03              5565 	ld	(hl),#0x03
                           5566 ;	game.c 821
                           5567 ;	genAssign
                           5568 ;	AOP_HL for _input_timer
   0F65 21 03 19           5569 	ld	hl,#_input_timer
   0F68 36 04              5570 	ld	(hl),#0x04
                           5571 ;	game.c 825
                           5572 ;	genLabel
   0F6A                    5573 00115$:
                           5574 ;	genEndFunction
   0F6A E8 05              5575 	lda	sp,5(sp)
   0F6C C9                 5576 	ret
   0F6D                    5577 ___player_input_end:
                           5578 ;	game.c 834
                           5579 ;	genLabel
                           5580 ;	genFunction
                           5581 ;	---------------------------------
                           5582 ; Function can_move_to_map_pos
                           5583 ; ---------------------------------
   0F6D                    5584 ___can_move_to_map_pos_start:
   0F6D                    5585 _can_move_to_map_pos:
                           5586 	
                           5587 ;	game.c 836
                           5588 ;	genPlus
                           5589 ;	AOP_STK for 
                           5590 ;	Can't optimise plus by inc, falling back to the normal way
   0F6D 11 05 19           5591 	ld	de,#_map
   0F70 F8 02              5592 	lda	hl,2(sp)
   0F72 2A                 5593 	ld	a,(hl+)
   0F73 66                 5594 	ld	h,(hl)
   0F74 6F                 5595 	ld	l,a
   0F75 19                 5596 	add	hl,de
   0F76 4D                 5597 	ld	c,l
   0F77 44                 5598 	ld	b,h
                           5599 ;	genPointerGet
   0F78 0A                 5600 	ld	a,(bc)
   0F79 4F                 5601 	ld	c,a
                           5602 ;	genCast
                           5603 ; Removed redundent load
   0F7A 06 00              5604 	ld	b,#0x00
                           5605 ;	genCmpGt
   0F7C 3E 14              5606 	ld	a,#0x14
   0F7E 91                 5607 	sub	a,c
   0F7F 3E 00              5608 	ld	a,#0x00
   0F81 98                 5609 	sbc	a,b
   0F82 D2 94 0F           5610 	jp	nc,00102$
                           5611 ;	game.c 837
                           5612 ;	genCmpLt
   0F85 79                 5613 	ld	a,c
   0F86 D6 29              5614 	sub	a,#0x29
   0F88 78                 5615 	ld	a,b
   0F89 DE 00              5616 	sbc	a,#0x00
   0F8B D2 94 0F           5617 	jp	nc,00102$
                           5618 ;	game.c 839
                           5619 ;	genRet
   0F8E 11 00 00           5620 	ld	de,#0x0000
   0F91 C3 2A 10           5621 	jp	00113$
                           5622 ;	genLabel
   0F94                    5623 00102$:
                           5624 ;	game.c 843
                           5625 ;	genCmpEq
                           5626 ; genCmpEq: left 2, right 2, result 0
   0F94 79                 5627 	ld	a,c
   0F95 FE 0F              5628 	cp	a,#0x0F
   0F97 C2 9F 0F           5629 	jp	nz,00122$
   0F9A 78                 5630 	ld	a,b
   0F9B B7                 5631 	or	a,a
   0F9C CA BA 0F           5632 	jp	z,00104$
   0F9F                    5633 00122$:
                           5634 ;	genCmpEq
                           5635 ; genCmpEq: left 2, right 2, result 0
   0F9F 79                 5636 	ld	a,c
   0FA0 FE 29              5637 	cp	a,#0x29
   0FA2 C2 AA 0F           5638 	jp	nz,00123$
   0FA5 78                 5639 	ld	a,b
   0FA6 B7                 5640 	or	a,a
   0FA7 CA BA 0F           5641 	jp	z,00104$
   0FAA                    5642 00123$:
                           5643 ;	genCmpEq
                           5644 ; genCmpEq: left 2, right 2, result 0
   0FAA 79                 5645 	ld	a,c
   0FAB FE 2D              5646 	cp	a,#0x2D
   0FAD C2 B7 0F           5647 	jp	nz,00124$
   0FB0 78                 5648 	ld	a,b
   0FB1 B7                 5649 	or	a,a
   0FB2 C2 C0 0F           5650 	jp	nz,00107$
   0FB5 18 03              5651 	jr	00125$
   0FB7                    5652 00124$:
   0FB7 C3 C0 0F           5653 	jp	00107$
   0FBA                    5654 00125$:
                           5655 ;	game.c 857
                           5656 ;	genLabel
   0FBA                    5657 00104$:
                           5658 ;	genRet
   0FBA 11 00 00           5659 	ld	de,#0x0000
   0FBD C3 2A 10           5660 	jp	00113$
                           5661 ;	game.c 859
                           5662 ;	genLabel
   0FC0                    5663 00107$:
                           5664 ;	game.c 861
                           5665 ;	genPlus
                           5666 ;	genPlusIncr
   0FC0 01 79 1A           5667 	ld	bc,#_bunny + 12
                           5668 ;	genPointerGet
   0FC3 59                 5669 	ld	e,c
   0FC4 50                 5670 	ld	d,b
   0FC5 1A                 5671 	ld	a,(de)
   0FC6 4F                 5672 	ld	c,a
   0FC7 13                 5673 	inc	de
   0FC8 1A                 5674 	ld	a,(de)
   0FC9 47                 5675 	ld	b,a
                           5676 ;	genCmpEq
                           5677 ;	AOP_STK for 
                           5678 ; genCmpEq: left 2, right 2, result 0
   0FCA F8 02              5679 	lda	hl,2(sp)
   0FCC 7E                 5680 	ld	a,(hl)
   0FCD B9                 5681 	cp	c
   0FCE C2 D7 0F           5682 	jp	nz,00126$
   0FD1 23                 5683 	inc	hl
   0FD2 7E                 5684 	ld	a,(hl)
   0FD3 B8                 5685 	cp	b
   0FD4 CA 21 10           5686 	jp	z,00108$
   0FD7                    5687 00126$:
                           5688 ;	game.c 862
                           5689 ;	genPlus
                           5690 ;	genPlusIncr
   0FD7 01 87 1A           5691 	ld	bc,#_dog1 + 12
                           5692 ;	genPointerGet
   0FDA 59                 5693 	ld	e,c
   0FDB 50                 5694 	ld	d,b
   0FDC 1A                 5695 	ld	a,(de)
   0FDD 4F                 5696 	ld	c,a
   0FDE 13                 5697 	inc	de
   0FDF 1A                 5698 	ld	a,(de)
   0FE0 47                 5699 	ld	b,a
                           5700 ;	genCmpEq
                           5701 ;	AOP_STK for 
                           5702 ; genCmpEq: left 2, right 2, result 0
   0FE1 F8 02              5703 	lda	hl,2(sp)
   0FE3 7E                 5704 	ld	a,(hl)
   0FE4 B9                 5705 	cp	c
   0FE5 C2 EE 0F           5706 	jp	nz,00127$
   0FE8 23                 5707 	inc	hl
   0FE9 7E                 5708 	ld	a,(hl)
   0FEA B8                 5709 	cp	b
   0FEB CA 21 10           5710 	jp	z,00108$
   0FEE                    5711 00127$:
                           5712 ;	game.c 863
                           5713 ;	genPlus
                           5714 ;	genPlusIncr
   0FEE 01 95 1A           5715 	ld	bc,#_dog2 + 12
                           5716 ;	genPointerGet
   0FF1 59                 5717 	ld	e,c
   0FF2 50                 5718 	ld	d,b
   0FF3 1A                 5719 	ld	a,(de)
   0FF4 4F                 5720 	ld	c,a
   0FF5 13                 5721 	inc	de
   0FF6 1A                 5722 	ld	a,(de)
   0FF7 47                 5723 	ld	b,a
                           5724 ;	genCmpEq
                           5725 ;	AOP_STK for 
                           5726 ; genCmpEq: left 2, right 2, result 0
   0FF8 F8 02              5727 	lda	hl,2(sp)
   0FFA 7E                 5728 	ld	a,(hl)
   0FFB B9                 5729 	cp	c
   0FFC C2 05 10           5730 	jp	nz,00128$
   0FFF 23                 5731 	inc	hl
   1000 7E                 5732 	ld	a,(hl)
   1001 B8                 5733 	cp	b
   1002 CA 21 10           5734 	jp	z,00108$
   1005                    5735 00128$:
                           5736 ;	game.c 864
                           5737 ;	genPlus
                           5738 ;	genPlusIncr
   1005 01 A3 1A           5739 	ld	bc,#_cat + 12
                           5740 ;	genPointerGet
   1008 59                 5741 	ld	e,c
   1009 50                 5742 	ld	d,b
   100A 1A                 5743 	ld	a,(de)
   100B 4F                 5744 	ld	c,a
   100C 13                 5745 	inc	de
   100D 1A                 5746 	ld	a,(de)
   100E 47                 5747 	ld	b,a
                           5748 ;	genCmpEq
                           5749 ;	AOP_STK for 
                           5750 ; genCmpEq: left 2, right 2, result 0
   100F F8 02              5751 	lda	hl,2(sp)
   1011 7E                 5752 	ld	a,(hl)
   1012 B9                 5753 	cp	c
   1013 C2 1E 10           5754 	jp	nz,00129$
   1016 23                 5755 	inc	hl
   1017 7E                 5756 	ld	a,(hl)
   1018 B8                 5757 	cp	b
   1019 C2 27 10           5758 	jp	nz,00109$
   101C 18 03              5759 	jr	00130$
   101E                    5760 00129$:
   101E C3 27 10           5761 	jp	00109$
   1021                    5762 00130$:
                           5763 ;	genLabel
   1021                    5764 00108$:
                           5765 ;	game.c 866
                           5766 ;	genRet
   1021 11 00 00           5767 	ld	de,#0x0000
   1024 C3 2A 10           5768 	jp	00113$
                           5769 ;	genLabel
   1027                    5770 00109$:
                           5771 ;	game.c 869
                           5772 ;	genRet
   1027 11 01 00           5773 	ld	de,#0x0001
                           5774 ;	genLabel
   102A                    5775 00113$:
                           5776 ;	genEndFunction
                           5777 	
   102A C9                 5778 	ret
   102B                    5779 ___can_move_to_map_pos_end:
                           5780 ;	game.c 872
                           5781 ;	genLabel
                           5782 ;	genFunction
                           5783 ;	---------------------------------
                           5784 ; Function can_move
                           5785 ; ---------------------------------
   102B                    5786 ___can_move_start:
   102B                    5787 _can_move:
   102B E8 FA              5788 	lda	sp,-6(sp)
                           5789 ;	game.c 883
                           5790 ;	genCmpGt
                           5791 ;	AOP_STK for 
   102D 3E 04              5792 	ld	a,#0x04
   102F F8 0A              5793 	lda	hl,10(sp)
   1031 96                 5794 	sub	a,(hl)
   1032 DA 78 10           5795 	jp	c,00106$
                           5796 ;	genJumpTab
                           5797 ;	AOP_STK for 
   1035 5E                 5798 	ld	e,(hl)
   1036 16 00              5799 	ld	d,#0x00
   1038 21 3F 10           5800 	ld	hl,#00121$
   103B 19                 5801 	add	hl,de
   103C 19                 5802 	add	hl,de
   103D 19                 5803 	add	hl,de
   103E E9                 5804 	jp	(hl)
   103F                    5805 00121$:
   103F C3 72 10           5806 	jp	00105$
   1042 C3 60 10           5807 	jp	00103$
   1045 C3 57 10           5808 	jp	00102$
   1048 C3 69 10           5809 	jp	00104$
   104B C3 4E 10           5810 	jp	00101$
                           5811 ;	game.c 885
                           5812 ;	genLabel
   104E                    5813 00101$:
                           5814 ;	genMinus
                           5815 ;	AOP_STK for 
   104E F8 08              5816 	lda	hl,8(sp)
   1050 7E                 5817 	ld	a,(hl)
   1051 C6 F8              5818 	add	a,#0xF8
   1053 77                 5819 	ld	(hl),a
                           5820 ;	game.c 886
                           5821 ;	genGoto
   1054 C3 78 10           5822 	jp	00106$
                           5823 ;	game.c 888
                           5824 ;	genLabel
   1057                    5825 00102$:
                           5826 ;	genPlus
                           5827 ;	AOP_STK for 
                           5828 ;	genPlusIncr
                           5829 ;	Can't optimise plus by inc, falling back to the normal way
   1057 F8 08              5830 	lda	hl,8(sp)
   1059 7E                 5831 	ld	a,(hl)
   105A C6 08              5832 	add	a,#0x08
   105C 77                 5833 	ld	(hl),a
                           5834 ;	game.c 889
                           5835 ;	genGoto
   105D C3 78 10           5836 	jp	00106$
                           5837 ;	game.c 891
                           5838 ;	genLabel
   1060                    5839 00103$:
                           5840 ;	genMinus
                           5841 ;	AOP_STK for 
   1060 F8 09              5842 	lda	hl,9(sp)
   1062 7E                 5843 	ld	a,(hl)
   1063 C6 F8              5844 	add	a,#0xF8
   1065 77                 5845 	ld	(hl),a
                           5846 ;	game.c 892
                           5847 ;	genGoto
   1066 C3 78 10           5848 	jp	00106$
                           5849 ;	game.c 894
                           5850 ;	genLabel
   1069                    5851 00104$:
                           5852 ;	genPlus
                           5853 ;	AOP_STK for 
                           5854 ;	genPlusIncr
                           5855 ;	Can't optimise plus by inc, falling back to the normal way
   1069 F8 09              5856 	lda	hl,9(sp)
   106B 7E                 5857 	ld	a,(hl)
   106C C6 08              5858 	add	a,#0x08
   106E 77                 5859 	ld	(hl),a
                           5860 ;	game.c 895
                           5861 ;	genGoto
   106F C3 78 10           5862 	jp	00106$
                           5863 ;	game.c 897
                           5864 ;	genLabel
   1072                    5865 00105$:
                           5866 ;	genRet
   1072 11 00 00           5867 	ld	de,#0x0000
   1075 C3 11 11           5868 	jp	00114$
                           5869 ;	game.c 898
                           5870 ;	genLabel
   1078                    5871 00106$:
                           5872 ;	game.c 900
                           5873 ;	genCast
                           5874 ;	AOP_STK for 
   1078 F8 08              5875 	lda	hl,8(sp)
   107A 4E                 5876 	ld	c,(hl)
   107B 06 00              5877 	ld	b,#0x00
                           5878 ;	genRightShift
   107D CB 38              5879 	srl	b
   107F CB 19              5880 	rr	c
   1081 CB 38              5881 	srl	b
   1083 CB 19              5882 	rr	c
   1085 CB 38              5883 	srl	b
   1087 CB 19              5884 	rr	c
                           5885 ;	genMinus
   1089 0B                 5886 	dec	bc
                           5887 ;	genCast
                           5888 ;	AOP_STK for _can_move__x_1_1
   108A F8 05              5889 	lda	hl,5(sp)
   108C 71                 5890 	ld	(hl),c
                           5891 ;	game.c 901
                           5892 ;	genCast
                           5893 ;	AOP_STK for 
   108D F8 09              5894 	lda	hl,9(sp)
   108F 46                 5895 	ld	b,(hl)
   1090 0E 00              5896 	ld	c,#0x00
                           5897 ;	genRightShift
   1092 CB 39              5898 	srl	c
   1094 CB 18              5899 	rr	b
   1096 CB 39              5900 	srl	c
   1098 CB 18              5901 	rr	b
   109A CB 39              5902 	srl	c
   109C CB 18              5903 	rr	b
                           5904 ;	genMinus
   109E 58                 5905 	ld	e,b
   109F 51                 5906 	ld	d,c
   10A0 1B                 5907 	dec	de
   10A1 1B                 5908 	dec	de
   10A2 43                 5909 	ld	b,e
   10A3 4A                 5910 	ld	c,d
                           5911 ;	genCast
                           5912 ;	AOP_STK for _can_move__y_1_1
   10A4 F8 04              5913 	lda	hl,4(sp)
   10A6 70                 5914 	ld	(hl),b
                           5915 ;	game.c 908
                           5916 ;	genCmpLt
                           5917 ;	AOP_STK for _can_move__x_1_1
   10A7 23                 5918 	inc	hl
   10A8 7E                 5919 	ld	a,(hl)
   10A9 FE 00              5920 	cp	#0x00
   10AB DA D2 10           5921 	jp	c,00107$
                           5922 ;	genCast
                           5923 ;	AOP_STK for _can_move__x_1_1
   10AE 46                 5924 	ld	b,(hl)
   10AF 0E 00              5925 	ld	c,#0x00
                           5926 ;	genCmpGt
   10B1 3E 13              5927 	ld	a,#0x13
   10B3 90                 5928 	sub	a,b
   10B4 3E 00              5929 	ld	a,#0x00
   10B6 99                 5930 	sbc	a,c
   10B7 DA D2 10           5931 	jp	c,00107$
                           5932 ;	genCmpLt
                           5933 ;	AOP_STK for _can_move__y_1_1
   10BA 2B                 5934 	dec	hl
   10BB 7E                 5935 	ld	a,(hl)
   10BC FE 00              5936 	cp	#0x00
   10BE DA D2 10           5937 	jp	c,00107$
                           5938 ;	genCast
                           5939 ;	AOP_STK for _can_move__y_1_1
                           5940 ;	AOP_STK for _can_move_sloc0_1_0
   10C1 7E                 5941 	ld	a,(hl)
   10C2 F8 00              5942 	lda	hl,0(sp)
   10C4 22                 5943 	ld	(hl+),a
   10C5 36 00              5944 	ld	(hl),#0x00
                           5945 ;	genCmpGt
                           5946 ;	AOP_STK for _can_move_sloc0_1_0
   10C7 3E 11              5947 	ld	a,#0x11
   10C9 2B                 5948 	dec	hl
   10CA 96                 5949 	sub	a,(hl)
   10CB 3E 00              5950 	ld	a,#0x00
   10CD 23                 5951 	inc	hl
   10CE 9E                 5952 	sbc	a,(hl)
   10CF D2 D8 10           5953 	jp	nc,00108$
                           5954 ;	genLabel
   10D2                    5955 00107$:
                           5956 ;	game.c 910
                           5957 ;	genRet
   10D2 11 00 00           5958 	ld	de,#0x0000
   10D5 C3 11 11           5959 	jp	00114$
                           5960 ;	genLabel
   10D8                    5961 00108$:
                           5962 ;	game.c 917
                           5963 ;	genAssign
                           5964 ;	(registers are the same)
                           5965 ;	genAssign
                           5966 ;	AOP_STK for _can_move_map_position_1_1
   10D8 F8 02              5967 	lda	hl,2(sp)
   10DA 70                 5968 	ld	(hl),b
   10DB 23                 5969 	inc	hl
   10DC 71                 5970 	ld	(hl),c
                           5971 ;	game.c 918
                           5972 ;	genMult
                           5973 ;	AOP_STK for _can_move_sloc0_1_0
   10DD F8 00              5974 	lda	hl,0(sp)
   10DF 5E                 5975 	ld	e,(hl)
   10E0 23                 5976 	inc	hl
   10E1 56                 5977 	ld	d,(hl)
   10E2 6B                 5978 	ld	l,e
   10E3 62                 5979 	ld	h,d
   10E4 29                 5980 	add	hl,hl
   10E5 29                 5981 	add	hl,hl
   10E6 19                 5982 	add	hl,de
   10E7 29                 5983 	add	hl,hl
   10E8 29                 5984 	add	hl,hl
   10E9 4D                 5985 	ld	c,l
   10EA 44                 5986 	ld	b,h
                           5987 ;	genPlus
                           5988 ;	AOP_STK for _can_move_map_position_1_1
                           5989 ;	Can't optimise plus by inc, falling back to the normal way
   10EB F8 02              5990 	lda	hl,2(sp)
   10ED 2A                 5991 	ld	a,(hl+)
   10EE 66                 5992 	ld	h,(hl)
   10EF 6F                 5993 	ld	l,a
   10F0 09                 5994 	add	hl,bc
   10F1 7D                 5995 	ld	a,l
   10F2 54                 5996 	ld	d,h
   10F3 F8 02              5997 	lda	hl,2(sp)
   10F5 22                 5998 	ld	(hl+),a
   10F6 72                 5999 	ld	(hl),d
                           6000 ;	game.c 920
                           6001 ;	genIpush
                           6002 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           6003 ;	AOP_STK for _can_move_map_position_1_1
   10F7 2B                 6004 	dec	hl
   10F8 2A                 6005 	ld	a,(hl+)
   10F9 66                 6006 	ld	h,(hl)
   10FA 6F                 6007 	ld	l,a
   10FB E5                 6008 	push	hl
                           6009 ;	genCall
   10FC CD 6D 0F           6010 	call	_can_move_to_map_pos
   10FF 42                 6011 	ld	b,d
   1100 4B                 6012 	ld	c,e
   1101 E8 02              6013 	lda	sp,2(sp)
                           6014 ;	genIfx
   1103 79                 6015 	ld	a,c
   1104 B0                 6016 	or	a,b
   1105 CA 0E 11           6017 	jp	z,00113$
                           6018 ;	game.c 921
                           6019 ;	genRet
   1108 11 01 00           6020 	ld	de,#0x0001
   110B C3 11 11           6021 	jp	00114$
                           6022 ;	genLabel
   110E                    6023 00113$:
                           6024 ;	game.c 924
                           6025 ;	genRet
   110E 11 00 00           6026 	ld	de,#0x0000
                           6027 ;	genLabel
   1111                    6028 00114$:
                           6029 ;	genEndFunction
   1111 E8 06              6030 	lda	sp,6(sp)
   1113 C9                 6031 	ret
   1114                    6032 ___can_move_end:
                           6033 ;	game.c 927
                           6034 ;	genLabel
                           6035 ;	genFunction
                           6036 ;	---------------------------------
                           6037 ; Function rotate_player
                           6038 ; ---------------------------------
   1114                    6039 ___rotate_player_start:
   1114                    6040 _rotate_player:
   1114 E8 FC              6041 	lda	sp,-4(sp)
                           6042 ;	game.c 928
                           6043 ;	genAssign
                           6044 ;	AOP_HL for _player
   1116 21 B3 1A           6045 	ld	hl,#_player
   1119 4E                 6046 	ld	c,(hl)
   111A 23                 6047 	inc	hl
   111B 46                 6048 	ld	b,(hl)
                           6049 ;	genPlus
                           6050 ;	genPlusIncr
                           6051 ;	Can't optimise plus by inc, falling back to the normal way
   111C 79                 6052 	ld	a,c
   111D C6 07              6053 	add	a,#0x07
   111F 4F                 6054 	ld	c,a
   1120 78                 6055 	ld	a,b
   1121 CE 00              6056 	adc	a,#0x00
   1123 47                 6057 	ld	b,a
                           6058 ;	genPointerGet
   1124 0A                 6059 	ld	a,(bc)
   1125 4F                 6060 	ld	c,a
                           6061 ;	genAssign
                           6062 ;	AOP_HL for _player
                           6063 ;	AOP_STK for _rotate_player_sloc0_1_0
   1126 2B                 6064 	dec	hl
   1127 2A                 6065 	ld	a,(hl+)
   1128 5E                 6066 	ld	e,(hl)
   1129 F8 02              6067 	lda	hl,2(sp)
   112B 22                 6068 	ld	(hl+),a
   112C 73                 6069 	ld	(hl),e
                           6070 ;	genPlus
                           6071 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6072 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6073 ;	genPlusIncr
                           6074 ;	Can't optimise plus by inc, falling back to the normal way
   112D 2B                 6075 	dec	hl
   112E 5E                 6076 	ld	e,(hl)
   112F 23                 6077 	inc	hl
   1130 56                 6078 	ld	d,(hl)
   1131 21 0B 00           6079 	ld	hl,#0x000B
   1134 19                 6080 	add	hl,de
   1135 7D                 6081 	ld	a,l
   1136 54                 6082 	ld	d,h
   1137 F8 00              6083 	lda	hl,0(sp)
                           6084 ;	genPointerGet
                           6085 ;	AOP_STK for _rotate_player_sloc1_1_0
   1139 22                 6086 	ld	(hl+),a
   113A 72                 6087 	ld	(hl),d
   113B 5F                 6088 	ld	e,a
   113C 1A                 6089 	ld	a,(de)
   113D 47                 6090 	ld	b,a
                           6091 ;	genIpush
                           6092 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   113E 79                 6093 	ld	a,c
   113F F5                 6094 	push	af
   1140 33                 6095 	inc	sp
                           6096 ;	genIpush
   1141 78                 6097 	ld	a,b
   1142 F5                 6098 	push	af
   1143 33                 6099 	inc	sp
                           6100 ;	genCall
   1144 CD 00 00           6101 	call	_set_sprite_tile
   1147 E8 02              6102 	lda	sp,2(sp)
                           6103 ;	game.c 929
                           6104 ;	genAssign
                           6105 ;	AOP_HL for _player
   1149 21 B3 1A           6106 	ld	hl,#_player
   114C 4E                 6107 	ld	c,(hl)
   114D 23                 6108 	inc	hl
   114E 46                 6109 	ld	b,(hl)
                           6110 ;	genPlus
                           6111 ;	genPlusIncr
                           6112 ;	Can't optimise plus by inc, falling back to the normal way
   114F 79                 6113 	ld	a,c
   1150 C6 0B              6114 	add	a,#0x0B
   1152 4F                 6115 	ld	c,a
   1153 78                 6116 	ld	a,b
   1154 CE 00              6117 	adc	a,#0x00
   1156 47                 6118 	ld	b,a
                           6119 ;	genPointerGet
   1157 0A                 6120 	ld	a,(bc)
   1158 4F                 6121 	ld	c,a
                           6122 ;	genIpush
                           6123 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1159 3E 20              6124 	ld	a,#0x20
   115B F5                 6125 	push	af
   115C 33                 6126 	inc	sp
                           6127 ;	genIpush
   115D 79                 6128 	ld	a,c
   115E F5                 6129 	push	af
   115F 33                 6130 	inc	sp
                           6131 ;	genCall
   1160 CD 00 00           6132 	call	_set_sprite_prop
   1163 E8 02              6133 	lda	sp,2(sp)
                           6134 ;	game.c 930
                           6135 ;	genIpush
                           6136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1165 3E 05              6137 	ld	a,#0x05
   1167 F5                 6138 	push	af
   1168 33                 6139 	inc	sp
                           6140 ;	genCall
   1169 CD 00 00           6141 	call	_performantDelay
   116C E8 01              6142 	lda	sp,1(sp)
                           6143 ;	game.c 931
                           6144 ;	genAssign
                           6145 ;	AOP_HL for _player
   116E 21 B3 1A           6146 	ld	hl,#_player
   1171 4E                 6147 	ld	c,(hl)
   1172 23                 6148 	inc	hl
   1173 46                 6149 	ld	b,(hl)
                           6150 ;	genPlus
                           6151 ;	genPlusIncr
   1174 03                 6152 	inc	bc
   1175 03                 6153 	inc	bc
   1176 03                 6154 	inc	bc
   1177 03                 6155 	inc	bc
                           6156 ;	genPointerGet
   1178 0A                 6157 	ld	a,(bc)
   1179 4F                 6158 	ld	c,a
                           6159 ;	genAssign
                           6160 ;	AOP_HL for _player
                           6161 ;	AOP_STK for _rotate_player_sloc1_1_0
   117A 2B                 6162 	dec	hl
   117B 2A                 6163 	ld	a,(hl+)
   117C 5E                 6164 	ld	e,(hl)
   117D F8 00              6165 	lda	hl,0(sp)
   117F 22                 6166 	ld	(hl+),a
   1180 73                 6167 	ld	(hl),e
                           6168 ;	genPlus
                           6169 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6170 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6171 ;	genPlusIncr
                           6172 ;	Can't optimise plus by inc, falling back to the normal way
   1181 2B                 6173 	dec	hl
   1182 5E                 6174 	ld	e,(hl)
   1183 23                 6175 	inc	hl
   1184 56                 6176 	ld	d,(hl)
   1185 21 0B 00           6177 	ld	hl,#0x000B
   1188 19                 6178 	add	hl,de
   1189 7D                 6179 	ld	a,l
   118A 54                 6180 	ld	d,h
   118B F8 02              6181 	lda	hl,2(sp)
                           6182 ;	genPointerGet
                           6183 ;	AOP_STK for _rotate_player_sloc0_1_0
   118D 22                 6184 	ld	(hl+),a
   118E 72                 6185 	ld	(hl),d
   118F 5F                 6186 	ld	e,a
   1190 1A                 6187 	ld	a,(de)
   1191 47                 6188 	ld	b,a
                           6189 ;	genIpush
                           6190 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1192 79                 6191 	ld	a,c
   1193 F5                 6192 	push	af
   1194 33                 6193 	inc	sp
                           6194 ;	genIpush
   1195 78                 6195 	ld	a,b
   1196 F5                 6196 	push	af
   1197 33                 6197 	inc	sp
                           6198 ;	genCall
   1198 CD 00 00           6199 	call	_set_sprite_tile
   119B E8 02              6200 	lda	sp,2(sp)
                           6201 ;	game.c 932
                           6202 ;	genAssign
                           6203 ;	AOP_HL for _player
   119D 21 B3 1A           6204 	ld	hl,#_player
   11A0 4E                 6205 	ld	c,(hl)
   11A1 23                 6206 	inc	hl
   11A2 46                 6207 	ld	b,(hl)
                           6208 ;	genPlus
                           6209 ;	genPlusIncr
                           6210 ;	Can't optimise plus by inc, falling back to the normal way
   11A3 79                 6211 	ld	a,c
   11A4 C6 0B              6212 	add	a,#0x0B
   11A6 4F                 6213 	ld	c,a
   11A7 78                 6214 	ld	a,b
   11A8 CE 00              6215 	adc	a,#0x00
   11AA 47                 6216 	ld	b,a
                           6217 ;	genPointerGet
   11AB 0A                 6218 	ld	a,(bc)
   11AC 4F                 6219 	ld	c,a
                           6220 ;	genIpush
                           6221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11AD 3E 60              6222 	ld	a,#0x60
   11AF F5                 6223 	push	af
   11B0 33                 6224 	inc	sp
                           6225 ;	genIpush
   11B1 79                 6226 	ld	a,c
   11B2 F5                 6227 	push	af
   11B3 33                 6228 	inc	sp
                           6229 ;	genCall
   11B4 CD 00 00           6230 	call	_set_sprite_prop
   11B7 E8 02              6231 	lda	sp,2(sp)
                           6232 ;	game.c 933
                           6233 ;	genIpush
                           6234 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11B9 3E 05              6235 	ld	a,#0x05
   11BB F5                 6236 	push	af
   11BC 33                 6237 	inc	sp
                           6238 ;	genCall
   11BD CD 00 00           6239 	call	_performantDelay
   11C0 E8 01              6240 	lda	sp,1(sp)
                           6241 ;	game.c 934
                           6242 ;	genAssign
                           6243 ;	AOP_HL for _player
   11C2 21 B3 1A           6244 	ld	hl,#_player
   11C5 4E                 6245 	ld	c,(hl)
   11C6 23                 6246 	inc	hl
   11C7 46                 6247 	ld	b,(hl)
                           6248 ;	genPlus
                           6249 ;	genPlusIncr
                           6250 ;	Can't optimise plus by inc, falling back to the normal way
   11C8 79                 6251 	ld	a,c
   11C9 C6 07              6252 	add	a,#0x07
   11CB 4F                 6253 	ld	c,a
   11CC 78                 6254 	ld	a,b
   11CD CE 00              6255 	adc	a,#0x00
   11CF 47                 6256 	ld	b,a
                           6257 ;	genPointerGet
   11D0 0A                 6258 	ld	a,(bc)
   11D1 4F                 6259 	ld	c,a
                           6260 ;	genAssign
                           6261 ;	AOP_HL for _player
                           6262 ;	AOP_STK for _rotate_player_sloc1_1_0
   11D2 2B                 6263 	dec	hl
   11D3 2A                 6264 	ld	a,(hl+)
   11D4 5E                 6265 	ld	e,(hl)
   11D5 F8 00              6266 	lda	hl,0(sp)
   11D7 22                 6267 	ld	(hl+),a
   11D8 73                 6268 	ld	(hl),e
                           6269 ;	genPlus
                           6270 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6271 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6272 ;	genPlusIncr
                           6273 ;	Can't optimise plus by inc, falling back to the normal way
   11D9 2B                 6274 	dec	hl
   11DA 5E                 6275 	ld	e,(hl)
   11DB 23                 6276 	inc	hl
   11DC 56                 6277 	ld	d,(hl)
   11DD 21 0B 00           6278 	ld	hl,#0x000B
   11E0 19                 6279 	add	hl,de
   11E1 7D                 6280 	ld	a,l
   11E2 54                 6281 	ld	d,h
   11E3 F8 02              6282 	lda	hl,2(sp)
                           6283 ;	genPointerGet
                           6284 ;	AOP_STK for _rotate_player_sloc0_1_0
   11E5 22                 6285 	ld	(hl+),a
   11E6 72                 6286 	ld	(hl),d
   11E7 5F                 6287 	ld	e,a
   11E8 1A                 6288 	ld	a,(de)
   11E9 47                 6289 	ld	b,a
                           6290 ;	genIpush
                           6291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11EA 79                 6292 	ld	a,c
   11EB F5                 6293 	push	af
   11EC 33                 6294 	inc	sp
                           6295 ;	genIpush
   11ED 78                 6296 	ld	a,b
   11EE F5                 6297 	push	af
   11EF 33                 6298 	inc	sp
                           6299 ;	genCall
   11F0 CD 00 00           6300 	call	_set_sprite_tile
   11F3 E8 02              6301 	lda	sp,2(sp)
                           6302 ;	game.c 935
                           6303 ;	genAssign
                           6304 ;	AOP_HL for _player
   11F5 21 B3 1A           6305 	ld	hl,#_player
   11F8 4E                 6306 	ld	c,(hl)
   11F9 23                 6307 	inc	hl
   11FA 46                 6308 	ld	b,(hl)
                           6309 ;	genPlus
                           6310 ;	genPlusIncr
                           6311 ;	Can't optimise plus by inc, falling back to the normal way
   11FB 79                 6312 	ld	a,c
   11FC C6 0B              6313 	add	a,#0x0B
   11FE 4F                 6314 	ld	c,a
   11FF 78                 6315 	ld	a,b
   1200 CE 00              6316 	adc	a,#0x00
   1202 47                 6317 	ld	b,a
                           6318 ;	genPointerGet
   1203 0A                 6319 	ld	a,(bc)
   1204 4F                 6320 	ld	c,a
                           6321 ;	genIpush
                           6322 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1205 3E 40              6323 	ld	a,#0x40
   1207 F5                 6324 	push	af
   1208 33                 6325 	inc	sp
                           6326 ;	genIpush
   1209 79                 6327 	ld	a,c
   120A F5                 6328 	push	af
   120B 33                 6329 	inc	sp
                           6330 ;	genCall
   120C CD 00 00           6331 	call	_set_sprite_prop
   120F E8 02              6332 	lda	sp,2(sp)
                           6333 ;	game.c 936
                           6334 ;	genIpush
                           6335 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1211 3E 05              6336 	ld	a,#0x05
   1213 F5                 6337 	push	af
   1214 33                 6338 	inc	sp
                           6339 ;	genCall
   1215 CD 00 00           6340 	call	_performantDelay
   1218 E8 01              6341 	lda	sp,1(sp)
                           6342 ;	game.c 937
                           6343 ;	genAssign
                           6344 ;	AOP_HL for _player
   121A 21 B3 1A           6345 	ld	hl,#_player
   121D 4E                 6346 	ld	c,(hl)
   121E 23                 6347 	inc	hl
   121F 46                 6348 	ld	b,(hl)
                           6349 ;	genPlus
                           6350 ;	genPlusIncr
   1220 03                 6351 	inc	bc
   1221 03                 6352 	inc	bc
   1222 03                 6353 	inc	bc
   1223 03                 6354 	inc	bc
                           6355 ;	genPointerGet
   1224 0A                 6356 	ld	a,(bc)
   1225 4F                 6357 	ld	c,a
                           6358 ;	genAssign
                           6359 ;	AOP_HL for _player
                           6360 ;	AOP_STK for _rotate_player_sloc1_1_0
   1226 2B                 6361 	dec	hl
   1227 2A                 6362 	ld	a,(hl+)
   1228 5E                 6363 	ld	e,(hl)
   1229 F8 00              6364 	lda	hl,0(sp)
   122B 22                 6365 	ld	(hl+),a
   122C 73                 6366 	ld	(hl),e
                           6367 ;	genPlus
                           6368 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6369 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6370 ;	genPlusIncr
                           6371 ;	Can't optimise plus by inc, falling back to the normal way
   122D 2B                 6372 	dec	hl
   122E 5E                 6373 	ld	e,(hl)
   122F 23                 6374 	inc	hl
   1230 56                 6375 	ld	d,(hl)
   1231 21 0B 00           6376 	ld	hl,#0x000B
   1234 19                 6377 	add	hl,de
   1235 7D                 6378 	ld	a,l
   1236 54                 6379 	ld	d,h
   1237 F8 02              6380 	lda	hl,2(sp)
                           6381 ;	genPointerGet
                           6382 ;	AOP_STK for _rotate_player_sloc0_1_0
   1239 22                 6383 	ld	(hl+),a
   123A 72                 6384 	ld	(hl),d
   123B 5F                 6385 	ld	e,a
   123C 1A                 6386 	ld	a,(de)
   123D 47                 6387 	ld	b,a
                           6388 ;	genIpush
                           6389 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   123E 79                 6390 	ld	a,c
   123F F5                 6391 	push	af
   1240 33                 6392 	inc	sp
                           6393 ;	genIpush
   1241 78                 6394 	ld	a,b
   1242 F5                 6395 	push	af
   1243 33                 6396 	inc	sp
                           6397 ;	genCall
   1244 CD 00 00           6398 	call	_set_sprite_tile
   1247 E8 02              6399 	lda	sp,2(sp)
                           6400 ;	game.c 938
                           6401 ;	genAssign
                           6402 ;	AOP_HL for _player
   1249 21 B3 1A           6403 	ld	hl,#_player
   124C 4E                 6404 	ld	c,(hl)
   124D 23                 6405 	inc	hl
   124E 46                 6406 	ld	b,(hl)
                           6407 ;	genPlus
                           6408 ;	genPlusIncr
                           6409 ;	Can't optimise plus by inc, falling back to the normal way
   124F 79                 6410 	ld	a,c
   1250 C6 0B              6411 	add	a,#0x0B
   1252 4F                 6412 	ld	c,a
   1253 78                 6413 	ld	a,b
   1254 CE 00              6414 	adc	a,#0x00
   1256 47                 6415 	ld	b,a
                           6416 ;	genPointerGet
   1257 0A                 6417 	ld	a,(bc)
   1258 4F                 6418 	ld	c,a
                           6419 ;	genIpush
                           6420 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1259 3E 00              6421 	ld	a,#0x00
   125B F5                 6422 	push	af
   125C 33                 6423 	inc	sp
                           6424 ;	genIpush
   125D 79                 6425 	ld	a,c
   125E F5                 6426 	push	af
   125F 33                 6427 	inc	sp
                           6428 ;	genCall
   1260 CD 00 00           6429 	call	_set_sprite_prop
   1263 E8 02              6430 	lda	sp,2(sp)
                           6431 ;	game.c 939
                           6432 ;	genIpush
                           6433 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1265 3E 05              6434 	ld	a,#0x05
   1267 F5                 6435 	push	af
   1268 33                 6436 	inc	sp
                           6437 ;	genCall
   1269 CD 00 00           6438 	call	_performantDelay
   126C E8 01              6439 	lda	sp,1(sp)
                           6440 ;	game.c 940
                           6441 ;	genAssign
                           6442 ;	AOP_HL for _player
   126E 21 B3 1A           6443 	ld	hl,#_player
   1271 4E                 6444 	ld	c,(hl)
   1272 23                 6445 	inc	hl
   1273 46                 6446 	ld	b,(hl)
                           6447 ;	genPlus
                           6448 ;	genPlusIncr
   1274 03                 6449 	inc	bc
   1275 03                 6450 	inc	bc
                           6451 ;	genPointerGet
   1276 0A                 6452 	ld	a,(bc)
   1277 4F                 6453 	ld	c,a
                           6454 ;	genAssign
                           6455 ;	AOP_HL for _player
                           6456 ;	AOP_STK for _rotate_player_sloc1_1_0
   1278 2B                 6457 	dec	hl
   1279 2A                 6458 	ld	a,(hl+)
   127A 5E                 6459 	ld	e,(hl)
   127B F8 00              6460 	lda	hl,0(sp)
   127D 22                 6461 	ld	(hl+),a
   127E 73                 6462 	ld	(hl),e
                           6463 ;	genPlus
                           6464 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6465 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6466 ;	genPlusIncr
                           6467 ;	Can't optimise plus by inc, falling back to the normal way
   127F 2B                 6468 	dec	hl
   1280 5E                 6469 	ld	e,(hl)
   1281 23                 6470 	inc	hl
   1282 56                 6471 	ld	d,(hl)
   1283 21 0B 00           6472 	ld	hl,#0x000B
   1286 19                 6473 	add	hl,de
   1287 7D                 6474 	ld	a,l
   1288 54                 6475 	ld	d,h
   1289 F8 02              6476 	lda	hl,2(sp)
                           6477 ;	genPointerGet
                           6478 ;	AOP_STK for _rotate_player_sloc0_1_0
   128B 22                 6479 	ld	(hl+),a
   128C 72                 6480 	ld	(hl),d
   128D 5F                 6481 	ld	e,a
   128E 1A                 6482 	ld	a,(de)
   128F 47                 6483 	ld	b,a
                           6484 ;	genIpush
                           6485 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1290 79                 6486 	ld	a,c
   1291 F5                 6487 	push	af
   1292 33                 6488 	inc	sp
                           6489 ;	genIpush
   1293 78                 6490 	ld	a,b
   1294 F5                 6491 	push	af
   1295 33                 6492 	inc	sp
                           6493 ;	genCall
   1296 CD 00 00           6494 	call	_set_sprite_tile
   1299 E8 02              6495 	lda	sp,2(sp)
                           6496 ;	game.c 941
                           6497 ;	genAssign
                           6498 ;	AOP_HL for _player
   129B 21 B3 1A           6499 	ld	hl,#_player
   129E 4E                 6500 	ld	c,(hl)
   129F 23                 6501 	inc	hl
   12A0 46                 6502 	ld	b,(hl)
                           6503 ;	genPlus
                           6504 ;	genPlusIncr
                           6505 ;	Can't optimise plus by inc, falling back to the normal way
   12A1 79                 6506 	ld	a,c
   12A2 C6 0B              6507 	add	a,#0x0B
   12A4 4F                 6508 	ld	c,a
   12A5 78                 6509 	ld	a,b
   12A6 CE 00              6510 	adc	a,#0x00
   12A8 47                 6511 	ld	b,a
                           6512 ;	genPointerGet
   12A9 0A                 6513 	ld	a,(bc)
   12AA 4F                 6514 	ld	c,a
                           6515 ;	genIpush
                           6516 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12AB 3E 00              6517 	ld	a,#0x00
   12AD F5                 6518 	push	af
   12AE 33                 6519 	inc	sp
                           6520 ;	genIpush
   12AF 79                 6521 	ld	a,c
   12B0 F5                 6522 	push	af
   12B1 33                 6523 	inc	sp
                           6524 ;	genCall
   12B2 CD 00 00           6525 	call	_set_sprite_prop
   12B5 E8 02              6526 	lda	sp,2(sp)
                           6527 ;	genLabel
   12B7                    6528 00101$:
                           6529 ;	genEndFunction
   12B7 E8 04              6530 	lda	sp,4(sp)
   12B9 C9                 6531 	ret
   12BA                    6532 ___rotate_player_end:
                           6533 ;	game.c 944
                           6534 ;	genLabel
                           6535 ;	genFunction
                           6536 ;	---------------------------------
                           6537 ; Function move_character
                           6538 ; ---------------------------------
   12BA                    6539 ___move_character_start:
   12BA                    6540 _move_character:
   12BA E8 F1              6541 	lda	sp,-15(sp)
                           6542 ;	game.c 947
                           6543 ;	genAssign
                           6544 ;	AOP_HL for _player
   12BC 21 B3 1A           6545 	ld	hl,#_player
   12BF 4E                 6546 	ld	c,(hl)
   12C0 23                 6547 	inc	hl
   12C1 46                 6548 	ld	b,(hl)
                           6549 ;	genPlus
                           6550 ;	genPlusIncr
                           6551 ;	Can't optimise plus by inc, falling back to the normal way
   12C2 79                 6552 	ld	a,c
   12C3 C6 0B              6553 	add	a,#0x0B
   12C5 4F                 6554 	ld	c,a
   12C6 78                 6555 	ld	a,b
   12C7 CE 00              6556 	adc	a,#0x00
   12C9 47                 6557 	ld	b,a
                           6558 ;	genPointerGet
   12CA 0A                 6559 	ld	a,(bc)
   12CB 4F                 6560 	ld	c,a
                           6561 ;	genAssign
                           6562 ;	AOP_STK for 
                           6563 ;	AOP_STK for _move_character_sloc0_1_0
   12CC F8 11              6564 	lda	hl,17(sp)
   12CE 2A                 6565 	ld	a,(hl+)
   12CF 5E                 6566 	ld	e,(hl)
   12D0 F8 0D              6567 	lda	hl,13(sp)
   12D2 22                 6568 	ld	(hl+),a
   12D3 73                 6569 	ld	(hl),e
                           6570 ;	genPlus
                           6571 ;	AOP_STK for _move_character_sloc0_1_0
                           6572 ;	AOP_STK for _move_character_sloc1_1_0
                           6573 ;	genPlusIncr
                           6574 ;	Can't optimise plus by inc, falling back to the normal way
   12D4 2B                 6575 	dec	hl
   12D5 5E                 6576 	ld	e,(hl)
   12D6 23                 6577 	inc	hl
   12D7 56                 6578 	ld	d,(hl)
   12D8 21 0B 00           6579 	ld	hl,#0x000B
   12DB 19                 6580 	add	hl,de
   12DC 7D                 6581 	ld	a,l
   12DD 54                 6582 	ld	d,h
   12DE F8 0B              6583 	lda	hl,11(sp)
                           6584 ;	genPointerGet
                           6585 ;	AOP_STK for _move_character_sloc1_1_0
   12E0 22                 6586 	ld	(hl+),a
   12E1 72                 6587 	ld	(hl),d
   12E2 5F                 6588 	ld	e,a
   12E3 1A                 6589 	ld	a,(de)
   12E4 47                 6590 	ld	b,a
                           6591 ;	genCmpEq
                           6592 ; genCmpEq: left 1, right 1, result 0
   12E5 79                 6593 	ld	a,c
   12E6 B8                 6594 	cp	b
                           6595 ;	game.c 948
                           6596 ;	genRet
                           6597 ;	genLabel
   12E7 CA ED 12           6598 	jp	z,00102$
   12EA                    6599 00197$:
   12EA C3 17 1B           6600 	jp	00166$
   12ED                    6601 00102$:
                           6602 ;	game.c 951
                           6603 ;	genPlus
                           6604 ;	AOP_STK for _move_character_sloc0_1_0
                           6605 ;	AOP_STK for _move_character_sloc2_1_0
                           6606 ;	genPlusIncr
                           6607 ;	Can't optimise plus by inc, falling back to the normal way
   12ED F8 0D              6608 	lda	hl,13(sp)
   12EF 5E                 6609 	ld	e,(hl)
   12F0 23                 6610 	inc	hl
   12F1 56                 6611 	ld	d,(hl)
   12F2 21 09 00           6612 	ld	hl,#0x0009
   12F5 19                 6613 	add	hl,de
   12F6 7D                 6614 	ld	a,l
   12F7 54                 6615 	ld	d,h
   12F8 F8 09              6616 	lda	hl,9(sp)
                           6617 ;	genPointerGet
                           6618 ;	AOP_STK for _move_character_sloc2_1_0
   12FA 22                 6619 	ld	(hl+),a
   12FB 72                 6620 	ld	(hl),d
   12FC 5F                 6621 	ld	e,a
   12FD 1A                 6622 	ld	a,(de)
                           6623 ;	genCmpEq
                           6624 ; genCmpEq: left 1, right 1, result 0
   12FE 4F                 6625 	ld	c,a
   12FF B7                 6626 	or	a,a
   1300 CA FE 16           6627 	jp	z,00164$
   1303                    6628 00198$:
                           6629 ;	game.c 954
                           6630 ;	genCmpEq
                           6631 ; genCmpEq: left 1, right 1, result 0
   1303 78                 6632 	ld	a,b
   1304 FE 01              6633 	cp	a,#0x01
   1306 C2 54 16           6634 	jp	nz,00124$
   1309 18 03              6635 	jr	00200$
   130B                    6636 00199$:
   130B C3 54 16           6637 	jp	00124$
   130E                    6638 00200$:
                           6639 ;	game.c 956
                           6640 ;	genAssign
   130E 0E 02              6641 	ld	c,#0x02
                           6642 ;	game.c 959
                           6643 ;	genPlus
                           6644 ;	AOP_STK for _move_character_sloc0_1_0
                           6645 ;	AOP_STK for _move_character_sloc3_1_0
                           6646 ;	genPlusIncr
                           6647 ;	Can't optimise plus by inc, falling back to the normal way
   1310 F8 0D              6648 	lda	hl,13(sp)
   1312 5E                 6649 	ld	e,(hl)
   1313 23                 6650 	inc	hl
   1314 56                 6651 	ld	d,(hl)
   1315 21 0A 00           6652 	ld	hl,#0x000A
   1318 19                 6653 	add	hl,de
   1319 7D                 6654 	ld	a,l
   131A 54                 6655 	ld	d,h
   131B F8 07              6656 	lda	hl,7(sp)
                           6657 ;	genPointerGet
                           6658 ;	AOP_STK for _move_character_sloc3_1_0
                           6659 ;	AOP_STK for _move_character_sloc4_1_0
   131D 22                 6660 	ld	(hl+),a
   131E 72                 6661 	ld	(hl),d
   131F 5F                 6662 	ld	e,a
   1320 1A                 6663 	ld	a,(de)
   1321 2B                 6664 	dec	hl
   1322 2B                 6665 	dec	hl
                           6666 ;	genCmpEq
                           6667 ;	AOP_STK for _move_character_sloc4_1_0
                           6668 ; genCmpEq: left 1, right 1, result 0
   1323 77                 6669 	ld      (hl),a
                           6670 ; Removed redundent load
   1324 FE 04              6671 	cp	a,#0x04
   1326 CA 46 13           6672 	jp	z,00105$
   1329                    6673 00201$:
                           6674 ;	game.c 960
                           6675 ;	genCmpEq
                           6676 ;	AOP_STK for _move_character_sloc4_1_0
                           6677 ; genCmpEq: left 1, right 1, result 0
   1329 F8 06              6678 	lda	hl,6(sp)
   132B 7E                 6679 	ld	a,(hl)
   132C FE 08              6680 	cp	a,#0x08
   132E CA 46 13           6681 	jp	z,00105$
   1331                    6682 00202$:
                           6683 ;	game.c 961
                           6684 ;	genCmpEq
                           6685 ;	AOP_STK for _move_character_sloc4_1_0
                           6686 ; genCmpEq: left 1, right 1, result 0
   1331 F8 06              6687 	lda	hl,6(sp)
   1333 7E                 6688 	ld	a,(hl)
   1334 FE 0C              6689 	cp	a,#0x0C
   1336 CA 46 13           6690 	jp	z,00105$
   1339                    6691 00203$:
                           6692 ;	game.c 962
                           6693 ;	genCmpEq
                           6694 ;	AOP_STK for _move_character_sloc4_1_0
                           6695 ; genCmpEq: left 1, right 1, result 0
   1339 F8 06              6696 	lda	hl,6(sp)
   133B 7E                 6697 	ld	a,(hl)
   133C FE 10              6698 	cp	a,#0x10
   133E C2 A1 13           6699 	jp	nz,00106$
   1341 18 03              6700 	jr	00205$
   1343                    6701 00204$:
   1343 C3 A1 13           6702 	jp	00106$
   1346                    6703 00205$:
                           6704 ;	genLabel
   1346                    6705 00105$:
                           6706 ;	game.c 964
                           6707 ;	genPlus
                           6708 ;	AOP_STK for _move_character_sloc0_1_0
                           6709 ;	AOP_STK for _move_character_sloc5_1_0
                           6710 ;	genPlusIncr
                           6711 ;	Can't optimise plus by inc, falling back to the normal way
   1346 F8 0D              6712 	lda	hl,13(sp)
   1348 5E                 6713 	ld	e,(hl)
   1349 23                 6714 	inc	hl
   134A 56                 6715 	ld	d,(hl)
   134B 21 08 00           6716 	ld	hl,#0x0008
   134E 19                 6717 	add	hl,de
   134F 7D                 6718 	ld	a,l
   1350 54                 6719 	ld	d,h
   1351 F8 04              6720 	lda	hl,4(sp)
                           6721 ;	genPointerGet
                           6722 ;	AOP_STK for _move_character_sloc5_1_0
                           6723 ;	AOP_STK for _move_character_sloc4_1_0
   1353 22                 6724 	ld	(hl+),a
   1354 72                 6725 	ld	(hl),d
   1355 5F                 6726 	ld	e,a
   1356 1A                 6727 	ld	a,(de)
   1357 23                 6728 	inc	hl
   1358 77                 6729 	ld	(hl),a
                           6730 ;	genPlus
                           6731 ;	AOP_STK for _move_character_sloc0_1_0
                           6732 ;	AOP_STK for _move_character_sloc5_1_0
                           6733 ;	genPlusIncr
                           6734 ;	Can't optimise plus by inc, falling back to the normal way
   1359 F8 0D              6735 	lda	hl,13(sp)
   135B 5E                 6736 	ld	e,(hl)
   135C 23                 6737 	inc	hl
   135D 56                 6738 	ld	d,(hl)
   135E 21 01 00           6739 	ld	hl,#0x0001
   1361 19                 6740 	add	hl,de
   1362 7D                 6741 	ld	a,l
   1363 54                 6742 	ld	d,h
   1364 F8 04              6743 	lda	hl,4(sp)
                           6744 ;	genPointerGet
                           6745 ;	AOP_STK for _move_character_sloc5_1_0
                           6746 ;	AOP_STK for _move_character_sloc6_1_0
   1366 22                 6747 	ld	(hl+),a
   1367 72                 6748 	ld	(hl),d
   1368 5F                 6749 	ld	e,a
   1369 1A                 6750 	ld	a,(de)
   136A 2B                 6751 	dec	hl
   136B 2B                 6752 	dec	hl
   136C 77                 6753 	ld	(hl),a
                           6754 ;	genPointerGet
                           6755 ;	AOP_STK for _move_character_sloc0_1_0
                           6756 ;	AOP_STK for _move_character_sloc5_1_0
   136D F8 0D              6757 	lda	hl,13(sp)
   136F 5E                 6758 	ld	e,(hl)
   1370 23                 6759 	inc	hl
   1371 56                 6760 	ld	d,(hl)
   1372 1A                 6761 	ld	a,(de)
   1373 F8 04              6762 	lda	hl,4(sp)
   1375 77                 6763 	ld	(hl),a
                           6764 ;	genIpush
                           6765 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1376 C5                 6766 	push	bc
                           6767 ;	AOP_STK for _move_character_sloc4_1_0
   1377 23                 6768 	inc	hl
   1378 23                 6769 	inc	hl
   1379 7E                 6770 	ld	a,(hl)
   137A F5                 6771 	push	af
   137B 33                 6772 	inc	sp
                           6773 ;	genIpush
                           6774 ;	AOP_STK for _move_character_sloc6_1_0
   137C F8 06              6775 	lda	hl,6(sp)
   137E 7E                 6776 	ld	a,(hl)
   137F F5                 6777 	push	af
   1380 33                 6778 	inc	sp
                           6779 ;	genIpush
                           6780 ;	AOP_STK for _move_character_sloc5_1_0
   1381 23                 6781 	inc	hl
   1382 7E                 6782 	ld	a,(hl)
   1383 F5                 6783 	push	af
   1384 33                 6784 	inc	sp
                           6785 ;	genCall
   1385 CD 2B 10           6786 	call	_can_move
                           6787 ;	AOP_STK for _move_character_sloc5_1_0
   1388 F8 0A              6788 	lda	hl,10(sp)
   138A 72                 6789 	ld	(hl),d
   138B 2B                 6790 	dec	hl
   138C 73                 6791 	ld	(hl),e
   138D E8 03              6792 	lda	sp,3(sp)
   138F C1                 6793 	pop	bc
                           6794 ;	genIfx
                           6795 ;	AOP_STK for _move_character_sloc5_1_0
   1390 F8 04              6796 	lda	hl,4(sp)
   1392 2A                 6797 	ld	a,(hl+)
   1393 B6                 6798 	or	a,(hl)
   1394 C2 A1 13           6799 	jp	nz,00106$
                           6800 ;	game.c 965
                           6801 ;	genAssign (pointer)
                           6802 ;	AOP_STK for _move_character_sloc3_1_0
   1397 23                 6803 	inc	hl
   1398 23                 6804 	inc	hl
   1399 5E                 6805 	ld	e,(hl)
   139A 23                 6806 	inc	hl
   139B 56                 6807 	ld	d,(hl)
   139C 3E 01              6808 	ld	a,#0x01
   139E 12                 6809 	ld	(de),a
                           6810 ;	game.c 967
                           6811 ;	genAssign
   139F 0E 00              6812 	ld	c,#0x00
                           6813 ;	genLabel
   13A1                    6814 00106$:
                           6815 ;	game.c 972
                           6816 ;	genPlus
                           6817 ;	AOP_STK for _move_character_sloc0_1_0
                           6818 ;	AOP_STK for _move_character_sloc5_1_0
                           6819 ;	genPlusIncr
                           6820 ;	Can't optimise plus by inc, falling back to the normal way
   13A1 F8 0D              6821 	lda	hl,13(sp)
   13A3 5E                 6822 	ld	e,(hl)
   13A4 23                 6823 	inc	hl
   13A5 56                 6824 	ld	d,(hl)
   13A6 21 08 00           6825 	ld	hl,#0x0008
   13A9 19                 6826 	add	hl,de
   13AA 7D                 6827 	ld	a,l
   13AB 54                 6828 	ld	d,h
   13AC F8 04              6829 	lda	hl,4(sp)
                           6830 ;	genPointerGet
                           6831 ;	AOP_STK for _move_character_sloc5_1_0
                           6832 ;	AOP_STK for _move_character_sloc6_1_0
   13AE 22                 6833 	ld	(hl+),a
   13AF 72                 6834 	ld	(hl),d
   13B0 5F                 6835 	ld	e,a
   13B1 1A                 6836 	ld	a,(de)
   13B2 2B                 6837 	dec	hl
   13B3 2B                 6838 	dec	hl
   13B4 77                 6839 	ld	(hl),a
                           6840 ;	genCmpGt
                           6841 ;	AOP_STK for _move_character_sloc6_1_0
                           6842 ;	AOP_STK for _move_character_sloc5_1_0
   13B5 3E 04              6843 	ld	a,#0x04
   13B7 96                 6844 	sub	a,(hl)
   13B8 3E 00              6845 	ld	a,#0x00
   13BA 17                 6846 	rla
   13BB 23                 6847 	inc	hl
   13BC 77                 6848 	ld	(hl),a
                           6849 ;	genIfx
                           6850 ;	AOP_STK for _move_character_sloc5_1_0
   13BD AF                 6851 	xor	a,a
   13BE B6                 6852 	or	a,(hl)
   13BF C2 2A 15           6853 	jp	nz,00115$
                           6854 ;	genJumpTab
                           6855 ;	AOP_STK for _move_character_sloc6_1_0
   13C2 2B                 6856 	dec	hl
   13C3 5E                 6857 	ld	e,(hl)
   13C4 16 00              6858 	ld	d,#0x00
   13C6 21 CD 13           6859 	ld	hl,#00206$
   13C9 19                 6860 	add	hl,de
   13CA 19                 6861 	add	hl,de
   13CB 19                 6862 	add	hl,de
   13CC E9                 6863 	jp	(hl)
   13CD                    6864 00206$:
   13CD C3 24 15           6865 	jp	00114$
   13D0 C3 76 14           6866 	jp	00112$
   13D3 C3 2C 14           6867 	jp	00111$
   13D6 C3 D0 14           6868 	jp	00113$
   13D9 C3 DC 13           6869 	jp	00110$
                           6870 ;	game.c 974
                           6871 ;	genLabel
   13DC                    6872 00110$:
                           6873 ;	genPointerGet
                           6874 ;	AOP_STK for _move_character_sloc0_1_0
                           6875 ;	AOP_STK for _move_character_sloc4_1_0
   13DC F8 0D              6876 	lda	hl,13(sp)
   13DE 5E                 6877 	ld	e,(hl)
   13DF 23                 6878 	inc	hl
   13E0 56                 6879 	ld	d,(hl)
   13E1 1A                 6880 	ld	a,(de)
   13E2 F8 06              6881 	lda	hl,6(sp)
                           6882 ;	genMinus
                           6883 ;	AOP_STK for _move_character_sloc4_1_0
                           6884 ;	AOP_STK for _move_character_sloc7_1_0
   13E4 77                 6885 	ld      (hl),a
                           6886 ; Removed redundent load
   13E5 91                 6887 	sub	a,c
   13E6 F8 02              6888 	lda	hl,2(sp)
   13E8 77                 6889 	ld	(hl),a
                           6890 ;	genAssign (pointer)
                           6891 ;	AOP_STK for _move_character_sloc0_1_0
                           6892 ;	AOP_STK for _move_character_sloc7_1_0
   13E9 F8 0D              6893 	lda	hl,13(sp)
   13EB 5E                 6894 	ld	e,(hl)
   13EC 23                 6895 	inc	hl
   13ED 56                 6896 	ld	d,(hl)
   13EE F8 02              6897 	lda	hl,2(sp)
   13F0 7E                 6898 	ld	a,(hl)
   13F1 12                 6899 	ld	(de),a
                           6900 ;	game.c 975
                           6901 ;	genPlus
                           6902 ;	AOP_STK for _move_character_sloc0_1_0
                           6903 ;	AOP_STK for _move_character_sloc8_1_0
                           6904 ;	genPlusIncr
                           6905 ;	Can't optimise plus by inc, falling back to the normal way
   13F2 F8 0D              6906 	lda	hl,13(sp)
   13F4 5E                 6907 	ld	e,(hl)
   13F5 23                 6908 	inc	hl
   13F6 56                 6909 	ld	d,(hl)
   13F7 21 04 00           6910 	ld	hl,#0x0004
   13FA 19                 6911 	add	hl,de
   13FB 7D                 6912 	ld	a,l
   13FC 54                 6913 	ld	d,h
   13FD F8 00              6914 	lda	hl,0(sp)
                           6915 ;	genPointerGet
                           6916 ;	AOP_STK for _move_character_sloc8_1_0
                           6917 ;	AOP_STK for _move_character_sloc7_1_0
   13FF 22                 6918 	ld	(hl+),a
   1400 72                 6919 	ld	(hl),d
   1401 5F                 6920 	ld	e,a
   1402 1A                 6921 	ld	a,(de)
   1403 23                 6922 	inc	hl
   1404 77                 6923 	ld	(hl),a
                           6924 ;	genIpush
                           6925 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1405 C5                 6926 	push	bc
                           6927 ;	AOP_STK for _move_character_sloc7_1_0
   1406 7E                 6928 	ld	a,(hl)
   1407 F5                 6929 	push	af
   1408 33                 6930 	inc	sp
                           6931 ;	genIpush
   1409 78                 6932 	ld	a,b
   140A F5                 6933 	push	af
   140B 33                 6934 	inc	sp
                           6935 ;	genCall
   140C CD 00 00           6936 	call	_set_sprite_tile
   140F E8 02              6937 	lda	sp,2(sp)
   1411 C1                 6938 	pop	bc
                           6939 ;	game.c 976
                           6940 ;	genPointerGet
                           6941 ;	AOP_STK for _move_character_sloc1_1_0
                           6942 ;	AOP_STK for _move_character_sloc8_1_0
   1412 F8 0B              6943 	lda	hl,11(sp)
   1414 5E                 6944 	ld	e,(hl)
   1415 23                 6945 	inc	hl
   1416 56                 6946 	ld	d,(hl)
   1417 1A                 6947 	ld	a,(de)
   1418 F8 00              6948 	lda	hl,0(sp)
   141A 77                 6949 	ld	(hl),a
                           6950 ;	genIpush
                           6951 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   141B C5                 6952 	push	bc
   141C 3E 20              6953 	ld	a,#0x20
   141E F5                 6954 	push	af
   141F 33                 6955 	inc	sp
                           6956 ;	genIpush
                           6957 ;	AOP_STK for _move_character_sloc8_1_0
   1420 7E                 6958 	ld	a,(hl)
   1421 F5                 6959 	push	af
   1422 33                 6960 	inc	sp
                           6961 ;	genCall
   1423 CD 00 00           6962 	call	_set_sprite_prop
   1426 E8 02              6963 	lda	sp,2(sp)
   1428 C1                 6964 	pop	bc
                           6965 ;	game.c 977
                           6966 ;	genGoto
   1429 C3 2A 15           6967 	jp	00115$
                           6968 ;	game.c 979
                           6969 ;	genLabel
   142C                    6970 00111$:
                           6971 ;	genPlus
                           6972 ;	AOP_STK for _move_character_sloc0_1_0
                           6973 ;	AOP_STK for _move_character_sloc8_1_0
                           6974 ;	genPlusIncr
                           6975 ;	Can't optimise plus by inc, falling back to the normal way
   142C F8 0D              6976 	lda	hl,13(sp)
   142E 5E                 6977 	ld	e,(hl)
   142F 23                 6978 	inc	hl
   1430 56                 6979 	ld	d,(hl)
   1431 21 04 00           6980 	ld	hl,#0x0004
   1434 19                 6981 	add	hl,de
   1435 7D                 6982 	ld	a,l
   1436 54                 6983 	ld	d,h
   1437 F8 00              6984 	lda	hl,0(sp)
                           6985 ;	genPointerGet
                           6986 ;	AOP_STK for _move_character_sloc8_1_0
                           6987 ;	AOP_STK for _move_character_sloc7_1_0
   1439 22                 6988 	ld	(hl+),a
   143A 72                 6989 	ld	(hl),d
   143B 5F                 6990 	ld	e,a
   143C 1A                 6991 	ld	a,(de)
   143D 23                 6992 	inc	hl
   143E 77                 6993 	ld	(hl),a
                           6994 ;	genIpush
                           6995 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   143F C5                 6996 	push	bc
                           6997 ;	AOP_STK for _move_character_sloc7_1_0
   1440 7E                 6998 	ld	a,(hl)
   1441 F5                 6999 	push	af
   1442 33                 7000 	inc	sp
                           7001 ;	genIpush
   1443 78                 7002 	ld	a,b
   1444 F5                 7003 	push	af
   1445 33                 7004 	inc	sp
                           7005 ;	genCall
   1446 CD 00 00           7006 	call	_set_sprite_tile
   1449 E8 02              7007 	lda	sp,2(sp)
   144B C1                 7008 	pop	bc
                           7009 ;	game.c 980
                           7010 ;	genPointerGet
                           7011 ;	AOP_STK for _move_character_sloc1_1_0
                           7012 ;	AOP_STK for _move_character_sloc8_1_0
   144C F8 0B              7013 	lda	hl,11(sp)
   144E 5E                 7014 	ld	e,(hl)
   144F 23                 7015 	inc	hl
   1450 56                 7016 	ld	d,(hl)
   1451 1A                 7017 	ld	a,(de)
   1452 F8 00              7018 	lda	hl,0(sp)
   1454 77                 7019 	ld	(hl),a
                           7020 ;	genIpush
                           7021 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1455 C5                 7022 	push	bc
   1456 3E 00              7023 	ld	a,#0x00
   1458 F5                 7024 	push	af
   1459 33                 7025 	inc	sp
                           7026 ;	genIpush
                           7027 ;	AOP_STK for _move_character_sloc8_1_0
   145A 7E                 7028 	ld	a,(hl)
   145B F5                 7029 	push	af
   145C 33                 7030 	inc	sp
                           7031 ;	genCall
   145D CD 00 00           7032 	call	_set_sprite_prop
   1460 E8 02              7033 	lda	sp,2(sp)
   1462 C1                 7034 	pop	bc
                           7035 ;	game.c 981
                           7036 ;	genPointerGet
                           7037 ;	AOP_STK for _move_character_sloc0_1_0
                           7038 ;	AOP_STK for _move_character_sloc8_1_0
   1463 F8 0D              7039 	lda	hl,13(sp)
   1465 5E                 7040 	ld	e,(hl)
   1466 23                 7041 	inc	hl
   1467 56                 7042 	ld	d,(hl)
   1468 1A                 7043 	ld	a,(de)
   1469 F8 00              7044 	lda	hl,0(sp)
                           7045 ;	genPlus
                           7046 ;	AOP_STK for _move_character_sloc8_1_0
                           7047 ;	Can't optimise plus by inc, falling back to the normal way
   146B 77                 7048 	ld      (hl),a
                           7049 ; Removed redundent load
   146C 81                 7050 	add	a,c
                           7051 ;	genAssign (pointer)
                           7052 ;	AOP_STK for _move_character_sloc0_1_0
   146D F8 0D              7053 	lda	hl,13(sp)
   146F 5E                 7054 	ld	e,(hl)
   1470 23                 7055 	inc	hl
   1471 56                 7056 	ld	d,(hl)
   1472 12                 7057 	ld	(de),a
                           7058 ;	game.c 982
                           7059 ;	genGoto
   1473 C3 2A 15           7060 	jp	00115$
                           7061 ;	game.c 984
                           7062 ;	genLabel
   1476                    7063 00112$:
                           7064 ;	genPlus
                           7065 ;	AOP_STK for _move_character_sloc0_1_0
                           7066 ;	AOP_STK for _move_character_sloc8_1_0
                           7067 ;	genPlusIncr
                           7068 ;	Can't optimise plus by inc, falling back to the normal way
   1476 F8 0D              7069 	lda	hl,13(sp)
   1478 5E                 7070 	ld	e,(hl)
   1479 23                 7071 	inc	hl
   147A 56                 7072 	ld	d,(hl)
   147B 21 07 00           7073 	ld	hl,#0x0007
   147E 19                 7074 	add	hl,de
   147F 7D                 7075 	ld	a,l
   1480 54                 7076 	ld	d,h
   1481 F8 00              7077 	lda	hl,0(sp)
                           7078 ;	genPointerGet
                           7079 ;	AOP_STK for _move_character_sloc8_1_0
                           7080 ;	AOP_STK for _move_character_sloc7_1_0
   1483 22                 7081 	ld	(hl+),a
   1484 72                 7082 	ld	(hl),d
   1485 5F                 7083 	ld	e,a
   1486 1A                 7084 	ld	a,(de)
   1487 23                 7085 	inc	hl
   1488 77                 7086 	ld	(hl),a
                           7087 ;	genIpush
                           7088 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1489 C5                 7089 	push	bc
                           7090 ;	AOP_STK for _move_character_sloc7_1_0
   148A 7E                 7091 	ld	a,(hl)
   148B F5                 7092 	push	af
   148C 33                 7093 	inc	sp
                           7094 ;	genIpush
   148D 78                 7095 	ld	a,b
   148E F5                 7096 	push	af
   148F 33                 7097 	inc	sp
                           7098 ;	genCall
   1490 CD 00 00           7099 	call	_set_sprite_tile
   1493 E8 02              7100 	lda	sp,2(sp)
   1495 C1                 7101 	pop	bc
                           7102 ;	game.c 985
                           7103 ;	genPointerGet
                           7104 ;	AOP_STK for _move_character_sloc1_1_0
                           7105 ;	AOP_STK for _move_character_sloc8_1_0
   1496 F8 0B              7106 	lda	hl,11(sp)
   1498 5E                 7107 	ld	e,(hl)
   1499 23                 7108 	inc	hl
   149A 56                 7109 	ld	d,(hl)
   149B 1A                 7110 	ld	a,(de)
   149C F8 00              7111 	lda	hl,0(sp)
   149E 77                 7112 	ld	(hl),a
                           7113 ;	genIpush
                           7114 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   149F C5                 7115 	push	bc
   14A0 3E 20              7116 	ld	a,#0x20
   14A2 F5                 7117 	push	af
   14A3 33                 7118 	inc	sp
                           7119 ;	genIpush
                           7120 ;	AOP_STK for _move_character_sloc8_1_0
   14A4 7E                 7121 	ld	a,(hl)
   14A5 F5                 7122 	push	af
   14A6 33                 7123 	inc	sp
                           7124 ;	genCall
   14A7 CD 00 00           7125 	call	_set_sprite_prop
   14AA E8 02              7126 	lda	sp,2(sp)
   14AC C1                 7127 	pop	bc
                           7128 ;	game.c 986
                           7129 ;	genPlus
                           7130 ;	AOP_STK for _move_character_sloc0_1_0
                           7131 ;	AOP_STK for _move_character_sloc8_1_0
                           7132 ;	genPlusIncr
                           7133 ;	Can't optimise plus by inc, falling back to the normal way
   14AD F8 0D              7134 	lda	hl,13(sp)
   14AF 5E                 7135 	ld	e,(hl)
   14B0 23                 7136 	inc	hl
   14B1 56                 7137 	ld	d,(hl)
   14B2 21 01 00           7138 	ld	hl,#0x0001
   14B5 19                 7139 	add	hl,de
   14B6 7D                 7140 	ld	a,l
   14B7 54                 7141 	ld	d,h
   14B8 F8 00              7142 	lda	hl,0(sp)
                           7143 ;	genPointerGet
                           7144 ;	AOP_STK for _move_character_sloc8_1_0
                           7145 ;	AOP_STK for _move_character_sloc7_1_0
   14BA 22                 7146 	ld	(hl+),a
   14BB 72                 7147 	ld	(hl),d
   14BC 5F                 7148 	ld	e,a
   14BD 1A                 7149 	ld	a,(de)
   14BE 23                 7150 	inc	hl
                           7151 ;	genMinus
                           7152 ;	AOP_STK for _move_character_sloc7_1_0
                           7153 ;	AOP_STK for _move_character_sloc4_1_0
   14BF 77                 7154 	ld      (hl),a
                           7155 ; Removed redundent load
   14C0 91                 7156 	sub	a,c
   14C1 F8 06              7157 	lda	hl,6(sp)
   14C3 77                 7158 	ld	(hl),a
                           7159 ;	genAssign (pointer)
                           7160 ;	AOP_STK for _move_character_sloc8_1_0
                           7161 ;	AOP_STK for _move_character_sloc4_1_0
   14C4 F8 00              7162 	lda	hl,0(sp)
   14C6 5E                 7163 	ld	e,(hl)
   14C7 23                 7164 	inc	hl
   14C8 56                 7165 	ld	d,(hl)
   14C9 F8 06              7166 	lda	hl,6(sp)
   14CB 7E                 7167 	ld	a,(hl)
   14CC 12                 7168 	ld	(de),a
                           7169 ;	game.c 987
                           7170 ;	genGoto
   14CD C3 2A 15           7171 	jp	00115$
                           7172 ;	game.c 989
                           7173 ;	genLabel
   14D0                    7174 00113$:
                           7175 ;	genPlus
                           7176 ;	AOP_STK for _move_character_sloc0_1_0
                           7177 ;	AOP_STK for _move_character_sloc8_1_0
                           7178 ;	genPlusIncr
                           7179 ;	Can't optimise plus by inc, falling back to the normal way
   14D0 F8 0D              7180 	lda	hl,13(sp)
   14D2 5E                 7181 	ld	e,(hl)
   14D3 23                 7182 	inc	hl
   14D4 56                 7183 	ld	d,(hl)
   14D5 21 07 00           7184 	ld	hl,#0x0007
   14D8 19                 7185 	add	hl,de
   14D9 7D                 7186 	ld	a,l
   14DA 54                 7187 	ld	d,h
   14DB F8 00              7188 	lda	hl,0(sp)
                           7189 ;	genPointerGet
                           7190 ;	AOP_STK for _move_character_sloc8_1_0
                           7191 ;	AOP_STK for _move_character_sloc7_1_0
   14DD 22                 7192 	ld	(hl+),a
   14DE 72                 7193 	ld	(hl),d
   14DF 5F                 7194 	ld	e,a
   14E0 1A                 7195 	ld	a,(de)
   14E1 23                 7196 	inc	hl
   14E2 77                 7197 	ld	(hl),a
                           7198 ;	genIpush
                           7199 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14E3 C5                 7200 	push	bc
                           7201 ;	AOP_STK for _move_character_sloc7_1_0
   14E4 7E                 7202 	ld	a,(hl)
   14E5 F5                 7203 	push	af
   14E6 33                 7204 	inc	sp
                           7205 ;	genIpush
   14E7 78                 7206 	ld	a,b
   14E8 F5                 7207 	push	af
   14E9 33                 7208 	inc	sp
                           7209 ;	genCall
   14EA CD 00 00           7210 	call	_set_sprite_tile
   14ED E8 02              7211 	lda	sp,2(sp)
   14EF C1                 7212 	pop	bc
                           7213 ;	game.c 990
                           7214 ;	genPointerGet
                           7215 ;	AOP_STK for _move_character_sloc1_1_0
                           7216 ;	AOP_STK for _move_character_sloc8_1_0
   14F0 F8 0B              7217 	lda	hl,11(sp)
   14F2 5E                 7218 	ld	e,(hl)
   14F3 23                 7219 	inc	hl
   14F4 56                 7220 	ld	d,(hl)
   14F5 1A                 7221 	ld	a,(de)
   14F6 F8 00              7222 	lda	hl,0(sp)
   14F8 77                 7223 	ld	(hl),a
                           7224 ;	genIpush
                           7225 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14F9 C5                 7226 	push	bc
   14FA 3E 40              7227 	ld	a,#0x40
   14FC F5                 7228 	push	af
   14FD 33                 7229 	inc	sp
                           7230 ;	genIpush
                           7231 ;	AOP_STK for _move_character_sloc8_1_0
   14FE 7E                 7232 	ld	a,(hl)
   14FF F5                 7233 	push	af
   1500 33                 7234 	inc	sp
                           7235 ;	genCall
   1501 CD 00 00           7236 	call	_set_sprite_prop
   1504 E8 02              7237 	lda	sp,2(sp)
   1506 C1                 7238 	pop	bc
                           7239 ;	game.c 991
                           7240 ;	genPlus
                           7241 ;	AOP_STK for _move_character_sloc0_1_0
                           7242 ;	AOP_STK for _move_character_sloc8_1_0
                           7243 ;	genPlusIncr
                           7244 ;	Can't optimise plus by inc, falling back to the normal way
   1507 F8 0D              7245 	lda	hl,13(sp)
   1509 5E                 7246 	ld	e,(hl)
   150A 23                 7247 	inc	hl
   150B 56                 7248 	ld	d,(hl)
   150C 21 01 00           7249 	ld	hl,#0x0001
   150F 19                 7250 	add	hl,de
   1510 7D                 7251 	ld	a,l
   1511 54                 7252 	ld	d,h
   1512 F8 00              7253 	lda	hl,0(sp)
                           7254 ;	genPointerGet
                           7255 ;	AOP_STK for _move_character_sloc8_1_0
                           7256 ;	AOP_STK for _move_character_sloc7_1_0
   1514 22                 7257 	ld	(hl+),a
   1515 72                 7258 	ld	(hl),d
   1516 5F                 7259 	ld	e,a
   1517 1A                 7260 	ld	a,(de)
   1518 23                 7261 	inc	hl
                           7262 ;	genPlus
                           7263 ;	AOP_STK for _move_character_sloc7_1_0
                           7264 ;	Can't optimise plus by inc, falling back to the normal way
   1519 77                 7265 	ld      (hl),a
                           7266 ; Removed redundent load
   151A 81                 7267 	add	a,c
                           7268 ;	genAssign (pointer)
                           7269 ;	AOP_STK for _move_character_sloc8_1_0
   151B 2B                 7270 	dec	hl
   151C 2B                 7271 	dec	hl
   151D 5E                 7272 	ld	e,(hl)
   151E 23                 7273 	inc	hl
   151F 56                 7274 	ld	d,(hl)
   1520 12                 7275 	ld	(de),a
                           7276 ;	game.c 992
                           7277 ;	genGoto
   1521 C3 2A 15           7278 	jp	00115$
                           7279 ;	game.c 994
                           7280 ;	genLabel
   1524                    7281 00114$:
                           7282 ;	genCall
                           7283 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1524 C5                 7284 	push	bc
   1525 CD 14 11           7285 	call	_rotate_player
   1528 E1                 7286 	pop	hl
   1529 44                 7287 	ld	b,h
                           7288 ;	game.c 996
                           7289 ;	genLabel
   152A                    7290 00115$:
                           7291 ;	game.c 998
                           7292 ;	genPointerGet
                           7293 ;	AOP_STK for _move_character_sloc3_1_0
   152A F8 07              7294 	lda	hl,7(sp)
   152C 5E                 7295 	ld	e,(hl)
   152D 23                 7296 	inc	hl
   152E 56                 7297 	ld	d,(hl)
   152F 1A                 7298 	ld	a,(de)
   1530 4F                 7299 	ld	c,a
                           7300 ;	genMinus
   1531 0D                 7301 	dec	c
                           7302 ;	genAssign (pointer)
                           7303 ;	AOP_STK for _move_character_sloc3_1_0
   1532 2B                 7304 	dec	hl
   1533 5E                 7305 	ld	e,(hl)
   1534 23                 7306 	inc	hl
   1535 56                 7307 	ld	d,(hl)
   1536 79                 7308 	ld	a,c
   1537 12                 7309 	ld	(de),a
                           7310 ;	game.c 999
                           7311 ;	genCmpEq
                           7312 ; genCmpEq: left 1, right 1, result 0
   1538 79                 7313 	ld	a,c
   1539 B7                 7314 	or	a,a
   153A C2 54 16           7315 	jp	nz,00124$
   153D 18 03              7316 	jr	00208$
   153F                    7317 00207$:
   153F C3 54 16           7318 	jp	00124$
   1542                    7319 00208$:
                           7320 ;	game.c 1000
                           7321 ;	genAssign (pointer)
                           7322 ;	AOP_STK for _move_character_sloc2_1_0
   1542 F8 09              7323 	lda	hl,9(sp)
   1544 5E                 7324 	ld	e,(hl)
   1545 23                 7325 	inc	hl
   1546 56                 7326 	ld	d,(hl)
   1547 3E 00              7327 	ld	a,#0x00
   1549 12                 7328 	ld	(de),a
                           7329 ;	game.c 1001
                           7330 ;	genCmpLt
                           7331 ;	AOP_STK for _move_character_sloc6_1_0
   154A F8 03              7332 	lda	hl,3(sp)
   154C 7E                 7333 	ld	a,(hl)
   154D FE 01              7334 	cp	#0x01
   154F DA 54 16           7335 	jp	c,00124$
                           7336 ;	genIfx
                           7337 ;	AOP_STK for _move_character_sloc5_1_0
   1552 AF                 7338 	xor	a,a
   1553 23                 7339 	inc	hl
   1554 B6                 7340 	or	a,(hl)
   1555 C2 54 16           7341 	jp	nz,00124$
                           7342 ;	genMinus
                           7343 ;	AOP_STK for _move_character_sloc6_1_0
   1558 2B                 7344 	dec	hl
   1559 7E                 7345 	ld	a,(hl)
   155A C6 FF              7346 	add	a,#0xFF
   155C 4F                 7347 	ld	c,a
                           7348 ;	genJumpTab
   155D 59                 7349 	ld	e,c
   155E 16 00              7350 	ld	d,#0x00
   1560 21 67 15           7351 	ld	hl,#00209$
   1563 19                 7352 	add	hl,de
   1564 19                 7353 	add	hl,de
   1565 19                 7354 	add	hl,de
   1566 E9                 7355 	jp	(hl)
   1567                    7356 00209$:
   1567 C3 E5 15           7357 	jp	00118$
   156A C3 AC 15           7358 	jp	00117$
   156D C3 1E 16           7359 	jp	00119$
   1570 C3 73 15           7360 	jp	00116$
                           7361 ;	game.c 1004
                           7362 ;	genLabel
   1573                    7363 00116$:
                           7364 ;	genPlus
                           7365 ;	AOP_STK for _move_character_sloc0_1_0
                           7366 ;	AOP_STK for _move_character_sloc8_1_0
                           7367 ;	genPlusIncr
                           7368 ;	Can't optimise plus by inc, falling back to the normal way
   1573 F8 0D              7369 	lda	hl,13(sp)
   1575 5E                 7370 	ld	e,(hl)
   1576 23                 7371 	inc	hl
   1577 56                 7372 	ld	d,(hl)
   1578 21 02 00           7373 	ld	hl,#0x0002
   157B 19                 7374 	add	hl,de
   157C 7D                 7375 	ld	a,l
   157D 54                 7376 	ld	d,h
   157E F8 00              7377 	lda	hl,0(sp)
                           7378 ;	genPointerGet
                           7379 ;	AOP_STK for _move_character_sloc8_1_0
   1580 22                 7380 	ld	(hl+),a
   1581 72                 7381 	ld	(hl),d
   1582 5F                 7382 	ld	e,a
   1583 1A                 7383 	ld	a,(de)
   1584 4F                 7384 	ld	c,a
                           7385 ;	genIpush
                           7386 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1585 C5                 7387 	push	bc
   1586 79                 7388 	ld	a,c
   1587 F5                 7389 	push	af
   1588 33                 7390 	inc	sp
                           7391 ;	genIpush
   1589 78                 7392 	ld	a,b
   158A F5                 7393 	push	af
   158B 33                 7394 	inc	sp
                           7395 ;	genCall
   158C CD 00 00           7396 	call	_set_sprite_tile
   158F E8 02              7397 	lda	sp,2(sp)
   1591 E1                 7398 	pop	hl
   1592 44                 7399 	ld	b,h
                           7400 ;	game.c 1005
                           7401 ;	genPointerGet
                           7402 ;	AOP_STK for _move_character_sloc1_1_0
   1593 F8 0B              7403 	lda	hl,11(sp)
   1595 5E                 7404 	ld	e,(hl)
   1596 23                 7405 	inc	hl
   1597 56                 7406 	ld	d,(hl)
   1598 1A                 7407 	ld	a,(de)
   1599 4F                 7408 	ld	c,a
                           7409 ;	genIpush
                           7410 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   159A C5                 7411 	push	bc
   159B 3E 20              7412 	ld	a,#0x20
   159D F5                 7413 	push	af
   159E 33                 7414 	inc	sp
                           7415 ;	genIpush
   159F 79                 7416 	ld	a,c
   15A0 F5                 7417 	push	af
   15A1 33                 7418 	inc	sp
                           7419 ;	genCall
   15A2 CD 00 00           7420 	call	_set_sprite_prop
   15A5 E8 02              7421 	lda	sp,2(sp)
   15A7 E1                 7422 	pop	hl
   15A8 44                 7423 	ld	b,h
                           7424 ;	game.c 1006
                           7425 ;	genGoto
   15A9 C3 54 16           7426 	jp	00124$
                           7427 ;	game.c 1009
                           7428 ;	genLabel
   15AC                    7429 00117$:
                           7430 ;	genPlus
                           7431 ;	AOP_STK for _move_character_sloc0_1_0
                           7432 ;	AOP_STK for _move_character_sloc8_1_0
                           7433 ;	genPlusIncr
                           7434 ;	Can't optimise plus by inc, falling back to the normal way
   15AC F8 0D              7435 	lda	hl,13(sp)
   15AE 5E                 7436 	ld	e,(hl)
   15AF 23                 7437 	inc	hl
   15B0 56                 7438 	ld	d,(hl)
   15B1 21 02 00           7439 	ld	hl,#0x0002
   15B4 19                 7440 	add	hl,de
   15B5 7D                 7441 	ld	a,l
   15B6 54                 7442 	ld	d,h
   15B7 F8 00              7443 	lda	hl,0(sp)
                           7444 ;	genPointerGet
                           7445 ;	AOP_STK for _move_character_sloc8_1_0
   15B9 22                 7446 	ld	(hl+),a
   15BA 72                 7447 	ld	(hl),d
   15BB 5F                 7448 	ld	e,a
   15BC 1A                 7449 	ld	a,(de)
   15BD 4F                 7450 	ld	c,a
                           7451 ;	genIpush
                           7452 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15BE C5                 7453 	push	bc
   15BF 79                 7454 	ld	a,c
   15C0 F5                 7455 	push	af
   15C1 33                 7456 	inc	sp
                           7457 ;	genIpush
   15C2 78                 7458 	ld	a,b
   15C3 F5                 7459 	push	af
   15C4 33                 7460 	inc	sp
                           7461 ;	genCall
   15C5 CD 00 00           7462 	call	_set_sprite_tile
   15C8 E8 02              7463 	lda	sp,2(sp)
   15CA E1                 7464 	pop	hl
   15CB 44                 7465 	ld	b,h
                           7466 ;	game.c 1010
                           7467 ;	genPointerGet
                           7468 ;	AOP_STK for _move_character_sloc1_1_0
   15CC F8 0B              7469 	lda	hl,11(sp)
   15CE 5E                 7470 	ld	e,(hl)
   15CF 23                 7471 	inc	hl
   15D0 56                 7472 	ld	d,(hl)
   15D1 1A                 7473 	ld	a,(de)
   15D2 4F                 7474 	ld	c,a
                           7475 ;	genIpush
                           7476 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15D3 C5                 7477 	push	bc
   15D4 3E 00              7478 	ld	a,#0x00
   15D6 F5                 7479 	push	af
   15D7 33                 7480 	inc	sp
                           7481 ;	genIpush
   15D8 79                 7482 	ld	a,c
   15D9 F5                 7483 	push	af
   15DA 33                 7484 	inc	sp
                           7485 ;	genCall
   15DB CD 00 00           7486 	call	_set_sprite_prop
   15DE E8 02              7487 	lda	sp,2(sp)
   15E0 E1                 7488 	pop	hl
   15E1 44                 7489 	ld	b,h
                           7490 ;	game.c 1011
                           7491 ;	genGoto
   15E2 C3 54 16           7492 	jp	00124$
                           7493 ;	game.c 1013
                           7494 ;	genLabel
   15E5                    7495 00118$:
                           7496 ;	genPlus
                           7497 ;	AOP_STK for _move_character_sloc0_1_0
                           7498 ;	AOP_STK for _move_character_sloc8_1_0
                           7499 ;	genPlusIncr
                           7500 ;	Can't optimise plus by inc, falling back to the normal way
   15E5 F8 0D              7501 	lda	hl,13(sp)
   15E7 5E                 7502 	ld	e,(hl)
   15E8 23                 7503 	inc	hl
   15E9 56                 7504 	ld	d,(hl)
   15EA 21 05 00           7505 	ld	hl,#0x0005
   15ED 19                 7506 	add	hl,de
   15EE 7D                 7507 	ld	a,l
   15EF 54                 7508 	ld	d,h
   15F0 F8 00              7509 	lda	hl,0(sp)
                           7510 ;	genPointerGet
                           7511 ;	AOP_STK for _move_character_sloc8_1_0
   15F2 22                 7512 	ld	(hl+),a
   15F3 72                 7513 	ld	(hl),d
   15F4 5F                 7514 	ld	e,a
   15F5 1A                 7515 	ld	a,(de)
   15F6 4F                 7516 	ld	c,a
                           7517 ;	genIpush
                           7518 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15F7 C5                 7519 	push	bc
   15F8 79                 7520 	ld	a,c
   15F9 F5                 7521 	push	af
   15FA 33                 7522 	inc	sp
                           7523 ;	genIpush
   15FB 78                 7524 	ld	a,b
   15FC F5                 7525 	push	af
   15FD 33                 7526 	inc	sp
                           7527 ;	genCall
   15FE CD 00 00           7528 	call	_set_sprite_tile
   1601 E8 02              7529 	lda	sp,2(sp)
   1603 E1                 7530 	pop	hl
   1604 44                 7531 	ld	b,h
                           7532 ;	game.c 1014
                           7533 ;	genPointerGet
                           7534 ;	AOP_STK for _move_character_sloc1_1_0
   1605 F8 0B              7535 	lda	hl,11(sp)
   1607 5E                 7536 	ld	e,(hl)
   1608 23                 7537 	inc	hl
   1609 56                 7538 	ld	d,(hl)
   160A 1A                 7539 	ld	a,(de)
   160B 4F                 7540 	ld	c,a
                           7541 ;	genIpush
                           7542 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   160C C5                 7543 	push	bc
   160D 3E 20              7544 	ld	a,#0x20
   160F F5                 7545 	push	af
   1610 33                 7546 	inc	sp
                           7547 ;	genIpush
   1611 79                 7548 	ld	a,c
   1612 F5                 7549 	push	af
   1613 33                 7550 	inc	sp
                           7551 ;	genCall
   1614 CD 00 00           7552 	call	_set_sprite_prop
   1617 E8 02              7553 	lda	sp,2(sp)
   1619 E1                 7554 	pop	hl
   161A 44                 7555 	ld	b,h
                           7556 ;	game.c 1015
                           7557 ;	genGoto
   161B C3 54 16           7558 	jp	00124$
                           7559 ;	game.c 1017
                           7560 ;	genLabel
   161E                    7561 00119$:
                           7562 ;	genPlus
                           7563 ;	AOP_STK for _move_character_sloc0_1_0
                           7564 ;	AOP_STK for _move_character_sloc8_1_0
                           7565 ;	genPlusIncr
                           7566 ;	Can't optimise plus by inc, falling back to the normal way
   161E F8 0D              7567 	lda	hl,13(sp)
   1620 5E                 7568 	ld	e,(hl)
   1621 23                 7569 	inc	hl
   1622 56                 7570 	ld	d,(hl)
   1623 21 05 00           7571 	ld	hl,#0x0005
   1626 19                 7572 	add	hl,de
   1627 7D                 7573 	ld	a,l
   1628 54                 7574 	ld	d,h
   1629 F8 00              7575 	lda	hl,0(sp)
                           7576 ;	genPointerGet
                           7577 ;	AOP_STK for _move_character_sloc8_1_0
   162B 22                 7578 	ld	(hl+),a
   162C 72                 7579 	ld	(hl),d
   162D 5F                 7580 	ld	e,a
   162E 1A                 7581 	ld	a,(de)
   162F 4F                 7582 	ld	c,a
                           7583 ;	genIpush
                           7584 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1630 C5                 7585 	push	bc
   1631 79                 7586 	ld	a,c
   1632 F5                 7587 	push	af
   1633 33                 7588 	inc	sp
                           7589 ;	genIpush
   1634 78                 7590 	ld	a,b
   1635 F5                 7591 	push	af
   1636 33                 7592 	inc	sp
                           7593 ;	genCall
   1637 CD 00 00           7594 	call	_set_sprite_tile
   163A E8 02              7595 	lda	sp,2(sp)
   163C E1                 7596 	pop	hl
   163D 44                 7597 	ld	b,h
                           7598 ;	game.c 1018
                           7599 ;	genPointerGet
                           7600 ;	AOP_STK for _move_character_sloc1_1_0
   163E F8 0B              7601 	lda	hl,11(sp)
   1640 5E                 7602 	ld	e,(hl)
   1641 23                 7603 	inc	hl
   1642 56                 7604 	ld	d,(hl)
   1643 1A                 7605 	ld	a,(de)
   1644 4F                 7606 	ld	c,a
                           7607 ;	genIpush
                           7608 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1645 C5                 7609 	push	bc
   1646 3E 40              7610 	ld	a,#0x40
   1648 F5                 7611 	push	af
   1649 33                 7612 	inc	sp
                           7613 ;	genIpush
   164A 79                 7614 	ld	a,c
   164B F5                 7615 	push	af
   164C 33                 7616 	inc	sp
                           7617 ;	genCall
   164D CD 00 00           7618 	call	_set_sprite_prop
   1650 E8 02              7619 	lda	sp,2(sp)
   1652 E1                 7620 	pop	hl
   1653 44                 7621 	ld	b,h
                           7622 ;	game.c 1020
                           7623 ;	genLabel
   1654                    7624 00124$:
                           7625 ;	game.c 1026
                           7626 ;	genCmpEq
                           7627 ; genCmpEq: left 1, right 1, result 0
   1654 78                 7628 	ld	a,b
   1655 FE 02              7629 	cp	a,#0x02
   1657 C2 B2 1A           7630 	jp	nz,00165$
   165A 18 03              7631 	jr	00211$
   165C                    7632 00210$:
   165C C3 B2 1A           7633 	jp	00165$
   165F                    7634 00211$:
                           7635 ;	game.c 1027
                           7636 ;	genPlus
                           7637 ;	AOP_STK for _move_character_sloc0_1_0
                           7638 ;	AOP_STK for _move_character_sloc8_1_0
                           7639 ;	genPlusIncr
                           7640 ;	Can't optimise plus by inc, falling back to the normal way
   165F F8 0D              7641 	lda	hl,13(sp)
   1661 5E                 7642 	ld	e,(hl)
   1662 23                 7643 	inc	hl
   1663 56                 7644 	ld	d,(hl)
   1664 21 04 00           7645 	ld	hl,#0x0004
   1667 19                 7646 	add	hl,de
   1668 7D                 7647 	ld	a,l
   1669 54                 7648 	ld	d,h
   166A F8 00              7649 	lda	hl,0(sp)
                           7650 ;	genPointerGet
                           7651 ;	AOP_STK for _move_character_sloc8_1_0
   166C 22                 7652 	ld	(hl+),a
   166D 72                 7653 	ld	(hl),d
   166E 5F                 7654 	ld	e,a
   166F 1A                 7655 	ld	a,(de)
   1670 4F                 7656 	ld	c,a
                           7657 ;	genIpush
                           7658 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1671 C5                 7659 	push	bc
   1672 79                 7660 	ld	a,c
   1673 F5                 7661 	push	af
   1674 33                 7662 	inc	sp
                           7663 ;	genIpush
   1675 78                 7664 	ld	a,b
   1676 F5                 7665 	push	af
   1677 33                 7666 	inc	sp
                           7667 ;	genCall
   1678 CD 00 00           7668 	call	_set_sprite_tile
   167B E8 02              7669 	lda	sp,2(sp)
   167D E1                 7670 	pop	hl
   167E 44                 7671 	ld	b,h
                           7672 ;	game.c 1029
                           7673 ;	genPointerGet
                           7674 ;	AOP_STK for _move_character_sloc2_1_0
   167F F8 09              7675 	lda	hl,9(sp)
   1681 5E                 7676 	ld	e,(hl)
   1682 23                 7677 	inc	hl
   1683 56                 7678 	ld	d,(hl)
   1684 1A                 7679 	ld	a,(de)
                           7680 ;	genCmpEq
                           7681 ; genCmpEq: left 1, right 1, result 0
   1685 4F                 7682 	ld	c,a
   1686 FE 01              7683 	cp	a,#0x01
   1688 C2 A7 16           7684 	jp	nz,00126$
   168B 18 03              7685 	jr	00213$
   168D                    7686 00212$:
   168D C3 A7 16           7687 	jp	00126$
   1690                    7688 00213$:
                           7689 ;	game.c 1031
                           7690 ;	genAssign (pointer)
                           7691 ;	AOP_STK for _move_character_sloc2_1_0
   1690 F8 09              7692 	lda	hl,9(sp)
   1692 5E                 7693 	ld	e,(hl)
   1693 23                 7694 	inc	hl
   1694 56                 7695 	ld	d,(hl)
   1695 3E 02              7696 	ld	a,#0x02
   1697 12                 7697 	ld	(de),a
                           7698 ;	game.c 1032
                           7699 ;	genPlus
                           7700 ;	AOP_STK for _move_character_sloc0_1_0
                           7701 ;	genPlusIncr
                           7702 ;	Can't optimise plus by inc, falling back to the normal way
   1698 F8 0D              7703 	lda	hl,13(sp)
   169A 5E                 7704 	ld	e,(hl)
   169B 23                 7705 	inc	hl
   169C 56                 7706 	ld	d,(hl)
   169D 21 0A 00           7707 	ld	hl,#0x000A
   16A0 19                 7708 	add	hl,de
   16A1 7D                 7709 	ld	a,l
   16A2 54                 7710 	ld	d,h
   16A3 6F                 7711 	ld	l,a
   16A4 62                 7712 	ld	h,d
                           7713 ;	genAssign (pointer)
   16A5 36 10              7714 	ld	(hl),#0x10
                           7715 ;	genLabel
   16A7                    7716 00126$:
                           7717 ;	game.c 1034
                           7718 ;	genPlus
                           7719 ;	AOP_STK for _move_character_sloc0_1_0
                           7720 ;	AOP_STK for _move_character_sloc8_1_0
                           7721 ;	genPlusIncr
                           7722 ;	Can't optimise plus by inc, falling back to the normal way
   16A7 F8 0D              7723 	lda	hl,13(sp)
   16A9 5E                 7724 	ld	e,(hl)
   16AA 23                 7725 	inc	hl
   16AB 56                 7726 	ld	d,(hl)
   16AC 21 0A 00           7727 	ld	hl,#0x000A
   16AF 19                 7728 	add	hl,de
   16B0 7D                 7729 	ld	a,l
   16B1 54                 7730 	ld	d,h
   16B2 F8 00              7731 	lda	hl,0(sp)
                           7732 ;	genPointerGet
                           7733 ;	AOP_STK for _move_character_sloc8_1_0
   16B4 22                 7734 	ld	(hl+),a
   16B5 72                 7735 	ld	(hl),d
   16B6 5F                 7736 	ld	e,a
   16B7 1A                 7737 	ld	a,(de)
   16B8 4F                 7738 	ld	c,a
                           7739 ;	genMinus
   16B9 0D                 7740 	dec	c
                           7741 ;	genAssign (pointer)
                           7742 ;	AOP_STK for _move_character_sloc8_1_0
   16BA 2B                 7743 	dec	hl
   16BB 5E                 7744 	ld	e,(hl)
   16BC 23                 7745 	inc	hl
   16BD 56                 7746 	ld	d,(hl)
   16BE 79                 7747 	ld	a,c
   16BF 12                 7748 	ld	(de),a
                           7749 ;	game.c 1036
                           7750 ;	genCmpEq
                           7751 ; genCmpEq: left 1, right 1, result 0
   16C0 79                 7752 	ld	a,c
   16C1 B7                 7753 	or	a,a
   16C2 C2 B2 1A           7754 	jp	nz,00165$
   16C5 18 03              7755 	jr	00215$
   16C7                    7756 00214$:
   16C7 C3 B2 1A           7757 	jp	00165$
   16CA                    7758 00215$:
                           7759 ;	game.c 1037
                           7760 ;	genAssign (pointer)
                           7761 ;	AOP_STK for _move_character_sloc2_1_0
   16CA F8 09              7762 	lda	hl,9(sp)
   16CC 5E                 7763 	ld	e,(hl)
   16CD 23                 7764 	inc	hl
   16CE 56                 7765 	ld	d,(hl)
   16CF 3E 00              7766 	ld	a,#0x00
   16D1 12                 7767 	ld	(de),a
                           7768 ;	game.c 1038
                           7769 ;	genPlus
                           7770 ;	AOP_STK for _move_character_sloc0_1_0
                           7771 ;	AOP_STK for _move_character_sloc8_1_0
                           7772 ;	genPlusIncr
                           7773 ;	Can't optimise plus by inc, falling back to the normal way
   16D2 F8 0D              7774 	lda	hl,13(sp)
   16D4 5E                 7775 	ld	e,(hl)
   16D5 23                 7776 	inc	hl
   16D6 56                 7777 	ld	d,(hl)
   16D7 21 02 00           7778 	ld	hl,#0x0002
   16DA 19                 7779 	add	hl,de
   16DB 7D                 7780 	ld	a,l
   16DC 54                 7781 	ld	d,h
   16DD F8 00              7782 	lda	hl,0(sp)
                           7783 ;	genPointerGet
                           7784 ;	AOP_STK for _move_character_sloc8_1_0
   16DF 22                 7785 	ld	(hl+),a
   16E0 72                 7786 	ld	(hl),d
   16E1 5F                 7787 	ld	e,a
   16E2 1A                 7788 	ld	a,(de)
   16E3 4F                 7789 	ld	c,a
                           7790 ;	genPointerGet
                           7791 ;	AOP_STK for _move_character_sloc1_1_0
                           7792 ;	AOP_STK for _move_character_sloc8_1_0
   16E4 F8 0B              7793 	lda	hl,11(sp)
   16E6 5E                 7794 	ld	e,(hl)
   16E7 23                 7795 	inc	hl
   16E8 56                 7796 	ld	d,(hl)
   16E9 1A                 7797 	ld	a,(de)
   16EA F8 00              7798 	lda	hl,0(sp)
   16EC 77                 7799 	ld	(hl),a
                           7800 ;	genIpush
                           7801 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16ED C5                 7802 	push	bc
   16EE 79                 7803 	ld	a,c
   16EF F5                 7804 	push	af
   16F0 33                 7805 	inc	sp
                           7806 ;	genIpush
                           7807 ;	AOP_STK for _move_character_sloc8_1_0
   16F1 7E                 7808 	ld	a,(hl)
   16F2 F5                 7809 	push	af
   16F3 33                 7810 	inc	sp
                           7811 ;	genCall
   16F4 CD 00 00           7812 	call	_set_sprite_tile
   16F7 E8 02              7813 	lda	sp,2(sp)
   16F9 E1                 7814 	pop	hl
   16FA 44                 7815 	ld	b,h
                           7816 ;	genGoto
   16FB C3 B2 1A           7817 	jp	00165$
                           7818 ;	genLabel
   16FE                    7819 00164$:
                           7820 ;	game.c 1047
                           7821 ;	genCmpEq
                           7822 ;	AOP_HL for _input_timer
                           7823 ; genCmpEq: left 1, right 1, result 0
   16FE 21 03 19           7824 	ld	hl,#_input_timer
   1701 7E                 7825 	ld	a,(hl)
   1702 FE 04              7826 	cp	a,#0x04
   1704 C2 60 17           7827 	jp	nz,00134$
   1707 18 03              7828 	jr	00217$
   1709                    7829 00216$:
   1709 C3 60 17           7830 	jp	00134$
   170C                    7831 00217$:
                           7832 ;	game.c 1048
                           7833 ;	genPlus
                           7834 ;	AOP_STK for _move_character_sloc0_1_0
                           7835 ;	AOP_STK for _move_character_sloc8_1_0
                           7836 ;	genPlusIncr
                           7837 ;	Can't optimise plus by inc, falling back to the normal way
   170C F8 0D              7838 	lda	hl,13(sp)
   170E 5E                 7839 	ld	e,(hl)
   170F 23                 7840 	inc	hl
   1710 56                 7841 	ld	d,(hl)
   1711 21 08 00           7842 	ld	hl,#0x0008
   1714 19                 7843 	add	hl,de
   1715 7D                 7844 	ld	a,l
   1716 54                 7845 	ld	d,h
   1717 F8 00              7846 	lda	hl,0(sp)
                           7847 ;	genPointerGet
                           7848 ;	AOP_STK for _move_character_sloc8_1_0
   1719 22                 7849 	ld	(hl+),a
   171A 72                 7850 	ld	(hl),d
   171B 5F                 7851 	ld	e,a
   171C 1A                 7852 	ld	a,(de)
   171D 4F                 7853 	ld	c,a
                           7854 ;	genPlus
                           7855 ;	AOP_STK for _move_character_sloc0_1_0
                           7856 ;	AOP_STK for _move_character_sloc8_1_0
                           7857 ;	genPlusIncr
                           7858 ;	Can't optimise plus by inc, falling back to the normal way
   171E F8 0D              7859 	lda	hl,13(sp)
   1720 5E                 7860 	ld	e,(hl)
   1721 23                 7861 	inc	hl
   1722 56                 7862 	ld	d,(hl)
   1723 21 01 00           7863 	ld	hl,#0x0001
   1726 19                 7864 	add	hl,de
   1727 7D                 7865 	ld	a,l
   1728 54                 7866 	ld	d,h
   1729 F8 00              7867 	lda	hl,0(sp)
                           7868 ;	genPointerGet
                           7869 ;	AOP_STK for _move_character_sloc8_1_0
                           7870 ;	AOP_STK for _move_character_sloc7_1_0
   172B 22                 7871 	ld	(hl+),a
   172C 72                 7872 	ld	(hl),d
   172D 5F                 7873 	ld	e,a
   172E 1A                 7874 	ld	a,(de)
   172F 23                 7875 	inc	hl
   1730 77                 7876 	ld	(hl),a
                           7877 ;	genPointerGet
                           7878 ;	AOP_STK for _move_character_sloc0_1_0
                           7879 ;	AOP_STK for _move_character_sloc8_1_0
   1731 F8 0D              7880 	lda	hl,13(sp)
   1733 5E                 7881 	ld	e,(hl)
   1734 23                 7882 	inc	hl
   1735 56                 7883 	ld	d,(hl)
   1736 1A                 7884 	ld	a,(de)
   1737 F8 00              7885 	lda	hl,0(sp)
   1739 77                 7886 	ld	(hl),a
                           7887 ;	genIpush
                           7888 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   173A C5                 7889 	push	bc
   173B 79                 7890 	ld	a,c
   173C F5                 7891 	push	af
   173D 33                 7892 	inc	sp
                           7893 ;	genIpush
                           7894 ;	AOP_STK for _move_character_sloc7_1_0
   173E 23                 7895 	inc	hl
   173F 23                 7896 	inc	hl
   1740 7E                 7897 	ld	a,(hl)
   1741 F5                 7898 	push	af
   1742 33                 7899 	inc	sp
                           7900 ;	genIpush
                           7901 ;	AOP_STK for _move_character_sloc8_1_0
   1743 2B                 7902 	dec	hl
   1744 2B                 7903 	dec	hl
   1745 7E                 7904 	ld	a,(hl)
   1746 F5                 7905 	push	af
   1747 33                 7906 	inc	sp
                           7907 ;	genCall
   1748 CD 2B 10           7908 	call	_can_move
                           7909 ;	AOP_STK for _move_character_sloc8_1_0
   174B F8 06              7910 	lda	hl,6(sp)
   174D 72                 7911 	ld	(hl),d
   174E 2B                 7912 	dec	hl
   174F 73                 7913 	ld	(hl),e
   1750 E8 03              7914 	lda	sp,3(sp)
   1752 E1                 7915 	pop	hl
   1753 44                 7916 	ld	b,h
                           7917 ;	genIfx
                           7918 ;	AOP_STK for _move_character_sloc8_1_0
   1754 F8 00              7919 	lda	hl,0(sp)
   1756 2A                 7920 	ld	a,(hl+)
   1757 B6                 7921 	or	a,(hl)
   1758 C2 60 17           7922 	jp	nz,00134$
                           7923 ;	game.c 1049
                           7924 ;	genAssign
                           7925 ;	AOP_HL for _input_timer
   175B 21 03 19           7926 	ld	hl,#_input_timer
   175E 36 00              7927 	ld	(hl),#0x00
                           7928 ;	genLabel
   1760                    7929 00134$:
                           7930 ;	game.c 1057
                           7931 ;	genPlus
                           7932 ;	AOP_STK for _move_character_sloc0_1_0
                           7933 ;	AOP_STK for _move_character_sloc8_1_0
                           7934 ;	genPlusIncr
                           7935 ;	Can't optimise plus by inc, falling back to the normal way
   1760 F8 0D              7936 	lda	hl,13(sp)
   1762 5E                 7937 	ld	e,(hl)
   1763 23                 7938 	inc	hl
   1764 56                 7939 	ld	d,(hl)
   1765 21 08 00           7940 	ld	hl,#0x0008
   1768 19                 7941 	add	hl,de
   1769 7D                 7942 	ld	a,l
   176A 54                 7943 	ld	d,h
   176B F8 00              7944 	lda	hl,0(sp)
                           7945 ;	genPointerGet
                           7946 ;	AOP_STK for _move_character_sloc8_1_0
   176D 22                 7947 	ld	(hl+),a
   176E 72                 7948 	ld	(hl),d
   176F 5F                 7949 	ld	e,a
   1770 1A                 7950 	ld	a,(de)
                           7951 ;	genCmpLt
                           7952 ;	AOP_STK for _move_character_sloc8_1_0
   1771 4F                 7953 	ld	c,a
   1772 FE 01              7954 	cp	#0x01
   1774 3E 00              7955 	ld	a,#0x00
   1776 17                 7956 	rla
   1777 2B                 7957 	dec	hl
   1778 77                 7958 	ld	(hl),a
                           7959 ;	genIfx
                           7960 ;	AOP_STK for _move_character_sloc8_1_0
   1779 AF                 7961 	xor	a,a
   177A B6                 7962 	or	a,(hl)
   177B C2 2D 1A           7963 	jp	nz,00155$
                           7964 ;	genCmpGt
   177E 3E 04              7965 	ld	a,#0x04
   1780 91                 7966 	sub	a,c
   1781 DA 2D 1A           7967 	jp	c,00155$
                           7968 ;	genMinus
                           7969 ;	AOP_STK for _move_character_sloc7_1_0
   1784 79                 7970 	ld	a,c
   1785 C6 FF              7971 	add	a,#0xFF
   1787 23                 7972 	inc	hl
   1788 23                 7973 	inc	hl
                           7974 ;	genJumpTab
                           7975 ;	AOP_STK for _move_character_sloc7_1_0
   1789 77                 7976 	ld      (hl),a
   178A 5F                 7977 	ld      e,a
   178B 16 00              7978 	ld	d,#0x00
   178D 21 94 17           7979 	ld	hl,#00218$
   1790 19                 7980 	add	hl,de
   1791 19                 7981 	add	hl,de
   1792 19                 7982 	add	hl,de
   1793 E9                 7983 	jp	(hl)
   1794                    7984 00218$:
   1794 C3 E8 18           7985 	jp	00145$
   1797 C3 44 18           7986 	jp	00140$
   179A C3 8C 19           7987 	jp	00150$
   179D C3 A0 17           7988 	jp	00135$
                           7989 ;	game.c 1060
                           7990 ;	genLabel
   17A0                    7991 00135$:
                           7992 ;	genPlus
                           7993 ;	AOP_STK for _move_character_sloc0_1_0
                           7994 ;	AOP_STK for _move_character_sloc5_1_0
                           7995 ;	genPlusIncr
                           7996 ;	Can't optimise plus by inc, falling back to the normal way
   17A0 F8 0D              7997 	lda	hl,13(sp)
   17A2 5E                 7998 	ld	e,(hl)
   17A3 23                 7999 	inc	hl
   17A4 56                 8000 	ld	d,(hl)
   17A5 21 02 00           8001 	ld	hl,#0x0002
   17A8 19                 8002 	add	hl,de
   17A9 7D                 8003 	ld	a,l
   17AA 54                 8004 	ld	d,h
   17AB F8 04              8005 	lda	hl,4(sp)
                           8006 ;	genPointerGet
                           8007 ;	AOP_STK for _move_character_sloc5_1_0
                           8008 ;	AOP_STK for _move_character_sloc7_1_0
   17AD 22                 8009 	ld	(hl+),a
   17AE 72                 8010 	ld	(hl),d
   17AF 5F                 8011 	ld	e,a
   17B0 1A                 8012 	ld	a,(de)
   17B1 F8 02              8013 	lda	hl,2(sp)
   17B3 77                 8014 	ld	(hl),a
                           8015 ;	genIpush
                           8016 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17B4 C5                 8017 	push	bc
                           8018 ;	AOP_STK for _move_character_sloc7_1_0
   17B5 7E                 8019 	ld	a,(hl)
   17B6 F5                 8020 	push	af
   17B7 33                 8021 	inc	sp
                           8022 ;	genIpush
   17B8 78                 8023 	ld	a,b
   17B9 F5                 8024 	push	af
   17BA 33                 8025 	inc	sp
                           8026 ;	genCall
   17BB CD 00 00           8027 	call	_set_sprite_tile
   17BE E8 02              8028 	lda	sp,2(sp)
   17C0 C1                 8029 	pop	bc
                           8030 ;	game.c 1061
                           8031 ;	genCmpEq
                           8032 ;	AOP_HL for _input_timer
                           8033 ; genCmpEq: left 1, right 1, result 0
   17C1 21 03 19           8034 	ld	hl,#_input_timer
   17C4 7E                 8035 	ld	a,(hl)
   17C5 FE 04              8036 	cp	a,#0x04
   17C7 C2 FB 17           8037 	jp	nz,00137$
   17CA 18 03              8038 	jr	00220$
   17CC                    8039 00219$:
   17CC C3 FB 17           8040 	jp	00137$
   17CF                    8041 00220$:
                           8042 ;	game.c 1062
                           8043 ;	genPlus
                           8044 ;	AOP_STK for _move_character_sloc0_1_0
                           8045 ;	AOP_STK for _move_character_sloc3_1_0
                           8046 ;	genPlusIncr
                           8047 ;	Can't optimise plus by inc, falling back to the normal way
   17CF F8 0D              8048 	lda	hl,13(sp)
   17D1 5E                 8049 	ld	e,(hl)
   17D2 23                 8050 	inc	hl
   17D3 56                 8051 	ld	d,(hl)
   17D4 21 03 00           8052 	ld	hl,#0x0003
   17D7 19                 8053 	add	hl,de
   17D8 7D                 8054 	ld	a,l
   17D9 54                 8055 	ld	d,h
   17DA F8 07              8056 	lda	hl,7(sp)
                           8057 ;	genPointerGet
                           8058 ;	AOP_STK for _move_character_sloc3_1_0
                           8059 ;	AOP_STK for _move_character_sloc7_1_0
   17DC 22                 8060 	ld	(hl+),a
   17DD 72                 8061 	ld	(hl),d
   17DE 5F                 8062 	ld	e,a
   17DF 1A                 8063 	ld	a,(de)
   17E0 F8 02              8064 	lda	hl,2(sp)
   17E2 77                 8065 	ld	(hl),a
                           8066 ;	genPointerGet
                           8067 ;	AOP_STK for _move_character_sloc1_1_0
                           8068 ;	AOP_STK for _move_character_sloc6_1_0
   17E3 F8 0B              8069 	lda	hl,11(sp)
   17E5 5E                 8070 	ld	e,(hl)
   17E6 23                 8071 	inc	hl
   17E7 56                 8072 	ld	d,(hl)
   17E8 1A                 8073 	ld	a,(de)
   17E9 F8 03              8074 	lda	hl,3(sp)
   17EB 77                 8075 	ld	(hl),a
                           8076 ;	genIpush
                           8077 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17EC C5                 8078 	push	bc
                           8079 ;	AOP_STK for _move_character_sloc7_1_0
   17ED 2B                 8080 	dec	hl
   17EE 7E                 8081 	ld	a,(hl)
   17EF F5                 8082 	push	af
   17F0 33                 8083 	inc	sp
                           8084 ;	genIpush
                           8085 ;	AOP_STK for _move_character_sloc6_1_0
   17F1 23                 8086 	inc	hl
   17F2 7E                 8087 	ld	a,(hl)
   17F3 F5                 8088 	push	af
   17F4 33                 8089 	inc	sp
                           8090 ;	genCall
   17F5 CD 00 00           8091 	call	_set_sprite_tile
   17F8 E8 02              8092 	lda	sp,2(sp)
   17FA C1                 8093 	pop	bc
                           8094 ;	genLabel
   17FB                    8095 00137$:
                           8096 ;	game.c 1064
                           8097 ;	genCmpEq
                           8098 ;	AOP_HL for _input_timer
                           8099 ; genCmpEq: left 1, right 1, result 0
   17FB 21 03 19           8100 	ld	hl,#_input_timer
   17FE 7E                 8101 	ld	a,(hl)
   17FF FE 02              8102 	cp	a,#0x02
   1801 C2 2A 18           8103 	jp	nz,00139$
   1804 18 03              8104 	jr	00222$
   1806                    8105 00221$:
   1806 C3 2A 18           8106 	jp	00139$
   1809                    8107 00222$:
                           8108 ;	game.c 1065
                           8109 ;	genPointerGet
                           8110 ;	AOP_STK for _move_character_sloc5_1_0
                           8111 ;	AOP_STK for _move_character_sloc7_1_0
   1809 F8 04              8112 	lda	hl,4(sp)
   180B 5E                 8113 	ld	e,(hl)
   180C 23                 8114 	inc	hl
   180D 56                 8115 	ld	d,(hl)
   180E 1A                 8116 	ld	a,(de)
   180F F8 02              8117 	lda	hl,2(sp)
   1811 77                 8118 	ld	(hl),a
                           8119 ;	genPointerGet
                           8120 ;	AOP_STK for _move_character_sloc1_1_0
                           8121 ;	AOP_STK for _move_character_sloc6_1_0
   1812 F8 0B              8122 	lda	hl,11(sp)
   1814 5E                 8123 	ld	e,(hl)
   1815 23                 8124 	inc	hl
   1816 56                 8125 	ld	d,(hl)
   1817 1A                 8126 	ld	a,(de)
   1818 F8 03              8127 	lda	hl,3(sp)
   181A 77                 8128 	ld	(hl),a
                           8129 ;	genIpush
                           8130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   181B C5                 8131 	push	bc
                           8132 ;	AOP_STK for _move_character_sloc7_1_0
   181C 2B                 8133 	dec	hl
   181D 7E                 8134 	ld	a,(hl)
   181E F5                 8135 	push	af
   181F 33                 8136 	inc	sp
                           8137 ;	genIpush
                           8138 ;	AOP_STK for _move_character_sloc6_1_0
   1820 23                 8139 	inc	hl
   1821 7E                 8140 	ld	a,(hl)
   1822 F5                 8141 	push	af
   1823 33                 8142 	inc	sp
                           8143 ;	genCall
   1824 CD 00 00           8144 	call	_set_sprite_tile
   1827 E8 02              8145 	lda	sp,2(sp)
   1829 C1                 8146 	pop	bc
                           8147 ;	genLabel
   182A                    8148 00139$:
                           8149 ;	game.c 1067
                           8150 ;	genPointerGet
                           8151 ;	AOP_STK for _move_character_sloc1_1_0
                           8152 ;	AOP_STK for _move_character_sloc7_1_0
   182A F8 0B              8153 	lda	hl,11(sp)
   182C 5E                 8154 	ld	e,(hl)
   182D 23                 8155 	inc	hl
   182E 56                 8156 	ld	d,(hl)
   182F 1A                 8157 	ld	a,(de)
   1830 F8 02              8158 	lda	hl,2(sp)
   1832 77                 8159 	ld	(hl),a
                           8160 ;	genIpush
                           8161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1833 C5                 8162 	push	bc
   1834 3E 20              8163 	ld	a,#0x20
   1836 F5                 8164 	push	af
   1837 33                 8165 	inc	sp
                           8166 ;	genIpush
                           8167 ;	AOP_STK for _move_character_sloc7_1_0
   1838 7E                 8168 	ld	a,(hl)
   1839 F5                 8169 	push	af
   183A 33                 8170 	inc	sp
                           8171 ;	genCall
   183B CD 00 00           8172 	call	_set_sprite_prop
   183E E8 02              8173 	lda	sp,2(sp)
   1840 C1                 8174 	pop	bc
                           8175 ;	game.c 1068
                           8176 ;	genGoto
   1841 C3 2D 1A           8177 	jp	00155$
                           8178 ;	game.c 1071
                           8179 ;	genLabel
   1844                    8180 00140$:
                           8181 ;	genPlus
                           8182 ;	AOP_STK for _move_character_sloc0_1_0
                           8183 ;	AOP_STK for _move_character_sloc5_1_0
                           8184 ;	genPlusIncr
                           8185 ;	Can't optimise plus by inc, falling back to the normal way
   1844 F8 0D              8186 	lda	hl,13(sp)
   1846 5E                 8187 	ld	e,(hl)
   1847 23                 8188 	inc	hl
   1848 56                 8189 	ld	d,(hl)
   1849 21 02 00           8190 	ld	hl,#0x0002
   184C 19                 8191 	add	hl,de
   184D 7D                 8192 	ld	a,l
   184E 54                 8193 	ld	d,h
   184F F8 04              8194 	lda	hl,4(sp)
                           8195 ;	genPointerGet
                           8196 ;	AOP_STK for _move_character_sloc5_1_0
                           8197 ;	AOP_STK for _move_character_sloc7_1_0
   1851 22                 8198 	ld	(hl+),a
   1852 72                 8199 	ld	(hl),d
   1853 5F                 8200 	ld	e,a
   1854 1A                 8201 	ld	a,(de)
   1855 F8 02              8202 	lda	hl,2(sp)
   1857 77                 8203 	ld	(hl),a
                           8204 ;	genIpush
                           8205 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1858 C5                 8206 	push	bc
                           8207 ;	AOP_STK for _move_character_sloc7_1_0
   1859 7E                 8208 	ld	a,(hl)
   185A F5                 8209 	push	af
   185B 33                 8210 	inc	sp
                           8211 ;	genIpush
   185C 78                 8212 	ld	a,b
   185D F5                 8213 	push	af
   185E 33                 8214 	inc	sp
                           8215 ;	genCall
   185F CD 00 00           8216 	call	_set_sprite_tile
   1862 E8 02              8217 	lda	sp,2(sp)
   1864 C1                 8218 	pop	bc
                           8219 ;	game.c 1072
                           8220 ;	genCmpEq
                           8221 ;	AOP_HL for _input_timer
                           8222 ; genCmpEq: left 1, right 1, result 0
   1865 21 03 19           8223 	ld	hl,#_input_timer
   1868 7E                 8224 	ld	a,(hl)
   1869 FE 04              8225 	cp	a,#0x04
   186B C2 9F 18           8226 	jp	nz,00142$
   186E 18 03              8227 	jr	00224$
   1870                    8228 00223$:
   1870 C3 9F 18           8229 	jp	00142$
   1873                    8230 00224$:
                           8231 ;	game.c 1073
                           8232 ;	genPlus
                           8233 ;	AOP_STK for _move_character_sloc0_1_0
                           8234 ;	AOP_STK for _move_character_sloc3_1_0
                           8235 ;	genPlusIncr
                           8236 ;	Can't optimise plus by inc, falling back to the normal way
   1873 F8 0D              8237 	lda	hl,13(sp)
   1875 5E                 8238 	ld	e,(hl)
   1876 23                 8239 	inc	hl
   1877 56                 8240 	ld	d,(hl)
   1878 21 03 00           8241 	ld	hl,#0x0003
   187B 19                 8242 	add	hl,de
   187C 7D                 8243 	ld	a,l
   187D 54                 8244 	ld	d,h
   187E F8 07              8245 	lda	hl,7(sp)
                           8246 ;	genPointerGet
                           8247 ;	AOP_STK for _move_character_sloc3_1_0
                           8248 ;	AOP_STK for _move_character_sloc7_1_0
   1880 22                 8249 	ld	(hl+),a
   1881 72                 8250 	ld	(hl),d
   1882 5F                 8251 	ld	e,a
   1883 1A                 8252 	ld	a,(de)
   1884 F8 02              8253 	lda	hl,2(sp)
   1886 77                 8254 	ld	(hl),a
                           8255 ;	genPointerGet
                           8256 ;	AOP_STK for _move_character_sloc1_1_0
                           8257 ;	AOP_STK for _move_character_sloc6_1_0
   1887 F8 0B              8258 	lda	hl,11(sp)
   1889 5E                 8259 	ld	e,(hl)
   188A 23                 8260 	inc	hl
   188B 56                 8261 	ld	d,(hl)
   188C 1A                 8262 	ld	a,(de)
   188D F8 03              8263 	lda	hl,3(sp)
   188F 77                 8264 	ld	(hl),a
                           8265 ;	genIpush
                           8266 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1890 C5                 8267 	push	bc
                           8268 ;	AOP_STK for _move_character_sloc7_1_0
   1891 2B                 8269 	dec	hl
   1892 7E                 8270 	ld	a,(hl)
   1893 F5                 8271 	push	af
   1894 33                 8272 	inc	sp
                           8273 ;	genIpush
                           8274 ;	AOP_STK for _move_character_sloc6_1_0
   1895 23                 8275 	inc	hl
   1896 7E                 8276 	ld	a,(hl)
   1897 F5                 8277 	push	af
   1898 33                 8278 	inc	sp
                           8279 ;	genCall
   1899 CD 00 00           8280 	call	_set_sprite_tile
   189C E8 02              8281 	lda	sp,2(sp)
   189E C1                 8282 	pop	bc
                           8283 ;	genLabel
   189F                    8284 00142$:
                           8285 ;	game.c 1075
                           8286 ;	genCmpEq
                           8287 ;	AOP_HL for _input_timer
                           8288 ; genCmpEq: left 1, right 1, result 0
   189F 21 03 19           8289 	ld	hl,#_input_timer
   18A2 7E                 8290 	ld	a,(hl)
   18A3 FE 02              8291 	cp	a,#0x02
   18A5 C2 CE 18           8292 	jp	nz,00144$
   18A8 18 03              8293 	jr	00226$
   18AA                    8294 00225$:
   18AA C3 CE 18           8295 	jp	00144$
   18AD                    8296 00226$:
                           8297 ;	game.c 1076
                           8298 ;	genPointerGet
                           8299 ;	AOP_STK for _move_character_sloc5_1_0
                           8300 ;	AOP_STK for _move_character_sloc7_1_0
   18AD F8 04              8301 	lda	hl,4(sp)
   18AF 5E                 8302 	ld	e,(hl)
   18B0 23                 8303 	inc	hl
   18B1 56                 8304 	ld	d,(hl)
   18B2 1A                 8305 	ld	a,(de)
   18B3 F8 02              8306 	lda	hl,2(sp)
   18B5 77                 8307 	ld	(hl),a
                           8308 ;	genPointerGet
                           8309 ;	AOP_STK for _move_character_sloc1_1_0
                           8310 ;	AOP_STK for _move_character_sloc6_1_0
   18B6 F8 0B              8311 	lda	hl,11(sp)
   18B8 5E                 8312 	ld	e,(hl)
   18B9 23                 8313 	inc	hl
   18BA 56                 8314 	ld	d,(hl)
   18BB 1A                 8315 	ld	a,(de)
   18BC F8 03              8316 	lda	hl,3(sp)
   18BE 77                 8317 	ld	(hl),a
                           8318 ;	genIpush
                           8319 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18BF C5                 8320 	push	bc
                           8321 ;	AOP_STK for _move_character_sloc7_1_0
   18C0 2B                 8322 	dec	hl
   18C1 7E                 8323 	ld	a,(hl)
   18C2 F5                 8324 	push	af
   18C3 33                 8325 	inc	sp
                           8326 ;	genIpush
                           8327 ;	AOP_STK for _move_character_sloc6_1_0
   18C4 23                 8328 	inc	hl
   18C5 7E                 8329 	ld	a,(hl)
   18C6 F5                 8330 	push	af
   18C7 33                 8331 	inc	sp
                           8332 ;	genCall
   18C8 CD 00 00           8333 	call	_set_sprite_tile
   18CB E8 02              8334 	lda	sp,2(sp)
   18CD C1                 8335 	pop	bc
                           8336 ;	genLabel
   18CE                    8337 00144$:
                           8338 ;	game.c 1079
                           8339 ;	genPointerGet
                           8340 ;	AOP_STK for _move_character_sloc1_1_0
                           8341 ;	AOP_STK for _move_character_sloc7_1_0
   18CE F8 0B              8342 	lda	hl,11(sp)
   18D0 5E                 8343 	ld	e,(hl)
   18D1 23                 8344 	inc	hl
   18D2 56                 8345 	ld	d,(hl)
   18D3 1A                 8346 	ld	a,(de)
   18D4 F8 02              8347 	lda	hl,2(sp)
   18D6 77                 8348 	ld	(hl),a
                           8349 ;	genIpush
                           8350 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18D7 C5                 8351 	push	bc
   18D8 3E 00              8352 	ld	a,#0x00
   18DA F5                 8353 	push	af
   18DB 33                 8354 	inc	sp
                           8355 ;	genIpush
                           8356 ;	AOP_STK for _move_character_sloc7_1_0
   18DC 7E                 8357 	ld	a,(hl)
   18DD F5                 8358 	push	af
   18DE 33                 8359 	inc	sp
                           8360 ;	genCall
   18DF CD 00 00           8361 	call	_set_sprite_prop
   18E2 E8 02              8362 	lda	sp,2(sp)
   18E4 C1                 8363 	pop	bc
                           8364 ;	game.c 1080
                           8365 ;	genGoto
   18E5 C3 2D 1A           8366 	jp	00155$
                           8367 ;	game.c 1082
                           8368 ;	genLabel
   18E8                    8369 00145$:
                           8370 ;	genPlus
                           8371 ;	AOP_STK for _move_character_sloc0_1_0
                           8372 ;	AOP_STK for _move_character_sloc5_1_0
                           8373 ;	genPlusIncr
                           8374 ;	Can't optimise plus by inc, falling back to the normal way
   18E8 F8 0D              8375 	lda	hl,13(sp)
   18EA 5E                 8376 	ld	e,(hl)
   18EB 23                 8377 	inc	hl
   18EC 56                 8378 	ld	d,(hl)
   18ED 21 05 00           8379 	ld	hl,#0x0005
   18F0 19                 8380 	add	hl,de
   18F1 7D                 8381 	ld	a,l
   18F2 54                 8382 	ld	d,h
   18F3 F8 04              8383 	lda	hl,4(sp)
                           8384 ;	genPointerGet
                           8385 ;	AOP_STK for _move_character_sloc5_1_0
                           8386 ;	AOP_STK for _move_character_sloc7_1_0
   18F5 22                 8387 	ld	(hl+),a
   18F6 72                 8388 	ld	(hl),d
   18F7 5F                 8389 	ld	e,a
   18F8 1A                 8390 	ld	a,(de)
   18F9 F8 02              8391 	lda	hl,2(sp)
   18FB 77                 8392 	ld	(hl),a
                           8393 ;	genIpush
                           8394 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18FC C5                 8395 	push	bc
                           8396 ;	AOP_STK for _move_character_sloc7_1_0
   18FD 7E                 8397 	ld	a,(hl)
   18FE F5                 8398 	push	af
   18FF 33                 8399 	inc	sp
                           8400 ;	genIpush
   1900 78                 8401 	ld	a,b
   1901 F5                 8402 	push	af
   1902 33                 8403 	inc	sp
                           8404 ;	genCall
   1903 CD 00 00           8405 	call	_set_sprite_tile
   1906 E8 02              8406 	lda	sp,2(sp)
   1908 C1                 8407 	pop	bc
                           8408 ;	game.c 1084
                           8409 ;	genCmpEq
                           8410 ;	AOP_HL for _input_timer
                           8411 ; genCmpEq: left 1, right 1, result 0
   1909 21 03 19           8412 	ld	hl,#_input_timer
   190C 7E                 8413 	ld	a,(hl)
   190D FE 04              8414 	cp	a,#0x04
   190F C2 43 19           8415 	jp	nz,00147$
   1912 18 03              8416 	jr	00228$
   1914                    8417 00227$:
   1914 C3 43 19           8418 	jp	00147$
   1917                    8419 00228$:
                           8420 ;	game.c 1085
                           8421 ;	genPlus
                           8422 ;	AOP_STK for _move_character_sloc0_1_0
                           8423 ;	AOP_STK for _move_character_sloc3_1_0
                           8424 ;	genPlusIncr
                           8425 ;	Can't optimise plus by inc, falling back to the normal way
   1917 F8 0D              8426 	lda	hl,13(sp)
   1919 5E                 8427 	ld	e,(hl)
   191A 23                 8428 	inc	hl
   191B 56                 8429 	ld	d,(hl)
   191C 21 06 00           8430 	ld	hl,#0x0006
   191F 19                 8431 	add	hl,de
   1920 7D                 8432 	ld	a,l
   1921 54                 8433 	ld	d,h
   1922 F8 07              8434 	lda	hl,7(sp)
                           8435 ;	genPointerGet
                           8436 ;	AOP_STK for _move_character_sloc3_1_0
                           8437 ;	AOP_STK for _move_character_sloc7_1_0
   1924 22                 8438 	ld	(hl+),a
   1925 72                 8439 	ld	(hl),d
   1926 5F                 8440 	ld	e,a
   1927 1A                 8441 	ld	a,(de)
   1928 F8 02              8442 	lda	hl,2(sp)
   192A 77                 8443 	ld	(hl),a
                           8444 ;	genPointerGet
                           8445 ;	AOP_STK for _move_character_sloc1_1_0
                           8446 ;	AOP_STK for _move_character_sloc6_1_0
   192B F8 0B              8447 	lda	hl,11(sp)
   192D 5E                 8448 	ld	e,(hl)
   192E 23                 8449 	inc	hl
   192F 56                 8450 	ld	d,(hl)
   1930 1A                 8451 	ld	a,(de)
   1931 F8 03              8452 	lda	hl,3(sp)
   1933 77                 8453 	ld	(hl),a
                           8454 ;	genIpush
                           8455 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1934 C5                 8456 	push	bc
                           8457 ;	AOP_STK for _move_character_sloc7_1_0
   1935 2B                 8458 	dec	hl
   1936 7E                 8459 	ld	a,(hl)
   1937 F5                 8460 	push	af
   1938 33                 8461 	inc	sp
                           8462 ;	genIpush
                           8463 ;	AOP_STK for _move_character_sloc6_1_0
   1939 23                 8464 	inc	hl
   193A 7E                 8465 	ld	a,(hl)
   193B F5                 8466 	push	af
   193C 33                 8467 	inc	sp
                           8468 ;	genCall
   193D CD 00 00           8469 	call	_set_sprite_tile
   1940 E8 02              8470 	lda	sp,2(sp)
   1942 C1                 8471 	pop	bc
                           8472 ;	genLabel
   1943                    8473 00147$:
                           8474 ;	game.c 1087
                           8475 ;	genCmpEq
                           8476 ;	AOP_HL for _input_timer
                           8477 ; genCmpEq: left 1, right 1, result 0
   1943 21 03 19           8478 	ld	hl,#_input_timer
   1946 7E                 8479 	ld	a,(hl)
   1947 FE 02              8480 	cp	a,#0x02
   1949 C2 72 19           8481 	jp	nz,00149$
   194C 18 03              8482 	jr	00230$
   194E                    8483 00229$:
   194E C3 72 19           8484 	jp	00149$
   1951                    8485 00230$:
                           8486 ;	game.c 1088
                           8487 ;	genPointerGet
                           8488 ;	AOP_STK for _move_character_sloc5_1_0
                           8489 ;	AOP_STK for _move_character_sloc7_1_0
   1951 F8 04              8490 	lda	hl,4(sp)
   1953 5E                 8491 	ld	e,(hl)
   1954 23                 8492 	inc	hl
   1955 56                 8493 	ld	d,(hl)
   1956 1A                 8494 	ld	a,(de)
   1957 F8 02              8495 	lda	hl,2(sp)
   1959 77                 8496 	ld	(hl),a
                           8497 ;	genPointerGet
                           8498 ;	AOP_STK for _move_character_sloc1_1_0
                           8499 ;	AOP_STK for _move_character_sloc6_1_0
   195A F8 0B              8500 	lda	hl,11(sp)
   195C 5E                 8501 	ld	e,(hl)
   195D 23                 8502 	inc	hl
   195E 56                 8503 	ld	d,(hl)
   195F 1A                 8504 	ld	a,(de)
   1960 F8 03              8505 	lda	hl,3(sp)
   1962 77                 8506 	ld	(hl),a
                           8507 ;	genIpush
                           8508 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1963 C5                 8509 	push	bc
                           8510 ;	AOP_STK for _move_character_sloc7_1_0
   1964 2B                 8511 	dec	hl
   1965 7E                 8512 	ld	a,(hl)
   1966 F5                 8513 	push	af
   1967 33                 8514 	inc	sp
                           8515 ;	genIpush
                           8516 ;	AOP_STK for _move_character_sloc6_1_0
   1968 23                 8517 	inc	hl
   1969 7E                 8518 	ld	a,(hl)
   196A F5                 8519 	push	af
   196B 33                 8520 	inc	sp
                           8521 ;	genCall
   196C CD 00 00           8522 	call	_set_sprite_tile
   196F E8 02              8523 	lda	sp,2(sp)
   1971 C1                 8524 	pop	bc
                           8525 ;	genLabel
   1972                    8526 00149$:
                           8527 ;	game.c 1091
                           8528 ;	genPointerGet
                           8529 ;	AOP_STK for _move_character_sloc1_1_0
                           8530 ;	AOP_STK for _move_character_sloc7_1_0
   1972 F8 0B              8531 	lda	hl,11(sp)
   1974 5E                 8532 	ld	e,(hl)
   1975 23                 8533 	inc	hl
   1976 56                 8534 	ld	d,(hl)
   1977 1A                 8535 	ld	a,(de)
   1978 F8 02              8536 	lda	hl,2(sp)
   197A 77                 8537 	ld	(hl),a
                           8538 ;	genIpush
                           8539 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   197B C5                 8540 	push	bc
   197C 3E 20              8541 	ld	a,#0x20
   197E F5                 8542 	push	af
   197F 33                 8543 	inc	sp
                           8544 ;	genIpush
                           8545 ;	AOP_STK for _move_character_sloc7_1_0
   1980 7E                 8546 	ld	a,(hl)
   1981 F5                 8547 	push	af
   1982 33                 8548 	inc	sp
                           8549 ;	genCall
   1983 CD 00 00           8550 	call	_set_sprite_prop
   1986 E8 02              8551 	lda	sp,2(sp)
   1988 C1                 8552 	pop	bc
                           8553 ;	game.c 1092
                           8554 ;	genGoto
   1989 C3 2D 1A           8555 	jp	00155$
                           8556 ;	game.c 1094
                           8557 ;	genLabel
   198C                    8558 00150$:
                           8559 ;	genPlus
                           8560 ;	AOP_STK for _move_character_sloc0_1_0
                           8561 ;	AOP_STK for _move_character_sloc5_1_0
                           8562 ;	genPlusIncr
                           8563 ;	Can't optimise plus by inc, falling back to the normal way
   198C F8 0D              8564 	lda	hl,13(sp)
   198E 5E                 8565 	ld	e,(hl)
   198F 23                 8566 	inc	hl
   1990 56                 8567 	ld	d,(hl)
   1991 21 05 00           8568 	ld	hl,#0x0005
   1994 19                 8569 	add	hl,de
   1995 7D                 8570 	ld	a,l
   1996 54                 8571 	ld	d,h
   1997 F8 04              8572 	lda	hl,4(sp)
                           8573 ;	genPointerGet
                           8574 ;	AOP_STK for _move_character_sloc5_1_0
                           8575 ;	AOP_STK for _move_character_sloc7_1_0
   1999 22                 8576 	ld	(hl+),a
   199A 72                 8577 	ld	(hl),d
   199B 5F                 8578 	ld	e,a
   199C 1A                 8579 	ld	a,(de)
   199D F8 02              8580 	lda	hl,2(sp)
   199F 77                 8581 	ld	(hl),a
                           8582 ;	genIpush
                           8583 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19A0 C5                 8584 	push	bc
                           8585 ;	AOP_STK for _move_character_sloc7_1_0
   19A1 7E                 8586 	ld	a,(hl)
   19A2 F5                 8587 	push	af
   19A3 33                 8588 	inc	sp
                           8589 ;	genIpush
   19A4 78                 8590 	ld	a,b
   19A5 F5                 8591 	push	af
   19A6 33                 8592 	inc	sp
                           8593 ;	genCall
   19A7 CD 00 00           8594 	call	_set_sprite_tile
   19AA E8 02              8595 	lda	sp,2(sp)
   19AC C1                 8596 	pop	bc
                           8597 ;	game.c 1096
                           8598 ;	genCmpEq
                           8599 ;	AOP_HL for _input_timer
                           8600 ; genCmpEq: left 1, right 1, result 0
   19AD 21 03 19           8601 	ld	hl,#_input_timer
   19B0 7E                 8602 	ld	a,(hl)
   19B1 FE 04              8603 	cp	a,#0x04
   19B3 C2 E7 19           8604 	jp	nz,00152$
   19B6 18 03              8605 	jr	00232$
   19B8                    8606 00231$:
   19B8 C3 E7 19           8607 	jp	00152$
   19BB                    8608 00232$:
                           8609 ;	game.c 1097
                           8610 ;	genPlus
                           8611 ;	AOP_STK for _move_character_sloc0_1_0
                           8612 ;	AOP_STK for _move_character_sloc3_1_0
                           8613 ;	genPlusIncr
                           8614 ;	Can't optimise plus by inc, falling back to the normal way
   19BB F8 0D              8615 	lda	hl,13(sp)
   19BD 5E                 8616 	ld	e,(hl)
   19BE 23                 8617 	inc	hl
   19BF 56                 8618 	ld	d,(hl)
   19C0 21 06 00           8619 	ld	hl,#0x0006
   19C3 19                 8620 	add	hl,de
   19C4 7D                 8621 	ld	a,l
   19C5 54                 8622 	ld	d,h
   19C6 F8 07              8623 	lda	hl,7(sp)
                           8624 ;	genPointerGet
                           8625 ;	AOP_STK for _move_character_sloc3_1_0
                           8626 ;	AOP_STK for _move_character_sloc7_1_0
   19C8 22                 8627 	ld	(hl+),a
   19C9 72                 8628 	ld	(hl),d
   19CA 5F                 8629 	ld	e,a
   19CB 1A                 8630 	ld	a,(de)
   19CC F8 02              8631 	lda	hl,2(sp)
   19CE 77                 8632 	ld	(hl),a
                           8633 ;	genPointerGet
                           8634 ;	AOP_STK for _move_character_sloc1_1_0
                           8635 ;	AOP_STK for _move_character_sloc6_1_0
   19CF F8 0B              8636 	lda	hl,11(sp)
   19D1 5E                 8637 	ld	e,(hl)
   19D2 23                 8638 	inc	hl
   19D3 56                 8639 	ld	d,(hl)
   19D4 1A                 8640 	ld	a,(de)
   19D5 F8 03              8641 	lda	hl,3(sp)
   19D7 77                 8642 	ld	(hl),a
                           8643 ;	genIpush
                           8644 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19D8 C5                 8645 	push	bc
                           8646 ;	AOP_STK for _move_character_sloc7_1_0
   19D9 2B                 8647 	dec	hl
   19DA 7E                 8648 	ld	a,(hl)
   19DB F5                 8649 	push	af
   19DC 33                 8650 	inc	sp
                           8651 ;	genIpush
                           8652 ;	AOP_STK for _move_character_sloc6_1_0
   19DD 23                 8653 	inc	hl
   19DE 7E                 8654 	ld	a,(hl)
   19DF F5                 8655 	push	af
   19E0 33                 8656 	inc	sp
                           8657 ;	genCall
   19E1 CD 00 00           8658 	call	_set_sprite_tile
   19E4 E8 02              8659 	lda	sp,2(sp)
   19E6 C1                 8660 	pop	bc
                           8661 ;	genLabel
   19E7                    8662 00152$:
                           8663 ;	game.c 1099
                           8664 ;	genCmpEq
                           8665 ;	AOP_HL for _input_timer
                           8666 ; genCmpEq: left 1, right 1, result 0
   19E7 21 03 19           8667 	ld	hl,#_input_timer
   19EA 7E                 8668 	ld	a,(hl)
   19EB FE 02              8669 	cp	a,#0x02
   19ED C2 16 1A           8670 	jp	nz,00154$
   19F0 18 03              8671 	jr	00234$
   19F2                    8672 00233$:
   19F2 C3 16 1A           8673 	jp	00154$
   19F5                    8674 00234$:
                           8675 ;	game.c 1100
                           8676 ;	genPointerGet
                           8677 ;	AOP_STK for _move_character_sloc5_1_0
                           8678 ;	AOP_STK for _move_character_sloc7_1_0
   19F5 F8 04              8679 	lda	hl,4(sp)
   19F7 5E                 8680 	ld	e,(hl)
   19F8 23                 8681 	inc	hl
   19F9 56                 8682 	ld	d,(hl)
   19FA 1A                 8683 	ld	a,(de)
   19FB F8 02              8684 	lda	hl,2(sp)
   19FD 77                 8685 	ld	(hl),a
                           8686 ;	genPointerGet
                           8687 ;	AOP_STK for _move_character_sloc1_1_0
                           8688 ;	AOP_STK for _move_character_sloc6_1_0
   19FE F8 0B              8689 	lda	hl,11(sp)
   1A00 5E                 8690 	ld	e,(hl)
   1A01 23                 8691 	inc	hl
   1A02 56                 8692 	ld	d,(hl)
   1A03 1A                 8693 	ld	a,(de)
   1A04 F8 03              8694 	lda	hl,3(sp)
   1A06 77                 8695 	ld	(hl),a
                           8696 ;	genIpush
                           8697 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1A07 C5                 8698 	push	bc
                           8699 ;	AOP_STK for _move_character_sloc7_1_0
   1A08 2B                 8700 	dec	hl
   1A09 7E                 8701 	ld	a,(hl)
   1A0A F5                 8702 	push	af
   1A0B 33                 8703 	inc	sp
                           8704 ;	genIpush
                           8705 ;	AOP_STK for _move_character_sloc6_1_0
   1A0C 23                 8706 	inc	hl
   1A0D 7E                 8707 	ld	a,(hl)
   1A0E F5                 8708 	push	af
   1A0F 33                 8709 	inc	sp
                           8710 ;	genCall
   1A10 CD 00 00           8711 	call	_set_sprite_tile
   1A13 E8 02              8712 	lda	sp,2(sp)
   1A15 C1                 8713 	pop	bc
                           8714 ;	genLabel
   1A16                    8715 00154$:
                           8716 ;	game.c 1102
                           8717 ;	genPointerGet
                           8718 ;	AOP_STK for _move_character_sloc1_1_0
                           8719 ;	AOP_STK for _move_character_sloc7_1_0
   1A16 F8 0B              8720 	lda	hl,11(sp)
   1A18 5E                 8721 	ld	e,(hl)
   1A19 23                 8722 	inc	hl
   1A1A 56                 8723 	ld	d,(hl)
   1A1B 1A                 8724 	ld	a,(de)
   1A1C F8 02              8725 	lda	hl,2(sp)
   1A1E 77                 8726 	ld	(hl),a
                           8727 ;	genIpush
                           8728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1A1F C5                 8729 	push	bc
   1A20 3E 40              8730 	ld	a,#0x40
   1A22 F5                 8731 	push	af
   1A23 33                 8732 	inc	sp
                           8733 ;	genIpush
                           8734 ;	AOP_STK for _move_character_sloc7_1_0
   1A24 7E                 8735 	ld	a,(hl)
   1A25 F5                 8736 	push	af
   1A26 33                 8737 	inc	sp
                           8738 ;	genCall
   1A27 CD 00 00           8739 	call	_set_sprite_prop
   1A2A E8 02              8740 	lda	sp,2(sp)
   1A2C C1                 8741 	pop	bc
                           8742 ;	game.c 1104
                           8743 ;	genLabel
   1A2D                    8744 00155$:
                           8745 ;	game.c 1107
                           8746 ;	genCmpEq
                           8747 ;	AOP_HL for _input_timer
                           8748 ; genCmpEq: left 1, right 1, result 0
   1A2D 21 03 19           8749 	ld	hl,#_input_timer
   1A30 7E                 8750 	ld	a,(hl)
   1A31 B7                 8751 	or	a,a
   1A32 CA B2 1A           8752 	jp	z,00165$
   1A35                    8753 00235$:
                           8754 ;	game.c 1109
                           8755 ;	genIfx
                           8756 ;	AOP_STK for _move_character_sloc8_1_0
   1A35 AF                 8757 	xor	a,a
   1A36 F8 00              8758 	lda	hl,0(sp)
   1A38 B6                 8759 	or	a,(hl)
   1A39 C2 B2 1A           8760 	jp	nz,00165$
                           8761 ;	genCmpGt
   1A3C 3E 04              8762 	ld	a,#0x04
   1A3E 91                 8763 	sub	a,c
   1A3F DA B2 1A           8764 	jp	c,00165$
                           8765 ;	genMinus
   1A42 0D                 8766 	dec	c
                           8767 ;	genJumpTab
   1A43 59                 8768 	ld	e,c
   1A44 16 00              8769 	ld	d,#0x00
   1A46 21 4D 1A           8770 	ld	hl,#00236$
   1A49 19                 8771 	add	hl,de
   1A4A 19                 8772 	add	hl,de
   1A4B 19                 8773 	add	hl,de
   1A4C E9                 8774 	jp	(hl)
   1A4D                    8775 00236$:
   1A4D C3 7C 1A           8776 	jp	00158$
   1A50 C3 6B 1A           8777 	jp	00157$
   1A53 C3 99 1A           8778 	jp	00159$
   1A56 C3 59 1A           8779 	jp	00156$
                           8780 ;	game.c 1111
                           8781 ;	genLabel
   1A59                    8782 00156$:
                           8783 ;	genPointerGet
                           8784 ;	AOP_STK for _move_character_sloc0_1_0
   1A59 F8 0D              8785 	lda	hl,13(sp)
   1A5B 5E                 8786 	ld	e,(hl)
   1A5C 23                 8787 	inc	hl
   1A5D 56                 8788 	ld	d,(hl)
   1A5E 1A                 8789 	ld	a,(de)
   1A5F 4F                 8790 	ld	c,a
                           8791 ;	genMinus
   1A60 0D                 8792 	dec	c
   1A61 0D                 8793 	dec	c
                           8794 ;	genAssign (pointer)
                           8795 ;	AOP_STK for _move_character_sloc0_1_0
   1A62 2B                 8796 	dec	hl
   1A63 5E                 8797 	ld	e,(hl)
   1A64 23                 8798 	inc	hl
   1A65 56                 8799 	ld	d,(hl)
   1A66 79                 8800 	ld	a,c
   1A67 12                 8801 	ld	(de),a
                           8802 ;	game.c 1112
                           8803 ;	genGoto
   1A68 C3 B2 1A           8804 	jp	00165$
                           8805 ;	game.c 1114
                           8806 ;	genLabel
   1A6B                    8807 00157$:
                           8808 ;	genPointerGet
                           8809 ;	AOP_STK for _move_character_sloc0_1_0
   1A6B F8 0D              8810 	lda	hl,13(sp)
   1A6D 5E                 8811 	ld	e,(hl)
   1A6E 23                 8812 	inc	hl
   1A6F 56                 8813 	ld	d,(hl)
   1A70 1A                 8814 	ld	a,(de)
                           8815 ;	genPlus
                           8816 ;	genPlusIncr
                           8817 ;	Can't optimise plus by inc, falling back to the normal way
   1A71 4F                 8818 	ld	c,a
   1A72 C6 02              8819 	add	a,#0x02
                           8820 ;	genAssign (pointer)
                           8821 ;	AOP_STK for _move_character_sloc0_1_0
   1A74 2B                 8822 	dec	hl
   1A75 5E                 8823 	ld	e,(hl)
   1A76 23                 8824 	inc	hl
   1A77 56                 8825 	ld	d,(hl)
   1A78 12                 8826 	ld	(de),a
                           8827 ;	game.c 1115
                           8828 ;	genGoto
   1A79 C3 B2 1A           8829 	jp	00165$
                           8830 ;	game.c 1117
                           8831 ;	genLabel
   1A7C                    8832 00158$:
                           8833 ;	genPlus
                           8834 ;	AOP_STK for _move_character_sloc0_1_0
                           8835 ;	AOP_STK for _move_character_sloc8_1_0
                           8836 ;	genPlusIncr
                           8837 ;	Can't optimise plus by inc, falling back to the normal way
   1A7C F8 0D              8838 	lda	hl,13(sp)
   1A7E 5E                 8839 	ld	e,(hl)
   1A7F 23                 8840 	inc	hl
   1A80 56                 8841 	ld	d,(hl)
   1A81 21 01 00           8842 	ld	hl,#0x0001
   1A84 19                 8843 	add	hl,de
   1A85 7D                 8844 	ld	a,l
   1A86 54                 8845 	ld	d,h
   1A87 F8 00              8846 	lda	hl,0(sp)
                           8847 ;	genPointerGet
                           8848 ;	AOP_STK for _move_character_sloc8_1_0
   1A89 22                 8849 	ld	(hl+),a
   1A8A 72                 8850 	ld	(hl),d
   1A8B 5F                 8851 	ld	e,a
   1A8C 1A                 8852 	ld	a,(de)
   1A8D 4F                 8853 	ld	c,a
                           8854 ;	genMinus
   1A8E 0D                 8855 	dec	c
   1A8F 0D                 8856 	dec	c
                           8857 ;	genAssign (pointer)
                           8858 ;	AOP_STK for _move_character_sloc8_1_0
   1A90 2B                 8859 	dec	hl
   1A91 5E                 8860 	ld	e,(hl)
   1A92 23                 8861 	inc	hl
   1A93 56                 8862 	ld	d,(hl)
   1A94 79                 8863 	ld	a,c
   1A95 12                 8864 	ld	(de),a
                           8865 ;	game.c 1118
                           8866 ;	genGoto
   1A96 C3 B2 1A           8867 	jp	00165$
                           8868 ;	game.c 1120
                           8869 ;	genLabel
   1A99                    8870 00159$:
                           8871 ;	genPlus
                           8872 ;	AOP_STK for _move_character_sloc0_1_0
                           8873 ;	AOP_STK for _move_character_sloc8_1_0
                           8874 ;	genPlusIncr
                           8875 ;	Can't optimise plus by inc, falling back to the normal way
   1A99 F8 0D              8876 	lda	hl,13(sp)
   1A9B 5E                 8877 	ld	e,(hl)
   1A9C 23                 8878 	inc	hl
   1A9D 56                 8879 	ld	d,(hl)
   1A9E 21 01 00           8880 	ld	hl,#0x0001
   1AA1 19                 8881 	add	hl,de
   1AA2 7D                 8882 	ld	a,l
   1AA3 54                 8883 	ld	d,h
   1AA4 F8 00              8884 	lda	hl,0(sp)
                           8885 ;	genPointerGet
                           8886 ;	AOP_STK for _move_character_sloc8_1_0
   1AA6 22                 8887 	ld	(hl+),a
   1AA7 72                 8888 	ld	(hl),d
   1AA8 5F                 8889 	ld	e,a
   1AA9 1A                 8890 	ld	a,(de)
                           8891 ;	genPlus
                           8892 ;	genPlusIncr
                           8893 ;	Can't optimise plus by inc, falling back to the normal way
   1AAA 4F                 8894 	ld	c,a
   1AAB C6 02              8895 	add	a,#0x02
                           8896 ;	genAssign (pointer)
                           8897 ;	AOP_STK for _move_character_sloc8_1_0
   1AAD 2B                 8898 	dec	hl
   1AAE 5E                 8899 	ld	e,(hl)
   1AAF 23                 8900 	inc	hl
   1AB0 56                 8901 	ld	d,(hl)
   1AB1 12                 8902 	ld	(de),a
                           8903 ;	game.c 1122
                           8904 ;	genLabel
   1AB2                    8905 00165$:
                           8906 ;	game.c 1127
                           8907 ;	genPlus
                           8908 ;	AOP_STK for _move_character_sloc0_1_0
                           8909 ;	AOP_STK for _move_character_sloc8_1_0
                           8910 ;	genPlusIncr
                           8911 ;	Can't optimise plus by inc, falling back to the normal way
   1AB2 F8 0D              8912 	lda	hl,13(sp)
   1AB4 5E                 8913 	ld	e,(hl)
   1AB5 23                 8914 	inc	hl
   1AB6 56                 8915 	ld	d,(hl)
   1AB7 21 01 00           8916 	ld	hl,#0x0001
   1ABA 19                 8917 	add	hl,de
   1ABB 7D                 8918 	ld	a,l
   1ABC 54                 8919 	ld	d,h
   1ABD F8 00              8920 	lda	hl,0(sp)
                           8921 ;	genPointerGet
                           8922 ;	AOP_STK for _move_character_sloc8_1_0
   1ABF 22                 8923 	ld	(hl+),a
   1AC0 72                 8924 	ld	(hl),d
   1AC1 5F                 8925 	ld	e,a
   1AC2 1A                 8926 	ld	a,(de)
   1AC3 4F                 8927 	ld	c,a
                           8928 ;	genPointerGet
                           8929 ;	AOP_STK for _move_character_sloc0_1_0
                           8930 ;	AOP_STK for _move_character_sloc7_1_0
   1AC4 F8 0D              8931 	lda	hl,13(sp)
   1AC6 5E                 8932 	ld	e,(hl)
   1AC7 23                 8933 	inc	hl
   1AC8 56                 8934 	ld	d,(hl)
   1AC9 1A                 8935 	ld	a,(de)
   1ACA F8 02              8936 	lda	hl,2(sp)
   1ACC 77                 8937 	ld	(hl),a
                           8938 ;	genIpush
                           8939 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1ACD 79                 8940 	ld	a,c
   1ACE F5                 8941 	push	af
   1ACF 33                 8942 	inc	sp
                           8943 ;	genIpush
                           8944 ;	AOP_STK for _move_character_sloc7_1_0
   1AD0 7E                 8945 	ld	a,(hl)
   1AD1 F5                 8946 	push	af
   1AD2 33                 8947 	inc	sp
                           8948 ;	genIpush
   1AD3 78                 8949 	ld	a,b
   1AD4 F5                 8950 	push	af
   1AD5 33                 8951 	inc	sp
                           8952 ;	genCall
   1AD6 CD 00 00           8953 	call	_move_sprite
   1AD9 E8 03              8954 	lda	sp,3(sp)
                           8955 ;	game.c 1128
                           8956 ;	genPlus
                           8957 ;	AOP_STK for _move_character_sloc0_1_0
                           8958 ;	genPlusIncr
                           8959 ;	Can't optimise plus by inc, falling back to the normal way
   1ADB F8 0D              8960 	lda	hl,13(sp)
   1ADD 5E                 8961 	ld	e,(hl)
   1ADE 23                 8962 	inc	hl
   1ADF 56                 8963 	ld	d,(hl)
   1AE0 21 0C 00           8964 	ld	hl,#0x000C
   1AE3 19                 8965 	add	hl,de
   1AE4 4D                 8966 	ld	c,l
   1AE5 44                 8967 	ld	b,h
                           8968 ;	genPointerGet
                           8969 ;	AOP_STK for _move_character_sloc8_1_0
                           8970 ;	AOP_STK for _move_character_sloc7_1_0
   1AE6 F8 00              8971 	lda	hl,0(sp)
   1AE8 5E                 8972 	ld	e,(hl)
   1AE9 23                 8973 	inc	hl
   1AEA 56                 8974 	ld	d,(hl)
   1AEB 1A                 8975 	ld	a,(de)
   1AEC 23                 8976 	inc	hl
   1AED 77                 8977 	ld	(hl),a
                           8978 ;	genPointerGet
                           8979 ;	AOP_STK for _move_character_sloc0_1_0
                           8980 ;	AOP_STK for _move_character_sloc8_1_0
   1AEE F8 0D              8981 	lda	hl,13(sp)
   1AF0 5E                 8982 	ld	e,(hl)
   1AF1 23                 8983 	inc	hl
   1AF2 56                 8984 	ld	d,(hl)
   1AF3 1A                 8985 	ld	a,(de)
   1AF4 F8 00              8986 	lda	hl,0(sp)
   1AF6 77                 8987 	ld	(hl),a
                           8988 ;	genIpush
                           8989 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1AF7 C5                 8990 	push	bc
                           8991 ;	AOP_STK for _move_character_sloc7_1_0
   1AF8 23                 8992 	inc	hl
   1AF9 23                 8993 	inc	hl
   1AFA 7E                 8994 	ld	a,(hl)
   1AFB F5                 8995 	push	af
   1AFC 33                 8996 	inc	sp
                           8997 ;	genIpush
                           8998 ;	AOP_STK for _move_character_sloc8_1_0
   1AFD 2B                 8999 	dec	hl
   1AFE 2B                 9000 	dec	hl
   1AFF 7E                 9001 	ld	a,(hl)
   1B00 F5                 9002 	push	af
   1B01 33                 9003 	inc	sp
                           9004 ;	genCall
   1B02 CD CD 0D           9005 	call	_get_player_map_position
                           9006 ;	AOP_STK for _move_character_sloc8_1_0
   1B05 F8 05              9007 	lda	hl,5(sp)
   1B07 72                 9008 	ld	(hl),d
   1B08 2B                 9009 	dec	hl
   1B09 73                 9010 	ld	(hl),e
   1B0A E8 02              9011 	lda	sp,2(sp)
   1B0C C1                 9012 	pop	bc
                           9013 ;	genAssign (pointer)
                           9014 ;	AOP_STK for _move_character_sloc8_1_0
   1B0D 59                 9015 	ld	e,c
   1B0E 50                 9016 	ld	d,b
   1B0F F8 00              9017 	lda	hl,0(sp)
   1B11 7E                 9018 	ld	a,(hl)
   1B12 12                 9019 	ld	(de),a
   1B13 13                 9020 	inc	de
   1B14 23                 9021 	inc	hl
   1B15 7E                 9022 	ld	a,(hl)
   1B16 12                 9023 	ld	(de),a
                           9024 ;	genLabel
   1B17                    9025 00166$:
                           9026 ;	genEndFunction
   1B17 E8 0F              9027 	lda	sp,15(sp)
   1B19 C9                 9028 	ret
   1B1A                    9029 ___move_character_end:
                           9030 ;	game.c 1131
                           9031 ;	genLabel
                           9032 ;	genFunction
                           9033 ;	---------------------------------
                           9034 ; Function set_character_sprite
                           9035 ; ---------------------------------
   1B1A                    9036 ___set_character_sprite_start:
   1B1A                    9037 _set_character_sprite:
   1B1A E8 F9              9038 	lda	sp,-7(sp)
                           9039 ;	game.c 1132
                           9040 ;	genAssign
                           9041 ;	AOP_STK for 
   1B1C F8 09              9042 	lda	hl,9(sp)
   1B1E 4E                 9043 	ld	c,(hl)
   1B1F 23                 9044 	inc	hl
   1B20 46                 9045 	ld	b,(hl)
                           9046 ;	genPlus
                           9047 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9048 ;	genPlusIncr
                           9049 ;	Can't optimise plus by inc, falling back to the normal way
   1B21 21 0B 00           9050 	ld	hl,#0x000B
   1B24 09                 9051 	add	hl,bc
   1B25 7D                 9052 	ld	a,l
   1B26 54                 9053 	ld	d,h
   1B27 F8 05              9054 	lda	hl,5(sp)
                           9055 ;	genPointerGet
                           9056 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9057 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B29 22                 9058 	ld	(hl+),a
   1B2A 72                 9059 	ld	(hl),d
   1B2B 5F                 9060 	ld	e,a
   1B2C 1A                 9061 	ld	a,(de)
   1B2D 2B                 9062 	dec	hl
   1B2E 2B                 9063 	dec	hl
   1B2F 77                 9064 	ld	(hl),a
                           9065 ;	genCmpGt
                           9066 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           9067 ;	AOP_HL for _characters_available
   1B30 21 02 19           9068 	ld	hl,#_characters_available
   1B33 7E                 9069 	ld	a,(hl)
   1B34 F8 04              9070 	lda	hl,4(sp)
   1B36 96                 9071 	sub	a,(hl)
   1B37 DA B3 1B           9072 	jp	c,00103$
                           9073 ;	game.c 1133
                           9074 ;	genPlus
                           9075 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9076 ;	genPlusIncr
                           9077 ;	Can't optimise plus by inc, falling back to the normal way
   1B3A 21 02 00           9078 	ld	hl,#0x0002
   1B3D 09                 9079 	add	hl,bc
   1B3E 7D                 9080 	ld	a,l
   1B3F 54                 9081 	ld	d,h
   1B40 F8 02              9082 	lda	hl,2(sp)
                           9083 ;	genPointerGet
                           9084 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9085 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B42 22                 9086 	ld	(hl+),a
   1B43 72                 9087 	ld	(hl),d
   1B44 5F                 9088 	ld	e,a
   1B45 1A                 9089 	ld	a,(de)
   1B46 2B                 9090 	dec	hl
   1B47 2B                 9091 	dec	hl
   1B48 77                 9092 	ld	(hl),a
                           9093 ;	genIpush
                           9094 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1B49 C5                 9095 	push	bc
                           9096 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B4A 7E                 9097 	ld	a,(hl)
   1B4B F5                 9098 	push	af
   1B4C 33                 9099 	inc	sp
                           9100 ;	genIpush
                           9101 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B4D F8 07              9102 	lda	hl,7(sp)
   1B4F 7E                 9103 	ld	a,(hl)
   1B50 F5                 9104 	push	af
   1B51 33                 9105 	inc	sp
                           9106 ;	genCall
   1B52 CD 00 00           9107 	call	_set_sprite_tile
   1B55 E8 02              9108 	lda	sp,2(sp)
   1B57 C1                 9109 	pop	bc
                           9110 ;	game.c 1134
                           9111 ;	genPlus
                           9112 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9113 ;	genPlusIncr
                           9114 ;	Can't optimise plus by inc, falling back to the normal way
   1B58 21 01 00           9115 	ld	hl,#0x0001
   1B5B 09                 9116 	add	hl,bc
   1B5C 7D                 9117 	ld	a,l
   1B5D 54                 9118 	ld	d,h
   1B5E F8 02              9119 	lda	hl,2(sp)
                           9120 ;	genPointerGet
                           9121 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9122 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B60 22                 9123 	ld	(hl+),a
   1B61 72                 9124 	ld	(hl),d
   1B62 5F                 9125 	ld	e,a
   1B63 1A                 9126 	ld	a,(de)
   1B64 2B                 9127 	dec	hl
   1B65 2B                 9128 	dec	hl
   1B66 77                 9129 	ld	(hl),a
                           9130 ;	genPointerGet
                           9131 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B67 0A                 9132 	ld	a,(bc)
   1B68 F8 04              9133 	lda	hl,4(sp)
                           9134 ;	genPointerGet
                           9135 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9136 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B6A 22                 9137 	ld	(hl+),a
   1B6B 5E                 9138 	ld	e,(hl)
   1B6C 23                 9139 	inc	hl
   1B6D 56                 9140 	ld	d,(hl)
   1B6E 1A                 9141 	ld	a,(de)
   1B6F F8 00              9142 	lda	hl,0(sp)
   1B71 77                 9143 	ld	(hl),a
                           9144 ;	genIpush
                           9145 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1B72 C5                 9146 	push	bc
                           9147 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B73 23                 9148 	inc	hl
   1B74 7E                 9149 	ld	a,(hl)
   1B75 F5                 9150 	push	af
   1B76 33                 9151 	inc	sp
                           9152 ;	genIpush
                           9153 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B77 F8 07              9154 	lda	hl,7(sp)
   1B79 7E                 9155 	ld	a,(hl)
   1B7A F5                 9156 	push	af
   1B7B 33                 9157 	inc	sp
                           9158 ;	genIpush
                           9159 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B7C F8 04              9160 	lda	hl,4(sp)
   1B7E 7E                 9161 	ld	a,(hl)
   1B7F F5                 9162 	push	af
   1B80 33                 9163 	inc	sp
                           9164 ;	genCall
   1B81 CD 00 00           9165 	call	_move_sprite
   1B84 E8 03              9166 	lda	sp,3(sp)
   1B86 C1                 9167 	pop	bc
                           9168 ;	game.c 1135
                           9169 ;	genPlus
                           9170 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9171 ;	genPlusIncr
                           9172 ;	Can't optimise plus by inc, falling back to the normal way
   1B87 21 0C 00           9173 	ld	hl,#0x000C
   1B8A 09                 9174 	add	hl,bc
   1B8B 7D                 9175 	ld	a,l
   1B8C 54                 9176 	ld	d,h
   1B8D F8 05              9177 	lda	hl,5(sp)
   1B8F 22                 9178 	ld	(hl+),a
   1B90 72                 9179 	ld	(hl),d
                           9180 ;	genPointerGet
                           9181 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9182 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B91 F8 02              9183 	lda	hl,2(sp)
   1B93 5E                 9184 	ld	e,(hl)
   1B94 23                 9185 	inc	hl
   1B95 56                 9186 	ld	d,(hl)
   1B96 1A                 9187 	ld	a,(de)
   1B97 F8 00              9188 	lda	hl,0(sp)
   1B99 77                 9189 	ld	(hl),a
                           9190 ;	genPointerGet
   1B9A 0A                 9191 	ld	a,(bc)
   1B9B 4F                 9192 	ld	c,a
                           9193 ;	genIpush
                           9194 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           9195 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B9C 7E                 9196 	ld	a,(hl)
   1B9D F5                 9197 	push	af
   1B9E 33                 9198 	inc	sp
                           9199 ;	genIpush
   1B9F 79                 9200 	ld	a,c
   1BA0 F5                 9201 	push	af
   1BA1 33                 9202 	inc	sp
                           9203 ;	genCall
   1BA2 CD CD 0D           9204 	call	_get_player_map_position
   1BA5 42                 9205 	ld	b,d
   1BA6 4B                 9206 	ld	c,e
   1BA7 E8 02              9207 	lda	sp,2(sp)
                           9208 ;	genAssign (pointer)
                           9209 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   1BA9 F8 05              9210 	lda	hl,5(sp)
   1BAB 5E                 9211 	ld	e,(hl)
   1BAC 23                 9212 	inc	hl
   1BAD 56                 9213 	ld	d,(hl)
   1BAE 79                 9214 	ld	a,c
   1BAF 12                 9215 	ld	(de),a
   1BB0 13                 9216 	inc	de
   1BB1 78                 9217 	ld	a,b
   1BB2 12                 9218 	ld	(de),a
                           9219 ;	genLabel
   1BB3                    9220 00103$:
                           9221 ;	genEndFunction
   1BB3 E8 07              9222 	lda	sp,7(sp)
   1BB5 C9                 9223 	ret
   1BB6                    9224 ___set_character_sprite_end:
                           9225 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_next_map_position_end      0C2D R
  0 ____get_next_map_position_start    0B79 R
  0 ___can_move_end                    1114 R
  0 ___can_move_start                  102B R
  0 ___can_move_to_map_pos_end         102B R
  0 ___can_move_to_map_pos_start       0F6D R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0DCD R
  0 ___dog1_power_apply_start          0C2D R
  0 ___dog1_power_end                  0B79 R
  0 ___dog1_power_start                08A1 R
  0 ___get_player_map_position_end     0E27 R
  0 ___get_player_map_position_start   0DCD R
  0 ___got_door_end                    07CC R
  0 ___got_door_start                  05E2 R
  0 ___got_key_end                     05E2 R
  0 ___got_key_start                   0535 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0535 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      08A1 R
  0 ___is_ded_start                    07CC R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              1B1A R
  0 ___move_character_start            12BA R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0F6D R
  0 ___player_input_start              0E27 R
  0 ___rotate_player_end               12BA R
  0 ___rotate_player_start             1114 R
  0 ___set_character_sprite_end        1BB6 R
  0 ___set_character_sprite_start      1B1A R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_next_map_position            0B79 GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          102B GR
  0 _can_move_to_map_pos               0F6D GR
  1 _cat                               1A97 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7B GR
  0 _dog1_power                        08A1 GR
  0 _dog1_power_apply                  0C2D GR
  1 _dog2                              1A89 GR
  0 _get_player_map_position           0DCD GR
  0 _got_door                          05E2 GR
  0 _got_key                           0535 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA5 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07CC GR
  1 _item1                             1ABB GR
  1 _item2                             1AC1 GR
  1 _item3                             1AC7 GR
    _joypad                            **** GX
  1 _key                               1AB5 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    12BA GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AB3 GR
  0 _player_input                      0E27 GR
    _printf                            **** GX
  0 _rotate_player                     1114 GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              1B1A GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1BB6   flags 0
   1 _DATA                              size 1ACD   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 1031   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
