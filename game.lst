                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Thu Feb 27 14:03:37 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc35290
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _ice_should_slide
                             14 	.globl _instanciate_chars
                             15 	.globl _copy_map
                             16 	.globl _helper_copy_map
                             17 	.globl _change_char
                             18 	.globl _map_water
                             19 	.globl _init
                             20 	.globl _main
                             21 	.globl _timers
                             22 	.globl _performantDelay
                             23 	.globl _item3
                             24 	.globl _item2
                             25 	.globl _item1
                             26 	.globl _key
                             27 	.globl _player
                             28 	.globl _horse
                             29 	.globl _cat
                             30 	.globl _dog2
                             31 	.globl _dog1
                             32 	.globl _bunny
                             33 	.globl _map
                             34 	.globl _current_map
                             35 	.globl _input_timer
                             36 	.globl _characters_available
                             37 	.globl _timer
                             38 	.globl _running
                             39 	.globl _spritePalette
                             40 	.globl _sprites_park
                             41 	.globl _MapTest
                             42 	.globl _Map10
                             43 	.globl _Map9
                             44 	.globl _Map8
                             45 	.globl _Map7
                             46 	.globl _Map6
                             47 	.globl _Map5
                             48 	.globl _Map4
                             49 	.globl _Map3
                             50 	.globl _Map2
                             51 	.globl _Map1
                             52 	.globl _Characters
                             53 	.globl _map_loop
                             54 	.globl _map_init
                             55 	.globl _got_key
                             56 	.globl _got_door
                             57 	.globl _is_ded
                             58 	.globl __get_next_map_position
                             59 	.globl _dog1_power_apply
                             60 	.globl _get_player_map_position
                             61 	.globl _player_input
                             62 	.globl _can_move
                             63 	.globl _move_character
                             64 	.globl _set_character_sprite
                             65 ;--------------------------------------------------------
                             66 ; special function registers
                             67 ;--------------------------------------------------------
                             68 ;--------------------------------------------------------
                             69 ; special function bits 
                             70 ;--------------------------------------------------------
                             71 ;--------------------------------------------------------
                             72 ; internal ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DATA
   0000                      75 _Characters::
   0000                      76 	.ds 496
   01F0                      77 _Map1::
   01F0                      78 	.ds 360
   0358                      79 _Map2::
   0358                      80 	.ds 360
   04C0                      81 _Map3::
   04C0                      82 	.ds 360
   0628                      83 _Map4::
   0628                      84 	.ds 360
   0790                      85 _Map5::
   0790                      86 	.ds 360
   08F8                      87 _Map6::
   08F8                      88 	.ds 360
   0A60                      89 _Map7::
   0A60                      90 	.ds 360
   0BC8                      91 _Map8::
   0BC8                      92 	.ds 360
   0D30                      93 _Map9::
   0D30                      94 	.ds 360
   0E98                      95 _Map10::
   0E98                      96 	.ds 360
   1000                      97 _MapTest::
   1000                      98 	.ds 360
   1168                      99 _sprites_park::
   1168                     100 	.ds 1936
   18F8                     101 _spritePalette::
   18F8                     102 	.ds 8
   1900                     103 _running::
   1900                     104 	.ds 1
   1901                     105 _timer::
   1901                     106 	.ds 1
   1902                     107 _characters_available::
   1902                     108 	.ds 1
   1903                     109 _input_timer::
   1903                     110 	.ds 1
   1904                     111 _current_map::
   1904                     112 	.ds 1
   1905                     113 _map::
   1905                     114 	.ds 360
   1A6D                     115 _bunny::
   1A6D                     116 	.ds 13
   1A7A                     117 _dog1::
   1A7A                     118 	.ds 13
   1A87                     119 _dog2::
   1A87                     120 	.ds 13
   1A94                     121 _cat::
   1A94                     122 	.ds 13
   1AA1                     123 _horse::
   1AA1                     124 	.ds 13
   1AAE                     125 _player::
   1AAE                     126 	.ds 2
   1AB0                     127 _key::
   1AB0                     128 	.ds 6
   1AB6                     129 _item1::
   1AB6                     130 	.ds 6
   1ABC                     131 _item2::
   1ABC                     132 	.ds 6
   1AC2                     133 _item3::
   1AC2                     134 	.ds 6
                            135 ;--------------------------------------------------------
                            136 ; overlayable items in internal ram 
                            137 ;--------------------------------------------------------
                            138 	.area _OVERLAY
                            139 ;--------------------------------------------------------
                            140 ; indirectly addressable internal ram data
                            141 ;--------------------------------------------------------
                            142 	.area _ISEG
                            143 ;--------------------------------------------------------
                            144 ; bit data
                            145 ;--------------------------------------------------------
                            146 	.area _BSEG
                            147 ;--------------------------------------------------------
                            148 ; external ram data
                            149 ;--------------------------------------------------------
                            150 	.area _XSEG
                            151 ;--------------------------------------------------------
                            152 ; global & static initialisations
                            153 ;--------------------------------------------------------
                            154 	.area _GSINIT
                            155 	.area _GSFINAL
                            156 	.area _GSINIT
                            157 ;	game.c 26
                            158 ;	game.c 1064
                            159 ;	genArrayInit
                            160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            161 	ld	hl,#_Characters
   0003 CD 00 00            162 	call	__initrleblock
   0006 2C                  163 	.db	44
   0007 09 00 00 09 00 09   164 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   165 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   166 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   167 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   168 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         169 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               170 	.db	-5,0x00
   0035 7F                  171 	.db	127
   0036 13 00 1E 0A 9E 00   172 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   173 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   174 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   175 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   176 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   177 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   178 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   179 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   180 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   181 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   182 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   183 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   184 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   185 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   186 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   187 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  188 	.db	127
   00B6 00 00 04 70 04 40   189 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   190 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   191 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   192 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   193 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   194 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   195 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   196 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   197 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   198 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   199 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   200 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   201 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   202 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   203 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   204 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  205 	.db	62
   0136 00 00 39 14 FF 00   206 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   207 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   208 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   209 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   210 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   211 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   212 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   213 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               214 	.db	-127,0x00
   0176 04                  215 	.db	4
   0177 00 00 00 00         216 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  217 	.db	0
                            218 ;	game.c 25
                            219 ;	game.c 1064
                            220 ;	genArrayInit
                            221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            222 	ld	hl,#_Map1
   017F CD 00 00            223 	call	__initrleblock
   0182 04                  224 	.db	4
   0183 01 01 01 01         225 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               226 	.db	-16,0x16
   0189 04                  227 	.db	4
   018A 01 0A 02 01         228 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               229 	.db	-15,0x09
   0190 0C                  230 	.db	12
   0191 16 01 01 02 15 15   231 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         232 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               233 	.db	-6,0x15
   019F 09                  234 	.db	9
   01A0 02 09 16 02 01 02   235 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  236 	.db	0x17
   01A9 FA 15               237 	.db	-6,0x15
   01AB 20                  238 	.db	32
   01AC 17 15 15 15 17 15   239 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   240 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   241 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   242 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               243 	.db	-5,0x02
   01CE 06                  244 	.db	6
   01CF 01 15 01 01 01 17   245 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               246 	.db	-5,0x0B
   01D7 3E                  247 	.db	62
   01D8 01 01 01 15 02 02   248 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   249 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   250 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   251 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   252 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   253 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   254 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   255 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               256 	.db	-6,0x15
   0218 0C                  257 	.db	12
   0219 02 02 15 02 02 02   258 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         259 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               260 	.db	-8,0x15
   0227 3C                  261 	.db	60
   0228 17 17 17 15 15 15   262 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   263 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   264 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   265 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   266 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   267 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   268 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         269 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               270 	.db	-7,0x15
   0266 07                  271 	.db	7
   0267 17 17 15 15 15 01   272 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               273 	.db	-10,0x15
   0270 28                  274 	.db	40
   0271 17 15 15 15 15 17   275 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   276 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   277 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   278 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   279 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               280 	.db	-5,0x0B
   029B 0F                  281 	.db	15
   029C 04 2E 00 02 01 02   282 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   283 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               284 	.db	-5,0x0B
   02AD 03                  285 	.db	3
   02AE 04 00 00            286 	.db	0x04, 0x00, 0x00
   02B1 00                  287 	.db	0
                            288 ;	game.c 25
                            289 ;	game.c 1064
                            290 ;	genArrayInit
                            291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            292 	ld	hl,#_Map2
   02B5 CD 00 00            293 	call	__initrleblock
   02B8 FB 00               294 	.db	-5,0x00
   02BA 01                  295 	.db	1
   02BB 2D                  296 	.db	0x2D
   02BC F9 00               297 	.db	-7,0x00
   02BE 04                  298 	.db	4
   02BF 2D 00 15 15         299 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               300 	.db	-6,0x00
   02C5 7F                  301 	.db	127
   02C6 0B 0B 00 0B 0B 0B   302 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   303 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   304 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   305 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   306 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   307 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   308 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   309 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   310 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   311 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   312 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   313 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   314 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   315 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   316 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   317 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  318 	.db	53
   0346 00 00 2D 00 00 00   319 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   320 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   321 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   322 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   323 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   324 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      325 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               326 	.db	-5,0x0B
   037D 03                  327 	.db	3
   037E 15 00 15            328 	.db	0x15, 0x00, 0x15
   0381 FB 0B               329 	.db	-5,0x0B
   0383 37                  330 	.db	55
   0384 15 15 0B 15 15 00   331 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   332 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   333 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   334 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   335 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   336 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   337 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               338 	.db	-5,0x0B
   03BD 09                  339 	.db	9
   03BE 15 15 0B 15 15 00   340 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  341 	.db	0x15
   03C7 F6 0B               342 	.db	-10,0x0B
   03C9 07                  343 	.db	7
   03CA 15 15 15 0B 15 15   344 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               345 	.db	-16,0x15
   03D3 09                  346 	.db	9
   03D4 00 15 15 00 00 00   347 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  348 	.db	0x15
   03DD F9 00               349 	.db	-7,0x00
   03DF 09                  350 	.db	9
   03E0 15 15 15 00 00 15   351 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  352 	.db	0x15
   03E9 FB 00               353 	.db	-5,0x00
   03EB FB 15               354 	.db	-5,0x15
   03ED FB 00               355 	.db	-5,0x00
   03EF 02                  356 	.db	2
   03F0 15 15               357 	.db	0x15, 0x15
   03F2 00                  358 	.db	0
                            359 ;	game.c 25
                            360 ;	game.c 1064
                            361 ;	genArrayInit
                            362 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            363 	ld	hl,#_Map3
   03F6 CD 00 00            364 	call	__initrleblock
   03F9 F2 01               365 	.db	-14,0x01
   03FB 03                  366 	.db	3
   03FC 2D 0B 0B            367 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               368 	.db	-5,0x01
   0401 02                  369 	.db	2
   0402 17 17               370 	.db	0x17, 0x17
   0404 FA 15               371 	.db	-6,0x15
   0406 0E                  372 	.db	14
   0407 17 17 15 15 0B 15   373 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   374 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               375 	.db	-5,0x01
   0417 08                  376 	.db	8
   0418 29 01 01 01 2D 01   377 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               378 	.db	-5,0x01
   0422 7F                  379 	.db	127
   0423 15 15 2D 15 15 15   380 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   381 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   382 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   383 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   384 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   385 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   386 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   387 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   388 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   389 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   390 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   391 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   392 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   393 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   394 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   395 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  396 	.db	61
   04A3 01 15 17 15 15 01   397 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   398 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   399 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   400 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   401 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   402 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   403 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      404 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               405 	.db	-5,0x01
   04E2 0B                  406 	.db	11
   04E3 15 15 01 15 2D 01   407 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            408 	.db	0x15, 0x15, 0x0B
   04EE FB 15               409 	.db	-5,0x15
   04F0 59                  410 	.db	89
   04F1 17 15 15 17 15 15   411 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   412 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   413 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   414 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   415 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   416 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   417 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   418 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   419 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   420 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   421 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  422 	.db	0x17
   054A 00                  423 	.db	0
                            424 ;	game.c 25
                            425 ;	game.c 1064
                            426 ;	genArrayInit
                            427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            428 	ld	hl,#_Map4
   054E CD 00 00            429 	call	__initrleblock
   0551 06                  430 	.db	6
   0552 00 00 0A 0A 15 15   431 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               432 	.db	-5,0x0B
   055A 01                  433 	.db	1
   055B 15                  434 	.db	0x15
   055C FA 0B               435 	.db	-6,0x0B
   055E 25                  436 	.db	37
   055F 15 15 00 0A 2D 06   437 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   438 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   439 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   440 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      441 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               442 	.db	-5,0x0B
   0586 08                  443 	.db	8
   0587 0A 07 0B 0B 15 0B   444 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               445 	.db	-5,0x0B
   0591 01                  446 	.db	1
   0592 15                  447 	.db	0x15
   0593 F6 0B               448 	.db	-10,0x0B
   0595 42                  449 	.db	66
   0596 00 2D 0B 01 00 0B   450 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   451 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   452 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   453 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   454 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   455 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   456 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   457 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               458 	.db	0x15, 0x00
   05D8 F9 0B               459 	.db	-7,0x0B
   05DA 43                  460 	.db	67
   05DB 15 0B 0B 00 0B 15   461 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   462 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   463 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   464 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   465 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   466 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   467 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   468 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            469 	.db	0x15, 0x0B, 0x15
   061E F9 0B               470 	.db	-7,0x0B
   0620 16                  471 	.db	22
   0621 15 15 0B 0B 0B 0B   472 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   473 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   474 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               475 	.db	-5,0x0B
   0639 66                  476 	.db	102
   063A 15 0A 07 15 00 02   477 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   478 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   479 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   480 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   481 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   482 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   483 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   484 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   485 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   486 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   487 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   488 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   489 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  490 	.db	0
                            491 ;	game.c 25
                            492 ;	game.c 1064
                            493 ;	genArrayInit
                            494 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            495 	ld	hl,#_Map5
   06A4 CD 00 00            496 	call	__initrleblock
   06A7 F2 01               497 	.db	-14,0x01
   06A9 03                  498 	.db	3
   06AA 2D 0B 0B            499 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               500 	.db	-5,0x01
   06AF 02                  501 	.db	2
   06B0 17 17               502 	.db	0x17, 0x17
   06B2 FA 15               503 	.db	-6,0x15
   06B4 07                  504 	.db	7
   06B5 17 17 15 15 0B 15   505 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               506 	.db	-5,0x01
   06BE 02                  507 	.db	2
   06BF 17 15               508 	.db	0x17, 0x15
   06C1 FB 01               509 	.db	-5,0x01
   06C3 7F                  510 	.db	127
   06C4 29 01 01 01 2D 01   511 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   512 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   513 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   514 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   515 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   516 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   517 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   518 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   519 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   520 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   521 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   522 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   523 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   524 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   525 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   526 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  527 	.db	74
   0744 01 2D 01 01 01 15   528 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   529 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   530 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   531 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   532 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   533 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   534 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   535 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   536 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               537 	.db	0x01, 0x29
   078E FB 01               538 	.db	-5,0x01
   0790 0B                  539 	.db	11
   0791 15 15 01 15 2D 01   540 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            541 	.db	0x15, 0x15, 0x0B
   079C FB 15               542 	.db	-5,0x15
   079E 59                  543 	.db	89
   079F 17 15 15 17 15 15   544 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   545 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   546 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   547 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   548 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   549 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   550 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   551 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   552 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   553 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   554 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  555 	.db	0x17
   07F8 00                  556 	.db	0
                            557 ;	game.c 25
                            558 ;	game.c 1064
                            559 ;	genArrayInit
                            560 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            561 	ld	hl,#_Map6
   07FC CD 00 00            562 	call	__initrleblock
   07FF BF 00               563 	.db	-65,0x00
   0801 02                  564 	.db	2
   0802 0C 0C               565 	.db	0x0C, 0x0C
   0804 EE 00               566 	.db	-18,0x00
   0806 02                  567 	.db	2
   0807 0C 0C               568 	.db	0x0C, 0x0C
   0809 81 00               569 	.db	-127,0x00
   080B 81 00               570 	.db	-127,0x00
   080D ED 00               571 	.db	-19,0x00
   080F 00                  572 	.db	0
                            573 ;	game.c 25
                            574 ;	game.c 1064
                            575 ;	genArrayInit
                            576 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            577 	ld	hl,#_Map7
   0813 CD 00 00            578 	call	__initrleblock
   0816 BF 00               579 	.db	-65,0x00
   0818 02                  580 	.db	2
   0819 0C 0C               581 	.db	0x0C, 0x0C
   081B EE 00               582 	.db	-18,0x00
   081D 02                  583 	.db	2
   081E 0C 0C               584 	.db	0x0C, 0x0C
   0820 81 00               585 	.db	-127,0x00
   0822 81 00               586 	.db	-127,0x00
   0824 ED 00               587 	.db	-19,0x00
   0826 00                  588 	.db	0
                            589 ;	game.c 25
                            590 ;	game.c 1064
                            591 ;	genArrayInit
                            592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            593 	ld	hl,#_Map8
   082A CD 00 00            594 	call	__initrleblock
   082D BF 00               595 	.db	-65,0x00
   082F 02                  596 	.db	2
   0830 0C 0C               597 	.db	0x0C, 0x0C
   0832 EE 00               598 	.db	-18,0x00
   0834 02                  599 	.db	2
   0835 0C 0C               600 	.db	0x0C, 0x0C
   0837 81 00               601 	.db	-127,0x00
   0839 81 00               602 	.db	-127,0x00
   083B ED 00               603 	.db	-19,0x00
   083D 00                  604 	.db	0
                            605 ;	game.c 25
                            606 ;	game.c 1064
                            607 ;	genArrayInit
                            608 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            609 	ld	hl,#_Map9
   0841 CD 00 00            610 	call	__initrleblock
   0844 BF 00               611 	.db	-65,0x00
   0846 02                  612 	.db	2
   0847 0C 0C               613 	.db	0x0C, 0x0C
   0849 EE 00               614 	.db	-18,0x00
   084B 02                  615 	.db	2
   084C 0C 0C               616 	.db	0x0C, 0x0C
   084E 81 00               617 	.db	-127,0x00
   0850 81 00               618 	.db	-127,0x00
   0852 ED 00               619 	.db	-19,0x00
   0854 00                  620 	.db	0
                            621 ;	game.c 25
                            622 ;	game.c 1064
                            623 ;	genArrayInit
                            624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            625 	ld	hl,#_Map10
   0858 CD 00 00            626 	call	__initrleblock
   085B BF 00               627 	.db	-65,0x00
   085D 02                  628 	.db	2
   085E 0C 0C               629 	.db	0x0C, 0x0C
   0860 EE 00               630 	.db	-18,0x00
   0862 02                  631 	.db	2
   0863 0C 0C               632 	.db	0x0C, 0x0C
   0865 81 00               633 	.db	-127,0x00
   0867 81 00               634 	.db	-127,0x00
   0869 ED 00               635 	.db	-19,0x00
   086B 00                  636 	.db	0
                            637 ;	game.c 25
                            638 ;	game.c 1064
                            639 ;	genArrayInit
                            640 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            641 	ld	hl,#_MapTest
   086F CD 00 00            642 	call	__initrleblock
   0872 E8 00               643 	.db	-24,0x00
   0874 06                  644 	.db	6
   0875 47 4A 59 46 00 5F   645 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087B D9 00               646 	.db	-39,0x00
   087D 0A                  647 	.db	10
   087E 4B 46 58 4A 00 5F   648 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62
        00 62
   0886 00 65               649 	.db	0x00, 0x65
   0888 F6 00               650 	.db	-10,0x00
   088A 0A                  651 	.db	10
   088B 4B 46 58 4A 00 60   652 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x60, 0x00, 0x62
        00 62
   0893 00 66               653 	.db	0x00, 0x66
   0895 F6 00               654 	.db	-10,0x00
   0897 0A                  655 	.db	10
   0898 4B 46 58 4A 00 5C   656 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62
        00 62
   08A0 00 67               657 	.db	0x00, 0x67
   08A2 ED 00               658 	.db	-19,0x00
   08A4 01                  659 	.db	1
   08A5 68                  660 	.db	0x68
   08A6 EB 00               661 	.db	-21,0x00
   08A8 0A                  662 	.db	10
   08A9 46 62 55 54 49 4A   663 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08B1 49 54               664 	.db	0x49, 0x54
   08B3 F4 00               665 	.db	-12,0x00
   08B5 0A                  666 	.db	10
   08B6 55 4A 57 58 54 53   667 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08BE 4A 52               668 	.db	0x4A, 0x52
   08C0 FB 00               669 	.db	-5,0x00
   08C2 01                  670 	.db	1
   08C3 2E                  671 	.db	0x2E
   08C4 EF 00               672 	.db	-17,0x00
   08C6 0C                  673 	.db	12
   08C7 2D 00 00 00 00 47   674 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08CF 57 54 48 46         675 	.db	0x57, 0x54, 0x48, 0x46
   08D3 F8 00               676 	.db	-8,0x00
   08D5 18                  677 	.db	24
   08D6 2D 00 0B 0B 00 00   678 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08DE 4A 57 58 54 53 46   679 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   08E6 52 00 00 00 2D 00   680 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   08EE F0 00               681 	.db	-16,0x00
   08F0 0B                  682 	.db	11
   08F1 2D 00 0D 0D 00 32   683 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   08F9 5A 51 46            684 	.db	0x5A, 0x51, 0x46
   08FC F7 00               685 	.db	-9,0x00
   08FE 0E                  686 	.db	14
   08FF 2D 00 0E 0E 00 33   687 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   0907 52 55 5A 57 57 46   688 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   090D FA 00               689 	.db	-6,0x00
   090F 0D                  690 	.db	13
   0910 2D 00 29 29 00 00   691 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   0918 51 54 48 54 58      692 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   091D E0 00               693 	.db	-32,0x00
   091F 00                  694 	.db	0
                            695 ;	game.c 26
                            696 ;	game.c 1064
                            697 ;	genArrayInit
                            698 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0920 21 68 11            699 	ld	hl,#_sprites_park
   0923 CD 00 00            700 	call	__initrleblock
   0926 EC 00               701 	.db	-20,0x00
   0928 09                  702 	.db	9
   0929 10 00 00 00 02 00   703 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   0931 20                  704 	.db	0x20
   0932 F7 00               705 	.db	-9,0x00
   0934 01                  706 	.db	1
   0935 10                  707 	.db	0x10
   0936 F7 00               708 	.db	-9,0x00
   0938 21                  709 	.db	33
   0939 94 08 00 00 42 00   710 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   0941 00 80 25 00 50 00   711 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   0949 00 00 90 00 00 00   712 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   0951 80 00 00 10 80 00   713 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   0959 5A                  714 	.db	0x5A
   095A FB 00               715 	.db	-5,0x00
   095C 05                  716 	.db	5
   095D 02 20 00 00 08      717 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0962 F9 00               718 	.db	-7,0x00
   0964 0B                  719 	.db	11
   0965 01 00 00 08 01 00   720 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   096D 00 00 09            721 	.db	0x00, 0x00, 0x09
   0970 F9 00               722 	.db	-7,0x00
   0972 7F                  723 	.db	127
   0973 10 08 00 00 40 04   724 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   097B 00 00 5A 00 7F 00   725 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   0983 80 00 80 00 80 00   726 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   098B 80 00 80 00 7E 00   727 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   0993 81 00 81 00 81 00   728 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   099B 81 00 7E 00 00 00   729 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09A3 50 00 20 00 00 00   730 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09AB 0A 00 04 00 FF 00   731 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09B3 AA 00 FF 00 FF 00   732 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09BB 55 00 FF 00 FE FF   733 	.db	0x55, 0x00, 0xFF, 0x00, 0xFE, 0xFF, 0xEF, 0xFF
        EF FF
   09C3 BB FF FF FF EF FF   734 	.db	0xBB, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFB, 0xFF
        FB FF
   09CB BF FF FF FF FF 00   735 	.db	0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF9, 0x00
        F9 00
   09D3 2F 00 FF 00 D8 00   736 	.db	0x2F, 0x00, 0xFF, 0x00, 0xD8, 0x00, 0xFF, 0x00
        FF 00
   09DB A5 00 FF 00 AD 00   737 	.db	0xA5, 0x00, 0xFF, 0x00, 0xAD, 0x00, 0x5C, 0x00
        5C 00
   09E3 DB 00 29 00 F6 00   738 	.db	0xDB, 0x00, 0x29, 0x00, 0xF6, 0x00, 0x49, 0x00
        49 00
   09EB BA 00 D6 00 00 00   739 	.db	0xBA, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x42
        42
   09F2 0A                  740 	.db	10
   09F3 00 24 00 18 00 18   741 	.db	0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00, 0x24
        00 24
   09FB 00 42               742 	.db	0x00, 0x42
   09FD FB 00               743 	.db	-5,0x00
   09FF 0B                  744 	.db	11
   0A00 42 00 24 00 18 00   745 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A08 24 00 42            746 	.db	0x24, 0x00, 0x42
   0A0B FB 00               747 	.db	-5,0x00
   0A0D 0B                  748 	.db	11
   0A0E 42 00 24 00 18 00   749 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A16 24 00 42            750 	.db	0x24, 0x00, 0x42
   0A19 FB 00               751 	.db	-5,0x00
   0A1B 0B                  752 	.db	11
   0A1C 42 00 24 00 18 00   753 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A24 24 00 42            754 	.db	0x24, 0x00, 0x42
   0A27 EB 00               755 	.db	-21,0x00
   0A29 4B                  756 	.db	75
   0A2A 42 00 24 00 18 00   757 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A32 24 00 42 00 00 00   758 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A3A 6E 10 FF 00 BF 40   759 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A42 76 08 00 3C 00 3C   760 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A4A 80 7F 80 7F 80 7F   761 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A52 80 7F 80 7F 00 FF   762 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A5A 7E 00 DF 20 FF 00   763 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A62 7E 00 18 24 00 3C   764 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A6A 42 00 24 00 18 00   765 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A72 24 00 42            766 	.db	0x24, 0x00, 0x42
   0A75 FB 00               767 	.db	-5,0x00
   0A77 0B                  768 	.db	11
   0A78 42 00 24 00 18 00   769 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A80 24 00 42            770 	.db	0x24, 0x00, 0x42
   0A83 FB 00               771 	.db	-5,0x00
   0A85 0B                  772 	.db	11
   0A86 42 00 24 00 18 00   773 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A8E 24 00 42            774 	.db	0x24, 0x00, 0x42
   0A91 FB 00               775 	.db	-5,0x00
   0A93 0B                  776 	.db	11
   0A94 42 00 24 00 18 00   777 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A9C 24 00 42            778 	.db	0x24, 0x00, 0x42
   0A9F FB 00               779 	.db	-5,0x00
   0AA1 0B                  780 	.db	11
   0AA2 42 00 24 00 18 00   781 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AAA 24 00 42            782 	.db	0x24, 0x00, 0x42
   0AAD FB 00               783 	.db	-5,0x00
   0AAF 0B                  784 	.db	11
   0AB0 42 00 24 00 18 00   785 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AB8 24 00 42            786 	.db	0x24, 0x00, 0x42
   0ABB FB 00               787 	.db	-5,0x00
   0ABD 0B                  788 	.db	11
   0ABE 42 00 24 00 18 00   789 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AC6 24 00 42            790 	.db	0x24, 0x00, 0x42
   0AC9 FB 00               791 	.db	-5,0x00
   0ACB 0B                  792 	.db	11
   0ACC 42 00 24 00 18 00   793 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD4 24 00 42            794 	.db	0x24, 0x00, 0x42
   0AD7 FB 00               795 	.db	-5,0x00
   0AD9 0B                  796 	.db	11
   0ADA 42 00 24 00 18 00   797 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AE2 24 00 42            798 	.db	0x24, 0x00, 0x42
   0AE5 EB 00               799 	.db	-21,0x00
   0AE7 0B                  800 	.db	11
   0AE8 42 00 24 00 18 00   801 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AF0 24 00 42            802 	.db	0x24, 0x00, 0x42
   0AF3 FB 00               803 	.db	-5,0x00
   0AF5 0B                  804 	.db	11
   0AF6 42 00 24 00 18 00   805 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AFE 24 00 42            806 	.db	0x24, 0x00, 0x42
   0B01 FB 00               807 	.db	-5,0x00
   0B03 0B                  808 	.db	11
   0B04 42 00 24 00 18 00   809 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B0C 24 00 42            810 	.db	0x24, 0x00, 0x42
   0B0F FB 00               811 	.db	-5,0x00
   0B11 0B                  812 	.db	11
   0B12 42 00 24 00 18 00   813 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B1A 24 00 42            814 	.db	0x24, 0x00, 0x42
   0B1D FB 00               815 	.db	-5,0x00
   0B1F 0B                  816 	.db	11
   0B20 42 00 24 00 18 00   817 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B28 24 00 42            818 	.db	0x24, 0x00, 0x42
   0B2B FB 00               819 	.db	-5,0x00
   0B2D 0B                  820 	.db	11
   0B2E 42 00 24 00 18 00   821 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B36 24 00 42            822 	.db	0x24, 0x00, 0x42
   0B39 FB 00               823 	.db	-5,0x00
   0B3B 7F                  824 	.db	127
   0B3C 42 00 24 00 18 00   825 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B44 24 00 42 00 00 00   826 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B4C C7 C7 BB BB BB BB   827 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B54 D7 D7 DB DB 42 C3   828 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B5C FF 00 C7 00 C7 00   829 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B64 EF 00 E7 00 FF 00   830 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B6C 76 00 FF 00 BF 00   831 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B74 7E 00 00 3C 00 3C   832 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B7C 42 7E 81 FF 81 FF   833 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B84 81 FF 81 FF 81 FF   834 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B8C F3 8D C1 BF C1 BF   835 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0B94 81 FF 81 FF 7E 7E   836 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0B9C 04 02 01 09 09 F9   837 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0BA4 06 06 00 00 00 00   838 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BAC AA 00 55 00 AA 00   839 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BB4 AA 00 55 00 AA 00   840 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BBB 6C                  841 	.db	108
   0BBC AA AA 55 55 AA AA   842 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BC4 AA AA 55 55 AA AA   843 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x00
        55 00
   0BCC 00 42 00 24 00 18   844 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0BD4 00 24 00 42 00 00   845 	.db	0x00, 0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x09
        00 09
   0BDC 00 00 09 00 09 0F   846 	.db	0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00, 0xCA
        00 CA
   0BE4 05 FF 00 3F 00 00   847 	.db	0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45, 0x00
        45 00
   0BEC 13 00 1E 0A 9E 00   848 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   0BF4 FF 00 FF 00 7E 00   849 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x94
        4A 94
   0BFC 00 9C 00 9E 0A FF   850 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   0C04 00 7C 00 4A 00 49   851 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x89
        00 89
   0C0C 89 4F 4F 4F 4A 8F   852 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   0C14 9F 7F 7F 7F 7F 45   853 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x00
        45 00
   0C1C 00 42 00 24 00 18   854 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0C24 00 24 00 42         855 	.db	0x00, 0x24, 0x00, 0x42
   0C28 FB 00               856 	.db	-5,0x00
   0C2A 0B                  857 	.db	11
   0C2B 42 00 24 00 18 00   858 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C33 24 00 42            859 	.db	0x24, 0x00, 0x42
   0C36 FB 00               860 	.db	-5,0x00
   0C38 0B                  861 	.db	11
   0C39 42 00 24 00 18 00   862 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C41 24 00 42            863 	.db	0x24, 0x00, 0x42
   0C44 FB 00               864 	.db	-5,0x00
   0C46 0B                  865 	.db	11
   0C47 42 00 24 00 18 00   866 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C4F 24 00 42            867 	.db	0x24, 0x00, 0x42
   0C52 FB 00               868 	.db	-5,0x00
   0C54 0B                  869 	.db	11
   0C55 42 00 24 00 18 00   870 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C5D 24 00 42            871 	.db	0x24, 0x00, 0x42
   0C60 FB 00               872 	.db	-5,0x00
   0C62 0B                  873 	.db	11
   0C63 42 00 24 00 18 00   874 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C6B 24 00 42            875 	.db	0x24, 0x00, 0x42
   0C6E FB 00               876 	.db	-5,0x00
   0C70 0B                  877 	.db	11
   0C71 42 00 24 00 18 00   878 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C79 24 00 42            879 	.db	0x24, 0x00, 0x42
   0C7C FB 00               880 	.db	-5,0x00
   0C7E 0B                  881 	.db	11
   0C7F 42 00 24 00 18 00   882 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C87 24 00 42            883 	.db	0x24, 0x00, 0x42
   0C8A FB 00               884 	.db	-5,0x00
   0C8C 0B                  885 	.db	11
   0C8D 42 00 24 00 18 00   886 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C95 24 00 42            887 	.db	0x24, 0x00, 0x42
   0C98 FB 00               888 	.db	-5,0x00
   0C9A 0B                  889 	.db	11
   0C9B 42 00 24 00 18 00   890 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA3 24 00 42            891 	.db	0x24, 0x00, 0x42
   0CA6 EB 00               892 	.db	-21,0x00
   0CA8 0B                  893 	.db	11
   0CA9 42 00 24 00 18 00   894 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CB1 24 00 42            895 	.db	0x24, 0x00, 0x42
   0CB4 FB 00               896 	.db	-5,0x00
   0CB6 0B                  897 	.db	11
   0CB7 42 00 24 00 18 00   898 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CBF 24 00 42            899 	.db	0x24, 0x00, 0x42
   0CC2 FB 00               900 	.db	-5,0x00
   0CC4 0B                  901 	.db	11
   0CC5 42 00 24 00 18 00   902 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CCD 24 00 42            903 	.db	0x24, 0x00, 0x42
   0CD0 FB 00               904 	.db	-5,0x00
   0CD2 0B                  905 	.db	11
   0CD3 42 00 24 00 18 00   906 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CDB 24 00 42            907 	.db	0x24, 0x00, 0x42
   0CDE FB 00               908 	.db	-5,0x00
   0CE0 0B                  909 	.db	11
   0CE1 42 00 24 00 18 00   910 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CE9 24 00 42            911 	.db	0x24, 0x00, 0x42
   0CEC FA 00               912 	.db	-6,0x00
   0CEE 7F                  913 	.db	127
   0CEF 38 00 44 00 44 00   914 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CF7 44 00 44 00 44 00   915 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0CFF 78 00 44 00 44 00   916 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0D07 44 00 44 00 78 00   917 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D0F 1C 00 20 00 40 00   918 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0D17 40 00 20 00 1C 00   919 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D1F 78 00 44 00 44 00   920 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D27 44 00 44 00 78 00   921 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D2F 7C 00 40 00 40 00   922 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D37 40 00 40 00 7C 00   923 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D3F 7C 00 40 00 40 00   924 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D47 40 00 40 00 40 00   925 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D4F 18 00 20 00 40 00   926 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D57 42 00 24 00 18 00   927 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D5F 44 00 44 00 44 00   928 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D67 44 00 44 00 44 00   929 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D6E 7F                  930 	.db	127
   0D6F 00 10 00 00 00 10   931 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D77 00 10 00 10 00 10   932 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D7F 00 3E 00 08 00 08   933 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D87 00 08 00 48 00 30   934 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D8F 00 44 00 48 00 50   935 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D97 00 50 00 48 00 44   936 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0D9F 00 40 00 40 00 40   937 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0DA7 00 40 00 40 00 78   938 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0DAF 00 44 00 6C 00 54   939 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0DB7 00 44 00 44 00 44   940 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DBF 00 44 00 64 00 64   941 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DC7 00 54 00 4C 00 4C   942 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DCF 00 38 00 44 00 44   943 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DD7 00 44 00 44 00 38   944 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DDF 00 78 00 44 00 44   945 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DE7 00 40 00 40 00 40   946 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DEE 7F                  947 	.db	127
   0DEF 00 00 38 00 44 00   948 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DF7 44 00 54 00 38 00   949 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0DFF 00 00 78 00 44 00   950 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E07 78 00 50 00 48 00   951 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0E0F 00 00 38 00 40 00   952 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0E17 38 00 04 00 04 00   953 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E1F 00 00 7C 00 10 00   954 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E27 10 00 10 00 10 00   955 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E2F 00 00 44 00 44 00   956 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E37 44 00 44 00 44 00   957 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E3F 00 00 41 00 41 00   958 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E47 49 00 2A 00 2A 00   959 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E4F 00 00 44 00 44 00   960 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E57 10 00 28 00 44 00   961 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E5F 00 00 44 00 28 00   962 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E67 10 00 10 00 10 00   963 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E6E 7F                  964 	.db	127
   0E6F 00 00 00 7C 00 04   965 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E77 00 10 00 20 00 40   966 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E7F 00 08 00 18 00 28   967 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E87 00 08 00 08 00 08   968 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E8F 00 00 00 38 00 44   969 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E97 00 08 00 10 00 20   970 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0E9F 00 00 00 70 00 08   971 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0EA7 00 30 00 08 00 08   972 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0EAF 00 00 00 10 00 08   973 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0EB7 00 7E 00 04 00 08   974 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EBF 00 00 00 44 00 44   975 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0EC7 00 28 00 10 00 10   976 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0ECF 3C 3C 42 7E 81 FF   977 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0ED7 A1 FF 81 FF 81 FF   978 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EDF 3C 3C 42 7E 81 FF   979 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EE7 A1 FF 81 FF 81 FF   980 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0EEE 7F                  981 	.db	127
   0EEF FF 3C 3C 42 7E 81   982 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EF7 FF A1 FF 81 FF 81   983 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0EFF FF 3C 3C 42 7E 81   984 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F07 FF A1 FF 81 FF 81   985 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F0F FF 3C 3C 42 7E 81   986 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F17 FF A1 FF 81 FF 81   987 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F1F FF 3C 3C 42 7E 81   988 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F27 FF A1 FF 81 FF 81   989 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F2F FF 3C 3C 42 7E 81   990 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F37 FF A1 FF 81 FF 81   991 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F3F FF 3C 3C 42 7E 81   992 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F47 FF A1 FF 81 FF 81   993 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F4F FF 3C 3C 42 7E 81   994 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F57 FF A1 FF 81 FF 81   995 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F5F FF 3C 3C 42 7E 81   996 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F67 FF A1 FF 81 FF 81   997 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F6E 7F                  998 	.db	127
   0F6F 81 FF 3C 3C 42 7E   999 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F77 81 FF A1 FF 81 FF  1000 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F7F 81 FF 3C 3C 42 7E  1001 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F87 81 FF A1 FF 81 FF  1002 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F8F 81 FF 3C 3C 42 7E  1003 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F97 81 FF A1 FF 81 FF  1004 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F9F 81 FF 3C 3C 42 7E  1005 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FA7 81 FF A1 FF 81 FF  1006 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FAF 81 FF 3C 3C 42 7E  1007 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FB7 81 FF A1 FF 81 FF  1008 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FBF 81 FF 3C 3C 42 7E  1009 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FC7 81 FF A1 FF 81 FF  1010 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FCF 81 FF 3C 3C 42 7E  1011 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FD7 81 FF A1 FF 81 FF  1012 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FDF 81 FF 3C 3C 42 7E  1013 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FE7 81 FF A1 FF 81 FF  1014 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FEE 33                 1015 	.db	51
   0FEF FF 81 FF 3C 3C 42  1016 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FF7 FF 81 FF A1 FF 81  1017 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0FFF FF 81 FF 3C 3C 42  1018 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1007 FF 81 FF A1 FF 81  1019 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   100F FF 81 FF 3C 3C 42  1020 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1017 FF 81 FF A1 FF 81  1021 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   101F FF 81 FF           1022 	.db	0xFF, 0x81, 0xFF
   1022 00                 1023 	.db	0
                           1024 ;	game.c 44
                           1025 ;	game.c 1064
                           1026 ;	genArrayInit
                           1027 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1023 21 F8 18           1028 	ld	hl,#_spritePalette
   1026 CD 00 00           1029 	call	__initrleblock
   1029 08                 1030 	.db	8
   102A DC 6B D2 3A 87 29  1031 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   1032 00                 1032 	.db	0
                           1033 ;--------------------------------------------------------
                           1034 ; Home
                           1035 ;--------------------------------------------------------
                           1036 	.area _HOME
                           1037 	.area _CODE
                           1038 ;--------------------------------------------------------
                           1039 ; code
                           1040 ;--------------------------------------------------------
                           1041 	.area _CODE
                           1042 ;	game.c 70
                           1043 ;	genLabel
                           1044 ;	genFunction
                           1045 ;	---------------------------------
                           1046 ; Function performantDelay
                           1047 ; ---------------------------------
   0000                    1048 ___performantDelay_start:
   0000                    1049 _performantDelay:
                           1050 	
                           1051 ;	game.c 72
                           1052 ;	genAssign
   0000 0E 00              1053 	ld	c,#0x00
                           1054 ;	genLabel
   0002                    1055 00101$:
                           1056 ;	genCmpEq
                           1057 ;	AOP_STK for 
                           1058 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1059 	lda	hl,2(sp)
   0004 7E                 1060 	ld	a,(hl)
   0005 B9                 1061 	cp	c
   0006 20 03              1062 	jr	nz,00109$
   0008 C3 15 00           1063 	jp	00105$
   000B                    1064 00109$:
                           1065 ;	game.c 73
                           1066 ;	genCall
                           1067 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1068 	push	bc
   000C CD 00 00           1069 	call	_wait_vbl_done
   000F E1                 1070 	pop	hl
   0010 4D                 1071 	ld	c,l
                           1072 ;	game.c 72
                           1073 ;	genPlus
                           1074 ;	genPlusIncr
                           1075 ; Removed redundent load
   0011 0C                 1076 	inc	c
                           1077 ;	genGoto
   0012 C3 02 00           1078 	jp	00101$
                           1079 ;	genLabel
   0015                    1080 00105$:
                           1081 ;	genEndFunction
                           1082 	
   0015 C9                 1083 	ret
   0016                    1084 ___performantDelay_end:
                           1085 ;	game.c 105
                           1086 ;	genLabel
                           1087 ;	genFunction
                           1088 ;	---------------------------------
                           1089 ; Function timers
                           1090 ; ---------------------------------
   0016                    1091 ___timers_start:
   0016                    1092 _timers:
                           1093 	
                           1094 ;	game.c 107
                           1095 ;	genCmpEq
                           1096 ;	AOP_HL for _input_timer
                           1097 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1098 	ld	hl,#_input_timer
   0019 7E                 1099 	ld	a,(hl)
   001A B7                 1100 	or	a,a
   001B CA 22 00           1101 	jp	z,00102$
   001E                    1102 00106$:
                           1103 ;	game.c 108
                           1104 ;	genMinus
                           1105 ;	AOP_HL for _input_timer
   001E 21 03 19           1106 	ld	hl,#_input_timer
   0021 35                 1107 	dec	(hl)
                           1108 ;	genLabel
   0022                    1109 00102$:
                           1110 ;	game.c 110
                           1111 ;	genPlus
                           1112 ;	AOP_HL for _timer
                           1113 ;	genPlusIncr
   0022 21 01 19           1114 	ld	hl,#_timer
   0025 34                 1115 	inc	(hl)
                           1116 ;	genLabel
   0026                    1117 00103$:
                           1118 ;	genEndFunction
                           1119 	
   0026 C9                 1120 	ret
   0027                    1121 ___timers_end:
                           1122 ;	game.c 114
                           1123 ;	genLabel
                           1124 ;	genFunction
                           1125 ;	---------------------------------
                           1126 ; Function main
                           1127 ; ---------------------------------
   0027                    1128 ___main_start:
   0027                    1129 _main:
                           1130 	
                           1131 ;	game.c 116
                           1132 ;	genCall
                           1133 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1134 	call	_init
                           1135 ;	game.c 117
                           1136 ;	genCall
                           1137 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1138 	call	_map_init
                           1139 ;	game.c 119
                           1140 ;	genLabel
   002D                    1141 00101$:
                           1142 ;	genIfx
                           1143 ;	AOP_HL for _running
   002D AF                 1144 	xor	a,a
   002E 21 00 19           1145 	ld	hl,#_running
   0031 B6                 1146 	or	a,(hl)
   0032 CA 47 00           1147 	jp	z,00103$
                           1148 ;	game.c 121
                           1149 ;	genCall
                           1150 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1151 	call	_timers
                           1152 ;	game.c 122
                           1153 ;	genCall
                           1154 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1155 	call	_map_loop
                           1156 ;	game.c 123
                           1157 ;	genIpush
                           1158 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1159 	ld	a,#0x02
   003D F5                 1160 	push	af
   003E 33                 1161 	inc	sp
                           1162 ;	genCall
   003F CD 00 00           1163 	call	_performantDelay
   0042 E8 01              1164 	lda	sp,1(sp)
                           1165 ;	genGoto
   0044 C3 2D 00           1166 	jp	00101$
                           1167 ;	genLabel
   0047                    1168 00103$:
                           1169 ;	game.c 127
                           1170 ;	genIpush
                           1171 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1172 	ld	hl,#__str_0
   004A E5                 1173 	push	hl
                           1174 ;	genCall
   004B CD 00 00           1175 	call	_printf
   004E E8 02              1176 	lda	sp,2(sp)
                           1177 ;	game.c 128
                           1178 ;	genLabel
   0050                    1179 00105$:
                           1180 ;	genGoto
   0050 C3 50 00           1181 	jp	00105$
                           1182 ;	genLabel
   0053                    1183 00107$:
                           1184 ;	genEndFunction
                           1185 	
   0053 C9                 1186 	ret
   0054                    1187 ___main_end:
   0054                    1188 __str_0:
   0054 54 68 65 20 65 6E  1189 	.ascii "The end"
        64
   005B 0A                 1190 	.db 0x0A
   005C 00                 1191 	.db 0x00
                           1192 ;	game.c 133
                           1193 ;	genLabel
                           1194 ;	genFunction
                           1195 ;	---------------------------------
                           1196 ; Function init
                           1197 ; ---------------------------------
   005D                    1198 ___init_start:
   005D                    1199 _init:
   005D E8 FD              1200 	lda	sp,-3(sp)
                           1201 ;	game.c 134
                           1202 ;	genAssign
                           1203 ;	AOP_HL for _current_map
   005F 21 04 19           1204 	ld	hl,#_current_map
   0062 36 C8              1205 	ld	(hl),#0xC8
                           1206 ;	game.c 135
                           1207 ;	genAssign
                           1208 ;	AOP_HL for _characters_available
   0064 21 02 19           1209 	ld	hl,#_characters_available
   0067 36 02              1210 	ld	(hl),#0x02
                           1211 ;	game.c 137
                           1212 ;	genCall
                           1213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1214 	call	_copy_map
                           1215 ;	game.c 138
                           1216 ;	genIpush
                           1217 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1218 	ld	hl,#_sprites_park
   006F E5                 1219 	push	hl
                           1220 ;	genIpush
   0070 21 00 78           1221 	ld	hl,#0x7800
   0073 E5                 1222 	push	hl
                           1223 ;	genCall
   0074 CD 00 00           1224 	call	_set_bkg_data
   0077 E8 04              1225 	lda	sp,4(sp)
                           1226 ;	game.c 139
                           1227 ;	genIpush
                           1228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1229 	ld	hl,#_map
   007C E5                 1230 	push	hl
                           1231 ;	genIpush
   007D 21 14 12           1232 	ld	hl,#0x1214
   0080 E5                 1233 	push	hl
                           1234 ;	genIpush
   0081 21 00 00           1235 	ld	hl,#0x0000
   0084 E5                 1236 	push	hl
                           1237 ;	genCall
   0085 CD 00 00           1238 	call	_set_bkg_tiles
   0088 E8 06              1239 	lda	sp,6(sp)
                           1240 ;	game.c 141
                           1241 ;	genIpush
                           1242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1243 	ld	hl,#_Characters
   008D E5                 1244 	push	hl
                           1245 ;	genIpush
   008E 21 00 1E           1246 	ld	hl,#0x1E00
   0091 E5                 1247 	push	hl
                           1248 ;	genCall
   0092 CD 00 00           1249 	call	_set_sprite_data
   0095 E8 04              1250 	lda	sp,4(sp)
                           1251 ;	game.c 142
                           1252 ;	genIpush
                           1253 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1254 	ld	hl,#_spritePalette
   009A E5                 1255 	push	hl
                           1256 ;	genIpush
   009B 21 00 04           1257 	ld	hl,#0x0400
   009E E5                 1258 	push	hl
                           1259 ;	genCall
   009F CD 00 00           1260 	call	_set_sprite_palette
   00A2 E8 04              1261 	lda	sp,4(sp)
                           1262 ;	game.c 146
                           1263 ;	genIpush
                           1264 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1265 	ld	hl,#_spritePalette
   00A7 E5                 1266 	push	hl
                           1267 ;	genIpush
   00A8 21 00 03           1268 	ld	hl,#0x0300
   00AB E5                 1269 	push	hl
                           1270 ;	genCall
   00AC CD 00 00           1271 	call	_set_bkg_palette
   00AF E8 04              1272 	lda	sp,4(sp)
                           1273 ;	game.c 147
                           1274 ;	genIpush
                           1275 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1276 	ld	hl,#0x0000
   00B4 E5                 1277 	push	hl
                           1278 ;	genCall
   00B5 CD 00 00           1279 	call	_set_sprite_prop
   00B8 E8 02              1280 	lda	sp,2(sp)
                           1281 ;	game.c 152
                           1282 ;	genAssign
   00BA 01 47 FF           1283 	ld	bc,#0xFF47
                           1284 ;	genAssign (pointer)
   00BD 3E E4              1285 	ld	a,#0xE4
   00BF 02                 1286 	ld	(bc),a
                           1287 ;	game.c 154
                           1288 ;	genAssign
   00C0 01 40 FF           1289 	ld	bc,#0xFF40
                           1290 ;	genAssign
                           1291 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1292 	lda	hl,1(sp)
   00C5 36 40              1293 	ld	(hl),#0x40
   00C7 23                 1294 	inc	hl
   00C8 36 FF              1295 	ld	(hl),#0xFF
                           1296 ;	genPointerGet
                           1297 ;	AOP_STK for _init_sloc0_1_0
                           1298 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1299 	dec	hl
   00CB 5E                 1300 	ld	e,(hl)
   00CC 23                 1301 	inc	hl
   00CD 56                 1302 	ld	d,(hl)
   00CE 1A                 1303 	ld	a,(de)
   00CF 2B                 1304 	dec	hl
   00D0 2B                 1305 	dec	hl
                           1306 ;	genOr
                           1307 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1308 	ld      (hl),a
   00D2 7F                 1309 	ld      a,a
   00D3 F6 80              1310 	or	a,#0x80
                           1311 ;	genAssign (pointer)
   00D5 02                 1312 	ld	(bc),a
                           1313 ;	game.c 156
                           1314 ;	genAssign
   00D6 01 40 FF           1315 	ld	bc,#0xFF40
                           1316 ;	genAssign
                           1317 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1318 	inc	hl
   00DA 36 40              1319 	ld	(hl),#0x40
   00DC 23                 1320 	inc	hl
   00DD 36 FF              1321 	ld	(hl),#0xFF
                           1322 ;	genPointerGet
                           1323 ;	AOP_STK for _init_sloc0_1_0
                           1324 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1325 	dec	hl
   00E0 5E                 1326 	ld	e,(hl)
   00E1 23                 1327 	inc	hl
   00E2 56                 1328 	ld	d,(hl)
   00E3 1A                 1329 	ld	a,(de)
   00E4 2B                 1330 	dec	hl
   00E5 2B                 1331 	dec	hl
                           1332 ;	genOr
                           1333 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1334 	ld      (hl),a
   00E7 7F                 1335 	ld      a,a
   00E8 F6 01              1336 	or	a,#0x01
                           1337 ;	genAssign (pointer)
   00EA 02                 1338 	ld	(bc),a
                           1339 ;	game.c 158
                           1340 ;	genAssign
   00EB 01 40 FF           1341 	ld	bc,#0xFF40
                           1342 ;	genAssign
                           1343 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1344 	inc	hl
   00EF 36 40              1345 	ld	(hl),#0x40
   00F1 23                 1346 	inc	hl
   00F2 36 FF              1347 	ld	(hl),#0xFF
                           1348 ;	genPointerGet
                           1349 ;	AOP_STK for _init_sloc0_1_0
                           1350 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1351 	dec	hl
   00F5 5E                 1352 	ld	e,(hl)
   00F6 23                 1353 	inc	hl
   00F7 56                 1354 	ld	d,(hl)
   00F8 1A                 1355 	ld	a,(de)
   00F9 2B                 1356 	dec	hl
   00FA 2B                 1357 	dec	hl
                           1358 ;	genOr
                           1359 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1360 	ld      (hl),a
   00FC 7F                 1361 	ld      a,a
   00FD F6 02              1362 	or	a,#0x02
                           1363 ;	genAssign (pointer)
   00FF 02                 1364 	ld	(bc),a
                           1365 ;	game.c 160
                           1366 ;	genAssign
                           1367 ;	AOP_HL for _input_timer
   0100 21 03 19           1368 	ld	hl,#_input_timer
   0103 36 00              1369 	ld	(hl),#0x00
                           1370 ;	game.c 161
                           1371 ;	genAssign
                           1372 ;	AOP_HL for _running
   0105 21 00 19           1373 	ld	hl,#_running
   0108 36 01              1374 	ld	(hl),#0x01
                           1375 ;	game.c 162
                           1376 ;	genAssign
                           1377 ;	AOP_HL for _timer
   010A 21 01 19           1378 	ld	hl,#_timer
   010D 36 01              1379 	ld	(hl),#0x01
                           1380 ;	game.c 163
                           1381 ;	genAddrOf
                           1382 ;	AOP_HL for _player
   010F 11 6D 1A           1383 	ld	de,#_bunny
   0112 21 AE 1A           1384 	ld	hl,#_player
   0115 73                 1385 	ld	(hl),e
   0116 23                 1386 	inc	hl
   0117 72                 1387 	ld	(hl),d
                           1388 ;	genLabel
   0118                    1389 00101$:
                           1390 ;	genEndFunction
   0118 E8 03              1391 	lda	sp,3(sp)
   011A C9                 1392 	ret
   011B                    1393 ___init_end:
                           1394 ;	game.c 167
                           1395 ;	genLabel
                           1396 ;	genFunction
                           1397 ;	---------------------------------
                           1398 ; Function map_water
                           1399 ; ---------------------------------
   011B                    1400 ___map_water_start:
   011B                    1401 _map_water:
   011B E8 DC              1402 	lda	sp,-36(sp)
                           1403 ;	game.c 168
                           1404 ;	genAddrOf
   011D F8 14              1405 	lda	hl,20(sp)
   011F 4D                 1406 	ld	c,l
   0120 44                 1407 	ld	b,h
                           1408 ;	genAssign
                           1409 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1410 	lda	hl,2(sp)
   0123 71                 1411 	ld	(hl),c
   0124 23                 1412 	inc	hl
   0125 70                 1413 	ld	(hl),b
                           1414 ;	genArrayInit
                           1415 ;	AOP_STK for _map_water_sloc0_1_0
                           1416 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1417 	push	bc
   0127 2B                 1418 	dec	hl
   0128 2A                 1419 	ld	a,(hl+)
   0129 66                 1420 	ld	h,(hl)
   012A 6F                 1421 	ld	l,a
   012B CD 00 00           1422 	call	__initrleblock
   012E 10                 1423 	.db	16
   012F FF 00 DD 00 AA 00  1424 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1425 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1426 	.db	0
   0140 C1                 1427 	pop	bc
                           1428 ;	game.c 174
                           1429 ;	genAddrOf
                           1430 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1431 	lda	hl,4(sp)
   0143 7D                 1432 	ld	a,l
   0144 54                 1433 	ld	d,h
   0145 F8 02              1434 	lda	hl,2(sp)
   0147 22                 1435 	ld	(hl+),a
   0148 72                 1436 	ld	(hl),d
                           1437 ;	genAssign
                           1438 ;	AOP_STK for _map_water_sloc0_1_0
                           1439 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1440 	dec	hl
   014A 2A                 1441 	ld	a,(hl+)
   014B 5E                 1442 	ld	e,(hl)
   014C F8 00              1443 	lda	hl,0(sp)
   014E 22                 1444 	ld	(hl+),a
   014F 73                 1445 	ld	(hl),e
                           1446 ;	genArrayInit
                           1447 ;	AOP_STK for _map_water_sloc1_1_0
                           1448 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1449 	push	bc
   0151 2B                 1450 	dec	hl
   0152 2A                 1451 	ld	a,(hl+)
   0153 66                 1452 	ld	h,(hl)
   0154 6F                 1453 	ld	l,a
   0155 CD 00 00           1454 	call	__initrleblock
   0158 10                 1455 	.db	16
   0159 FF 00 BB 00 55 00  1456 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1457 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1458 	.db	0
   016A C1                 1459 	pop	bc
                           1460 ;	game.c 180
                           1461 ;	genIpush
                           1462 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1463 	push	bc
   016C 3E 20              1464 	ld	a,#0x20
   016E F5                 1465 	push	af
   016F 33                 1466 	inc	sp
                           1467 ;	genIpush
                           1468 ;	AOP_HL for _timer
   0170 21 01 19           1469 	ld	hl,#_timer
   0173 7E                 1470 	ld	a,(hl)
   0174 F5                 1471 	push	af
   0175 33                 1472 	inc	sp
                           1473 ;	genCall
   0176 CD 00 00           1474 	call	__moduchar_rrx_s
                           1475 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1476 	lda	hl,4(sp)
   017B 73                 1477 	ld	(hl),e
   017C E8 02              1478 	lda	sp,2(sp)
   017E C1                 1479 	pop	bc
                           1480 ;	genCmpEq
                           1481 ;	AOP_STK for _map_water_sloc1_1_0
                           1482 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1483 	lda	hl,0(sp)
   0181 7E                 1484 	ld	a,(hl)
   0182 B7                 1485 	or	a,a
   0183 C2 C7 01           1486 	jp	nz,00106$
   0186 18 03              1487 	jr	00111$
   0188                    1488 00110$:
   0188 C3 C7 01           1489 	jp	00106$
   018B                    1490 00111$:
                           1491 ;	game.c 181
                           1492 ;	genIpush
                           1493 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1494 	push	bc
   018C 3E 40              1495 	ld	a,#0x40
   018E F5                 1496 	push	af
   018F 33                 1497 	inc	sp
                           1498 ;	genIpush
                           1499 ;	AOP_HL for _timer
   0190 21 01 19           1500 	ld	hl,#_timer
   0193 7E                 1501 	ld	a,(hl)
   0194 F5                 1502 	push	af
   0195 33                 1503 	inc	sp
                           1504 ;	genCall
   0196 CD 00 00           1505 	call	__moduchar_rrx_s
                           1506 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1507 	lda	hl,4(sp)
   019B 73                 1508 	ld	(hl),e
   019C E8 02              1509 	lda	sp,2(sp)
   019E C1                 1510 	pop	bc
                           1511 ;	genCmpEq
                           1512 ;	AOP_STK for _map_water_sloc1_1_0
                           1513 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1514 	lda	hl,0(sp)
   01A1 7E                 1515 	ld	a,(hl)
   01A2 B7                 1516 	or	a,a
   01A3 C2 B8 01           1517 	jp	nz,00102$
   01A6 18 03              1518 	jr	00113$
   01A8                    1519 00112$:
   01A8 C3 B8 01           1520 	jp	00102$
   01AB                    1521 00113$:
                           1522 ;	game.c 182
                           1523 ;	genIpush
                           1524 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1525 	push	bc
                           1526 ;	genIpush
   01AC 21 0B 01           1527 	ld	hl,#0x010B
   01AF E5                 1528 	push	hl
                           1529 ;	genCall
   01B0 CD 00 00           1530 	call	_set_bkg_data
   01B3 E8 04              1531 	lda	sp,4(sp)
                           1532 ;	genGoto
   01B5 C3 C7 01           1533 	jp	00106$
                           1534 ;	genLabel
   01B8                    1535 00102$:
                           1536 ;	game.c 186
                           1537 ;	genIpush
                           1538 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1539 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1540 	lda	hl,2(sp)
   01BA 2A                 1541 	ld	a,(hl+)
   01BB 66                 1542 	ld	h,(hl)
   01BC 6F                 1543 	ld	l,a
   01BD E5                 1544 	push	hl
                           1545 ;	genIpush
   01BE 21 0B 01           1546 	ld	hl,#0x010B
   01C1 E5                 1547 	push	hl
                           1548 ;	genCall
   01C2 CD 00 00           1549 	call	_set_bkg_data
   01C5 E8 04              1550 	lda	sp,4(sp)
                           1551 ;	genLabel
   01C7                    1552 00106$:
                           1553 ;	genEndFunction
   01C7 E8 24              1554 	lda	sp,36(sp)
   01C9 C9                 1555 	ret
   01CA                    1556 ___map_water_end:
                           1557 ;	game.c 231
                           1558 ;	genLabel
                           1559 ;	genFunction
                           1560 ;	---------------------------------
                           1561 ; Function change_char
                           1562 ; ---------------------------------
   01CA                    1563 ___change_char_start:
   01CA                    1564 _change_char:
                           1565 	
                           1566 ;	game.c 233
                           1567 ;	genCmpEq
                           1568 ;	AOP_HL for _characters_available
                           1569 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1570 	ld	hl,#_characters_available
   01CD 7E                 1571 	ld	a,(hl)
   01CE FE 01              1572 	cp	a,#0x01
   01D0 C2 DE 01           1573 	jp	nz,00102$
   01D3 18 03              1574 	jr	00135$
   01D5                    1575 00134$:
   01D5 C3 DE 01           1576 	jp	00102$
   01D8                    1577 00135$:
                           1578 ;	game.c 234
                           1579 ;	genRet
   01D8 11 00 00           1580 	ld	de,#0x0000
   01DB C3 EE 02           1581 	jp	00121$
                           1582 ;	genLabel
   01DE                    1583 00102$:
                           1584 ;	game.c 237
                           1585 ;	genAssign
                           1586 ;	AOP_HL for _player
   01DE 21 AE 1A           1587 	ld	hl,#_player
   01E1 4E                 1588 	ld	c,(hl)
   01E2 23                 1589 	inc	hl
   01E3 46                 1590 	ld	b,(hl)
                           1591 ;	genPlus
                           1592 ;	genPlusIncr
   01E4 21 08 00           1593 	ld	hl,#0x0008
   01E7 09                 1594 	add	hl,bc
                           1595 ;	genAssign (pointer)
   01E8 36 00              1596 	ld	(hl),#0x00
                           1597 ;	game.c 239
                           1598 ;	genCmpEq
                           1599 ;	AOP_HL for _characters_available
                           1600 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1601 	ld	hl,#_characters_available
   01ED 7E                 1602 	ld	a,(hl)
   01EE FE 02              1603 	cp	a,#0x02
   01F0 C2 2B 02           1604 	jp	nz,00107$
   01F3 18 03              1605 	jr	00137$
   01F5                    1606 00136$:
   01F5 C3 2B 02           1607 	jp	00107$
   01F8                    1608 00137$:
                           1609 ;	game.c 240
                           1610 ;	genAssign
                           1611 ;	AOP_HL for _player
   01F8 21 AE 1A           1612 	ld	hl,#_player
   01FB 4E                 1613 	ld	c,(hl)
   01FC 23                 1614 	inc	hl
   01FD 46                 1615 	ld	b,(hl)
                           1616 ;	genPlus
                           1617 ;	genPlusIncr
                           1618 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1619 	ld	a,c
   01FF C6 0B              1620 	add	a,#0x0B
   0201 4F                 1621 	ld	c,a
   0202 78                 1622 	ld	a,b
   0203 CE 00              1623 	adc	a,#0x00
   0205 47                 1624 	ld	b,a
                           1625 ;	genPointerGet
   0206 0A                 1626 	ld	a,(bc)
                           1627 ;	genCmpEq
                           1628 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1629 	ld	c,a
   0208 FE 01              1630 	cp	a,#0x01
   020A CA 16 02           1631 	jp	z,00103$
   020D                    1632 00138$:
                           1633 ;	genCmpEq
                           1634 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1635 	ld	a,c
   020E FE 02              1636 	cp	a,#0x02
   0210 CA 22 02           1637 	jp	z,00104$
   0213                    1638 00139$:
                           1639 ;	genGoto
   0213 C3 2B 02           1640 	jp	00107$
                           1641 ;	game.c 242
                           1642 ;	genLabel
   0216                    1643 00103$:
                           1644 ;	genAddrOf
                           1645 ;	AOP_HL for _player
   0216 11 7A 1A           1646 	ld	de,#_dog1
   0219 21 AE 1A           1647 	ld	hl,#_player
   021C 73                 1648 	ld	(hl),e
   021D 23                 1649 	inc	hl
   021E 72                 1650 	ld	(hl),d
                           1651 ;	game.c 243
                           1652 ;	genGoto
   021F C3 2B 02           1653 	jp	00107$
                           1654 ;	game.c 245
                           1655 ;	genLabel
   0222                    1656 00104$:
                           1657 ;	genAddrOf
                           1658 ;	AOP_HL for _player
   0222 11 6D 1A           1659 	ld	de,#_bunny
   0225 21 AE 1A           1660 	ld	hl,#_player
   0228 73                 1661 	ld	(hl),e
   0229 23                 1662 	inc	hl
   022A 72                 1663 	ld	(hl),d
                           1664 ;	game.c 247
                           1665 ;	genLabel
   022B                    1666 00107$:
                           1667 ;	game.c 249
                           1668 ;	genCmpEq
                           1669 ;	AOP_HL for _characters_available
                           1670 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1671 	ld	hl,#_characters_available
   022E 7E                 1672 	ld	a,(hl)
   022F FE 03              1673 	cp	a,#0x03
   0231 C2 7E 02           1674 	jp	nz,00113$
   0234 18 03              1675 	jr	00141$
   0236                    1676 00140$:
   0236 C3 7E 02           1677 	jp	00113$
   0239                    1678 00141$:
                           1679 ;	game.c 250
                           1680 ;	genAssign
                           1681 ;	AOP_HL for _player
   0239 21 AE 1A           1682 	ld	hl,#_player
   023C 4E                 1683 	ld	c,(hl)
   023D 23                 1684 	inc	hl
   023E 46                 1685 	ld	b,(hl)
                           1686 ;	genPlus
                           1687 ;	genPlusIncr
                           1688 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1689 	ld	a,c
   0240 C6 0B              1690 	add	a,#0x0B
   0242 4F                 1691 	ld	c,a
   0243 78                 1692 	ld	a,b
   0244 CE 00              1693 	adc	a,#0x00
   0246 47                 1694 	ld	b,a
                           1695 ;	genPointerGet
   0247 0A                 1696 	ld	a,(bc)
                           1697 ;	genCmpEq
                           1698 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1699 	ld	c,a
   0249 FE 01              1700 	cp	a,#0x01
   024B CA 5D 02           1701 	jp	z,00108$
   024E                    1702 00142$:
                           1703 ;	genCmpEq
                           1704 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1705 	ld	a,c
   024F FE 02              1706 	cp	a,#0x02
   0251 CA 69 02           1707 	jp	z,00109$
   0254                    1708 00143$:
                           1709 ;	genCmpEq
                           1710 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1711 	ld	a,c
   0255 FE 03              1712 	cp	a,#0x03
   0257 CA 75 02           1713 	jp	z,00110$
   025A                    1714 00144$:
                           1715 ;	genGoto
   025A C3 7E 02           1716 	jp	00113$
                           1717 ;	game.c 252
                           1718 ;	genLabel
   025D                    1719 00108$:
                           1720 ;	genAddrOf
                           1721 ;	AOP_HL for _player
   025D 11 7A 1A           1722 	ld	de,#_dog1
   0260 21 AE 1A           1723 	ld	hl,#_player
   0263 73                 1724 	ld	(hl),e
   0264 23                 1725 	inc	hl
   0265 72                 1726 	ld	(hl),d
                           1727 ;	game.c 253
                           1728 ;	genGoto
   0266 C3 7E 02           1729 	jp	00113$
                           1730 ;	game.c 255
                           1731 ;	genLabel
   0269                    1732 00109$:
                           1733 ;	genAddrOf
                           1734 ;	AOP_HL for _player
   0269 11 87 1A           1735 	ld	de,#_dog2
   026C 21 AE 1A           1736 	ld	hl,#_player
   026F 73                 1737 	ld	(hl),e
   0270 23                 1738 	inc	hl
   0271 72                 1739 	ld	(hl),d
                           1740 ;	game.c 256
                           1741 ;	genGoto
   0272 C3 7E 02           1742 	jp	00113$
                           1743 ;	game.c 258
                           1744 ;	genLabel
   0275                    1745 00110$:
                           1746 ;	genAddrOf
                           1747 ;	AOP_HL for _player
   0275 11 6D 1A           1748 	ld	de,#_bunny
   0278 21 AE 1A           1749 	ld	hl,#_player
   027B 73                 1750 	ld	(hl),e
   027C 23                 1751 	inc	hl
   027D 72                 1752 	ld	(hl),d
                           1753 ;	game.c 260
                           1754 ;	genLabel
   027E                    1755 00113$:
                           1756 ;	game.c 262
                           1757 ;	genCmpEq
                           1758 ;	AOP_HL for _characters_available
                           1759 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1760 	ld	hl,#_characters_available
   0281 7E                 1761 	ld	a,(hl)
   0282 FE 04              1762 	cp	a,#0x04
   0284 C2 EB 02           1763 	jp	nz,00120$
   0287 18 03              1764 	jr	00146$
   0289                    1765 00145$:
   0289 C3 EB 02           1766 	jp	00120$
   028C                    1767 00146$:
                           1768 ;	game.c 263
                           1769 ;	genAssign
                           1770 ;	AOP_HL for _player
   028C 21 AE 1A           1771 	ld	hl,#_player
   028F 4E                 1772 	ld	c,(hl)
   0290 23                 1773 	inc	hl
   0291 46                 1774 	ld	b,(hl)
                           1775 ;	genPlus
                           1776 ;	genPlusIncr
                           1777 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1778 	ld	a,c
   0293 C6 0B              1779 	add	a,#0x0B
   0295 4F                 1780 	ld	c,a
   0296 78                 1781 	ld	a,b
   0297 CE 00              1782 	adc	a,#0x00
   0299 47                 1783 	ld	b,a
                           1784 ;	genPointerGet
   029A 0A                 1785 	ld	a,(bc)
                           1786 ;	genCmpLt
   029B 4F                 1787 	ld	c,a
   029C FE 01              1788 	cp	#0x01
   029E DA EB 02           1789 	jp	c,00120$
                           1790 ;	genCmpGt
   02A1 3E 04              1791 	ld	a,#0x04
   02A3 91                 1792 	sub	a,c
   02A4 DA EB 02           1793 	jp	c,00120$
                           1794 ;	genMinus
   02A7 0D                 1795 	dec	c
                           1796 ;	genJumpTab
   02A8 59                 1797 	ld	e,c
   02A9 16 00              1798 	ld	d,#0x00
   02AB 21 B2 02           1799 	ld	hl,#00147$
   02AE 19                 1800 	add	hl,de
   02AF 19                 1801 	add	hl,de
   02B0 19                 1802 	add	hl,de
   02B1 E9                 1803 	jp	(hl)
   02B2                    1804 00147$:
   02B2 C3 BE 02           1805 	jp	00114$
   02B5 C3 CA 02           1806 	jp	00115$
   02B8 C3 D6 02           1807 	jp	00116$
   02BB C3 E2 02           1808 	jp	00117$
                           1809 ;	game.c 265
                           1810 ;	genLabel
   02BE                    1811 00114$:
                           1812 ;	genAddrOf
                           1813 ;	AOP_HL for _player
   02BE 11 7A 1A           1814 	ld	de,#_dog1
   02C1 21 AE 1A           1815 	ld	hl,#_player
   02C4 73                 1816 	ld	(hl),e
   02C5 23                 1817 	inc	hl
   02C6 72                 1818 	ld	(hl),d
                           1819 ;	game.c 266
                           1820 ;	genGoto
   02C7 C3 EB 02           1821 	jp	00120$
                           1822 ;	game.c 268
                           1823 ;	genLabel
   02CA                    1824 00115$:
                           1825 ;	genAddrOf
                           1826 ;	AOP_HL for _player
   02CA 11 87 1A           1827 	ld	de,#_dog2
   02CD 21 AE 1A           1828 	ld	hl,#_player
   02D0 73                 1829 	ld	(hl),e
   02D1 23                 1830 	inc	hl
   02D2 72                 1831 	ld	(hl),d
                           1832 ;	game.c 269
                           1833 ;	genGoto
   02D3 C3 EB 02           1834 	jp	00120$
                           1835 ;	game.c 271
                           1836 ;	genLabel
   02D6                    1837 00116$:
                           1838 ;	genAddrOf
                           1839 ;	AOP_HL for _player
   02D6 11 94 1A           1840 	ld	de,#_cat
   02D9 21 AE 1A           1841 	ld	hl,#_player
   02DC 73                 1842 	ld	(hl),e
   02DD 23                 1843 	inc	hl
   02DE 72                 1844 	ld	(hl),d
                           1845 ;	game.c 272
                           1846 ;	genGoto
   02DF C3 EB 02           1847 	jp	00120$
                           1848 ;	game.c 274
                           1849 ;	genLabel
   02E2                    1850 00117$:
                           1851 ;	genAddrOf
                           1852 ;	AOP_HL for _player
   02E2 11 6D 1A           1853 	ld	de,#_bunny
   02E5 21 AE 1A           1854 	ld	hl,#_player
   02E8 73                 1855 	ld	(hl),e
   02E9 23                 1856 	inc	hl
   02EA 72                 1857 	ld	(hl),d
                           1858 ;	game.c 276
                           1859 ;	genLabel
   02EB                    1860 00120$:
                           1861 ;	game.c 281
                           1862 ;	genCall
                           1863 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD C9 0E           1864 	call	_rotate_player
                           1865 ;	genLabel
   02EE                    1866 00121$:
                           1867 ;	genEndFunction
                           1868 	
   02EE C9                 1869 	ret
   02EF                    1870 ___change_char_end:
                           1871 ;	game.c 285
                           1872 ;	genLabel
                           1873 ;	genFunction
                           1874 ;	---------------------------------
                           1875 ; Function map_loop
                           1876 ; ---------------------------------
   02EF                    1877 ___map_loop_start:
   02EF                    1878 _map_loop:
                           1879 	
                           1880 ;	game.c 287
                           1881 ;	genIpush
                           1882 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 AE 1A           1883 	ld	hl,#_player
   02F2 E5                 1884 	push	hl
                           1885 ;	genCall
   02F3 CD B0 07           1886 	call	_is_ded
   02F6 42                 1887 	ld	b,d
   02F7 4B                 1888 	ld	c,e
   02F8 E8 02              1889 	lda	sp,2(sp)
                           1890 ;	genIfx
   02FA 79                 1891 	ld	a,c
   02FB B0                 1892 	or	a,b
   02FC CA 02 03           1893 	jp	z,00102$
                           1894 ;	game.c 288
                           1895 ;	genCall
                           1896 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1897 	call	_map_init
                           1898 ;	genLabel
   0302                    1899 00102$:
                           1900 ;	game.c 290
                           1901 ;	genIpush
                           1902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 AE 1A           1903 	ld	hl,#_player
   0305 E5                 1904 	push	hl
                           1905 ;	genCall
   0306 CD C6 05           1906 	call	_got_door
   0309 E8 02              1907 	lda	sp,2(sp)
                           1908 ;	game.c 292
                           1909 ;	genIpush
                           1910 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 AE 1A           1911 	ld	hl,#_player
   030E E5                 1912 	push	hl
                           1913 ;	genCall
   030F CD 19 05           1914 	call	_got_key
   0312 E8 02              1915 	lda	sp,2(sp)
                           1916 ;	game.c 293
                           1917 ;	genCall
                           1918 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1919 	call	_map_water
                           1920 ;	game.c 296
                           1921 ;	genIpush
                           1922 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 AE 1A           1923 	ld	hl,#_player
   031A E5                 1924 	push	hl
                           1925 ;	genCall
   031B CD 6A 0C           1926 	call	_player_input
   031E E8 02              1927 	lda	sp,2(sp)
                           1928 ;	game.c 299
                           1929 ;	genIpush
                           1930 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1931 	ld	hl,#_bunny
   0323 E5                 1932 	push	hl
                           1933 ;	genCall
   0324 CD 6F 10           1934 	call	_move_character
   0327 E8 02              1935 	lda	sp,2(sp)
                           1936 ;	game.c 300
                           1937 ;	genIpush
                           1938 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7A 1A           1939 	ld	hl,#_dog1
   032C E5                 1940 	push	hl
                           1941 ;	genCall
   032D CD 6F 10           1942 	call	_move_character
   0330 E8 02              1943 	lda	sp,2(sp)
                           1944 ;	game.c 301
                           1945 ;	genIpush
                           1946 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 87 1A           1947 	ld	hl,#_dog2
   0335 E5                 1948 	push	hl
                           1949 ;	genCall
   0336 CD 6F 10           1950 	call	_move_character
   0339 E8 02              1951 	lda	sp,2(sp)
                           1952 ;	game.c 302
                           1953 ;	genIpush
                           1954 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 94 1A           1955 	ld	hl,#_cat
   033E E5                 1956 	push	hl
                           1957 ;	genCall
   033F CD 6F 10           1958 	call	_move_character
   0342 E8 02              1959 	lda	sp,2(sp)
                           1960 ;	genLabel
   0344                    1961 00103$:
                           1962 ;	genEndFunction
                           1963 	
   0344 C9                 1964 	ret
   0345                    1965 ___map_loop_end:
                           1966 ;	game.c 307
                           1967 ;	genLabel
                           1968 ;	genFunction
                           1969 ;	---------------------------------
                           1970 ; Function helper_copy_map
                           1971 ; ---------------------------------
   0345                    1972 ___helper_copy_map_start:
   0345                    1973 _helper_copy_map:
   0345 E8 FC              1974 	lda	sp,-4(sp)
                           1975 ;	game.c 309
                           1976 ;	genAssign
   0347 01 00 00           1977 	ld	bc,#0x0000
                           1978 ;	genLabel
   034A                    1979 00101$:
                           1980 ;	genCmpLt
   034A 79                 1981 	ld	a,c
   034B D6 68              1982 	sub	a,#0x68
   034D 78                 1983 	ld	a,b
   034E DE 01              1984 	sbc	a,#0x01
   0350 D2 74 03           1985 	jp	nc,00105$
                           1986 ;	game.c 310
                           1987 ;	genPlus
                           1988 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1989 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1990 	ld	hl,#_map
   0356 09                 1991 	add	hl,bc
   0357 7D                 1992 	ld	a,l
   0358 54                 1993 	ld	d,h
   0359 F8 02              1994 	lda	hl,2(sp)
   035B 22                 1995 	ld	(hl+),a
   035C 72                 1996 	ld	(hl),d
                           1997 ;	genPlus
                           1998 ;	AOP_STK for 
                           1999 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           2000 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              2001 	lda	hl,6(sp)
   035F 2A                 2002 	ld	a,(hl+)
   0360 66                 2003 	ld	h,(hl)
   0361 6F                 2004 	ld	l,a
   0362 09                 2005 	add	hl,bc
   0363 7D                 2006 	ld	a,l
   0364 54                 2007 	ld	d,h
   0365 F8 00              2008 	lda	hl,0(sp)
                           2009 ;	genPointerGet
                           2010 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2011 	ld	(hl+),a
   0368 72                 2012 	ld	(hl),d
   0369 5F                 2013 	ld	e,a
   036A 1A                 2014 	ld	a,(de)
                           2015 ;	genAssign (pointer)
                           2016 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2017 	inc	hl
   036C 5E                 2018 	ld	e,(hl)
   036D 23                 2019 	inc	hl
   036E 56                 2020 	ld	d,(hl)
   036F 12                 2021 	ld	(de),a
                           2022 ;	game.c 309
                           2023 ;	genPlus
                           2024 ;	genPlusIncr
   0370 03                 2025 	inc	bc
                           2026 ;	genGoto
   0371 C3 4A 03           2027 	jp	00101$
                           2028 ;	genLabel
   0374                    2029 00105$:
                           2030 ;	genEndFunction
   0374 E8 04              2031 	lda	sp,4(sp)
   0376 C9                 2032 	ret
   0377                    2033 ___helper_copy_map_end:
                           2034 ;	game.c 314
                           2035 ;	genLabel
                           2036 ;	genFunction
                           2037 ;	---------------------------------
                           2038 ; Function copy_map
                           2039 ; ---------------------------------
   0377                    2040 ___copy_map_start:
   0377                    2041 _copy_map:
                           2042 	
                           2043 ;	game.c 315
                           2044 ;	genCmpLt
                           2045 ;	AOP_HL for _current_map
   0377 21 04 19           2046 	ld	hl,#_current_map
   037A 7E                 2047 	ld	a,(hl)
   037B FE 01              2048 	cp	#0x01
   037D DA 2A 04           2049 	jp	c,00111$
                           2050 ;	genCmpGt
                           2051 ;	AOP_HL for _current_map
   0380 3E 0A              2052 	ld	a,#0x0A
   0382 96                 2053 	sub	a,(hl)
   0383 DA 2A 04           2054 	jp	c,00111$
                           2055 ;	genMinus
                           2056 ;	AOP_HL for _current_map
   0386 7E                 2057 	ld	a,(hl)
   0387 C6 FF              2058 	add	a,#0xFF
   0389 4F                 2059 	ld	c,a
                           2060 ;	genJumpTab
   038A 59                 2061 	ld	e,c
   038B 16 00              2062 	ld	d,#0x00
   038D 21 94 03           2063 	ld	hl,#00117$
   0390 19                 2064 	add	hl,de
   0391 19                 2065 	add	hl,de
   0392 19                 2066 	add	hl,de
   0393 E9                 2067 	jp	(hl)
   0394                    2068 00117$:
   0394 C3 B2 03           2069 	jp	00101$
   0397 C3 BE 03           2070 	jp	00102$
   039A C3 CA 03           2071 	jp	00103$
   039D C3 D6 03           2072 	jp	00104$
   03A0 C3 E2 03           2073 	jp	00105$
   03A3 C3 EE 03           2074 	jp	00106$
   03A6 C3 FA 03           2075 	jp	00107$
   03A9 C3 06 04           2076 	jp	00108$
   03AC C3 12 04           2077 	jp	00109$
   03AF C3 1E 04           2078 	jp	00110$
                           2079 ;	game.c 317
                           2080 ;	genLabel
   03B2                    2081 00101$:
                           2082 ;	genIpush
                           2083 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2084 	ld	hl,#_Map1
   03B5 E5                 2085 	push	hl
                           2086 ;	genCall
   03B6 CD 45 03           2087 	call	_helper_copy_map
   03B9 E8 02              2088 	lda	sp,2(sp)
                           2089 ;	game.c 318
                           2090 ;	genGoto
   03BB C3 33 04           2091 	jp	00113$
                           2092 ;	game.c 320
                           2093 ;	genLabel
   03BE                    2094 00102$:
                           2095 ;	genIpush
                           2096 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2097 	ld	hl,#_Map2
   03C1 E5                 2098 	push	hl
                           2099 ;	genCall
   03C2 CD 45 03           2100 	call	_helper_copy_map
   03C5 E8 02              2101 	lda	sp,2(sp)
                           2102 ;	game.c 321
                           2103 ;	genGoto
   03C7 C3 33 04           2104 	jp	00113$
                           2105 ;	game.c 323
                           2106 ;	genLabel
   03CA                    2107 00103$:
                           2108 ;	genIpush
                           2109 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2110 	ld	hl,#_Map3
   03CD E5                 2111 	push	hl
                           2112 ;	genCall
   03CE CD 45 03           2113 	call	_helper_copy_map
   03D1 E8 02              2114 	lda	sp,2(sp)
                           2115 ;	game.c 324
                           2116 ;	genGoto
   03D3 C3 33 04           2117 	jp	00113$
                           2118 ;	game.c 326
                           2119 ;	genLabel
   03D6                    2120 00104$:
                           2121 ;	genIpush
                           2122 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2123 	ld	hl,#_Map4
   03D9 E5                 2124 	push	hl
                           2125 ;	genCall
   03DA CD 45 03           2126 	call	_helper_copy_map
   03DD E8 02              2127 	lda	sp,2(sp)
                           2128 ;	game.c 327
                           2129 ;	genGoto
   03DF C3 33 04           2130 	jp	00113$
                           2131 ;	game.c 329
                           2132 ;	genLabel
   03E2                    2133 00105$:
                           2134 ;	genIpush
                           2135 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2136 	ld	hl,#_MapTest
   03E5 E5                 2137 	push	hl
                           2138 ;	genCall
   03E6 CD 45 03           2139 	call	_helper_copy_map
   03E9 E8 02              2140 	lda	sp,2(sp)
                           2141 ;	game.c 330
                           2142 ;	genGoto
   03EB C3 33 04           2143 	jp	00113$
                           2144 ;	game.c 332
                           2145 ;	genLabel
   03EE                    2146 00106$:
                           2147 ;	genIpush
                           2148 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2149 	ld	hl,#_MapTest
   03F1 E5                 2150 	push	hl
                           2151 ;	genCall
   03F2 CD 45 03           2152 	call	_helper_copy_map
   03F5 E8 02              2153 	lda	sp,2(sp)
                           2154 ;	game.c 333
                           2155 ;	genGoto
   03F7 C3 33 04           2156 	jp	00113$
                           2157 ;	game.c 335
                           2158 ;	genLabel
   03FA                    2159 00107$:
                           2160 ;	genIpush
                           2161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2162 	ld	hl,#_MapTest
   03FD E5                 2163 	push	hl
                           2164 ;	genCall
   03FE CD 45 03           2165 	call	_helper_copy_map
   0401 E8 02              2166 	lda	sp,2(sp)
                           2167 ;	game.c 336
                           2168 ;	genGoto
   0403 C3 33 04           2169 	jp	00113$
                           2170 ;	game.c 338
                           2171 ;	genLabel
   0406                    2172 00108$:
                           2173 ;	genIpush
                           2174 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2175 	ld	hl,#_MapTest
   0409 E5                 2176 	push	hl
                           2177 ;	genCall
   040A CD 45 03           2178 	call	_helper_copy_map
   040D E8 02              2179 	lda	sp,2(sp)
                           2180 ;	game.c 339
                           2181 ;	genGoto
   040F C3 33 04           2182 	jp	00113$
                           2183 ;	game.c 341
                           2184 ;	genLabel
   0412                    2185 00109$:
                           2186 ;	genIpush
                           2187 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2188 	ld	hl,#_MapTest
   0415 E5                 2189 	push	hl
                           2190 ;	genCall
   0416 CD 45 03           2191 	call	_helper_copy_map
   0419 E8 02              2192 	lda	sp,2(sp)
                           2193 ;	game.c 342
                           2194 ;	genGoto
   041B C3 33 04           2195 	jp	00113$
                           2196 ;	game.c 344
                           2197 ;	genLabel
   041E                    2198 00110$:
                           2199 ;	genIpush
                           2200 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2201 	ld	hl,#_MapTest
   0421 E5                 2202 	push	hl
                           2203 ;	genCall
   0422 CD 45 03           2204 	call	_helper_copy_map
   0425 E8 02              2205 	lda	sp,2(sp)
                           2206 ;	game.c 345
                           2207 ;	genGoto
   0427 C3 33 04           2208 	jp	00113$
                           2209 ;	game.c 347
                           2210 ;	genLabel
   042A                    2211 00111$:
                           2212 ;	genIpush
                           2213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2214 	ld	hl,#_MapTest
   042D E5                 2215 	push	hl
                           2216 ;	genCall
   042E CD 45 03           2217 	call	_helper_copy_map
   0431 E8 02              2218 	lda	sp,2(sp)
                           2219 ;	game.c 350
                           2220 ;	genLabel
   0433                    2221 00113$:
                           2222 ;	genEndFunction
                           2223 	
   0433 C9                 2224 	ret
   0434                    2225 ___copy_map_end:
                           2226 ;	game.c 354
                           2227 ;	genLabel
                           2228 ;	genFunction
                           2229 ;	---------------------------------
                           2230 ; Function map_init
                           2231 ; ---------------------------------
   0434                    2232 ___map_init_start:
   0434                    2233 _map_init:
                           2234 	
                           2235 ;	game.c 355
                           2236 ;	genCall
                           2237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2238 	call	_copy_map
                           2239 ;	game.c 356
                           2240 ;	genIpush
                           2241 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2242 	ld	hl,#_map
   043A E5                 2243 	push	hl
                           2244 ;	genIpush
   043B 21 14 12           2245 	ld	hl,#0x1214
   043E E5                 2246 	push	hl
                           2247 ;	genIpush
   043F 21 00 00           2248 	ld	hl,#0x0000
   0442 E5                 2249 	push	hl
                           2250 ;	genCall
   0443 CD 00 00           2251 	call	_set_bkg_tiles
   0446 E8 06              2252 	lda	sp,6(sp)
                           2253 ;	game.c 357
                           2254 ;	genCall
                           2255 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2256 	call	_instanciate_chars
                           2257 ;	genLabel
   044B                    2258 00101$:
                           2259 ;	genEndFunction
                           2260 	
   044B C9                 2261 	ret
   044C                    2262 ___map_init_end:
                           2263 ;	game.c 372
                           2264 ;	genLabel
                           2265 ;	genFunction
                           2266 ;	---------------------------------
                           2267 ; Function instanciate_chars
                           2268 ; ---------------------------------
   044C                    2269 ___instanciate_chars_start:
   044C                    2270 _instanciate_chars:
                           2271 	
                           2272 ;	game.c 374
                           2273 ;	genAssign (pointer)
   044C 11 6D 1A           2274 	ld	de,#_bunny
   044F 3E 08              2275 	ld	a,#0x08
   0451 12                 2276 	ld	(de),a
                           2277 ;	game.c 375
                           2278 ;	genPlus
                           2279 ;	genPlusIncr
   0452 21 6E 1A           2280 	ld	hl,#_bunny + 1
                           2281 ;	genAssign (pointer)
   0455 36 10              2282 	ld	(hl),#0x10
                           2283 ;	game.c 376
                           2284 ;	genPlus
                           2285 ;	genPlusIncr
   0457 23                 2286 	inc	hl
                           2287 ;	genAssign (pointer)
   0458 36 00              2288 	ld	(hl),#0x00
                           2289 ;	game.c 377
                           2290 ;	genPlus
                           2291 ;	genPlusIncr
   045A 23                 2292 	inc	hl
                           2293 ;	genAssign (pointer)
   045B 36 01              2294 	ld	(hl),#0x01
                           2295 ;	game.c 378
                           2296 ;	genPlus
                           2297 ;	genPlusIncr
   045D 23                 2298 	inc	hl
                           2299 ;	genAssign (pointer)
   045E 36 02              2300 	ld	(hl),#0x02
                           2301 ;	game.c 379
                           2302 ;	genPlus
                           2303 ;	genPlusIncr
   0460 23                 2304 	inc	hl
                           2305 ;	genAssign (pointer)
   0461 36 10              2306 	ld	(hl),#0x10
                           2307 ;	game.c 380
                           2308 ;	genPlus
                           2309 ;	genPlusIncr
   0463 23                 2310 	inc	hl
                           2311 ;	genAssign (pointer)
   0464 36 11              2312 	ld	(hl),#0x11
                           2313 ;	game.c 381
                           2314 ;	genPlus
                           2315 ;	genPlusIncr
   0466 23                 2316 	inc	hl
                           2317 ;	genAssign (pointer)
   0467 36 12              2318 	ld	(hl),#0x12
                           2319 ;	game.c 382
                           2320 ;	genPlus
                           2321 ;	genPlusIncr
   0469 23                 2322 	inc	hl
                           2323 ;	genAssign (pointer)
   046A 36 00              2324 	ld	(hl),#0x00
                           2325 ;	game.c 383
                           2326 ;	genPlus
                           2327 ;	genPlusIncr
   046C 23                 2328 	inc	hl
                           2329 ;	genAssign (pointer)
   046D 36 00              2330 	ld	(hl),#0x00
                           2331 ;	game.c 384
                           2332 ;	genPlus
                           2333 ;	genPlusIncr
   046F 23                 2334 	inc	hl
   0470 23                 2335 	inc	hl
                           2336 ;	genAssign (pointer)
   0471 36 01              2337 	ld	(hl),#0x01
                           2338 ;	game.c 385
                           2339 ;	genPlus
                           2340 ;	genPlusIncr
   0473 23                 2341 	inc	hl
                           2342 ;	genAssign (pointer)
   0474 36 01              2343 	ld	(hl),#0x01
                           2344 ;	game.c 387
                           2345 ;	genAssign (pointer)
   0476 11 7A 1A           2346 	ld	de,#_dog1
   0479 3E 10              2347 	ld	a,#0x10
   047B 12                 2348 	ld	(de),a
                           2349 ;	game.c 388
                           2350 ;	genPlus
                           2351 ;	genPlusIncr
   047C 21 7B 1A           2352 	ld	hl,#_dog1 + 1
                           2353 ;	genAssign (pointer)
   047F 36 10              2354 	ld	(hl),#0x10
                           2355 ;	game.c 389
                           2356 ;	genPlus
                           2357 ;	genPlusIncr
   0481 23                 2358 	inc	hl
                           2359 ;	genAssign (pointer)
   0482 36 03              2360 	ld	(hl),#0x03
                           2361 ;	game.c 390
                           2362 ;	genPlus
                           2363 ;	genPlusIncr
   0484 23                 2364 	inc	hl
                           2365 ;	genAssign (pointer)
   0485 36 04              2366 	ld	(hl),#0x04
                           2367 ;	game.c 391
                           2368 ;	genPlus
                           2369 ;	genPlusIncr
   0487 23                 2370 	inc	hl
                           2371 ;	genAssign (pointer)
   0488 36 05              2372 	ld	(hl),#0x05
                           2373 ;	game.c 392
                           2374 ;	genPlus
                           2375 ;	genPlusIncr
   048A 23                 2376 	inc	hl
                           2377 ;	genAssign (pointer)
   048B 36 13              2378 	ld	(hl),#0x13
                           2379 ;	game.c 393
                           2380 ;	genPlus
                           2381 ;	genPlusIncr
   048D 23                 2382 	inc	hl
                           2383 ;	genAssign (pointer)
   048E 36 14              2384 	ld	(hl),#0x14
                           2385 ;	game.c 394
                           2386 ;	genPlus
                           2387 ;	genPlusIncr
   0490 23                 2388 	inc	hl
                           2389 ;	genAssign (pointer)
   0491 36 15              2390 	ld	(hl),#0x15
                           2391 ;	game.c 395
                           2392 ;	genPlus
                           2393 ;	genPlusIncr
   0493 23                 2394 	inc	hl
                           2395 ;	genAssign (pointer)
   0494 36 00              2396 	ld	(hl),#0x00
                           2397 ;	game.c 396
                           2398 ;	genPlus
                           2399 ;	genPlusIncr
   0496 23                 2400 	inc	hl
                           2401 ;	genAssign (pointer)
   0497 36 00              2402 	ld	(hl),#0x00
                           2403 ;	game.c 397
                           2404 ;	genPlus
                           2405 ;	genPlusIncr
   0499 23                 2406 	inc	hl
   049A 23                 2407 	inc	hl
                           2408 ;	genAssign (pointer)
   049B 36 02              2409 	ld	(hl),#0x02
                           2410 ;	game.c 398
                           2411 ;	genPlus
                           2412 ;	genPlusIncr
   049D 23                 2413 	inc	hl
                           2414 ;	genAssign (pointer)
   049E 36 00              2415 	ld	(hl),#0x00
                           2416 ;	game.c 400
                           2417 ;	genAssign (pointer)
   04A0 11 87 1A           2418 	ld	de,#_dog2
   04A3 3E 08              2419 	ld	a,#0x08
   04A5 12                 2420 	ld	(de),a
                           2421 ;	game.c 401
                           2422 ;	genPlus
                           2423 ;	genPlusIncr
   04A6 21 88 1A           2424 	ld	hl,#_dog2 + 1
                           2425 ;	genAssign (pointer)
   04A9 36 18              2426 	ld	(hl),#0x18
                           2427 ;	game.c 402
                           2428 ;	genPlus
                           2429 ;	genPlusIncr
   04AB 23                 2430 	inc	hl
                           2431 ;	genAssign (pointer)
   04AC 36 06              2432 	ld	(hl),#0x06
                           2433 ;	game.c 403
                           2434 ;	genPlus
                           2435 ;	genPlusIncr
   04AE 23                 2436 	inc	hl
                           2437 ;	genAssign (pointer)
   04AF 36 07              2438 	ld	(hl),#0x07
                           2439 ;	game.c 404
                           2440 ;	genPlus
                           2441 ;	genPlusIncr
   04B1 23                 2442 	inc	hl
                           2443 ;	genAssign (pointer)
   04B2 36 08              2444 	ld	(hl),#0x08
                           2445 ;	game.c 405
                           2446 ;	genPlus
                           2447 ;	genPlusIncr
   04B4 23                 2448 	inc	hl
                           2449 ;	genAssign (pointer)
   04B5 36 13              2450 	ld	(hl),#0x13
                           2451 ;	game.c 406
                           2452 ;	genPlus
                           2453 ;	genPlusIncr
   04B7 23                 2454 	inc	hl
                           2455 ;	genAssign (pointer)
   04B8 36 14              2456 	ld	(hl),#0x14
                           2457 ;	game.c 407
                           2458 ;	genPlus
                           2459 ;	genPlusIncr
   04BA 23                 2460 	inc	hl
                           2461 ;	genAssign (pointer)
   04BB 36 15              2462 	ld	(hl),#0x15
                           2463 ;	game.c 408
                           2464 ;	genPlus
                           2465 ;	genPlusIncr
   04BD 23                 2466 	inc	hl
                           2467 ;	genAssign (pointer)
   04BE 36 00              2468 	ld	(hl),#0x00
                           2469 ;	game.c 409
                           2470 ;	genPlus
                           2471 ;	genPlusIncr
   04C0 23                 2472 	inc	hl
                           2473 ;	genAssign (pointer)
   04C1 36 00              2474 	ld	(hl),#0x00
                           2475 ;	game.c 410
                           2476 ;	genPlus
                           2477 ;	genPlusIncr
   04C3 23                 2478 	inc	hl
   04C4 23                 2479 	inc	hl
                           2480 ;	genAssign (pointer)
   04C5 36 03              2481 	ld	(hl),#0x03
                           2482 ;	game.c 411
                           2483 ;	genPlus
                           2484 ;	genPlusIncr
   04C7 23                 2485 	inc	hl
                           2486 ;	genAssign (pointer)
   04C8 36 00              2487 	ld	(hl),#0x00
                           2488 ;	game.c 413
                           2489 ;	genAssign (pointer)
   04CA 11 94 1A           2490 	ld	de,#_cat
   04CD 3E 10              2491 	ld	a,#0x10
   04CF 12                 2492 	ld	(de),a
                           2493 ;	game.c 414
                           2494 ;	genPlus
                           2495 ;	genPlusIncr
   04D0 21 95 1A           2496 	ld	hl,#_cat + 1
                           2497 ;	genAssign (pointer)
   04D3 36 18              2498 	ld	(hl),#0x18
                           2499 ;	game.c 415
                           2500 ;	genPlus
                           2501 ;	genPlusIncr
   04D5 23                 2502 	inc	hl
                           2503 ;	genAssign (pointer)
   04D6 36 09              2504 	ld	(hl),#0x09
                           2505 ;	game.c 416
                           2506 ;	genPlus
                           2507 ;	genPlusIncr
   04D8 23                 2508 	inc	hl
                           2509 ;	genAssign (pointer)
   04D9 36 0A              2510 	ld	(hl),#0x0A
                           2511 ;	game.c 417
                           2512 ;	genPlus
                           2513 ;	genPlusIncr
   04DB 23                 2514 	inc	hl
                           2515 ;	genAssign (pointer)
   04DC 36 05              2516 	ld	(hl),#0x05
                           2517 ;	game.c 418
                           2518 ;	genPlus
                           2519 ;	genPlusIncr
   04DE 23                 2520 	inc	hl
                           2521 ;	genAssign (pointer)
   04DF 36 13              2522 	ld	(hl),#0x13
                           2523 ;	game.c 419
                           2524 ;	genPlus
                           2525 ;	genPlusIncr
   04E1 23                 2526 	inc	hl
                           2527 ;	genAssign (pointer)
   04E2 36 14              2528 	ld	(hl),#0x14
                           2529 ;	game.c 420
                           2530 ;	genPlus
                           2531 ;	genPlusIncr
   04E4 23                 2532 	inc	hl
                           2533 ;	genAssign (pointer)
   04E5 36 15              2534 	ld	(hl),#0x15
                           2535 ;	game.c 421
                           2536 ;	genPlus
                           2537 ;	genPlusIncr
   04E7 23                 2538 	inc	hl
                           2539 ;	genAssign (pointer)
   04E8 36 00              2540 	ld	(hl),#0x00
                           2541 ;	game.c 422
                           2542 ;	genPlus
                           2543 ;	genPlusIncr
   04EA 23                 2544 	inc	hl
                           2545 ;	genAssign (pointer)
   04EB 36 00              2546 	ld	(hl),#0x00
                           2547 ;	game.c 423
                           2548 ;	genPlus
                           2549 ;	genPlusIncr
   04ED 23                 2550 	inc	hl
   04EE 23                 2551 	inc	hl
                           2552 ;	genAssign (pointer)
   04EF 36 04              2553 	ld	(hl),#0x04
                           2554 ;	game.c 424
                           2555 ;	genPlus
                           2556 ;	genPlusIncr
   04F1 23                 2557 	inc	hl
                           2558 ;	genAssign (pointer)
   04F2 36 00              2559 	ld	(hl),#0x00
                           2560 ;	game.c 427
                           2561 ;	genIpush
                           2562 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04F4 21 6D 1A           2563 	ld	hl,#_bunny
   04F7 E5                 2564 	push	hl
                           2565 ;	genCall
   04F8 CD 93 18           2566 	call	_set_character_sprite
   04FB E8 02              2567 	lda	sp,2(sp)
                           2568 ;	game.c 428
                           2569 ;	genIpush
                           2570 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04FD 21 7A 1A           2571 	ld	hl,#_dog1
   0500 E5                 2572 	push	hl
                           2573 ;	genCall
   0501 CD 93 18           2574 	call	_set_character_sprite
   0504 E8 02              2575 	lda	sp,2(sp)
                           2576 ;	game.c 429
                           2577 ;	genIpush
                           2578 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0506 21 87 1A           2579 	ld	hl,#_dog2
   0509 E5                 2580 	push	hl
                           2581 ;	genCall
   050A CD 93 18           2582 	call	_set_character_sprite
   050D E8 02              2583 	lda	sp,2(sp)
                           2584 ;	game.c 430
                           2585 ;	genIpush
                           2586 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   050F 21 94 1A           2587 	ld	hl,#_cat
   0512 E5                 2588 	push	hl
                           2589 ;	genCall
   0513 CD 93 18           2590 	call	_set_character_sprite
   0516 E8 02              2591 	lda	sp,2(sp)
                           2592 ;	genLabel
   0518                    2593 00101$:
                           2594 ;	genEndFunction
                           2595 	
   0518 C9                 2596 	ret
   0519                    2597 ___instanciate_chars_end:
                           2598 ;	game.c 434
                           2599 ;	genLabel
                           2600 ;	genFunction
                           2601 ;	---------------------------------
                           2602 ; Function got_key
                           2603 ; ---------------------------------
   0519                    2604 ___got_key_start:
   0519                    2605 _got_key:
   0519 E8 FC              2606 	lda	sp,-4(sp)
                           2607 ;	game.c 435
                           2608 ;	genAssign
                           2609 ;	AOP_HL for _player
   051B 21 AE 1A           2610 	ld	hl,#_player
   051E 4E                 2611 	ld	c,(hl)
   051F 23                 2612 	inc	hl
   0520 46                 2613 	ld	b,(hl)
                           2614 ;	genPlus
                           2615 ;	genPlusIncr
   0521 03                 2616 	inc	bc
                           2617 ;	genPointerGet
   0522 0A                 2618 	ld	a,(bc)
   0523 4F                 2619 	ld	c,a
                           2620 ;	genAssign
                           2621 ;	AOP_HL for _player
                           2622 ;	AOP_STK for _got_key_sloc0_1_0
   0524 2B                 2623 	dec	hl
   0525 2A                 2624 	ld	a,(hl+)
   0526 5E                 2625 	ld	e,(hl)
   0527 F8 00              2626 	lda	hl,0(sp)
   0529 22                 2627 	ld	(hl+),a
   052A 73                 2628 	ld	(hl),e
                           2629 ;	genPointerGet
                           2630 ;	AOP_STK for _got_key_sloc0_1_0
   052B 2B                 2631 	dec	hl
   052C 5E                 2632 	ld	e,(hl)
   052D 23                 2633 	inc	hl
   052E 56                 2634 	ld	d,(hl)
   052F 1A                 2635 	ld	a,(de)
   0530 47                 2636 	ld	b,a
                           2637 ;	genIpush
                           2638 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0531 79                 2639 	ld	a,c
   0532 F5                 2640 	push	af
   0533 33                 2641 	inc	sp
                           2642 ;	genIpush
   0534 78                 2643 	ld	a,b
   0535 F5                 2644 	push	af
   0536 33                 2645 	inc	sp
                           2646 ;	genCall
   0537 CD 16 0C           2647 	call	_get_player_map_position
   053A 42                 2648 	ld	b,d
   053B 4B                 2649 	ld	c,e
   053C E8 02              2650 	lda	sp,2(sp)
                           2651 ;	genAssign
                           2652 ;	(registers are the same)
                           2653 ;	game.c 438
                           2654 ;	genPlus
                           2655 ;	Can't optimise plus by inc, falling back to the normal way
   053E 21 05 19           2656 	ld	hl,#_map
   0541 09                 2657 	add	hl,bc
   0542 4D                 2658 	ld	c,l
   0543 44                 2659 	ld	b,h
                           2660 ;	genPointerGet
   0544 0A                 2661 	ld	a,(bc)
   0545 4F                 2662 	ld	c,a
                           2663 ;	genCast
                           2664 ; Removed redundent load
   0546 06 00              2665 	ld	b,#0x00
                           2666 ;	genCmpEq
                           2667 ; genCmpEq: left 2, right 2, result 0
   0548 79                 2668 	ld	a,c
   0549 FE 2E              2669 	cp	a,#0x2E
   054B C2 55 05           2670 	jp	nz,00116$
   054E 78                 2671 	ld	a,b
   054F B7                 2672 	or	a,a
   0550 C2 C3 05           2673 	jp	nz,00109$
   0553 18 03              2674 	jr	00117$
   0555                    2675 00116$:
   0555 C3 C3 05           2676 	jp	00109$
   0558                    2677 00117$:
                           2678 ;	game.c 443
                           2679 ;	genAssign
                           2680 ;	AOP_STK for _got_key_map_position_2_2
   0558 F8 02              2681 	lda	hl,2(sp)
   055A 36 68              2682 	ld	(hl),#0x68
   055C 23                 2683 	inc	hl
   055D 36 01              2684 	ld	(hl),#0x01
                           2685 ;	game.c 444
                           2686 ;	genLabel
   055F                    2687 00104$:
                           2688 ;	genCmpEq
                           2689 ;	AOP_STK for _got_key_map_position_2_2
                           2690 ; genCmpEq: left 2, right 2, result 0
   055F F8 02              2691 	lda	hl,2(sp)
   0561 2A                 2692 	ld	a,(hl+)
   0562 B6                 2693 	or	a,(hl)
   0563 CA B2 05           2694 	jp	z,00106$
   0566                    2695 00118$:
                           2696 ;	game.c 445
                           2697 ;	genMinus
                           2698 ;	AOP_STK for _got_key_map_position_2_2
   0566 F8 02              2699 	lda	hl,2(sp)
   0568 5E                 2700 	ld	e,(hl)
   0569 23                 2701 	inc	hl
   056A 56                 2702 	ld	d,(hl)
   056B 1B                 2703 	dec	de
   056C 2B                 2704 	dec	hl
   056D 73                 2705 	ld	(hl),e
   056E 23                 2706 	inc	hl
   056F 72                 2707 	ld	(hl),d
                           2708 ;	game.c 447
                           2709 ;	genPlus
                           2710 ;	AOP_STK for _got_key_map_position_2_2
                           2711 ;	AOP_STK for _got_key_sloc0_1_0
                           2712 ;	Can't optimise plus by inc, falling back to the normal way
   0570 11 05 19           2713 	ld	de,#_map
   0573 2B                 2714 	dec	hl
   0574 2A                 2715 	ld	a,(hl+)
   0575 66                 2716 	ld	h,(hl)
   0576 6F                 2717 	ld	l,a
   0577 19                 2718 	add	hl,de
   0578 7D                 2719 	ld	a,l
   0579 54                 2720 	ld	d,h
   057A F8 00              2721 	lda	hl,0(sp)
                           2722 ;	genPointerGet
                           2723 ;	AOP_STK for _got_key_sloc0_1_0
   057C 22                 2724 	ld	(hl+),a
   057D 72                 2725 	ld	(hl),d
   057E 5F                 2726 	ld	e,a
   057F 1A                 2727 	ld	a,(de)
   0580 4F                 2728 	ld	c,a
                           2729 ;	genCast
                           2730 ; Removed redundent load
   0581 06 00              2731 	ld	b,#0x00
                           2732 ;	genCmpEq
                           2733 ; genCmpEq: left 2, right 2, result 0
   0583 79                 2734 	ld	a,c
   0584 FE 29              2735 	cp	a,#0x29
   0586 C2 8E 05           2736 	jp	nz,00119$
   0589 78                 2737 	ld	a,b
   058A B7                 2738 	or	a,a
   058B CA 9C 05           2739 	jp	z,00101$
   058E                    2740 00119$:
                           2741 ;	genCmpEq
                           2742 ; genCmpEq: left 2, right 2, result 0
   058E 79                 2743 	ld	a,c
   058F FE 2E              2744 	cp	a,#0x2E
   0591 C2 99 05           2745 	jp	nz,00120$
   0594 78                 2746 	ld	a,b
   0595 B7                 2747 	or	a,a
   0596 CA A7 05           2748 	jp	z,00102$
   0599                    2749 00120$:
                           2750 ;	genGoto
   0599 C3 5F 05           2751 	jp	00104$
                           2752 ;	game.c 449
                           2753 ;	genLabel
   059C                    2754 00101$:
                           2755 ;	genAssign (pointer)
                           2756 ;	AOP_STK for _got_key_sloc0_1_0
   059C F8 00              2757 	lda	hl,0(sp)
   059E 5E                 2758 	ld	e,(hl)
   059F 23                 2759 	inc	hl
   05A0 56                 2760 	ld	d,(hl)
   05A1 3E 2A              2761 	ld	a,#0x2A
   05A3 12                 2762 	ld	(de),a
                           2763 ;	game.c 450
                           2764 ;	genGoto
   05A4 C3 5F 05           2765 	jp	00104$
                           2766 ;	game.c 452
                           2767 ;	genLabel
   05A7                    2768 00102$:
                           2769 ;	genAssign (pointer)
                           2770 ;	AOP_STK for _got_key_sloc0_1_0
   05A7 F8 00              2771 	lda	hl,0(sp)
   05A9 5E                 2772 	ld	e,(hl)
   05AA 23                 2773 	inc	hl
   05AB 56                 2774 	ld	d,(hl)
   05AC 3E 09              2775 	ld	a,#0x09
   05AE 12                 2776 	ld	(de),a
                           2777 ;	game.c 455
                           2778 ;	genGoto
   05AF C3 5F 05           2779 	jp	00104$
                           2780 ;	genLabel
   05B2                    2781 00106$:
                           2782 ;	game.c 457
                           2783 ;	genIpush
                           2784 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05B2 21 05 19           2785 	ld	hl,#_map
   05B5 E5                 2786 	push	hl
                           2787 ;	genIpush
   05B6 21 14 12           2788 	ld	hl,#0x1214
   05B9 E5                 2789 	push	hl
                           2790 ;	genIpush
   05BA 21 00 00           2791 	ld	hl,#0x0000
   05BD E5                 2792 	push	hl
                           2793 ;	genCall
   05BE CD 00 00           2794 	call	_set_bkg_tiles
   05C1 E8 06              2795 	lda	sp,6(sp)
                           2796 ;	genLabel
   05C3                    2797 00109$:
                           2798 ;	genEndFunction
   05C3 E8 04              2799 	lda	sp,4(sp)
   05C5 C9                 2800 	ret
   05C6                    2801 ___got_key_end:
                           2802 ;	game.c 461
                           2803 ;	genLabel
                           2804 ;	genFunction
                           2805 ;	---------------------------------
                           2806 ; Function got_door
                           2807 ; ---------------------------------
   05C6                    2808 ___got_door_start:
   05C6                    2809 _got_door:
   05C6 E8 FE              2810 	lda	sp,-2(sp)
                           2811 ;	game.c 462
                           2812 ;	genAssign
                           2813 ;	AOP_HL for _player
   05C8 21 AE 1A           2814 	ld	hl,#_player
   05CB 4E                 2815 	ld	c,(hl)
   05CC 23                 2816 	inc	hl
   05CD 46                 2817 	ld	b,(hl)
                           2818 ;	genPlus
                           2819 ;	genPlusIncr
   05CE 03                 2820 	inc	bc
                           2821 ;	genPointerGet
   05CF 0A                 2822 	ld	a,(bc)
   05D0 4F                 2823 	ld	c,a
                           2824 ;	genAssign
                           2825 ;	AOP_HL for _player
                           2826 ;	AOP_STK for _got_door_sloc0_1_0
   05D1 2B                 2827 	dec	hl
   05D2 2A                 2828 	ld	a,(hl+)
   05D3 5E                 2829 	ld	e,(hl)
   05D4 F8 00              2830 	lda	hl,0(sp)
   05D6 22                 2831 	ld	(hl+),a
   05D7 73                 2832 	ld	(hl),e
                           2833 ;	genPointerGet
                           2834 ;	AOP_STK for _got_door_sloc0_1_0
   05D8 2B                 2835 	dec	hl
   05D9 5E                 2836 	ld	e,(hl)
   05DA 23                 2837 	inc	hl
   05DB 56                 2838 	ld	d,(hl)
   05DC 1A                 2839 	ld	a,(de)
   05DD 47                 2840 	ld	b,a
                           2841 ;	genIpush
                           2842 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05DE 79                 2843 	ld	a,c
   05DF F5                 2844 	push	af
   05E0 33                 2845 	inc	sp
                           2846 ;	genIpush
   05E1 78                 2847 	ld	a,b
   05E2 F5                 2848 	push	af
   05E3 33                 2849 	inc	sp
                           2850 ;	genCall
   05E4 CD 16 0C           2851 	call	_get_player_map_position
   05E7 42                 2852 	ld	b,d
   05E8 4B                 2853 	ld	c,e
   05E9 E8 02              2854 	lda	sp,2(sp)
                           2855 ;	genAssign
                           2856 ;	(registers are the same)
                           2857 ;	game.c 464
                           2858 ;	genPlus
                           2859 ;	Can't optimise plus by inc, falling back to the normal way
   05EB 21 05 19           2860 	ld	hl,#_map
   05EE 09                 2861 	add	hl,bc
   05EF 4D                 2862 	ld	c,l
   05F0 44                 2863 	ld	b,h
                           2864 ;	genPointerGet
   05F1 0A                 2865 	ld	a,(bc)
   05F2 4F                 2866 	ld	c,a
                           2867 ;	genCast
                           2868 ; Removed redundent load
   05F3 06 00              2869 	ld	b,#0x00
                           2870 ;	genCmpEq
                           2871 ; genCmpEq: left 2, right 2, result 0
   05F5 79                 2872 	ld	a,c
   05F6 FE 65              2873 	cp	a,#0x65
   05F8 C2 00 06           2874 	jp	nz,00144$
   05FB 78                 2875 	ld	a,b
   05FC B7                 2876 	or	a,a
   05FD CA D4 06           2877 	jp	z,00101$
   0600                    2878 00144$:
                           2879 ;	genCmpEq
                           2880 ; genCmpEq: left 2, right 2, result 0
   0600 79                 2881 	ld	a,c
   0601 FE 66              2882 	cp	a,#0x66
   0603 C2 0B 06           2883 	jp	nz,00145$
   0606 78                 2884 	ld	a,b
   0607 B7                 2885 	or	a,a
   0608 CA DF 06           2886 	jp	z,00102$
   060B                    2887 00145$:
                           2888 ;	genCmpEq
                           2889 ; genCmpEq: left 2, right 2, result 0
   060B 79                 2890 	ld	a,c
   060C FE 67              2891 	cp	a,#0x67
   060E C2 16 06           2892 	jp	nz,00146$
   0611 78                 2893 	ld	a,b
   0612 B7                 2894 	or	a,a
   0613 CA EA 06           2895 	jp	z,00103$
   0616                    2896 00146$:
                           2897 ;	genCmpEq
                           2898 ; genCmpEq: left 2, right 2, result 0
   0616 79                 2899 	ld	a,c
   0617 FE 68              2900 	cp	a,#0x68
   0619 C2 21 06           2901 	jp	nz,00147$
   061C 78                 2902 	ld	a,b
   061D B7                 2903 	or	a,a
   061E CA F5 06           2904 	jp	z,00104$
   0621                    2905 00147$:
                           2906 ;	genCmpEq
                           2907 ; genCmpEq: left 2, right 2, result 0
   0621 79                 2908 	ld	a,c
   0622 FE 69              2909 	cp	a,#0x69
   0624 C2 2C 06           2910 	jp	nz,00148$
   0627 78                 2911 	ld	a,b
   0628 B7                 2912 	or	a,a
   0629 CA 00 07           2913 	jp	z,00105$
   062C                    2914 00148$:
                           2915 ;	genCmpEq
                           2916 ; genCmpEq: left 2, right 2, result 0
   062C 79                 2917 	ld	a,c
   062D FE 6A              2918 	cp	a,#0x6A
   062F C2 37 06           2919 	jp	nz,00149$
   0632 78                 2920 	ld	a,b
   0633 B7                 2921 	or	a,a
   0634 CA 0B 07           2922 	jp	z,00106$
   0637                    2923 00149$:
                           2924 ;	genCmpEq
                           2925 ; genCmpEq: left 2, right 2, result 0
   0637 79                 2926 	ld	a,c
   0638 FE 6B              2927 	cp	a,#0x6B
   063A C2 42 06           2928 	jp	nz,00150$
   063D 78                 2929 	ld	a,b
   063E B7                 2930 	or	a,a
   063F CA 16 07           2931 	jp	z,00107$
   0642                    2932 00150$:
                           2933 ;	genCmpEq
                           2934 ; genCmpEq: left 2, right 2, result 0
   0642 79                 2935 	ld	a,c
   0643 FE 6C              2936 	cp	a,#0x6C
   0645 C2 4D 06           2937 	jp	nz,00151$
   0648 78                 2938 	ld	a,b
   0649 B7                 2939 	or	a,a
   064A CA 21 07           2940 	jp	z,00108$
   064D                    2941 00151$:
                           2942 ;	genCmpEq
                           2943 ; genCmpEq: left 2, right 2, result 0
   064D 79                 2944 	ld	a,c
   064E FE 6D              2945 	cp	a,#0x6D
   0650 C2 58 06           2946 	jp	nz,00152$
   0653 78                 2947 	ld	a,b
   0654 B7                 2948 	or	a,a
   0655 CA 2C 07           2949 	jp	z,00109$
   0658                    2950 00152$:
                           2951 ;	genCmpEq
                           2952 ; genCmpEq: left 2, right 2, result 0
   0658 79                 2953 	ld	a,c
   0659 FE 6E              2954 	cp	a,#0x6E
   065B C2 63 06           2955 	jp	nz,00153$
   065E 78                 2956 	ld	a,b
   065F B7                 2957 	or	a,a
   0660 CA 37 07           2958 	jp	z,00110$
   0663                    2959 00153$:
                           2960 ;	genCmpEq
                           2961 ; genCmpEq: left 2, right 2, result 0
   0663 79                 2962 	ld	a,c
   0664 FE 6F              2963 	cp	a,#0x6F
   0666 C2 6E 06           2964 	jp	nz,00154$
   0669 78                 2965 	ld	a,b
   066A B7                 2966 	or	a,a
   066B CA 42 07           2967 	jp	z,00111$
   066E                    2968 00154$:
                           2969 ;	genCmpEq
                           2970 ; genCmpEq: left 2, right 2, result 0
   066E 79                 2971 	ld	a,c
   066F FE 70              2972 	cp	a,#0x70
   0671 C2 79 06           2973 	jp	nz,00155$
   0674 78                 2974 	ld	a,b
   0675 B7                 2975 	or	a,a
   0676 CA 4D 07           2976 	jp	z,00112$
   0679                    2977 00155$:
                           2978 ;	genCmpEq
                           2979 ; genCmpEq: left 2, right 2, result 0
   0679 79                 2980 	ld	a,c
   067A FE 71              2981 	cp	a,#0x71
   067C C2 84 06           2982 	jp	nz,00156$
   067F 78                 2983 	ld	a,b
   0680 B7                 2984 	or	a,a
   0681 CA 58 07           2985 	jp	z,00113$
   0684                    2986 00156$:
                           2987 ;	genCmpEq
                           2988 ; genCmpEq: left 2, right 2, result 0
   0684 79                 2989 	ld	a,c
   0685 FE 72              2990 	cp	a,#0x72
   0687 C2 8F 06           2991 	jp	nz,00157$
   068A 78                 2992 	ld	a,b
   068B B7                 2993 	or	a,a
   068C CA 63 07           2994 	jp	z,00114$
   068F                    2995 00157$:
                           2996 ;	genCmpEq
                           2997 ; genCmpEq: left 2, right 2, result 0
   068F 79                 2998 	ld	a,c
   0690 FE 73              2999 	cp	a,#0x73
   0692 C2 9A 06           3000 	jp	nz,00158$
   0695 78                 3001 	ld	a,b
   0696 B7                 3002 	or	a,a
   0697 CA 6E 07           3003 	jp	z,00115$
   069A                    3004 00158$:
                           3005 ;	genCmpEq
                           3006 ; genCmpEq: left 2, right 2, result 0
   069A 79                 3007 	ld	a,c
   069B FE 74              3008 	cp	a,#0x74
   069D C2 A5 06           3009 	jp	nz,00159$
   06A0 78                 3010 	ld	a,b
   06A1 B7                 3011 	or	a,a
   06A2 CA 79 07           3012 	jp	z,00116$
   06A5                    3013 00159$:
                           3014 ;	genCmpEq
                           3015 ; genCmpEq: left 2, right 2, result 0
   06A5 79                 3016 	ld	a,c
   06A6 FE 75              3017 	cp	a,#0x75
   06A8 C2 B0 06           3018 	jp	nz,00160$
   06AB 78                 3019 	ld	a,b
   06AC B7                 3020 	or	a,a
   06AD CA 84 07           3021 	jp	z,00117$
   06B0                    3022 00160$:
                           3023 ;	genCmpEq
                           3024 ; genCmpEq: left 2, right 2, result 0
   06B0 79                 3025 	ld	a,c
   06B1 FE 76              3026 	cp	a,#0x76
   06B3 C2 BB 06           3027 	jp	nz,00161$
   06B6 78                 3028 	ld	a,b
   06B7 B7                 3029 	or	a,a
   06B8 CA 8F 07           3030 	jp	z,00118$
   06BB                    3031 00161$:
                           3032 ;	genCmpEq
                           3033 ; genCmpEq: left 2, right 2, result 0
   06BB 79                 3034 	ld	a,c
   06BC FE 77              3035 	cp	a,#0x77
   06BE C2 C6 06           3036 	jp	nz,00162$
   06C1 78                 3037 	ld	a,b
   06C2 B7                 3038 	or	a,a
   06C3 CA 9A 07           3039 	jp	z,00119$
   06C6                    3040 00162$:
                           3041 ;	genCmpEq
                           3042 ; genCmpEq: left 2, right 2, result 0
   06C6 79                 3043 	ld	a,c
   06C7 FE 78              3044 	cp	a,#0x78
   06C9 C2 D1 06           3045 	jp	nz,00163$
   06CC 78                 3046 	ld	a,b
   06CD B7                 3047 	or	a,a
   06CE CA A5 07           3048 	jp	z,00120$
   06D1                    3049 00163$:
                           3050 ;	genGoto
   06D1 C3 AD 07           3051 	jp	00122$
                           3052 ;	game.c 466
                           3053 ;	genLabel
   06D4                    3054 00101$:
                           3055 ;	genAssign
                           3056 ;	AOP_HL for _current_map
   06D4 21 04 19           3057 	ld	hl,#_current_map
   06D7 36 01              3058 	ld	(hl),#0x01
                           3059 ;	game.c 467
                           3060 ;	genCall
                           3061 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06D9 CD 34 04           3062 	call	_map_init
                           3063 ;	game.c 468
                           3064 ;	genGoto
   06DC C3 AD 07           3065 	jp	00122$
                           3066 ;	game.c 470
                           3067 ;	genLabel
   06DF                    3068 00102$:
                           3069 ;	genAssign
                           3070 ;	AOP_HL for _current_map
   06DF 21 04 19           3071 	ld	hl,#_current_map
   06E2 36 02              3072 	ld	(hl),#0x02
                           3073 ;	game.c 471
                           3074 ;	genCall
                           3075 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06E4 CD 34 04           3076 	call	_map_init
                           3077 ;	game.c 472
                           3078 ;	genGoto
   06E7 C3 AD 07           3079 	jp	00122$
                           3080 ;	game.c 474
                           3081 ;	genLabel
   06EA                    3082 00103$:
                           3083 ;	genAssign
                           3084 ;	AOP_HL for _current_map
   06EA 21 04 19           3085 	ld	hl,#_current_map
   06ED 36 03              3086 	ld	(hl),#0x03
                           3087 ;	game.c 475
                           3088 ;	genCall
                           3089 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06EF CD 34 04           3090 	call	_map_init
                           3091 ;	game.c 476
                           3092 ;	genGoto
   06F2 C3 AD 07           3093 	jp	00122$
                           3094 ;	game.c 478
                           3095 ;	genLabel
   06F5                    3096 00104$:
                           3097 ;	genAssign
                           3098 ;	AOP_HL for _current_map
   06F5 21 04 19           3099 	ld	hl,#_current_map
   06F8 36 04              3100 	ld	(hl),#0x04
                           3101 ;	game.c 479
                           3102 ;	genCall
                           3103 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06FA CD 34 04           3104 	call	_map_init
                           3105 ;	game.c 480
                           3106 ;	genGoto
   06FD C3 AD 07           3107 	jp	00122$
                           3108 ;	game.c 482
                           3109 ;	genLabel
   0700                    3110 00105$:
                           3111 ;	genAssign
                           3112 ;	AOP_HL for _current_map
   0700 21 04 19           3113 	ld	hl,#_current_map
   0703 36 05              3114 	ld	(hl),#0x05
                           3115 ;	game.c 483
                           3116 ;	genCall
                           3117 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0705 CD 34 04           3118 	call	_map_init
                           3119 ;	game.c 484
                           3120 ;	genGoto
   0708 C3 AD 07           3121 	jp	00122$
                           3122 ;	game.c 486
                           3123 ;	genLabel
   070B                    3124 00106$:
                           3125 ;	genAssign
                           3126 ;	AOP_HL for _current_map
   070B 21 04 19           3127 	ld	hl,#_current_map
   070E 36 06              3128 	ld	(hl),#0x06
                           3129 ;	game.c 487
                           3130 ;	genCall
                           3131 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0710 CD 34 04           3132 	call	_map_init
                           3133 ;	game.c 488
                           3134 ;	genGoto
   0713 C3 AD 07           3135 	jp	00122$
                           3136 ;	game.c 490
                           3137 ;	genLabel
   0716                    3138 00107$:
                           3139 ;	genAssign
                           3140 ;	AOP_HL for _current_map
   0716 21 04 19           3141 	ld	hl,#_current_map
   0719 36 07              3142 	ld	(hl),#0x07
                           3143 ;	game.c 491
                           3144 ;	genCall
                           3145 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   071B CD 34 04           3146 	call	_map_init
                           3147 ;	game.c 492
                           3148 ;	genGoto
   071E C3 AD 07           3149 	jp	00122$
                           3150 ;	game.c 494
                           3151 ;	genLabel
   0721                    3152 00108$:
                           3153 ;	genAssign
                           3154 ;	AOP_HL for _current_map
   0721 21 04 19           3155 	ld	hl,#_current_map
   0724 36 08              3156 	ld	(hl),#0x08
                           3157 ;	game.c 495
                           3158 ;	genCall
                           3159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0726 CD 34 04           3160 	call	_map_init
                           3161 ;	game.c 496
                           3162 ;	genGoto
   0729 C3 AD 07           3163 	jp	00122$
                           3164 ;	game.c 498
                           3165 ;	genLabel
   072C                    3166 00109$:
                           3167 ;	genAssign
                           3168 ;	AOP_HL for _current_map
   072C 21 04 19           3169 	ld	hl,#_current_map
   072F 36 09              3170 	ld	(hl),#0x09
                           3171 ;	game.c 499
                           3172 ;	genCall
                           3173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0731 CD 34 04           3174 	call	_map_init
                           3175 ;	game.c 500
                           3176 ;	genGoto
   0734 C3 AD 07           3177 	jp	00122$
                           3178 ;	game.c 502
                           3179 ;	genLabel
   0737                    3180 00110$:
                           3181 ;	genAssign
                           3182 ;	AOP_HL for _current_map
   0737 21 04 19           3183 	ld	hl,#_current_map
   073A 36 0A              3184 	ld	(hl),#0x0A
                           3185 ;	game.c 503
                           3186 ;	genCall
                           3187 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073C CD 34 04           3188 	call	_map_init
                           3189 ;	game.c 504
                           3190 ;	genGoto
   073F C3 AD 07           3191 	jp	00122$
                           3192 ;	game.c 506
                           3193 ;	genLabel
   0742                    3194 00111$:
                           3195 ;	genAssign
                           3196 ;	AOP_HL for _current_map
   0742 21 04 19           3197 	ld	hl,#_current_map
   0745 36 0B              3198 	ld	(hl),#0x0B
                           3199 ;	game.c 507
                           3200 ;	genCall
                           3201 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0747 CD 34 04           3202 	call	_map_init
                           3203 ;	game.c 508
                           3204 ;	genGoto
   074A C3 AD 07           3205 	jp	00122$
                           3206 ;	game.c 510
                           3207 ;	genLabel
   074D                    3208 00112$:
                           3209 ;	genAssign
                           3210 ;	AOP_HL for _current_map
   074D 21 04 19           3211 	ld	hl,#_current_map
   0750 36 0C              3212 	ld	(hl),#0x0C
                           3213 ;	game.c 511
                           3214 ;	genCall
                           3215 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0752 CD 34 04           3216 	call	_map_init
                           3217 ;	game.c 512
                           3218 ;	genGoto
   0755 C3 AD 07           3219 	jp	00122$
                           3220 ;	game.c 514
                           3221 ;	genLabel
   0758                    3222 00113$:
                           3223 ;	genAssign
                           3224 ;	AOP_HL for _current_map
   0758 21 04 19           3225 	ld	hl,#_current_map
   075B 36 0D              3226 	ld	(hl),#0x0D
                           3227 ;	game.c 515
                           3228 ;	genCall
                           3229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   075D CD 34 04           3230 	call	_map_init
                           3231 ;	game.c 516
                           3232 ;	genGoto
   0760 C3 AD 07           3233 	jp	00122$
                           3234 ;	game.c 518
                           3235 ;	genLabel
   0763                    3236 00114$:
                           3237 ;	genAssign
                           3238 ;	AOP_HL for _current_map
   0763 21 04 19           3239 	ld	hl,#_current_map
   0766 36 0E              3240 	ld	(hl),#0x0E
                           3241 ;	game.c 519
                           3242 ;	genCall
                           3243 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0768 CD 34 04           3244 	call	_map_init
                           3245 ;	game.c 520
                           3246 ;	genGoto
   076B C3 AD 07           3247 	jp	00122$
                           3248 ;	game.c 522
                           3249 ;	genLabel
   076E                    3250 00115$:
                           3251 ;	genAssign
                           3252 ;	AOP_HL for _current_map
   076E 21 04 19           3253 	ld	hl,#_current_map
   0771 36 0F              3254 	ld	(hl),#0x0F
                           3255 ;	game.c 523
                           3256 ;	genCall
                           3257 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0773 CD 34 04           3258 	call	_map_init
                           3259 ;	game.c 524
                           3260 ;	genGoto
   0776 C3 AD 07           3261 	jp	00122$
                           3262 ;	game.c 526
                           3263 ;	genLabel
   0779                    3264 00116$:
                           3265 ;	genAssign
                           3266 ;	AOP_HL for _current_map
   0779 21 04 19           3267 	ld	hl,#_current_map
   077C 36 10              3268 	ld	(hl),#0x10
                           3269 ;	game.c 527
                           3270 ;	genCall
                           3271 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   077E CD 34 04           3272 	call	_map_init
                           3273 ;	game.c 528
                           3274 ;	genGoto
   0781 C3 AD 07           3275 	jp	00122$
                           3276 ;	game.c 530
                           3277 ;	genLabel
   0784                    3278 00117$:
                           3279 ;	genAssign
                           3280 ;	AOP_HL for _current_map
   0784 21 04 19           3281 	ld	hl,#_current_map
   0787 36 11              3282 	ld	(hl),#0x11
                           3283 ;	game.c 531
                           3284 ;	genCall
                           3285 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0789 CD 34 04           3286 	call	_map_init
                           3287 ;	game.c 532
                           3288 ;	genGoto
   078C C3 AD 07           3289 	jp	00122$
                           3290 ;	game.c 534
                           3291 ;	genLabel
   078F                    3292 00118$:
                           3293 ;	genAssign
                           3294 ;	AOP_HL for _current_map
   078F 21 04 19           3295 	ld	hl,#_current_map
   0792 36 12              3296 	ld	(hl),#0x12
                           3297 ;	game.c 535
                           3298 ;	genCall
                           3299 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0794 CD 34 04           3300 	call	_map_init
                           3301 ;	game.c 536
                           3302 ;	genGoto
   0797 C3 AD 07           3303 	jp	00122$
                           3304 ;	game.c 538
                           3305 ;	genLabel
   079A                    3306 00119$:
                           3307 ;	genAssign
                           3308 ;	AOP_HL for _current_map
   079A 21 04 19           3309 	ld	hl,#_current_map
   079D 36 13              3310 	ld	(hl),#0x13
                           3311 ;	game.c 539
                           3312 ;	genCall
                           3313 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079F CD 34 04           3314 	call	_map_init
                           3315 ;	game.c 540
                           3316 ;	genGoto
   07A2 C3 AD 07           3317 	jp	00122$
                           3318 ;	game.c 542
                           3319 ;	genLabel
   07A5                    3320 00120$:
                           3321 ;	genAssign
                           3322 ;	AOP_HL for _current_map
   07A5 21 04 19           3323 	ld	hl,#_current_map
   07A8 36 14              3324 	ld	(hl),#0x14
                           3325 ;	game.c 543
                           3326 ;	genCall
                           3327 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07AA CD 34 04           3328 	call	_map_init
                           3329 ;	game.c 545
                           3330 ;	genLabel
   07AD                    3331 00122$:
                           3332 ;	genEndFunction
   07AD E8 02              3333 	lda	sp,2(sp)
   07AF C9                 3334 	ret
   07B0                    3335 ___got_door_end:
                           3336 ;	game.c 550
                           3337 ;	genLabel
                           3338 ;	genFunction
                           3339 ;	---------------------------------
                           3340 ; Function is_ded
                           3341 ; ---------------------------------
   07B0                    3342 ___is_ded_start:
   07B0                    3343 _is_ded:
   07B0 E8 F7              3344 	lda	sp,-9(sp)
                           3345 ;	game.c 556
                           3346 ;	genAssign
                           3347 ;	AOP_STK for 
   07B2 F8 0B              3348 	lda	hl,11(sp)
   07B4 4E                 3349 	ld	c,(hl)
   07B5 23                 3350 	inc	hl
   07B6 46                 3351 	ld	b,(hl)
                           3352 ;	genPointerGet
   07B7 59                 3353 	ld	e,c
   07B8 50                 3354 	ld	d,b
   07B9 1A                 3355 	ld	a,(de)
   07BA 4F                 3356 	ld	c,a
   07BB 13                 3357 	inc	de
   07BC 1A                 3358 	ld	a,(de)
   07BD 47                 3359 	ld	b,a
                           3360 ;	genPlus
                           3361 ;	AOP_STK for _is_ded_sloc0_1_0
                           3362 ;	genPlusIncr
                           3363 ;	Can't optimise plus by inc, falling back to the normal way
   07BE 21 09 00           3364 	ld	hl,#0x0009
   07C1 09                 3365 	add	hl,bc
   07C2 7D                 3366 	ld	a,l
   07C3 54                 3367 	ld	d,h
   07C4 F8 03              3368 	lda	hl,3(sp)
                           3369 ;	genPointerGet
                           3370 ;	AOP_STK for _is_ded_sloc0_1_0
   07C6 22                 3371 	ld	(hl+),a
   07C7 72                 3372 	ld	(hl),d
   07C8 5F                 3373 	ld	e,a
   07C9 1A                 3374 	ld	a,(de)
                           3375 ;	genIfx
   07CA B7                 3376 	or	a,a
   07CB CA ED 07           3377 	jp	z,00102$
                           3378 ;	genPlus
                           3379 ;	AOP_STK for _is_ded_sloc0_1_0
                           3380 ;	genPlusIncr
                           3381 ;	Can't optimise plus by inc, falling back to the normal way
   07CE 21 0B 00           3382 	ld	hl,#0x000B
   07D1 09                 3383 	add	hl,bc
   07D2 7D                 3384 	ld	a,l
   07D3 54                 3385 	ld	d,h
   07D4 F8 03              3386 	lda	hl,3(sp)
                           3387 ;	genPointerGet
                           3388 ;	AOP_STK for _is_ded_sloc0_1_0
                           3389 ;	AOP_STK for _is_ded_sloc1_1_0
   07D6 22                 3390 	ld	(hl+),a
   07D7 72                 3391 	ld	(hl),d
   07D8 5F                 3392 	ld	e,a
   07D9 1A                 3393 	ld	a,(de)
   07DA 2B                 3394 	dec	hl
   07DB 2B                 3395 	dec	hl
                           3396 ;	genCmpEq
                           3397 ;	AOP_STK for _is_ded_sloc1_1_0
                           3398 ; genCmpEq: left 1, right 1, result 0
   07DC 77                 3399 	ld      (hl),a
                           3400 ; Removed redundent load
   07DD FE 01              3401 	cp	a,#0x01
   07DF C2 ED 07           3402 	jp	nz,00102$
   07E2 18 03              3403 	jr	00112$
   07E4                    3404 00111$:
   07E4 C3 ED 07           3405 	jp	00102$
   07E7                    3406 00112$:
                           3407 ;	game.c 557
                           3408 ;	genRet
   07E7 11 00 00           3409 	ld	de,#0x0000
   07EA C3 82 08           3410 	jp	00106$
                           3411 ;	genLabel
   07ED                    3412 00102$:
                           3413 ;	game.c 562
                           3414 ;	genPointerGet
                           3415 ;	AOP_STK for _is_ded_sloc1_1_0
   07ED 0A                 3416 	ld	a,(bc)
   07EE F8 02              3417 	lda	hl,2(sp)
   07F0 77                 3418 	ld	(hl),a
                           3419 ;	genCast
                           3420 ;	AOP_STK for _is_ded_sloc1_1_0
                           3421 ;	AOP_STK for _is_ded_sloc0_1_0
   07F1 2A                 3422 	ld	a,(hl+)
   07F2 22                 3423 	ld	(hl+),a
   07F3 36 00              3424 	ld	(hl),#0x00
                           3425 ;	genRightShift
                           3426 ;	AOP_STK for _is_ded_sloc0_1_0
                           3427 ;	AOP_STK for _is_ded_sloc2_1_0
   07F5 2B                 3428 	dec	hl
   07F6 7E                 3429 	ld	a,(hl)
   07F7 F8 00              3430 	lda	hl,0(sp)
   07F9 77                 3431 	ld	(hl),a
   07FA F8 04              3432 	lda	hl,4(sp)
   07FC 7E                 3433 	ld	a,(hl)
   07FD F8 01              3434 	lda	hl,1(sp)
   07FF 77                 3435 	ld	(hl),a
   0800 CB 3E              3436 	srl	(hl)
   0802 2B                 3437 	dec	hl
   0803 CB 1E              3438 	rr	(hl)
   0805 23                 3439 	inc	hl
   0806 CB 3E              3440 	srl	(hl)
   0808 2B                 3441 	dec	hl
   0809 CB 1E              3442 	rr	(hl)
   080B 23                 3443 	inc	hl
   080C CB 3E              3444 	srl	(hl)
   080E 2B                 3445 	dec	hl
   080F CB 1E              3446 	rr	(hl)
                           3447 ;	genMinus
                           3448 ;	AOP_STK for _is_ded_sloc2_1_0
                           3449 ;	AOP_STK for _is_ded_sloc0_1_0
   0811 5E                 3450 	ld	e,(hl)
   0812 23                 3451 	inc	hl
   0813 56                 3452 	ld	d,(hl)
   0814 21 01 00           3453 	ld	hl,#0x0001
   0817 7B                 3454 	ld	a,e
   0818 95                 3455 	sub	a,l
   0819 5F                 3456 	ld	e,a
   081A 7A                 3457 	ld	a,d
   081B 9C                 3458 	sbc	a,h
   081C F8 04              3459 	lda	hl,4(sp)
   081E 32                 3460 	ld      (hl-),a
   081F 73                 3461 	ld	(hl),e
                           3462 ;	genCast
                           3463 ;	AOP_STK for _is_ded_sloc0_1_0
                           3464 ;	AOP_STK for _is_ded__x_1_1
   0820 7E                 3465 	ld	a,(hl)
   0821 F8 08              3466 	lda	hl,8(sp)
   0823 77                 3467 	ld	(hl),a
                           3468 ;	game.c 563
                           3469 ;	genPlus
                           3470 ;	genPlusIncr
   0824 03                 3471 	inc	bc
                           3472 ;	genPointerGet
   0825 0A                 3473 	ld	a,(bc)
   0826 4F                 3474 	ld	c,a
                           3475 ;	genCast
                           3476 ; Removed redundent load
   0827 06 00              3477 	ld	b,#0x00
                           3478 ;	genRightShift
   0829 CB 38              3479 	srl	b
   082B CB 19              3480 	rr	c
   082D CB 38              3481 	srl	b
   082F CB 19              3482 	rr	c
   0831 CB 38              3483 	srl	b
   0833 CB 19              3484 	rr	c
                           3485 ;	genMinus
   0835 0B                 3486 	dec	bc
   0836 0B                 3487 	dec	bc
                           3488 ;	genCast
                           3489 ;	AOP_STK for _is_ded__y_1_1
   0837 2B                 3490 	dec	hl
   0838 71                 3491 	ld	(hl),c
                           3492 ;	game.c 568
                           3493 ;	genCast
                           3494 ;	AOP_STK for _is_ded__x_1_1
                           3495 ;	AOP_STK for _is_ded_map_position_1_1
   0839 23                 3496 	inc	hl
   083A 7E                 3497 	ld	a,(hl)
   083B F8 05              3498 	lda	hl,5(sp)
   083D 22                 3499 	ld	(hl+),a
   083E 36 00              3500 	ld	(hl),#0x00
                           3501 ;	game.c 569
                           3502 ;	genCast
                           3503 ;	AOP_STK for _is_ded__y_1_1
   0840 23                 3504 	inc	hl
   0841 4E                 3505 	ld	c,(hl)
   0842 06 00              3506 	ld	b,#0x00
                           3507 ;	genMult
   0844 59                 3508 	ld	e,c
   0845 50                 3509 	ld	d,b
   0846 6B                 3510 	ld	l,e
   0847 62                 3511 	ld	h,d
   0848 29                 3512 	add	hl,hl
   0849 29                 3513 	add	hl,hl
   084A 19                 3514 	add	hl,de
   084B 29                 3515 	add	hl,hl
   084C 29                 3516 	add	hl,hl
   084D 4D                 3517 	ld	c,l
   084E 44                 3518 	ld	b,h
                           3519 ;	genPlus
                           3520 ;	AOP_STK for _is_ded_map_position_1_1
                           3521 ;	Can't optimise plus by inc, falling back to the normal way
   084F F8 05              3522 	lda	hl,5(sp)
   0851 2A                 3523 	ld	a,(hl+)
   0852 66                 3524 	ld	h,(hl)
   0853 6F                 3525 	ld	l,a
   0854 09                 3526 	add	hl,bc
   0855 7D                 3527 	ld	a,l
   0856 54                 3528 	ld	d,h
   0857 F8 05              3529 	lda	hl,5(sp)
   0859 22                 3530 	ld	(hl+),a
   085A 72                 3531 	ld	(hl),d
                           3532 ;	game.c 571
                           3533 ;	genPlus
                           3534 ;	AOP_STK for _is_ded_map_position_1_1
                           3535 ;	Can't optimise plus by inc, falling back to the normal way
   085B 11 05 19           3536 	ld	de,#_map
   085E 2B                 3537 	dec	hl
   085F 2A                 3538 	ld	a,(hl+)
   0860 66                 3539 	ld	h,(hl)
   0861 6F                 3540 	ld	l,a
   0862 19                 3541 	add	hl,de
   0863 4D                 3542 	ld	c,l
   0864 44                 3543 	ld	b,h
                           3544 ;	genPointerGet
   0865 0A                 3545 	ld	a,(bc)
   0866 4F                 3546 	ld	c,a
                           3547 ;	genCast
                           3548 ; Removed redundent load
   0867 06 00              3549 	ld	b,#0x00
                           3550 ;	genCmpEq
                           3551 ; genCmpEq: left 2, right 2, result 0
   0869 79                 3552 	ld	a,c
   086A FE 0B              3553 	cp	a,#0x0B
   086C C2 76 08           3554 	jp	nz,00117$
   086F 78                 3555 	ld	a,b
   0870 B7                 3556 	or	a,a
   0871 C2 7F 08           3557 	jp	nz,00105$
   0874 18 03              3558 	jr	00118$
   0876                    3559 00117$:
   0876 C3 7F 08           3560 	jp	00105$
   0879                    3561 00118$:
                           3562 ;	game.c 575
                           3563 ;	genRet
   0879 11 01 00           3564 	ld	de,#0x0001
   087C C3 82 08           3565 	jp	00106$
                           3566 ;	game.c 576
                           3567 ;	genLabel
   087F                    3568 00105$:
                           3569 ;	game.c 577
                           3570 ;	genRet
   087F 11 00 00           3571 	ld	de,#0x0000
                           3572 ;	genLabel
   0882                    3573 00106$:
                           3574 ;	genEndFunction
   0882 E8 09              3575 	lda	sp,9(sp)
   0884 C9                 3576 	ret
   0885                    3577 ___is_ded_end:
                           3578 ;	game.c 582
                           3579 ;	genLabel
                           3580 ;	genFunction
                           3581 ;	---------------------------------
                           3582 ; Function ice_should_slide
                           3583 ; ---------------------------------
   0885                    3584 ___ice_should_slide_start:
   0885                    3585 _ice_should_slide:
                           3586 	
                           3587 ;	game.c 584
                           3588 ;	genPlus
                           3589 ;	AOP_STK for 
                           3590 ;	Can't optimise plus by inc, falling back to the normal way
   0885 11 05 19           3591 	ld	de,#_map
   0888 F8 02              3592 	lda	hl,2(sp)
   088A 2A                 3593 	ld	a,(hl+)
   088B 66                 3594 	ld	h,(hl)
   088C 6F                 3595 	ld	l,a
   088D 19                 3596 	add	hl,de
   088E 4D                 3597 	ld	c,l
   088F 44                 3598 	ld	b,h
                           3599 ;	genPointerGet
   0890 0A                 3600 	ld	a,(bc)
   0891 4F                 3601 	ld	c,a
                           3602 ;	genCast
                           3603 ; Removed redundent load
   0892 06 00              3604 	ld	b,#0x00
                           3605 ;	genCmpEq
                           3606 ; genCmpEq: left 2, right 2, result 0
   0894 79                 3607 	ld	a,c
   0895 FE 0D              3608 	cp	a,#0x0D
   0897 C2 9F 08           3609 	jp	nz,00107$
   089A 78                 3610 	ld	a,b
   089B B7                 3611 	or	a,a
   089C CA AF 08           3612 	jp	z,00101$
   089F                    3613 00107$:
                           3614 ;	genCmpEq
                           3615 ; genCmpEq: left 2, right 2, result 0
   089F 79                 3616 	ld	a,c
   08A0 FE 0E              3617 	cp	a,#0x0E
   08A2 C2 AC 08           3618 	jp	nz,00108$
   08A5 78                 3619 	ld	a,b
   08A6 B7                 3620 	or	a,a
   08A7 C2 BF 08           3621 	jp	nz,00104$
   08AA 18 03              3622 	jr	00109$
   08AC                    3623 00108$:
   08AC C3 BF 08           3624 	jp	00104$
   08AF                    3625 00109$:
                           3626 ;	genLabel
   08AF                    3627 00101$:
                           3628 ;	game.c 585
                           3629 ;	genIpush
                           3630 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3631 ;	AOP_STK for 
   08AF F8 04              3632 	lda	hl,4(sp)
   08B1 7E                 3633 	ld	a,(hl)
   08B2 F5                 3634 	push	af
   08B3 33                 3635 	inc	sp
                           3636 ;	genIpush
                           3637 ;	AOP_STK for 
   08B4 2B                 3638 	dec	hl
   08B5 2B                 3639 	dec	hl
   08B6 2A                 3640 	ld	a,(hl+)
   08B7 66                 3641 	ld	h,(hl)
   08B8 6F                 3642 	ld	l,a
   08B9 E5                 3643 	push	hl
                           3644 ;	genCall
   08BA CD 3E 0A           3645 	call	__get_next_map_position
   08BD E8 03              3646 	lda	sp,3(sp)
                           3647 ;	genLabel
   08BF                    3648 00104$:
                           3649 ;	genEndFunction
                           3650 	
   08BF C9                 3651 	ret
   08C0                    3652 ___ice_should_slide_end:
                           3653 ;	game.c 589
                           3654 ;	genLabel
                           3655 ;	genFunction
                           3656 ;	---------------------------------
                           3657 ; Function dog1_power
                           3658 ; ---------------------------------
   08C0                    3659 ___dog1_power_start:
   08C0                    3660 _dog1_power:
   08C0 E8 F8              3661 	lda	sp,-8(sp)
                           3662 ;	game.c 593
                           3663 ;	genAssign
                           3664 ;	AOP_HL for _player
   08C2 21 AE 1A           3665 	ld	hl,#_player
   08C5 4E                 3666 	ld	c,(hl)
   08C6 23                 3667 	inc	hl
   08C7 46                 3668 	ld	b,(hl)
                           3669 ;	genPlus
                           3670 ;	genPlusIncr
   08C8 03                 3671 	inc	bc
   08C9 03                 3672 	inc	bc
   08CA 03                 3673 	inc	bc
   08CB 03                 3674 	inc	bc
                           3675 ;	genPointerGet
   08CC 0A                 3676 	ld	a,(bc)
   08CD 4F                 3677 	ld	c,a
                           3678 ;	genAssign
                           3679 ;	AOP_HL for _player
                           3680 ;	AOP_STK for _dog1_power_sloc0_1_0
   08CE 2B                 3681 	dec	hl
   08CF 2A                 3682 	ld	a,(hl+)
   08D0 5E                 3683 	ld	e,(hl)
   08D1 F8 02              3684 	lda	hl,2(sp)
   08D3 22                 3685 	ld	(hl+),a
   08D4 73                 3686 	ld	(hl),e
                           3687 ;	genPlus
                           3688 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3689 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3690 ;	genPlusIncr
                           3691 ;	Can't optimise plus by inc, falling back to the normal way
   08D5 2B                 3692 	dec	hl
   08D6 5E                 3693 	ld	e,(hl)
   08D7 23                 3694 	inc	hl
   08D8 56                 3695 	ld	d,(hl)
   08D9 21 0B 00           3696 	ld	hl,#0x000B
   08DC 19                 3697 	add	hl,de
   08DD 7D                 3698 	ld	a,l
   08DE 54                 3699 	ld	d,h
   08DF F8 00              3700 	lda	hl,0(sp)
                           3701 ;	genPointerGet
                           3702 ;	AOP_STK for _dog1_power_sloc1_1_0
   08E1 22                 3703 	ld	(hl+),a
   08E2 72                 3704 	ld	(hl),d
   08E3 5F                 3705 	ld	e,a
   08E4 1A                 3706 	ld	a,(de)
   08E5 47                 3707 	ld	b,a
                           3708 ;	genIpush
                           3709 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08E6 79                 3710 	ld	a,c
   08E7 F5                 3711 	push	af
   08E8 33                 3712 	inc	sp
                           3713 ;	genIpush
   08E9 78                 3714 	ld	a,b
   08EA F5                 3715 	push	af
   08EB 33                 3716 	inc	sp
                           3717 ;	genCall
   08EC CD 00 00           3718 	call	_set_sprite_tile
   08EF E8 02              3719 	lda	sp,2(sp)
                           3720 ;	game.c 595
                           3721 ;	genAssign
                           3722 ;	AOP_HL for _player
   08F1 21 AE 1A           3723 	ld	hl,#_player
   08F4 4E                 3724 	ld	c,(hl)
   08F5 23                 3725 	inc	hl
   08F6 46                 3726 	ld	b,(hl)
                           3727 ;	genPlus
                           3728 ;	genPlusIncr
   08F7 03                 3729 	inc	bc
                           3730 ;	genPointerGet
   08F8 0A                 3731 	ld	a,(bc)
   08F9 4F                 3732 	ld	c,a
                           3733 ;	genAssign
                           3734 ;	AOP_HL for _player
                           3735 ;	AOP_STK for _dog1_power_sloc1_1_0
   08FA 2B                 3736 	dec	hl
   08FB 2A                 3737 	ld	a,(hl+)
   08FC 5E                 3738 	ld	e,(hl)
   08FD F8 00              3739 	lda	hl,0(sp)
   08FF 22                 3740 	ld	(hl+),a
   0900 73                 3741 	ld	(hl),e
                           3742 ;	genPointerGet
                           3743 ;	AOP_STK for _dog1_power_sloc1_1_0
   0901 2B                 3744 	dec	hl
   0902 5E                 3745 	ld	e,(hl)
   0903 23                 3746 	inc	hl
   0904 56                 3747 	ld	d,(hl)
   0905 1A                 3748 	ld	a,(de)
   0906 47                 3749 	ld	b,a
                           3750 ;	genIpush
                           3751 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0907 79                 3752 	ld	a,c
   0908 F5                 3753 	push	af
   0909 33                 3754 	inc	sp
                           3755 ;	genIpush
   090A 78                 3756 	ld	a,b
   090B F5                 3757 	push	af
   090C 33                 3758 	inc	sp
                           3759 ;	genCall
   090D CD 16 0C           3760 	call	_get_player_map_position
   0910 42                 3761 	ld	b,d
   0911 4B                 3762 	ld	c,e
   0912 E8 02              3763 	lda	sp,2(sp)
                           3764 ;	genAssign
                           3765 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0914 F8 06              3766 	lda	hl,6(sp)
   0916 71                 3767 	ld	(hl),c
   0917 23                 3768 	inc	hl
   0918 70                 3769 	ld	(hl),b
                           3770 ;	game.c 597
                           3771 ;	genAssign
                           3772 ;	AOP_HL for _player
   0919 21 AE 1A           3773 	ld	hl,#_player
   091C 4E                 3774 	ld	c,(hl)
   091D 23                 3775 	inc	hl
   091E 46                 3776 	ld	b,(hl)
                           3777 ;	genPlus
                           3778 ;	genPlusIncr
                           3779 ;	Can't optimise plus by inc, falling back to the normal way
   091F 79                 3780 	ld	a,c
   0920 C6 08              3781 	add	a,#0x08
   0922 4F                 3782 	ld	c,a
   0923 78                 3783 	ld	a,b
   0924 CE 00              3784 	adc	a,#0x00
   0926 47                 3785 	ld	b,a
                           3786 ;	genPointerGet
   0927 0A                 3787 	ld	a,(bc)
                           3788 ;	genIpush
                           3789 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0928 4F                 3790 	ld	c,a
   0929 F5                 3791 	push	af
   092A 33                 3792 	inc	sp
                           3793 ;	genIpush
                           3794 ;	AOP_STK for _dog1_power_map_position_block_1_1
   092B F8 07              3795 	lda	hl,7(sp)
   092D 2A                 3796 	ld	a,(hl+)
   092E 66                 3797 	ld	h,(hl)
   092F 6F                 3798 	ld	l,a
   0930 E5                 3799 	push	hl
                           3800 ;	genCall
   0931 CD 3E 0A           3801 	call	__get_next_map_position
   0934 42                 3802 	ld	b,d
   0935 4B                 3803 	ld	c,e
   0936 E8 03              3804 	lda	sp,3(sp)
                           3805 ;	genAssign
                           3806 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0938 F8 06              3807 	lda	hl,6(sp)
   093A 71                 3808 	ld	(hl),c
   093B 23                 3809 	inc	hl
   093C 70                 3810 	ld	(hl),b
                           3811 ;	game.c 598
                           3812 ;	genAssign
                           3813 ;	AOP_HL for _player
   093D 21 AE 1A           3814 	ld	hl,#_player
   0940 4E                 3815 	ld	c,(hl)
   0941 23                 3816 	inc	hl
   0942 46                 3817 	ld	b,(hl)
                           3818 ;	genPlus
                           3819 ;	genPlusIncr
                           3820 ;	Can't optimise plus by inc, falling back to the normal way
   0943 79                 3821 	ld	a,c
   0944 C6 08              3822 	add	a,#0x08
   0946 4F                 3823 	ld	c,a
   0947 78                 3824 	ld	a,b
   0948 CE 00              3825 	adc	a,#0x00
   094A 47                 3826 	ld	b,a
                           3827 ;	genPointerGet
   094B 0A                 3828 	ld	a,(bc)
                           3829 ;	genIpush
                           3830 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   094C 4F                 3831 	ld	c,a
   094D F5                 3832 	push	af
   094E 33                 3833 	inc	sp
                           3834 ;	genIpush
                           3835 ;	AOP_STK for _dog1_power_map_position_block_1_1
   094F F8 07              3836 	lda	hl,7(sp)
   0951 2A                 3837 	ld	a,(hl+)
   0952 66                 3838 	ld	h,(hl)
   0953 6F                 3839 	ld	l,a
   0954 E5                 3840 	push	hl
                           3841 ;	genCall
   0955 CD 3E 0A           3842 	call	__get_next_map_position
   0958 42                 3843 	ld	b,d
   0959 4B                 3844 	ld	c,e
   095A E8 03              3845 	lda	sp,3(sp)
                           3846 ;	genAssign
                           3847 ;	AOP_STK for _dog1_power_map_position_next_1_1
   095C F8 04              3848 	lda	hl,4(sp)
   095E 71                 3849 	ld	(hl),c
   095F 23                 3850 	inc	hl
   0960 70                 3851 	ld	(hl),b
                           3852 ;	game.c 601
                           3853 ;	genPlus
                           3854 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3855 ;	Can't optimise plus by inc, falling back to the normal way
   0961 11 05 19           3856 	ld	de,#_map
   0964 23                 3857 	inc	hl
   0965 2A                 3858 	ld	a,(hl+)
   0966 66                 3859 	ld	h,(hl)
   0967 6F                 3860 	ld	l,a
   0968 19                 3861 	add	hl,de
   0969 4D                 3862 	ld	c,l
   096A 44                 3863 	ld	b,h
                           3864 ;	genPointerGet
                           3865 ;	AOP_STK for _dog1_power_sloc1_1_0
   096B 0A                 3866 	ld	a,(bc)
   096C F8 00              3867 	lda	hl,0(sp)
   096E 77                 3868 	ld	(hl),a
                           3869 ;	genCast
                           3870 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3871 ;	AOP_STK for _dog1_power_sloc0_1_0
   096F 2A                 3872 	ld	a,(hl+)
   0970 23                 3873 	inc	hl
   0971 22                 3874 	ld	(hl+),a
   0972 36 00              3875 	ld	(hl),#0x00
                           3876 ;	genCmpEq
                           3877 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3878 ; genCmpEq: left 2, right 2, result 0
   0974 2B                 3879 	dec	hl
   0975 7E                 3880 	ld	a,(hl)
   0976 FE 2D              3881 	cp	a,#0x2D
   0978 C2 83 09           3882 	jp	nz,00114$
   097B 23                 3883 	inc	hl
   097C 7E                 3884 	ld	a,(hl)
   097D B7                 3885 	or	a,a
   097E C2 0E 0A           3886 	jp	nz,00107$
   0981 18 03              3887 	jr	00115$
   0983                    3888 00114$:
   0983 C3 0E 0A           3889 	jp	00107$
   0986                    3890 00115$:
                           3891 ;	game.c 608
                           3892 ;	genPlus
                           3893 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3894 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3895 ;	Can't optimise plus by inc, falling back to the normal way
   0986 11 05 19           3896 	ld	de,#_map
   0989 F8 04              3897 	lda	hl,4(sp)
   098B 2A                 3898 	ld	a,(hl+)
   098C 66                 3899 	ld	h,(hl)
   098D 6F                 3900 	ld	l,a
   098E 19                 3901 	add	hl,de
   098F 7D                 3902 	ld	a,l
   0990 54                 3903 	ld	d,h
   0991 F8 00              3904 	lda	hl,0(sp)
                           3905 ;	genPointerGet
                           3906 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3907 ;	AOP_STK for _dog1_power_sloc0_1_0
   0993 22                 3908 	ld	(hl+),a
   0994 72                 3909 	ld	(hl),d
   0995 5F                 3910 	ld	e,a
   0996 1A                 3911 	ld	a,(de)
   0997 23                 3912 	inc	hl
                           3913 ;	genCast
                           3914 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3915 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3916 ; Removed redundent load
   0998 32                 3917 	ld      (hl-),a
   0999 2B                 3918 	dec	hl
   099A 22                 3919 	ld	(hl+),a
   099B 36 00              3920 	ld	(hl),#0x00
                           3921 ;	genCmpLt
                           3922 ;	AOP_STK for _dog1_power_sloc1_1_0
   099D 2B                 3923 	dec	hl
   099E 7E                 3924 	ld	a,(hl)
   099F D6 0F              3925 	sub	a,#0x0F
   09A1 23                 3926 	inc	hl
   09A2 7E                 3927 	ld	a,(hl)
   09A3 DE 00              3928 	sbc	a,#0x00
   09A5 DA D6 09           3929 	jp	c,00101$
                           3930 ;	game.c 609
                           3931 ;	genCmpEq
                           3932 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3933 ; genCmpEq: left 2, right 2, result 0
   09A8 2B                 3934 	dec	hl
   09A9 7E                 3935 	ld	a,(hl)
   09AA FE 2F              3936 	cp	a,#0x2F
   09AC C2 B5 09           3937 	jp	nz,00116$
   09AF 23                 3938 	inc	hl
   09B0 7E                 3939 	ld	a,(hl)
   09B1 B7                 3940 	or	a,a
   09B2 CA D6 09           3941 	jp	z,00101$
   09B5                    3942 00116$:
                           3943 ;	game.c 610
                           3944 ;	genCmpEq
                           3945 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3946 ; genCmpEq: left 2, right 2, result 0
   09B5 F8 00              3947 	lda	hl,0(sp)
   09B7 7E                 3948 	ld	a,(hl)
   09B8 FE 30              3949 	cp	a,#0x30
   09BA C2 C3 09           3950 	jp	nz,00117$
   09BD 23                 3951 	inc	hl
   09BE 7E                 3952 	ld	a,(hl)
   09BF B7                 3953 	or	a,a
   09C0 CA D6 09           3954 	jp	z,00101$
   09C3                    3955 00117$:
                           3956 ;	game.c 611
                           3957 ;	genCmpEq
                           3958 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3959 ; genCmpEq: left 2, right 2, result 0
   09C3 F8 00              3960 	lda	hl,0(sp)
   09C5 7E                 3961 	ld	a,(hl)
   09C6 FE 2A              3962 	cp	a,#0x2A
   09C8 C2 D3 09           3963 	jp	nz,00118$
   09CB 23                 3964 	inc	hl
   09CC 7E                 3965 	ld	a,(hl)
   09CD B7                 3966 	or	a,a
   09CE C2 0E 0A           3967 	jp	nz,00107$
   09D1 18 03              3968 	jr	00119$
   09D3                    3969 00118$:
   09D3 C3 0E 0A           3970 	jp	00107$
   09D6                    3971 00119$:
                           3972 ;	genLabel
   09D6                    3973 00101$:
                           3974 ;	game.c 612
                           3975 ;	genAssign (pointer)
   09D6 3E 2F              3976 	ld	a,#0x2F
   09D8 02                 3977 	ld	(bc),a
                           3978 ;	game.c 613
                           3979 ;	genIpush
                           3980 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09D9 21 05 19           3981 	ld	hl,#_map
   09DC E5                 3982 	push	hl
                           3983 ;	genIpush
   09DD 21 14 12           3984 	ld	hl,#0x1214
   09E0 E5                 3985 	push	hl
                           3986 ;	genIpush
   09E1 21 00 00           3987 	ld	hl,#0x0000
   09E4 E5                 3988 	push	hl
                           3989 ;	genCall
   09E5 CD 00 00           3990 	call	_set_bkg_tiles
   09E8 E8 06              3991 	lda	sp,6(sp)
                           3992 ;	game.c 614
                           3993 ;	genAssign
                           3994 ;	AOP_HL for _player
   09EA 21 AE 1A           3995 	ld	hl,#_player
   09ED 4E                 3996 	ld	c,(hl)
   09EE 23                 3997 	inc	hl
   09EF 46                 3998 	ld	b,(hl)
                           3999 ;	genPlus
                           4000 ;	genPlusIncr
                           4001 ;	Can't optimise plus by inc, falling back to the normal way
   09F0 79                 4002 	ld	a,c
   09F1 C6 08              4003 	add	a,#0x08
   09F3 4F                 4004 	ld	c,a
   09F4 78                 4005 	ld	a,b
   09F5 CE 00              4006 	adc	a,#0x00
   09F7 47                 4007 	ld	b,a
                           4008 ;	genPointerGet
   09F8 0A                 4009 	ld	a,(bc)
   09F9 4F                 4010 	ld	c,a
                           4011 ;	genIpush
                           4012 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4013 ;	AOP_STK for _dog1_power_map_position_next_1_1
   09FA F8 04              4014 	lda	hl,4(sp)
   09FC 2A                 4015 	ld	a,(hl+)
   09FD 66                 4016 	ld	h,(hl)
   09FE 6F                 4017 	ld	l,a
   09FF E5                 4018 	push	hl
                           4019 ;	genIpush
   0A00 79                 4020 	ld	a,c
   0A01 F5                 4021 	push	af
   0A02 33                 4022 	inc	sp
                           4023 ;	genIpush
                           4024 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A03 F8 09              4025 	lda	hl,9(sp)
   0A05 2A                 4026 	ld	a,(hl+)
   0A06 66                 4027 	ld	h,(hl)
   0A07 6F                 4028 	ld	l,a
   0A08 E5                 4029 	push	hl
                           4030 ;	genCall
   0A09 CD F2 0A           4031 	call	_dog1_power_apply
   0A0C E8 05              4032 	lda	sp,5(sp)
                           4033 ;	game.c 625
                           4034 ;	genLabel
   0A0E                    4035 00107$:
                           4036 ;	game.c 630
                           4037 ;	genAssign
                           4038 ;	AOP_HL for _player
   0A0E 21 AE 1A           4039 	ld	hl,#_player
   0A11 4E                 4040 	ld	c,(hl)
   0A12 23                 4041 	inc	hl
   0A13 46                 4042 	ld	b,(hl)
                           4043 ;	genPlus
                           4044 ;	genPlusIncr
   0A14 03                 4045 	inc	bc
   0A15 03                 4046 	inc	bc
                           4047 ;	genPointerGet
   0A16 0A                 4048 	ld	a,(bc)
   0A17 4F                 4049 	ld	c,a
                           4050 ;	genAssign
                           4051 ;	AOP_HL for _player
                           4052 ;	AOP_STK for _dog1_power_sloc1_1_0
   0A18 2B                 4053 	dec	hl
   0A19 2A                 4054 	ld	a,(hl+)
   0A1A 5E                 4055 	ld	e,(hl)
   0A1B F8 00              4056 	lda	hl,0(sp)
   0A1D 22                 4057 	ld	(hl+),a
   0A1E 73                 4058 	ld	(hl),e
                           4059 ;	genPlus
                           4060 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4061 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4062 ;	genPlusIncr
                           4063 ;	Can't optimise plus by inc, falling back to the normal way
   0A1F 2B                 4064 	dec	hl
   0A20 5E                 4065 	ld	e,(hl)
   0A21 23                 4066 	inc	hl
   0A22 56                 4067 	ld	d,(hl)
   0A23 21 0B 00           4068 	ld	hl,#0x000B
   0A26 19                 4069 	add	hl,de
   0A27 7D                 4070 	ld	a,l
   0A28 54                 4071 	ld	d,h
   0A29 F8 02              4072 	lda	hl,2(sp)
                           4073 ;	genPointerGet
                           4074 ;	AOP_STK for _dog1_power_sloc0_1_0
   0A2B 22                 4075 	ld	(hl+),a
   0A2C 72                 4076 	ld	(hl),d
   0A2D 5F                 4077 	ld	e,a
   0A2E 1A                 4078 	ld	a,(de)
   0A2F 47                 4079 	ld	b,a
                           4080 ;	genIpush
                           4081 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A30 79                 4082 	ld	a,c
   0A31 F5                 4083 	push	af
   0A32 33                 4084 	inc	sp
                           4085 ;	genIpush
   0A33 78                 4086 	ld	a,b
   0A34 F5                 4087 	push	af
   0A35 33                 4088 	inc	sp
                           4089 ;	genCall
   0A36 CD 00 00           4090 	call	_set_sprite_tile
   0A39 E8 02              4091 	lda	sp,2(sp)
                           4092 ;	genLabel
   0A3B                    4093 00108$:
                           4094 ;	genEndFunction
   0A3B E8 08              4095 	lda	sp,8(sp)
   0A3D C9                 4096 	ret
   0A3E                    4097 ___dog1_power_end:
                           4098 ;	game.c 633
                           4099 ;	genLabel
                           4100 ;	genFunction
                           4101 ;	---------------------------------
                           4102 ; Function _get_next_map_position
                           4103 ; ---------------------------------
   0A3E                    4104 ____get_next_map_position_start:
   0A3E                    4105 __get_next_map_position:
   0A3E E8 FE              4106 	lda	sp,-2(sp)
                           4107 ;	game.c 634
                           4108 ;	genCmpLt
                           4109 ;	AOP_STK for 
   0A40 F8 06              4110 	lda	hl,6(sp)
   0A42 7E                 4111 	ld	a,(hl)
   0A43 FE 01              4112 	cp	#0x01
   0A45 DA EA 0A           4113 	jp	c,00113$
                           4114 ;	genCmpGt
                           4115 ;	AOP_STK for 
   0A48 3E 04              4116 	ld	a,#0x04
   0A4A 96                 4117 	sub	a,(hl)
   0A4B DA EA 0A           4118 	jp	c,00113$
                           4119 ;	genMinus
                           4120 ;	AOP_STK for 
   0A4E 7E                 4121 	ld	a,(hl)
   0A4F C6 FF              4122 	add	a,#0xFF
   0A51 4F                 4123 	ld	c,a
                           4124 ;	genJumpTab
   0A52 59                 4125 	ld	e,c
   0A53 16 00              4126 	ld	d,#0x00
   0A55 21 5C 0A           4127 	ld	hl,#00122$
   0A58 19                 4128 	add	hl,de
   0A59 19                 4129 	add	hl,de
   0A5A 19                 4130 	add	hl,de
   0A5B E9                 4131 	jp	(hl)
   0A5C                    4132 00122$:
   0A5C C3 68 0A           4133 	jp	00103$
   0A5F C3 87 0A           4134 	jp	00106$
   0A62 C3 AD 0A           4135 	jp	00109$
   0A65 C3 CA 0A           4136 	jp	00112$
                           4137 ;	game.c 639
                           4138 ;	genLabel
   0A68                    4139 00103$:
                           4140 ;	game.c 636
                           4141 ;	genCmpGt
                           4142 ;	AOP_STK for 
   0A68 3E 14              4143 	ld	a,#0x14
   0A6A F8 04              4144 	lda	hl,4(sp)
   0A6C 96                 4145 	sub	a,(hl)
   0A6D 3E 00              4146 	ld	a,#0x00
   0A6F 23                 4147 	inc	hl
   0A70 9E                 4148 	sbc	a,(hl)
   0A71 D2 EA 0A           4149 	jp	nc,00113$
                           4150 ;	game.c 637
                           4151 ;	genMinus
                           4152 ;	AOP_STK for 
   0A74 2B                 4153 	dec	hl
   0A75 5E                 4154 	ld	e,(hl)
   0A76 23                 4155 	inc	hl
   0A77 56                 4156 	ld	d,(hl)
   0A78 21 14 00           4157 	ld	hl,#0x0014
   0A7B 7B                 4158 	ld	a,e
   0A7C 95                 4159 	sub	a,l
   0A7D 5F                 4160 	ld	e,a
   0A7E 7A                 4161 	ld	a,d
   0A7F 9C                 4162 	sbc	a,h
   0A80 F8 05              4163 	lda	hl,5(sp)
   0A82 32                 4164 	ld      (hl-),a
   0A83 73                 4165 	ld	(hl),e
                           4166 ;	game.c 639
                           4167 ;	genGoto
   0A84 C3 EA 0A           4168 	jp	00113$
                           4169 ;	game.c 644
                           4170 ;	genLabel
   0A87                    4171 00106$:
                           4172 ;	game.c 641
                           4173 ;	genPlus
                           4174 ;	AOP_STK for 
                           4175 ;	genPlusIncr
   0A87 F8 04              4176 	lda	hl,4(sp)
   0A89 4E                 4177 	ld	c,(hl)
   0A8A 23                 4178 	inc	hl
   0A8B 46                 4179 	ld	b,(hl)
   0A8C 03                 4180 	inc	bc
                           4181 ;	genIpush
                           4182 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A8D C5                 4183 	push	bc
   0A8E 21 14 00           4184 	ld	hl,#0x0014
   0A91 E5                 4185 	push	hl
                           4186 ;	genIpush
   0A92 C5                 4187 	push	bc
                           4188 ;	genCall
   0A93 CD 00 00           4189 	call	__moduint_rrx_s
                           4190 ;	AOP_STK for __get_next_map_position_sloc0_1_0
   0A96 F8 07              4191 	lda	hl,7(sp)
   0A98 72                 4192 	ld	(hl),d
   0A99 2B                 4193 	dec	hl
   0A9A 73                 4194 	ld	(hl),e
   0A9B E8 04              4195 	lda	sp,4(sp)
   0A9D C1                 4196 	pop	bc
                           4197 ;	genCmpEq
                           4198 ;	AOP_STK for __get_next_map_position_sloc0_1_0
                           4199 ; genCmpEq: left 2, right 2, result 0
   0A9E F8 00              4200 	lda	hl,0(sp)
   0AA0 2A                 4201 	ld	a,(hl+)
   0AA1 B6                 4202 	or	a,(hl)
   0AA2 CA EA 0A           4203 	jp	z,00113$
   0AA5                    4204 00123$:
                           4205 ;	game.c 642
                           4206 ;	genAssign
                           4207 ;	(registers are the same)
                           4208 ;	genAssign
                           4209 ;	AOP_STK for 
   0AA5 F8 04              4210 	lda	hl,4(sp)
   0AA7 71                 4211 	ld	(hl),c
   0AA8 23                 4212 	inc	hl
   0AA9 70                 4213 	ld	(hl),b
                           4214 ;	game.c 644
                           4215 ;	genGoto
   0AAA C3 EA 0A           4216 	jp	00113$
                           4217 ;	game.c 649
                           4218 ;	genLabel
   0AAD                    4219 00109$:
                           4220 ;	game.c 646
                           4221 ;	genCmpLt
                           4222 ;	AOP_STK for 
   0AAD F8 04              4223 	lda	hl,4(sp)
   0AAF 7E                 4224 	ld	a,(hl)
   0AB0 D6 54              4225 	sub	a,#0x54
   0AB2 23                 4226 	inc	hl
   0AB3 7E                 4227 	ld	a,(hl)
   0AB4 DE 01              4228 	sbc	a,#0x01
   0AB6 D2 EA 0A           4229 	jp	nc,00113$
                           4230 ;	game.c 647
                           4231 ;	genPlus
                           4232 ;	AOP_STK for 
                           4233 ;	genPlusIncr
                           4234 ;	Can't optimise plus by inc, falling back to the normal way
   0AB9 2B                 4235 	dec	hl
   0ABA 5E                 4236 	ld	e,(hl)
   0ABB 23                 4237 	inc	hl
   0ABC 56                 4238 	ld	d,(hl)
   0ABD 21 14 00           4239 	ld	hl,#0x0014
   0AC0 19                 4240 	add	hl,de
   0AC1 7D                 4241 	ld	a,l
   0AC2 54                 4242 	ld	d,h
   0AC3 F8 04              4243 	lda	hl,4(sp)
   0AC5 22                 4244 	ld	(hl+),a
   0AC6 72                 4245 	ld	(hl),d
                           4246 ;	game.c 649
                           4247 ;	genGoto
   0AC7 C3 EA 0A           4248 	jp	00113$
                           4249 ;	game.c 655
                           4250 ;	genLabel
   0ACA                    4251 00112$:
                           4252 ;	game.c 651
                           4253 ;	genIpush
                           4254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ACA 21 14 00           4255 	ld	hl,#0x0014
   0ACD E5                 4256 	push	hl
                           4257 ;	genIpush
                           4258 ;	AOP_STK for 
   0ACE F8 06              4259 	lda	hl,6(sp)
   0AD0 2A                 4260 	ld	a,(hl+)
   0AD1 66                 4261 	ld	h,(hl)
   0AD2 6F                 4262 	ld	l,a
   0AD3 E5                 4263 	push	hl
                           4264 ;	genCall
   0AD4 CD 00 00           4265 	call	__moduint_rrx_s
   0AD7 42                 4266 	ld	b,d
   0AD8 4B                 4267 	ld	c,e
   0AD9 E8 04              4268 	lda	sp,4(sp)
                           4269 ;	genCmpEq
                           4270 ; genCmpEq: left 2, right 2, result 0
   0ADB 79                 4271 	ld	a,c
   0ADC B0                 4272 	or	a,b
   0ADD CA EA 0A           4273 	jp	z,00113$
   0AE0                    4274 00124$:
                           4275 ;	game.c 652
                           4276 ;	genMinus
                           4277 ;	AOP_STK for 
   0AE0 F8 04              4278 	lda	hl,4(sp)
   0AE2 5E                 4279 	ld	e,(hl)
   0AE3 23                 4280 	inc	hl
   0AE4 56                 4281 	ld	d,(hl)
   0AE5 1B                 4282 	dec	de
   0AE6 2B                 4283 	dec	hl
   0AE7 73                 4284 	ld	(hl),e
   0AE8 23                 4285 	inc	hl
   0AE9 72                 4286 	ld	(hl),d
                           4287 ;	game.c 656
                           4288 ;	genLabel
   0AEA                    4289 00113$:
                           4290 ;	game.c 657
                           4291 ;	genRet
                           4292 ;	AOP_STK for 
   0AEA F8 04              4293 	lda	hl,4(sp)
   0AEC 5E                 4294 	ld	e,(hl)
   0AED 23                 4295 	inc	hl
   0AEE 56                 4296 	ld	d,(hl)
                           4297 ;	genLabel
   0AEF                    4298 00114$:
                           4299 ;	genEndFunction
   0AEF E8 02              4300 	lda	sp,2(sp)
   0AF1 C9                 4301 	ret
   0AF2                    4302 ____get_next_map_position_end:
                           4303 ;	game.c 660
                           4304 ;	genLabel
                           4305 ;	genFunction
                           4306 ;	---------------------------------
                           4307 ; Function dog1_power_apply
                           4308 ; ---------------------------------
   0AF2                    4309 ___dog1_power_apply_start:
   0AF2                    4310 _dog1_power_apply:
   0AF2 E8 FD              4311 	lda	sp,-3(sp)
                           4312 ;	game.c 666
                           4313 ;	genIpush
                           4314 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AF4 21 14 00           4315 	ld	hl,#0x0014
   0AF7 E5                 4316 	push	hl
                           4317 ;	genIpush
                           4318 ;	AOP_STK for 
   0AF8 F8 07              4319 	lda	hl,7(sp)
   0AFA 2A                 4320 	ld	a,(hl+)
   0AFB 66                 4321 	ld	h,(hl)
   0AFC 6F                 4322 	ld	l,a
   0AFD E5                 4323 	push	hl
                           4324 ;	genCall
   0AFE CD 00 00           4325 	call	__divuint_rrx_s
   0B01 42                 4326 	ld	b,d
   0B02 4B                 4327 	ld	c,e
   0B03 E8 04              4328 	lda	sp,4(sp)
                           4329 ;	genLeftShift
   0B05 3E 04              4330 	ld	a,#0x03+1
   0B07 18 04              4331 	jr	00122$
   0B09                    4332 00121$:
   0B09 CB 21              4333 	sla	c
   0B0B CB 10              4334 	rl	b
   0B0D                    4335 00122$:
   0B0D 3D                 4336 	dec	a
   0B0E 20 F9              4337 	jr	nz,00121$
                           4338 ;	genPlus
                           4339 ;	genPlusIncr
                           4340 ;	Can't optimise plus by inc, falling back to the normal way
   0B10 79                 4341 	ld	a,c
   0B11 C6 10              4342 	add	a,#0x10
   0B13 4F                 4343 	ld	c,a
   0B14 78                 4344 	ld	a,b
   0B15 CE 00              4345 	adc	a,#0x00
   0B17 47                 4346 	ld	b,a
                           4347 ;	genCast
                           4348 ;	AOP_STK for _dog1_power_apply_y_1_1
   0B18 F8 02              4349 	lda	hl,2(sp)
   0B1A 71                 4350 	ld	(hl),c
                           4351 ;	game.c 667
                           4352 ;	genIpush
                           4353 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B1B 21 14 00           4354 	ld	hl,#0x0014
   0B1E E5                 4355 	push	hl
                           4356 ;	genIpush
                           4357 ;	AOP_STK for 
   0B1F F8 07              4358 	lda	hl,7(sp)
   0B21 2A                 4359 	ld	a,(hl+)
   0B22 66                 4360 	ld	h,(hl)
   0B23 6F                 4361 	ld	l,a
   0B24 E5                 4362 	push	hl
                           4363 ;	genCall
   0B25 CD 00 00           4364 	call	__moduint_rrx_s
   0B28 4A                 4365 	ld	c,d
   0B29 43                 4366 	ld	b,e
   0B2A E8 04              4367 	lda	sp,4(sp)
                           4368 ;	genLeftShift
   0B2C 3E 04              4369 	ld	a,#0x03+1
   0B2E 18 04              4370 	jr	00124$
   0B30                    4371 00123$:
   0B30 CB 20              4372 	sla	b
   0B32 CB 11              4373 	rl	c
   0B34                    4374 00124$:
   0B34 3D                 4375 	dec	a
   0B35 20 F9              4376 	jr	nz,00123$
                           4377 ;	genPlus
                           4378 ;	genPlusIncr
                           4379 ;	Can't optimise plus by inc, falling back to the normal way
   0B37 78                 4380 	ld	a,b
   0B38 C6 08              4381 	add	a,#0x08
   0B3A 47                 4382 	ld	b,a
   0B3B 79                 4383 	ld	a,c
   0B3C CE 00              4384 	adc	a,#0x00
   0B3E 4F                 4385 	ld	c,a
                           4386 ;	genCast
   0B3F 48                 4387 	ld	c,b
                           4388 ;	game.c 668
                           4389 ;	genIpush
                           4390 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B40 C5                 4391 	push	bc
   0B41 21 05 0F           4392 	ld	hl,#0x0F05
   0B44 E5                 4393 	push	hl
                           4394 ;	genCall
   0B45 CD 00 00           4395 	call	_set_sprite_tile
   0B48 E8 02              4396 	lda	sp,2(sp)
   0B4A E1                 4397 	pop	hl
   0B4B 4D                 4398 	ld	c,l
                           4399 ;	game.c 671
                           4400 ;	genAssign
                           4401 ;	AOP_STK for _dog1_power_apply_i_1_1
   0B4C F8 01              4402 	lda	hl,1(sp)
   0B4E 36 04              4403 	ld	(hl),#0x04
                           4404 ;	game.c 672
                           4405 ;	genIpush
                           4406 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B50 C5                 4407 	push	bc
                           4408 ;	AOP_STK for _dog1_power_apply_y_1_1
   0B51 23                 4409 	inc	hl
   0B52 7E                 4410 	ld	a,(hl)
   0B53 F5                 4411 	push	af
   0B54 33                 4412 	inc	sp
                           4413 ;	genIpush
   0B55 79                 4414 	ld	a,c
   0B56 F5                 4415 	push	af
   0B57 33                 4416 	inc	sp
                           4417 ;	genIpush
   0B58 3E 05              4418 	ld	a,#0x05
   0B5A F5                 4419 	push	af
   0B5B 33                 4420 	inc	sp
                           4421 ;	genCall
   0B5C CD 00 00           4422 	call	_move_sprite
   0B5F E8 03              4423 	lda	sp,3(sp)
   0B61 E1                 4424 	pop	hl
   0B62 4D                 4425 	ld	c,l
                           4426 ;	game.c 674
                           4427 ;	genLabel
   0B63                    4428 00106$:
                           4429 ;	genCmpEq
                           4430 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4431 ; genCmpEq: left 1, right 1, result 0
   0B63 F8 01              4432 	lda	hl,1(sp)
   0B65 7E                 4433 	ld	a,(hl)
   0B66 B7                 4434 	or	a,a
   0B67 CA CD 0B           4435 	jp	z,00108$
   0B6A                    4436 00125$:
                           4437 ;	game.c 675
                           4438 ;	genCmpLt
                           4439 ;	AOP_STK for 
   0B6A F8 07              4440 	lda	hl,7(sp)
   0B6C 7E                 4441 	ld	a,(hl)
   0B6D FE 01              4442 	cp	#0x01
   0B6F DA A7 0B           4443 	jp	c,00105$
                           4444 ;	genCmpGt
                           4445 ;	AOP_STK for 
   0B72 3E 04              4446 	ld	a,#0x04
   0B74 96                 4447 	sub	a,(hl)
   0B75 DA A7 0B           4448 	jp	c,00105$
                           4449 ;	genMinus
                           4450 ;	AOP_STK for 
   0B78 7E                 4451 	ld	a,(hl)
   0B79 C6 FF              4452 	add	a,#0xFF
   0B7B 47                 4453 	ld	b,a
                           4454 ;	genJumpTab
   0B7C 58                 4455 	ld	e,b
   0B7D 16 00              4456 	ld	d,#0x00
   0B7F 21 86 0B           4457 	ld	hl,#00126$
   0B82 19                 4458 	add	hl,de
   0B83 19                 4459 	add	hl,de
   0B84 19                 4460 	add	hl,de
   0B85 E9                 4461 	jp	(hl)
   0B86                    4462 00126$:
   0B86 C3 92 0B           4463 	jp	00101$
   0B89 C3 99 0B           4464 	jp	00102$
   0B8C C3 9E 0B           4465 	jp	00103$
   0B8F C3 A5 0B           4466 	jp	00104$
                           4467 ;	game.c 677
                           4468 ;	genLabel
   0B92                    4469 00101$:
                           4470 ;	genMinus
                           4471 ;	AOP_STK for _dog1_power_apply_y_1_1
   0B92 F8 02              4472 	lda	hl,2(sp)
   0B94 35                 4473 	dec	(hl)
   0B95 35                 4474 	dec	(hl)
                           4475 ;	game.c 678
                           4476 ;	genGoto
   0B96 C3 A7 0B           4477 	jp	00105$
                           4478 ;	game.c 680
                           4479 ;	genLabel
   0B99                    4480 00102$:
                           4481 ;	genPlus
                           4482 ;	genPlusIncr
                           4483 ; Removed redundent load
   0B99 0C                 4484 	inc	c
   0B9A 0C                 4485 	inc	c
                           4486 ;	game.c 681
                           4487 ;	genGoto
   0B9B C3 A7 0B           4488 	jp	00105$
                           4489 ;	game.c 683
                           4490 ;	genLabel
   0B9E                    4491 00103$:
                           4492 ;	genPlus
                           4493 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4494 ;	genPlusIncr
   0B9E F8 02              4495 	lda	hl,2(sp)
   0BA0 34                 4496 	inc	(hl)
   0BA1 34                 4497 	inc	(hl)
                           4498 ;	game.c 684
                           4499 ;	genGoto
   0BA2 C3 A7 0B           4500 	jp	00105$
                           4501 ;	game.c 686
                           4502 ;	genLabel
   0BA5                    4503 00104$:
                           4504 ;	genMinus
   0BA5 0D                 4505 	dec	c
   0BA6 0D                 4506 	dec	c
                           4507 ;	game.c 688
                           4508 ;	genLabel
   0BA7                    4509 00105$:
                           4510 ;	game.c 689
                           4511 ;	genIpush
                           4512 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BA7 C5                 4513 	push	bc
   0BA8 3E 02              4514 	ld	a,#0x02
   0BAA F5                 4515 	push	af
   0BAB 33                 4516 	inc	sp
                           4517 ;	genCall
   0BAC CD 00 00           4518 	call	_performantDelay
   0BAF E8 01              4519 	lda	sp,1(sp)
   0BB1 E1                 4520 	pop	hl
   0BB2 4D                 4521 	ld	c,l
                           4522 ;	game.c 690
                           4523 ;	genIpush
                           4524 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BB3 C5                 4525 	push	bc
                           4526 ;	AOP_STK for _dog1_power_apply_y_1_1
   0BB4 F8 04              4527 	lda	hl,4(sp)
   0BB6 7E                 4528 	ld	a,(hl)
   0BB7 F5                 4529 	push	af
   0BB8 33                 4530 	inc	sp
                           4531 ;	genIpush
   0BB9 79                 4532 	ld	a,c
   0BBA F5                 4533 	push	af
   0BBB 33                 4534 	inc	sp
                           4535 ;	genIpush
   0BBC 3E 05              4536 	ld	a,#0x05
   0BBE F5                 4537 	push	af
   0BBF 33                 4538 	inc	sp
                           4539 ;	genCall
   0BC0 CD 00 00           4540 	call	_move_sprite
   0BC3 E8 03              4541 	lda	sp,3(sp)
   0BC5 E1                 4542 	pop	hl
   0BC6 4D                 4543 	ld	c,l
                           4544 ;	game.c 691
                           4545 ;	genMinus
                           4546 ;	AOP_STK for _dog1_power_apply_i_1_1
   0BC7 F8 01              4547 	lda	hl,1(sp)
   0BC9 35                 4548 	dec	(hl)
                           4549 ;	genGoto
   0BCA C3 63 0B           4550 	jp	00106$
                           4551 ;	genLabel
   0BCD                    4552 00108$:
                           4553 ;	game.c 693
                           4554 ;	genPlus
                           4555 ;	AOP_STK for 
                           4556 ;	Can't optimise plus by inc, falling back to the normal way
   0BCD 11 05 19           4557 	ld	de,#_map
   0BD0 F8 08              4558 	lda	hl,8(sp)
   0BD2 2A                 4559 	ld	a,(hl+)
   0BD3 66                 4560 	ld	h,(hl)
   0BD4 6F                 4561 	ld	l,a
   0BD5 19                 4562 	add	hl,de
   0BD6 4D                 4563 	ld	c,l
   0BD7 44                 4564 	ld	b,h
                           4565 ;	genPointerGet
                           4566 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0BD8 0A                 4567 	ld	a,(bc)
   0BD9 F8 00              4568 	lda	hl,0(sp)
                           4569 ;	genCmpEq
                           4570 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4571 ; genCmpEq: left 1, right 1, result 0
   0BDB 77                 4572 	ld      (hl),a
                           4573 ; Removed redundent load
   0BDC FE 0B              4574 	cp	a,#0x0B
   0BDE CA EC 0B           4575 	jp	z,00109$
   0BE1                    4576 00127$:
                           4577 ;	genCmpEq
                           4578 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4579 ; genCmpEq: left 1, right 1, result 0
   0BE1 F8 00              4580 	lda	hl,0(sp)
   0BE3 7E                 4581 	ld	a,(hl)
   0BE4 FE 0C              4582 	cp	a,#0x0C
   0BE6 CA F5 0B           4583 	jp	z,00112$
   0BE9                    4584 00128$:
                           4585 ;	genGoto
   0BE9 C3 F2 0B           4586 	jp	00111$
                           4587 ;	game.c 695
                           4588 ;	genLabel
   0BEC                    4589 00109$:
                           4590 ;	genAssign (pointer)
   0BEC 3E 30              4591 	ld	a,#0x30
   0BEE 02                 4592 	ld	(bc),a
                           4593 ;	game.c 696
                           4594 ;	genGoto
   0BEF C3 F5 0B           4595 	jp	00112$
                           4596 ;	game.c 700
                           4597 ;	genLabel
   0BF2                    4598 00111$:
                           4599 ;	genAssign (pointer)
   0BF2 3E 2D              4600 	ld	a,#0x2D
   0BF4 02                 4601 	ld	(bc),a
                           4602 ;	game.c 702
                           4603 ;	genLabel
   0BF5                    4604 00112$:
                           4605 ;	game.c 703
                           4606 ;	genIpush
                           4607 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BF5 21 05 19           4608 	ld	hl,#_map
   0BF8 E5                 4609 	push	hl
                           4610 ;	genIpush
   0BF9 21 14 12           4611 	ld	hl,#0x1214
   0BFC E5                 4612 	push	hl
                           4613 ;	genIpush
   0BFD 21 00 00           4614 	ld	hl,#0x0000
   0C00 E5                 4615 	push	hl
                           4616 ;	genCall
   0C01 CD 00 00           4617 	call	_set_bkg_tiles
   0C04 E8 06              4618 	lda	sp,6(sp)
                           4619 ;	game.c 704
                           4620 ;	genIpush
                           4621 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C06 21 00 00           4622 	ld	hl,#0x0000
   0C09 E5                 4623 	push	hl
                           4624 ;	genIpush
   0C0A 3E 05              4625 	ld	a,#0x05
   0C0C F5                 4626 	push	af
   0C0D 33                 4627 	inc	sp
                           4628 ;	genCall
   0C0E CD 00 00           4629 	call	_move_sprite
   0C11 E8 03              4630 	lda	sp,3(sp)
                           4631 ;	genLabel
   0C13                    4632 00113$:
                           4633 ;	genEndFunction
   0C13 E8 03              4634 	lda	sp,3(sp)
   0C15 C9                 4635 	ret
   0C16                    4636 ___dog1_power_apply_end:
                           4637 ;	game.c 710
                           4638 ;	genLabel
                           4639 ;	genFunction
                           4640 ;	---------------------------------
                           4641 ; Function get_player_map_position
                           4642 ; ---------------------------------
   0C16                    4643 ___get_player_map_position_start:
   0C16                    4644 _get_player_map_position:
   0C16 E8 FC              4645 	lda	sp,-4(sp)
                           4646 ;	game.c 718
                           4647 ;	genCast
                           4648 ;	AOP_STK for 
   0C18 F8 06              4649 	lda	hl,6(sp)
   0C1A 4E                 4650 	ld	c,(hl)
   0C1B 06 00              4651 	ld	b,#0x00
                           4652 ;	genRightShift
   0C1D CB 38              4653 	srl	b
   0C1F CB 19              4654 	rr	c
   0C21 CB 38              4655 	srl	b
   0C23 CB 19              4656 	rr	c
   0C25 CB 38              4657 	srl	b
   0C27 CB 19              4658 	rr	c
                           4659 ;	genMinus
   0C29 0B                 4660 	dec	bc
                           4661 ;	genCast
                           4662 ;	AOP_STK for _get_player_map_position__x_1_1
   0C2A F8 03              4663 	lda	hl,3(sp)
   0C2C 71                 4664 	ld	(hl),c
                           4665 ;	game.c 719
                           4666 ;	genCast
                           4667 ;	AOP_STK for 
   0C2D F8 07              4668 	lda	hl,7(sp)
   0C2F 46                 4669 	ld	b,(hl)
   0C30 0E 00              4670 	ld	c,#0x00
                           4671 ;	genRightShift
   0C32 CB 39              4672 	srl	c
   0C34 CB 18              4673 	rr	b
   0C36 CB 39              4674 	srl	c
   0C38 CB 18              4675 	rr	b
   0C3A CB 39              4676 	srl	c
   0C3C CB 18              4677 	rr	b
                           4678 ;	genMinus
   0C3E 58                 4679 	ld	e,b
   0C3F 51                 4680 	ld	d,c
   0C40 1B                 4681 	dec	de
   0C41 1B                 4682 	dec	de
   0C42 43                 4683 	ld	b,e
   0C43 4A                 4684 	ld	c,d
                           4685 ;	genCast
                           4686 ;	AOP_STK for _get_player_map_position__y_1_1
   0C44 F8 02              4687 	lda	hl,2(sp)
   0C46 70                 4688 	ld	(hl),b
                           4689 ;	game.c 723
                           4690 ;	genCast
                           4691 ;	AOP_STK for _get_player_map_position__x_1_1
                           4692 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0C47 23                 4693 	inc	hl
   0C48 7E                 4694 	ld	a,(hl)
   0C49 F8 00              4695 	lda	hl,0(sp)
   0C4B 22                 4696 	ld	(hl+),a
   0C4C 36 00              4697 	ld	(hl),#0x00
                           4698 ;	game.c 724
                           4699 ;	genCast
                           4700 ;	AOP_STK for _get_player_map_position__y_1_1
   0C4E 23                 4701 	inc	hl
   0C4F 4E                 4702 	ld	c,(hl)
   0C50 06 00              4703 	ld	b,#0x00
                           4704 ;	genMult
   0C52 59                 4705 	ld	e,c
   0C53 50                 4706 	ld	d,b
   0C54 6B                 4707 	ld	l,e
   0C55 62                 4708 	ld	h,d
   0C56 29                 4709 	add	hl,hl
   0C57 29                 4710 	add	hl,hl
   0C58 19                 4711 	add	hl,de
   0C59 29                 4712 	add	hl,hl
   0C5A 29                 4713 	add	hl,hl
   0C5B 4D                 4714 	ld	c,l
   0C5C 44                 4715 	ld	b,h
                           4716 ;	genPlus
                           4717 ;	AOP_STK for _get_player_map_position_map_position_1_1
                           4718 ;	Can't optimise plus by inc, falling back to the normal way
   0C5D F8 00              4719 	lda	hl,0(sp)
   0C5F 2A                 4720 	ld	a,(hl+)
   0C60 66                 4721 	ld	h,(hl)
   0C61 6F                 4722 	ld	l,a
   0C62 09                 4723 	add	hl,bc
   0C63 4D                 4724 	ld	c,l
   0C64 44                 4725 	ld	b,h
                           4726 ;	game.c 726
                           4727 ;	genRet
   0C65 59                 4728 	ld	e,c
   0C66 50                 4729 	ld	d,b
                           4730 ;	genLabel
   0C67                    4731 00101$:
                           4732 ;	genEndFunction
   0C67 E8 04              4733 	lda	sp,4(sp)
   0C69 C9                 4734 	ret
   0C6A                    4735 ___get_player_map_position_end:
                           4736 ;	game.c 729
                           4737 ;	genLabel
                           4738 ;	genFunction
                           4739 ;	---------------------------------
                           4740 ; Function player_input
                           4741 ; ---------------------------------
   0C6A                    4742 ___player_input_start:
   0C6A                    4743 _player_input:
   0C6A E8 FB              4744 	lda	sp,-5(sp)
                           4745 ;	game.c 732
                           4746 ;	genAssign
                           4747 ;	AOP_STK for 
   0C6C F8 07              4748 	lda	hl,7(sp)
   0C6E 4E                 4749 	ld	c,(hl)
   0C6F 23                 4750 	inc	hl
   0C70 46                 4751 	ld	b,(hl)
                           4752 ;	genPointerGet
                           4753 ;	AOP_STK for _player_input_sloc0_1_0
   0C71 59                 4754 	ld	e,c
   0C72 50                 4755 	ld	d,b
   0C73 1A                 4756 	ld	a,(de)
   0C74 F8 03              4757 	lda	hl,3(sp)
   0C76 77                 4758 	ld	(hl),a
   0C77 13                 4759 	inc	de
   0C78 1A                 4760 	ld	a,(de)
   0C79 23                 4761 	inc	hl
                           4762 ;	genPlus
                           4763 ;	AOP_STK for _player_input_sloc0_1_0
                           4764 ;	AOP_STK for _player_input_sloc1_1_0
                           4765 ;	genPlusIncr
                           4766 ;	Can't optimise plus by inc, falling back to the normal way
   0C7A 32                 4767 	ld      (hl-),a
   0C7B 5E                 4768 	ld	e,(hl)
   0C7C 23                 4769 	inc	hl
   0C7D 56                 4770 	ld	d,(hl)
   0C7E 21 0A 00           4771 	ld	hl,#0x000A
   0C81 19                 4772 	add	hl,de
   0C82 7D                 4773 	ld	a,l
   0C83 54                 4774 	ld	d,h
   0C84 F8 01              4775 	lda	hl,1(sp)
                           4776 ;	genPointerGet
                           4777 ;	AOP_STK for _player_input_sloc1_1_0
                           4778 ;	AOP_STK for _player_input_sloc0_1_0
   0C86 22                 4779 	ld	(hl+),a
   0C87 72                 4780 	ld	(hl),d
   0C88 5F                 4781 	ld	e,a
   0C89 1A                 4782 	ld	a,(de)
   0C8A 23                 4783 	inc	hl
                           4784 ;	genCmpEq
                           4785 ;	AOP_STK for _player_input_sloc0_1_0
                           4786 ; genCmpEq: left 1, right 1, result 0
   0C8B 77                 4787 	ld      (hl),a
                           4788 ; Removed redundent load
   0C8C B7                 4789 	or	a,a
   0C8D C2 AD 0D           4790 	jp	nz,00115$
   0C90 18 03              4791 	jr	00128$
   0C92                    4792 00127$:
   0C92 C3 AD 0D           4793 	jp	00115$
   0C95                    4794 00128$:
                           4795 ;	genCmpEq
                           4796 ;	AOP_HL for _input_timer
                           4797 ; genCmpEq: left 1, right 1, result 0
   0C95 21 03 19           4798 	ld	hl,#_input_timer
   0C98 7E                 4799 	ld	a,(hl)
   0C99 B7                 4800 	or	a,a
   0C9A C2 AD 0D           4801 	jp	nz,00115$
   0C9D 18 03              4802 	jr	00130$
   0C9F                    4803 00129$:
   0C9F C3 AD 0D           4804 	jp	00115$
   0CA2                    4805 00130$:
                           4806 ;	game.c 734
                           4807 ;	genCall
                           4808 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CA2 C5                 4809 	push	bc
   0CA3 CD 00 00           4810 	call	_joypad
                           4811 ;	AOP_STK for _player_input_sloc1_1_0
   0CA6 F8 03              4812 	lda	hl,3(sp)
   0CA8 73                 4813 	ld	(hl),e
   0CA9 C1                 4814 	pop	bc
                           4815 ;	genCmpEq
                           4816 ;	AOP_STK for _player_input_sloc1_1_0
                           4817 ; genCmpEq: left 1, right 1, result 0
   0CAA F8 01              4818 	lda	hl,1(sp)
   0CAC 7E                 4819 	ld	a,(hl)
   0CAD FE 01              4820 	cp	a,#0x01
   0CAF CA 5D 0D           4821 	jp	z,00108$
   0CB2                    4822 00131$:
                           4823 ;	genCmpEq
                           4824 ;	AOP_STK for _player_input_sloc1_1_0
                           4825 ; genCmpEq: left 1, right 1, result 0
   0CB2 F8 01              4826 	lda	hl,1(sp)
   0CB4 7E                 4827 	ld	a,(hl)
   0CB5 FE 02              4828 	cp	a,#0x02
   0CB7 CA 3E 0D           4829 	jp	z,00107$
   0CBA                    4830 00132$:
                           4831 ;	genCmpEq
                           4832 ;	AOP_STK for _player_input_sloc1_1_0
                           4833 ; genCmpEq: left 1, right 1, result 0
   0CBA F8 01              4834 	lda	hl,1(sp)
   0CBC 7E                 4835 	ld	a,(hl)
   0CBD FE 04              4836 	cp	a,#0x04
   0CBF CA 7C 0D           4837 	jp	z,00109$
   0CC2                    4838 00133$:
                           4839 ;	genCmpEq
                           4840 ;	AOP_STK for _player_input_sloc1_1_0
                           4841 ; genCmpEq: left 1, right 1, result 0
   0CC2 F8 01              4842 	lda	hl,1(sp)
   0CC4 7E                 4843 	ld	a,(hl)
   0CC5 FE 08              4844 	cp	a,#0x08
   0CC7 CA 9B 0D           4845 	jp	z,00110$
   0CCA                    4846 00134$:
                           4847 ;	genCmpEq
                           4848 ;	AOP_STK for _player_input_sloc1_1_0
                           4849 ; genCmpEq: left 1, right 1, result 0
   0CCA F8 01              4850 	lda	hl,1(sp)
   0CCC 7E                 4851 	ld	a,(hl)
   0CCD FE 10              4852 	cp	a,#0x10
   0CCF CA DD 0C           4853 	jp	z,00103$
   0CD2                    4854 00135$:
                           4855 ;	genCmpEq
                           4856 ;	AOP_STK for _player_input_sloc1_1_0
                           4857 ; genCmpEq: left 1, right 1, result 0
   0CD2 F8 01              4858 	lda	hl,1(sp)
   0CD4 7E                 4859 	ld	a,(hl)
   0CD5 FE 20              4860 	cp	a,#0x20
   0CD7 CA 36 0D           4861 	jp	z,00106$
   0CDA                    4862 00136$:
                           4863 ;	genGoto
   0CDA C3 AD 0D           4864 	jp	00115$
                           4865 ;	game.c 740
                           4866 ;	genLabel
   0CDD                    4867 00103$:
                           4868 ;	game.c 736
                           4869 ;	genPointerGet
                           4870 ;	AOP_STK for _player_input_sloc1_1_0
   0CDD 59                 4871 	ld	e,c
   0CDE 50                 4872 	ld	d,b
   0CDF 1A                 4873 	ld	a,(de)
   0CE0 F8 01              4874 	lda	hl,1(sp)
   0CE2 77                 4875 	ld	(hl),a
   0CE3 13                 4876 	inc	de
   0CE4 1A                 4877 	ld	a,(de)
   0CE5 23                 4878 	inc	hl
                           4879 ;	genPlus
                           4880 ;	AOP_STK for _player_input_sloc1_1_0
                           4881 ;	AOP_STK for _player_input_sloc0_1_0
                           4882 ;	genPlusIncr
                           4883 ;	Can't optimise plus by inc, falling back to the normal way
   0CE6 32                 4884 	ld      (hl-),a
   0CE7 5E                 4885 	ld	e,(hl)
   0CE8 23                 4886 	inc	hl
   0CE9 56                 4887 	ld	d,(hl)
   0CEA 21 0B 00           4888 	ld	hl,#0x000B
   0CED 19                 4889 	add	hl,de
   0CEE 7D                 4890 	ld	a,l
   0CEF 54                 4891 	ld	d,h
   0CF0 F8 03              4892 	lda	hl,3(sp)
                           4893 ;	genPointerGet
                           4894 ;	AOP_STK for _player_input_sloc0_1_0
                           4895 ;	AOP_STK for _player_input_sloc2_1_0
   0CF2 22                 4896 	ld	(hl+),a
   0CF3 72                 4897 	ld	(hl),d
   0CF4 5F                 4898 	ld	e,a
   0CF5 1A                 4899 	ld	a,(de)
   0CF6 F8 00              4900 	lda	hl,0(sp)
                           4901 ;	genCmpEq
                           4902 ;	AOP_STK for _player_input_sloc2_1_0
                           4903 ; genCmpEq: left 1, right 1, result 0
   0CF8 77                 4904 	ld      (hl),a
                           4905 ; Removed redundent load
   0CF9 FE 01              4906 	cp	a,#0x01
   0CFB C2 21 0D           4907 	jp	nz,00102$
   0CFE 18 03              4908 	jr	00138$
   0D00                    4909 00137$:
   0D00 C3 21 0D           4910 	jp	00102$
   0D03                    4911 00138$:
                           4912 ;	game.c 737
                           4913 ;	genPlus
                           4914 ;	AOP_STK for _player_input_sloc1_1_0
                           4915 ;	genPlusIncr
                           4916 ;	Can't optimise plus by inc, falling back to the normal way
   0D03 F8 01              4917 	lda	hl,1(sp)
   0D05 5E                 4918 	ld	e,(hl)
   0D06 23                 4919 	inc	hl
   0D07 56                 4920 	ld	d,(hl)
   0D08 21 0A 00           4921 	ld	hl,#0x000A
   0D0B 19                 4922 	add	hl,de
   0D0C 7D                 4923 	ld	a,l
   0D0D 54                 4924 	ld	d,h
   0D0E 6F                 4925 	ld	l,a
   0D0F 62                 4926 	ld	h,d
                           4927 ;	genAssign (pointer)
   0D10 36 10              4928 	ld	(hl),#0x10
                           4929 ;	game.c 738
                           4930 ;	genPlus
                           4931 ;	AOP_STK for _player_input_sloc1_1_0
                           4932 ;	genPlusIncr
                           4933 ;	Can't optimise plus by inc, falling back to the normal way
   0D12 F8 01              4934 	lda	hl,1(sp)
   0D14 5E                 4935 	ld	e,(hl)
   0D15 23                 4936 	inc	hl
   0D16 56                 4937 	ld	d,(hl)
   0D17 21 09 00           4938 	ld	hl,#0x0009
   0D1A 19                 4939 	add	hl,de
   0D1B 7D                 4940 	ld	a,l
   0D1C 54                 4941 	ld	d,h
   0D1D 6F                 4942 	ld	l,a
   0D1E 62                 4943 	ld	h,d
                           4944 ;	genAssign (pointer)
   0D1F 36 01              4945 	ld	(hl),#0x01
                           4946 ;	genLabel
   0D21                    4947 00102$:
                           4948 ;	game.c 740
                           4949 ;	genCmpEq
                           4950 ;	AOP_STK for _player_input_sloc2_1_0
                           4951 ; genCmpEq: left 1, right 1, result 0
   0D21 F8 00              4952 	lda	hl,0(sp)
   0D23 7E                 4953 	ld	a,(hl)
   0D24 FE 02              4954 	cp	a,#0x02
   0D26 C2 AD 0D           4955 	jp	nz,00115$
   0D29 18 03              4956 	jr	00140$
   0D2B                    4957 00139$:
   0D2B C3 AD 0D           4958 	jp	00115$
   0D2E                    4959 00140$:
                           4960 ;	game.c 741
                           4961 ;	genCall
                           4962 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D2E C5                 4963 	push	bc
   0D2F CD C0 08           4964 	call	_dog1_power
   0D32 C1                 4965 	pop	bc
                           4966 ;	game.c 745
                           4967 ;	genGoto
   0D33 C3 AD 0D           4968 	jp	00115$
                           4969 ;	game.c 749
                           4970 ;	genLabel
   0D36                    4971 00106$:
                           4972 ;	genCall
                           4973 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D36 C5                 4974 	push	bc
   0D37 CD CA 01           4975 	call	_change_char
   0D3A C1                 4976 	pop	bc
                           4977 ;	game.c 750
                           4978 ;	genGoto
   0D3B C3 AD 0D           4979 	jp	00115$
                           4980 ;	game.c 753
                           4981 ;	genLabel
   0D3E                    4982 00107$:
                           4983 ;	genAssign
                           4984 ;	AOP_HL for _input_timer
   0D3E 21 03 19           4985 	ld	hl,#_input_timer
   0D41 36 04              4986 	ld	(hl),#0x04
                           4987 ;	game.c 754
                           4988 ;	genPointerGet
                           4989 ;	AOP_STK for _player_input_sloc1_1_0
   0D43 59                 4990 	ld	e,c
   0D44 50                 4991 	ld	d,b
   0D45 1A                 4992 	ld	a,(de)
   0D46 F8 01              4993 	lda	hl,1(sp)
   0D48 77                 4994 	ld	(hl),a
   0D49 13                 4995 	inc	de
   0D4A 1A                 4996 	ld	a,(de)
   0D4B 23                 4997 	inc	hl
                           4998 ;	genPlus
                           4999 ;	AOP_STK for _player_input_sloc1_1_0
                           5000 ;	genPlusIncr
                           5001 ;	Can't optimise plus by inc, falling back to the normal way
   0D4C 32                 5002 	ld      (hl-),a
   0D4D 5E                 5003 	ld	e,(hl)
   0D4E 23                 5004 	inc	hl
   0D4F 56                 5005 	ld	d,(hl)
   0D50 21 08 00           5006 	ld	hl,#0x0008
   0D53 19                 5007 	add	hl,de
   0D54 7D                 5008 	ld	a,l
   0D55 54                 5009 	ld	d,h
   0D56 6F                 5010 	ld	l,a
   0D57 62                 5011 	ld	h,d
                           5012 ;	genAssign (pointer)
   0D58 36 04              5013 	ld	(hl),#0x04
                           5014 ;	game.c 755
                           5015 ;	genGoto
   0D5A C3 AD 0D           5016 	jp	00115$
                           5017 ;	game.c 757
                           5018 ;	genLabel
   0D5D                    5019 00108$:
                           5020 ;	genAssign
                           5021 ;	AOP_HL for _input_timer
   0D5D 21 03 19           5022 	ld	hl,#_input_timer
   0D60 36 04              5023 	ld	(hl),#0x04
                           5024 ;	game.c 758
                           5025 ;	genPointerGet
                           5026 ;	AOP_STK for _player_input_sloc1_1_0
   0D62 59                 5027 	ld	e,c
   0D63 50                 5028 	ld	d,b
   0D64 1A                 5029 	ld	a,(de)
   0D65 F8 01              5030 	lda	hl,1(sp)
   0D67 77                 5031 	ld	(hl),a
   0D68 13                 5032 	inc	de
   0D69 1A                 5033 	ld	a,(de)
   0D6A 23                 5034 	inc	hl
                           5035 ;	genPlus
                           5036 ;	AOP_STK for _player_input_sloc1_1_0
                           5037 ;	genPlusIncr
                           5038 ;	Can't optimise plus by inc, falling back to the normal way
   0D6B 32                 5039 	ld      (hl-),a
   0D6C 5E                 5040 	ld	e,(hl)
   0D6D 23                 5041 	inc	hl
   0D6E 56                 5042 	ld	d,(hl)
   0D6F 21 08 00           5043 	ld	hl,#0x0008
   0D72 19                 5044 	add	hl,de
   0D73 7D                 5045 	ld	a,l
   0D74 54                 5046 	ld	d,h
   0D75 6F                 5047 	ld	l,a
   0D76 62                 5048 	ld	h,d
                           5049 ;	genAssign (pointer)
   0D77 36 02              5050 	ld	(hl),#0x02
                           5051 ;	game.c 759
                           5052 ;	genGoto
   0D79 C3 AD 0D           5053 	jp	00115$
                           5054 ;	game.c 761
                           5055 ;	genLabel
   0D7C                    5056 00109$:
                           5057 ;	genAssign
                           5058 ;	AOP_HL for _input_timer
   0D7C 21 03 19           5059 	ld	hl,#_input_timer
   0D7F 36 04              5060 	ld	(hl),#0x04
                           5061 ;	game.c 762
                           5062 ;	genPointerGet
                           5063 ;	AOP_STK for _player_input_sloc1_1_0
   0D81 59                 5064 	ld	e,c
   0D82 50                 5065 	ld	d,b
   0D83 1A                 5066 	ld	a,(de)
   0D84 F8 01              5067 	lda	hl,1(sp)
   0D86 77                 5068 	ld	(hl),a
   0D87 13                 5069 	inc	de
   0D88 1A                 5070 	ld	a,(de)
   0D89 23                 5071 	inc	hl
                           5072 ;	genPlus
                           5073 ;	AOP_STK for _player_input_sloc1_1_0
                           5074 ;	genPlusIncr
                           5075 ;	Can't optimise plus by inc, falling back to the normal way
   0D8A 32                 5076 	ld      (hl-),a
   0D8B 5E                 5077 	ld	e,(hl)
   0D8C 23                 5078 	inc	hl
   0D8D 56                 5079 	ld	d,(hl)
   0D8E 21 08 00           5080 	ld	hl,#0x0008
   0D91 19                 5081 	add	hl,de
   0D92 7D                 5082 	ld	a,l
   0D93 54                 5083 	ld	d,h
   0D94 6F                 5084 	ld	l,a
   0D95 62                 5085 	ld	h,d
                           5086 ;	genAssign (pointer)
   0D96 36 01              5087 	ld	(hl),#0x01
                           5088 ;	game.c 763
                           5089 ;	genGoto
   0D98 C3 AD 0D           5090 	jp	00115$
                           5091 ;	game.c 765
                           5092 ;	genLabel
   0D9B                    5093 00110$:
                           5094 ;	genPointerGet
   0D9B 59                 5095 	ld	e,c
   0D9C 50                 5096 	ld	d,b
   0D9D 1A                 5097 	ld	a,(de)
   0D9E 4F                 5098 	ld	c,a
   0D9F 13                 5099 	inc	de
   0DA0 1A                 5100 	ld	a,(de)
   0DA1 47                 5101 	ld	b,a
                           5102 ;	genPlus
                           5103 ;	genPlusIncr
   0DA2 21 08 00           5104 	ld	hl,#0x0008
   0DA5 09                 5105 	add	hl,bc
                           5106 ;	genAssign (pointer)
   0DA6 36 03              5107 	ld	(hl),#0x03
                           5108 ;	game.c 766
                           5109 ;	genAssign
                           5110 ;	AOP_HL for _input_timer
   0DA8 21 03 19           5111 	ld	hl,#_input_timer
   0DAB 36 04              5112 	ld	(hl),#0x04
                           5113 ;	game.c 770
                           5114 ;	genLabel
   0DAD                    5115 00115$:
                           5116 ;	genEndFunction
   0DAD E8 05              5117 	lda	sp,5(sp)
   0DAF C9                 5118 	ret
   0DB0                    5119 ___player_input_end:
                           5120 ;	game.c 780
                           5121 ;	genLabel
                           5122 ;	genFunction
                           5123 ;	---------------------------------
                           5124 ; Function can_move
                           5125 ; ---------------------------------
   0DB0                    5126 ___can_move_start:
   0DB0                    5127 _can_move:
   0DB0 E8 FA              5128 	lda	sp,-6(sp)
                           5129 ;	game.c 791
                           5130 ;	genCmpGt
                           5131 ;	AOP_STK for 
   0DB2 3E 04              5132 	ld	a,#0x04
   0DB4 F8 0A              5133 	lda	hl,10(sp)
   0DB6 96                 5134 	sub	a,(hl)
   0DB7 DA FD 0D           5135 	jp	c,00106$
                           5136 ;	genJumpTab
                           5137 ;	AOP_STK for 
   0DBA 5E                 5138 	ld	e,(hl)
   0DBB 16 00              5139 	ld	d,#0x00
   0DBD 21 C4 0D           5140 	ld	hl,#00127$
   0DC0 19                 5141 	add	hl,de
   0DC1 19                 5142 	add	hl,de
   0DC2 19                 5143 	add	hl,de
   0DC3 E9                 5144 	jp	(hl)
   0DC4                    5145 00127$:
   0DC4 C3 F7 0D           5146 	jp	00105$
   0DC7 C3 E5 0D           5147 	jp	00103$
   0DCA C3 DC 0D           5148 	jp	00102$
   0DCD C3 EE 0D           5149 	jp	00104$
   0DD0 C3 D3 0D           5150 	jp	00101$
                           5151 ;	game.c 793
                           5152 ;	genLabel
   0DD3                    5153 00101$:
                           5154 ;	genMinus
                           5155 ;	AOP_STK for 
   0DD3 F8 08              5156 	lda	hl,8(sp)
   0DD5 7E                 5157 	ld	a,(hl)
   0DD6 C6 F8              5158 	add	a,#0xF8
   0DD8 77                 5159 	ld	(hl),a
                           5160 ;	game.c 794
                           5161 ;	genGoto
   0DD9 C3 FD 0D           5162 	jp	00106$
                           5163 ;	game.c 796
                           5164 ;	genLabel
   0DDC                    5165 00102$:
                           5166 ;	genPlus
                           5167 ;	AOP_STK for 
                           5168 ;	genPlusIncr
                           5169 ;	Can't optimise plus by inc, falling back to the normal way
   0DDC F8 08              5170 	lda	hl,8(sp)
   0DDE 7E                 5171 	ld	a,(hl)
   0DDF C6 08              5172 	add	a,#0x08
   0DE1 77                 5173 	ld	(hl),a
                           5174 ;	game.c 797
                           5175 ;	genGoto
   0DE2 C3 FD 0D           5176 	jp	00106$
                           5177 ;	game.c 799
                           5178 ;	genLabel
   0DE5                    5179 00103$:
                           5180 ;	genMinus
                           5181 ;	AOP_STK for 
   0DE5 F8 09              5182 	lda	hl,9(sp)
   0DE7 7E                 5183 	ld	a,(hl)
   0DE8 C6 F8              5184 	add	a,#0xF8
   0DEA 77                 5185 	ld	(hl),a
                           5186 ;	game.c 800
                           5187 ;	genGoto
   0DEB C3 FD 0D           5188 	jp	00106$
                           5189 ;	game.c 802
                           5190 ;	genLabel
   0DEE                    5191 00104$:
                           5192 ;	genPlus
                           5193 ;	AOP_STK for 
                           5194 ;	genPlusIncr
                           5195 ;	Can't optimise plus by inc, falling back to the normal way
   0DEE F8 09              5196 	lda	hl,9(sp)
   0DF0 7E                 5197 	ld	a,(hl)
   0DF1 C6 08              5198 	add	a,#0x08
   0DF3 77                 5199 	ld	(hl),a
                           5200 ;	game.c 803
                           5201 ;	genGoto
   0DF4 C3 FD 0D           5202 	jp	00106$
                           5203 ;	game.c 805
                           5204 ;	genLabel
   0DF7                    5205 00105$:
                           5206 ;	genRet
   0DF7 11 00 00           5207 	ld	de,#0x0000
   0DFA C3 C6 0E           5208 	jp	00118$
                           5209 ;	game.c 806
                           5210 ;	genLabel
   0DFD                    5211 00106$:
                           5212 ;	game.c 808
                           5213 ;	genCast
                           5214 ;	AOP_STK for 
   0DFD F8 08              5215 	lda	hl,8(sp)
   0DFF 4E                 5216 	ld	c,(hl)
   0E00 06 00              5217 	ld	b,#0x00
                           5218 ;	genRightShift
   0E02 CB 38              5219 	srl	b
   0E04 CB 19              5220 	rr	c
   0E06 CB 38              5221 	srl	b
   0E08 CB 19              5222 	rr	c
   0E0A CB 38              5223 	srl	b
   0E0C CB 19              5224 	rr	c
                           5225 ;	genMinus
   0E0E 0B                 5226 	dec	bc
                           5227 ;	genCast
                           5228 ;	AOP_STK for _can_move__x_1_1
   0E0F F8 05              5229 	lda	hl,5(sp)
   0E11 71                 5230 	ld	(hl),c
                           5231 ;	game.c 809
                           5232 ;	genCast
                           5233 ;	AOP_STK for 
   0E12 F8 09              5234 	lda	hl,9(sp)
   0E14 46                 5235 	ld	b,(hl)
   0E15 0E 00              5236 	ld	c,#0x00
                           5237 ;	genRightShift
   0E17 CB 39              5238 	srl	c
   0E19 CB 18              5239 	rr	b
   0E1B CB 39              5240 	srl	c
   0E1D CB 18              5241 	rr	b
   0E1F CB 39              5242 	srl	c
   0E21 CB 18              5243 	rr	b
                           5244 ;	genMinus
   0E23 58                 5245 	ld	e,b
   0E24 51                 5246 	ld	d,c
   0E25 1B                 5247 	dec	de
   0E26 1B                 5248 	dec	de
   0E27 43                 5249 	ld	b,e
   0E28 4A                 5250 	ld	c,d
                           5251 ;	genCast
                           5252 ;	AOP_STK for _can_move__y_1_1
   0E29 F8 04              5253 	lda	hl,4(sp)
   0E2B 70                 5254 	ld	(hl),b
                           5255 ;	game.c 816
                           5256 ;	genCmpLt
                           5257 ;	AOP_STK for _can_move__x_1_1
   0E2C 23                 5258 	inc	hl
   0E2D 7E                 5259 	ld	a,(hl)
   0E2E FE 00              5260 	cp	#0x00
   0E30 DA 57 0E           5261 	jp	c,00107$
                           5262 ;	genCast
                           5263 ;	AOP_STK for _can_move__x_1_1
   0E33 46                 5264 	ld	b,(hl)
   0E34 0E 00              5265 	ld	c,#0x00
                           5266 ;	genCmpGt
   0E36 3E 13              5267 	ld	a,#0x13
   0E38 90                 5268 	sub	a,b
   0E39 3E 00              5269 	ld	a,#0x00
   0E3B 99                 5270 	sbc	a,c
   0E3C DA 57 0E           5271 	jp	c,00107$
                           5272 ;	genCmpLt
                           5273 ;	AOP_STK for _can_move__y_1_1
   0E3F 2B                 5274 	dec	hl
   0E40 7E                 5275 	ld	a,(hl)
   0E41 FE 00              5276 	cp	#0x00
   0E43 DA 57 0E           5277 	jp	c,00107$
                           5278 ;	genCast
                           5279 ;	AOP_STK for _can_move__y_1_1
                           5280 ;	AOP_STK for _can_move_sloc0_1_0
   0E46 7E                 5281 	ld	a,(hl)
   0E47 F8 00              5282 	lda	hl,0(sp)
   0E49 22                 5283 	ld	(hl+),a
   0E4A 36 00              5284 	ld	(hl),#0x00
                           5285 ;	genCmpGt
                           5286 ;	AOP_STK for _can_move_sloc0_1_0
   0E4C 3E 11              5287 	ld	a,#0x11
   0E4E 2B                 5288 	dec	hl
   0E4F 96                 5289 	sub	a,(hl)
   0E50 3E 00              5290 	ld	a,#0x00
   0E52 23                 5291 	inc	hl
   0E53 9E                 5292 	sbc	a,(hl)
   0E54 D2 5D 0E           5293 	jp	nc,00108$
                           5294 ;	genLabel
   0E57                    5295 00107$:
                           5296 ;	game.c 818
                           5297 ;	genRet
   0E57 11 00 00           5298 	ld	de,#0x0000
   0E5A C3 C6 0E           5299 	jp	00118$
                           5300 ;	genLabel
   0E5D                    5301 00108$:
                           5302 ;	game.c 825
                           5303 ;	genAssign
                           5304 ;	(registers are the same)
                           5305 ;	genAssign
                           5306 ;	AOP_STK for _can_move_map_position_1_1
   0E5D F8 02              5307 	lda	hl,2(sp)
   0E5F 70                 5308 	ld	(hl),b
   0E60 23                 5309 	inc	hl
   0E61 71                 5310 	ld	(hl),c
                           5311 ;	game.c 826
                           5312 ;	genMult
                           5313 ;	AOP_STK for _can_move_sloc0_1_0
   0E62 F8 00              5314 	lda	hl,0(sp)
   0E64 5E                 5315 	ld	e,(hl)
   0E65 23                 5316 	inc	hl
   0E66 56                 5317 	ld	d,(hl)
   0E67 6B                 5318 	ld	l,e
   0E68 62                 5319 	ld	h,d
   0E69 29                 5320 	add	hl,hl
   0E6A 29                 5321 	add	hl,hl
   0E6B 19                 5322 	add	hl,de
   0E6C 29                 5323 	add	hl,hl
   0E6D 29                 5324 	add	hl,hl
   0E6E 4D                 5325 	ld	c,l
   0E6F 44                 5326 	ld	b,h
                           5327 ;	genPlus
                           5328 ;	AOP_STK for _can_move_map_position_1_1
                           5329 ;	Can't optimise plus by inc, falling back to the normal way
   0E70 F8 02              5330 	lda	hl,2(sp)
   0E72 2A                 5331 	ld	a,(hl+)
   0E73 66                 5332 	ld	h,(hl)
   0E74 6F                 5333 	ld	l,a
   0E75 09                 5334 	add	hl,bc
   0E76 7D                 5335 	ld	a,l
   0E77 54                 5336 	ld	d,h
   0E78 F8 02              5337 	lda	hl,2(sp)
   0E7A 22                 5338 	ld	(hl+),a
   0E7B 72                 5339 	ld	(hl),d
                           5340 ;	game.c 828
                           5341 ;	genPlus
                           5342 ;	AOP_STK for _can_move_map_position_1_1
                           5343 ;	Can't optimise plus by inc, falling back to the normal way
   0E7C 11 05 19           5344 	ld	de,#_map
   0E7F 2B                 5345 	dec	hl
   0E80 2A                 5346 	ld	a,(hl+)
   0E81 66                 5347 	ld	h,(hl)
   0E82 6F                 5348 	ld	l,a
   0E83 19                 5349 	add	hl,de
   0E84 4D                 5350 	ld	c,l
   0E85 44                 5351 	ld	b,h
                           5352 ;	genPointerGet
   0E86 0A                 5353 	ld	a,(bc)
   0E87 4F                 5354 	ld	c,a
                           5355 ;	genCast
                           5356 ; Removed redundent load
   0E88 06 00              5357 	ld	b,#0x00
                           5358 ;	genCmpGt
   0E8A 3E 14              5359 	ld	a,#0x14
   0E8C 91                 5360 	sub	a,c
   0E8D 3E 00              5361 	ld	a,#0x00
   0E8F 98                 5362 	sbc	a,b
   0E90 D2 A2 0E           5363 	jp	nc,00113$
                           5364 ;	game.c 829
                           5365 ;	genCmpLt
   0E93 79                 5366 	ld	a,c
   0E94 D6 29              5367 	sub	a,#0x29
   0E96 78                 5368 	ld	a,b
   0E97 DE 00              5369 	sbc	a,#0x00
   0E99 D2 A2 0E           5370 	jp	nc,00113$
                           5371 ;	game.c 831
                           5372 ;	genRet
   0E9C 11 00 00           5373 	ld	de,#0x0000
   0E9F C3 C6 0E           5374 	jp	00118$
                           5375 ;	genLabel
   0EA2                    5376 00113$:
                           5377 ;	game.c 835
                           5378 ;	genCmpEq
                           5379 ; genCmpEq: left 2, right 2, result 0
   0EA2 79                 5380 	ld	a,c
   0EA3 FE 29              5381 	cp	a,#0x29
   0EA5 C2 AD 0E           5382 	jp	nz,00132$
   0EA8 78                 5383 	ld	a,b
   0EA9 B7                 5384 	or	a,a
   0EAA CA BD 0E           5385 	jp	z,00115$
   0EAD                    5386 00132$:
                           5387 ;	genCmpEq
                           5388 ; genCmpEq: left 2, right 2, result 0
   0EAD 79                 5389 	ld	a,c
   0EAE FE 2D              5390 	cp	a,#0x2D
   0EB0 C2 BA 0E           5391 	jp	nz,00133$
   0EB3 78                 5392 	ld	a,b
   0EB4 B7                 5393 	or	a,a
   0EB5 C2 C3 0E           5394 	jp	nz,00117$
   0EB8 18 03              5395 	jr	00134$
   0EBA                    5396 00133$:
   0EBA C3 C3 0E           5397 	jp	00117$
   0EBD                    5398 00134$:
                           5399 ;	game.c 847
                           5400 ;	genLabel
   0EBD                    5401 00115$:
                           5402 ;	genRet
   0EBD 11 00 00           5403 	ld	de,#0x0000
   0EC0 C3 C6 0E           5404 	jp	00118$
                           5405 ;	game.c 849
                           5406 ;	genLabel
   0EC3                    5407 00117$:
                           5408 ;	game.c 853
                           5409 ;	genRet
   0EC3 11 01 00           5410 	ld	de,#0x0001
                           5411 ;	genLabel
   0EC6                    5412 00118$:
                           5413 ;	genEndFunction
   0EC6 E8 06              5414 	lda	sp,6(sp)
   0EC8 C9                 5415 	ret
   0EC9                    5416 ___can_move_end:
                           5417 ;	game.c 855
                           5418 ;	genLabel
                           5419 ;	genFunction
                           5420 ;	---------------------------------
                           5421 ; Function rotate_player
                           5422 ; ---------------------------------
   0EC9                    5423 ___rotate_player_start:
   0EC9                    5424 _rotate_player:
   0EC9 E8 FC              5425 	lda	sp,-4(sp)
                           5426 ;	game.c 856
                           5427 ;	genAssign
                           5428 ;	AOP_HL for _player
   0ECB 21 AE 1A           5429 	ld	hl,#_player
   0ECE 4E                 5430 	ld	c,(hl)
   0ECF 23                 5431 	inc	hl
   0ED0 46                 5432 	ld	b,(hl)
                           5433 ;	genPlus
                           5434 ;	genPlusIncr
                           5435 ;	Can't optimise plus by inc, falling back to the normal way
   0ED1 79                 5436 	ld	a,c
   0ED2 C6 07              5437 	add	a,#0x07
   0ED4 4F                 5438 	ld	c,a
   0ED5 78                 5439 	ld	a,b
   0ED6 CE 00              5440 	adc	a,#0x00
   0ED8 47                 5441 	ld	b,a
                           5442 ;	genPointerGet
   0ED9 0A                 5443 	ld	a,(bc)
   0EDA 4F                 5444 	ld	c,a
                           5445 ;	genAssign
                           5446 ;	AOP_HL for _player
                           5447 ;	AOP_STK for _rotate_player_sloc0_1_0
   0EDB 2B                 5448 	dec	hl
   0EDC 2A                 5449 	ld	a,(hl+)
   0EDD 5E                 5450 	ld	e,(hl)
   0EDE F8 02              5451 	lda	hl,2(sp)
   0EE0 22                 5452 	ld	(hl+),a
   0EE1 73                 5453 	ld	(hl),e
                           5454 ;	genPlus
                           5455 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5456 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5457 ;	genPlusIncr
                           5458 ;	Can't optimise plus by inc, falling back to the normal way
   0EE2 2B                 5459 	dec	hl
   0EE3 5E                 5460 	ld	e,(hl)
   0EE4 23                 5461 	inc	hl
   0EE5 56                 5462 	ld	d,(hl)
   0EE6 21 0B 00           5463 	ld	hl,#0x000B
   0EE9 19                 5464 	add	hl,de
   0EEA 7D                 5465 	ld	a,l
   0EEB 54                 5466 	ld	d,h
   0EEC F8 00              5467 	lda	hl,0(sp)
                           5468 ;	genPointerGet
                           5469 ;	AOP_STK for _rotate_player_sloc1_1_0
   0EEE 22                 5470 	ld	(hl+),a
   0EEF 72                 5471 	ld	(hl),d
   0EF0 5F                 5472 	ld	e,a
   0EF1 1A                 5473 	ld	a,(de)
   0EF2 47                 5474 	ld	b,a
                           5475 ;	genIpush
                           5476 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EF3 79                 5477 	ld	a,c
   0EF4 F5                 5478 	push	af
   0EF5 33                 5479 	inc	sp
                           5480 ;	genIpush
   0EF6 78                 5481 	ld	a,b
   0EF7 F5                 5482 	push	af
   0EF8 33                 5483 	inc	sp
                           5484 ;	genCall
   0EF9 CD 00 00           5485 	call	_set_sprite_tile
   0EFC E8 02              5486 	lda	sp,2(sp)
                           5487 ;	game.c 857
                           5488 ;	genAssign
                           5489 ;	AOP_HL for _player
   0EFE 21 AE 1A           5490 	ld	hl,#_player
   0F01 4E                 5491 	ld	c,(hl)
   0F02 23                 5492 	inc	hl
   0F03 46                 5493 	ld	b,(hl)
                           5494 ;	genPlus
                           5495 ;	genPlusIncr
                           5496 ;	Can't optimise plus by inc, falling back to the normal way
   0F04 79                 5497 	ld	a,c
   0F05 C6 0B              5498 	add	a,#0x0B
   0F07 4F                 5499 	ld	c,a
   0F08 78                 5500 	ld	a,b
   0F09 CE 00              5501 	adc	a,#0x00
   0F0B 47                 5502 	ld	b,a
                           5503 ;	genPointerGet
   0F0C 0A                 5504 	ld	a,(bc)
   0F0D 4F                 5505 	ld	c,a
                           5506 ;	genIpush
                           5507 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F0E 3E 20              5508 	ld	a,#0x20
   0F10 F5                 5509 	push	af
   0F11 33                 5510 	inc	sp
                           5511 ;	genIpush
   0F12 79                 5512 	ld	a,c
   0F13 F5                 5513 	push	af
   0F14 33                 5514 	inc	sp
                           5515 ;	genCall
   0F15 CD 00 00           5516 	call	_set_sprite_prop
   0F18 E8 02              5517 	lda	sp,2(sp)
                           5518 ;	game.c 858
                           5519 ;	genIpush
                           5520 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F1A 3E 05              5521 	ld	a,#0x05
   0F1C F5                 5522 	push	af
   0F1D 33                 5523 	inc	sp
                           5524 ;	genCall
   0F1E CD 00 00           5525 	call	_performantDelay
   0F21 E8 01              5526 	lda	sp,1(sp)
                           5527 ;	game.c 859
                           5528 ;	genAssign
                           5529 ;	AOP_HL for _player
   0F23 21 AE 1A           5530 	ld	hl,#_player
   0F26 4E                 5531 	ld	c,(hl)
   0F27 23                 5532 	inc	hl
   0F28 46                 5533 	ld	b,(hl)
                           5534 ;	genPlus
                           5535 ;	genPlusIncr
   0F29 03                 5536 	inc	bc
   0F2A 03                 5537 	inc	bc
   0F2B 03                 5538 	inc	bc
   0F2C 03                 5539 	inc	bc
                           5540 ;	genPointerGet
   0F2D 0A                 5541 	ld	a,(bc)
   0F2E 4F                 5542 	ld	c,a
                           5543 ;	genAssign
                           5544 ;	AOP_HL for _player
                           5545 ;	AOP_STK for _rotate_player_sloc1_1_0
   0F2F 2B                 5546 	dec	hl
   0F30 2A                 5547 	ld	a,(hl+)
   0F31 5E                 5548 	ld	e,(hl)
   0F32 F8 00              5549 	lda	hl,0(sp)
   0F34 22                 5550 	ld	(hl+),a
   0F35 73                 5551 	ld	(hl),e
                           5552 ;	genPlus
                           5553 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5554 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5555 ;	genPlusIncr
                           5556 ;	Can't optimise plus by inc, falling back to the normal way
   0F36 2B                 5557 	dec	hl
   0F37 5E                 5558 	ld	e,(hl)
   0F38 23                 5559 	inc	hl
   0F39 56                 5560 	ld	d,(hl)
   0F3A 21 0B 00           5561 	ld	hl,#0x000B
   0F3D 19                 5562 	add	hl,de
   0F3E 7D                 5563 	ld	a,l
   0F3F 54                 5564 	ld	d,h
   0F40 F8 02              5565 	lda	hl,2(sp)
                           5566 ;	genPointerGet
                           5567 ;	AOP_STK for _rotate_player_sloc0_1_0
   0F42 22                 5568 	ld	(hl+),a
   0F43 72                 5569 	ld	(hl),d
   0F44 5F                 5570 	ld	e,a
   0F45 1A                 5571 	ld	a,(de)
   0F46 47                 5572 	ld	b,a
                           5573 ;	genIpush
                           5574 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F47 79                 5575 	ld	a,c
   0F48 F5                 5576 	push	af
   0F49 33                 5577 	inc	sp
                           5578 ;	genIpush
   0F4A 78                 5579 	ld	a,b
   0F4B F5                 5580 	push	af
   0F4C 33                 5581 	inc	sp
                           5582 ;	genCall
   0F4D CD 00 00           5583 	call	_set_sprite_tile
   0F50 E8 02              5584 	lda	sp,2(sp)
                           5585 ;	game.c 860
                           5586 ;	genAssign
                           5587 ;	AOP_HL for _player
   0F52 21 AE 1A           5588 	ld	hl,#_player
   0F55 4E                 5589 	ld	c,(hl)
   0F56 23                 5590 	inc	hl
   0F57 46                 5591 	ld	b,(hl)
                           5592 ;	genPlus
                           5593 ;	genPlusIncr
                           5594 ;	Can't optimise plus by inc, falling back to the normal way
   0F58 79                 5595 	ld	a,c
   0F59 C6 0B              5596 	add	a,#0x0B
   0F5B 4F                 5597 	ld	c,a
   0F5C 78                 5598 	ld	a,b
   0F5D CE 00              5599 	adc	a,#0x00
   0F5F 47                 5600 	ld	b,a
                           5601 ;	genPointerGet
   0F60 0A                 5602 	ld	a,(bc)
   0F61 4F                 5603 	ld	c,a
                           5604 ;	genIpush
                           5605 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F62 3E 60              5606 	ld	a,#0x60
   0F64 F5                 5607 	push	af
   0F65 33                 5608 	inc	sp
                           5609 ;	genIpush
   0F66 79                 5610 	ld	a,c
   0F67 F5                 5611 	push	af
   0F68 33                 5612 	inc	sp
                           5613 ;	genCall
   0F69 CD 00 00           5614 	call	_set_sprite_prop
   0F6C E8 02              5615 	lda	sp,2(sp)
                           5616 ;	game.c 861
                           5617 ;	genIpush
                           5618 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F6E 3E 05              5619 	ld	a,#0x05
   0F70 F5                 5620 	push	af
   0F71 33                 5621 	inc	sp
                           5622 ;	genCall
   0F72 CD 00 00           5623 	call	_performantDelay
   0F75 E8 01              5624 	lda	sp,1(sp)
                           5625 ;	game.c 862
                           5626 ;	genAssign
                           5627 ;	AOP_HL for _player
   0F77 21 AE 1A           5628 	ld	hl,#_player
   0F7A 4E                 5629 	ld	c,(hl)
   0F7B 23                 5630 	inc	hl
   0F7C 46                 5631 	ld	b,(hl)
                           5632 ;	genPlus
                           5633 ;	genPlusIncr
                           5634 ;	Can't optimise plus by inc, falling back to the normal way
   0F7D 79                 5635 	ld	a,c
   0F7E C6 07              5636 	add	a,#0x07
   0F80 4F                 5637 	ld	c,a
   0F81 78                 5638 	ld	a,b
   0F82 CE 00              5639 	adc	a,#0x00
   0F84 47                 5640 	ld	b,a
                           5641 ;	genPointerGet
   0F85 0A                 5642 	ld	a,(bc)
   0F86 4F                 5643 	ld	c,a
                           5644 ;	genAssign
                           5645 ;	AOP_HL for _player
                           5646 ;	AOP_STK for _rotate_player_sloc1_1_0
   0F87 2B                 5647 	dec	hl
   0F88 2A                 5648 	ld	a,(hl+)
   0F89 5E                 5649 	ld	e,(hl)
   0F8A F8 00              5650 	lda	hl,0(sp)
   0F8C 22                 5651 	ld	(hl+),a
   0F8D 73                 5652 	ld	(hl),e
                           5653 ;	genPlus
                           5654 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5655 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5656 ;	genPlusIncr
                           5657 ;	Can't optimise plus by inc, falling back to the normal way
   0F8E 2B                 5658 	dec	hl
   0F8F 5E                 5659 	ld	e,(hl)
   0F90 23                 5660 	inc	hl
   0F91 56                 5661 	ld	d,(hl)
   0F92 21 0B 00           5662 	ld	hl,#0x000B
   0F95 19                 5663 	add	hl,de
   0F96 7D                 5664 	ld	a,l
   0F97 54                 5665 	ld	d,h
   0F98 F8 02              5666 	lda	hl,2(sp)
                           5667 ;	genPointerGet
                           5668 ;	AOP_STK for _rotate_player_sloc0_1_0
   0F9A 22                 5669 	ld	(hl+),a
   0F9B 72                 5670 	ld	(hl),d
   0F9C 5F                 5671 	ld	e,a
   0F9D 1A                 5672 	ld	a,(de)
   0F9E 47                 5673 	ld	b,a
                           5674 ;	genIpush
                           5675 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F9F 79                 5676 	ld	a,c
   0FA0 F5                 5677 	push	af
   0FA1 33                 5678 	inc	sp
                           5679 ;	genIpush
   0FA2 78                 5680 	ld	a,b
   0FA3 F5                 5681 	push	af
   0FA4 33                 5682 	inc	sp
                           5683 ;	genCall
   0FA5 CD 00 00           5684 	call	_set_sprite_tile
   0FA8 E8 02              5685 	lda	sp,2(sp)
                           5686 ;	game.c 863
                           5687 ;	genAssign
                           5688 ;	AOP_HL for _player
   0FAA 21 AE 1A           5689 	ld	hl,#_player
   0FAD 4E                 5690 	ld	c,(hl)
   0FAE 23                 5691 	inc	hl
   0FAF 46                 5692 	ld	b,(hl)
                           5693 ;	genPlus
                           5694 ;	genPlusIncr
                           5695 ;	Can't optimise plus by inc, falling back to the normal way
   0FB0 79                 5696 	ld	a,c
   0FB1 C6 0B              5697 	add	a,#0x0B
   0FB3 4F                 5698 	ld	c,a
   0FB4 78                 5699 	ld	a,b
   0FB5 CE 00              5700 	adc	a,#0x00
   0FB7 47                 5701 	ld	b,a
                           5702 ;	genPointerGet
   0FB8 0A                 5703 	ld	a,(bc)
   0FB9 4F                 5704 	ld	c,a
                           5705 ;	genIpush
                           5706 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FBA 3E 40              5707 	ld	a,#0x40
   0FBC F5                 5708 	push	af
   0FBD 33                 5709 	inc	sp
                           5710 ;	genIpush
   0FBE 79                 5711 	ld	a,c
   0FBF F5                 5712 	push	af
   0FC0 33                 5713 	inc	sp
                           5714 ;	genCall
   0FC1 CD 00 00           5715 	call	_set_sprite_prop
   0FC4 E8 02              5716 	lda	sp,2(sp)
                           5717 ;	game.c 864
                           5718 ;	genIpush
                           5719 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC6 3E 05              5720 	ld	a,#0x05
   0FC8 F5                 5721 	push	af
   0FC9 33                 5722 	inc	sp
                           5723 ;	genCall
   0FCA CD 00 00           5724 	call	_performantDelay
   0FCD E8 01              5725 	lda	sp,1(sp)
                           5726 ;	game.c 865
                           5727 ;	genAssign
                           5728 ;	AOP_HL for _player
   0FCF 21 AE 1A           5729 	ld	hl,#_player
   0FD2 4E                 5730 	ld	c,(hl)
   0FD3 23                 5731 	inc	hl
   0FD4 46                 5732 	ld	b,(hl)
                           5733 ;	genPlus
                           5734 ;	genPlusIncr
   0FD5 03                 5735 	inc	bc
   0FD6 03                 5736 	inc	bc
   0FD7 03                 5737 	inc	bc
   0FD8 03                 5738 	inc	bc
                           5739 ;	genPointerGet
   0FD9 0A                 5740 	ld	a,(bc)
   0FDA 4F                 5741 	ld	c,a
                           5742 ;	genAssign
                           5743 ;	AOP_HL for _player
                           5744 ;	AOP_STK for _rotate_player_sloc1_1_0
   0FDB 2B                 5745 	dec	hl
   0FDC 2A                 5746 	ld	a,(hl+)
   0FDD 5E                 5747 	ld	e,(hl)
   0FDE F8 00              5748 	lda	hl,0(sp)
   0FE0 22                 5749 	ld	(hl+),a
   0FE1 73                 5750 	ld	(hl),e
                           5751 ;	genPlus
                           5752 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5753 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5754 ;	genPlusIncr
                           5755 ;	Can't optimise plus by inc, falling back to the normal way
   0FE2 2B                 5756 	dec	hl
   0FE3 5E                 5757 	ld	e,(hl)
   0FE4 23                 5758 	inc	hl
   0FE5 56                 5759 	ld	d,(hl)
   0FE6 21 0B 00           5760 	ld	hl,#0x000B
   0FE9 19                 5761 	add	hl,de
   0FEA 7D                 5762 	ld	a,l
   0FEB 54                 5763 	ld	d,h
   0FEC F8 02              5764 	lda	hl,2(sp)
                           5765 ;	genPointerGet
                           5766 ;	AOP_STK for _rotate_player_sloc0_1_0
   0FEE 22                 5767 	ld	(hl+),a
   0FEF 72                 5768 	ld	(hl),d
   0FF0 5F                 5769 	ld	e,a
   0FF1 1A                 5770 	ld	a,(de)
   0FF2 47                 5771 	ld	b,a
                           5772 ;	genIpush
                           5773 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FF3 79                 5774 	ld	a,c
   0FF4 F5                 5775 	push	af
   0FF5 33                 5776 	inc	sp
                           5777 ;	genIpush
   0FF6 78                 5778 	ld	a,b
   0FF7 F5                 5779 	push	af
   0FF8 33                 5780 	inc	sp
                           5781 ;	genCall
   0FF9 CD 00 00           5782 	call	_set_sprite_tile
   0FFC E8 02              5783 	lda	sp,2(sp)
                           5784 ;	game.c 866
                           5785 ;	genAssign
                           5786 ;	AOP_HL for _player
   0FFE 21 AE 1A           5787 	ld	hl,#_player
   1001 4E                 5788 	ld	c,(hl)
   1002 23                 5789 	inc	hl
   1003 46                 5790 	ld	b,(hl)
                           5791 ;	genPlus
                           5792 ;	genPlusIncr
                           5793 ;	Can't optimise plus by inc, falling back to the normal way
   1004 79                 5794 	ld	a,c
   1005 C6 0B              5795 	add	a,#0x0B
   1007 4F                 5796 	ld	c,a
   1008 78                 5797 	ld	a,b
   1009 CE 00              5798 	adc	a,#0x00
   100B 47                 5799 	ld	b,a
                           5800 ;	genPointerGet
   100C 0A                 5801 	ld	a,(bc)
   100D 4F                 5802 	ld	c,a
                           5803 ;	genIpush
                           5804 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   100E 3E 00              5805 	ld	a,#0x00
   1010 F5                 5806 	push	af
   1011 33                 5807 	inc	sp
                           5808 ;	genIpush
   1012 79                 5809 	ld	a,c
   1013 F5                 5810 	push	af
   1014 33                 5811 	inc	sp
                           5812 ;	genCall
   1015 CD 00 00           5813 	call	_set_sprite_prop
   1018 E8 02              5814 	lda	sp,2(sp)
                           5815 ;	game.c 867
                           5816 ;	genIpush
                           5817 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   101A 3E 05              5818 	ld	a,#0x05
   101C F5                 5819 	push	af
   101D 33                 5820 	inc	sp
                           5821 ;	genCall
   101E CD 00 00           5822 	call	_performantDelay
   1021 E8 01              5823 	lda	sp,1(sp)
                           5824 ;	game.c 868
                           5825 ;	genAssign
                           5826 ;	AOP_HL for _player
   1023 21 AE 1A           5827 	ld	hl,#_player
   1026 4E                 5828 	ld	c,(hl)
   1027 23                 5829 	inc	hl
   1028 46                 5830 	ld	b,(hl)
                           5831 ;	genPlus
                           5832 ;	genPlusIncr
   1029 03                 5833 	inc	bc
   102A 03                 5834 	inc	bc
                           5835 ;	genPointerGet
   102B 0A                 5836 	ld	a,(bc)
   102C 4F                 5837 	ld	c,a
                           5838 ;	genAssign
                           5839 ;	AOP_HL for _player
                           5840 ;	AOP_STK for _rotate_player_sloc1_1_0
   102D 2B                 5841 	dec	hl
   102E 2A                 5842 	ld	a,(hl+)
   102F 5E                 5843 	ld	e,(hl)
   1030 F8 00              5844 	lda	hl,0(sp)
   1032 22                 5845 	ld	(hl+),a
   1033 73                 5846 	ld	(hl),e
                           5847 ;	genPlus
                           5848 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5849 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5850 ;	genPlusIncr
                           5851 ;	Can't optimise plus by inc, falling back to the normal way
   1034 2B                 5852 	dec	hl
   1035 5E                 5853 	ld	e,(hl)
   1036 23                 5854 	inc	hl
   1037 56                 5855 	ld	d,(hl)
   1038 21 0B 00           5856 	ld	hl,#0x000B
   103B 19                 5857 	add	hl,de
   103C 7D                 5858 	ld	a,l
   103D 54                 5859 	ld	d,h
   103E F8 02              5860 	lda	hl,2(sp)
                           5861 ;	genPointerGet
                           5862 ;	AOP_STK for _rotate_player_sloc0_1_0
   1040 22                 5863 	ld	(hl+),a
   1041 72                 5864 	ld	(hl),d
   1042 5F                 5865 	ld	e,a
   1043 1A                 5866 	ld	a,(de)
   1044 47                 5867 	ld	b,a
                           5868 ;	genIpush
                           5869 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1045 79                 5870 	ld	a,c
   1046 F5                 5871 	push	af
   1047 33                 5872 	inc	sp
                           5873 ;	genIpush
   1048 78                 5874 	ld	a,b
   1049 F5                 5875 	push	af
   104A 33                 5876 	inc	sp
                           5877 ;	genCall
   104B CD 00 00           5878 	call	_set_sprite_tile
   104E E8 02              5879 	lda	sp,2(sp)
                           5880 ;	game.c 869
                           5881 ;	genAssign
                           5882 ;	AOP_HL for _player
   1050 21 AE 1A           5883 	ld	hl,#_player
   1053 4E                 5884 	ld	c,(hl)
   1054 23                 5885 	inc	hl
   1055 46                 5886 	ld	b,(hl)
                           5887 ;	genPlus
                           5888 ;	genPlusIncr
                           5889 ;	Can't optimise plus by inc, falling back to the normal way
   1056 79                 5890 	ld	a,c
   1057 C6 0B              5891 	add	a,#0x0B
   1059 4F                 5892 	ld	c,a
   105A 78                 5893 	ld	a,b
   105B CE 00              5894 	adc	a,#0x00
   105D 47                 5895 	ld	b,a
                           5896 ;	genPointerGet
   105E 0A                 5897 	ld	a,(bc)
   105F 4F                 5898 	ld	c,a
                           5899 ;	genIpush
                           5900 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1060 3E 00              5901 	ld	a,#0x00
   1062 F5                 5902 	push	af
   1063 33                 5903 	inc	sp
                           5904 ;	genIpush
   1064 79                 5905 	ld	a,c
   1065 F5                 5906 	push	af
   1066 33                 5907 	inc	sp
                           5908 ;	genCall
   1067 CD 00 00           5909 	call	_set_sprite_prop
   106A E8 02              5910 	lda	sp,2(sp)
                           5911 ;	genLabel
   106C                    5912 00101$:
                           5913 ;	genEndFunction
   106C E8 04              5914 	lda	sp,4(sp)
   106E C9                 5915 	ret
   106F                    5916 ___rotate_player_end:
                           5917 ;	game.c 872
                           5918 ;	genLabel
                           5919 ;	genFunction
                           5920 ;	---------------------------------
                           5921 ; Function move_character
                           5922 ; ---------------------------------
   106F                    5923 ___move_character_start:
   106F                    5924 _move_character:
   106F E8 F1              5925 	lda	sp,-15(sp)
                           5926 ;	game.c 875
                           5927 ;	genAssign
                           5928 ;	AOP_HL for _player
   1071 21 AE 1A           5929 	ld	hl,#_player
   1074 4E                 5930 	ld	c,(hl)
   1075 23                 5931 	inc	hl
   1076 46                 5932 	ld	b,(hl)
                           5933 ;	genPlus
                           5934 ;	genPlusIncr
                           5935 ;	Can't optimise plus by inc, falling back to the normal way
   1077 79                 5936 	ld	a,c
   1078 C6 0B              5937 	add	a,#0x0B
   107A 4F                 5938 	ld	c,a
   107B 78                 5939 	ld	a,b
   107C CE 00              5940 	adc	a,#0x00
   107E 47                 5941 	ld	b,a
                           5942 ;	genPointerGet
   107F 0A                 5943 	ld	a,(bc)
   1080 4F                 5944 	ld	c,a
                           5945 ;	genAssign
                           5946 ;	AOP_STK for 
                           5947 ;	AOP_STK for _move_character_sloc0_1_0
   1081 F8 11              5948 	lda	hl,17(sp)
   1083 2A                 5949 	ld	a,(hl+)
   1084 5E                 5950 	ld	e,(hl)
   1085 F8 0D              5951 	lda	hl,13(sp)
   1087 22                 5952 	ld	(hl+),a
   1088 73                 5953 	ld	(hl),e
                           5954 ;	genPlus
                           5955 ;	AOP_STK for _move_character_sloc0_1_0
                           5956 ;	AOP_STK for _move_character_sloc1_1_0
                           5957 ;	genPlusIncr
                           5958 ;	Can't optimise plus by inc, falling back to the normal way
   1089 2B                 5959 	dec	hl
   108A 5E                 5960 	ld	e,(hl)
   108B 23                 5961 	inc	hl
   108C 56                 5962 	ld	d,(hl)
   108D 21 0B 00           5963 	ld	hl,#0x000B
   1090 19                 5964 	add	hl,de
   1091 7D                 5965 	ld	a,l
   1092 54                 5966 	ld	d,h
   1093 F8 0B              5967 	lda	hl,11(sp)
                           5968 ;	genPointerGet
                           5969 ;	AOP_STK for _move_character_sloc1_1_0
   1095 22                 5970 	ld	(hl+),a
   1096 72                 5971 	ld	(hl),d
   1097 5F                 5972 	ld	e,a
   1098 1A                 5973 	ld	a,(de)
   1099 47                 5974 	ld	b,a
                           5975 ;	genCmpEq
                           5976 ; genCmpEq: left 1, right 1, result 0
   109A 79                 5977 	ld	a,c
   109B B8                 5978 	cp	b
                           5979 ;	game.c 876
                           5980 ;	genRet
                           5981 ;	genLabel
   109C CA A2 10           5982 	jp	z,00102$
   109F                    5983 00197$:
   109F C3 90 18           5984 	jp	00166$
   10A2                    5985 00102$:
                           5986 ;	game.c 879
                           5987 ;	genPlus
                           5988 ;	AOP_STK for _move_character_sloc0_1_0
                           5989 ;	AOP_STK for _move_character_sloc2_1_0
                           5990 ;	genPlusIncr
                           5991 ;	Can't optimise plus by inc, falling back to the normal way
   10A2 F8 0D              5992 	lda	hl,13(sp)
   10A4 5E                 5993 	ld	e,(hl)
   10A5 23                 5994 	inc	hl
   10A6 56                 5995 	ld	d,(hl)
   10A7 21 09 00           5996 	ld	hl,#0x0009
   10AA 19                 5997 	add	hl,de
   10AB 7D                 5998 	ld	a,l
   10AC 54                 5999 	ld	d,h
   10AD F8 09              6000 	lda	hl,9(sp)
                           6001 ;	genPointerGet
                           6002 ;	AOP_STK for _move_character_sloc2_1_0
   10AF 22                 6003 	ld	(hl+),a
   10B0 72                 6004 	ld	(hl),d
   10B1 5F                 6005 	ld	e,a
   10B2 1A                 6006 	ld	a,(de)
                           6007 ;	genCmpEq
                           6008 ; genCmpEq: left 1, right 1, result 0
   10B3 4F                 6009 	ld	c,a
   10B4 B7                 6010 	or	a,a
   10B5 CA B3 14           6011 	jp	z,00164$
   10B8                    6012 00198$:
                           6013 ;	game.c 882
                           6014 ;	genCmpEq
                           6015 ; genCmpEq: left 1, right 1, result 0
   10B8 78                 6016 	ld	a,b
   10B9 FE 01              6017 	cp	a,#0x01
   10BB C2 09 14           6018 	jp	nz,00124$
   10BE 18 03              6019 	jr	00200$
   10C0                    6020 00199$:
   10C0 C3 09 14           6021 	jp	00124$
   10C3                    6022 00200$:
                           6023 ;	game.c 884
                           6024 ;	genAssign
   10C3 0E 02              6025 	ld	c,#0x02
                           6026 ;	game.c 887
                           6027 ;	genPlus
                           6028 ;	AOP_STK for _move_character_sloc0_1_0
                           6029 ;	AOP_STK for _move_character_sloc3_1_0
                           6030 ;	genPlusIncr
                           6031 ;	Can't optimise plus by inc, falling back to the normal way
   10C5 F8 0D              6032 	lda	hl,13(sp)
   10C7 5E                 6033 	ld	e,(hl)
   10C8 23                 6034 	inc	hl
   10C9 56                 6035 	ld	d,(hl)
   10CA 21 0A 00           6036 	ld	hl,#0x000A
   10CD 19                 6037 	add	hl,de
   10CE 7D                 6038 	ld	a,l
   10CF 54                 6039 	ld	d,h
   10D0 F8 07              6040 	lda	hl,7(sp)
                           6041 ;	genPointerGet
                           6042 ;	AOP_STK for _move_character_sloc3_1_0
                           6043 ;	AOP_STK for _move_character_sloc4_1_0
   10D2 22                 6044 	ld	(hl+),a
   10D3 72                 6045 	ld	(hl),d
   10D4 5F                 6046 	ld	e,a
   10D5 1A                 6047 	ld	a,(de)
   10D6 2B                 6048 	dec	hl
   10D7 2B                 6049 	dec	hl
                           6050 ;	genCmpEq
                           6051 ;	AOP_STK for _move_character_sloc4_1_0
                           6052 ; genCmpEq: left 1, right 1, result 0
   10D8 77                 6053 	ld      (hl),a
                           6054 ; Removed redundent load
   10D9 FE 04              6055 	cp	a,#0x04
   10DB CA FB 10           6056 	jp	z,00105$
   10DE                    6057 00201$:
                           6058 ;	game.c 888
                           6059 ;	genCmpEq
                           6060 ;	AOP_STK for _move_character_sloc4_1_0
                           6061 ; genCmpEq: left 1, right 1, result 0
   10DE F8 06              6062 	lda	hl,6(sp)
   10E0 7E                 6063 	ld	a,(hl)
   10E1 FE 08              6064 	cp	a,#0x08
   10E3 CA FB 10           6065 	jp	z,00105$
   10E6                    6066 00202$:
                           6067 ;	game.c 889
                           6068 ;	genCmpEq
                           6069 ;	AOP_STK for _move_character_sloc4_1_0
                           6070 ; genCmpEq: left 1, right 1, result 0
   10E6 F8 06              6071 	lda	hl,6(sp)
   10E8 7E                 6072 	ld	a,(hl)
   10E9 FE 0C              6073 	cp	a,#0x0C
   10EB CA FB 10           6074 	jp	z,00105$
   10EE                    6075 00203$:
                           6076 ;	game.c 890
                           6077 ;	genCmpEq
                           6078 ;	AOP_STK for _move_character_sloc4_1_0
                           6079 ; genCmpEq: left 1, right 1, result 0
   10EE F8 06              6080 	lda	hl,6(sp)
   10F0 7E                 6081 	ld	a,(hl)
   10F1 FE 10              6082 	cp	a,#0x10
   10F3 C2 56 11           6083 	jp	nz,00106$
   10F6 18 03              6084 	jr	00205$
   10F8                    6085 00204$:
   10F8 C3 56 11           6086 	jp	00106$
   10FB                    6087 00205$:
                           6088 ;	genLabel
   10FB                    6089 00105$:
                           6090 ;	game.c 892
                           6091 ;	genPlus
                           6092 ;	AOP_STK for _move_character_sloc0_1_0
                           6093 ;	AOP_STK for _move_character_sloc5_1_0
                           6094 ;	genPlusIncr
                           6095 ;	Can't optimise plus by inc, falling back to the normal way
   10FB F8 0D              6096 	lda	hl,13(sp)
   10FD 5E                 6097 	ld	e,(hl)
   10FE 23                 6098 	inc	hl
   10FF 56                 6099 	ld	d,(hl)
   1100 21 08 00           6100 	ld	hl,#0x0008
   1103 19                 6101 	add	hl,de
   1104 7D                 6102 	ld	a,l
   1105 54                 6103 	ld	d,h
   1106 F8 04              6104 	lda	hl,4(sp)
                           6105 ;	genPointerGet
                           6106 ;	AOP_STK for _move_character_sloc5_1_0
                           6107 ;	AOP_STK for _move_character_sloc4_1_0
   1108 22                 6108 	ld	(hl+),a
   1109 72                 6109 	ld	(hl),d
   110A 5F                 6110 	ld	e,a
   110B 1A                 6111 	ld	a,(de)
   110C 23                 6112 	inc	hl
   110D 77                 6113 	ld	(hl),a
                           6114 ;	genPlus
                           6115 ;	AOP_STK for _move_character_sloc0_1_0
                           6116 ;	AOP_STK for _move_character_sloc5_1_0
                           6117 ;	genPlusIncr
                           6118 ;	Can't optimise plus by inc, falling back to the normal way
   110E F8 0D              6119 	lda	hl,13(sp)
   1110 5E                 6120 	ld	e,(hl)
   1111 23                 6121 	inc	hl
   1112 56                 6122 	ld	d,(hl)
   1113 21 01 00           6123 	ld	hl,#0x0001
   1116 19                 6124 	add	hl,de
   1117 7D                 6125 	ld	a,l
   1118 54                 6126 	ld	d,h
   1119 F8 04              6127 	lda	hl,4(sp)
                           6128 ;	genPointerGet
                           6129 ;	AOP_STK for _move_character_sloc5_1_0
                           6130 ;	AOP_STK for _move_character_sloc6_1_0
   111B 22                 6131 	ld	(hl+),a
   111C 72                 6132 	ld	(hl),d
   111D 5F                 6133 	ld	e,a
   111E 1A                 6134 	ld	a,(de)
   111F 2B                 6135 	dec	hl
   1120 2B                 6136 	dec	hl
   1121 77                 6137 	ld	(hl),a
                           6138 ;	genPointerGet
                           6139 ;	AOP_STK for _move_character_sloc0_1_0
                           6140 ;	AOP_STK for _move_character_sloc5_1_0
   1122 F8 0D              6141 	lda	hl,13(sp)
   1124 5E                 6142 	ld	e,(hl)
   1125 23                 6143 	inc	hl
   1126 56                 6144 	ld	d,(hl)
   1127 1A                 6145 	ld	a,(de)
   1128 F8 04              6146 	lda	hl,4(sp)
   112A 77                 6147 	ld	(hl),a
                           6148 ;	genIpush
                           6149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   112B C5                 6150 	push	bc
                           6151 ;	AOP_STK for _move_character_sloc4_1_0
   112C 23                 6152 	inc	hl
   112D 23                 6153 	inc	hl
   112E 7E                 6154 	ld	a,(hl)
   112F F5                 6155 	push	af
   1130 33                 6156 	inc	sp
                           6157 ;	genIpush
                           6158 ;	AOP_STK for _move_character_sloc6_1_0
   1131 F8 06              6159 	lda	hl,6(sp)
   1133 7E                 6160 	ld	a,(hl)
   1134 F5                 6161 	push	af
   1135 33                 6162 	inc	sp
                           6163 ;	genIpush
                           6164 ;	AOP_STK for _move_character_sloc5_1_0
   1136 23                 6165 	inc	hl
   1137 7E                 6166 	ld	a,(hl)
   1138 F5                 6167 	push	af
   1139 33                 6168 	inc	sp
                           6169 ;	genCall
   113A CD B0 0D           6170 	call	_can_move
                           6171 ;	AOP_STK for _move_character_sloc5_1_0
   113D F8 0A              6172 	lda	hl,10(sp)
   113F 72                 6173 	ld	(hl),d
   1140 2B                 6174 	dec	hl
   1141 73                 6175 	ld	(hl),e
   1142 E8 03              6176 	lda	sp,3(sp)
   1144 C1                 6177 	pop	bc
                           6178 ;	genIfx
                           6179 ;	AOP_STK for _move_character_sloc5_1_0
   1145 F8 04              6180 	lda	hl,4(sp)
   1147 2A                 6181 	ld	a,(hl+)
   1148 B6                 6182 	or	a,(hl)
   1149 C2 56 11           6183 	jp	nz,00106$
                           6184 ;	game.c 893
                           6185 ;	genAssign (pointer)
                           6186 ;	AOP_STK for _move_character_sloc3_1_0
   114C 23                 6187 	inc	hl
   114D 23                 6188 	inc	hl
   114E 5E                 6189 	ld	e,(hl)
   114F 23                 6190 	inc	hl
   1150 56                 6191 	ld	d,(hl)
   1151 3E 01              6192 	ld	a,#0x01
   1153 12                 6193 	ld	(de),a
                           6194 ;	game.c 895
                           6195 ;	genAssign
   1154 0E 00              6196 	ld	c,#0x00
                           6197 ;	genLabel
   1156                    6198 00106$:
                           6199 ;	game.c 900
                           6200 ;	genPlus
                           6201 ;	AOP_STK for _move_character_sloc0_1_0
                           6202 ;	AOP_STK for _move_character_sloc5_1_0
                           6203 ;	genPlusIncr
                           6204 ;	Can't optimise plus by inc, falling back to the normal way
   1156 F8 0D              6205 	lda	hl,13(sp)
   1158 5E                 6206 	ld	e,(hl)
   1159 23                 6207 	inc	hl
   115A 56                 6208 	ld	d,(hl)
   115B 21 08 00           6209 	ld	hl,#0x0008
   115E 19                 6210 	add	hl,de
   115F 7D                 6211 	ld	a,l
   1160 54                 6212 	ld	d,h
   1161 F8 04              6213 	lda	hl,4(sp)
                           6214 ;	genPointerGet
                           6215 ;	AOP_STK for _move_character_sloc5_1_0
                           6216 ;	AOP_STK for _move_character_sloc6_1_0
   1163 22                 6217 	ld	(hl+),a
   1164 72                 6218 	ld	(hl),d
   1165 5F                 6219 	ld	e,a
   1166 1A                 6220 	ld	a,(de)
   1167 2B                 6221 	dec	hl
   1168 2B                 6222 	dec	hl
   1169 77                 6223 	ld	(hl),a
                           6224 ;	genCmpGt
                           6225 ;	AOP_STK for _move_character_sloc6_1_0
                           6226 ;	AOP_STK for _move_character_sloc5_1_0
   116A 3E 04              6227 	ld	a,#0x04
   116C 96                 6228 	sub	a,(hl)
   116D 3E 00              6229 	ld	a,#0x00
   116F 17                 6230 	rla
   1170 23                 6231 	inc	hl
   1171 77                 6232 	ld	(hl),a
                           6233 ;	genIfx
                           6234 ;	AOP_STK for _move_character_sloc5_1_0
   1172 AF                 6235 	xor	a,a
   1173 B6                 6236 	or	a,(hl)
   1174 C2 DF 12           6237 	jp	nz,00115$
                           6238 ;	genJumpTab
                           6239 ;	AOP_STK for _move_character_sloc6_1_0
   1177 2B                 6240 	dec	hl
   1178 5E                 6241 	ld	e,(hl)
   1179 16 00              6242 	ld	d,#0x00
   117B 21 82 11           6243 	ld	hl,#00206$
   117E 19                 6244 	add	hl,de
   117F 19                 6245 	add	hl,de
   1180 19                 6246 	add	hl,de
   1181 E9                 6247 	jp	(hl)
   1182                    6248 00206$:
   1182 C3 D9 12           6249 	jp	00114$
   1185 C3 2B 12           6250 	jp	00112$
   1188 C3 E1 11           6251 	jp	00111$
   118B C3 85 12           6252 	jp	00113$
   118E C3 91 11           6253 	jp	00110$
                           6254 ;	game.c 902
                           6255 ;	genLabel
   1191                    6256 00110$:
                           6257 ;	genPointerGet
                           6258 ;	AOP_STK for _move_character_sloc0_1_0
                           6259 ;	AOP_STK for _move_character_sloc4_1_0
   1191 F8 0D              6260 	lda	hl,13(sp)
   1193 5E                 6261 	ld	e,(hl)
   1194 23                 6262 	inc	hl
   1195 56                 6263 	ld	d,(hl)
   1196 1A                 6264 	ld	a,(de)
   1197 F8 06              6265 	lda	hl,6(sp)
                           6266 ;	genMinus
                           6267 ;	AOP_STK for _move_character_sloc4_1_0
                           6268 ;	AOP_STK for _move_character_sloc7_1_0
   1199 77                 6269 	ld      (hl),a
                           6270 ; Removed redundent load
   119A 91                 6271 	sub	a,c
   119B F8 02              6272 	lda	hl,2(sp)
   119D 77                 6273 	ld	(hl),a
                           6274 ;	genAssign (pointer)
                           6275 ;	AOP_STK for _move_character_sloc0_1_0
                           6276 ;	AOP_STK for _move_character_sloc7_1_0
   119E F8 0D              6277 	lda	hl,13(sp)
   11A0 5E                 6278 	ld	e,(hl)
   11A1 23                 6279 	inc	hl
   11A2 56                 6280 	ld	d,(hl)
   11A3 F8 02              6281 	lda	hl,2(sp)
   11A5 7E                 6282 	ld	a,(hl)
   11A6 12                 6283 	ld	(de),a
                           6284 ;	game.c 903
                           6285 ;	genPlus
                           6286 ;	AOP_STK for _move_character_sloc0_1_0
                           6287 ;	AOP_STK for _move_character_sloc8_1_0
                           6288 ;	genPlusIncr
                           6289 ;	Can't optimise plus by inc, falling back to the normal way
   11A7 F8 0D              6290 	lda	hl,13(sp)
   11A9 5E                 6291 	ld	e,(hl)
   11AA 23                 6292 	inc	hl
   11AB 56                 6293 	ld	d,(hl)
   11AC 21 04 00           6294 	ld	hl,#0x0004
   11AF 19                 6295 	add	hl,de
   11B0 7D                 6296 	ld	a,l
   11B1 54                 6297 	ld	d,h
   11B2 F8 00              6298 	lda	hl,0(sp)
                           6299 ;	genPointerGet
                           6300 ;	AOP_STK for _move_character_sloc8_1_0
                           6301 ;	AOP_STK for _move_character_sloc7_1_0
   11B4 22                 6302 	ld	(hl+),a
   11B5 72                 6303 	ld	(hl),d
   11B6 5F                 6304 	ld	e,a
   11B7 1A                 6305 	ld	a,(de)
   11B8 23                 6306 	inc	hl
   11B9 77                 6307 	ld	(hl),a
                           6308 ;	genIpush
                           6309 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   11BA C5                 6310 	push	bc
                           6311 ;	AOP_STK for _move_character_sloc7_1_0
   11BB 7E                 6312 	ld	a,(hl)
   11BC F5                 6313 	push	af
   11BD 33                 6314 	inc	sp
                           6315 ;	genIpush
   11BE 78                 6316 	ld	a,b
   11BF F5                 6317 	push	af
   11C0 33                 6318 	inc	sp
                           6319 ;	genCall
   11C1 CD 00 00           6320 	call	_set_sprite_tile
   11C4 E8 02              6321 	lda	sp,2(sp)
   11C6 C1                 6322 	pop	bc
                           6323 ;	game.c 904
                           6324 ;	genPointerGet
                           6325 ;	AOP_STK for _move_character_sloc1_1_0
                           6326 ;	AOP_STK for _move_character_sloc8_1_0
   11C7 F8 0B              6327 	lda	hl,11(sp)
   11C9 5E                 6328 	ld	e,(hl)
   11CA 23                 6329 	inc	hl
   11CB 56                 6330 	ld	d,(hl)
   11CC 1A                 6331 	ld	a,(de)
   11CD F8 00              6332 	lda	hl,0(sp)
   11CF 77                 6333 	ld	(hl),a
                           6334 ;	genIpush
                           6335 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   11D0 C5                 6336 	push	bc
   11D1 3E 20              6337 	ld	a,#0x20
   11D3 F5                 6338 	push	af
   11D4 33                 6339 	inc	sp
                           6340 ;	genIpush
                           6341 ;	AOP_STK for _move_character_sloc8_1_0
   11D5 7E                 6342 	ld	a,(hl)
   11D6 F5                 6343 	push	af
   11D7 33                 6344 	inc	sp
                           6345 ;	genCall
   11D8 CD 00 00           6346 	call	_set_sprite_prop
   11DB E8 02              6347 	lda	sp,2(sp)
   11DD C1                 6348 	pop	bc
                           6349 ;	game.c 905
                           6350 ;	genGoto
   11DE C3 DF 12           6351 	jp	00115$
                           6352 ;	game.c 907
                           6353 ;	genLabel
   11E1                    6354 00111$:
                           6355 ;	genPlus
                           6356 ;	AOP_STK for _move_character_sloc0_1_0
                           6357 ;	AOP_STK for _move_character_sloc8_1_0
                           6358 ;	genPlusIncr
                           6359 ;	Can't optimise plus by inc, falling back to the normal way
   11E1 F8 0D              6360 	lda	hl,13(sp)
   11E3 5E                 6361 	ld	e,(hl)
   11E4 23                 6362 	inc	hl
   11E5 56                 6363 	ld	d,(hl)
   11E6 21 04 00           6364 	ld	hl,#0x0004
   11E9 19                 6365 	add	hl,de
   11EA 7D                 6366 	ld	a,l
   11EB 54                 6367 	ld	d,h
   11EC F8 00              6368 	lda	hl,0(sp)
                           6369 ;	genPointerGet
                           6370 ;	AOP_STK for _move_character_sloc8_1_0
                           6371 ;	AOP_STK for _move_character_sloc7_1_0
   11EE 22                 6372 	ld	(hl+),a
   11EF 72                 6373 	ld	(hl),d
   11F0 5F                 6374 	ld	e,a
   11F1 1A                 6375 	ld	a,(de)
   11F2 23                 6376 	inc	hl
   11F3 77                 6377 	ld	(hl),a
                           6378 ;	genIpush
                           6379 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   11F4 C5                 6380 	push	bc
                           6381 ;	AOP_STK for _move_character_sloc7_1_0
   11F5 7E                 6382 	ld	a,(hl)
   11F6 F5                 6383 	push	af
   11F7 33                 6384 	inc	sp
                           6385 ;	genIpush
   11F8 78                 6386 	ld	a,b
   11F9 F5                 6387 	push	af
   11FA 33                 6388 	inc	sp
                           6389 ;	genCall
   11FB CD 00 00           6390 	call	_set_sprite_tile
   11FE E8 02              6391 	lda	sp,2(sp)
   1200 C1                 6392 	pop	bc
                           6393 ;	game.c 908
                           6394 ;	genPointerGet
                           6395 ;	AOP_STK for _move_character_sloc1_1_0
                           6396 ;	AOP_STK for _move_character_sloc8_1_0
   1201 F8 0B              6397 	lda	hl,11(sp)
   1203 5E                 6398 	ld	e,(hl)
   1204 23                 6399 	inc	hl
   1205 56                 6400 	ld	d,(hl)
   1206 1A                 6401 	ld	a,(de)
   1207 F8 00              6402 	lda	hl,0(sp)
   1209 77                 6403 	ld	(hl),a
                           6404 ;	genIpush
                           6405 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   120A C5                 6406 	push	bc
   120B 3E 00              6407 	ld	a,#0x00
   120D F5                 6408 	push	af
   120E 33                 6409 	inc	sp
                           6410 ;	genIpush
                           6411 ;	AOP_STK for _move_character_sloc8_1_0
   120F 7E                 6412 	ld	a,(hl)
   1210 F5                 6413 	push	af
   1211 33                 6414 	inc	sp
                           6415 ;	genCall
   1212 CD 00 00           6416 	call	_set_sprite_prop
   1215 E8 02              6417 	lda	sp,2(sp)
   1217 C1                 6418 	pop	bc
                           6419 ;	game.c 909
                           6420 ;	genPointerGet
                           6421 ;	AOP_STK for _move_character_sloc0_1_0
                           6422 ;	AOP_STK for _move_character_sloc8_1_0
   1218 F8 0D              6423 	lda	hl,13(sp)
   121A 5E                 6424 	ld	e,(hl)
   121B 23                 6425 	inc	hl
   121C 56                 6426 	ld	d,(hl)
   121D 1A                 6427 	ld	a,(de)
   121E F8 00              6428 	lda	hl,0(sp)
                           6429 ;	genPlus
                           6430 ;	AOP_STK for _move_character_sloc8_1_0
                           6431 ;	Can't optimise plus by inc, falling back to the normal way
   1220 77                 6432 	ld      (hl),a
                           6433 ; Removed redundent load
   1221 81                 6434 	add	a,c
                           6435 ;	genAssign (pointer)
                           6436 ;	AOP_STK for _move_character_sloc0_1_0
   1222 F8 0D              6437 	lda	hl,13(sp)
   1224 5E                 6438 	ld	e,(hl)
   1225 23                 6439 	inc	hl
   1226 56                 6440 	ld	d,(hl)
   1227 12                 6441 	ld	(de),a
                           6442 ;	game.c 910
                           6443 ;	genGoto
   1228 C3 DF 12           6444 	jp	00115$
                           6445 ;	game.c 912
                           6446 ;	genLabel
   122B                    6447 00112$:
                           6448 ;	genPlus
                           6449 ;	AOP_STK for _move_character_sloc0_1_0
                           6450 ;	AOP_STK for _move_character_sloc8_1_0
                           6451 ;	genPlusIncr
                           6452 ;	Can't optimise plus by inc, falling back to the normal way
   122B F8 0D              6453 	lda	hl,13(sp)
   122D 5E                 6454 	ld	e,(hl)
   122E 23                 6455 	inc	hl
   122F 56                 6456 	ld	d,(hl)
   1230 21 07 00           6457 	ld	hl,#0x0007
   1233 19                 6458 	add	hl,de
   1234 7D                 6459 	ld	a,l
   1235 54                 6460 	ld	d,h
   1236 F8 00              6461 	lda	hl,0(sp)
                           6462 ;	genPointerGet
                           6463 ;	AOP_STK for _move_character_sloc8_1_0
                           6464 ;	AOP_STK for _move_character_sloc7_1_0
   1238 22                 6465 	ld	(hl+),a
   1239 72                 6466 	ld	(hl),d
   123A 5F                 6467 	ld	e,a
   123B 1A                 6468 	ld	a,(de)
   123C 23                 6469 	inc	hl
   123D 77                 6470 	ld	(hl),a
                           6471 ;	genIpush
                           6472 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   123E C5                 6473 	push	bc
                           6474 ;	AOP_STK for _move_character_sloc7_1_0
   123F 7E                 6475 	ld	a,(hl)
   1240 F5                 6476 	push	af
   1241 33                 6477 	inc	sp
                           6478 ;	genIpush
   1242 78                 6479 	ld	a,b
   1243 F5                 6480 	push	af
   1244 33                 6481 	inc	sp
                           6482 ;	genCall
   1245 CD 00 00           6483 	call	_set_sprite_tile
   1248 E8 02              6484 	lda	sp,2(sp)
   124A C1                 6485 	pop	bc
                           6486 ;	game.c 913
                           6487 ;	genPointerGet
                           6488 ;	AOP_STK for _move_character_sloc1_1_0
                           6489 ;	AOP_STK for _move_character_sloc8_1_0
   124B F8 0B              6490 	lda	hl,11(sp)
   124D 5E                 6491 	ld	e,(hl)
   124E 23                 6492 	inc	hl
   124F 56                 6493 	ld	d,(hl)
   1250 1A                 6494 	ld	a,(de)
   1251 F8 00              6495 	lda	hl,0(sp)
   1253 77                 6496 	ld	(hl),a
                           6497 ;	genIpush
                           6498 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1254 C5                 6499 	push	bc
   1255 3E 20              6500 	ld	a,#0x20
   1257 F5                 6501 	push	af
   1258 33                 6502 	inc	sp
                           6503 ;	genIpush
                           6504 ;	AOP_STK for _move_character_sloc8_1_0
   1259 7E                 6505 	ld	a,(hl)
   125A F5                 6506 	push	af
   125B 33                 6507 	inc	sp
                           6508 ;	genCall
   125C CD 00 00           6509 	call	_set_sprite_prop
   125F E8 02              6510 	lda	sp,2(sp)
   1261 C1                 6511 	pop	bc
                           6512 ;	game.c 914
                           6513 ;	genPlus
                           6514 ;	AOP_STK for _move_character_sloc0_1_0
                           6515 ;	AOP_STK for _move_character_sloc8_1_0
                           6516 ;	genPlusIncr
                           6517 ;	Can't optimise plus by inc, falling back to the normal way
   1262 F8 0D              6518 	lda	hl,13(sp)
   1264 5E                 6519 	ld	e,(hl)
   1265 23                 6520 	inc	hl
   1266 56                 6521 	ld	d,(hl)
   1267 21 01 00           6522 	ld	hl,#0x0001
   126A 19                 6523 	add	hl,de
   126B 7D                 6524 	ld	a,l
   126C 54                 6525 	ld	d,h
   126D F8 00              6526 	lda	hl,0(sp)
                           6527 ;	genPointerGet
                           6528 ;	AOP_STK for _move_character_sloc8_1_0
                           6529 ;	AOP_STK for _move_character_sloc7_1_0
   126F 22                 6530 	ld	(hl+),a
   1270 72                 6531 	ld	(hl),d
   1271 5F                 6532 	ld	e,a
   1272 1A                 6533 	ld	a,(de)
   1273 23                 6534 	inc	hl
                           6535 ;	genMinus
                           6536 ;	AOP_STK for _move_character_sloc7_1_0
                           6537 ;	AOP_STK for _move_character_sloc4_1_0
   1274 77                 6538 	ld      (hl),a
                           6539 ; Removed redundent load
   1275 91                 6540 	sub	a,c
   1276 F8 06              6541 	lda	hl,6(sp)
   1278 77                 6542 	ld	(hl),a
                           6543 ;	genAssign (pointer)
                           6544 ;	AOP_STK for _move_character_sloc8_1_0
                           6545 ;	AOP_STK for _move_character_sloc4_1_0
   1279 F8 00              6546 	lda	hl,0(sp)
   127B 5E                 6547 	ld	e,(hl)
   127C 23                 6548 	inc	hl
   127D 56                 6549 	ld	d,(hl)
   127E F8 06              6550 	lda	hl,6(sp)
   1280 7E                 6551 	ld	a,(hl)
   1281 12                 6552 	ld	(de),a
                           6553 ;	game.c 915
                           6554 ;	genGoto
   1282 C3 DF 12           6555 	jp	00115$
                           6556 ;	game.c 917
                           6557 ;	genLabel
   1285                    6558 00113$:
                           6559 ;	genPlus
                           6560 ;	AOP_STK for _move_character_sloc0_1_0
                           6561 ;	AOP_STK for _move_character_sloc8_1_0
                           6562 ;	genPlusIncr
                           6563 ;	Can't optimise plus by inc, falling back to the normal way
   1285 F8 0D              6564 	lda	hl,13(sp)
   1287 5E                 6565 	ld	e,(hl)
   1288 23                 6566 	inc	hl
   1289 56                 6567 	ld	d,(hl)
   128A 21 07 00           6568 	ld	hl,#0x0007
   128D 19                 6569 	add	hl,de
   128E 7D                 6570 	ld	a,l
   128F 54                 6571 	ld	d,h
   1290 F8 00              6572 	lda	hl,0(sp)
                           6573 ;	genPointerGet
                           6574 ;	AOP_STK for _move_character_sloc8_1_0
                           6575 ;	AOP_STK for _move_character_sloc7_1_0
   1292 22                 6576 	ld	(hl+),a
   1293 72                 6577 	ld	(hl),d
   1294 5F                 6578 	ld	e,a
   1295 1A                 6579 	ld	a,(de)
   1296 23                 6580 	inc	hl
   1297 77                 6581 	ld	(hl),a
                           6582 ;	genIpush
                           6583 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1298 C5                 6584 	push	bc
                           6585 ;	AOP_STK for _move_character_sloc7_1_0
   1299 7E                 6586 	ld	a,(hl)
   129A F5                 6587 	push	af
   129B 33                 6588 	inc	sp
                           6589 ;	genIpush
   129C 78                 6590 	ld	a,b
   129D F5                 6591 	push	af
   129E 33                 6592 	inc	sp
                           6593 ;	genCall
   129F CD 00 00           6594 	call	_set_sprite_tile
   12A2 E8 02              6595 	lda	sp,2(sp)
   12A4 C1                 6596 	pop	bc
                           6597 ;	game.c 918
                           6598 ;	genPointerGet
                           6599 ;	AOP_STK for _move_character_sloc1_1_0
                           6600 ;	AOP_STK for _move_character_sloc8_1_0
   12A5 F8 0B              6601 	lda	hl,11(sp)
   12A7 5E                 6602 	ld	e,(hl)
   12A8 23                 6603 	inc	hl
   12A9 56                 6604 	ld	d,(hl)
   12AA 1A                 6605 	ld	a,(de)
   12AB F8 00              6606 	lda	hl,0(sp)
   12AD 77                 6607 	ld	(hl),a
                           6608 ;	genIpush
                           6609 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12AE C5                 6610 	push	bc
   12AF 3E 40              6611 	ld	a,#0x40
   12B1 F5                 6612 	push	af
   12B2 33                 6613 	inc	sp
                           6614 ;	genIpush
                           6615 ;	AOP_STK for _move_character_sloc8_1_0
   12B3 7E                 6616 	ld	a,(hl)
   12B4 F5                 6617 	push	af
   12B5 33                 6618 	inc	sp
                           6619 ;	genCall
   12B6 CD 00 00           6620 	call	_set_sprite_prop
   12B9 E8 02              6621 	lda	sp,2(sp)
   12BB C1                 6622 	pop	bc
                           6623 ;	game.c 919
                           6624 ;	genPlus
                           6625 ;	AOP_STK for _move_character_sloc0_1_0
                           6626 ;	AOP_STK for _move_character_sloc8_1_0
                           6627 ;	genPlusIncr
                           6628 ;	Can't optimise plus by inc, falling back to the normal way
   12BC F8 0D              6629 	lda	hl,13(sp)
   12BE 5E                 6630 	ld	e,(hl)
   12BF 23                 6631 	inc	hl
   12C0 56                 6632 	ld	d,(hl)
   12C1 21 01 00           6633 	ld	hl,#0x0001
   12C4 19                 6634 	add	hl,de
   12C5 7D                 6635 	ld	a,l
   12C6 54                 6636 	ld	d,h
   12C7 F8 00              6637 	lda	hl,0(sp)
                           6638 ;	genPointerGet
                           6639 ;	AOP_STK for _move_character_sloc8_1_0
                           6640 ;	AOP_STK for _move_character_sloc7_1_0
   12C9 22                 6641 	ld	(hl+),a
   12CA 72                 6642 	ld	(hl),d
   12CB 5F                 6643 	ld	e,a
   12CC 1A                 6644 	ld	a,(de)
   12CD 23                 6645 	inc	hl
                           6646 ;	genPlus
                           6647 ;	AOP_STK for _move_character_sloc7_1_0
                           6648 ;	Can't optimise plus by inc, falling back to the normal way
   12CE 77                 6649 	ld      (hl),a
                           6650 ; Removed redundent load
   12CF 81                 6651 	add	a,c
                           6652 ;	genAssign (pointer)
                           6653 ;	AOP_STK for _move_character_sloc8_1_0
   12D0 2B                 6654 	dec	hl
   12D1 2B                 6655 	dec	hl
   12D2 5E                 6656 	ld	e,(hl)
   12D3 23                 6657 	inc	hl
   12D4 56                 6658 	ld	d,(hl)
   12D5 12                 6659 	ld	(de),a
                           6660 ;	game.c 920
                           6661 ;	genGoto
   12D6 C3 DF 12           6662 	jp	00115$
                           6663 ;	game.c 922
                           6664 ;	genLabel
   12D9                    6665 00114$:
                           6666 ;	genCall
                           6667 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12D9 C5                 6668 	push	bc
   12DA CD C9 0E           6669 	call	_rotate_player
   12DD E1                 6670 	pop	hl
   12DE 44                 6671 	ld	b,h
                           6672 ;	game.c 924
                           6673 ;	genLabel
   12DF                    6674 00115$:
                           6675 ;	game.c 926
                           6676 ;	genPointerGet
                           6677 ;	AOP_STK for _move_character_sloc3_1_0
   12DF F8 07              6678 	lda	hl,7(sp)
   12E1 5E                 6679 	ld	e,(hl)
   12E2 23                 6680 	inc	hl
   12E3 56                 6681 	ld	d,(hl)
   12E4 1A                 6682 	ld	a,(de)
   12E5 4F                 6683 	ld	c,a
                           6684 ;	genMinus
   12E6 0D                 6685 	dec	c
                           6686 ;	genAssign (pointer)
                           6687 ;	AOP_STK for _move_character_sloc3_1_0
   12E7 2B                 6688 	dec	hl
   12E8 5E                 6689 	ld	e,(hl)
   12E9 23                 6690 	inc	hl
   12EA 56                 6691 	ld	d,(hl)
   12EB 79                 6692 	ld	a,c
   12EC 12                 6693 	ld	(de),a
                           6694 ;	game.c 927
                           6695 ;	genCmpEq
                           6696 ; genCmpEq: left 1, right 1, result 0
   12ED 79                 6697 	ld	a,c
   12EE B7                 6698 	or	a,a
   12EF C2 09 14           6699 	jp	nz,00124$
   12F2 18 03              6700 	jr	00208$
   12F4                    6701 00207$:
   12F4 C3 09 14           6702 	jp	00124$
   12F7                    6703 00208$:
                           6704 ;	game.c 928
                           6705 ;	genAssign (pointer)
                           6706 ;	AOP_STK for _move_character_sloc2_1_0
   12F7 F8 09              6707 	lda	hl,9(sp)
   12F9 5E                 6708 	ld	e,(hl)
   12FA 23                 6709 	inc	hl
   12FB 56                 6710 	ld	d,(hl)
   12FC 3E 00              6711 	ld	a,#0x00
   12FE 12                 6712 	ld	(de),a
                           6713 ;	game.c 929
                           6714 ;	genCmpLt
                           6715 ;	AOP_STK for _move_character_sloc6_1_0
   12FF F8 03              6716 	lda	hl,3(sp)
   1301 7E                 6717 	ld	a,(hl)
   1302 FE 01              6718 	cp	#0x01
   1304 DA 09 14           6719 	jp	c,00124$
                           6720 ;	genIfx
                           6721 ;	AOP_STK for _move_character_sloc5_1_0
   1307 AF                 6722 	xor	a,a
   1308 23                 6723 	inc	hl
   1309 B6                 6724 	or	a,(hl)
   130A C2 09 14           6725 	jp	nz,00124$
                           6726 ;	genMinus
                           6727 ;	AOP_STK for _move_character_sloc6_1_0
   130D 2B                 6728 	dec	hl
   130E 7E                 6729 	ld	a,(hl)
   130F C6 FF              6730 	add	a,#0xFF
   1311 4F                 6731 	ld	c,a
                           6732 ;	genJumpTab
   1312 59                 6733 	ld	e,c
   1313 16 00              6734 	ld	d,#0x00
   1315 21 1C 13           6735 	ld	hl,#00209$
   1318 19                 6736 	add	hl,de
   1319 19                 6737 	add	hl,de
   131A 19                 6738 	add	hl,de
   131B E9                 6739 	jp	(hl)
   131C                    6740 00209$:
   131C C3 9A 13           6741 	jp	00118$
   131F C3 61 13           6742 	jp	00117$
   1322 C3 D3 13           6743 	jp	00119$
   1325 C3 28 13           6744 	jp	00116$
                           6745 ;	game.c 932
                           6746 ;	genLabel
   1328                    6747 00116$:
                           6748 ;	genPlus
                           6749 ;	AOP_STK for _move_character_sloc0_1_0
                           6750 ;	AOP_STK for _move_character_sloc8_1_0
                           6751 ;	genPlusIncr
                           6752 ;	Can't optimise plus by inc, falling back to the normal way
   1328 F8 0D              6753 	lda	hl,13(sp)
   132A 5E                 6754 	ld	e,(hl)
   132B 23                 6755 	inc	hl
   132C 56                 6756 	ld	d,(hl)
   132D 21 02 00           6757 	ld	hl,#0x0002
   1330 19                 6758 	add	hl,de
   1331 7D                 6759 	ld	a,l
   1332 54                 6760 	ld	d,h
   1333 F8 00              6761 	lda	hl,0(sp)
                           6762 ;	genPointerGet
                           6763 ;	AOP_STK for _move_character_sloc8_1_0
   1335 22                 6764 	ld	(hl+),a
   1336 72                 6765 	ld	(hl),d
   1337 5F                 6766 	ld	e,a
   1338 1A                 6767 	ld	a,(de)
   1339 4F                 6768 	ld	c,a
                           6769 ;	genIpush
                           6770 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   133A C5                 6771 	push	bc
   133B 79                 6772 	ld	a,c
   133C F5                 6773 	push	af
   133D 33                 6774 	inc	sp
                           6775 ;	genIpush
   133E 78                 6776 	ld	a,b
   133F F5                 6777 	push	af
   1340 33                 6778 	inc	sp
                           6779 ;	genCall
   1341 CD 00 00           6780 	call	_set_sprite_tile
   1344 E8 02              6781 	lda	sp,2(sp)
   1346 E1                 6782 	pop	hl
   1347 44                 6783 	ld	b,h
                           6784 ;	game.c 933
                           6785 ;	genPointerGet
                           6786 ;	AOP_STK for _move_character_sloc1_1_0
   1348 F8 0B              6787 	lda	hl,11(sp)
   134A 5E                 6788 	ld	e,(hl)
   134B 23                 6789 	inc	hl
   134C 56                 6790 	ld	d,(hl)
   134D 1A                 6791 	ld	a,(de)
   134E 4F                 6792 	ld	c,a
                           6793 ;	genIpush
                           6794 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   134F C5                 6795 	push	bc
   1350 3E 20              6796 	ld	a,#0x20
   1352 F5                 6797 	push	af
   1353 33                 6798 	inc	sp
                           6799 ;	genIpush
   1354 79                 6800 	ld	a,c
   1355 F5                 6801 	push	af
   1356 33                 6802 	inc	sp
                           6803 ;	genCall
   1357 CD 00 00           6804 	call	_set_sprite_prop
   135A E8 02              6805 	lda	sp,2(sp)
   135C E1                 6806 	pop	hl
   135D 44                 6807 	ld	b,h
                           6808 ;	game.c 934
                           6809 ;	genGoto
   135E C3 09 14           6810 	jp	00124$
                           6811 ;	game.c 937
                           6812 ;	genLabel
   1361                    6813 00117$:
                           6814 ;	genPlus
                           6815 ;	AOP_STK for _move_character_sloc0_1_0
                           6816 ;	AOP_STK for _move_character_sloc8_1_0
                           6817 ;	genPlusIncr
                           6818 ;	Can't optimise plus by inc, falling back to the normal way
   1361 F8 0D              6819 	lda	hl,13(sp)
   1363 5E                 6820 	ld	e,(hl)
   1364 23                 6821 	inc	hl
   1365 56                 6822 	ld	d,(hl)
   1366 21 02 00           6823 	ld	hl,#0x0002
   1369 19                 6824 	add	hl,de
   136A 7D                 6825 	ld	a,l
   136B 54                 6826 	ld	d,h
   136C F8 00              6827 	lda	hl,0(sp)
                           6828 ;	genPointerGet
                           6829 ;	AOP_STK for _move_character_sloc8_1_0
   136E 22                 6830 	ld	(hl+),a
   136F 72                 6831 	ld	(hl),d
   1370 5F                 6832 	ld	e,a
   1371 1A                 6833 	ld	a,(de)
   1372 4F                 6834 	ld	c,a
                           6835 ;	genIpush
                           6836 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1373 C5                 6837 	push	bc
   1374 79                 6838 	ld	a,c
   1375 F5                 6839 	push	af
   1376 33                 6840 	inc	sp
                           6841 ;	genIpush
   1377 78                 6842 	ld	a,b
   1378 F5                 6843 	push	af
   1379 33                 6844 	inc	sp
                           6845 ;	genCall
   137A CD 00 00           6846 	call	_set_sprite_tile
   137D E8 02              6847 	lda	sp,2(sp)
   137F E1                 6848 	pop	hl
   1380 44                 6849 	ld	b,h
                           6850 ;	game.c 938
                           6851 ;	genPointerGet
                           6852 ;	AOP_STK for _move_character_sloc1_1_0
   1381 F8 0B              6853 	lda	hl,11(sp)
   1383 5E                 6854 	ld	e,(hl)
   1384 23                 6855 	inc	hl
   1385 56                 6856 	ld	d,(hl)
   1386 1A                 6857 	ld	a,(de)
   1387 4F                 6858 	ld	c,a
                           6859 ;	genIpush
                           6860 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1388 C5                 6861 	push	bc
   1389 3E 00              6862 	ld	a,#0x00
   138B F5                 6863 	push	af
   138C 33                 6864 	inc	sp
                           6865 ;	genIpush
   138D 79                 6866 	ld	a,c
   138E F5                 6867 	push	af
   138F 33                 6868 	inc	sp
                           6869 ;	genCall
   1390 CD 00 00           6870 	call	_set_sprite_prop
   1393 E8 02              6871 	lda	sp,2(sp)
   1395 E1                 6872 	pop	hl
   1396 44                 6873 	ld	b,h
                           6874 ;	game.c 939
                           6875 ;	genGoto
   1397 C3 09 14           6876 	jp	00124$
                           6877 ;	game.c 941
                           6878 ;	genLabel
   139A                    6879 00118$:
                           6880 ;	genPlus
                           6881 ;	AOP_STK for _move_character_sloc0_1_0
                           6882 ;	AOP_STK for _move_character_sloc8_1_0
                           6883 ;	genPlusIncr
                           6884 ;	Can't optimise plus by inc, falling back to the normal way
   139A F8 0D              6885 	lda	hl,13(sp)
   139C 5E                 6886 	ld	e,(hl)
   139D 23                 6887 	inc	hl
   139E 56                 6888 	ld	d,(hl)
   139F 21 05 00           6889 	ld	hl,#0x0005
   13A2 19                 6890 	add	hl,de
   13A3 7D                 6891 	ld	a,l
   13A4 54                 6892 	ld	d,h
   13A5 F8 00              6893 	lda	hl,0(sp)
                           6894 ;	genPointerGet
                           6895 ;	AOP_STK for _move_character_sloc8_1_0
   13A7 22                 6896 	ld	(hl+),a
   13A8 72                 6897 	ld	(hl),d
   13A9 5F                 6898 	ld	e,a
   13AA 1A                 6899 	ld	a,(de)
   13AB 4F                 6900 	ld	c,a
                           6901 ;	genIpush
                           6902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13AC C5                 6903 	push	bc
   13AD 79                 6904 	ld	a,c
   13AE F5                 6905 	push	af
   13AF 33                 6906 	inc	sp
                           6907 ;	genIpush
   13B0 78                 6908 	ld	a,b
   13B1 F5                 6909 	push	af
   13B2 33                 6910 	inc	sp
                           6911 ;	genCall
   13B3 CD 00 00           6912 	call	_set_sprite_tile
   13B6 E8 02              6913 	lda	sp,2(sp)
   13B8 E1                 6914 	pop	hl
   13B9 44                 6915 	ld	b,h
                           6916 ;	game.c 942
                           6917 ;	genPointerGet
                           6918 ;	AOP_STK for _move_character_sloc1_1_0
   13BA F8 0B              6919 	lda	hl,11(sp)
   13BC 5E                 6920 	ld	e,(hl)
   13BD 23                 6921 	inc	hl
   13BE 56                 6922 	ld	d,(hl)
   13BF 1A                 6923 	ld	a,(de)
   13C0 4F                 6924 	ld	c,a
                           6925 ;	genIpush
                           6926 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13C1 C5                 6927 	push	bc
   13C2 3E 20              6928 	ld	a,#0x20
   13C4 F5                 6929 	push	af
   13C5 33                 6930 	inc	sp
                           6931 ;	genIpush
   13C6 79                 6932 	ld	a,c
   13C7 F5                 6933 	push	af
   13C8 33                 6934 	inc	sp
                           6935 ;	genCall
   13C9 CD 00 00           6936 	call	_set_sprite_prop
   13CC E8 02              6937 	lda	sp,2(sp)
   13CE E1                 6938 	pop	hl
   13CF 44                 6939 	ld	b,h
                           6940 ;	game.c 943
                           6941 ;	genGoto
   13D0 C3 09 14           6942 	jp	00124$
                           6943 ;	game.c 945
                           6944 ;	genLabel
   13D3                    6945 00119$:
                           6946 ;	genPlus
                           6947 ;	AOP_STK for _move_character_sloc0_1_0
                           6948 ;	AOP_STK for _move_character_sloc8_1_0
                           6949 ;	genPlusIncr
                           6950 ;	Can't optimise plus by inc, falling back to the normal way
   13D3 F8 0D              6951 	lda	hl,13(sp)
   13D5 5E                 6952 	ld	e,(hl)
   13D6 23                 6953 	inc	hl
   13D7 56                 6954 	ld	d,(hl)
   13D8 21 05 00           6955 	ld	hl,#0x0005
   13DB 19                 6956 	add	hl,de
   13DC 7D                 6957 	ld	a,l
   13DD 54                 6958 	ld	d,h
   13DE F8 00              6959 	lda	hl,0(sp)
                           6960 ;	genPointerGet
                           6961 ;	AOP_STK for _move_character_sloc8_1_0
   13E0 22                 6962 	ld	(hl+),a
   13E1 72                 6963 	ld	(hl),d
   13E2 5F                 6964 	ld	e,a
   13E3 1A                 6965 	ld	a,(de)
   13E4 4F                 6966 	ld	c,a
                           6967 ;	genIpush
                           6968 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13E5 C5                 6969 	push	bc
   13E6 79                 6970 	ld	a,c
   13E7 F5                 6971 	push	af
   13E8 33                 6972 	inc	sp
                           6973 ;	genIpush
   13E9 78                 6974 	ld	a,b
   13EA F5                 6975 	push	af
   13EB 33                 6976 	inc	sp
                           6977 ;	genCall
   13EC CD 00 00           6978 	call	_set_sprite_tile
   13EF E8 02              6979 	lda	sp,2(sp)
   13F1 E1                 6980 	pop	hl
   13F2 44                 6981 	ld	b,h
                           6982 ;	game.c 946
                           6983 ;	genPointerGet
                           6984 ;	AOP_STK for _move_character_sloc1_1_0
   13F3 F8 0B              6985 	lda	hl,11(sp)
   13F5 5E                 6986 	ld	e,(hl)
   13F6 23                 6987 	inc	hl
   13F7 56                 6988 	ld	d,(hl)
   13F8 1A                 6989 	ld	a,(de)
   13F9 4F                 6990 	ld	c,a
                           6991 ;	genIpush
                           6992 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13FA C5                 6993 	push	bc
   13FB 3E 40              6994 	ld	a,#0x40
   13FD F5                 6995 	push	af
   13FE 33                 6996 	inc	sp
                           6997 ;	genIpush
   13FF 79                 6998 	ld	a,c
   1400 F5                 6999 	push	af
   1401 33                 7000 	inc	sp
                           7001 ;	genCall
   1402 CD 00 00           7002 	call	_set_sprite_prop
   1405 E8 02              7003 	lda	sp,2(sp)
   1407 E1                 7004 	pop	hl
   1408 44                 7005 	ld	b,h
                           7006 ;	game.c 948
                           7007 ;	genLabel
   1409                    7008 00124$:
                           7009 ;	game.c 954
                           7010 ;	genCmpEq
                           7011 ; genCmpEq: left 1, right 1, result 0
   1409 78                 7012 	ld	a,b
   140A FE 02              7013 	cp	a,#0x02
   140C C2 67 18           7014 	jp	nz,00165$
   140F 18 03              7015 	jr	00211$
   1411                    7016 00210$:
   1411 C3 67 18           7017 	jp	00165$
   1414                    7018 00211$:
                           7019 ;	game.c 955
                           7020 ;	genPlus
                           7021 ;	AOP_STK for _move_character_sloc0_1_0
                           7022 ;	AOP_STK for _move_character_sloc8_1_0
                           7023 ;	genPlusIncr
                           7024 ;	Can't optimise plus by inc, falling back to the normal way
   1414 F8 0D              7025 	lda	hl,13(sp)
   1416 5E                 7026 	ld	e,(hl)
   1417 23                 7027 	inc	hl
   1418 56                 7028 	ld	d,(hl)
   1419 21 04 00           7029 	ld	hl,#0x0004
   141C 19                 7030 	add	hl,de
   141D 7D                 7031 	ld	a,l
   141E 54                 7032 	ld	d,h
   141F F8 00              7033 	lda	hl,0(sp)
                           7034 ;	genPointerGet
                           7035 ;	AOP_STK for _move_character_sloc8_1_0
   1421 22                 7036 	ld	(hl+),a
   1422 72                 7037 	ld	(hl),d
   1423 5F                 7038 	ld	e,a
   1424 1A                 7039 	ld	a,(de)
   1425 4F                 7040 	ld	c,a
                           7041 ;	genIpush
                           7042 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1426 C5                 7043 	push	bc
   1427 79                 7044 	ld	a,c
   1428 F5                 7045 	push	af
   1429 33                 7046 	inc	sp
                           7047 ;	genIpush
   142A 78                 7048 	ld	a,b
   142B F5                 7049 	push	af
   142C 33                 7050 	inc	sp
                           7051 ;	genCall
   142D CD 00 00           7052 	call	_set_sprite_tile
   1430 E8 02              7053 	lda	sp,2(sp)
   1432 E1                 7054 	pop	hl
   1433 44                 7055 	ld	b,h
                           7056 ;	game.c 957
                           7057 ;	genPointerGet
                           7058 ;	AOP_STK for _move_character_sloc2_1_0
   1434 F8 09              7059 	lda	hl,9(sp)
   1436 5E                 7060 	ld	e,(hl)
   1437 23                 7061 	inc	hl
   1438 56                 7062 	ld	d,(hl)
   1439 1A                 7063 	ld	a,(de)
                           7064 ;	genCmpEq
                           7065 ; genCmpEq: left 1, right 1, result 0
   143A 4F                 7066 	ld	c,a
   143B FE 01              7067 	cp	a,#0x01
   143D C2 5C 14           7068 	jp	nz,00126$
   1440 18 03              7069 	jr	00213$
   1442                    7070 00212$:
   1442 C3 5C 14           7071 	jp	00126$
   1445                    7072 00213$:
                           7073 ;	game.c 959
                           7074 ;	genAssign (pointer)
                           7075 ;	AOP_STK for _move_character_sloc2_1_0
   1445 F8 09              7076 	lda	hl,9(sp)
   1447 5E                 7077 	ld	e,(hl)
   1448 23                 7078 	inc	hl
   1449 56                 7079 	ld	d,(hl)
   144A 3E 02              7080 	ld	a,#0x02
   144C 12                 7081 	ld	(de),a
                           7082 ;	game.c 960
                           7083 ;	genPlus
                           7084 ;	AOP_STK for _move_character_sloc0_1_0
                           7085 ;	genPlusIncr
                           7086 ;	Can't optimise plus by inc, falling back to the normal way
   144D F8 0D              7087 	lda	hl,13(sp)
   144F 5E                 7088 	ld	e,(hl)
   1450 23                 7089 	inc	hl
   1451 56                 7090 	ld	d,(hl)
   1452 21 0A 00           7091 	ld	hl,#0x000A
   1455 19                 7092 	add	hl,de
   1456 7D                 7093 	ld	a,l
   1457 54                 7094 	ld	d,h
   1458 6F                 7095 	ld	l,a
   1459 62                 7096 	ld	h,d
                           7097 ;	genAssign (pointer)
   145A 36 10              7098 	ld	(hl),#0x10
                           7099 ;	genLabel
   145C                    7100 00126$:
                           7101 ;	game.c 962
                           7102 ;	genPlus
                           7103 ;	AOP_STK for _move_character_sloc0_1_0
                           7104 ;	AOP_STK for _move_character_sloc8_1_0
                           7105 ;	genPlusIncr
                           7106 ;	Can't optimise plus by inc, falling back to the normal way
   145C F8 0D              7107 	lda	hl,13(sp)
   145E 5E                 7108 	ld	e,(hl)
   145F 23                 7109 	inc	hl
   1460 56                 7110 	ld	d,(hl)
   1461 21 0A 00           7111 	ld	hl,#0x000A
   1464 19                 7112 	add	hl,de
   1465 7D                 7113 	ld	a,l
   1466 54                 7114 	ld	d,h
   1467 F8 00              7115 	lda	hl,0(sp)
                           7116 ;	genPointerGet
                           7117 ;	AOP_STK for _move_character_sloc8_1_0
   1469 22                 7118 	ld	(hl+),a
   146A 72                 7119 	ld	(hl),d
   146B 5F                 7120 	ld	e,a
   146C 1A                 7121 	ld	a,(de)
   146D 4F                 7122 	ld	c,a
                           7123 ;	genMinus
   146E 0D                 7124 	dec	c
                           7125 ;	genAssign (pointer)
                           7126 ;	AOP_STK for _move_character_sloc8_1_0
   146F 2B                 7127 	dec	hl
   1470 5E                 7128 	ld	e,(hl)
   1471 23                 7129 	inc	hl
   1472 56                 7130 	ld	d,(hl)
   1473 79                 7131 	ld	a,c
   1474 12                 7132 	ld	(de),a
                           7133 ;	game.c 964
                           7134 ;	genCmpEq
                           7135 ; genCmpEq: left 1, right 1, result 0
   1475 79                 7136 	ld	a,c
   1476 B7                 7137 	or	a,a
   1477 C2 67 18           7138 	jp	nz,00165$
   147A 18 03              7139 	jr	00215$
   147C                    7140 00214$:
   147C C3 67 18           7141 	jp	00165$
   147F                    7142 00215$:
                           7143 ;	game.c 965
                           7144 ;	genAssign (pointer)
                           7145 ;	AOP_STK for _move_character_sloc2_1_0
   147F F8 09              7146 	lda	hl,9(sp)
   1481 5E                 7147 	ld	e,(hl)
   1482 23                 7148 	inc	hl
   1483 56                 7149 	ld	d,(hl)
   1484 3E 00              7150 	ld	a,#0x00
   1486 12                 7151 	ld	(de),a
                           7152 ;	game.c 966
                           7153 ;	genPlus
                           7154 ;	AOP_STK for _move_character_sloc0_1_0
                           7155 ;	AOP_STK for _move_character_sloc8_1_0
                           7156 ;	genPlusIncr
                           7157 ;	Can't optimise plus by inc, falling back to the normal way
   1487 F8 0D              7158 	lda	hl,13(sp)
   1489 5E                 7159 	ld	e,(hl)
   148A 23                 7160 	inc	hl
   148B 56                 7161 	ld	d,(hl)
   148C 21 02 00           7162 	ld	hl,#0x0002
   148F 19                 7163 	add	hl,de
   1490 7D                 7164 	ld	a,l
   1491 54                 7165 	ld	d,h
   1492 F8 00              7166 	lda	hl,0(sp)
                           7167 ;	genPointerGet
                           7168 ;	AOP_STK for _move_character_sloc8_1_0
   1494 22                 7169 	ld	(hl+),a
   1495 72                 7170 	ld	(hl),d
   1496 5F                 7171 	ld	e,a
   1497 1A                 7172 	ld	a,(de)
   1498 4F                 7173 	ld	c,a
                           7174 ;	genPointerGet
                           7175 ;	AOP_STK for _move_character_sloc1_1_0
                           7176 ;	AOP_STK for _move_character_sloc8_1_0
   1499 F8 0B              7177 	lda	hl,11(sp)
   149B 5E                 7178 	ld	e,(hl)
   149C 23                 7179 	inc	hl
   149D 56                 7180 	ld	d,(hl)
   149E 1A                 7181 	ld	a,(de)
   149F F8 00              7182 	lda	hl,0(sp)
   14A1 77                 7183 	ld	(hl),a
                           7184 ;	genIpush
                           7185 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14A2 C5                 7186 	push	bc
   14A3 79                 7187 	ld	a,c
   14A4 F5                 7188 	push	af
   14A5 33                 7189 	inc	sp
                           7190 ;	genIpush
                           7191 ;	AOP_STK for _move_character_sloc8_1_0
   14A6 7E                 7192 	ld	a,(hl)
   14A7 F5                 7193 	push	af
   14A8 33                 7194 	inc	sp
                           7195 ;	genCall
   14A9 CD 00 00           7196 	call	_set_sprite_tile
   14AC E8 02              7197 	lda	sp,2(sp)
   14AE E1                 7198 	pop	hl
   14AF 44                 7199 	ld	b,h
                           7200 ;	genGoto
   14B0 C3 67 18           7201 	jp	00165$
                           7202 ;	genLabel
   14B3                    7203 00164$:
                           7204 ;	game.c 975
                           7205 ;	genCmpEq
                           7206 ;	AOP_HL for _input_timer
                           7207 ; genCmpEq: left 1, right 1, result 0
   14B3 21 03 19           7208 	ld	hl,#_input_timer
   14B6 7E                 7209 	ld	a,(hl)
   14B7 FE 04              7210 	cp	a,#0x04
   14B9 C2 15 15           7211 	jp	nz,00134$
   14BC 18 03              7212 	jr	00217$
   14BE                    7213 00216$:
   14BE C3 15 15           7214 	jp	00134$
   14C1                    7215 00217$:
                           7216 ;	game.c 976
                           7217 ;	genPlus
                           7218 ;	AOP_STK for _move_character_sloc0_1_0
                           7219 ;	AOP_STK for _move_character_sloc8_1_0
                           7220 ;	genPlusIncr
                           7221 ;	Can't optimise plus by inc, falling back to the normal way
   14C1 F8 0D              7222 	lda	hl,13(sp)
   14C3 5E                 7223 	ld	e,(hl)
   14C4 23                 7224 	inc	hl
   14C5 56                 7225 	ld	d,(hl)
   14C6 21 08 00           7226 	ld	hl,#0x0008
   14C9 19                 7227 	add	hl,de
   14CA 7D                 7228 	ld	a,l
   14CB 54                 7229 	ld	d,h
   14CC F8 00              7230 	lda	hl,0(sp)
                           7231 ;	genPointerGet
                           7232 ;	AOP_STK for _move_character_sloc8_1_0
   14CE 22                 7233 	ld	(hl+),a
   14CF 72                 7234 	ld	(hl),d
   14D0 5F                 7235 	ld	e,a
   14D1 1A                 7236 	ld	a,(de)
   14D2 4F                 7237 	ld	c,a
                           7238 ;	genPlus
                           7239 ;	AOP_STK for _move_character_sloc0_1_0
                           7240 ;	AOP_STK for _move_character_sloc8_1_0
                           7241 ;	genPlusIncr
                           7242 ;	Can't optimise plus by inc, falling back to the normal way
   14D3 F8 0D              7243 	lda	hl,13(sp)
   14D5 5E                 7244 	ld	e,(hl)
   14D6 23                 7245 	inc	hl
   14D7 56                 7246 	ld	d,(hl)
   14D8 21 01 00           7247 	ld	hl,#0x0001
   14DB 19                 7248 	add	hl,de
   14DC 7D                 7249 	ld	a,l
   14DD 54                 7250 	ld	d,h
   14DE F8 00              7251 	lda	hl,0(sp)
                           7252 ;	genPointerGet
                           7253 ;	AOP_STK for _move_character_sloc8_1_0
                           7254 ;	AOP_STK for _move_character_sloc7_1_0
   14E0 22                 7255 	ld	(hl+),a
   14E1 72                 7256 	ld	(hl),d
   14E2 5F                 7257 	ld	e,a
   14E3 1A                 7258 	ld	a,(de)
   14E4 23                 7259 	inc	hl
   14E5 77                 7260 	ld	(hl),a
                           7261 ;	genPointerGet
                           7262 ;	AOP_STK for _move_character_sloc0_1_0
                           7263 ;	AOP_STK for _move_character_sloc8_1_0
   14E6 F8 0D              7264 	lda	hl,13(sp)
   14E8 5E                 7265 	ld	e,(hl)
   14E9 23                 7266 	inc	hl
   14EA 56                 7267 	ld	d,(hl)
   14EB 1A                 7268 	ld	a,(de)
   14EC F8 00              7269 	lda	hl,0(sp)
   14EE 77                 7270 	ld	(hl),a
                           7271 ;	genIpush
                           7272 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14EF C5                 7273 	push	bc
   14F0 79                 7274 	ld	a,c
   14F1 F5                 7275 	push	af
   14F2 33                 7276 	inc	sp
                           7277 ;	genIpush
                           7278 ;	AOP_STK for _move_character_sloc7_1_0
   14F3 23                 7279 	inc	hl
   14F4 23                 7280 	inc	hl
   14F5 7E                 7281 	ld	a,(hl)
   14F6 F5                 7282 	push	af
   14F7 33                 7283 	inc	sp
                           7284 ;	genIpush
                           7285 ;	AOP_STK for _move_character_sloc8_1_0
   14F8 2B                 7286 	dec	hl
   14F9 2B                 7287 	dec	hl
   14FA 7E                 7288 	ld	a,(hl)
   14FB F5                 7289 	push	af
   14FC 33                 7290 	inc	sp
                           7291 ;	genCall
   14FD CD B0 0D           7292 	call	_can_move
                           7293 ;	AOP_STK for _move_character_sloc8_1_0
   1500 F8 06              7294 	lda	hl,6(sp)
   1502 72                 7295 	ld	(hl),d
   1503 2B                 7296 	dec	hl
   1504 73                 7297 	ld	(hl),e
   1505 E8 03              7298 	lda	sp,3(sp)
   1507 E1                 7299 	pop	hl
   1508 44                 7300 	ld	b,h
                           7301 ;	genIfx
                           7302 ;	AOP_STK for _move_character_sloc8_1_0
   1509 F8 00              7303 	lda	hl,0(sp)
   150B 2A                 7304 	ld	a,(hl+)
   150C B6                 7305 	or	a,(hl)
   150D C2 15 15           7306 	jp	nz,00134$
                           7307 ;	game.c 977
                           7308 ;	genAssign
                           7309 ;	AOP_HL for _input_timer
   1510 21 03 19           7310 	ld	hl,#_input_timer
   1513 36 00              7311 	ld	(hl),#0x00
                           7312 ;	genLabel
   1515                    7313 00134$:
                           7314 ;	game.c 985
                           7315 ;	genPlus
                           7316 ;	AOP_STK for _move_character_sloc0_1_0
                           7317 ;	AOP_STK for _move_character_sloc8_1_0
                           7318 ;	genPlusIncr
                           7319 ;	Can't optimise plus by inc, falling back to the normal way
   1515 F8 0D              7320 	lda	hl,13(sp)
   1517 5E                 7321 	ld	e,(hl)
   1518 23                 7322 	inc	hl
   1519 56                 7323 	ld	d,(hl)
   151A 21 08 00           7324 	ld	hl,#0x0008
   151D 19                 7325 	add	hl,de
   151E 7D                 7326 	ld	a,l
   151F 54                 7327 	ld	d,h
   1520 F8 00              7328 	lda	hl,0(sp)
                           7329 ;	genPointerGet
                           7330 ;	AOP_STK for _move_character_sloc8_1_0
   1522 22                 7331 	ld	(hl+),a
   1523 72                 7332 	ld	(hl),d
   1524 5F                 7333 	ld	e,a
   1525 1A                 7334 	ld	a,(de)
                           7335 ;	genCmpLt
                           7336 ;	AOP_STK for _move_character_sloc8_1_0
   1526 4F                 7337 	ld	c,a
   1527 FE 01              7338 	cp	#0x01
   1529 3E 00              7339 	ld	a,#0x00
   152B 17                 7340 	rla
   152C 2B                 7341 	dec	hl
   152D 77                 7342 	ld	(hl),a
                           7343 ;	genIfx
                           7344 ;	AOP_STK for _move_character_sloc8_1_0
   152E AF                 7345 	xor	a,a
   152F B6                 7346 	or	a,(hl)
   1530 C2 E2 17           7347 	jp	nz,00155$
                           7348 ;	genCmpGt
   1533 3E 04              7349 	ld	a,#0x04
   1535 91                 7350 	sub	a,c
   1536 DA E2 17           7351 	jp	c,00155$
                           7352 ;	genMinus
                           7353 ;	AOP_STK for _move_character_sloc7_1_0
   1539 79                 7354 	ld	a,c
   153A C6 FF              7355 	add	a,#0xFF
   153C 23                 7356 	inc	hl
   153D 23                 7357 	inc	hl
                           7358 ;	genJumpTab
                           7359 ;	AOP_STK for _move_character_sloc7_1_0
   153E 77                 7360 	ld      (hl),a
   153F 5F                 7361 	ld      e,a
   1540 16 00              7362 	ld	d,#0x00
   1542 21 49 15           7363 	ld	hl,#00218$
   1545 19                 7364 	add	hl,de
   1546 19                 7365 	add	hl,de
   1547 19                 7366 	add	hl,de
   1548 E9                 7367 	jp	(hl)
   1549                    7368 00218$:
   1549 C3 9D 16           7369 	jp	00145$
   154C C3 F9 15           7370 	jp	00140$
   154F C3 41 17           7371 	jp	00150$
   1552 C3 55 15           7372 	jp	00135$
                           7373 ;	game.c 988
                           7374 ;	genLabel
   1555                    7375 00135$:
                           7376 ;	genPlus
                           7377 ;	AOP_STK for _move_character_sloc0_1_0
                           7378 ;	AOP_STK for _move_character_sloc5_1_0
                           7379 ;	genPlusIncr
                           7380 ;	Can't optimise plus by inc, falling back to the normal way
   1555 F8 0D              7381 	lda	hl,13(sp)
   1557 5E                 7382 	ld	e,(hl)
   1558 23                 7383 	inc	hl
   1559 56                 7384 	ld	d,(hl)
   155A 21 02 00           7385 	ld	hl,#0x0002
   155D 19                 7386 	add	hl,de
   155E 7D                 7387 	ld	a,l
   155F 54                 7388 	ld	d,h
   1560 F8 04              7389 	lda	hl,4(sp)
                           7390 ;	genPointerGet
                           7391 ;	AOP_STK for _move_character_sloc5_1_0
                           7392 ;	AOP_STK for _move_character_sloc7_1_0
   1562 22                 7393 	ld	(hl+),a
   1563 72                 7394 	ld	(hl),d
   1564 5F                 7395 	ld	e,a
   1565 1A                 7396 	ld	a,(de)
   1566 F8 02              7397 	lda	hl,2(sp)
   1568 77                 7398 	ld	(hl),a
                           7399 ;	genIpush
                           7400 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1569 C5                 7401 	push	bc
                           7402 ;	AOP_STK for _move_character_sloc7_1_0
   156A 7E                 7403 	ld	a,(hl)
   156B F5                 7404 	push	af
   156C 33                 7405 	inc	sp
                           7406 ;	genIpush
   156D 78                 7407 	ld	a,b
   156E F5                 7408 	push	af
   156F 33                 7409 	inc	sp
                           7410 ;	genCall
   1570 CD 00 00           7411 	call	_set_sprite_tile
   1573 E8 02              7412 	lda	sp,2(sp)
   1575 C1                 7413 	pop	bc
                           7414 ;	game.c 989
                           7415 ;	genCmpEq
                           7416 ;	AOP_HL for _input_timer
                           7417 ; genCmpEq: left 1, right 1, result 0
   1576 21 03 19           7418 	ld	hl,#_input_timer
   1579 7E                 7419 	ld	a,(hl)
   157A FE 04              7420 	cp	a,#0x04
   157C C2 B0 15           7421 	jp	nz,00137$
   157F 18 03              7422 	jr	00220$
   1581                    7423 00219$:
   1581 C3 B0 15           7424 	jp	00137$
   1584                    7425 00220$:
                           7426 ;	game.c 990
                           7427 ;	genPlus
                           7428 ;	AOP_STK for _move_character_sloc0_1_0
                           7429 ;	AOP_STK for _move_character_sloc3_1_0
                           7430 ;	genPlusIncr
                           7431 ;	Can't optimise plus by inc, falling back to the normal way
   1584 F8 0D              7432 	lda	hl,13(sp)
   1586 5E                 7433 	ld	e,(hl)
   1587 23                 7434 	inc	hl
   1588 56                 7435 	ld	d,(hl)
   1589 21 03 00           7436 	ld	hl,#0x0003
   158C 19                 7437 	add	hl,de
   158D 7D                 7438 	ld	a,l
   158E 54                 7439 	ld	d,h
   158F F8 07              7440 	lda	hl,7(sp)
                           7441 ;	genPointerGet
                           7442 ;	AOP_STK for _move_character_sloc3_1_0
                           7443 ;	AOP_STK for _move_character_sloc7_1_0
   1591 22                 7444 	ld	(hl+),a
   1592 72                 7445 	ld	(hl),d
   1593 5F                 7446 	ld	e,a
   1594 1A                 7447 	ld	a,(de)
   1595 F8 02              7448 	lda	hl,2(sp)
   1597 77                 7449 	ld	(hl),a
                           7450 ;	genPointerGet
                           7451 ;	AOP_STK for _move_character_sloc1_1_0
                           7452 ;	AOP_STK for _move_character_sloc6_1_0
   1598 F8 0B              7453 	lda	hl,11(sp)
   159A 5E                 7454 	ld	e,(hl)
   159B 23                 7455 	inc	hl
   159C 56                 7456 	ld	d,(hl)
   159D 1A                 7457 	ld	a,(de)
   159E F8 03              7458 	lda	hl,3(sp)
   15A0 77                 7459 	ld	(hl),a
                           7460 ;	genIpush
                           7461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15A1 C5                 7462 	push	bc
                           7463 ;	AOP_STK for _move_character_sloc7_1_0
   15A2 2B                 7464 	dec	hl
   15A3 7E                 7465 	ld	a,(hl)
   15A4 F5                 7466 	push	af
   15A5 33                 7467 	inc	sp
                           7468 ;	genIpush
                           7469 ;	AOP_STK for _move_character_sloc6_1_0
   15A6 23                 7470 	inc	hl
   15A7 7E                 7471 	ld	a,(hl)
   15A8 F5                 7472 	push	af
   15A9 33                 7473 	inc	sp
                           7474 ;	genCall
   15AA CD 00 00           7475 	call	_set_sprite_tile
   15AD E8 02              7476 	lda	sp,2(sp)
   15AF C1                 7477 	pop	bc
                           7478 ;	genLabel
   15B0                    7479 00137$:
                           7480 ;	game.c 992
                           7481 ;	genCmpEq
                           7482 ;	AOP_HL for _input_timer
                           7483 ; genCmpEq: left 1, right 1, result 0
   15B0 21 03 19           7484 	ld	hl,#_input_timer
   15B3 7E                 7485 	ld	a,(hl)
   15B4 FE 02              7486 	cp	a,#0x02
   15B6 C2 DF 15           7487 	jp	nz,00139$
   15B9 18 03              7488 	jr	00222$
   15BB                    7489 00221$:
   15BB C3 DF 15           7490 	jp	00139$
   15BE                    7491 00222$:
                           7492 ;	game.c 993
                           7493 ;	genPointerGet
                           7494 ;	AOP_STK for _move_character_sloc5_1_0
                           7495 ;	AOP_STK for _move_character_sloc7_1_0
   15BE F8 04              7496 	lda	hl,4(sp)
   15C0 5E                 7497 	ld	e,(hl)
   15C1 23                 7498 	inc	hl
   15C2 56                 7499 	ld	d,(hl)
   15C3 1A                 7500 	ld	a,(de)
   15C4 F8 02              7501 	lda	hl,2(sp)
   15C6 77                 7502 	ld	(hl),a
                           7503 ;	genPointerGet
                           7504 ;	AOP_STK for _move_character_sloc1_1_0
                           7505 ;	AOP_STK for _move_character_sloc6_1_0
   15C7 F8 0B              7506 	lda	hl,11(sp)
   15C9 5E                 7507 	ld	e,(hl)
   15CA 23                 7508 	inc	hl
   15CB 56                 7509 	ld	d,(hl)
   15CC 1A                 7510 	ld	a,(de)
   15CD F8 03              7511 	lda	hl,3(sp)
   15CF 77                 7512 	ld	(hl),a
                           7513 ;	genIpush
                           7514 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15D0 C5                 7515 	push	bc
                           7516 ;	AOP_STK for _move_character_sloc7_1_0
   15D1 2B                 7517 	dec	hl
   15D2 7E                 7518 	ld	a,(hl)
   15D3 F5                 7519 	push	af
   15D4 33                 7520 	inc	sp
                           7521 ;	genIpush
                           7522 ;	AOP_STK for _move_character_sloc6_1_0
   15D5 23                 7523 	inc	hl
   15D6 7E                 7524 	ld	a,(hl)
   15D7 F5                 7525 	push	af
   15D8 33                 7526 	inc	sp
                           7527 ;	genCall
   15D9 CD 00 00           7528 	call	_set_sprite_tile
   15DC E8 02              7529 	lda	sp,2(sp)
   15DE C1                 7530 	pop	bc
                           7531 ;	genLabel
   15DF                    7532 00139$:
                           7533 ;	game.c 995
                           7534 ;	genPointerGet
                           7535 ;	AOP_STK for _move_character_sloc1_1_0
                           7536 ;	AOP_STK for _move_character_sloc7_1_0
   15DF F8 0B              7537 	lda	hl,11(sp)
   15E1 5E                 7538 	ld	e,(hl)
   15E2 23                 7539 	inc	hl
   15E3 56                 7540 	ld	d,(hl)
   15E4 1A                 7541 	ld	a,(de)
   15E5 F8 02              7542 	lda	hl,2(sp)
   15E7 77                 7543 	ld	(hl),a
                           7544 ;	genIpush
                           7545 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15E8 C5                 7546 	push	bc
   15E9 3E 20              7547 	ld	a,#0x20
   15EB F5                 7548 	push	af
   15EC 33                 7549 	inc	sp
                           7550 ;	genIpush
                           7551 ;	AOP_STK for _move_character_sloc7_1_0
   15ED 7E                 7552 	ld	a,(hl)
   15EE F5                 7553 	push	af
   15EF 33                 7554 	inc	sp
                           7555 ;	genCall
   15F0 CD 00 00           7556 	call	_set_sprite_prop
   15F3 E8 02              7557 	lda	sp,2(sp)
   15F5 C1                 7558 	pop	bc
                           7559 ;	game.c 996
                           7560 ;	genGoto
   15F6 C3 E2 17           7561 	jp	00155$
                           7562 ;	game.c 999
                           7563 ;	genLabel
   15F9                    7564 00140$:
                           7565 ;	genPlus
                           7566 ;	AOP_STK for _move_character_sloc0_1_0
                           7567 ;	AOP_STK for _move_character_sloc5_1_0
                           7568 ;	genPlusIncr
                           7569 ;	Can't optimise plus by inc, falling back to the normal way
   15F9 F8 0D              7570 	lda	hl,13(sp)
   15FB 5E                 7571 	ld	e,(hl)
   15FC 23                 7572 	inc	hl
   15FD 56                 7573 	ld	d,(hl)
   15FE 21 02 00           7574 	ld	hl,#0x0002
   1601 19                 7575 	add	hl,de
   1602 7D                 7576 	ld	a,l
   1603 54                 7577 	ld	d,h
   1604 F8 04              7578 	lda	hl,4(sp)
                           7579 ;	genPointerGet
                           7580 ;	AOP_STK for _move_character_sloc5_1_0
                           7581 ;	AOP_STK for _move_character_sloc7_1_0
   1606 22                 7582 	ld	(hl+),a
   1607 72                 7583 	ld	(hl),d
   1608 5F                 7584 	ld	e,a
   1609 1A                 7585 	ld	a,(de)
   160A F8 02              7586 	lda	hl,2(sp)
   160C 77                 7587 	ld	(hl),a
                           7588 ;	genIpush
                           7589 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   160D C5                 7590 	push	bc
                           7591 ;	AOP_STK for _move_character_sloc7_1_0
   160E 7E                 7592 	ld	a,(hl)
   160F F5                 7593 	push	af
   1610 33                 7594 	inc	sp
                           7595 ;	genIpush
   1611 78                 7596 	ld	a,b
   1612 F5                 7597 	push	af
   1613 33                 7598 	inc	sp
                           7599 ;	genCall
   1614 CD 00 00           7600 	call	_set_sprite_tile
   1617 E8 02              7601 	lda	sp,2(sp)
   1619 C1                 7602 	pop	bc
                           7603 ;	game.c 1000
                           7604 ;	genCmpEq
                           7605 ;	AOP_HL for _input_timer
                           7606 ; genCmpEq: left 1, right 1, result 0
   161A 21 03 19           7607 	ld	hl,#_input_timer
   161D 7E                 7608 	ld	a,(hl)
   161E FE 04              7609 	cp	a,#0x04
   1620 C2 54 16           7610 	jp	nz,00142$
   1623 18 03              7611 	jr	00224$
   1625                    7612 00223$:
   1625 C3 54 16           7613 	jp	00142$
   1628                    7614 00224$:
                           7615 ;	game.c 1001
                           7616 ;	genPlus
                           7617 ;	AOP_STK for _move_character_sloc0_1_0
                           7618 ;	AOP_STK for _move_character_sloc3_1_0
                           7619 ;	genPlusIncr
                           7620 ;	Can't optimise plus by inc, falling back to the normal way
   1628 F8 0D              7621 	lda	hl,13(sp)
   162A 5E                 7622 	ld	e,(hl)
   162B 23                 7623 	inc	hl
   162C 56                 7624 	ld	d,(hl)
   162D 21 03 00           7625 	ld	hl,#0x0003
   1630 19                 7626 	add	hl,de
   1631 7D                 7627 	ld	a,l
   1632 54                 7628 	ld	d,h
   1633 F8 07              7629 	lda	hl,7(sp)
                           7630 ;	genPointerGet
                           7631 ;	AOP_STK for _move_character_sloc3_1_0
                           7632 ;	AOP_STK for _move_character_sloc7_1_0
   1635 22                 7633 	ld	(hl+),a
   1636 72                 7634 	ld	(hl),d
   1637 5F                 7635 	ld	e,a
   1638 1A                 7636 	ld	a,(de)
   1639 F8 02              7637 	lda	hl,2(sp)
   163B 77                 7638 	ld	(hl),a
                           7639 ;	genPointerGet
                           7640 ;	AOP_STK for _move_character_sloc1_1_0
                           7641 ;	AOP_STK for _move_character_sloc6_1_0
   163C F8 0B              7642 	lda	hl,11(sp)
   163E 5E                 7643 	ld	e,(hl)
   163F 23                 7644 	inc	hl
   1640 56                 7645 	ld	d,(hl)
   1641 1A                 7646 	ld	a,(de)
   1642 F8 03              7647 	lda	hl,3(sp)
   1644 77                 7648 	ld	(hl),a
                           7649 ;	genIpush
                           7650 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1645 C5                 7651 	push	bc
                           7652 ;	AOP_STK for _move_character_sloc7_1_0
   1646 2B                 7653 	dec	hl
   1647 7E                 7654 	ld	a,(hl)
   1648 F5                 7655 	push	af
   1649 33                 7656 	inc	sp
                           7657 ;	genIpush
                           7658 ;	AOP_STK for _move_character_sloc6_1_0
   164A 23                 7659 	inc	hl
   164B 7E                 7660 	ld	a,(hl)
   164C F5                 7661 	push	af
   164D 33                 7662 	inc	sp
                           7663 ;	genCall
   164E CD 00 00           7664 	call	_set_sprite_tile
   1651 E8 02              7665 	lda	sp,2(sp)
   1653 C1                 7666 	pop	bc
                           7667 ;	genLabel
   1654                    7668 00142$:
                           7669 ;	game.c 1003
                           7670 ;	genCmpEq
                           7671 ;	AOP_HL for _input_timer
                           7672 ; genCmpEq: left 1, right 1, result 0
   1654 21 03 19           7673 	ld	hl,#_input_timer
   1657 7E                 7674 	ld	a,(hl)
   1658 FE 02              7675 	cp	a,#0x02
   165A C2 83 16           7676 	jp	nz,00144$
   165D 18 03              7677 	jr	00226$
   165F                    7678 00225$:
   165F C3 83 16           7679 	jp	00144$
   1662                    7680 00226$:
                           7681 ;	game.c 1004
                           7682 ;	genPointerGet
                           7683 ;	AOP_STK for _move_character_sloc5_1_0
                           7684 ;	AOP_STK for _move_character_sloc7_1_0
   1662 F8 04              7685 	lda	hl,4(sp)
   1664 5E                 7686 	ld	e,(hl)
   1665 23                 7687 	inc	hl
   1666 56                 7688 	ld	d,(hl)
   1667 1A                 7689 	ld	a,(de)
   1668 F8 02              7690 	lda	hl,2(sp)
   166A 77                 7691 	ld	(hl),a
                           7692 ;	genPointerGet
                           7693 ;	AOP_STK for _move_character_sloc1_1_0
                           7694 ;	AOP_STK for _move_character_sloc6_1_0
   166B F8 0B              7695 	lda	hl,11(sp)
   166D 5E                 7696 	ld	e,(hl)
   166E 23                 7697 	inc	hl
   166F 56                 7698 	ld	d,(hl)
   1670 1A                 7699 	ld	a,(de)
   1671 F8 03              7700 	lda	hl,3(sp)
   1673 77                 7701 	ld	(hl),a
                           7702 ;	genIpush
                           7703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1674 C5                 7704 	push	bc
                           7705 ;	AOP_STK for _move_character_sloc7_1_0
   1675 2B                 7706 	dec	hl
   1676 7E                 7707 	ld	a,(hl)
   1677 F5                 7708 	push	af
   1678 33                 7709 	inc	sp
                           7710 ;	genIpush
                           7711 ;	AOP_STK for _move_character_sloc6_1_0
   1679 23                 7712 	inc	hl
   167A 7E                 7713 	ld	a,(hl)
   167B F5                 7714 	push	af
   167C 33                 7715 	inc	sp
                           7716 ;	genCall
   167D CD 00 00           7717 	call	_set_sprite_tile
   1680 E8 02              7718 	lda	sp,2(sp)
   1682 C1                 7719 	pop	bc
                           7720 ;	genLabel
   1683                    7721 00144$:
                           7722 ;	game.c 1007
                           7723 ;	genPointerGet
                           7724 ;	AOP_STK for _move_character_sloc1_1_0
                           7725 ;	AOP_STK for _move_character_sloc7_1_0
   1683 F8 0B              7726 	lda	hl,11(sp)
   1685 5E                 7727 	ld	e,(hl)
   1686 23                 7728 	inc	hl
   1687 56                 7729 	ld	d,(hl)
   1688 1A                 7730 	ld	a,(de)
   1689 F8 02              7731 	lda	hl,2(sp)
   168B 77                 7732 	ld	(hl),a
                           7733 ;	genIpush
                           7734 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   168C C5                 7735 	push	bc
   168D 3E 00              7736 	ld	a,#0x00
   168F F5                 7737 	push	af
   1690 33                 7738 	inc	sp
                           7739 ;	genIpush
                           7740 ;	AOP_STK for _move_character_sloc7_1_0
   1691 7E                 7741 	ld	a,(hl)
   1692 F5                 7742 	push	af
   1693 33                 7743 	inc	sp
                           7744 ;	genCall
   1694 CD 00 00           7745 	call	_set_sprite_prop
   1697 E8 02              7746 	lda	sp,2(sp)
   1699 C1                 7747 	pop	bc
                           7748 ;	game.c 1008
                           7749 ;	genGoto
   169A C3 E2 17           7750 	jp	00155$
                           7751 ;	game.c 1010
                           7752 ;	genLabel
   169D                    7753 00145$:
                           7754 ;	genPlus
                           7755 ;	AOP_STK for _move_character_sloc0_1_0
                           7756 ;	AOP_STK for _move_character_sloc5_1_0
                           7757 ;	genPlusIncr
                           7758 ;	Can't optimise plus by inc, falling back to the normal way
   169D F8 0D              7759 	lda	hl,13(sp)
   169F 5E                 7760 	ld	e,(hl)
   16A0 23                 7761 	inc	hl
   16A1 56                 7762 	ld	d,(hl)
   16A2 21 05 00           7763 	ld	hl,#0x0005
   16A5 19                 7764 	add	hl,de
   16A6 7D                 7765 	ld	a,l
   16A7 54                 7766 	ld	d,h
   16A8 F8 04              7767 	lda	hl,4(sp)
                           7768 ;	genPointerGet
                           7769 ;	AOP_STK for _move_character_sloc5_1_0
                           7770 ;	AOP_STK for _move_character_sloc7_1_0
   16AA 22                 7771 	ld	(hl+),a
   16AB 72                 7772 	ld	(hl),d
   16AC 5F                 7773 	ld	e,a
   16AD 1A                 7774 	ld	a,(de)
   16AE F8 02              7775 	lda	hl,2(sp)
   16B0 77                 7776 	ld	(hl),a
                           7777 ;	genIpush
                           7778 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16B1 C5                 7779 	push	bc
                           7780 ;	AOP_STK for _move_character_sloc7_1_0
   16B2 7E                 7781 	ld	a,(hl)
   16B3 F5                 7782 	push	af
   16B4 33                 7783 	inc	sp
                           7784 ;	genIpush
   16B5 78                 7785 	ld	a,b
   16B6 F5                 7786 	push	af
   16B7 33                 7787 	inc	sp
                           7788 ;	genCall
   16B8 CD 00 00           7789 	call	_set_sprite_tile
   16BB E8 02              7790 	lda	sp,2(sp)
   16BD C1                 7791 	pop	bc
                           7792 ;	game.c 1012
                           7793 ;	genCmpEq
                           7794 ;	AOP_HL for _input_timer
                           7795 ; genCmpEq: left 1, right 1, result 0
   16BE 21 03 19           7796 	ld	hl,#_input_timer
   16C1 7E                 7797 	ld	a,(hl)
   16C2 FE 04              7798 	cp	a,#0x04
   16C4 C2 F8 16           7799 	jp	nz,00147$
   16C7 18 03              7800 	jr	00228$
   16C9                    7801 00227$:
   16C9 C3 F8 16           7802 	jp	00147$
   16CC                    7803 00228$:
                           7804 ;	game.c 1013
                           7805 ;	genPlus
                           7806 ;	AOP_STK for _move_character_sloc0_1_0
                           7807 ;	AOP_STK for _move_character_sloc3_1_0
                           7808 ;	genPlusIncr
                           7809 ;	Can't optimise plus by inc, falling back to the normal way
   16CC F8 0D              7810 	lda	hl,13(sp)
   16CE 5E                 7811 	ld	e,(hl)
   16CF 23                 7812 	inc	hl
   16D0 56                 7813 	ld	d,(hl)
   16D1 21 06 00           7814 	ld	hl,#0x0006
   16D4 19                 7815 	add	hl,de
   16D5 7D                 7816 	ld	a,l
   16D6 54                 7817 	ld	d,h
   16D7 F8 07              7818 	lda	hl,7(sp)
                           7819 ;	genPointerGet
                           7820 ;	AOP_STK for _move_character_sloc3_1_0
                           7821 ;	AOP_STK for _move_character_sloc7_1_0
   16D9 22                 7822 	ld	(hl+),a
   16DA 72                 7823 	ld	(hl),d
   16DB 5F                 7824 	ld	e,a
   16DC 1A                 7825 	ld	a,(de)
   16DD F8 02              7826 	lda	hl,2(sp)
   16DF 77                 7827 	ld	(hl),a
                           7828 ;	genPointerGet
                           7829 ;	AOP_STK for _move_character_sloc1_1_0
                           7830 ;	AOP_STK for _move_character_sloc6_1_0
   16E0 F8 0B              7831 	lda	hl,11(sp)
   16E2 5E                 7832 	ld	e,(hl)
   16E3 23                 7833 	inc	hl
   16E4 56                 7834 	ld	d,(hl)
   16E5 1A                 7835 	ld	a,(de)
   16E6 F8 03              7836 	lda	hl,3(sp)
   16E8 77                 7837 	ld	(hl),a
                           7838 ;	genIpush
                           7839 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16E9 C5                 7840 	push	bc
                           7841 ;	AOP_STK for _move_character_sloc7_1_0
   16EA 2B                 7842 	dec	hl
   16EB 7E                 7843 	ld	a,(hl)
   16EC F5                 7844 	push	af
   16ED 33                 7845 	inc	sp
                           7846 ;	genIpush
                           7847 ;	AOP_STK for _move_character_sloc6_1_0
   16EE 23                 7848 	inc	hl
   16EF 7E                 7849 	ld	a,(hl)
   16F0 F5                 7850 	push	af
   16F1 33                 7851 	inc	sp
                           7852 ;	genCall
   16F2 CD 00 00           7853 	call	_set_sprite_tile
   16F5 E8 02              7854 	lda	sp,2(sp)
   16F7 C1                 7855 	pop	bc
                           7856 ;	genLabel
   16F8                    7857 00147$:
                           7858 ;	game.c 1015
                           7859 ;	genCmpEq
                           7860 ;	AOP_HL for _input_timer
                           7861 ; genCmpEq: left 1, right 1, result 0
   16F8 21 03 19           7862 	ld	hl,#_input_timer
   16FB 7E                 7863 	ld	a,(hl)
   16FC FE 02              7864 	cp	a,#0x02
   16FE C2 27 17           7865 	jp	nz,00149$
   1701 18 03              7866 	jr	00230$
   1703                    7867 00229$:
   1703 C3 27 17           7868 	jp	00149$
   1706                    7869 00230$:
                           7870 ;	game.c 1016
                           7871 ;	genPointerGet
                           7872 ;	AOP_STK for _move_character_sloc5_1_0
                           7873 ;	AOP_STK for _move_character_sloc7_1_0
   1706 F8 04              7874 	lda	hl,4(sp)
   1708 5E                 7875 	ld	e,(hl)
   1709 23                 7876 	inc	hl
   170A 56                 7877 	ld	d,(hl)
   170B 1A                 7878 	ld	a,(de)
   170C F8 02              7879 	lda	hl,2(sp)
   170E 77                 7880 	ld	(hl),a
                           7881 ;	genPointerGet
                           7882 ;	AOP_STK for _move_character_sloc1_1_0
                           7883 ;	AOP_STK for _move_character_sloc6_1_0
   170F F8 0B              7884 	lda	hl,11(sp)
   1711 5E                 7885 	ld	e,(hl)
   1712 23                 7886 	inc	hl
   1713 56                 7887 	ld	d,(hl)
   1714 1A                 7888 	ld	a,(de)
   1715 F8 03              7889 	lda	hl,3(sp)
   1717 77                 7890 	ld	(hl),a
                           7891 ;	genIpush
                           7892 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1718 C5                 7893 	push	bc
                           7894 ;	AOP_STK for _move_character_sloc7_1_0
   1719 2B                 7895 	dec	hl
   171A 7E                 7896 	ld	a,(hl)
   171B F5                 7897 	push	af
   171C 33                 7898 	inc	sp
                           7899 ;	genIpush
                           7900 ;	AOP_STK for _move_character_sloc6_1_0
   171D 23                 7901 	inc	hl
   171E 7E                 7902 	ld	a,(hl)
   171F F5                 7903 	push	af
   1720 33                 7904 	inc	sp
                           7905 ;	genCall
   1721 CD 00 00           7906 	call	_set_sprite_tile
   1724 E8 02              7907 	lda	sp,2(sp)
   1726 C1                 7908 	pop	bc
                           7909 ;	genLabel
   1727                    7910 00149$:
                           7911 ;	game.c 1019
                           7912 ;	genPointerGet
                           7913 ;	AOP_STK for _move_character_sloc1_1_0
                           7914 ;	AOP_STK for _move_character_sloc7_1_0
   1727 F8 0B              7915 	lda	hl,11(sp)
   1729 5E                 7916 	ld	e,(hl)
   172A 23                 7917 	inc	hl
   172B 56                 7918 	ld	d,(hl)
   172C 1A                 7919 	ld	a,(de)
   172D F8 02              7920 	lda	hl,2(sp)
   172F 77                 7921 	ld	(hl),a
                           7922 ;	genIpush
                           7923 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1730 C5                 7924 	push	bc
   1731 3E 20              7925 	ld	a,#0x20
   1733 F5                 7926 	push	af
   1734 33                 7927 	inc	sp
                           7928 ;	genIpush
                           7929 ;	AOP_STK for _move_character_sloc7_1_0
   1735 7E                 7930 	ld	a,(hl)
   1736 F5                 7931 	push	af
   1737 33                 7932 	inc	sp
                           7933 ;	genCall
   1738 CD 00 00           7934 	call	_set_sprite_prop
   173B E8 02              7935 	lda	sp,2(sp)
   173D C1                 7936 	pop	bc
                           7937 ;	game.c 1020
                           7938 ;	genGoto
   173E C3 E2 17           7939 	jp	00155$
                           7940 ;	game.c 1022
                           7941 ;	genLabel
   1741                    7942 00150$:
                           7943 ;	genPlus
                           7944 ;	AOP_STK for _move_character_sloc0_1_0
                           7945 ;	AOP_STK for _move_character_sloc5_1_0
                           7946 ;	genPlusIncr
                           7947 ;	Can't optimise plus by inc, falling back to the normal way
   1741 F8 0D              7948 	lda	hl,13(sp)
   1743 5E                 7949 	ld	e,(hl)
   1744 23                 7950 	inc	hl
   1745 56                 7951 	ld	d,(hl)
   1746 21 05 00           7952 	ld	hl,#0x0005
   1749 19                 7953 	add	hl,de
   174A 7D                 7954 	ld	a,l
   174B 54                 7955 	ld	d,h
   174C F8 04              7956 	lda	hl,4(sp)
                           7957 ;	genPointerGet
                           7958 ;	AOP_STK for _move_character_sloc5_1_0
                           7959 ;	AOP_STK for _move_character_sloc7_1_0
   174E 22                 7960 	ld	(hl+),a
   174F 72                 7961 	ld	(hl),d
   1750 5F                 7962 	ld	e,a
   1751 1A                 7963 	ld	a,(de)
   1752 F8 02              7964 	lda	hl,2(sp)
   1754 77                 7965 	ld	(hl),a
                           7966 ;	genIpush
                           7967 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1755 C5                 7968 	push	bc
                           7969 ;	AOP_STK for _move_character_sloc7_1_0
   1756 7E                 7970 	ld	a,(hl)
   1757 F5                 7971 	push	af
   1758 33                 7972 	inc	sp
                           7973 ;	genIpush
   1759 78                 7974 	ld	a,b
   175A F5                 7975 	push	af
   175B 33                 7976 	inc	sp
                           7977 ;	genCall
   175C CD 00 00           7978 	call	_set_sprite_tile
   175F E8 02              7979 	lda	sp,2(sp)
   1761 C1                 7980 	pop	bc
                           7981 ;	game.c 1024
                           7982 ;	genCmpEq
                           7983 ;	AOP_HL for _input_timer
                           7984 ; genCmpEq: left 1, right 1, result 0
   1762 21 03 19           7985 	ld	hl,#_input_timer
   1765 7E                 7986 	ld	a,(hl)
   1766 FE 04              7987 	cp	a,#0x04
   1768 C2 9C 17           7988 	jp	nz,00152$
   176B 18 03              7989 	jr	00232$
   176D                    7990 00231$:
   176D C3 9C 17           7991 	jp	00152$
   1770                    7992 00232$:
                           7993 ;	game.c 1025
                           7994 ;	genPlus
                           7995 ;	AOP_STK for _move_character_sloc0_1_0
                           7996 ;	AOP_STK for _move_character_sloc3_1_0
                           7997 ;	genPlusIncr
                           7998 ;	Can't optimise plus by inc, falling back to the normal way
   1770 F8 0D              7999 	lda	hl,13(sp)
   1772 5E                 8000 	ld	e,(hl)
   1773 23                 8001 	inc	hl
   1774 56                 8002 	ld	d,(hl)
   1775 21 06 00           8003 	ld	hl,#0x0006
   1778 19                 8004 	add	hl,de
   1779 7D                 8005 	ld	a,l
   177A 54                 8006 	ld	d,h
   177B F8 07              8007 	lda	hl,7(sp)
                           8008 ;	genPointerGet
                           8009 ;	AOP_STK for _move_character_sloc3_1_0
                           8010 ;	AOP_STK for _move_character_sloc7_1_0
   177D 22                 8011 	ld	(hl+),a
   177E 72                 8012 	ld	(hl),d
   177F 5F                 8013 	ld	e,a
   1780 1A                 8014 	ld	a,(de)
   1781 F8 02              8015 	lda	hl,2(sp)
   1783 77                 8016 	ld	(hl),a
                           8017 ;	genPointerGet
                           8018 ;	AOP_STK for _move_character_sloc1_1_0
                           8019 ;	AOP_STK for _move_character_sloc6_1_0
   1784 F8 0B              8020 	lda	hl,11(sp)
   1786 5E                 8021 	ld	e,(hl)
   1787 23                 8022 	inc	hl
   1788 56                 8023 	ld	d,(hl)
   1789 1A                 8024 	ld	a,(de)
   178A F8 03              8025 	lda	hl,3(sp)
   178C 77                 8026 	ld	(hl),a
                           8027 ;	genIpush
                           8028 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   178D C5                 8029 	push	bc
                           8030 ;	AOP_STK for _move_character_sloc7_1_0
   178E 2B                 8031 	dec	hl
   178F 7E                 8032 	ld	a,(hl)
   1790 F5                 8033 	push	af
   1791 33                 8034 	inc	sp
                           8035 ;	genIpush
                           8036 ;	AOP_STK for _move_character_sloc6_1_0
   1792 23                 8037 	inc	hl
   1793 7E                 8038 	ld	a,(hl)
   1794 F5                 8039 	push	af
   1795 33                 8040 	inc	sp
                           8041 ;	genCall
   1796 CD 00 00           8042 	call	_set_sprite_tile
   1799 E8 02              8043 	lda	sp,2(sp)
   179B C1                 8044 	pop	bc
                           8045 ;	genLabel
   179C                    8046 00152$:
                           8047 ;	game.c 1027
                           8048 ;	genCmpEq
                           8049 ;	AOP_HL for _input_timer
                           8050 ; genCmpEq: left 1, right 1, result 0
   179C 21 03 19           8051 	ld	hl,#_input_timer
   179F 7E                 8052 	ld	a,(hl)
   17A0 FE 02              8053 	cp	a,#0x02
   17A2 C2 CB 17           8054 	jp	nz,00154$
   17A5 18 03              8055 	jr	00234$
   17A7                    8056 00233$:
   17A7 C3 CB 17           8057 	jp	00154$
   17AA                    8058 00234$:
                           8059 ;	game.c 1028
                           8060 ;	genPointerGet
                           8061 ;	AOP_STK for _move_character_sloc5_1_0
                           8062 ;	AOP_STK for _move_character_sloc7_1_0
   17AA F8 04              8063 	lda	hl,4(sp)
   17AC 5E                 8064 	ld	e,(hl)
   17AD 23                 8065 	inc	hl
   17AE 56                 8066 	ld	d,(hl)
   17AF 1A                 8067 	ld	a,(de)
   17B0 F8 02              8068 	lda	hl,2(sp)
   17B2 77                 8069 	ld	(hl),a
                           8070 ;	genPointerGet
                           8071 ;	AOP_STK for _move_character_sloc1_1_0
                           8072 ;	AOP_STK for _move_character_sloc6_1_0
   17B3 F8 0B              8073 	lda	hl,11(sp)
   17B5 5E                 8074 	ld	e,(hl)
   17B6 23                 8075 	inc	hl
   17B7 56                 8076 	ld	d,(hl)
   17B8 1A                 8077 	ld	a,(de)
   17B9 F8 03              8078 	lda	hl,3(sp)
   17BB 77                 8079 	ld	(hl),a
                           8080 ;	genIpush
                           8081 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17BC C5                 8082 	push	bc
                           8083 ;	AOP_STK for _move_character_sloc7_1_0
   17BD 2B                 8084 	dec	hl
   17BE 7E                 8085 	ld	a,(hl)
   17BF F5                 8086 	push	af
   17C0 33                 8087 	inc	sp
                           8088 ;	genIpush
                           8089 ;	AOP_STK for _move_character_sloc6_1_0
   17C1 23                 8090 	inc	hl
   17C2 7E                 8091 	ld	a,(hl)
   17C3 F5                 8092 	push	af
   17C4 33                 8093 	inc	sp
                           8094 ;	genCall
   17C5 CD 00 00           8095 	call	_set_sprite_tile
   17C8 E8 02              8096 	lda	sp,2(sp)
   17CA C1                 8097 	pop	bc
                           8098 ;	genLabel
   17CB                    8099 00154$:
                           8100 ;	game.c 1030
                           8101 ;	genPointerGet
                           8102 ;	AOP_STK for _move_character_sloc1_1_0
                           8103 ;	AOP_STK for _move_character_sloc7_1_0
   17CB F8 0B              8104 	lda	hl,11(sp)
   17CD 5E                 8105 	ld	e,(hl)
   17CE 23                 8106 	inc	hl
   17CF 56                 8107 	ld	d,(hl)
   17D0 1A                 8108 	ld	a,(de)
   17D1 F8 02              8109 	lda	hl,2(sp)
   17D3 77                 8110 	ld	(hl),a
                           8111 ;	genIpush
                           8112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17D4 C5                 8113 	push	bc
   17D5 3E 40              8114 	ld	a,#0x40
   17D7 F5                 8115 	push	af
   17D8 33                 8116 	inc	sp
                           8117 ;	genIpush
                           8118 ;	AOP_STK for _move_character_sloc7_1_0
   17D9 7E                 8119 	ld	a,(hl)
   17DA F5                 8120 	push	af
   17DB 33                 8121 	inc	sp
                           8122 ;	genCall
   17DC CD 00 00           8123 	call	_set_sprite_prop
   17DF E8 02              8124 	lda	sp,2(sp)
   17E1 C1                 8125 	pop	bc
                           8126 ;	game.c 1032
                           8127 ;	genLabel
   17E2                    8128 00155$:
                           8129 ;	game.c 1035
                           8130 ;	genCmpEq
                           8131 ;	AOP_HL for _input_timer
                           8132 ; genCmpEq: left 1, right 1, result 0
   17E2 21 03 19           8133 	ld	hl,#_input_timer
   17E5 7E                 8134 	ld	a,(hl)
   17E6 B7                 8135 	or	a,a
   17E7 CA 67 18           8136 	jp	z,00165$
   17EA                    8137 00235$:
                           8138 ;	game.c 1037
                           8139 ;	genIfx
                           8140 ;	AOP_STK for _move_character_sloc8_1_0
   17EA AF                 8141 	xor	a,a
   17EB F8 00              8142 	lda	hl,0(sp)
   17ED B6                 8143 	or	a,(hl)
   17EE C2 67 18           8144 	jp	nz,00165$
                           8145 ;	genCmpGt
   17F1 3E 04              8146 	ld	a,#0x04
   17F3 91                 8147 	sub	a,c
   17F4 DA 67 18           8148 	jp	c,00165$
                           8149 ;	genMinus
   17F7 0D                 8150 	dec	c
                           8151 ;	genJumpTab
   17F8 59                 8152 	ld	e,c
   17F9 16 00              8153 	ld	d,#0x00
   17FB 21 02 18           8154 	ld	hl,#00236$
   17FE 19                 8155 	add	hl,de
   17FF 19                 8156 	add	hl,de
   1800 19                 8157 	add	hl,de
   1801 E9                 8158 	jp	(hl)
   1802                    8159 00236$:
   1802 C3 31 18           8160 	jp	00158$
   1805 C3 20 18           8161 	jp	00157$
   1808 C3 4E 18           8162 	jp	00159$
   180B C3 0E 18           8163 	jp	00156$
                           8164 ;	game.c 1039
                           8165 ;	genLabel
   180E                    8166 00156$:
                           8167 ;	genPointerGet
                           8168 ;	AOP_STK for _move_character_sloc0_1_0
   180E F8 0D              8169 	lda	hl,13(sp)
   1810 5E                 8170 	ld	e,(hl)
   1811 23                 8171 	inc	hl
   1812 56                 8172 	ld	d,(hl)
   1813 1A                 8173 	ld	a,(de)
   1814 4F                 8174 	ld	c,a
                           8175 ;	genMinus
   1815 0D                 8176 	dec	c
   1816 0D                 8177 	dec	c
                           8178 ;	genAssign (pointer)
                           8179 ;	AOP_STK for _move_character_sloc0_1_0
   1817 2B                 8180 	dec	hl
   1818 5E                 8181 	ld	e,(hl)
   1819 23                 8182 	inc	hl
   181A 56                 8183 	ld	d,(hl)
   181B 79                 8184 	ld	a,c
   181C 12                 8185 	ld	(de),a
                           8186 ;	game.c 1040
                           8187 ;	genGoto
   181D C3 67 18           8188 	jp	00165$
                           8189 ;	game.c 1042
                           8190 ;	genLabel
   1820                    8191 00157$:
                           8192 ;	genPointerGet
                           8193 ;	AOP_STK for _move_character_sloc0_1_0
   1820 F8 0D              8194 	lda	hl,13(sp)
   1822 5E                 8195 	ld	e,(hl)
   1823 23                 8196 	inc	hl
   1824 56                 8197 	ld	d,(hl)
   1825 1A                 8198 	ld	a,(de)
                           8199 ;	genPlus
                           8200 ;	genPlusIncr
                           8201 ;	Can't optimise plus by inc, falling back to the normal way
   1826 4F                 8202 	ld	c,a
   1827 C6 02              8203 	add	a,#0x02
                           8204 ;	genAssign (pointer)
                           8205 ;	AOP_STK for _move_character_sloc0_1_0
   1829 2B                 8206 	dec	hl
   182A 5E                 8207 	ld	e,(hl)
   182B 23                 8208 	inc	hl
   182C 56                 8209 	ld	d,(hl)
   182D 12                 8210 	ld	(de),a
                           8211 ;	game.c 1043
                           8212 ;	genGoto
   182E C3 67 18           8213 	jp	00165$
                           8214 ;	game.c 1045
                           8215 ;	genLabel
   1831                    8216 00158$:
                           8217 ;	genPlus
                           8218 ;	AOP_STK for _move_character_sloc0_1_0
                           8219 ;	AOP_STK for _move_character_sloc8_1_0
                           8220 ;	genPlusIncr
                           8221 ;	Can't optimise plus by inc, falling back to the normal way
   1831 F8 0D              8222 	lda	hl,13(sp)
   1833 5E                 8223 	ld	e,(hl)
   1834 23                 8224 	inc	hl
   1835 56                 8225 	ld	d,(hl)
   1836 21 01 00           8226 	ld	hl,#0x0001
   1839 19                 8227 	add	hl,de
   183A 7D                 8228 	ld	a,l
   183B 54                 8229 	ld	d,h
   183C F8 00              8230 	lda	hl,0(sp)
                           8231 ;	genPointerGet
                           8232 ;	AOP_STK for _move_character_sloc8_1_0
   183E 22                 8233 	ld	(hl+),a
   183F 72                 8234 	ld	(hl),d
   1840 5F                 8235 	ld	e,a
   1841 1A                 8236 	ld	a,(de)
   1842 4F                 8237 	ld	c,a
                           8238 ;	genMinus
   1843 0D                 8239 	dec	c
   1844 0D                 8240 	dec	c
                           8241 ;	genAssign (pointer)
                           8242 ;	AOP_STK for _move_character_sloc8_1_0
   1845 2B                 8243 	dec	hl
   1846 5E                 8244 	ld	e,(hl)
   1847 23                 8245 	inc	hl
   1848 56                 8246 	ld	d,(hl)
   1849 79                 8247 	ld	a,c
   184A 12                 8248 	ld	(de),a
                           8249 ;	game.c 1046
                           8250 ;	genGoto
   184B C3 67 18           8251 	jp	00165$
                           8252 ;	game.c 1048
                           8253 ;	genLabel
   184E                    8254 00159$:
                           8255 ;	genPlus
                           8256 ;	AOP_STK for _move_character_sloc0_1_0
                           8257 ;	AOP_STK for _move_character_sloc8_1_0
                           8258 ;	genPlusIncr
                           8259 ;	Can't optimise plus by inc, falling back to the normal way
   184E F8 0D              8260 	lda	hl,13(sp)
   1850 5E                 8261 	ld	e,(hl)
   1851 23                 8262 	inc	hl
   1852 56                 8263 	ld	d,(hl)
   1853 21 01 00           8264 	ld	hl,#0x0001
   1856 19                 8265 	add	hl,de
   1857 7D                 8266 	ld	a,l
   1858 54                 8267 	ld	d,h
   1859 F8 00              8268 	lda	hl,0(sp)
                           8269 ;	genPointerGet
                           8270 ;	AOP_STK for _move_character_sloc8_1_0
   185B 22                 8271 	ld	(hl+),a
   185C 72                 8272 	ld	(hl),d
   185D 5F                 8273 	ld	e,a
   185E 1A                 8274 	ld	a,(de)
                           8275 ;	genPlus
                           8276 ;	genPlusIncr
                           8277 ;	Can't optimise plus by inc, falling back to the normal way
   185F 4F                 8278 	ld	c,a
   1860 C6 02              8279 	add	a,#0x02
                           8280 ;	genAssign (pointer)
                           8281 ;	AOP_STK for _move_character_sloc8_1_0
   1862 2B                 8282 	dec	hl
   1863 5E                 8283 	ld	e,(hl)
   1864 23                 8284 	inc	hl
   1865 56                 8285 	ld	d,(hl)
   1866 12                 8286 	ld	(de),a
                           8287 ;	game.c 1050
                           8288 ;	genLabel
   1867                    8289 00165$:
                           8290 ;	game.c 1055
                           8291 ;	genPlus
                           8292 ;	AOP_STK for _move_character_sloc0_1_0
                           8293 ;	AOP_STK for _move_character_sloc8_1_0
                           8294 ;	genPlusIncr
                           8295 ;	Can't optimise plus by inc, falling back to the normal way
   1867 F8 0D              8296 	lda	hl,13(sp)
   1869 5E                 8297 	ld	e,(hl)
   186A 23                 8298 	inc	hl
   186B 56                 8299 	ld	d,(hl)
   186C 21 01 00           8300 	ld	hl,#0x0001
   186F 19                 8301 	add	hl,de
   1870 7D                 8302 	ld	a,l
   1871 54                 8303 	ld	d,h
   1872 F8 00              8304 	lda	hl,0(sp)
                           8305 ;	genPointerGet
                           8306 ;	AOP_STK for _move_character_sloc8_1_0
   1874 22                 8307 	ld	(hl+),a
   1875 72                 8308 	ld	(hl),d
   1876 5F                 8309 	ld	e,a
   1877 1A                 8310 	ld	a,(de)
   1878 4F                 8311 	ld	c,a
                           8312 ;	genPointerGet
                           8313 ;	AOP_STK for _move_character_sloc0_1_0
                           8314 ;	AOP_STK for _move_character_sloc8_1_0
   1879 F8 0D              8315 	lda	hl,13(sp)
   187B 5E                 8316 	ld	e,(hl)
   187C 23                 8317 	inc	hl
   187D 56                 8318 	ld	d,(hl)
   187E 1A                 8319 	ld	a,(de)
   187F F8 00              8320 	lda	hl,0(sp)
   1881 77                 8321 	ld	(hl),a
                           8322 ;	genIpush
                           8323 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1882 79                 8324 	ld	a,c
   1883 F5                 8325 	push	af
   1884 33                 8326 	inc	sp
                           8327 ;	genIpush
                           8328 ;	AOP_STK for _move_character_sloc8_1_0
   1885 7E                 8329 	ld	a,(hl)
   1886 F5                 8330 	push	af
   1887 33                 8331 	inc	sp
                           8332 ;	genIpush
   1888 78                 8333 	ld	a,b
   1889 F5                 8334 	push	af
   188A 33                 8335 	inc	sp
                           8336 ;	genCall
   188B CD 00 00           8337 	call	_move_sprite
   188E E8 03              8338 	lda	sp,3(sp)
                           8339 ;	genLabel
   1890                    8340 00166$:
                           8341 ;	genEndFunction
   1890 E8 0F              8342 	lda	sp,15(sp)
   1892 C9                 8343 	ret
   1893                    8344 ___move_character_end:
                           8345 ;	game.c 1058
                           8346 ;	genLabel
                           8347 ;	genFunction
                           8348 ;	---------------------------------
                           8349 ; Function set_character_sprite
                           8350 ; ---------------------------------
   1893                    8351 ___set_character_sprite_start:
   1893                    8352 _set_character_sprite:
   1893 E8 FA              8353 	lda	sp,-6(sp)
                           8354 ;	game.c 1059
                           8355 ;	genAssign
                           8356 ;	AOP_STK for 
   1895 F8 08              8357 	lda	hl,8(sp)
   1897 4E                 8358 	ld	c,(hl)
   1898 23                 8359 	inc	hl
   1899 46                 8360 	ld	b,(hl)
                           8361 ;	genPlus
                           8362 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8363 ;	genPlusIncr
                           8364 ;	Can't optimise plus by inc, falling back to the normal way
   189A 21 0B 00           8365 	ld	hl,#0x000B
   189D 09                 8366 	add	hl,bc
   189E 7D                 8367 	ld	a,l
   189F 54                 8368 	ld	d,h
   18A0 F8 04              8369 	lda	hl,4(sp)
                           8370 ;	genPointerGet
                           8371 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8372 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   18A2 22                 8373 	ld	(hl+),a
   18A3 72                 8374 	ld	(hl),d
   18A4 5F                 8375 	ld	e,a
   18A5 1A                 8376 	ld	a,(de)
   18A6 2B                 8377 	dec	hl
   18A7 2B                 8378 	dec	hl
   18A8 77                 8379 	ld	(hl),a
                           8380 ;	genCmpGt
                           8381 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           8382 ;	AOP_HL for _characters_available
   18A9 21 02 19           8383 	ld	hl,#_characters_available
   18AC 7E                 8384 	ld	a,(hl)
   18AD F8 03              8385 	lda	hl,3(sp)
   18AF 96                 8386 	sub	a,(hl)
   18B0 DA F9 18           8387 	jp	c,00103$
                           8388 ;	game.c 1060
                           8389 ;	genPlus
                           8390 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8391 ;	genPlusIncr
                           8392 ;	Can't optimise plus by inc, falling back to the normal way
   18B3 21 02 00           8393 	ld	hl,#0x0002
   18B6 09                 8394 	add	hl,bc
   18B7 7D                 8395 	ld	a,l
   18B8 54                 8396 	ld	d,h
   18B9 F8 01              8397 	lda	hl,1(sp)
                           8398 ;	genPointerGet
                           8399 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8400 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   18BB 22                 8401 	ld	(hl+),a
   18BC 72                 8402 	ld	(hl),d
   18BD 5F                 8403 	ld	e,a
   18BE 1A                 8404 	ld	a,(de)
   18BF 2B                 8405 	dec	hl
   18C0 2B                 8406 	dec	hl
   18C1 77                 8407 	ld	(hl),a
                           8408 ;	genIpush
                           8409 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18C2 C5                 8410 	push	bc
                           8411 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   18C3 7E                 8412 	ld	a,(hl)
   18C4 F5                 8413 	push	af
   18C5 33                 8414 	inc	sp
                           8415 ;	genIpush
                           8416 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   18C6 F8 06              8417 	lda	hl,6(sp)
   18C8 7E                 8418 	ld	a,(hl)
   18C9 F5                 8419 	push	af
   18CA 33                 8420 	inc	sp
                           8421 ;	genCall
   18CB CD 00 00           8422 	call	_set_sprite_tile
   18CE E8 02              8423 	lda	sp,2(sp)
   18D0 C1                 8424 	pop	bc
                           8425 ;	game.c 1061
                           8426 ;	genPlus
                           8427 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8428 ;	genPlusIncr
                           8429 ;	Can't optimise plus by inc, falling back to the normal way
   18D1 21 01 00           8430 	ld	hl,#0x0001
   18D4 09                 8431 	add	hl,bc
   18D5 7D                 8432 	ld	a,l
   18D6 54                 8433 	ld	d,h
   18D7 F8 01              8434 	lda	hl,1(sp)
                           8435 ;	genPointerGet
                           8436 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8437 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   18D9 22                 8438 	ld	(hl+),a
   18DA 72                 8439 	ld	(hl),d
   18DB 5F                 8440 	ld	e,a
   18DC 1A                 8441 	ld	a,(de)
   18DD 2B                 8442 	dec	hl
   18DE 2B                 8443 	dec	hl
   18DF 77                 8444 	ld	(hl),a
                           8445 ;	genPointerGet
   18E0 0A                 8446 	ld	a,(bc)
   18E1 4F                 8447 	ld	c,a
                           8448 ;	genPointerGet
                           8449 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   18E2 F8 04              8450 	lda	hl,4(sp)
   18E4 5E                 8451 	ld	e,(hl)
   18E5 23                 8452 	inc	hl
   18E6 56                 8453 	ld	d,(hl)
   18E7 1A                 8454 	ld	a,(de)
   18E8 47                 8455 	ld	b,a
                           8456 ;	genIpush
                           8457 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8458 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   18E9 F8 00              8459 	lda	hl,0(sp)
   18EB 7E                 8460 	ld	a,(hl)
   18EC F5                 8461 	push	af
   18ED 33                 8462 	inc	sp
                           8463 ;	genIpush
   18EE 79                 8464 	ld	a,c
   18EF F5                 8465 	push	af
   18F0 33                 8466 	inc	sp
                           8467 ;	genIpush
   18F1 78                 8468 	ld	a,b
   18F2 F5                 8469 	push	af
   18F3 33                 8470 	inc	sp
                           8471 ;	genCall
   18F4 CD 00 00           8472 	call	_move_sprite
   18F7 E8 03              8473 	lda	sp,3(sp)
                           8474 ;	genLabel
   18F9                    8475 00103$:
                           8476 ;	genEndFunction
   18F9 E8 06              8477 	lda	sp,6(sp)
   18FB C9                 8478 	ret
   18FC                    8479 ___set_character_sprite_end:
                           8480 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_next_map_position_end      0AF2 R
  0 ____get_next_map_position_start    0A3E R
  0 ___can_move_end                    0EC9 R
  0 ___can_move_start                  0DB0 R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0C16 R
  0 ___dog1_power_apply_start          0AF2 R
  0 ___dog1_power_end                  0A3E R
  0 ___dog1_power_start                08C0 R
  0 ___get_player_map_position_end     0C6A R
  0 ___get_player_map_position_start   0C16 R
  0 ___got_door_end                    07B0 R
  0 ___got_door_start                  05C6 R
  0 ___got_key_end                     05C6 R
  0 ___got_key_start                   0519 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___ice_should_slide_end            08C0 R
  0 ___ice_should_slide_start          0885 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0519 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      0885 R
  0 ___is_ded_start                    07B0 R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              1893 R
  0 ___move_character_start            106F R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0DB0 R
  0 ___player_input_start              0C6A R
  0 ___rotate_player_end               106F R
  0 ___rotate_player_start             0EC9 R
  0 ___set_character_sprite_end        18FC R
  0 ___set_character_sprite_start      1893 R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_next_map_position            0A3E GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          0DB0 GR
  1 _cat                               1A94 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7A GR
  0 _dog1_power                        08C0 GR
  0 _dog1_power_apply                  0AF2 GR
  1 _dog2                              1A87 GR
  0 _get_player_map_position           0C16 GR
  0 _got_door                          05C6 GR
  0 _got_key                           0519 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA1 GR
  0 _ice_should_slide                  0885 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07B0 GR
  1 _item1                             1AB6 GR
  1 _item2                             1ABC GR
  1 _item3                             1AC2 GR
    _joypad                            **** GX
  1 _key                               1AB0 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    106F GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AAE GR
  0 _player_input                      0C6A GR
    _printf                            **** GX
  0 _rotate_player                     0EC9 GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              1893 GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 18FC   flags 0
   1 _DATA                              size 1AC8   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 1033   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
