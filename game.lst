                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Wed Feb 12 17:11:28 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc299920
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _player
                             13 	.globl _cat
                             14 	.globl _dog2
                             15 	.globl _dog1
                             16 	.globl _bunny
                             17 	.globl _map
                             18 	.globl _running
                             19 	.globl _Characters
                             20 	.globl _map_1
                             21 	.globl _init
                             22 	.globl _move_player
                             23 	.globl _set_character_sprite
                             24 ;--------------------------------------------------------
                             25 ; special function registers
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; special function bits 
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area _DATA
   0000                      34 _Characters::
   0000                      35 	.ds 192
   00C0                      36 _running::
   00C0                      37 	.ds 1
   00C1                      38 _map::
   00C1                      39 	.ds 1
   00C2                      40 _bunny::
   00C2                      41 	.ds 9
   00CB                      42 _dog1::
   00CB                      43 	.ds 9
   00D4                      44 _dog2::
   00D4                      45 	.ds 9
   00DD                      46 _cat::
   00DD                      47 	.ds 9
   00E6                      48 _player::
   00E6                      49 	.ds 2
                             50 ;--------------------------------------------------------
                             51 ; overlayable items in internal ram 
                             52 ;--------------------------------------------------------
                             53 	.area _OVERLAY
                             54 ;--------------------------------------------------------
                             55 ; indirectly addressable internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area _ISEG
                             58 ;--------------------------------------------------------
                             59 ; bit data
                             60 ;--------------------------------------------------------
                             61 	.area _BSEG
                             62 ;--------------------------------------------------------
                             63 ; external ram data
                             64 ;--------------------------------------------------------
                             65 	.area _XSEG
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area _GSINIT
                             70 	.area _GSFINAL
                             71 	.area _GSINIT
                             72 ;	game.c 26
                             73 ;	game.c 99
                             74 ;	genArrayInit
                             75 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00             76 	ld	hl,#_Characters
   0003 CD 00 00             77 	call	__initrleblock
   0006 7F                   78 	.db	127
   0007 09 00 00 09 00 09    79 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00    80 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x3A, 0x45
        3A 45
   0017 09 00 00 09 00 09    81 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00    82 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x15, 0x2A
        15 2A
   0027 24 12 00 09 0F 00    83 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 3F 00 3A 45    84 	.db	0xFF, 0x00, 0x3F, 0x00, 0x3A, 0x45, 0x00, 0x00
        00 00
   0037 00 08 02 08 02 38    85 	.db	0x00, 0x08, 0x02, 0x08, 0x02, 0x38, 0x02, 0x28
        02 28
   003F 02 38 00 00 00 00    86 	.db	0x02, 0x38, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01
        01 01
   0047 00 08 02 08 02 38    87 	.db	0x00, 0x08, 0x02, 0x08, 0x02, 0x38, 0x02, 0x28
        02 28
   004F 02 38 00 00 00 00    88 	.db	0x02, 0x38, 0x00, 0x00, 0x00, 0x00, 0x05, 0x05
        05 05
   0057 00 08 02 08 02 38    89 	.db	0x00, 0x08, 0x02, 0x08, 0x02, 0x38, 0x02, 0x28
        02 28
   005F 02 38 00 00 00 00    90 	.db	0x02, 0x38, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   0067 00 10 05 10 05 70    91 	.db	0x00, 0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50
        05 50
   006F 05 70 00 00 00 00    92 	.db	0x05, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01
        01 01
   0077 00 10 05 10 05 70    93 	.db	0x00, 0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50
        05 50
   007F 05 70 00 00 00 00    94 	.db	0x05, 0x70, 0x00, 0x00, 0x00, 0x00, 0x05
        05
   0086 41                   95 	.db	65
   0087 05 00 10 05 10 05    96 	.db	0x05, 0x00, 0x10, 0x05, 0x10, 0x05, 0x70, 0x05
        70 05
   008F 50 05 70 00 00 00    97 	.db	0x50, 0x05, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15
        00 15
   0097 15 00 00 04 70 04    98 	.db	0x15, 0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04
        40 04
   009F 40 04 70 00 00 00    99 	.db	0x40, 0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01
        00 01
   00A7 01 00 00 04 70 04   100 	.db	0x01, 0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04
        40 04
   00AF 40 04 70 00 00 00   101 	.db	0x40, 0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x05
        00 05
   00B7 05 00 00 04 70 04   102 	.db	0x05, 0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04
        40 04
   00BF 40 04 70 00 00 00   103 	.db	0x40, 0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15
        00 15
   00C7 15                  104 	.db	0x15
   00C8 00                  105 	.db	0
                            106 ;--------------------------------------------------------
                            107 ; Home
                            108 ;--------------------------------------------------------
                            109 	.area _HOME
                            110 	.area _CODE
                            111 ;--------------------------------------------------------
                            112 ; code
                            113 ;--------------------------------------------------------
                            114 	.area _CODE
                            115 ;	game.c 28
                            116 ;	genLabel
                            117 ;	genFunction
                            118 ;	---------------------------------
                            119 ; Function main
                            120 ; ---------------------------------
   0000                     121 ___main_start:
   0000                     122 _main:
                            123 	
                            124 ;	game.c 30
                            125 ;	genCall
                            126 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 CD 3F 00            127 	call	_init
                            128 ;	game.c 32
                            129 ;	genLabel
   0003                     130 00103$:
                            131 ;	genIfx
                            132 ;	AOP_HL for _running
   0003 AF                  133 	xor	a,a
   0004 21 C0 00            134 	ld	hl,#_running
   0007 B6                  135 	or	a,(hl)
   0008 CA 1F 00            136 	jp	z,00105$
                            137 ;	game.c 33
                            138 ;	genCmpEq
                            139 ;	AOP_HL for _map
                            140 ; genCmpEq: left 1, right 1, result 0
   000B 21 C1 00            141 	ld	hl,#_map
   000E 7E                  142 	ld	a,(hl)
   000F FE 01               143 	cp	a,#0x01
   0011 C2 03 00            144 	jp	nz,00103$
   0014 18 03               145 	jr	00116$
   0016                     146 00115$:
   0016 C3 03 00            147 	jp	00103$
   0019                     148 00116$:
                            149 ;	game.c 34
                            150 ;	genCall
                            151 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0019 CD 35 00            152 	call	_map_1
                            153 ;	genGoto
   001C C3 03 00            154 	jp	00103$
                            155 ;	genLabel
   001F                     156 00105$:
                            157 ;	game.c 38
                            158 ;	genIpush
                            159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   001F 21 2C 00            160 	ld	hl,#__str_0
   0022 E5                  161 	push	hl
                            162 ;	genCall
   0023 CD 00 00            163 	call	_printf
   0026 E8 02               164 	lda	sp,2(sp)
                            165 ;	game.c 39
                            166 ;	genLabel
   0028                     167 00107$:
                            168 ;	genGoto
   0028 C3 28 00            169 	jp	00107$
                            170 ;	genLabel
   002B                     171 00109$:
                            172 ;	genEndFunction
                            173 	
   002B C9                  174 	ret
   002C                     175 ___main_end:
   002C                     176 __str_0:
   002C 54 68 65 20 65 6E   177 	.ascii "The end"
        64
   0033 0A                  178 	.db 0x0A
   0034 00                  179 	.db 0x00
                            180 ;	game.c 44
                            181 ;	genLabel
                            182 ;	genFunction
                            183 ;	---------------------------------
                            184 ; Function map_1
                            185 ; ---------------------------------
   0035                     186 ___map_1_start:
   0035                     187 _map_1:
                            188 	
                            189 ;	game.c 46
                            190 ;	genIpush
                            191 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 21 E6 00            192 	ld	hl,#_player
   0038 E5                  193 	push	hl
                            194 ;	genCall
   0039 CD E6 00            195 	call	_move_player
   003C E8 02               196 	lda	sp,2(sp)
                            197 ;	genLabel
   003E                     198 00101$:
                            199 ;	genEndFunction
                            200 	
   003E C9                  201 	ret
   003F                     202 ___map_1_end:
                            203 ;	game.c 49
                            204 ;	genLabel
                            205 ;	genFunction
                            206 ;	---------------------------------
                            207 ; Function init
                            208 ; ---------------------------------
   003F                     209 ___init_start:
   003F                     210 _init:
   003F E8 FD               211 	lda	sp,-3(sp)
                            212 ;	game.c 50
                            213 ;	genAssign
                            214 ;	AOP_HL for _running
   0041 21 C0 00            215 	ld	hl,#_running
   0044 36 01               216 	ld	(hl),#0x01
                            217 ;	game.c 51
                            218 ;	genAssign
                            219 ;	AOP_HL for _map
   0046 21 C1 00            220 	ld	hl,#_map
   0049 36 01               221 	ld	(hl),#0x01
                            222 ;	game.c 52
                            223 ;	genAssign
                            224 ;	AOP_HL for _player
   004B 21 E6 00            225 	ld	hl,#_player
   004E 36 C2               226 	ld	(hl),#<_bunny
   0050 23                  227 	inc	hl
   0051 36 00               228 	ld	(hl),#>_bunny
                            229 ;	game.c 53
                            230 ;	genAssign
   0053 01 40 FF            231 	ld	bc,#0xFF40
                            232 ;	genAssign
                            233 ;	AOP_STK for _init_sloc0_1_0
   0056 F8 01               234 	lda	hl,1(sp)
   0058 36 40               235 	ld	(hl),#0x40
   005A 23                  236 	inc	hl
   005B 36 FF               237 	ld	(hl),#0xFF
                            238 ;	genPointerGet
                            239 ;	AOP_STK for _init_sloc0_1_0
                            240 ;	AOP_STK for _init_sloc1_1_0
   005D 2B                  241 	dec	hl
   005E 5E                  242 	ld	e,(hl)
   005F 23                  243 	inc	hl
   0060 56                  244 	ld	d,(hl)
   0061 1A                  245 	ld	a,(de)
   0062 2B                  246 	dec	hl
   0063 2B                  247 	dec	hl
                            248 ;	genOr
                            249 ;	AOP_STK for _init_sloc1_1_0
   0064 77                  250 	ld      (hl),a
   0065 7F                  251 	ld      a,a
   0066 F6 80               252 	or	a,#0x80
                            253 ;	genAssign (pointer)
   0068 02                  254 	ld	(bc),a
                            255 ;	game.c 54
                            256 ;	genAssign
   0069 01 40 FF            257 	ld	bc,#0xFF40
                            258 ;	genAssign
                            259 ;	AOP_STK for _init_sloc0_1_0
   006C 23                  260 	inc	hl
   006D 36 40               261 	ld	(hl),#0x40
   006F 23                  262 	inc	hl
   0070 36 FF               263 	ld	(hl),#0xFF
                            264 ;	genPointerGet
                            265 ;	AOP_STK for _init_sloc0_1_0
                            266 ;	AOP_STK for _init_sloc1_1_0
   0072 2B                  267 	dec	hl
   0073 5E                  268 	ld	e,(hl)
   0074 23                  269 	inc	hl
   0075 56                  270 	ld	d,(hl)
   0076 1A                  271 	ld	a,(de)
   0077 2B                  272 	dec	hl
   0078 2B                  273 	dec	hl
                            274 ;	genOr
                            275 ;	AOP_STK for _init_sloc1_1_0
   0079 77                  276 	ld      (hl),a
   007A 7F                  277 	ld      a,a
   007B F6 02               278 	or	a,#0x02
                            279 ;	genAssign (pointer)
   007D 02                  280 	ld	(bc),a
                            281 ;	game.c 56
                            282 ;	genIpush
                            283 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   007E 21 00 00            284 	ld	hl,#_Characters
   0081 E5                  285 	push	hl
                            286 ;	genIpush
   0082 21 00 0C            287 	ld	hl,#0x0C00
   0085 E5                  288 	push	hl
                            289 ;	genCall
   0086 CD 00 00            290 	call	_set_sprite_data
   0089 E8 04               291 	lda	sp,4(sp)
                            292 ;	game.c 60
                            293 ;	genAssign (pointer)
   008B 11 C2 00            294 	ld	de,#_bunny
   008E 3E 28               295 	ld	a,#0x28
   0090 12                  296 	ld	(de),a
                            297 ;	game.c 61
                            298 ;	genPlus
                            299 ;	genPlusIncr
   0091 21 C3 00            300 	ld	hl,#_bunny + 1
                            301 ;	genAssign (pointer)
   0094 36 28               302 	ld	(hl),#0x28
                            303 ;	game.c 62
                            304 ;	genPlus
                            305 ;	genPlusIncr
   0096 23                  306 	inc	hl
                            307 ;	genAssign (pointer)
   0097 36 00               308 	ld	(hl),#0x00
                            309 ;	game.c 63
                            310 ;	genPlus
                            311 ;	genPlusIncr
   0099 23                  312 	inc	hl
                            313 ;	genAssign (pointer)
   009A 36 01               314 	ld	(hl),#0x01
                            315 ;	game.c 64
                            316 ;	genPlus
                            317 ;	genPlusIncr
   009C 23                  318 	inc	hl
                            319 ;	genAssign (pointer)
   009D 36 02               320 	ld	(hl),#0x02
                            321 ;	game.c 65
                            322 ;	genPlus
                            323 ;	genPlusIncr
   009F 23                  324 	inc	hl
                            325 ;	genAssign (pointer)
   00A0 36 01               326 	ld	(hl),#0x01
                            327 ;	game.c 66
                            328 ;	genPlus
                            329 ;	genPlusIncr
   00A2 23                  330 	inc	hl
                            331 ;	genAssign (pointer)
   00A3 36 00               332 	ld	(hl),#0x00
                            333 ;	game.c 67
                            334 ;	genPlus
                            335 ;	genPlusIncr
   00A5 23                  336 	inc	hl
                            337 ;	genAssign (pointer)
   00A6 36 01               338 	ld	(hl),#0x01
                            339 ;	game.c 68
                            340 ;	genPlus
                            341 ;	genPlusIncr
   00A8 23                  342 	inc	hl
                            343 ;	genAssign (pointer)
   00A9 36 01               344 	ld	(hl),#0x01
                            345 ;	game.c 70
                            346 ;	genAssign (pointer)
   00AB 11 CB 00            347 	ld	de,#_dog1
   00AE 3E 3C               348 	ld	a,#0x3C
   00B0 12                  349 	ld	(de),a
                            350 ;	game.c 71
                            351 ;	genPlus
                            352 ;	genPlusIncr
   00B1 21 CC 00            353 	ld	hl,#_dog1 + 1
                            354 ;	genAssign (pointer)
   00B4 36 3C               355 	ld	(hl),#0x3C
                            356 ;	game.c 72
                            357 ;	genPlus
                            358 ;	genPlusIncr
   00B6 23                  359 	inc	hl
                            360 ;	genAssign (pointer)
   00B7 36 03               361 	ld	(hl),#0x03
                            362 ;	game.c 73
                            363 ;	genPlus
                            364 ;	genPlusIncr
   00B9 23                  365 	inc	hl
                            366 ;	genAssign (pointer)
   00BA 36 04               367 	ld	(hl),#0x04
                            368 ;	game.c 74
                            369 ;	genPlus
                            370 ;	genPlusIncr
   00BC 23                  371 	inc	hl
                            372 ;	genAssign (pointer)
   00BD 36 05               373 	ld	(hl),#0x05
                            374 ;	game.c 75
                            375 ;	genPlus
                            376 ;	genPlusIncr
   00BF 23                  377 	inc	hl
                            378 ;	genAssign (pointer)
   00C0 36 01               379 	ld	(hl),#0x01
                            380 ;	game.c 76
                            381 ;	genPlus
                            382 ;	genPlusIncr
   00C2 23                  383 	inc	hl
                            384 ;	genAssign (pointer)
   00C3 36 00               385 	ld	(hl),#0x00
                            386 ;	game.c 77
                            387 ;	genPlus
                            388 ;	genPlusIncr
   00C5 23                  389 	inc	hl
                            390 ;	genAssign (pointer)
   00C6 36 02               391 	ld	(hl),#0x02
                            392 ;	game.c 78
                            393 ;	genPlus
                            394 ;	genPlusIncr
   00C8 23                  395 	inc	hl
                            396 ;	genAssign (pointer)
   00C9 36 00               397 	ld	(hl),#0x00
                            398 ;	game.c 80
                            399 ;	genAssign (pointer)
   00CB 11 C2 00            400 	ld	de,#_bunny
   00CE 3E 0A               401 	ld	a,#0x0A
   00D0 12                  402 	ld	(de),a
                            403 ;	game.c 82
                            404 ;	genIpush
                            405 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D1 21 C2 00            406 	ld	hl,#_bunny
   00D4 E5                  407 	push	hl
                            408 ;	genCall
   00D5 CD 06 01            409 	call	_set_character_sprite
   00D8 E8 02               410 	lda	sp,2(sp)
                            411 ;	game.c 83
                            412 ;	genIpush
                            413 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00DA 21 CB 00            414 	ld	hl,#_dog1
   00DD E5                  415 	push	hl
                            416 ;	genCall
   00DE CD 06 01            417 	call	_set_character_sprite
   00E1 E8 02               418 	lda	sp,2(sp)
                            419 ;	genLabel
   00E3                     420 00101$:
                            421 ;	genEndFunction
   00E3 E8 03               422 	lda	sp,3(sp)
   00E5 C9                  423 	ret
   00E6                     424 ___init_end:
                            425 ;	game.c 89
                            426 ;	genLabel
                            427 ;	genFunction
                            428 ;	---------------------------------
                            429 ; Function move_player
                            430 ; ---------------------------------
   00E6                     431 ___move_player_start:
   00E6                     432 _move_player:
                            433 	
                            434 ;	game.c 90
                            435 ;	genAssign
                            436 ;	AOP_STK for 
   00E6 F8 02               437 	lda	hl,2(sp)
   00E8 4E                  438 	ld	c,(hl)
   00E9 23                  439 	inc	hl
   00EA 46                  440 	ld	b,(hl)
                            441 ;	genPointerGet
   00EB 59                  442 	ld	e,c
   00EC 50                  443 	ld	d,b
   00ED 1A                  444 	ld	a,(de)
   00EE 4F                  445 	ld	c,a
   00EF 13                  446 	inc	de
   00F0 1A                  447 	ld	a,(de)
   00F1 47                  448 	ld	b,a
                            449 ;	genPointerGet
   00F2 0A                  450 	ld	a,(bc)
                            451 ;	genCast
                            452 ; Removed redundent load
   00F3 4F                  453 	ld	c,a
   00F4 17                  454 	rla	
   00F5 9F                  455 	sbc	a,a
   00F6 47                  456 	ld	b,a
                            457 ;	genIpush
                            458 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00F7 C5                  459 	push	bc
                            460 ;	genIpush
   00F8 21 02 01            461 	ld	hl,#__str_1
   00FB E5                  462 	push	hl
                            463 ;	genCall
   00FC CD 00 00            464 	call	_printf
   00FF E8 04               465 	lda	sp,4(sp)
                            466 ;	genLabel
   0101                     467 00101$:
                            468 ;	genEndFunction
                            469 	
   0101 C9                  470 	ret
   0102                     471 ___move_player_end:
   0102                     472 __str_1:
   0102 25 64               473 	.ascii "%d"
   0104 0A                  474 	.db 0x0A
   0105 00                  475 	.db 0x00
                            476 ;	game.c 95
                            477 ;	genLabel
                            478 ;	genFunction
                            479 ;	---------------------------------
                            480 ; Function set_character_sprite
                            481 ; ---------------------------------
   0106                     482 ___set_character_sprite_start:
   0106                     483 _set_character_sprite:
   0106 E8 FA               484 	lda	sp,-6(sp)
                            485 ;	game.c 96
                            486 ;	genAssign
                            487 ;	AOP_STK for 
   0108 F8 08               488 	lda	hl,8(sp)
   010A 4E                  489 	ld	c,(hl)
   010B 23                  490 	inc	hl
   010C 46                  491 	ld	b,(hl)
                            492 ;	genPlus
                            493 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                            494 ;	genPlusIncr
                            495 ;	Can't optimise plus by inc, falling back to the normal way
   010D 21 02 00            496 	ld	hl,#0x0002
   0110 09                  497 	add	hl,bc
   0111 7D                  498 	ld	a,l
   0112 54                  499 	ld	d,h
   0113 F8 04               500 	lda	hl,4(sp)
                            501 ;	genPointerGet
                            502 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                            503 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   0115 22                  504 	ld	(hl+),a
   0116 72                  505 	ld	(hl),d
   0117 5F                  506 	ld	e,a
   0118 1A                  507 	ld	a,(de)
   0119 2B                  508 	dec	hl
   011A 2B                  509 	dec	hl
   011B 77                  510 	ld	(hl),a
                            511 ;	genPlus
                            512 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                            513 ;	genPlusIncr
                            514 ;	Can't optimise plus by inc, falling back to the normal way
   011C 21 07 00            515 	ld	hl,#0x0007
   011F 09                  516 	add	hl,bc
   0120 7D                  517 	ld	a,l
   0121 54                  518 	ld	d,h
   0122 F8 04               519 	lda	hl,4(sp)
                            520 ;	genPointerGet
                            521 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                            522 ;	AOP_STK for _set_character_sprite_sloc2_1_0
   0124 22                  523 	ld	(hl+),a
   0125 72                  524 	ld	(hl),d
   0126 5F                  525 	ld	e,a
   0127 1A                  526 	ld	a,(de)
   0128 F8 02               527 	lda	hl,2(sp)
   012A 77                  528 	ld	(hl),a
                            529 ;	genIpush
                            530 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   012B C5                  531 	push	bc
                            532 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   012C 23                  533 	inc	hl
   012D 7E                  534 	ld	a,(hl)
   012E F5                  535 	push	af
   012F 33                  536 	inc	sp
                            537 ;	genIpush
                            538 ;	AOP_STK for _set_character_sprite_sloc2_1_0
   0130 2B                  539 	dec	hl
   0131 7E                  540 	ld	a,(hl)
   0132 F5                  541 	push	af
   0133 33                  542 	inc	sp
                            543 ;	genCall
   0134 CD 00 00            544 	call	_set_sprite_tile
   0137 E8 02               545 	lda	sp,2(sp)
   0139 C1                  546 	pop	bc
                            547 ;	game.c 97
                            548 ;	genPlus
                            549 ;	AOP_STK for _set_character_sprite_sloc3_1_0
                            550 ;	genPlusIncr
                            551 ;	Can't optimise plus by inc, falling back to the normal way
   013A 21 01 00            552 	ld	hl,#0x0001
   013D 09                  553 	add	hl,bc
   013E 7D                  554 	ld	a,l
   013F 54                  555 	ld	d,h
   0140 F8 00               556 	lda	hl,0(sp)
                            557 ;	genPointerGet
                            558 ;	AOP_STK for _set_character_sprite_sloc3_1_0
                            559 ;	AOP_STK for _set_character_sprite_sloc2_1_0
   0142 22                  560 	ld	(hl+),a
   0143 72                  561 	ld	(hl),d
   0144 5F                  562 	ld	e,a
   0145 1A                  563 	ld	a,(de)
   0146 23                  564 	inc	hl
   0147 77                  565 	ld	(hl),a
                            566 ;	genPointerGet
   0148 0A                  567 	ld	a,(bc)
   0149 4F                  568 	ld	c,a
                            569 ;	genPointerGet
                            570 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   014A 23                  571 	inc	hl
   014B 23                  572 	inc	hl
   014C 5E                  573 	ld	e,(hl)
   014D 23                  574 	inc	hl
   014E 56                  575 	ld	d,(hl)
   014F 1A                  576 	ld	a,(de)
   0150 47                  577 	ld	b,a
                            578 ;	genIpush
                            579 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            580 ;	AOP_STK for _set_character_sprite_sloc2_1_0
   0151 F8 02               581 	lda	hl,2(sp)
   0153 7E                  582 	ld	a,(hl)
   0154 F5                  583 	push	af
   0155 33                  584 	inc	sp
                            585 ;	genIpush
   0156 79                  586 	ld	a,c
   0157 F5                  587 	push	af
   0158 33                  588 	inc	sp
                            589 ;	genIpush
   0159 78                  590 	ld	a,b
   015A F5                  591 	push	af
   015B 33                  592 	inc	sp
                            593 ;	genCall
   015C CD 00 00            594 	call	_move_sprite
   015F E8 03               595 	lda	sp,3(sp)
                            596 ;	genLabel
   0161                     597 00101$:
                            598 ;	genEndFunction
   0161 E8 06               599 	lda	sp,6(sp)
   0163 C9                  600 	ret
   0164                     601 ___set_character_sprite_end:
                            602 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  0 ___init_end                        00E6 R
  0 ___init_start                      003F R
  0 ___main_end                        002C R
  0 ___main_start                      0000 R
  0 ___map_1_end                       003F R
  0 ___map_1_start                     0035 R
  0 ___move_player_end                 0102 R
  0 ___move_player_start               00E6 R
  0 ___set_character_sprite_end        0164 R
  0 ___set_character_sprite_start      0106 R
    __initrleblock                     **** GX
  0 __str_0                            002C R
  0 __str_1                            0102 R
  1 _bunny                             00C2 GR
  1 _cat                               00DD GR
  1 _dog1                              00CB GR
  1 _dog2                              00D4 GR
  0 _init                              003F GR
  0 _main                              0000 GR
  1 _map                               00C1 GR
  0 _map_1                             0035 GR
  0 _move_player                       00E6 GR
    _move_sprite                       **** GX
  1 _player                            00E6 GR
    _printf                            **** GX
  1 _running                           00C0 GR
  0 _set_character_sprite              0106 GR
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  164   flags 0
   1 _DATA                              size   E8   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   C9   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
