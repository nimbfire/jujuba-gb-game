                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Thu Feb 27 16:39:10 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc175270
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _instanciate_chars
                             14 	.globl _copy_map
                             15 	.globl _helper_copy_map
                             16 	.globl _change_char
                             17 	.globl _map_water
                             18 	.globl _init
                             19 	.globl _main
                             20 	.globl _timers
                             21 	.globl _performantDelay
                             22 	.globl _item3
                             23 	.globl _item2
                             24 	.globl _item1
                             25 	.globl _key
                             26 	.globl _player
                             27 	.globl _horse
                             28 	.globl _cat
                             29 	.globl _dog2
                             30 	.globl _dog1
                             31 	.globl _bunny
                             32 	.globl _map
                             33 	.globl _current_map
                             34 	.globl _input_timer
                             35 	.globl _characters_available
                             36 	.globl _timer
                             37 	.globl _running
                             38 	.globl _spritePalette
                             39 	.globl _sprites_park
                             40 	.globl _MapTest
                             41 	.globl _Map10
                             42 	.globl _Map9
                             43 	.globl _Map8
                             44 	.globl _Map7
                             45 	.globl _Map6
                             46 	.globl _Map5
                             47 	.globl _Map4
                             48 	.globl _Map3
                             49 	.globl _Map2
                             50 	.globl _Map1
                             51 	.globl _Characters
                             52 	.globl _map_loop
                             53 	.globl _map_init
                             54 	.globl _got_key
                             55 	.globl _got_door
                             56 	.globl _is_ded
                             57 	.globl __get_next_map_position
                             58 	.globl _dog1_power_apply
                             59 	.globl _get_player_map_position
                             60 	.globl _player_input
                             61 	.globl _can_move_to_map_pos
                             62 	.globl _can_move
                             63 	.globl _move_character
                             64 	.globl _set_character_sprite
                             65 ;--------------------------------------------------------
                             66 ; special function registers
                             67 ;--------------------------------------------------------
                             68 ;--------------------------------------------------------
                             69 ; special function bits 
                             70 ;--------------------------------------------------------
                             71 ;--------------------------------------------------------
                             72 ; internal ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DATA
   0000                      75 _Characters::
   0000                      76 	.ds 496
   01F0                      77 _Map1::
   01F0                      78 	.ds 360
   0358                      79 _Map2::
   0358                      80 	.ds 360
   04C0                      81 _Map3::
   04C0                      82 	.ds 360
   0628                      83 _Map4::
   0628                      84 	.ds 360
   0790                      85 _Map5::
   0790                      86 	.ds 360
   08F8                      87 _Map6::
   08F8                      88 	.ds 360
   0A60                      89 _Map7::
   0A60                      90 	.ds 360
   0BC8                      91 _Map8::
   0BC8                      92 	.ds 360
   0D30                      93 _Map9::
   0D30                      94 	.ds 360
   0E98                      95 _Map10::
   0E98                      96 	.ds 360
   1000                      97 _MapTest::
   1000                      98 	.ds 360
   1168                      99 _sprites_park::
   1168                     100 	.ds 1936
   18F8                     101 _spritePalette::
   18F8                     102 	.ds 8
   1900                     103 _running::
   1900                     104 	.ds 1
   1901                     105 _timer::
   1901                     106 	.ds 1
   1902                     107 _characters_available::
   1902                     108 	.ds 1
   1903                     109 _input_timer::
   1903                     110 	.ds 1
   1904                     111 _current_map::
   1904                     112 	.ds 1
   1905                     113 _map::
   1905                     114 	.ds 360
   1A6D                     115 _bunny::
   1A6D                     116 	.ds 14
   1A7B                     117 _dog1::
   1A7B                     118 	.ds 14
   1A89                     119 _dog2::
   1A89                     120 	.ds 14
   1A97                     121 _cat::
   1A97                     122 	.ds 14
   1AA5                     123 _horse::
   1AA5                     124 	.ds 14
   1AB3                     125 _player::
   1AB3                     126 	.ds 2
   1AB5                     127 _key::
   1AB5                     128 	.ds 6
   1ABB                     129 _item1::
   1ABB                     130 	.ds 6
   1AC1                     131 _item2::
   1AC1                     132 	.ds 6
   1AC7                     133 _item3::
   1AC7                     134 	.ds 6
                            135 ;--------------------------------------------------------
                            136 ; overlayable items in internal ram 
                            137 ;--------------------------------------------------------
                            138 	.area _OVERLAY
                            139 ;--------------------------------------------------------
                            140 ; indirectly addressable internal ram data
                            141 ;--------------------------------------------------------
                            142 	.area _ISEG
                            143 ;--------------------------------------------------------
                            144 ; bit data
                            145 ;--------------------------------------------------------
                            146 	.area _BSEG
                            147 ;--------------------------------------------------------
                            148 ; external ram data
                            149 ;--------------------------------------------------------
                            150 	.area _XSEG
                            151 ;--------------------------------------------------------
                            152 ; global & static initialisations
                            153 ;--------------------------------------------------------
                            154 	.area _GSINIT
                            155 	.area _GSFINAL
                            156 	.area _GSINIT
                            157 ;	game.c 26
                            158 ;	game.c 1123
                            159 ;	genArrayInit
                            160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            161 	ld	hl,#_Characters
   0003 CD 00 00            162 	call	__initrleblock
   0006 2C                  163 	.db	44
   0007 09 00 00 09 00 09   164 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   165 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   166 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   167 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   168 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         169 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               170 	.db	-5,0x00
   0035 7F                  171 	.db	127
   0036 13 00 1E 0A 9E 00   172 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   173 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   174 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   175 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   176 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   177 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   178 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   179 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   180 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   181 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   182 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   183 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   184 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   185 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   186 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   187 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  188 	.db	127
   00B6 00 00 04 70 04 40   189 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   190 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   191 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   192 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   193 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   194 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   195 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   196 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   197 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   198 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   199 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   200 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   201 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   202 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   203 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   204 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  205 	.db	62
   0136 00 00 39 14 FF 00   206 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   207 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   208 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   209 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   210 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   211 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   212 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   213 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               214 	.db	-127,0x00
   0176 04                  215 	.db	4
   0177 00 00 00 00         216 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  217 	.db	0
                            218 ;	game.c 25
                            219 ;	game.c 1123
                            220 ;	genArrayInit
                            221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            222 	ld	hl,#_Map1
   017F CD 00 00            223 	call	__initrleblock
   0182 04                  224 	.db	4
   0183 01 01 01 01         225 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               226 	.db	-16,0x16
   0189 04                  227 	.db	4
   018A 01 0A 02 01         228 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               229 	.db	-15,0x09
   0190 0C                  230 	.db	12
   0191 16 01 01 02 15 15   231 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         232 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               233 	.db	-6,0x15
   019F 09                  234 	.db	9
   01A0 02 09 16 02 01 02   235 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  236 	.db	0x17
   01A9 FA 15               237 	.db	-6,0x15
   01AB 20                  238 	.db	32
   01AC 17 15 15 15 17 15   239 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   240 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   241 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   242 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               243 	.db	-5,0x02
   01CE 06                  244 	.db	6
   01CF 01 15 01 01 01 17   245 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               246 	.db	-5,0x0B
   01D7 3E                  247 	.db	62
   01D8 01 01 01 15 02 02   248 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   249 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   250 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   251 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   252 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   253 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   254 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   255 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               256 	.db	-6,0x15
   0218 0C                  257 	.db	12
   0219 02 02 15 02 02 02   258 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         259 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               260 	.db	-8,0x15
   0227 3C                  261 	.db	60
   0228 17 17 17 15 15 15   262 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   263 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   264 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   265 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   266 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   267 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   268 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         269 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               270 	.db	-7,0x15
   0266 07                  271 	.db	7
   0267 17 17 15 15 15 01   272 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               273 	.db	-10,0x15
   0270 28                  274 	.db	40
   0271 17 15 15 15 15 17   275 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   276 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   277 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   278 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   279 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               280 	.db	-5,0x0B
   029B 0F                  281 	.db	15
   029C 04 2E 00 02 01 02   282 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   283 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               284 	.db	-5,0x0B
   02AD 03                  285 	.db	3
   02AE 04 00 00            286 	.db	0x04, 0x00, 0x00
   02B1 00                  287 	.db	0
                            288 ;	game.c 25
                            289 ;	game.c 1123
                            290 ;	genArrayInit
                            291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            292 	ld	hl,#_Map2
   02B5 CD 00 00            293 	call	__initrleblock
   02B8 FB 00               294 	.db	-5,0x00
   02BA 01                  295 	.db	1
   02BB 2D                  296 	.db	0x2D
   02BC F9 00               297 	.db	-7,0x00
   02BE 04                  298 	.db	4
   02BF 2D 00 15 15         299 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               300 	.db	-6,0x00
   02C5 7F                  301 	.db	127
   02C6 0B 0B 00 0B 0B 0B   302 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   303 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   304 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   305 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   306 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   307 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   308 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   309 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   310 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   311 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   312 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   313 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   314 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   315 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   316 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   317 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  318 	.db	53
   0346 00 00 2D 00 00 00   319 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   320 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   321 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   322 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   323 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   324 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      325 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               326 	.db	-5,0x0B
   037D 03                  327 	.db	3
   037E 15 00 15            328 	.db	0x15, 0x00, 0x15
   0381 FB 0B               329 	.db	-5,0x0B
   0383 37                  330 	.db	55
   0384 15 15 0B 15 15 00   331 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   332 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   333 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   334 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   335 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   336 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   337 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               338 	.db	-5,0x0B
   03BD 09                  339 	.db	9
   03BE 15 15 0B 15 15 00   340 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  341 	.db	0x15
   03C7 F6 0B               342 	.db	-10,0x0B
   03C9 07                  343 	.db	7
   03CA 15 15 15 0B 15 15   344 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               345 	.db	-16,0x15
   03D3 09                  346 	.db	9
   03D4 00 15 15 00 00 00   347 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  348 	.db	0x15
   03DD F9 00               349 	.db	-7,0x00
   03DF 09                  350 	.db	9
   03E0 15 15 15 00 00 15   351 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  352 	.db	0x15
   03E9 FB 00               353 	.db	-5,0x00
   03EB FB 15               354 	.db	-5,0x15
   03ED FB 00               355 	.db	-5,0x00
   03EF 02                  356 	.db	2
   03F0 15 15               357 	.db	0x15, 0x15
   03F2 00                  358 	.db	0
                            359 ;	game.c 25
                            360 ;	game.c 1123
                            361 ;	genArrayInit
                            362 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            363 	ld	hl,#_Map3
   03F6 CD 00 00            364 	call	__initrleblock
   03F9 F2 01               365 	.db	-14,0x01
   03FB 03                  366 	.db	3
   03FC 2D 0B 0B            367 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               368 	.db	-5,0x01
   0401 02                  369 	.db	2
   0402 17 17               370 	.db	0x17, 0x17
   0404 FA 15               371 	.db	-6,0x15
   0406 0E                  372 	.db	14
   0407 17 17 15 15 0B 15   373 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   374 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               375 	.db	-5,0x01
   0417 08                  376 	.db	8
   0418 29 01 01 01 2D 01   377 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               378 	.db	-5,0x01
   0422 7F                  379 	.db	127
   0423 15 15 2D 15 15 15   380 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   381 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   382 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   383 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   384 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   385 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   386 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   387 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   388 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   389 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   390 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   391 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   392 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   393 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   394 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   395 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  396 	.db	61
   04A3 01 15 17 15 15 01   397 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   398 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   399 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   400 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   401 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   402 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   403 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      404 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               405 	.db	-5,0x01
   04E2 0B                  406 	.db	11
   04E3 15 15 01 15 2D 01   407 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            408 	.db	0x15, 0x15, 0x0B
   04EE FB 15               409 	.db	-5,0x15
   04F0 59                  410 	.db	89
   04F1 17 15 15 17 15 15   411 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   412 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   413 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   414 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   415 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   416 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   417 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   418 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   419 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   420 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   421 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  422 	.db	0x17
   054A 00                  423 	.db	0
                            424 ;	game.c 25
                            425 ;	game.c 1123
                            426 ;	genArrayInit
                            427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            428 	ld	hl,#_Map4
   054E CD 00 00            429 	call	__initrleblock
   0551 06                  430 	.db	6
   0552 00 00 0A 0A 15 15   431 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               432 	.db	-5,0x0B
   055A 01                  433 	.db	1
   055B 15                  434 	.db	0x15
   055C FA 0B               435 	.db	-6,0x0B
   055E 25                  436 	.db	37
   055F 15 15 00 0A 2D 06   437 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   438 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   439 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   440 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      441 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               442 	.db	-5,0x0B
   0586 08                  443 	.db	8
   0587 0A 07 0B 0B 15 0B   444 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               445 	.db	-5,0x0B
   0591 01                  446 	.db	1
   0592 15                  447 	.db	0x15
   0593 F6 0B               448 	.db	-10,0x0B
   0595 42                  449 	.db	66
   0596 00 2D 0B 01 00 0B   450 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   451 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   452 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   453 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   454 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   455 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   456 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   457 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               458 	.db	0x15, 0x00
   05D8 F9 0B               459 	.db	-7,0x0B
   05DA 43                  460 	.db	67
   05DB 15 0B 0B 00 0B 15   461 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   462 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   463 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   464 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   465 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   466 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   467 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   468 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            469 	.db	0x15, 0x0B, 0x15
   061E F9 0B               470 	.db	-7,0x0B
   0620 16                  471 	.db	22
   0621 15 15 0B 0B 0B 0B   472 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   473 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   474 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               475 	.db	-5,0x0B
   0639 66                  476 	.db	102
   063A 15 0A 07 15 00 02   477 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   478 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   479 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   480 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   481 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   482 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   483 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   484 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   485 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   486 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   487 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   488 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   489 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  490 	.db	0
                            491 ;	game.c 25
                            492 ;	game.c 1123
                            493 ;	genArrayInit
                            494 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            495 	ld	hl,#_Map5
   06A4 CD 00 00            496 	call	__initrleblock
   06A7 F2 01               497 	.db	-14,0x01
   06A9 03                  498 	.db	3
   06AA 2D 0B 0B            499 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               500 	.db	-5,0x01
   06AF 02                  501 	.db	2
   06B0 17 17               502 	.db	0x17, 0x17
   06B2 FA 15               503 	.db	-6,0x15
   06B4 07                  504 	.db	7
   06B5 17 17 15 15 0B 15   505 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               506 	.db	-5,0x01
   06BE 02                  507 	.db	2
   06BF 17 15               508 	.db	0x17, 0x15
   06C1 FB 01               509 	.db	-5,0x01
   06C3 7F                  510 	.db	127
   06C4 29 01 01 01 2D 01   511 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   512 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   513 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   514 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   515 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   516 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   517 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   518 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   519 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   520 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   521 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   522 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   523 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   524 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   525 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   526 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  527 	.db	74
   0744 01 2D 01 01 01 15   528 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   529 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   530 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   531 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   532 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   533 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   534 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   535 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   536 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               537 	.db	0x01, 0x29
   078E FB 01               538 	.db	-5,0x01
   0790 0B                  539 	.db	11
   0791 15 15 01 15 2D 01   540 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            541 	.db	0x15, 0x15, 0x0B
   079C FB 15               542 	.db	-5,0x15
   079E 59                  543 	.db	89
   079F 17 15 15 17 15 15   544 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   545 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   546 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   547 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   548 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   549 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   550 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   551 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   552 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   553 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   554 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  555 	.db	0x17
   07F8 00                  556 	.db	0
                            557 ;	game.c 25
                            558 ;	game.c 1123
                            559 ;	genArrayInit
                            560 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            561 	ld	hl,#_Map6
   07FC CD 00 00            562 	call	__initrleblock
   07FF BF 00               563 	.db	-65,0x00
   0801 02                  564 	.db	2
   0802 0C 0C               565 	.db	0x0C, 0x0C
   0804 EE 00               566 	.db	-18,0x00
   0806 02                  567 	.db	2
   0807 0C 0C               568 	.db	0x0C, 0x0C
   0809 81 00               569 	.db	-127,0x00
   080B 81 00               570 	.db	-127,0x00
   080D ED 00               571 	.db	-19,0x00
   080F 00                  572 	.db	0
                            573 ;	game.c 25
                            574 ;	game.c 1123
                            575 ;	genArrayInit
                            576 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            577 	ld	hl,#_Map7
   0813 CD 00 00            578 	call	__initrleblock
   0816 BF 00               579 	.db	-65,0x00
   0818 02                  580 	.db	2
   0819 0C 0C               581 	.db	0x0C, 0x0C
   081B EE 00               582 	.db	-18,0x00
   081D 02                  583 	.db	2
   081E 0C 0C               584 	.db	0x0C, 0x0C
   0820 81 00               585 	.db	-127,0x00
   0822 81 00               586 	.db	-127,0x00
   0824 ED 00               587 	.db	-19,0x00
   0826 00                  588 	.db	0
                            589 ;	game.c 25
                            590 ;	game.c 1123
                            591 ;	genArrayInit
                            592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            593 	ld	hl,#_Map8
   082A CD 00 00            594 	call	__initrleblock
   082D BF 00               595 	.db	-65,0x00
   082F 02                  596 	.db	2
   0830 0C 0C               597 	.db	0x0C, 0x0C
   0832 EE 00               598 	.db	-18,0x00
   0834 02                  599 	.db	2
   0835 0C 0C               600 	.db	0x0C, 0x0C
   0837 81 00               601 	.db	-127,0x00
   0839 81 00               602 	.db	-127,0x00
   083B ED 00               603 	.db	-19,0x00
   083D 00                  604 	.db	0
                            605 ;	game.c 25
                            606 ;	game.c 1123
                            607 ;	genArrayInit
                            608 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            609 	ld	hl,#_Map9
   0841 CD 00 00            610 	call	__initrleblock
   0844 BF 00               611 	.db	-65,0x00
   0846 02                  612 	.db	2
   0847 0C 0C               613 	.db	0x0C, 0x0C
   0849 EE 00               614 	.db	-18,0x00
   084B 02                  615 	.db	2
   084C 0C 0C               616 	.db	0x0C, 0x0C
   084E 81 00               617 	.db	-127,0x00
   0850 81 00               618 	.db	-127,0x00
   0852 ED 00               619 	.db	-19,0x00
   0854 00                  620 	.db	0
                            621 ;	game.c 25
                            622 ;	game.c 1123
                            623 ;	genArrayInit
                            624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            625 	ld	hl,#_Map10
   0858 CD 00 00            626 	call	__initrleblock
   085B BF 00               627 	.db	-65,0x00
   085D 02                  628 	.db	2
   085E 0C 0C               629 	.db	0x0C, 0x0C
   0860 EE 00               630 	.db	-18,0x00
   0862 02                  631 	.db	2
   0863 0C 0C               632 	.db	0x0C, 0x0C
   0865 81 00               633 	.db	-127,0x00
   0867 81 00               634 	.db	-127,0x00
   0869 ED 00               635 	.db	-19,0x00
   086B 00                  636 	.db	0
                            637 ;	game.c 25
                            638 ;	game.c 1123
                            639 ;	genArrayInit
                            640 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            641 	ld	hl,#_MapTest
   086F CD 00 00            642 	call	__initrleblock
   0872 E8 00               643 	.db	-24,0x00
   0874 06                  644 	.db	6
   0875 47 4A 59 46 00 5F   645 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087B D9 00               646 	.db	-39,0x00
   087D 0A                  647 	.db	10
   087E 4B 46 58 4A 00 5F   648 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62
        00 62
   0886 00 65               649 	.db	0x00, 0x65
   0888 F6 00               650 	.db	-10,0x00
   088A 0A                  651 	.db	10
   088B 4B 46 58 4A 00 60   652 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x60, 0x00, 0x62
        00 62
   0893 00 66               653 	.db	0x00, 0x66
   0895 F6 00               654 	.db	-10,0x00
   0897 0A                  655 	.db	10
   0898 4B 46 58 4A 00 5C   656 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62
        00 62
   08A0 00 67               657 	.db	0x00, 0x67
   08A2 ED 00               658 	.db	-19,0x00
   08A4 01                  659 	.db	1
   08A5 68                  660 	.db	0x68
   08A6 EB 00               661 	.db	-21,0x00
   08A8 0A                  662 	.db	10
   08A9 46 62 55 54 49 4A   663 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08B1 49 54               664 	.db	0x49, 0x54
   08B3 F4 00               665 	.db	-12,0x00
   08B5 0A                  666 	.db	10
   08B6 55 4A 57 58 54 53   667 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08BE 4A 52               668 	.db	0x4A, 0x52
   08C0 FB 00               669 	.db	-5,0x00
   08C2 01                  670 	.db	1
   08C3 2E                  671 	.db	0x2E
   08C4 EF 00               672 	.db	-17,0x00
   08C6 0C                  673 	.db	12
   08C7 2D 00 00 00 00 47   674 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08CF 57 54 48 46         675 	.db	0x57, 0x54, 0x48, 0x46
   08D3 F8 00               676 	.db	-8,0x00
   08D5 18                  677 	.db	24
   08D6 2D 00 0B 0B 00 00   678 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08DE 4A 57 58 54 53 46   679 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   08E6 52 00 00 00 2D 00   680 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   08EE F0 00               681 	.db	-16,0x00
   08F0 0B                  682 	.db	11
   08F1 2D 00 0D 0D 00 32   683 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   08F9 5A 51 46            684 	.db	0x5A, 0x51, 0x46
   08FC F7 00               685 	.db	-9,0x00
   08FE 0E                  686 	.db	14
   08FF 2D 00 0E 0E 00 33   687 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   0907 52 55 5A 57 57 46   688 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   090D FA 00               689 	.db	-6,0x00
   090F 0D                  690 	.db	13
   0910 2D 00 29 29 00 00   691 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   0918 51 54 48 54 58      692 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   091D E0 00               693 	.db	-32,0x00
   091F 00                  694 	.db	0
                            695 ;	game.c 26
                            696 ;	game.c 1123
                            697 ;	genArrayInit
                            698 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0920 21 68 11            699 	ld	hl,#_sprites_park
   0923 CD 00 00            700 	call	__initrleblock
   0926 EC 00               701 	.db	-20,0x00
   0928 09                  702 	.db	9
   0929 10 00 00 00 02 00   703 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   0931 20                  704 	.db	0x20
   0932 F7 00               705 	.db	-9,0x00
   0934 01                  706 	.db	1
   0935 10                  707 	.db	0x10
   0936 F7 00               708 	.db	-9,0x00
   0938 21                  709 	.db	33
   0939 94 08 00 00 42 00   710 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   0941 00 80 25 00 50 00   711 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   0949 00 00 90 00 00 00   712 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   0951 80 00 00 10 80 00   713 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   0959 5A                  714 	.db	0x5A
   095A FB 00               715 	.db	-5,0x00
   095C 05                  716 	.db	5
   095D 02 20 00 00 08      717 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0962 F9 00               718 	.db	-7,0x00
   0964 0B                  719 	.db	11
   0965 01 00 00 08 01 00   720 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   096D 00 00 09            721 	.db	0x00, 0x00, 0x09
   0970 F9 00               722 	.db	-7,0x00
   0972 4C                  723 	.db	76
   0973 10 08 00 00 40 04   724 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   097B 00 00 5A 00 7F 00   725 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   0983 80 00 80 00 80 00   726 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   098B 80 00 80 00 7E 00   727 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   0993 81 00 81 00 81 00   728 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   099B 81 00 7E 00 00 00   729 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09A3 50 00 20 00 00 00   730 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09AB 0A 00 04 00 FF 00   731 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09B3 AA 00 FF 00 FF 00   732 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09BB 55 00 FF 00         733 	.db	0x55, 0x00, 0xFF, 0x00
   09BF EF FF               734 	.db	-17,0xFF
   09C1 4C                  735 	.db	76
   09C2 00 DD 00 BB 00 F7   736 	.db	0x00, 0xDD, 0x00, 0xBB, 0x00, 0xF7, 0x00, 0xFF
        00 FF
   09CA 00 EE 00 DD 00 FF   737 	.db	0x00, 0xEE, 0x00, 0xDD, 0x00, 0xFF, 0x00, 0xAD
        00 AD
   09D2 00 5C 00 DB 00 29   738 	.db	0x00, 0x5C, 0x00, 0xDB, 0x00, 0x29, 0x00, 0xF6
        00 F6
   09DA 00 49 00 BA 00 D6   739 	.db	0x00, 0x49, 0x00, 0xBA, 0x00, 0xD6, 0x00, 0xFF
        00 FF
   09E2 7E F3 8D C1 BF C1   740 	.db	0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81
        BF 81
   09EA FF 81 FF 81 FF FF   741 	.db	0xFF, 0x81, 0xFF, 0x81, 0xFF, 0xFF, 0x7E, 0xFF
        7E FF
   09F2 7E F3 8D C1 BF C1   742 	.db	0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81
        BF 81
   09FA FF 81 FF 81 FF FF   743 	.db	0xFF, 0x81, 0xFF, 0x81, 0xFF, 0xFF, 0x7E, 0x00
        7E 00
   0A02 00 42 00 24 00 18   744 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0A0A 00 24 00 42         745 	.db	0x00, 0x24, 0x00, 0x42
   0A0E FB 00               746 	.db	-5,0x00
   0A10 0B                  747 	.db	11
   0A11 42 00 24 00 18 00   748 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A19 24 00 42            749 	.db	0x24, 0x00, 0x42
   0A1C EB 00               750 	.db	-21,0x00
   0A1E 4B                  751 	.db	75
   0A1F 42 00 24 00 18 00   752 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A27 24 00 42 00 00 00   753 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A2F 6E 10 FF 00 BF 40   754 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A37 76 08 00 3C 00 3C   755 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A3F 80 7F 80 7F 80 7F   756 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A47 80 7F 80 7F 00 FF   757 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A4F 7E 00 DF 20 FF 00   758 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A57 7E 00 18 24 00 3C   759 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A5F 42 00 24 00 18 00   760 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A67 24 00 42            761 	.db	0x24, 0x00, 0x42
   0A6A FB 00               762 	.db	-5,0x00
   0A6C 0B                  763 	.db	11
   0A6D 42 00 24 00 18 00   764 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A75 24 00 42            765 	.db	0x24, 0x00, 0x42
   0A78 FB 00               766 	.db	-5,0x00
   0A7A 0B                  767 	.db	11
   0A7B 42 00 24 00 18 00   768 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A83 24 00 42            769 	.db	0x24, 0x00, 0x42
   0A86 FB 00               770 	.db	-5,0x00
   0A88 0B                  771 	.db	11
   0A89 42 00 24 00 18 00   772 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A91 24 00 42            773 	.db	0x24, 0x00, 0x42
   0A94 FB 00               774 	.db	-5,0x00
   0A96 0B                  775 	.db	11
   0A97 42 00 24 00 18 00   776 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A9F 24 00 42            777 	.db	0x24, 0x00, 0x42
   0AA2 FB 00               778 	.db	-5,0x00
   0AA4 0B                  779 	.db	11
   0AA5 42 00 24 00 18 00   780 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AAD 24 00 42            781 	.db	0x24, 0x00, 0x42
   0AB0 FB 00               782 	.db	-5,0x00
   0AB2 0B                  783 	.db	11
   0AB3 42 00 24 00 18 00   784 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0ABB 24 00 42            785 	.db	0x24, 0x00, 0x42
   0ABE FB 00               786 	.db	-5,0x00
   0AC0 0B                  787 	.db	11
   0AC1 42 00 24 00 18 00   788 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AC9 24 00 42            789 	.db	0x24, 0x00, 0x42
   0ACC FB 00               790 	.db	-5,0x00
   0ACE 0B                  791 	.db	11
   0ACF 42 00 24 00 18 00   792 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD7 24 00 42            793 	.db	0x24, 0x00, 0x42
   0ADA EB 00               794 	.db	-21,0x00
   0ADC 0B                  795 	.db	11
   0ADD 42 00 24 00 18 00   796 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AE5 24 00 42            797 	.db	0x24, 0x00, 0x42
   0AE8 FB 00               798 	.db	-5,0x00
   0AEA 0B                  799 	.db	11
   0AEB 42 00 24 00 18 00   800 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AF3 24 00 42            801 	.db	0x24, 0x00, 0x42
   0AF6 FB 00               802 	.db	-5,0x00
   0AF8 0B                  803 	.db	11
   0AF9 42 00 24 00 18 00   804 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B01 24 00 42            805 	.db	0x24, 0x00, 0x42
   0B04 FB 00               806 	.db	-5,0x00
   0B06 0B                  807 	.db	11
   0B07 42 00 24 00 18 00   808 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B0F 24 00 42            809 	.db	0x24, 0x00, 0x42
   0B12 FB 00               810 	.db	-5,0x00
   0B14 0B                  811 	.db	11
   0B15 42 00 24 00 18 00   812 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B1D 24 00 42            813 	.db	0x24, 0x00, 0x42
   0B20 FB 00               814 	.db	-5,0x00
   0B22 0B                  815 	.db	11
   0B23 42 00 24 00 18 00   816 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B2B 24 00 42            817 	.db	0x24, 0x00, 0x42
   0B2E FB 00               818 	.db	-5,0x00
   0B30 7F                  819 	.db	127
   0B31 42 00 24 00 18 00   820 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B39 24 00 42 00 00 00   821 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B41 C7 C7 BB BB BB BB   822 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B49 D7 D7 DB DB 42 C3   823 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B51 FF 00 C7 00 C7 00   824 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B59 EF 00 E7 00 FF 00   825 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B61 76 00 FF 00 BF 00   826 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B69 7E 00 00 3C 00 3C   827 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B71 42 7E 81 FF 81 FF   828 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B79 81 FF 81 FF 81 FF   829 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B81 F3 8D C1 BF C1 BF   830 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0B89 81 FF 81 FF 7E 7E   831 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0B91 04 02 01 09 09 F9   832 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0B99 06 06 00 00 00 00   833 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BA1 AA 00 55 00 AA 00   834 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BA9 AA 00 55 00 AA 00   835 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BB0 0F                  836 	.db	15
   0BB1 AA AA 55 55 AA AA   837 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BB9 AA AA 55 55 AA AA   838 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55
        55
   0BC0 F0 00               839 	.db	-16,0x00
   0BC2 4D                  840 	.db	77
   0BC3 09 00 00 09 00 09   841 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   0BCB CA 05 FF 00 3F 00   842 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0BD3 00 13 00 1E 0A 9E   843 	.db	0x00, 0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F
        00 9F
   0BDB 02 FF 00 FF 00 7E   844 	.db	0x02, 0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A
        00 4A
   0BE3 94 00 9C 00 9E 0A   845 	.db	0x94, 0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01
        FF 01
   0BEB FE 00 7C 00 4A 00   846 	.db	0xFE, 0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00
        49 00
   0BF3 89 89 4F 4F 4F 4A   847 	.db	0x89, 0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F
        8F 8F
   0BFB 9F 9F 7F 7F 7F 7F   848 	.db	0x9F, 0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45
        45 45
   0C03 00 00 42 00 24 00   849 	.db	0x00, 0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00
        18 00
   0C0B 18 00 24 00 42      850 	.db	0x18, 0x00, 0x24, 0x00, 0x42
   0C10 FB 00               851 	.db	-5,0x00
   0C12 0B                  852 	.db	11
   0C13 42 00 24 00 18 00   853 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C1B 24 00 42            854 	.db	0x24, 0x00, 0x42
   0C1E FB 00               855 	.db	-5,0x00
   0C20 0B                  856 	.db	11
   0C21 42 00 24 00 18 00   857 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C29 24 00 42            858 	.db	0x24, 0x00, 0x42
   0C2C FB 00               859 	.db	-5,0x00
   0C2E 0B                  860 	.db	11
   0C2F 42 00 24 00 18 00   861 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C37 24 00 42            862 	.db	0x24, 0x00, 0x42
   0C3A FB 00               863 	.db	-5,0x00
   0C3C 0B                  864 	.db	11
   0C3D 42 00 24 00 18 00   865 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C45 24 00 42            866 	.db	0x24, 0x00, 0x42
   0C48 FB 00               867 	.db	-5,0x00
   0C4A 0B                  868 	.db	11
   0C4B 42 00 24 00 18 00   869 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C53 24 00 42            870 	.db	0x24, 0x00, 0x42
   0C56 FB 00               871 	.db	-5,0x00
   0C58 0B                  872 	.db	11
   0C59 42 00 24 00 18 00   873 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C61 24 00 42            874 	.db	0x24, 0x00, 0x42
   0C64 FB 00               875 	.db	-5,0x00
   0C66 0B                  876 	.db	11
   0C67 42 00 24 00 18 00   877 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C6F 24 00 42            878 	.db	0x24, 0x00, 0x42
   0C72 FB 00               879 	.db	-5,0x00
   0C74 0B                  880 	.db	11
   0C75 42 00 24 00 18 00   881 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C7D 24 00 42            882 	.db	0x24, 0x00, 0x42
   0C80 FB 00               883 	.db	-5,0x00
   0C82 0B                  884 	.db	11
   0C83 42 00 24 00 18 00   885 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C8B 24 00 42            886 	.db	0x24, 0x00, 0x42
   0C8E EB 00               887 	.db	-21,0x00
   0C90 0B                  888 	.db	11
   0C91 42 00 24 00 18 00   889 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C99 24 00 42            890 	.db	0x24, 0x00, 0x42
   0C9C FB 00               891 	.db	-5,0x00
   0C9E 0B                  892 	.db	11
   0C9F 42 00 24 00 18 00   893 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA7 24 00 42            894 	.db	0x24, 0x00, 0x42
   0CAA FB 00               895 	.db	-5,0x00
   0CAC 0B                  896 	.db	11
   0CAD 42 00 24 00 18 00   897 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CB5 24 00 42            898 	.db	0x24, 0x00, 0x42
   0CB8 FB 00               899 	.db	-5,0x00
   0CBA 0B                  900 	.db	11
   0CBB 42 00 24 00 18 00   901 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CC3 24 00 42            902 	.db	0x24, 0x00, 0x42
   0CC6 FB 00               903 	.db	-5,0x00
   0CC8 0B                  904 	.db	11
   0CC9 42 00 24 00 18 00   905 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CD1 24 00 42            906 	.db	0x24, 0x00, 0x42
   0CD4 FA 00               907 	.db	-6,0x00
   0CD6 7F                  908 	.db	127
   0CD7 38 00 44 00 44 00   909 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CDF 44 00 44 00 44 00   910 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0CE7 78 00 44 00 44 00   911 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0CEF 44 00 44 00 78 00   912 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0CF7 1C 00 20 00 40 00   913 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0CFF 40 00 20 00 1C 00   914 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D07 78 00 44 00 44 00   915 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D0F 44 00 44 00 78 00   916 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D17 7C 00 40 00 40 00   917 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D1F 40 00 40 00 7C 00   918 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D27 7C 00 40 00 40 00   919 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D2F 40 00 40 00 40 00   920 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D37 18 00 20 00 40 00   921 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D3F 42 00 24 00 18 00   922 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D47 44 00 44 00 44 00   923 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D4F 44 00 44 00 44 00   924 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D56 7F                  925 	.db	127
   0D57 00 10 00 00 00 10   926 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D5F 00 10 00 10 00 10   927 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D67 00 3E 00 08 00 08   928 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D6F 00 08 00 48 00 30   929 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D77 00 44 00 48 00 50   930 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D7F 00 50 00 48 00 44   931 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0D87 00 40 00 40 00 40   932 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0D8F 00 40 00 40 00 78   933 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0D97 00 44 00 6C 00 54   934 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0D9F 00 44 00 44 00 44   935 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DA7 00 44 00 64 00 64   936 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DAF 00 54 00 4C 00 4C   937 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DB7 00 38 00 44 00 44   938 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DBF 00 44 00 44 00 38   939 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DC7 00 78 00 44 00 44   940 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DCF 00 40 00 40 00 40   941 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DD6 7F                  942 	.db	127
   0DD7 00 00 38 00 44 00   943 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DDF 44 00 54 00 38 00   944 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0DE7 00 00 78 00 44 00   945 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DEF 78 00 50 00 48 00   946 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0DF7 00 00 38 00 40 00   947 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0DFF 38 00 04 00 04 00   948 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E07 00 00 7C 00 10 00   949 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E0F 10 00 10 00 10 00   950 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E17 00 00 44 00 44 00   951 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E1F 44 00 44 00 44 00   952 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E27 00 00 41 00 41 00   953 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E2F 49 00 2A 00 2A 00   954 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E37 00 00 44 00 44 00   955 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E3F 10 00 28 00 44 00   956 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E47 00 00 44 00 28 00   957 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E4F 10 00 10 00 10 00   958 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E56 7F                  959 	.db	127
   0E57 00 00 00 7C 00 04   960 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E5F 00 10 00 20 00 40   961 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E67 00 08 00 18 00 28   962 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E6F 00 08 00 08 00 08   963 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E77 00 00 00 38 00 44   964 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E7F 00 08 00 10 00 20   965 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0E87 00 00 00 70 00 08   966 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0E8F 00 30 00 08 00 08   967 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0E97 00 00 00 10 00 08   968 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0E9F 00 7E 00 04 00 08   969 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EA7 00 00 00 44 00 44   970 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0EAF 00 28 00 10 00 10   971 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0EB7 3C 3C 42 7E 81 FF   972 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EBF A1 FF 81 FF 81 FF   973 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EC7 3C 3C 42 7E 81 FF   974 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0ECF A1 FF 81 FF 81 FF   975 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0ED6 7F                  976 	.db	127
   0ED7 FF 3C 3C 42 7E 81   977 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EDF FF A1 FF 81 FF 81   978 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0EE7 FF 3C 3C 42 7E 81   979 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EEF FF A1 FF 81 FF 81   980 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0EF7 FF 3C 3C 42 7E 81   981 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EFF FF A1 FF 81 FF 81   982 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F07 FF 3C 3C 42 7E 81   983 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F0F FF A1 FF 81 FF 81   984 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F17 FF 3C 3C 42 7E 81   985 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F1F FF A1 FF 81 FF 81   986 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F27 FF 3C 3C 42 7E 81   987 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F2F FF A1 FF 81 FF 81   988 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F37 FF 3C 3C 42 7E 81   989 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F3F FF A1 FF 81 FF 81   990 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F47 FF 3C 3C 42 7E 81   991 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F4F FF A1 FF 81 FF 81   992 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F56 7F                  993 	.db	127
   0F57 81 FF 3C 3C 42 7E   994 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F5F 81 FF A1 FF 81 FF   995 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F67 81 FF 3C 3C 42 7E   996 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F6F 81 FF A1 FF 81 FF   997 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F77 81 FF 3C 3C 42 7E   998 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F7F 81 FF A1 FF 81 FF   999 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F87 81 FF 3C 3C 42 7E  1000 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F8F 81 FF A1 FF 81 FF  1001 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F97 81 FF 3C 3C 42 7E  1002 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F9F 81 FF A1 FF 81 FF  1003 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FA7 81 FF 3C 3C 42 7E  1004 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FAF 81 FF A1 FF 81 FF  1005 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FB7 81 FF 3C 3C 42 7E  1006 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FBF 81 FF A1 FF 81 FF  1007 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FC7 81 FF 3C 3C 42 7E  1008 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FCF 81 FF A1 FF 81 FF  1009 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FD6 33                 1010 	.db	51
   0FD7 FF 81 FF 3C 3C 42  1011 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FDF FF 81 FF A1 FF 81  1012 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0FE7 FF 81 FF 3C 3C 42  1013 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FEF FF 81 FF A1 FF 81  1014 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0FF7 FF 81 FF 3C 3C 42  1015 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FFF FF 81 FF A1 FF 81  1016 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1007 FF 81 FF           1017 	.db	0xFF, 0x81, 0xFF
   100A 00                 1018 	.db	0
                           1019 ;	game.c 44
                           1020 ;	game.c 1123
                           1021 ;	genArrayInit
                           1022 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   100B 21 F8 18           1023 	ld	hl,#_spritePalette
   100E CD 00 00           1024 	call	__initrleblock
   1011 08                 1025 	.db	8
   1012 DC 6B D2 3A 87 29  1026 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   101A 00                 1027 	.db	0
                           1028 ;--------------------------------------------------------
                           1029 ; Home
                           1030 ;--------------------------------------------------------
                           1031 	.area _HOME
                           1032 	.area _CODE
                           1033 ;--------------------------------------------------------
                           1034 ; code
                           1035 ;--------------------------------------------------------
                           1036 	.area _CODE
                           1037 ;	game.c 70
                           1038 ;	genLabel
                           1039 ;	genFunction
                           1040 ;	---------------------------------
                           1041 ; Function performantDelay
                           1042 ; ---------------------------------
   0000                    1043 ___performantDelay_start:
   0000                    1044 _performantDelay:
                           1045 	
                           1046 ;	game.c 72
                           1047 ;	genAssign
   0000 0E 00              1048 	ld	c,#0x00
                           1049 ;	genLabel
   0002                    1050 00101$:
                           1051 ;	genCmpEq
                           1052 ;	AOP_STK for 
                           1053 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1054 	lda	hl,2(sp)
   0004 7E                 1055 	ld	a,(hl)
   0005 B9                 1056 	cp	c
   0006 20 03              1057 	jr	nz,00109$
   0008 C3 15 00           1058 	jp	00105$
   000B                    1059 00109$:
                           1060 ;	game.c 73
                           1061 ;	genCall
                           1062 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1063 	push	bc
   000C CD 00 00           1064 	call	_wait_vbl_done
   000F E1                 1065 	pop	hl
   0010 4D                 1066 	ld	c,l
                           1067 ;	game.c 72
                           1068 ;	genPlus
                           1069 ;	genPlusIncr
                           1070 ; Removed redundent load
   0011 0C                 1071 	inc	c
                           1072 ;	genGoto
   0012 C3 02 00           1073 	jp	00101$
                           1074 ;	genLabel
   0015                    1075 00105$:
                           1076 ;	genEndFunction
                           1077 	
   0015 C9                 1078 	ret
   0016                    1079 ___performantDelay_end:
                           1080 ;	game.c 107
                           1081 ;	genLabel
                           1082 ;	genFunction
                           1083 ;	---------------------------------
                           1084 ; Function timers
                           1085 ; ---------------------------------
   0016                    1086 ___timers_start:
   0016                    1087 _timers:
                           1088 	
                           1089 ;	game.c 109
                           1090 ;	genCmpEq
                           1091 ;	AOP_HL for _input_timer
                           1092 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1093 	ld	hl,#_input_timer
   0019 7E                 1094 	ld	a,(hl)
   001A B7                 1095 	or	a,a
   001B CA 22 00           1096 	jp	z,00102$
   001E                    1097 00106$:
                           1098 ;	game.c 110
                           1099 ;	genMinus
                           1100 ;	AOP_HL for _input_timer
   001E 21 03 19           1101 	ld	hl,#_input_timer
   0021 35                 1102 	dec	(hl)
                           1103 ;	genLabel
   0022                    1104 00102$:
                           1105 ;	game.c 112
                           1106 ;	genPlus
                           1107 ;	AOP_HL for _timer
                           1108 ;	genPlusIncr
   0022 21 01 19           1109 	ld	hl,#_timer
   0025 34                 1110 	inc	(hl)
                           1111 ;	genLabel
   0026                    1112 00103$:
                           1113 ;	genEndFunction
                           1114 	
   0026 C9                 1115 	ret
   0027                    1116 ___timers_end:
                           1117 ;	game.c 116
                           1118 ;	genLabel
                           1119 ;	genFunction
                           1120 ;	---------------------------------
                           1121 ; Function main
                           1122 ; ---------------------------------
   0027                    1123 ___main_start:
   0027                    1124 _main:
                           1125 	
                           1126 ;	game.c 118
                           1127 ;	genCall
                           1128 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1129 	call	_init
                           1130 ;	game.c 119
                           1131 ;	genCall
                           1132 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1133 	call	_map_init
                           1134 ;	game.c 121
                           1135 ;	genLabel
   002D                    1136 00101$:
                           1137 ;	genIfx
                           1138 ;	AOP_HL for _running
   002D AF                 1139 	xor	a,a
   002E 21 00 19           1140 	ld	hl,#_running
   0031 B6                 1141 	or	a,(hl)
   0032 CA 47 00           1142 	jp	z,00103$
                           1143 ;	game.c 123
                           1144 ;	genCall
                           1145 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1146 	call	_timers
                           1147 ;	game.c 124
                           1148 ;	genCall
                           1149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1150 	call	_map_loop
                           1151 ;	game.c 125
                           1152 ;	genIpush
                           1153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1154 	ld	a,#0x02
   003D F5                 1155 	push	af
   003E 33                 1156 	inc	sp
                           1157 ;	genCall
   003F CD 00 00           1158 	call	_performantDelay
   0042 E8 01              1159 	lda	sp,1(sp)
                           1160 ;	genGoto
   0044 C3 2D 00           1161 	jp	00101$
                           1162 ;	genLabel
   0047                    1163 00103$:
                           1164 ;	game.c 129
                           1165 ;	genIpush
                           1166 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1167 	ld	hl,#__str_0
   004A E5                 1168 	push	hl
                           1169 ;	genCall
   004B CD 00 00           1170 	call	_printf
   004E E8 02              1171 	lda	sp,2(sp)
                           1172 ;	game.c 130
                           1173 ;	genLabel
   0050                    1174 00105$:
                           1175 ;	genGoto
   0050 C3 50 00           1176 	jp	00105$
                           1177 ;	genLabel
   0053                    1178 00107$:
                           1179 ;	genEndFunction
                           1180 	
   0053 C9                 1181 	ret
   0054                    1182 ___main_end:
   0054                    1183 __str_0:
   0054 54 68 65 20 65 6E  1184 	.ascii "The end"
        64
   005B 0A                 1185 	.db 0x0A
   005C 00                 1186 	.db 0x00
                           1187 ;	game.c 135
                           1188 ;	genLabel
                           1189 ;	genFunction
                           1190 ;	---------------------------------
                           1191 ; Function init
                           1192 ; ---------------------------------
   005D                    1193 ___init_start:
   005D                    1194 _init:
   005D E8 FD              1195 	lda	sp,-3(sp)
                           1196 ;	game.c 136
                           1197 ;	genAssign
                           1198 ;	AOP_HL for _current_map
   005F 21 04 19           1199 	ld	hl,#_current_map
   0062 36 C8              1200 	ld	(hl),#0xC8
                           1201 ;	game.c 137
                           1202 ;	genAssign
                           1203 ;	AOP_HL for _characters_available
   0064 21 02 19           1204 	ld	hl,#_characters_available
   0067 36 02              1205 	ld	(hl),#0x02
                           1206 ;	game.c 139
                           1207 ;	genCall
                           1208 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1209 	call	_copy_map
                           1210 ;	game.c 140
                           1211 ;	genIpush
                           1212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1213 	ld	hl,#_sprites_park
   006F E5                 1214 	push	hl
                           1215 ;	genIpush
   0070 21 00 78           1216 	ld	hl,#0x7800
   0073 E5                 1217 	push	hl
                           1218 ;	genCall
   0074 CD 00 00           1219 	call	_set_bkg_data
   0077 E8 04              1220 	lda	sp,4(sp)
                           1221 ;	game.c 141
                           1222 ;	genIpush
                           1223 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1224 	ld	hl,#_map
   007C E5                 1225 	push	hl
                           1226 ;	genIpush
   007D 21 14 12           1227 	ld	hl,#0x1214
   0080 E5                 1228 	push	hl
                           1229 ;	genIpush
   0081 21 00 00           1230 	ld	hl,#0x0000
   0084 E5                 1231 	push	hl
                           1232 ;	genCall
   0085 CD 00 00           1233 	call	_set_bkg_tiles
   0088 E8 06              1234 	lda	sp,6(sp)
                           1235 ;	game.c 143
                           1236 ;	genIpush
                           1237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1238 	ld	hl,#_Characters
   008D E5                 1239 	push	hl
                           1240 ;	genIpush
   008E 21 00 1E           1241 	ld	hl,#0x1E00
   0091 E5                 1242 	push	hl
                           1243 ;	genCall
   0092 CD 00 00           1244 	call	_set_sprite_data
   0095 E8 04              1245 	lda	sp,4(sp)
                           1246 ;	game.c 144
                           1247 ;	genIpush
                           1248 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1249 	ld	hl,#_spritePalette
   009A E5                 1250 	push	hl
                           1251 ;	genIpush
   009B 21 00 04           1252 	ld	hl,#0x0400
   009E E5                 1253 	push	hl
                           1254 ;	genCall
   009F CD 00 00           1255 	call	_set_sprite_palette
   00A2 E8 04              1256 	lda	sp,4(sp)
                           1257 ;	game.c 148
                           1258 ;	genIpush
                           1259 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1260 	ld	hl,#_spritePalette
   00A7 E5                 1261 	push	hl
                           1262 ;	genIpush
   00A8 21 00 03           1263 	ld	hl,#0x0300
   00AB E5                 1264 	push	hl
                           1265 ;	genCall
   00AC CD 00 00           1266 	call	_set_bkg_palette
   00AF E8 04              1267 	lda	sp,4(sp)
                           1268 ;	game.c 149
                           1269 ;	genIpush
                           1270 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1271 	ld	hl,#0x0000
   00B4 E5                 1272 	push	hl
                           1273 ;	genCall
   00B5 CD 00 00           1274 	call	_set_sprite_prop
   00B8 E8 02              1275 	lda	sp,2(sp)
                           1276 ;	game.c 154
                           1277 ;	genAssign
   00BA 01 47 FF           1278 	ld	bc,#0xFF47
                           1279 ;	genAssign (pointer)
   00BD 3E E4              1280 	ld	a,#0xE4
   00BF 02                 1281 	ld	(bc),a
                           1282 ;	game.c 156
                           1283 ;	genAssign
   00C0 01 40 FF           1284 	ld	bc,#0xFF40
                           1285 ;	genAssign
                           1286 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1287 	lda	hl,1(sp)
   00C5 36 40              1288 	ld	(hl),#0x40
   00C7 23                 1289 	inc	hl
   00C8 36 FF              1290 	ld	(hl),#0xFF
                           1291 ;	genPointerGet
                           1292 ;	AOP_STK for _init_sloc0_1_0
                           1293 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1294 	dec	hl
   00CB 5E                 1295 	ld	e,(hl)
   00CC 23                 1296 	inc	hl
   00CD 56                 1297 	ld	d,(hl)
   00CE 1A                 1298 	ld	a,(de)
   00CF 2B                 1299 	dec	hl
   00D0 2B                 1300 	dec	hl
                           1301 ;	genOr
                           1302 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1303 	ld      (hl),a
   00D2 7F                 1304 	ld      a,a
   00D3 F6 80              1305 	or	a,#0x80
                           1306 ;	genAssign (pointer)
   00D5 02                 1307 	ld	(bc),a
                           1308 ;	game.c 158
                           1309 ;	genAssign
   00D6 01 40 FF           1310 	ld	bc,#0xFF40
                           1311 ;	genAssign
                           1312 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1313 	inc	hl
   00DA 36 40              1314 	ld	(hl),#0x40
   00DC 23                 1315 	inc	hl
   00DD 36 FF              1316 	ld	(hl),#0xFF
                           1317 ;	genPointerGet
                           1318 ;	AOP_STK for _init_sloc0_1_0
                           1319 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1320 	dec	hl
   00E0 5E                 1321 	ld	e,(hl)
   00E1 23                 1322 	inc	hl
   00E2 56                 1323 	ld	d,(hl)
   00E3 1A                 1324 	ld	a,(de)
   00E4 2B                 1325 	dec	hl
   00E5 2B                 1326 	dec	hl
                           1327 ;	genOr
                           1328 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1329 	ld      (hl),a
   00E7 7F                 1330 	ld      a,a
   00E8 F6 01              1331 	or	a,#0x01
                           1332 ;	genAssign (pointer)
   00EA 02                 1333 	ld	(bc),a
                           1334 ;	game.c 160
                           1335 ;	genAssign
   00EB 01 40 FF           1336 	ld	bc,#0xFF40
                           1337 ;	genAssign
                           1338 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1339 	inc	hl
   00EF 36 40              1340 	ld	(hl),#0x40
   00F1 23                 1341 	inc	hl
   00F2 36 FF              1342 	ld	(hl),#0xFF
                           1343 ;	genPointerGet
                           1344 ;	AOP_STK for _init_sloc0_1_0
                           1345 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1346 	dec	hl
   00F5 5E                 1347 	ld	e,(hl)
   00F6 23                 1348 	inc	hl
   00F7 56                 1349 	ld	d,(hl)
   00F8 1A                 1350 	ld	a,(de)
   00F9 2B                 1351 	dec	hl
   00FA 2B                 1352 	dec	hl
                           1353 ;	genOr
                           1354 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1355 	ld      (hl),a
   00FC 7F                 1356 	ld      a,a
   00FD F6 02              1357 	or	a,#0x02
                           1358 ;	genAssign (pointer)
   00FF 02                 1359 	ld	(bc),a
                           1360 ;	game.c 162
                           1361 ;	genAssign
                           1362 ;	AOP_HL for _input_timer
   0100 21 03 19           1363 	ld	hl,#_input_timer
   0103 36 00              1364 	ld	(hl),#0x00
                           1365 ;	game.c 163
                           1366 ;	genAssign
                           1367 ;	AOP_HL for _running
   0105 21 00 19           1368 	ld	hl,#_running
   0108 36 01              1369 	ld	(hl),#0x01
                           1370 ;	game.c 164
                           1371 ;	genAssign
                           1372 ;	AOP_HL for _timer
   010A 21 01 19           1373 	ld	hl,#_timer
   010D 36 01              1374 	ld	(hl),#0x01
                           1375 ;	game.c 165
                           1376 ;	genAddrOf
                           1377 ;	AOP_HL for _player
   010F 11 6D 1A           1378 	ld	de,#_bunny
   0112 21 B3 1A           1379 	ld	hl,#_player
   0115 73                 1380 	ld	(hl),e
   0116 23                 1381 	inc	hl
   0117 72                 1382 	ld	(hl),d
                           1383 ;	genLabel
   0118                    1384 00101$:
                           1385 ;	genEndFunction
   0118 E8 03              1386 	lda	sp,3(sp)
   011A C9                 1387 	ret
   011B                    1388 ___init_end:
                           1389 ;	game.c 169
                           1390 ;	genLabel
                           1391 ;	genFunction
                           1392 ;	---------------------------------
                           1393 ; Function map_water
                           1394 ; ---------------------------------
   011B                    1395 ___map_water_start:
   011B                    1396 _map_water:
   011B E8 DC              1397 	lda	sp,-36(sp)
                           1398 ;	game.c 170
                           1399 ;	genAddrOf
   011D F8 14              1400 	lda	hl,20(sp)
   011F 4D                 1401 	ld	c,l
   0120 44                 1402 	ld	b,h
                           1403 ;	genAssign
                           1404 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1405 	lda	hl,2(sp)
   0123 71                 1406 	ld	(hl),c
   0124 23                 1407 	inc	hl
   0125 70                 1408 	ld	(hl),b
                           1409 ;	genArrayInit
                           1410 ;	AOP_STK for _map_water_sloc0_1_0
                           1411 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1412 	push	bc
   0127 2B                 1413 	dec	hl
   0128 2A                 1414 	ld	a,(hl+)
   0129 66                 1415 	ld	h,(hl)
   012A 6F                 1416 	ld	l,a
   012B CD 00 00           1417 	call	__initrleblock
   012E 10                 1418 	.db	16
   012F FF 00 DD 00 AA 00  1419 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1420 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1421 	.db	0
   0140 C1                 1422 	pop	bc
                           1423 ;	game.c 176
                           1424 ;	genAddrOf
                           1425 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1426 	lda	hl,4(sp)
   0143 7D                 1427 	ld	a,l
   0144 54                 1428 	ld	d,h
   0145 F8 02              1429 	lda	hl,2(sp)
   0147 22                 1430 	ld	(hl+),a
   0148 72                 1431 	ld	(hl),d
                           1432 ;	genAssign
                           1433 ;	AOP_STK for _map_water_sloc0_1_0
                           1434 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1435 	dec	hl
   014A 2A                 1436 	ld	a,(hl+)
   014B 5E                 1437 	ld	e,(hl)
   014C F8 00              1438 	lda	hl,0(sp)
   014E 22                 1439 	ld	(hl+),a
   014F 73                 1440 	ld	(hl),e
                           1441 ;	genArrayInit
                           1442 ;	AOP_STK for _map_water_sloc1_1_0
                           1443 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1444 	push	bc
   0151 2B                 1445 	dec	hl
   0152 2A                 1446 	ld	a,(hl+)
   0153 66                 1447 	ld	h,(hl)
   0154 6F                 1448 	ld	l,a
   0155 CD 00 00           1449 	call	__initrleblock
   0158 10                 1450 	.db	16
   0159 FF 00 BB 00 55 00  1451 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1452 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1453 	.db	0
   016A C1                 1454 	pop	bc
                           1455 ;	game.c 182
                           1456 ;	genIpush
                           1457 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1458 	push	bc
   016C 3E 20              1459 	ld	a,#0x20
   016E F5                 1460 	push	af
   016F 33                 1461 	inc	sp
                           1462 ;	genIpush
                           1463 ;	AOP_HL for _timer
   0170 21 01 19           1464 	ld	hl,#_timer
   0173 7E                 1465 	ld	a,(hl)
   0174 F5                 1466 	push	af
   0175 33                 1467 	inc	sp
                           1468 ;	genCall
   0176 CD 00 00           1469 	call	__moduchar_rrx_s
                           1470 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1471 	lda	hl,4(sp)
   017B 73                 1472 	ld	(hl),e
   017C E8 02              1473 	lda	sp,2(sp)
   017E C1                 1474 	pop	bc
                           1475 ;	genCmpEq
                           1476 ;	AOP_STK for _map_water_sloc1_1_0
                           1477 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1478 	lda	hl,0(sp)
   0181 7E                 1479 	ld	a,(hl)
   0182 B7                 1480 	or	a,a
   0183 C2 C7 01           1481 	jp	nz,00106$
   0186 18 03              1482 	jr	00111$
   0188                    1483 00110$:
   0188 C3 C7 01           1484 	jp	00106$
   018B                    1485 00111$:
                           1486 ;	game.c 183
                           1487 ;	genIpush
                           1488 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1489 	push	bc
   018C 3E 40              1490 	ld	a,#0x40
   018E F5                 1491 	push	af
   018F 33                 1492 	inc	sp
                           1493 ;	genIpush
                           1494 ;	AOP_HL for _timer
   0190 21 01 19           1495 	ld	hl,#_timer
   0193 7E                 1496 	ld	a,(hl)
   0194 F5                 1497 	push	af
   0195 33                 1498 	inc	sp
                           1499 ;	genCall
   0196 CD 00 00           1500 	call	__moduchar_rrx_s
                           1501 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1502 	lda	hl,4(sp)
   019B 73                 1503 	ld	(hl),e
   019C E8 02              1504 	lda	sp,2(sp)
   019E C1                 1505 	pop	bc
                           1506 ;	genCmpEq
                           1507 ;	AOP_STK for _map_water_sloc1_1_0
                           1508 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1509 	lda	hl,0(sp)
   01A1 7E                 1510 	ld	a,(hl)
   01A2 B7                 1511 	or	a,a
   01A3 C2 B8 01           1512 	jp	nz,00102$
   01A6 18 03              1513 	jr	00113$
   01A8                    1514 00112$:
   01A8 C3 B8 01           1515 	jp	00102$
   01AB                    1516 00113$:
                           1517 ;	game.c 184
                           1518 ;	genIpush
                           1519 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1520 	push	bc
                           1521 ;	genIpush
   01AC 21 0B 01           1522 	ld	hl,#0x010B
   01AF E5                 1523 	push	hl
                           1524 ;	genCall
   01B0 CD 00 00           1525 	call	_set_bkg_data
   01B3 E8 04              1526 	lda	sp,4(sp)
                           1527 ;	genGoto
   01B5 C3 C7 01           1528 	jp	00106$
                           1529 ;	genLabel
   01B8                    1530 00102$:
                           1531 ;	game.c 188
                           1532 ;	genIpush
                           1533 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1534 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1535 	lda	hl,2(sp)
   01BA 2A                 1536 	ld	a,(hl+)
   01BB 66                 1537 	ld	h,(hl)
   01BC 6F                 1538 	ld	l,a
   01BD E5                 1539 	push	hl
                           1540 ;	genIpush
   01BE 21 0B 01           1541 	ld	hl,#0x010B
   01C1 E5                 1542 	push	hl
                           1543 ;	genCall
   01C2 CD 00 00           1544 	call	_set_bkg_data
   01C5 E8 04              1545 	lda	sp,4(sp)
                           1546 ;	genLabel
   01C7                    1547 00106$:
                           1548 ;	genEndFunction
   01C7 E8 24              1549 	lda	sp,36(sp)
   01C9 C9                 1550 	ret
   01CA                    1551 ___map_water_end:
                           1552 ;	game.c 233
                           1553 ;	genLabel
                           1554 ;	genFunction
                           1555 ;	---------------------------------
                           1556 ; Function change_char
                           1557 ; ---------------------------------
   01CA                    1558 ___change_char_start:
   01CA                    1559 _change_char:
                           1560 	
                           1561 ;	game.c 235
                           1562 ;	genCmpEq
                           1563 ;	AOP_HL for _characters_available
                           1564 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1565 	ld	hl,#_characters_available
   01CD 7E                 1566 	ld	a,(hl)
   01CE FE 01              1567 	cp	a,#0x01
   01D0 C2 DE 01           1568 	jp	nz,00102$
   01D3 18 03              1569 	jr	00135$
   01D5                    1570 00134$:
   01D5 C3 DE 01           1571 	jp	00102$
   01D8                    1572 00135$:
                           1573 ;	game.c 236
                           1574 ;	genRet
   01D8 11 00 00           1575 	ld	de,#0x0000
   01DB C3 EE 02           1576 	jp	00121$
                           1577 ;	genLabel
   01DE                    1578 00102$:
                           1579 ;	game.c 239
                           1580 ;	genAssign
                           1581 ;	AOP_HL for _player
   01DE 21 B3 1A           1582 	ld	hl,#_player
   01E1 4E                 1583 	ld	c,(hl)
   01E2 23                 1584 	inc	hl
   01E3 46                 1585 	ld	b,(hl)
                           1586 ;	genPlus
                           1587 ;	genPlusIncr
   01E4 21 08 00           1588 	ld	hl,#0x0008
   01E7 09                 1589 	add	hl,bc
                           1590 ;	genAssign (pointer)
   01E8 36 00              1591 	ld	(hl),#0x00
                           1592 ;	game.c 241
                           1593 ;	genCmpEq
                           1594 ;	AOP_HL for _characters_available
                           1595 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1596 	ld	hl,#_characters_available
   01ED 7E                 1597 	ld	a,(hl)
   01EE FE 02              1598 	cp	a,#0x02
   01F0 C2 2B 02           1599 	jp	nz,00107$
   01F3 18 03              1600 	jr	00137$
   01F5                    1601 00136$:
   01F5 C3 2B 02           1602 	jp	00107$
   01F8                    1603 00137$:
                           1604 ;	game.c 242
                           1605 ;	genAssign
                           1606 ;	AOP_HL for _player
   01F8 21 B3 1A           1607 	ld	hl,#_player
   01FB 4E                 1608 	ld	c,(hl)
   01FC 23                 1609 	inc	hl
   01FD 46                 1610 	ld	b,(hl)
                           1611 ;	genPlus
                           1612 ;	genPlusIncr
                           1613 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1614 	ld	a,c
   01FF C6 0B              1615 	add	a,#0x0B
   0201 4F                 1616 	ld	c,a
   0202 78                 1617 	ld	a,b
   0203 CE 00              1618 	adc	a,#0x00
   0205 47                 1619 	ld	b,a
                           1620 ;	genPointerGet
   0206 0A                 1621 	ld	a,(bc)
                           1622 ;	genCmpEq
                           1623 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1624 	ld	c,a
   0208 FE 01              1625 	cp	a,#0x01
   020A CA 16 02           1626 	jp	z,00103$
   020D                    1627 00138$:
                           1628 ;	genCmpEq
                           1629 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1630 	ld	a,c
   020E FE 02              1631 	cp	a,#0x02
   0210 CA 22 02           1632 	jp	z,00104$
   0213                    1633 00139$:
                           1634 ;	genGoto
   0213 C3 2B 02           1635 	jp	00107$
                           1636 ;	game.c 244
                           1637 ;	genLabel
   0216                    1638 00103$:
                           1639 ;	genAddrOf
                           1640 ;	AOP_HL for _player
   0216 11 7B 1A           1641 	ld	de,#_dog1
   0219 21 B3 1A           1642 	ld	hl,#_player
   021C 73                 1643 	ld	(hl),e
   021D 23                 1644 	inc	hl
   021E 72                 1645 	ld	(hl),d
                           1646 ;	game.c 245
                           1647 ;	genGoto
   021F C3 2B 02           1648 	jp	00107$
                           1649 ;	game.c 247
                           1650 ;	genLabel
   0222                    1651 00104$:
                           1652 ;	genAddrOf
                           1653 ;	AOP_HL for _player
   0222 11 6D 1A           1654 	ld	de,#_bunny
   0225 21 B3 1A           1655 	ld	hl,#_player
   0228 73                 1656 	ld	(hl),e
   0229 23                 1657 	inc	hl
   022A 72                 1658 	ld	(hl),d
                           1659 ;	game.c 249
                           1660 ;	genLabel
   022B                    1661 00107$:
                           1662 ;	game.c 251
                           1663 ;	genCmpEq
                           1664 ;	AOP_HL for _characters_available
                           1665 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1666 	ld	hl,#_characters_available
   022E 7E                 1667 	ld	a,(hl)
   022F FE 03              1668 	cp	a,#0x03
   0231 C2 7E 02           1669 	jp	nz,00113$
   0234 18 03              1670 	jr	00141$
   0236                    1671 00140$:
   0236 C3 7E 02           1672 	jp	00113$
   0239                    1673 00141$:
                           1674 ;	game.c 252
                           1675 ;	genAssign
                           1676 ;	AOP_HL for _player
   0239 21 B3 1A           1677 	ld	hl,#_player
   023C 4E                 1678 	ld	c,(hl)
   023D 23                 1679 	inc	hl
   023E 46                 1680 	ld	b,(hl)
                           1681 ;	genPlus
                           1682 ;	genPlusIncr
                           1683 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1684 	ld	a,c
   0240 C6 0B              1685 	add	a,#0x0B
   0242 4F                 1686 	ld	c,a
   0243 78                 1687 	ld	a,b
   0244 CE 00              1688 	adc	a,#0x00
   0246 47                 1689 	ld	b,a
                           1690 ;	genPointerGet
   0247 0A                 1691 	ld	a,(bc)
                           1692 ;	genCmpEq
                           1693 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1694 	ld	c,a
   0249 FE 01              1695 	cp	a,#0x01
   024B CA 5D 02           1696 	jp	z,00108$
   024E                    1697 00142$:
                           1698 ;	genCmpEq
                           1699 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1700 	ld	a,c
   024F FE 02              1701 	cp	a,#0x02
   0251 CA 69 02           1702 	jp	z,00109$
   0254                    1703 00143$:
                           1704 ;	genCmpEq
                           1705 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1706 	ld	a,c
   0255 FE 03              1707 	cp	a,#0x03
   0257 CA 75 02           1708 	jp	z,00110$
   025A                    1709 00144$:
                           1710 ;	genGoto
   025A C3 7E 02           1711 	jp	00113$
                           1712 ;	game.c 254
                           1713 ;	genLabel
   025D                    1714 00108$:
                           1715 ;	genAddrOf
                           1716 ;	AOP_HL for _player
   025D 11 7B 1A           1717 	ld	de,#_dog1
   0260 21 B3 1A           1718 	ld	hl,#_player
   0263 73                 1719 	ld	(hl),e
   0264 23                 1720 	inc	hl
   0265 72                 1721 	ld	(hl),d
                           1722 ;	game.c 255
                           1723 ;	genGoto
   0266 C3 7E 02           1724 	jp	00113$
                           1725 ;	game.c 257
                           1726 ;	genLabel
   0269                    1727 00109$:
                           1728 ;	genAddrOf
                           1729 ;	AOP_HL for _player
   0269 11 89 1A           1730 	ld	de,#_dog2
   026C 21 B3 1A           1731 	ld	hl,#_player
   026F 73                 1732 	ld	(hl),e
   0270 23                 1733 	inc	hl
   0271 72                 1734 	ld	(hl),d
                           1735 ;	game.c 258
                           1736 ;	genGoto
   0272 C3 7E 02           1737 	jp	00113$
                           1738 ;	game.c 260
                           1739 ;	genLabel
   0275                    1740 00110$:
                           1741 ;	genAddrOf
                           1742 ;	AOP_HL for _player
   0275 11 6D 1A           1743 	ld	de,#_bunny
   0278 21 B3 1A           1744 	ld	hl,#_player
   027B 73                 1745 	ld	(hl),e
   027C 23                 1746 	inc	hl
   027D 72                 1747 	ld	(hl),d
                           1748 ;	game.c 262
                           1749 ;	genLabel
   027E                    1750 00113$:
                           1751 ;	game.c 264
                           1752 ;	genCmpEq
                           1753 ;	AOP_HL for _characters_available
                           1754 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1755 	ld	hl,#_characters_available
   0281 7E                 1756 	ld	a,(hl)
   0282 FE 04              1757 	cp	a,#0x04
   0284 C2 EB 02           1758 	jp	nz,00120$
   0287 18 03              1759 	jr	00146$
   0289                    1760 00145$:
   0289 C3 EB 02           1761 	jp	00120$
   028C                    1762 00146$:
                           1763 ;	game.c 265
                           1764 ;	genAssign
                           1765 ;	AOP_HL for _player
   028C 21 B3 1A           1766 	ld	hl,#_player
   028F 4E                 1767 	ld	c,(hl)
   0290 23                 1768 	inc	hl
   0291 46                 1769 	ld	b,(hl)
                           1770 ;	genPlus
                           1771 ;	genPlusIncr
                           1772 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1773 	ld	a,c
   0293 C6 0B              1774 	add	a,#0x0B
   0295 4F                 1775 	ld	c,a
   0296 78                 1776 	ld	a,b
   0297 CE 00              1777 	adc	a,#0x00
   0299 47                 1778 	ld	b,a
                           1779 ;	genPointerGet
   029A 0A                 1780 	ld	a,(bc)
                           1781 ;	genCmpLt
   029B 4F                 1782 	ld	c,a
   029C FE 01              1783 	cp	#0x01
   029E DA EB 02           1784 	jp	c,00120$
                           1785 ;	genCmpGt
   02A1 3E 04              1786 	ld	a,#0x04
   02A3 91                 1787 	sub	a,c
   02A4 DA EB 02           1788 	jp	c,00120$
                           1789 ;	genMinus
   02A7 0D                 1790 	dec	c
                           1791 ;	genJumpTab
   02A8 59                 1792 	ld	e,c
   02A9 16 00              1793 	ld	d,#0x00
   02AB 21 B2 02           1794 	ld	hl,#00147$
   02AE 19                 1795 	add	hl,de
   02AF 19                 1796 	add	hl,de
   02B0 19                 1797 	add	hl,de
   02B1 E9                 1798 	jp	(hl)
   02B2                    1799 00147$:
   02B2 C3 BE 02           1800 	jp	00114$
   02B5 C3 CA 02           1801 	jp	00115$
   02B8 C3 D6 02           1802 	jp	00116$
   02BB C3 E2 02           1803 	jp	00117$
                           1804 ;	game.c 267
                           1805 ;	genLabel
   02BE                    1806 00114$:
                           1807 ;	genAddrOf
                           1808 ;	AOP_HL for _player
   02BE 11 7B 1A           1809 	ld	de,#_dog1
   02C1 21 B3 1A           1810 	ld	hl,#_player
   02C4 73                 1811 	ld	(hl),e
   02C5 23                 1812 	inc	hl
   02C6 72                 1813 	ld	(hl),d
                           1814 ;	game.c 268
                           1815 ;	genGoto
   02C7 C3 EB 02           1816 	jp	00120$
                           1817 ;	game.c 270
                           1818 ;	genLabel
   02CA                    1819 00115$:
                           1820 ;	genAddrOf
                           1821 ;	AOP_HL for _player
   02CA 11 89 1A           1822 	ld	de,#_dog2
   02CD 21 B3 1A           1823 	ld	hl,#_player
   02D0 73                 1824 	ld	(hl),e
   02D1 23                 1825 	inc	hl
   02D2 72                 1826 	ld	(hl),d
                           1827 ;	game.c 271
                           1828 ;	genGoto
   02D3 C3 EB 02           1829 	jp	00120$
                           1830 ;	game.c 273
                           1831 ;	genLabel
   02D6                    1832 00116$:
                           1833 ;	genAddrOf
                           1834 ;	AOP_HL for _player
   02D6 11 97 1A           1835 	ld	de,#_cat
   02D9 21 B3 1A           1836 	ld	hl,#_player
   02DC 73                 1837 	ld	(hl),e
   02DD 23                 1838 	inc	hl
   02DE 72                 1839 	ld	(hl),d
                           1840 ;	game.c 274
                           1841 ;	genGoto
   02DF C3 EB 02           1842 	jp	00120$
                           1843 ;	game.c 276
                           1844 ;	genLabel
   02E2                    1845 00117$:
                           1846 ;	genAddrOf
                           1847 ;	AOP_HL for _player
   02E2 11 6D 1A           1848 	ld	de,#_bunny
   02E5 21 B3 1A           1849 	ld	hl,#_player
   02E8 73                 1850 	ld	(hl),e
   02E9 23                 1851 	inc	hl
   02EA 72                 1852 	ld	(hl),d
                           1853 ;	game.c 278
                           1854 ;	genLabel
   02EB                    1855 00120$:
                           1856 ;	game.c 283
                           1857 ;	genCall
                           1858 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD A7 10           1859 	call	_rotate_player
                           1860 ;	genLabel
   02EE                    1861 00121$:
                           1862 ;	genEndFunction
                           1863 	
   02EE C9                 1864 	ret
   02EF                    1865 ___change_char_end:
                           1866 ;	game.c 287
                           1867 ;	genLabel
                           1868 ;	genFunction
                           1869 ;	---------------------------------
                           1870 ; Function map_loop
                           1871 ; ---------------------------------
   02EF                    1872 ___map_loop_start:
   02EF                    1873 _map_loop:
                           1874 	
                           1875 ;	game.c 289
                           1876 ;	genIpush
                           1877 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 B3 1A           1878 	ld	hl,#_player
   02F2 E5                 1879 	push	hl
                           1880 ;	genCall
   02F3 CD CC 07           1881 	call	_is_ded
   02F6 42                 1882 	ld	b,d
   02F7 4B                 1883 	ld	c,e
   02F8 E8 02              1884 	lda	sp,2(sp)
                           1885 ;	genIfx
   02FA 79                 1886 	ld	a,c
   02FB B0                 1887 	or	a,b
   02FC CA 02 03           1888 	jp	z,00102$
                           1889 ;	game.c 290
                           1890 ;	genCall
                           1891 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1892 	call	_map_init
                           1893 ;	genLabel
   0302                    1894 00102$:
                           1895 ;	game.c 292
                           1896 ;	genIpush
                           1897 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 B3 1A           1898 	ld	hl,#_player
   0305 E5                 1899 	push	hl
                           1900 ;	genCall
   0306 CD E2 05           1901 	call	_got_door
   0309 E8 02              1902 	lda	sp,2(sp)
                           1903 ;	game.c 294
                           1904 ;	genIpush
                           1905 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 B3 1A           1906 	ld	hl,#_player
   030E E5                 1907 	push	hl
                           1908 ;	genCall
   030F CD 35 05           1909 	call	_got_key
   0312 E8 02              1910 	lda	sp,2(sp)
                           1911 ;	game.c 295
                           1912 ;	genCall
                           1913 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1914 	call	_map_water
                           1915 ;	game.c 298
                           1916 ;	genIpush
                           1917 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 B3 1A           1918 	ld	hl,#_player
   031A E5                 1919 	push	hl
                           1920 ;	genCall
   031B CD C5 0D           1921 	call	_player_input
   031E E8 02              1922 	lda	sp,2(sp)
                           1923 ;	game.c 301
                           1924 ;	genIpush
                           1925 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1926 	ld	hl,#_bunny
   0323 E5                 1927 	push	hl
                           1928 ;	genCall
   0324 CD 4D 12           1929 	call	_move_character
   0327 E8 02              1930 	lda	sp,2(sp)
                           1931 ;	game.c 302
                           1932 ;	genIpush
                           1933 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7B 1A           1934 	ld	hl,#_dog1
   032C E5                 1935 	push	hl
                           1936 ;	genCall
   032D CD 4D 12           1937 	call	_move_character
   0330 E8 02              1938 	lda	sp,2(sp)
                           1939 ;	game.c 303
                           1940 ;	genIpush
                           1941 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 89 1A           1942 	ld	hl,#_dog2
   0335 E5                 1943 	push	hl
                           1944 ;	genCall
   0336 CD 4D 12           1945 	call	_move_character
   0339 E8 02              1946 	lda	sp,2(sp)
                           1947 ;	game.c 304
                           1948 ;	genIpush
                           1949 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 97 1A           1950 	ld	hl,#_cat
   033E E5                 1951 	push	hl
                           1952 ;	genCall
   033F CD 4D 12           1953 	call	_move_character
   0342 E8 02              1954 	lda	sp,2(sp)
                           1955 ;	genLabel
   0344                    1956 00103$:
                           1957 ;	genEndFunction
                           1958 	
   0344 C9                 1959 	ret
   0345                    1960 ___map_loop_end:
                           1961 ;	game.c 309
                           1962 ;	genLabel
                           1963 ;	genFunction
                           1964 ;	---------------------------------
                           1965 ; Function helper_copy_map
                           1966 ; ---------------------------------
   0345                    1967 ___helper_copy_map_start:
   0345                    1968 _helper_copy_map:
   0345 E8 FC              1969 	lda	sp,-4(sp)
                           1970 ;	game.c 311
                           1971 ;	genAssign
   0347 01 00 00           1972 	ld	bc,#0x0000
                           1973 ;	genLabel
   034A                    1974 00101$:
                           1975 ;	genCmpLt
   034A 79                 1976 	ld	a,c
   034B D6 68              1977 	sub	a,#0x68
   034D 78                 1978 	ld	a,b
   034E DE 01              1979 	sbc	a,#0x01
   0350 D2 74 03           1980 	jp	nc,00105$
                           1981 ;	game.c 312
                           1982 ;	genPlus
                           1983 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1984 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1985 	ld	hl,#_map
   0356 09                 1986 	add	hl,bc
   0357 7D                 1987 	ld	a,l
   0358 54                 1988 	ld	d,h
   0359 F8 02              1989 	lda	hl,2(sp)
   035B 22                 1990 	ld	(hl+),a
   035C 72                 1991 	ld	(hl),d
                           1992 ;	genPlus
                           1993 ;	AOP_STK for 
                           1994 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           1995 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              1996 	lda	hl,6(sp)
   035F 2A                 1997 	ld	a,(hl+)
   0360 66                 1998 	ld	h,(hl)
   0361 6F                 1999 	ld	l,a
   0362 09                 2000 	add	hl,bc
   0363 7D                 2001 	ld	a,l
   0364 54                 2002 	ld	d,h
   0365 F8 00              2003 	lda	hl,0(sp)
                           2004 ;	genPointerGet
                           2005 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2006 	ld	(hl+),a
   0368 72                 2007 	ld	(hl),d
   0369 5F                 2008 	ld	e,a
   036A 1A                 2009 	ld	a,(de)
                           2010 ;	genAssign (pointer)
                           2011 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2012 	inc	hl
   036C 5E                 2013 	ld	e,(hl)
   036D 23                 2014 	inc	hl
   036E 56                 2015 	ld	d,(hl)
   036F 12                 2016 	ld	(de),a
                           2017 ;	game.c 311
                           2018 ;	genPlus
                           2019 ;	genPlusIncr
   0370 03                 2020 	inc	bc
                           2021 ;	genGoto
   0371 C3 4A 03           2022 	jp	00101$
                           2023 ;	genLabel
   0374                    2024 00105$:
                           2025 ;	genEndFunction
   0374 E8 04              2026 	lda	sp,4(sp)
   0376 C9                 2027 	ret
   0377                    2028 ___helper_copy_map_end:
                           2029 ;	game.c 316
                           2030 ;	genLabel
                           2031 ;	genFunction
                           2032 ;	---------------------------------
                           2033 ; Function copy_map
                           2034 ; ---------------------------------
   0377                    2035 ___copy_map_start:
   0377                    2036 _copy_map:
                           2037 	
                           2038 ;	game.c 317
                           2039 ;	genCmpLt
                           2040 ;	AOP_HL for _current_map
   0377 21 04 19           2041 	ld	hl,#_current_map
   037A 7E                 2042 	ld	a,(hl)
   037B FE 01              2043 	cp	#0x01
   037D DA 2A 04           2044 	jp	c,00111$
                           2045 ;	genCmpGt
                           2046 ;	AOP_HL for _current_map
   0380 3E 0A              2047 	ld	a,#0x0A
   0382 96                 2048 	sub	a,(hl)
   0383 DA 2A 04           2049 	jp	c,00111$
                           2050 ;	genMinus
                           2051 ;	AOP_HL for _current_map
   0386 7E                 2052 	ld	a,(hl)
   0387 C6 FF              2053 	add	a,#0xFF
   0389 4F                 2054 	ld	c,a
                           2055 ;	genJumpTab
   038A 59                 2056 	ld	e,c
   038B 16 00              2057 	ld	d,#0x00
   038D 21 94 03           2058 	ld	hl,#00117$
   0390 19                 2059 	add	hl,de
   0391 19                 2060 	add	hl,de
   0392 19                 2061 	add	hl,de
   0393 E9                 2062 	jp	(hl)
   0394                    2063 00117$:
   0394 C3 B2 03           2064 	jp	00101$
   0397 C3 BE 03           2065 	jp	00102$
   039A C3 CA 03           2066 	jp	00103$
   039D C3 D6 03           2067 	jp	00104$
   03A0 C3 E2 03           2068 	jp	00105$
   03A3 C3 EE 03           2069 	jp	00106$
   03A6 C3 FA 03           2070 	jp	00107$
   03A9 C3 06 04           2071 	jp	00108$
   03AC C3 12 04           2072 	jp	00109$
   03AF C3 1E 04           2073 	jp	00110$
                           2074 ;	game.c 319
                           2075 ;	genLabel
   03B2                    2076 00101$:
                           2077 ;	genIpush
                           2078 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2079 	ld	hl,#_Map1
   03B5 E5                 2080 	push	hl
                           2081 ;	genCall
   03B6 CD 45 03           2082 	call	_helper_copy_map
   03B9 E8 02              2083 	lda	sp,2(sp)
                           2084 ;	game.c 320
                           2085 ;	genGoto
   03BB C3 33 04           2086 	jp	00113$
                           2087 ;	game.c 322
                           2088 ;	genLabel
   03BE                    2089 00102$:
                           2090 ;	genIpush
                           2091 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2092 	ld	hl,#_Map2
   03C1 E5                 2093 	push	hl
                           2094 ;	genCall
   03C2 CD 45 03           2095 	call	_helper_copy_map
   03C5 E8 02              2096 	lda	sp,2(sp)
                           2097 ;	game.c 323
                           2098 ;	genGoto
   03C7 C3 33 04           2099 	jp	00113$
                           2100 ;	game.c 325
                           2101 ;	genLabel
   03CA                    2102 00103$:
                           2103 ;	genIpush
                           2104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2105 	ld	hl,#_Map3
   03CD E5                 2106 	push	hl
                           2107 ;	genCall
   03CE CD 45 03           2108 	call	_helper_copy_map
   03D1 E8 02              2109 	lda	sp,2(sp)
                           2110 ;	game.c 326
                           2111 ;	genGoto
   03D3 C3 33 04           2112 	jp	00113$
                           2113 ;	game.c 328
                           2114 ;	genLabel
   03D6                    2115 00104$:
                           2116 ;	genIpush
                           2117 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2118 	ld	hl,#_Map4
   03D9 E5                 2119 	push	hl
                           2120 ;	genCall
   03DA CD 45 03           2121 	call	_helper_copy_map
   03DD E8 02              2122 	lda	sp,2(sp)
                           2123 ;	game.c 329
                           2124 ;	genGoto
   03DF C3 33 04           2125 	jp	00113$
                           2126 ;	game.c 331
                           2127 ;	genLabel
   03E2                    2128 00105$:
                           2129 ;	genIpush
                           2130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2131 	ld	hl,#_MapTest
   03E5 E5                 2132 	push	hl
                           2133 ;	genCall
   03E6 CD 45 03           2134 	call	_helper_copy_map
   03E9 E8 02              2135 	lda	sp,2(sp)
                           2136 ;	game.c 332
                           2137 ;	genGoto
   03EB C3 33 04           2138 	jp	00113$
                           2139 ;	game.c 334
                           2140 ;	genLabel
   03EE                    2141 00106$:
                           2142 ;	genIpush
                           2143 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2144 	ld	hl,#_MapTest
   03F1 E5                 2145 	push	hl
                           2146 ;	genCall
   03F2 CD 45 03           2147 	call	_helper_copy_map
   03F5 E8 02              2148 	lda	sp,2(sp)
                           2149 ;	game.c 335
                           2150 ;	genGoto
   03F7 C3 33 04           2151 	jp	00113$
                           2152 ;	game.c 337
                           2153 ;	genLabel
   03FA                    2154 00107$:
                           2155 ;	genIpush
                           2156 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2157 	ld	hl,#_MapTest
   03FD E5                 2158 	push	hl
                           2159 ;	genCall
   03FE CD 45 03           2160 	call	_helper_copy_map
   0401 E8 02              2161 	lda	sp,2(sp)
                           2162 ;	game.c 338
                           2163 ;	genGoto
   0403 C3 33 04           2164 	jp	00113$
                           2165 ;	game.c 340
                           2166 ;	genLabel
   0406                    2167 00108$:
                           2168 ;	genIpush
                           2169 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2170 	ld	hl,#_MapTest
   0409 E5                 2171 	push	hl
                           2172 ;	genCall
   040A CD 45 03           2173 	call	_helper_copy_map
   040D E8 02              2174 	lda	sp,2(sp)
                           2175 ;	game.c 341
                           2176 ;	genGoto
   040F C3 33 04           2177 	jp	00113$
                           2178 ;	game.c 343
                           2179 ;	genLabel
   0412                    2180 00109$:
                           2181 ;	genIpush
                           2182 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2183 	ld	hl,#_MapTest
   0415 E5                 2184 	push	hl
                           2185 ;	genCall
   0416 CD 45 03           2186 	call	_helper_copy_map
   0419 E8 02              2187 	lda	sp,2(sp)
                           2188 ;	game.c 344
                           2189 ;	genGoto
   041B C3 33 04           2190 	jp	00113$
                           2191 ;	game.c 346
                           2192 ;	genLabel
   041E                    2193 00110$:
                           2194 ;	genIpush
                           2195 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2196 	ld	hl,#_MapTest
   0421 E5                 2197 	push	hl
                           2198 ;	genCall
   0422 CD 45 03           2199 	call	_helper_copy_map
   0425 E8 02              2200 	lda	sp,2(sp)
                           2201 ;	game.c 347
                           2202 ;	genGoto
   0427 C3 33 04           2203 	jp	00113$
                           2204 ;	game.c 349
                           2205 ;	genLabel
   042A                    2206 00111$:
                           2207 ;	genIpush
                           2208 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2209 	ld	hl,#_MapTest
   042D E5                 2210 	push	hl
                           2211 ;	genCall
   042E CD 45 03           2212 	call	_helper_copy_map
   0431 E8 02              2213 	lda	sp,2(sp)
                           2214 ;	game.c 352
                           2215 ;	genLabel
   0433                    2216 00113$:
                           2217 ;	genEndFunction
                           2218 	
   0433 C9                 2219 	ret
   0434                    2220 ___copy_map_end:
                           2221 ;	game.c 356
                           2222 ;	genLabel
                           2223 ;	genFunction
                           2224 ;	---------------------------------
                           2225 ; Function map_init
                           2226 ; ---------------------------------
   0434                    2227 ___map_init_start:
   0434                    2228 _map_init:
                           2229 	
                           2230 ;	game.c 357
                           2231 ;	genCall
                           2232 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2233 	call	_copy_map
                           2234 ;	game.c 358
                           2235 ;	genIpush
                           2236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2237 	ld	hl,#_map
   043A E5                 2238 	push	hl
                           2239 ;	genIpush
   043B 21 14 12           2240 	ld	hl,#0x1214
   043E E5                 2241 	push	hl
                           2242 ;	genIpush
   043F 21 00 00           2243 	ld	hl,#0x0000
   0442 E5                 2244 	push	hl
                           2245 ;	genCall
   0443 CD 00 00           2246 	call	_set_bkg_tiles
   0446 E8 06              2247 	lda	sp,6(sp)
                           2248 ;	game.c 359
                           2249 ;	genCall
                           2250 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2251 	call	_instanciate_chars
                           2252 ;	genLabel
   044B                    2253 00101$:
                           2254 ;	genEndFunction
                           2255 	
   044B C9                 2256 	ret
   044C                    2257 ___map_init_end:
                           2258 ;	game.c 374
                           2259 ;	genLabel
                           2260 ;	genFunction
                           2261 ;	---------------------------------
                           2262 ; Function instanciate_chars
                           2263 ; ---------------------------------
   044C                    2264 ___instanciate_chars_start:
   044C                    2265 _instanciate_chars:
                           2266 	
                           2267 ;	game.c 376
                           2268 ;	genAssign (pointer)
   044C 11 6D 1A           2269 	ld	de,#_bunny
   044F 3E 08              2270 	ld	a,#0x08
   0451 12                 2271 	ld	(de),a
                           2272 ;	game.c 377
                           2273 ;	genPlus
                           2274 ;	genPlusIncr
   0452 21 6E 1A           2275 	ld	hl,#_bunny + 1
                           2276 ;	genAssign (pointer)
   0455 36 10              2277 	ld	(hl),#0x10
                           2278 ;	game.c 378
                           2279 ;	genPlus
                           2280 ;	genPlusIncr
   0457 23                 2281 	inc	hl
                           2282 ;	genAssign (pointer)
   0458 36 00              2283 	ld	(hl),#0x00
                           2284 ;	game.c 379
                           2285 ;	genPlus
                           2286 ;	genPlusIncr
   045A 23                 2287 	inc	hl
                           2288 ;	genAssign (pointer)
   045B 36 01              2289 	ld	(hl),#0x01
                           2290 ;	game.c 380
                           2291 ;	genPlus
                           2292 ;	genPlusIncr
   045D 23                 2293 	inc	hl
                           2294 ;	genAssign (pointer)
   045E 36 02              2295 	ld	(hl),#0x02
                           2296 ;	game.c 381
                           2297 ;	genPlus
                           2298 ;	genPlusIncr
   0460 23                 2299 	inc	hl
                           2300 ;	genAssign (pointer)
   0461 36 10              2301 	ld	(hl),#0x10
                           2302 ;	game.c 382
                           2303 ;	genPlus
                           2304 ;	genPlusIncr
   0463 23                 2305 	inc	hl
                           2306 ;	genAssign (pointer)
   0464 36 11              2307 	ld	(hl),#0x11
                           2308 ;	game.c 383
                           2309 ;	genPlus
                           2310 ;	genPlusIncr
   0466 23                 2311 	inc	hl
                           2312 ;	genAssign (pointer)
   0467 36 12              2313 	ld	(hl),#0x12
                           2314 ;	game.c 384
                           2315 ;	genPlus
                           2316 ;	genPlusIncr
   0469 23                 2317 	inc	hl
                           2318 ;	genAssign (pointer)
   046A 36 00              2319 	ld	(hl),#0x00
                           2320 ;	game.c 385
                           2321 ;	genPlus
                           2322 ;	genPlusIncr
   046C 23                 2323 	inc	hl
                           2324 ;	genAssign (pointer)
   046D 36 00              2325 	ld	(hl),#0x00
                           2326 ;	game.c 386
                           2327 ;	genPlus
                           2328 ;	genPlusIncr
   046F 23                 2329 	inc	hl
   0470 23                 2330 	inc	hl
                           2331 ;	genAssign (pointer)
   0471 36 01              2332 	ld	(hl),#0x01
                           2333 ;	game.c 387
                           2334 ;	genPlus
                           2335 ;	genPlusIncr
   0473 23                 2336 	inc	hl
                           2337 ;	genAssign (pointer)
   0474 5D                 2338 	ld	e,l
   0475 54                 2339 	ld	d,h
   0476 3E 90              2340 	ld	a,#0x90
   0478 12                 2341 	ld	(de),a
   0479 13                 2342 	inc	de
   047A 3E 01              2343 	ld	a,#0x01
   047C 12                 2344 	ld	(de),a
                           2345 ;	game.c 389
                           2346 ;	genAssign (pointer)
   047D 11 7B 1A           2347 	ld	de,#_dog1
   0480 3E 10              2348 	ld	a,#0x10
   0482 12                 2349 	ld	(de),a
                           2350 ;	game.c 390
                           2351 ;	genPlus
                           2352 ;	genPlusIncr
   0483 21 7C 1A           2353 	ld	hl,#_dog1 + 1
                           2354 ;	genAssign (pointer)
   0486 36 10              2355 	ld	(hl),#0x10
                           2356 ;	game.c 391
                           2357 ;	genPlus
                           2358 ;	genPlusIncr
   0488 23                 2359 	inc	hl
                           2360 ;	genAssign (pointer)
   0489 36 03              2361 	ld	(hl),#0x03
                           2362 ;	game.c 392
                           2363 ;	genPlus
                           2364 ;	genPlusIncr
   048B 23                 2365 	inc	hl
                           2366 ;	genAssign (pointer)
   048C 36 04              2367 	ld	(hl),#0x04
                           2368 ;	game.c 393
                           2369 ;	genPlus
                           2370 ;	genPlusIncr
   048E 23                 2371 	inc	hl
                           2372 ;	genAssign (pointer)
   048F 36 05              2373 	ld	(hl),#0x05
                           2374 ;	game.c 394
                           2375 ;	genPlus
                           2376 ;	genPlusIncr
   0491 23                 2377 	inc	hl
                           2378 ;	genAssign (pointer)
   0492 36 13              2379 	ld	(hl),#0x13
                           2380 ;	game.c 395
                           2381 ;	genPlus
                           2382 ;	genPlusIncr
   0494 23                 2383 	inc	hl
                           2384 ;	genAssign (pointer)
   0495 36 14              2385 	ld	(hl),#0x14
                           2386 ;	game.c 396
                           2387 ;	genPlus
                           2388 ;	genPlusIncr
   0497 23                 2389 	inc	hl
                           2390 ;	genAssign (pointer)
   0498 36 15              2391 	ld	(hl),#0x15
                           2392 ;	game.c 397
                           2393 ;	genPlus
                           2394 ;	genPlusIncr
   049A 23                 2395 	inc	hl
                           2396 ;	genAssign (pointer)
   049B 36 00              2397 	ld	(hl),#0x00
                           2398 ;	game.c 398
                           2399 ;	genPlus
                           2400 ;	genPlusIncr
   049D 23                 2401 	inc	hl
                           2402 ;	genAssign (pointer)
   049E 36 00              2403 	ld	(hl),#0x00
                           2404 ;	game.c 399
                           2405 ;	genPlus
                           2406 ;	genPlusIncr
   04A0 23                 2407 	inc	hl
   04A1 23                 2408 	inc	hl
                           2409 ;	genAssign (pointer)
   04A2 36 02              2410 	ld	(hl),#0x02
                           2411 ;	game.c 400
                           2412 ;	genPlus
                           2413 ;	genPlusIncr
   04A4 23                 2414 	inc	hl
                           2415 ;	genAssign (pointer)
   04A5 5D                 2416 	ld	e,l
   04A6 54                 2417 	ld	d,h
   04A7 3E 90              2418 	ld	a,#0x90
   04A9 12                 2419 	ld	(de),a
   04AA 13                 2420 	inc	de
   04AB 3E 01              2421 	ld	a,#0x01
   04AD 12                 2422 	ld	(de),a
                           2423 ;	game.c 402
                           2424 ;	genAssign (pointer)
   04AE 11 89 1A           2425 	ld	de,#_dog2
   04B1 3E 08              2426 	ld	a,#0x08
   04B3 12                 2427 	ld	(de),a
                           2428 ;	game.c 403
                           2429 ;	genPlus
                           2430 ;	genPlusIncr
   04B4 21 8A 1A           2431 	ld	hl,#_dog2 + 1
                           2432 ;	genAssign (pointer)
   04B7 36 18              2433 	ld	(hl),#0x18
                           2434 ;	game.c 404
                           2435 ;	genPlus
                           2436 ;	genPlusIncr
   04B9 23                 2437 	inc	hl
                           2438 ;	genAssign (pointer)
   04BA 36 06              2439 	ld	(hl),#0x06
                           2440 ;	game.c 405
                           2441 ;	genPlus
                           2442 ;	genPlusIncr
   04BC 23                 2443 	inc	hl
                           2444 ;	genAssign (pointer)
   04BD 36 07              2445 	ld	(hl),#0x07
                           2446 ;	game.c 406
                           2447 ;	genPlus
                           2448 ;	genPlusIncr
   04BF 23                 2449 	inc	hl
                           2450 ;	genAssign (pointer)
   04C0 36 08              2451 	ld	(hl),#0x08
                           2452 ;	game.c 407
                           2453 ;	genPlus
                           2454 ;	genPlusIncr
   04C2 23                 2455 	inc	hl
                           2456 ;	genAssign (pointer)
   04C3 36 13              2457 	ld	(hl),#0x13
                           2458 ;	game.c 408
                           2459 ;	genPlus
                           2460 ;	genPlusIncr
   04C5 23                 2461 	inc	hl
                           2462 ;	genAssign (pointer)
   04C6 36 14              2463 	ld	(hl),#0x14
                           2464 ;	game.c 409
                           2465 ;	genPlus
                           2466 ;	genPlusIncr
   04C8 23                 2467 	inc	hl
                           2468 ;	genAssign (pointer)
   04C9 36 15              2469 	ld	(hl),#0x15
                           2470 ;	game.c 410
                           2471 ;	genPlus
                           2472 ;	genPlusIncr
   04CB 23                 2473 	inc	hl
                           2474 ;	genAssign (pointer)
   04CC 36 00              2475 	ld	(hl),#0x00
                           2476 ;	game.c 411
                           2477 ;	genPlus
                           2478 ;	genPlusIncr
   04CE 23                 2479 	inc	hl
                           2480 ;	genAssign (pointer)
   04CF 36 00              2481 	ld	(hl),#0x00
                           2482 ;	game.c 412
                           2483 ;	genPlus
                           2484 ;	genPlusIncr
   04D1 23                 2485 	inc	hl
   04D2 23                 2486 	inc	hl
                           2487 ;	genAssign (pointer)
   04D3 36 03              2488 	ld	(hl),#0x03
                           2489 ;	game.c 413
                           2490 ;	genPlus
                           2491 ;	genPlusIncr
   04D5 23                 2492 	inc	hl
                           2493 ;	genAssign (pointer)
   04D6 5D                 2494 	ld	e,l
   04D7 54                 2495 	ld	d,h
   04D8 3E 90              2496 	ld	a,#0x90
   04DA 12                 2497 	ld	(de),a
   04DB 13                 2498 	inc	de
   04DC 3E 01              2499 	ld	a,#0x01
   04DE 12                 2500 	ld	(de),a
                           2501 ;	game.c 415
                           2502 ;	genAssign (pointer)
   04DF 11 97 1A           2503 	ld	de,#_cat
   04E2 3E 10              2504 	ld	a,#0x10
   04E4 12                 2505 	ld	(de),a
                           2506 ;	game.c 416
                           2507 ;	genPlus
                           2508 ;	genPlusIncr
   04E5 21 98 1A           2509 	ld	hl,#_cat + 1
                           2510 ;	genAssign (pointer)
   04E8 36 18              2511 	ld	(hl),#0x18
                           2512 ;	game.c 417
                           2513 ;	genPlus
                           2514 ;	genPlusIncr
   04EA 23                 2515 	inc	hl
                           2516 ;	genAssign (pointer)
   04EB 36 09              2517 	ld	(hl),#0x09
                           2518 ;	game.c 418
                           2519 ;	genPlus
                           2520 ;	genPlusIncr
   04ED 23                 2521 	inc	hl
                           2522 ;	genAssign (pointer)
   04EE 36 0A              2523 	ld	(hl),#0x0A
                           2524 ;	game.c 419
                           2525 ;	genPlus
                           2526 ;	genPlusIncr
   04F0 23                 2527 	inc	hl
                           2528 ;	genAssign (pointer)
   04F1 36 05              2529 	ld	(hl),#0x05
                           2530 ;	game.c 420
                           2531 ;	genPlus
                           2532 ;	genPlusIncr
   04F3 23                 2533 	inc	hl
                           2534 ;	genAssign (pointer)
   04F4 36 13              2535 	ld	(hl),#0x13
                           2536 ;	game.c 421
                           2537 ;	genPlus
                           2538 ;	genPlusIncr
   04F6 23                 2539 	inc	hl
                           2540 ;	genAssign (pointer)
   04F7 36 14              2541 	ld	(hl),#0x14
                           2542 ;	game.c 422
                           2543 ;	genPlus
                           2544 ;	genPlusIncr
   04F9 23                 2545 	inc	hl
                           2546 ;	genAssign (pointer)
   04FA 36 15              2547 	ld	(hl),#0x15
                           2548 ;	game.c 423
                           2549 ;	genPlus
                           2550 ;	genPlusIncr
   04FC 23                 2551 	inc	hl
                           2552 ;	genAssign (pointer)
   04FD 36 00              2553 	ld	(hl),#0x00
                           2554 ;	game.c 424
                           2555 ;	genPlus
                           2556 ;	genPlusIncr
   04FF 23                 2557 	inc	hl
                           2558 ;	genAssign (pointer)
   0500 36 00              2559 	ld	(hl),#0x00
                           2560 ;	game.c 425
                           2561 ;	genPlus
                           2562 ;	genPlusIncr
   0502 23                 2563 	inc	hl
   0503 23                 2564 	inc	hl
                           2565 ;	genAssign (pointer)
   0504 36 04              2566 	ld	(hl),#0x04
                           2567 ;	game.c 426
                           2568 ;	genPlus
                           2569 ;	genPlusIncr
   0506 23                 2570 	inc	hl
                           2571 ;	genAssign (pointer)
   0507 5D                 2572 	ld	e,l
   0508 54                 2573 	ld	d,h
   0509 3E 90              2574 	ld	a,#0x90
   050B 12                 2575 	ld	(de),a
   050C 13                 2576 	inc	de
   050D 3E 01              2577 	ld	a,#0x01
   050F 12                 2578 	ld	(de),a
                           2579 ;	game.c 429
                           2580 ;	genIpush
                           2581 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0510 21 6D 1A           2582 	ld	hl,#_bunny
   0513 E5                 2583 	push	hl
                           2584 ;	genCall
   0514 CD AD 1A           2585 	call	_set_character_sprite
   0517 E8 02              2586 	lda	sp,2(sp)
                           2587 ;	game.c 430
                           2588 ;	genIpush
                           2589 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0519 21 7B 1A           2590 	ld	hl,#_dog1
   051C E5                 2591 	push	hl
                           2592 ;	genCall
   051D CD AD 1A           2593 	call	_set_character_sprite
   0520 E8 02              2594 	lda	sp,2(sp)
                           2595 ;	game.c 431
                           2596 ;	genIpush
                           2597 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0522 21 89 1A           2598 	ld	hl,#_dog2
   0525 E5                 2599 	push	hl
                           2600 ;	genCall
   0526 CD AD 1A           2601 	call	_set_character_sprite
   0529 E8 02              2602 	lda	sp,2(sp)
                           2603 ;	game.c 432
                           2604 ;	genIpush
                           2605 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   052B 21 97 1A           2606 	ld	hl,#_cat
   052E E5                 2607 	push	hl
                           2608 ;	genCall
   052F CD AD 1A           2609 	call	_set_character_sprite
   0532 E8 02              2610 	lda	sp,2(sp)
                           2611 ;	genLabel
   0534                    2612 00101$:
                           2613 ;	genEndFunction
                           2614 	
   0534 C9                 2615 	ret
   0535                    2616 ___instanciate_chars_end:
                           2617 ;	game.c 436
                           2618 ;	genLabel
                           2619 ;	genFunction
                           2620 ;	---------------------------------
                           2621 ; Function got_key
                           2622 ; ---------------------------------
   0535                    2623 ___got_key_start:
   0535                    2624 _got_key:
   0535 E8 FC              2625 	lda	sp,-4(sp)
                           2626 ;	game.c 437
                           2627 ;	genAssign
                           2628 ;	AOP_HL for _player
   0537 21 B3 1A           2629 	ld	hl,#_player
   053A 4E                 2630 	ld	c,(hl)
   053B 23                 2631 	inc	hl
   053C 46                 2632 	ld	b,(hl)
                           2633 ;	genPlus
                           2634 ;	genPlusIncr
   053D 03                 2635 	inc	bc
                           2636 ;	genPointerGet
   053E 0A                 2637 	ld	a,(bc)
   053F 4F                 2638 	ld	c,a
                           2639 ;	genAssign
                           2640 ;	AOP_HL for _player
                           2641 ;	AOP_STK for _got_key_sloc0_1_0
   0540 2B                 2642 	dec	hl
   0541 2A                 2643 	ld	a,(hl+)
   0542 5E                 2644 	ld	e,(hl)
   0543 F8 00              2645 	lda	hl,0(sp)
   0545 22                 2646 	ld	(hl+),a
   0546 73                 2647 	ld	(hl),e
                           2648 ;	genPointerGet
                           2649 ;	AOP_STK for _got_key_sloc0_1_0
   0547 2B                 2650 	dec	hl
   0548 5E                 2651 	ld	e,(hl)
   0549 23                 2652 	inc	hl
   054A 56                 2653 	ld	d,(hl)
   054B 1A                 2654 	ld	a,(de)
   054C 47                 2655 	ld	b,a
                           2656 ;	genIpush
                           2657 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054D 79                 2658 	ld	a,c
   054E F5                 2659 	push	af
   054F 33                 2660 	inc	sp
                           2661 ;	genIpush
   0550 78                 2662 	ld	a,b
   0551 F5                 2663 	push	af
   0552 33                 2664 	inc	sp
                           2665 ;	genCall
   0553 CD 6B 0D           2666 	call	_get_player_map_position
   0556 42                 2667 	ld	b,d
   0557 4B                 2668 	ld	c,e
   0558 E8 02              2669 	lda	sp,2(sp)
                           2670 ;	genAssign
                           2671 ;	(registers are the same)
                           2672 ;	game.c 440
                           2673 ;	genPlus
                           2674 ;	Can't optimise plus by inc, falling back to the normal way
   055A 21 05 19           2675 	ld	hl,#_map
   055D 09                 2676 	add	hl,bc
   055E 4D                 2677 	ld	c,l
   055F 44                 2678 	ld	b,h
                           2679 ;	genPointerGet
   0560 0A                 2680 	ld	a,(bc)
   0561 4F                 2681 	ld	c,a
                           2682 ;	genCast
                           2683 ; Removed redundent load
   0562 06 00              2684 	ld	b,#0x00
                           2685 ;	genCmpEq
                           2686 ; genCmpEq: left 2, right 2, result 0
   0564 79                 2687 	ld	a,c
   0565 FE 2E              2688 	cp	a,#0x2E
   0567 C2 71 05           2689 	jp	nz,00116$
   056A 78                 2690 	ld	a,b
   056B B7                 2691 	or	a,a
   056C C2 DF 05           2692 	jp	nz,00109$
   056F 18 03              2693 	jr	00117$
   0571                    2694 00116$:
   0571 C3 DF 05           2695 	jp	00109$
   0574                    2696 00117$:
                           2697 ;	game.c 445
                           2698 ;	genAssign
                           2699 ;	AOP_STK for _got_key_map_position_2_2
   0574 F8 02              2700 	lda	hl,2(sp)
   0576 36 68              2701 	ld	(hl),#0x68
   0578 23                 2702 	inc	hl
   0579 36 01              2703 	ld	(hl),#0x01
                           2704 ;	game.c 446
                           2705 ;	genLabel
   057B                    2706 00104$:
                           2707 ;	genCmpEq
                           2708 ;	AOP_STK for _got_key_map_position_2_2
                           2709 ; genCmpEq: left 2, right 2, result 0
   057B F8 02              2710 	lda	hl,2(sp)
   057D 2A                 2711 	ld	a,(hl+)
   057E B6                 2712 	or	a,(hl)
   057F CA CE 05           2713 	jp	z,00106$
   0582                    2714 00118$:
                           2715 ;	game.c 447
                           2716 ;	genMinus
                           2717 ;	AOP_STK for _got_key_map_position_2_2
   0582 F8 02              2718 	lda	hl,2(sp)
   0584 5E                 2719 	ld	e,(hl)
   0585 23                 2720 	inc	hl
   0586 56                 2721 	ld	d,(hl)
   0587 1B                 2722 	dec	de
   0588 2B                 2723 	dec	hl
   0589 73                 2724 	ld	(hl),e
   058A 23                 2725 	inc	hl
   058B 72                 2726 	ld	(hl),d
                           2727 ;	game.c 449
                           2728 ;	genPlus
                           2729 ;	AOP_STK for _got_key_map_position_2_2
                           2730 ;	AOP_STK for _got_key_sloc0_1_0
                           2731 ;	Can't optimise plus by inc, falling back to the normal way
   058C 11 05 19           2732 	ld	de,#_map
   058F 2B                 2733 	dec	hl
   0590 2A                 2734 	ld	a,(hl+)
   0591 66                 2735 	ld	h,(hl)
   0592 6F                 2736 	ld	l,a
   0593 19                 2737 	add	hl,de
   0594 7D                 2738 	ld	a,l
   0595 54                 2739 	ld	d,h
   0596 F8 00              2740 	lda	hl,0(sp)
                           2741 ;	genPointerGet
                           2742 ;	AOP_STK for _got_key_sloc0_1_0
   0598 22                 2743 	ld	(hl+),a
   0599 72                 2744 	ld	(hl),d
   059A 5F                 2745 	ld	e,a
   059B 1A                 2746 	ld	a,(de)
   059C 4F                 2747 	ld	c,a
                           2748 ;	genCast
                           2749 ; Removed redundent load
   059D 06 00              2750 	ld	b,#0x00
                           2751 ;	genCmpEq
                           2752 ; genCmpEq: left 2, right 2, result 0
   059F 79                 2753 	ld	a,c
   05A0 FE 29              2754 	cp	a,#0x29
   05A2 C2 AA 05           2755 	jp	nz,00119$
   05A5 78                 2756 	ld	a,b
   05A6 B7                 2757 	or	a,a
   05A7 CA B8 05           2758 	jp	z,00101$
   05AA                    2759 00119$:
                           2760 ;	genCmpEq
                           2761 ; genCmpEq: left 2, right 2, result 0
   05AA 79                 2762 	ld	a,c
   05AB FE 2E              2763 	cp	a,#0x2E
   05AD C2 B5 05           2764 	jp	nz,00120$
   05B0 78                 2765 	ld	a,b
   05B1 B7                 2766 	or	a,a
   05B2 CA C3 05           2767 	jp	z,00102$
   05B5                    2768 00120$:
                           2769 ;	genGoto
   05B5 C3 7B 05           2770 	jp	00104$
                           2771 ;	game.c 451
                           2772 ;	genLabel
   05B8                    2773 00101$:
                           2774 ;	genAssign (pointer)
                           2775 ;	AOP_STK for _got_key_sloc0_1_0
   05B8 F8 00              2776 	lda	hl,0(sp)
   05BA 5E                 2777 	ld	e,(hl)
   05BB 23                 2778 	inc	hl
   05BC 56                 2779 	ld	d,(hl)
   05BD 3E 2A              2780 	ld	a,#0x2A
   05BF 12                 2781 	ld	(de),a
                           2782 ;	game.c 452
                           2783 ;	genGoto
   05C0 C3 7B 05           2784 	jp	00104$
                           2785 ;	game.c 454
                           2786 ;	genLabel
   05C3                    2787 00102$:
                           2788 ;	genAssign (pointer)
                           2789 ;	AOP_STK for _got_key_sloc0_1_0
   05C3 F8 00              2790 	lda	hl,0(sp)
   05C5 5E                 2791 	ld	e,(hl)
   05C6 23                 2792 	inc	hl
   05C7 56                 2793 	ld	d,(hl)
   05C8 3E 09              2794 	ld	a,#0x09
   05CA 12                 2795 	ld	(de),a
                           2796 ;	game.c 457
                           2797 ;	genGoto
   05CB C3 7B 05           2798 	jp	00104$
                           2799 ;	genLabel
   05CE                    2800 00106$:
                           2801 ;	game.c 459
                           2802 ;	genIpush
                           2803 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05CE 21 05 19           2804 	ld	hl,#_map
   05D1 E5                 2805 	push	hl
                           2806 ;	genIpush
   05D2 21 14 12           2807 	ld	hl,#0x1214
   05D5 E5                 2808 	push	hl
                           2809 ;	genIpush
   05D6 21 00 00           2810 	ld	hl,#0x0000
   05D9 E5                 2811 	push	hl
                           2812 ;	genCall
   05DA CD 00 00           2813 	call	_set_bkg_tiles
   05DD E8 06              2814 	lda	sp,6(sp)
                           2815 ;	genLabel
   05DF                    2816 00109$:
                           2817 ;	genEndFunction
   05DF E8 04              2818 	lda	sp,4(sp)
   05E1 C9                 2819 	ret
   05E2                    2820 ___got_key_end:
                           2821 ;	game.c 463
                           2822 ;	genLabel
                           2823 ;	genFunction
                           2824 ;	---------------------------------
                           2825 ; Function got_door
                           2826 ; ---------------------------------
   05E2                    2827 ___got_door_start:
   05E2                    2828 _got_door:
   05E2 E8 FE              2829 	lda	sp,-2(sp)
                           2830 ;	game.c 464
                           2831 ;	genAssign
                           2832 ;	AOP_HL for _player
   05E4 21 B3 1A           2833 	ld	hl,#_player
   05E7 4E                 2834 	ld	c,(hl)
   05E8 23                 2835 	inc	hl
   05E9 46                 2836 	ld	b,(hl)
                           2837 ;	genPlus
                           2838 ;	genPlusIncr
   05EA 03                 2839 	inc	bc
                           2840 ;	genPointerGet
   05EB 0A                 2841 	ld	a,(bc)
   05EC 4F                 2842 	ld	c,a
                           2843 ;	genAssign
                           2844 ;	AOP_HL for _player
                           2845 ;	AOP_STK for _got_door_sloc0_1_0
   05ED 2B                 2846 	dec	hl
   05EE 2A                 2847 	ld	a,(hl+)
   05EF 5E                 2848 	ld	e,(hl)
   05F0 F8 00              2849 	lda	hl,0(sp)
   05F2 22                 2850 	ld	(hl+),a
   05F3 73                 2851 	ld	(hl),e
                           2852 ;	genPointerGet
                           2853 ;	AOP_STK for _got_door_sloc0_1_0
   05F4 2B                 2854 	dec	hl
   05F5 5E                 2855 	ld	e,(hl)
   05F6 23                 2856 	inc	hl
   05F7 56                 2857 	ld	d,(hl)
   05F8 1A                 2858 	ld	a,(de)
   05F9 47                 2859 	ld	b,a
                           2860 ;	genIpush
                           2861 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05FA 79                 2862 	ld	a,c
   05FB F5                 2863 	push	af
   05FC 33                 2864 	inc	sp
                           2865 ;	genIpush
   05FD 78                 2866 	ld	a,b
   05FE F5                 2867 	push	af
   05FF 33                 2868 	inc	sp
                           2869 ;	genCall
   0600 CD 6B 0D           2870 	call	_get_player_map_position
   0603 42                 2871 	ld	b,d
   0604 4B                 2872 	ld	c,e
   0605 E8 02              2873 	lda	sp,2(sp)
                           2874 ;	genAssign
                           2875 ;	(registers are the same)
                           2876 ;	game.c 466
                           2877 ;	genPlus
                           2878 ;	Can't optimise plus by inc, falling back to the normal way
   0607 21 05 19           2879 	ld	hl,#_map
   060A 09                 2880 	add	hl,bc
   060B 4D                 2881 	ld	c,l
   060C 44                 2882 	ld	b,h
                           2883 ;	genPointerGet
   060D 0A                 2884 	ld	a,(bc)
   060E 4F                 2885 	ld	c,a
                           2886 ;	genCast
                           2887 ; Removed redundent load
   060F 06 00              2888 	ld	b,#0x00
                           2889 ;	genCmpEq
                           2890 ; genCmpEq: left 2, right 2, result 0
   0611 79                 2891 	ld	a,c
   0612 FE 65              2892 	cp	a,#0x65
   0614 C2 1C 06           2893 	jp	nz,00144$
   0617 78                 2894 	ld	a,b
   0618 B7                 2895 	or	a,a
   0619 CA F0 06           2896 	jp	z,00101$
   061C                    2897 00144$:
                           2898 ;	genCmpEq
                           2899 ; genCmpEq: left 2, right 2, result 0
   061C 79                 2900 	ld	a,c
   061D FE 66              2901 	cp	a,#0x66
   061F C2 27 06           2902 	jp	nz,00145$
   0622 78                 2903 	ld	a,b
   0623 B7                 2904 	or	a,a
   0624 CA FB 06           2905 	jp	z,00102$
   0627                    2906 00145$:
                           2907 ;	genCmpEq
                           2908 ; genCmpEq: left 2, right 2, result 0
   0627 79                 2909 	ld	a,c
   0628 FE 67              2910 	cp	a,#0x67
   062A C2 32 06           2911 	jp	nz,00146$
   062D 78                 2912 	ld	a,b
   062E B7                 2913 	or	a,a
   062F CA 06 07           2914 	jp	z,00103$
   0632                    2915 00146$:
                           2916 ;	genCmpEq
                           2917 ; genCmpEq: left 2, right 2, result 0
   0632 79                 2918 	ld	a,c
   0633 FE 68              2919 	cp	a,#0x68
   0635 C2 3D 06           2920 	jp	nz,00147$
   0638 78                 2921 	ld	a,b
   0639 B7                 2922 	or	a,a
   063A CA 11 07           2923 	jp	z,00104$
   063D                    2924 00147$:
                           2925 ;	genCmpEq
                           2926 ; genCmpEq: left 2, right 2, result 0
   063D 79                 2927 	ld	a,c
   063E FE 69              2928 	cp	a,#0x69
   0640 C2 48 06           2929 	jp	nz,00148$
   0643 78                 2930 	ld	a,b
   0644 B7                 2931 	or	a,a
   0645 CA 1C 07           2932 	jp	z,00105$
   0648                    2933 00148$:
                           2934 ;	genCmpEq
                           2935 ; genCmpEq: left 2, right 2, result 0
   0648 79                 2936 	ld	a,c
   0649 FE 6A              2937 	cp	a,#0x6A
   064B C2 53 06           2938 	jp	nz,00149$
   064E 78                 2939 	ld	a,b
   064F B7                 2940 	or	a,a
   0650 CA 27 07           2941 	jp	z,00106$
   0653                    2942 00149$:
                           2943 ;	genCmpEq
                           2944 ; genCmpEq: left 2, right 2, result 0
   0653 79                 2945 	ld	a,c
   0654 FE 6B              2946 	cp	a,#0x6B
   0656 C2 5E 06           2947 	jp	nz,00150$
   0659 78                 2948 	ld	a,b
   065A B7                 2949 	or	a,a
   065B CA 32 07           2950 	jp	z,00107$
   065E                    2951 00150$:
                           2952 ;	genCmpEq
                           2953 ; genCmpEq: left 2, right 2, result 0
   065E 79                 2954 	ld	a,c
   065F FE 6C              2955 	cp	a,#0x6C
   0661 C2 69 06           2956 	jp	nz,00151$
   0664 78                 2957 	ld	a,b
   0665 B7                 2958 	or	a,a
   0666 CA 3D 07           2959 	jp	z,00108$
   0669                    2960 00151$:
                           2961 ;	genCmpEq
                           2962 ; genCmpEq: left 2, right 2, result 0
   0669 79                 2963 	ld	a,c
   066A FE 6D              2964 	cp	a,#0x6D
   066C C2 74 06           2965 	jp	nz,00152$
   066F 78                 2966 	ld	a,b
   0670 B7                 2967 	or	a,a
   0671 CA 48 07           2968 	jp	z,00109$
   0674                    2969 00152$:
                           2970 ;	genCmpEq
                           2971 ; genCmpEq: left 2, right 2, result 0
   0674 79                 2972 	ld	a,c
   0675 FE 6E              2973 	cp	a,#0x6E
   0677 C2 7F 06           2974 	jp	nz,00153$
   067A 78                 2975 	ld	a,b
   067B B7                 2976 	or	a,a
   067C CA 53 07           2977 	jp	z,00110$
   067F                    2978 00153$:
                           2979 ;	genCmpEq
                           2980 ; genCmpEq: left 2, right 2, result 0
   067F 79                 2981 	ld	a,c
   0680 FE 6F              2982 	cp	a,#0x6F
   0682 C2 8A 06           2983 	jp	nz,00154$
   0685 78                 2984 	ld	a,b
   0686 B7                 2985 	or	a,a
   0687 CA 5E 07           2986 	jp	z,00111$
   068A                    2987 00154$:
                           2988 ;	genCmpEq
                           2989 ; genCmpEq: left 2, right 2, result 0
   068A 79                 2990 	ld	a,c
   068B FE 70              2991 	cp	a,#0x70
   068D C2 95 06           2992 	jp	nz,00155$
   0690 78                 2993 	ld	a,b
   0691 B7                 2994 	or	a,a
   0692 CA 69 07           2995 	jp	z,00112$
   0695                    2996 00155$:
                           2997 ;	genCmpEq
                           2998 ; genCmpEq: left 2, right 2, result 0
   0695 79                 2999 	ld	a,c
   0696 FE 71              3000 	cp	a,#0x71
   0698 C2 A0 06           3001 	jp	nz,00156$
   069B 78                 3002 	ld	a,b
   069C B7                 3003 	or	a,a
   069D CA 74 07           3004 	jp	z,00113$
   06A0                    3005 00156$:
                           3006 ;	genCmpEq
                           3007 ; genCmpEq: left 2, right 2, result 0
   06A0 79                 3008 	ld	a,c
   06A1 FE 72              3009 	cp	a,#0x72
   06A3 C2 AB 06           3010 	jp	nz,00157$
   06A6 78                 3011 	ld	a,b
   06A7 B7                 3012 	or	a,a
   06A8 CA 7F 07           3013 	jp	z,00114$
   06AB                    3014 00157$:
                           3015 ;	genCmpEq
                           3016 ; genCmpEq: left 2, right 2, result 0
   06AB 79                 3017 	ld	a,c
   06AC FE 73              3018 	cp	a,#0x73
   06AE C2 B6 06           3019 	jp	nz,00158$
   06B1 78                 3020 	ld	a,b
   06B2 B7                 3021 	or	a,a
   06B3 CA 8A 07           3022 	jp	z,00115$
   06B6                    3023 00158$:
                           3024 ;	genCmpEq
                           3025 ; genCmpEq: left 2, right 2, result 0
   06B6 79                 3026 	ld	a,c
   06B7 FE 74              3027 	cp	a,#0x74
   06B9 C2 C1 06           3028 	jp	nz,00159$
   06BC 78                 3029 	ld	a,b
   06BD B7                 3030 	or	a,a
   06BE CA 95 07           3031 	jp	z,00116$
   06C1                    3032 00159$:
                           3033 ;	genCmpEq
                           3034 ; genCmpEq: left 2, right 2, result 0
   06C1 79                 3035 	ld	a,c
   06C2 FE 75              3036 	cp	a,#0x75
   06C4 C2 CC 06           3037 	jp	nz,00160$
   06C7 78                 3038 	ld	a,b
   06C8 B7                 3039 	or	a,a
   06C9 CA A0 07           3040 	jp	z,00117$
   06CC                    3041 00160$:
                           3042 ;	genCmpEq
                           3043 ; genCmpEq: left 2, right 2, result 0
   06CC 79                 3044 	ld	a,c
   06CD FE 76              3045 	cp	a,#0x76
   06CF C2 D7 06           3046 	jp	nz,00161$
   06D2 78                 3047 	ld	a,b
   06D3 B7                 3048 	or	a,a
   06D4 CA AB 07           3049 	jp	z,00118$
   06D7                    3050 00161$:
                           3051 ;	genCmpEq
                           3052 ; genCmpEq: left 2, right 2, result 0
   06D7 79                 3053 	ld	a,c
   06D8 FE 77              3054 	cp	a,#0x77
   06DA C2 E2 06           3055 	jp	nz,00162$
   06DD 78                 3056 	ld	a,b
   06DE B7                 3057 	or	a,a
   06DF CA B6 07           3058 	jp	z,00119$
   06E2                    3059 00162$:
                           3060 ;	genCmpEq
                           3061 ; genCmpEq: left 2, right 2, result 0
   06E2 79                 3062 	ld	a,c
   06E3 FE 78              3063 	cp	a,#0x78
   06E5 C2 ED 06           3064 	jp	nz,00163$
   06E8 78                 3065 	ld	a,b
   06E9 B7                 3066 	or	a,a
   06EA CA C1 07           3067 	jp	z,00120$
   06ED                    3068 00163$:
                           3069 ;	genGoto
   06ED C3 C9 07           3070 	jp	00122$
                           3071 ;	game.c 468
                           3072 ;	genLabel
   06F0                    3073 00101$:
                           3074 ;	genAssign
                           3075 ;	AOP_HL for _current_map
   06F0 21 04 19           3076 	ld	hl,#_current_map
   06F3 36 01              3077 	ld	(hl),#0x01
                           3078 ;	game.c 469
                           3079 ;	genCall
                           3080 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 CD 34 04           3081 	call	_map_init
                           3082 ;	game.c 470
                           3083 ;	genGoto
   06F8 C3 C9 07           3084 	jp	00122$
                           3085 ;	game.c 472
                           3086 ;	genLabel
   06FB                    3087 00102$:
                           3088 ;	genAssign
                           3089 ;	AOP_HL for _current_map
   06FB 21 04 19           3090 	ld	hl,#_current_map
   06FE 36 02              3091 	ld	(hl),#0x02
                           3092 ;	game.c 473
                           3093 ;	genCall
                           3094 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0700 CD 34 04           3095 	call	_map_init
                           3096 ;	game.c 474
                           3097 ;	genGoto
   0703 C3 C9 07           3098 	jp	00122$
                           3099 ;	game.c 476
                           3100 ;	genLabel
   0706                    3101 00103$:
                           3102 ;	genAssign
                           3103 ;	AOP_HL for _current_map
   0706 21 04 19           3104 	ld	hl,#_current_map
   0709 36 03              3105 	ld	(hl),#0x03
                           3106 ;	game.c 477
                           3107 ;	genCall
                           3108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   070B CD 34 04           3109 	call	_map_init
                           3110 ;	game.c 478
                           3111 ;	genGoto
   070E C3 C9 07           3112 	jp	00122$
                           3113 ;	game.c 480
                           3114 ;	genLabel
   0711                    3115 00104$:
                           3116 ;	genAssign
                           3117 ;	AOP_HL for _current_map
   0711 21 04 19           3118 	ld	hl,#_current_map
   0714 36 04              3119 	ld	(hl),#0x04
                           3120 ;	game.c 481
                           3121 ;	genCall
                           3122 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0716 CD 34 04           3123 	call	_map_init
                           3124 ;	game.c 482
                           3125 ;	genGoto
   0719 C3 C9 07           3126 	jp	00122$
                           3127 ;	game.c 484
                           3128 ;	genLabel
   071C                    3129 00105$:
                           3130 ;	genAssign
                           3131 ;	AOP_HL for _current_map
   071C 21 04 19           3132 	ld	hl,#_current_map
   071F 36 05              3133 	ld	(hl),#0x05
                           3134 ;	game.c 485
                           3135 ;	genCall
                           3136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0721 CD 34 04           3137 	call	_map_init
                           3138 ;	game.c 486
                           3139 ;	genGoto
   0724 C3 C9 07           3140 	jp	00122$
                           3141 ;	game.c 488
                           3142 ;	genLabel
   0727                    3143 00106$:
                           3144 ;	genAssign
                           3145 ;	AOP_HL for _current_map
   0727 21 04 19           3146 	ld	hl,#_current_map
   072A 36 06              3147 	ld	(hl),#0x06
                           3148 ;	game.c 489
                           3149 ;	genCall
                           3150 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   072C CD 34 04           3151 	call	_map_init
                           3152 ;	game.c 490
                           3153 ;	genGoto
   072F C3 C9 07           3154 	jp	00122$
                           3155 ;	game.c 492
                           3156 ;	genLabel
   0732                    3157 00107$:
                           3158 ;	genAssign
                           3159 ;	AOP_HL for _current_map
   0732 21 04 19           3160 	ld	hl,#_current_map
   0735 36 07              3161 	ld	(hl),#0x07
                           3162 ;	game.c 493
                           3163 ;	genCall
                           3164 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0737 CD 34 04           3165 	call	_map_init
                           3166 ;	game.c 494
                           3167 ;	genGoto
   073A C3 C9 07           3168 	jp	00122$
                           3169 ;	game.c 496
                           3170 ;	genLabel
   073D                    3171 00108$:
                           3172 ;	genAssign
                           3173 ;	AOP_HL for _current_map
   073D 21 04 19           3174 	ld	hl,#_current_map
   0740 36 08              3175 	ld	(hl),#0x08
                           3176 ;	game.c 497
                           3177 ;	genCall
                           3178 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0742 CD 34 04           3179 	call	_map_init
                           3180 ;	game.c 498
                           3181 ;	genGoto
   0745 C3 C9 07           3182 	jp	00122$
                           3183 ;	game.c 500
                           3184 ;	genLabel
   0748                    3185 00109$:
                           3186 ;	genAssign
                           3187 ;	AOP_HL for _current_map
   0748 21 04 19           3188 	ld	hl,#_current_map
   074B 36 09              3189 	ld	(hl),#0x09
                           3190 ;	game.c 501
                           3191 ;	genCall
                           3192 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   074D CD 34 04           3193 	call	_map_init
                           3194 ;	game.c 502
                           3195 ;	genGoto
   0750 C3 C9 07           3196 	jp	00122$
                           3197 ;	game.c 504
                           3198 ;	genLabel
   0753                    3199 00110$:
                           3200 ;	genAssign
                           3201 ;	AOP_HL for _current_map
   0753 21 04 19           3202 	ld	hl,#_current_map
   0756 36 0A              3203 	ld	(hl),#0x0A
                           3204 ;	game.c 505
                           3205 ;	genCall
                           3206 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0758 CD 34 04           3207 	call	_map_init
                           3208 ;	game.c 506
                           3209 ;	genGoto
   075B C3 C9 07           3210 	jp	00122$
                           3211 ;	game.c 508
                           3212 ;	genLabel
   075E                    3213 00111$:
                           3214 ;	genAssign
                           3215 ;	AOP_HL for _current_map
   075E 21 04 19           3216 	ld	hl,#_current_map
   0761 36 0B              3217 	ld	(hl),#0x0B
                           3218 ;	game.c 509
                           3219 ;	genCall
                           3220 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0763 CD 34 04           3221 	call	_map_init
                           3222 ;	game.c 510
                           3223 ;	genGoto
   0766 C3 C9 07           3224 	jp	00122$
                           3225 ;	game.c 512
                           3226 ;	genLabel
   0769                    3227 00112$:
                           3228 ;	genAssign
                           3229 ;	AOP_HL for _current_map
   0769 21 04 19           3230 	ld	hl,#_current_map
   076C 36 0C              3231 	ld	(hl),#0x0C
                           3232 ;	game.c 513
                           3233 ;	genCall
                           3234 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076E CD 34 04           3235 	call	_map_init
                           3236 ;	game.c 514
                           3237 ;	genGoto
   0771 C3 C9 07           3238 	jp	00122$
                           3239 ;	game.c 516
                           3240 ;	genLabel
   0774                    3241 00113$:
                           3242 ;	genAssign
                           3243 ;	AOP_HL for _current_map
   0774 21 04 19           3244 	ld	hl,#_current_map
   0777 36 0D              3245 	ld	(hl),#0x0D
                           3246 ;	game.c 517
                           3247 ;	genCall
                           3248 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0779 CD 34 04           3249 	call	_map_init
                           3250 ;	game.c 518
                           3251 ;	genGoto
   077C C3 C9 07           3252 	jp	00122$
                           3253 ;	game.c 520
                           3254 ;	genLabel
   077F                    3255 00114$:
                           3256 ;	genAssign
                           3257 ;	AOP_HL for _current_map
   077F 21 04 19           3258 	ld	hl,#_current_map
   0782 36 0E              3259 	ld	(hl),#0x0E
                           3260 ;	game.c 521
                           3261 ;	genCall
                           3262 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0784 CD 34 04           3263 	call	_map_init
                           3264 ;	game.c 522
                           3265 ;	genGoto
   0787 C3 C9 07           3266 	jp	00122$
                           3267 ;	game.c 524
                           3268 ;	genLabel
   078A                    3269 00115$:
                           3270 ;	genAssign
                           3271 ;	AOP_HL for _current_map
   078A 21 04 19           3272 	ld	hl,#_current_map
   078D 36 0F              3273 	ld	(hl),#0x0F
                           3274 ;	game.c 525
                           3275 ;	genCall
                           3276 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078F CD 34 04           3277 	call	_map_init
                           3278 ;	game.c 526
                           3279 ;	genGoto
   0792 C3 C9 07           3280 	jp	00122$
                           3281 ;	game.c 528
                           3282 ;	genLabel
   0795                    3283 00116$:
                           3284 ;	genAssign
                           3285 ;	AOP_HL for _current_map
   0795 21 04 19           3286 	ld	hl,#_current_map
   0798 36 10              3287 	ld	(hl),#0x10
                           3288 ;	game.c 529
                           3289 ;	genCall
                           3290 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079A CD 34 04           3291 	call	_map_init
                           3292 ;	game.c 530
                           3293 ;	genGoto
   079D C3 C9 07           3294 	jp	00122$
                           3295 ;	game.c 532
                           3296 ;	genLabel
   07A0                    3297 00117$:
                           3298 ;	genAssign
                           3299 ;	AOP_HL for _current_map
   07A0 21 04 19           3300 	ld	hl,#_current_map
   07A3 36 11              3301 	ld	(hl),#0x11
                           3302 ;	game.c 533
                           3303 ;	genCall
                           3304 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07A5 CD 34 04           3305 	call	_map_init
                           3306 ;	game.c 534
                           3307 ;	genGoto
   07A8 C3 C9 07           3308 	jp	00122$
                           3309 ;	game.c 536
                           3310 ;	genLabel
   07AB                    3311 00118$:
                           3312 ;	genAssign
                           3313 ;	AOP_HL for _current_map
   07AB 21 04 19           3314 	ld	hl,#_current_map
   07AE 36 12              3315 	ld	(hl),#0x12
                           3316 ;	game.c 537
                           3317 ;	genCall
                           3318 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B0 CD 34 04           3319 	call	_map_init
                           3320 ;	game.c 538
                           3321 ;	genGoto
   07B3 C3 C9 07           3322 	jp	00122$
                           3323 ;	game.c 540
                           3324 ;	genLabel
   07B6                    3325 00119$:
                           3326 ;	genAssign
                           3327 ;	AOP_HL for _current_map
   07B6 21 04 19           3328 	ld	hl,#_current_map
   07B9 36 13              3329 	ld	(hl),#0x13
                           3330 ;	game.c 541
                           3331 ;	genCall
                           3332 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BB CD 34 04           3333 	call	_map_init
                           3334 ;	game.c 542
                           3335 ;	genGoto
   07BE C3 C9 07           3336 	jp	00122$
                           3337 ;	game.c 544
                           3338 ;	genLabel
   07C1                    3339 00120$:
                           3340 ;	genAssign
                           3341 ;	AOP_HL for _current_map
   07C1 21 04 19           3342 	ld	hl,#_current_map
   07C4 36 14              3343 	ld	(hl),#0x14
                           3344 ;	game.c 545
                           3345 ;	genCall
                           3346 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C6 CD 34 04           3347 	call	_map_init
                           3348 ;	game.c 547
                           3349 ;	genLabel
   07C9                    3350 00122$:
                           3351 ;	genEndFunction
   07C9 E8 02              3352 	lda	sp,2(sp)
   07CB C9                 3353 	ret
   07CC                    3354 ___got_door_end:
                           3355 ;	game.c 552
                           3356 ;	genLabel
                           3357 ;	genFunction
                           3358 ;	---------------------------------
                           3359 ; Function is_ded
                           3360 ; ---------------------------------
   07CC                    3361 ___is_ded_start:
   07CC                    3362 _is_ded:
   07CC E8 F7              3363 	lda	sp,-9(sp)
                           3364 ;	game.c 558
                           3365 ;	genAssign
                           3366 ;	AOP_STK for 
   07CE F8 0B              3367 	lda	hl,11(sp)
   07D0 4E                 3368 	ld	c,(hl)
   07D1 23                 3369 	inc	hl
   07D2 46                 3370 	ld	b,(hl)
                           3371 ;	genPointerGet
   07D3 59                 3372 	ld	e,c
   07D4 50                 3373 	ld	d,b
   07D5 1A                 3374 	ld	a,(de)
   07D6 4F                 3375 	ld	c,a
   07D7 13                 3376 	inc	de
   07D8 1A                 3377 	ld	a,(de)
   07D9 47                 3378 	ld	b,a
                           3379 ;	genPlus
                           3380 ;	AOP_STK for _is_ded_sloc0_1_0
                           3381 ;	genPlusIncr
                           3382 ;	Can't optimise plus by inc, falling back to the normal way
   07DA 21 09 00           3383 	ld	hl,#0x0009
   07DD 09                 3384 	add	hl,bc
   07DE 7D                 3385 	ld	a,l
   07DF 54                 3386 	ld	d,h
   07E0 F8 03              3387 	lda	hl,3(sp)
                           3388 ;	genPointerGet
                           3389 ;	AOP_STK for _is_ded_sloc0_1_0
   07E2 22                 3390 	ld	(hl+),a
   07E3 72                 3391 	ld	(hl),d
   07E4 5F                 3392 	ld	e,a
   07E5 1A                 3393 	ld	a,(de)
                           3394 ;	genIfx
   07E6 B7                 3395 	or	a,a
   07E7 CA 09 08           3396 	jp	z,00102$
                           3397 ;	genPlus
                           3398 ;	AOP_STK for _is_ded_sloc0_1_0
                           3399 ;	genPlusIncr
                           3400 ;	Can't optimise plus by inc, falling back to the normal way
   07EA 21 0B 00           3401 	ld	hl,#0x000B
   07ED 09                 3402 	add	hl,bc
   07EE 7D                 3403 	ld	a,l
   07EF 54                 3404 	ld	d,h
   07F0 F8 03              3405 	lda	hl,3(sp)
                           3406 ;	genPointerGet
                           3407 ;	AOP_STK for _is_ded_sloc0_1_0
                           3408 ;	AOP_STK for _is_ded_sloc1_1_0
   07F2 22                 3409 	ld	(hl+),a
   07F3 72                 3410 	ld	(hl),d
   07F4 5F                 3411 	ld	e,a
   07F5 1A                 3412 	ld	a,(de)
   07F6 2B                 3413 	dec	hl
   07F7 2B                 3414 	dec	hl
                           3415 ;	genCmpEq
                           3416 ;	AOP_STK for _is_ded_sloc1_1_0
                           3417 ; genCmpEq: left 1, right 1, result 0
   07F8 77                 3418 	ld      (hl),a
                           3419 ; Removed redundent load
   07F9 FE 01              3420 	cp	a,#0x01
   07FB C2 09 08           3421 	jp	nz,00102$
   07FE 18 03              3422 	jr	00112$
   0800                    3423 00111$:
   0800 C3 09 08           3424 	jp	00102$
   0803                    3425 00112$:
                           3426 ;	game.c 559
                           3427 ;	genRet
   0803 11 00 00           3428 	ld	de,#0x0000
   0806 C3 9E 08           3429 	jp	00106$
                           3430 ;	genLabel
   0809                    3431 00102$:
                           3432 ;	game.c 564
                           3433 ;	genPointerGet
                           3434 ;	AOP_STK for _is_ded_sloc1_1_0
   0809 0A                 3435 	ld	a,(bc)
   080A F8 02              3436 	lda	hl,2(sp)
   080C 77                 3437 	ld	(hl),a
                           3438 ;	genCast
                           3439 ;	AOP_STK for _is_ded_sloc1_1_0
                           3440 ;	AOP_STK for _is_ded_sloc0_1_0
   080D 2A                 3441 	ld	a,(hl+)
   080E 22                 3442 	ld	(hl+),a
   080F 36 00              3443 	ld	(hl),#0x00
                           3444 ;	genRightShift
                           3445 ;	AOP_STK for _is_ded_sloc0_1_0
                           3446 ;	AOP_STK for _is_ded_sloc2_1_0
   0811 2B                 3447 	dec	hl
   0812 7E                 3448 	ld	a,(hl)
   0813 F8 00              3449 	lda	hl,0(sp)
   0815 77                 3450 	ld	(hl),a
   0816 F8 04              3451 	lda	hl,4(sp)
   0818 7E                 3452 	ld	a,(hl)
   0819 F8 01              3453 	lda	hl,1(sp)
   081B 77                 3454 	ld	(hl),a
   081C CB 3E              3455 	srl	(hl)
   081E 2B                 3456 	dec	hl
   081F CB 1E              3457 	rr	(hl)
   0821 23                 3458 	inc	hl
   0822 CB 3E              3459 	srl	(hl)
   0824 2B                 3460 	dec	hl
   0825 CB 1E              3461 	rr	(hl)
   0827 23                 3462 	inc	hl
   0828 CB 3E              3463 	srl	(hl)
   082A 2B                 3464 	dec	hl
   082B CB 1E              3465 	rr	(hl)
                           3466 ;	genMinus
                           3467 ;	AOP_STK for _is_ded_sloc2_1_0
                           3468 ;	AOP_STK for _is_ded_sloc0_1_0
   082D 5E                 3469 	ld	e,(hl)
   082E 23                 3470 	inc	hl
   082F 56                 3471 	ld	d,(hl)
   0830 21 01 00           3472 	ld	hl,#0x0001
   0833 7B                 3473 	ld	a,e
   0834 95                 3474 	sub	a,l
   0835 5F                 3475 	ld	e,a
   0836 7A                 3476 	ld	a,d
   0837 9C                 3477 	sbc	a,h
   0838 F8 04              3478 	lda	hl,4(sp)
   083A 32                 3479 	ld      (hl-),a
   083B 73                 3480 	ld	(hl),e
                           3481 ;	genCast
                           3482 ;	AOP_STK for _is_ded_sloc0_1_0
                           3483 ;	AOP_STK for _is_ded__x_1_1
   083C 7E                 3484 	ld	a,(hl)
   083D F8 08              3485 	lda	hl,8(sp)
   083F 77                 3486 	ld	(hl),a
                           3487 ;	game.c 565
                           3488 ;	genPlus
                           3489 ;	genPlusIncr
   0840 03                 3490 	inc	bc
                           3491 ;	genPointerGet
   0841 0A                 3492 	ld	a,(bc)
   0842 4F                 3493 	ld	c,a
                           3494 ;	genCast
                           3495 ; Removed redundent load
   0843 06 00              3496 	ld	b,#0x00
                           3497 ;	genRightShift
   0845 CB 38              3498 	srl	b
   0847 CB 19              3499 	rr	c
   0849 CB 38              3500 	srl	b
   084B CB 19              3501 	rr	c
   084D CB 38              3502 	srl	b
   084F CB 19              3503 	rr	c
                           3504 ;	genMinus
   0851 0B                 3505 	dec	bc
   0852 0B                 3506 	dec	bc
                           3507 ;	genCast
                           3508 ;	AOP_STK for _is_ded__y_1_1
   0853 2B                 3509 	dec	hl
   0854 71                 3510 	ld	(hl),c
                           3511 ;	game.c 570
                           3512 ;	genCast
                           3513 ;	AOP_STK for _is_ded__x_1_1
                           3514 ;	AOP_STK for _is_ded_map_position_1_1
   0855 23                 3515 	inc	hl
   0856 7E                 3516 	ld	a,(hl)
   0857 F8 05              3517 	lda	hl,5(sp)
   0859 22                 3518 	ld	(hl+),a
   085A 36 00              3519 	ld	(hl),#0x00
                           3520 ;	game.c 571
                           3521 ;	genCast
                           3522 ;	AOP_STK for _is_ded__y_1_1
   085C 23                 3523 	inc	hl
   085D 4E                 3524 	ld	c,(hl)
   085E 06 00              3525 	ld	b,#0x00
                           3526 ;	genMult
   0860 59                 3527 	ld	e,c
   0861 50                 3528 	ld	d,b
   0862 6B                 3529 	ld	l,e
   0863 62                 3530 	ld	h,d
   0864 29                 3531 	add	hl,hl
   0865 29                 3532 	add	hl,hl
   0866 19                 3533 	add	hl,de
   0867 29                 3534 	add	hl,hl
   0868 29                 3535 	add	hl,hl
   0869 4D                 3536 	ld	c,l
   086A 44                 3537 	ld	b,h
                           3538 ;	genPlus
                           3539 ;	AOP_STK for _is_ded_map_position_1_1
                           3540 ;	Can't optimise plus by inc, falling back to the normal way
   086B F8 05              3541 	lda	hl,5(sp)
   086D 2A                 3542 	ld	a,(hl+)
   086E 66                 3543 	ld	h,(hl)
   086F 6F                 3544 	ld	l,a
   0870 09                 3545 	add	hl,bc
   0871 7D                 3546 	ld	a,l
   0872 54                 3547 	ld	d,h
   0873 F8 05              3548 	lda	hl,5(sp)
   0875 22                 3549 	ld	(hl+),a
   0876 72                 3550 	ld	(hl),d
                           3551 ;	game.c 573
                           3552 ;	genPlus
                           3553 ;	AOP_STK for _is_ded_map_position_1_1
                           3554 ;	Can't optimise plus by inc, falling back to the normal way
   0877 11 05 19           3555 	ld	de,#_map
   087A 2B                 3556 	dec	hl
   087B 2A                 3557 	ld	a,(hl+)
   087C 66                 3558 	ld	h,(hl)
   087D 6F                 3559 	ld	l,a
   087E 19                 3560 	add	hl,de
   087F 4D                 3561 	ld	c,l
   0880 44                 3562 	ld	b,h
                           3563 ;	genPointerGet
   0881 0A                 3564 	ld	a,(bc)
   0882 4F                 3565 	ld	c,a
                           3566 ;	genCast
                           3567 ; Removed redundent load
   0883 06 00              3568 	ld	b,#0x00
                           3569 ;	genCmpEq
                           3570 ; genCmpEq: left 2, right 2, result 0
   0885 79                 3571 	ld	a,c
   0886 FE 0B              3572 	cp	a,#0x0B
   0888 C2 92 08           3573 	jp	nz,00117$
   088B 78                 3574 	ld	a,b
   088C B7                 3575 	or	a,a
   088D C2 9B 08           3576 	jp	nz,00105$
   0890 18 03              3577 	jr	00118$
   0892                    3578 00117$:
   0892 C3 9B 08           3579 	jp	00105$
   0895                    3580 00118$:
                           3581 ;	game.c 577
                           3582 ;	genRet
   0895 11 01 00           3583 	ld	de,#0x0001
   0898 C3 9E 08           3584 	jp	00106$
                           3585 ;	game.c 578
                           3586 ;	genLabel
   089B                    3587 00105$:
                           3588 ;	game.c 579
                           3589 ;	genRet
   089B 11 00 00           3590 	ld	de,#0x0000
                           3591 ;	genLabel
   089E                    3592 00106$:
                           3593 ;	genEndFunction
   089E E8 09              3594 	lda	sp,9(sp)
   08A0 C9                 3595 	ret
   08A1                    3596 ___is_ded_end:
                           3597 ;	game.c 600
                           3598 ;	genLabel
                           3599 ;	genFunction
                           3600 ;	---------------------------------
                           3601 ; Function dog1_power
                           3602 ; ---------------------------------
   08A1                    3603 ___dog1_power_start:
   08A1                    3604 _dog1_power:
   08A1 E8 F8              3605 	lda	sp,-8(sp)
                           3606 ;	game.c 604
                           3607 ;	genAssign
                           3608 ;	AOP_HL for _player
   08A3 21 B3 1A           3609 	ld	hl,#_player
   08A6 4E                 3610 	ld	c,(hl)
   08A7 23                 3611 	inc	hl
   08A8 46                 3612 	ld	b,(hl)
                           3613 ;	genPlus
                           3614 ;	genPlusIncr
   08A9 03                 3615 	inc	bc
   08AA 03                 3616 	inc	bc
   08AB 03                 3617 	inc	bc
   08AC 03                 3618 	inc	bc
                           3619 ;	genPointerGet
   08AD 0A                 3620 	ld	a,(bc)
   08AE 4F                 3621 	ld	c,a
                           3622 ;	genAssign
                           3623 ;	AOP_HL for _player
                           3624 ;	AOP_STK for _dog1_power_sloc0_1_0
   08AF 2B                 3625 	dec	hl
   08B0 2A                 3626 	ld	a,(hl+)
   08B1 5E                 3627 	ld	e,(hl)
   08B2 F8 02              3628 	lda	hl,2(sp)
   08B4 22                 3629 	ld	(hl+),a
   08B5 73                 3630 	ld	(hl),e
                           3631 ;	genPlus
                           3632 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3633 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3634 ;	genPlusIncr
                           3635 ;	Can't optimise plus by inc, falling back to the normal way
   08B6 2B                 3636 	dec	hl
   08B7 5E                 3637 	ld	e,(hl)
   08B8 23                 3638 	inc	hl
   08B9 56                 3639 	ld	d,(hl)
   08BA 21 0B 00           3640 	ld	hl,#0x000B
   08BD 19                 3641 	add	hl,de
   08BE 7D                 3642 	ld	a,l
   08BF 54                 3643 	ld	d,h
   08C0 F8 00              3644 	lda	hl,0(sp)
                           3645 ;	genPointerGet
                           3646 ;	AOP_STK for _dog1_power_sloc1_1_0
   08C2 22                 3647 	ld	(hl+),a
   08C3 72                 3648 	ld	(hl),d
   08C4 5F                 3649 	ld	e,a
   08C5 1A                 3650 	ld	a,(de)
   08C6 47                 3651 	ld	b,a
                           3652 ;	genIpush
                           3653 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08C7 79                 3654 	ld	a,c
   08C8 F5                 3655 	push	af
   08C9 33                 3656 	inc	sp
                           3657 ;	genIpush
   08CA 78                 3658 	ld	a,b
   08CB F5                 3659 	push	af
   08CC 33                 3660 	inc	sp
                           3661 ;	genCall
   08CD CD 00 00           3662 	call	_set_sprite_tile
   08D0 E8 02              3663 	lda	sp,2(sp)
                           3664 ;	game.c 606
                           3665 ;	genAssign
                           3666 ;	AOP_HL for _player
   08D2 21 B3 1A           3667 	ld	hl,#_player
   08D5 4E                 3668 	ld	c,(hl)
   08D6 23                 3669 	inc	hl
   08D7 46                 3670 	ld	b,(hl)
                           3671 ;	genPlus
                           3672 ;	genPlusIncr
   08D8 03                 3673 	inc	bc
                           3674 ;	genPointerGet
   08D9 0A                 3675 	ld	a,(bc)
   08DA 4F                 3676 	ld	c,a
                           3677 ;	genAssign
                           3678 ;	AOP_HL for _player
                           3679 ;	AOP_STK for _dog1_power_sloc1_1_0
   08DB 2B                 3680 	dec	hl
   08DC 2A                 3681 	ld	a,(hl+)
   08DD 5E                 3682 	ld	e,(hl)
   08DE F8 00              3683 	lda	hl,0(sp)
   08E0 22                 3684 	ld	(hl+),a
   08E1 73                 3685 	ld	(hl),e
                           3686 ;	genPointerGet
                           3687 ;	AOP_STK for _dog1_power_sloc1_1_0
   08E2 2B                 3688 	dec	hl
   08E3 5E                 3689 	ld	e,(hl)
   08E4 23                 3690 	inc	hl
   08E5 56                 3691 	ld	d,(hl)
   08E6 1A                 3692 	ld	a,(de)
   08E7 47                 3693 	ld	b,a
                           3694 ;	genIpush
                           3695 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08E8 79                 3696 	ld	a,c
   08E9 F5                 3697 	push	af
   08EA 33                 3698 	inc	sp
                           3699 ;	genIpush
   08EB 78                 3700 	ld	a,b
   08EC F5                 3701 	push	af
   08ED 33                 3702 	inc	sp
                           3703 ;	genCall
   08EE CD 6B 0D           3704 	call	_get_player_map_position
   08F1 42                 3705 	ld	b,d
   08F2 4B                 3706 	ld	c,e
   08F3 E8 02              3707 	lda	sp,2(sp)
                           3708 ;	genAssign
                           3709 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08F5 F8 06              3710 	lda	hl,6(sp)
   08F7 71                 3711 	ld	(hl),c
   08F8 23                 3712 	inc	hl
   08F9 70                 3713 	ld	(hl),b
                           3714 ;	game.c 608
                           3715 ;	genAssign
                           3716 ;	AOP_HL for _player
   08FA 21 B3 1A           3717 	ld	hl,#_player
   08FD 4E                 3718 	ld	c,(hl)
   08FE 23                 3719 	inc	hl
   08FF 46                 3720 	ld	b,(hl)
                           3721 ;	genPlus
                           3722 ;	genPlusIncr
                           3723 ;	Can't optimise plus by inc, falling back to the normal way
   0900 79                 3724 	ld	a,c
   0901 C6 08              3725 	add	a,#0x08
   0903 4F                 3726 	ld	c,a
   0904 78                 3727 	ld	a,b
   0905 CE 00              3728 	adc	a,#0x00
   0907 47                 3729 	ld	b,a
                           3730 ;	genPointerGet
   0908 0A                 3731 	ld	a,(bc)
                           3732 ;	genIpush
                           3733 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0909 4F                 3734 	ld	c,a
   090A F5                 3735 	push	af
   090B 33                 3736 	inc	sp
                           3737 ;	genIpush
                           3738 ;	AOP_STK for _dog1_power_map_position_block_1_1
   090C F8 07              3739 	lda	hl,7(sp)
   090E 2A                 3740 	ld	a,(hl+)
   090F 66                 3741 	ld	h,(hl)
   0910 6F                 3742 	ld	l,a
   0911 E5                 3743 	push	hl
                           3744 ;	genCall
   0912 CD 6E 0B           3745 	call	__get_next_map_position
   0915 42                 3746 	ld	b,d
   0916 4B                 3747 	ld	c,e
   0917 E8 03              3748 	lda	sp,3(sp)
                           3749 ;	genAssign
                           3750 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0919 F8 06              3751 	lda	hl,6(sp)
   091B 71                 3752 	ld	(hl),c
   091C 23                 3753 	inc	hl
   091D 70                 3754 	ld	(hl),b
                           3755 ;	game.c 609
                           3756 ;	genAssign
                           3757 ;	AOP_HL for _player
   091E 21 B3 1A           3758 	ld	hl,#_player
   0921 4E                 3759 	ld	c,(hl)
   0922 23                 3760 	inc	hl
   0923 46                 3761 	ld	b,(hl)
                           3762 ;	genPlus
                           3763 ;	genPlusIncr
                           3764 ;	Can't optimise plus by inc, falling back to the normal way
   0924 79                 3765 	ld	a,c
   0925 C6 08              3766 	add	a,#0x08
   0927 4F                 3767 	ld	c,a
   0928 78                 3768 	ld	a,b
   0929 CE 00              3769 	adc	a,#0x00
   092B 47                 3770 	ld	b,a
                           3771 ;	genPointerGet
   092C 0A                 3772 	ld	a,(bc)
                           3773 ;	genIpush
                           3774 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   092D 4F                 3775 	ld	c,a
   092E F5                 3776 	push	af
   092F 33                 3777 	inc	sp
                           3778 ;	genIpush
                           3779 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0930 F8 07              3780 	lda	hl,7(sp)
   0932 2A                 3781 	ld	a,(hl+)
   0933 66                 3782 	ld	h,(hl)
   0934 6F                 3783 	ld	l,a
   0935 E5                 3784 	push	hl
                           3785 ;	genCall
   0936 CD 6E 0B           3786 	call	__get_next_map_position
   0939 42                 3787 	ld	b,d
   093A 4B                 3788 	ld	c,e
   093B E8 03              3789 	lda	sp,3(sp)
                           3790 ;	genAssign
                           3791 ;	AOP_STK for _dog1_power_map_position_next_1_1
   093D F8 04              3792 	lda	hl,4(sp)
   093F 71                 3793 	ld	(hl),c
   0940 23                 3794 	inc	hl
   0941 70                 3795 	ld	(hl),b
                           3796 ;	game.c 612
                           3797 ;	genPlus
                           3798 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3799 ;	Can't optimise plus by inc, falling back to the normal way
   0942 11 05 19           3800 	ld	de,#_map
   0945 23                 3801 	inc	hl
   0946 2A                 3802 	ld	a,(hl+)
   0947 66                 3803 	ld	h,(hl)
   0948 6F                 3804 	ld	l,a
   0949 19                 3805 	add	hl,de
   094A 4D                 3806 	ld	c,l
   094B 44                 3807 	ld	b,h
                           3808 ;	genPointerGet
                           3809 ;	AOP_STK for _dog1_power_sloc1_1_0
   094C 0A                 3810 	ld	a,(bc)
   094D F8 00              3811 	lda	hl,0(sp)
   094F 77                 3812 	ld	(hl),a
                           3813 ;	genCast
                           3814 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3815 ;	AOP_STK for _dog1_power_sloc0_1_0
   0950 2A                 3816 	ld	a,(hl+)
   0951 23                 3817 	inc	hl
   0952 22                 3818 	ld	(hl+),a
   0953 36 00              3819 	ld	(hl),#0x00
                           3820 ;	genCmpEq
                           3821 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3822 ; genCmpEq: left 2, right 2, result 0
   0955 2B                 3823 	dec	hl
   0956 7E                 3824 	ld	a,(hl)
   0957 FE 0F              3825 	cp	a,#0x0F
   0959 C2 62 09           3826 	jp	nz,00137$
   095C 23                 3827 	inc	hl
   095D 7E                 3828 	ld	a,(hl)
   095E B7                 3829 	or	a,a
   095F CA 75 09           3830 	jp	z,00103$
   0962                    3831 00137$:
                           3832 ;	genCmpEq
                           3833 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3834 ; genCmpEq: left 2, right 2, result 0
   0962 F8 02              3835 	lda	hl,2(sp)
   0964 7E                 3836 	ld	a,(hl)
   0965 FE 2D              3837 	cp	a,#0x2D
   0967 C2 72 09           3838 	jp	nz,00138$
   096A 23                 3839 	inc	hl
   096B 7E                 3840 	ld	a,(hl)
   096C B7                 3841 	or	a,a
   096D C2 3E 0B           3842 	jp	nz,00123$
   0970 18 03              3843 	jr	00139$
   0972                    3844 00138$:
   0972 C3 3E 0B           3845 	jp	00123$
   0975                    3846 00139$:
                           3847 ;	game.c 622
                           3848 ;	genLabel
   0975                    3849 00103$:
                           3850 ;	game.c 618
                           3851 ;	genIpush
                           3852 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0975 C5                 3853 	push	bc
                           3854 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0976 F8 06              3855 	lda	hl,6(sp)
   0978 2A                 3856 	ld	a,(hl+)
   0979 66                 3857 	ld	h,(hl)
   097A 6F                 3858 	ld	l,a
   097B E5                 3859 	push	hl
                           3860 ;	genCall
   097C CD 0B 0F           3861 	call	_can_move_to_map_pos
                           3862 ;	AOP_STK for _dog1_power_sloc1_1_0
   097F F8 05              3863 	lda	hl,5(sp)
   0981 72                 3864 	ld	(hl),d
   0982 2B                 3865 	dec	hl
   0983 73                 3866 	ld	(hl),e
   0984 E8 02              3867 	lda	sp,2(sp)
   0986 C1                 3868 	pop	bc
                           3869 ;	genCmpEq
                           3870 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3871 ; genCmpEq: left 2, right 2, result 0
   0987 F8 00              3872 	lda	hl,0(sp)
   0989 2A                 3873 	ld	a,(hl+)
   098A B6                 3874 	or	a,(hl)
   098B CA 3E 0B           3875 	jp	z,00123$
   098E                    3876 00140$:
                           3877 ;	game.c 622
                           3878 ;	genPointerGet
                           3879 ;	AOP_STK for _dog1_power_sloc1_1_0
   098E 0A                 3880 	ld	a,(bc)
   098F F8 00              3881 	lda	hl,0(sp)
   0991 77                 3882 	ld	(hl),a
                           3883 ;	genCast
                           3884 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3885 ;	AOP_STK for _dog1_power_sloc0_1_0
   0992 2A                 3886 	ld	a,(hl+)
   0993 23                 3887 	inc	hl
   0994 22                 3888 	ld	(hl+),a
   0995 36 00              3889 	ld	(hl),#0x00
                           3890 ;	genCmpEq
                           3891 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3892 ; genCmpEq: left 2, right 2, result 0
   0997 2B                 3893 	dec	hl
   0998 7E                 3894 	ld	a,(hl)
   0999 FE 2D              3895 	cp	a,#0x2D
   099B C2 A6 09           3896 	jp	nz,00141$
   099E 23                 3897 	inc	hl
   099F 7E                 3898 	ld	a,(hl)
   09A0 B7                 3899 	or	a,a
   09A1 C2 BF 09           3900 	jp	nz,00106$
   09A4 18 03              3901 	jr	00142$
   09A6                    3902 00141$:
   09A6 C3 BF 09           3903 	jp	00106$
   09A9                    3904 00142$:
                           3905 ;	game.c 623
                           3906 ;	genAssign (pointer)
   09A9 3E 2F              3907 	ld	a,#0x2F
   09AB 02                 3908 	ld	(bc),a
                           3909 ;	game.c 624
                           3910 ;	genIpush
                           3911 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09AC C5                 3912 	push	bc
   09AD 21 05 19           3913 	ld	hl,#_map
   09B0 E5                 3914 	push	hl
                           3915 ;	genIpush
   09B1 21 14 12           3916 	ld	hl,#0x1214
   09B4 E5                 3917 	push	hl
                           3918 ;	genIpush
   09B5 21 00 00           3919 	ld	hl,#0x0000
   09B8 E5                 3920 	push	hl
                           3921 ;	genCall
   09B9 CD 00 00           3922 	call	_set_bkg_tiles
   09BC E8 06              3923 	lda	sp,6(sp)
   09BE C1                 3924 	pop	bc
                           3925 ;	genLabel
   09BF                    3926 00106$:
                           3927 ;	game.c 626
                           3928 ;	genPointerGet
                           3929 ;	AOP_STK for _dog1_power_sloc1_1_0
   09BF 0A                 3930 	ld	a,(bc)
   09C0 F8 00              3931 	lda	hl,0(sp)
   09C2 77                 3932 	ld	(hl),a
                           3933 ;	genCast
                           3934 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3935 ;	AOP_STK for _dog1_power_sloc0_1_0
   09C3 2A                 3936 	ld	a,(hl+)
   09C4 23                 3937 	inc	hl
   09C5 22                 3938 	ld	(hl+),a
   09C6 36 00              3939 	ld	(hl),#0x00
                           3940 ;	genCmpEq
                           3941 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3942 ; genCmpEq: left 2, right 2, result 0
   09C8 2B                 3943 	dec	hl
   09C9 7E                 3944 	ld	a,(hl)
   09CA FE 0F              3945 	cp	a,#0x0F
   09CC C2 D7 09           3946 	jp	nz,00143$
   09CF 23                 3947 	inc	hl
   09D0 7E                 3948 	ld	a,(hl)
   09D1 B7                 3949 	or	a,a
   09D2 C2 F0 09           3950 	jp	nz,00108$
   09D5 18 03              3951 	jr	00144$
   09D7                    3952 00143$:
   09D7 C3 F0 09           3953 	jp	00108$
   09DA                    3954 00144$:
                           3955 ;	game.c 627
                           3956 ;	genAssign (pointer)
   09DA 3E 0D              3957 	ld	a,#0x0D
   09DC 02                 3958 	ld	(bc),a
                           3959 ;	game.c 628
                           3960 ;	genIpush
                           3961 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09DD C5                 3962 	push	bc
   09DE 21 05 19           3963 	ld	hl,#_map
   09E1 E5                 3964 	push	hl
                           3965 ;	genIpush
   09E2 21 14 12           3966 	ld	hl,#0x1214
   09E5 E5                 3967 	push	hl
                           3968 ;	genIpush
   09E6 21 00 00           3969 	ld	hl,#0x0000
   09E9 E5                 3970 	push	hl
                           3971 ;	genCall
   09EA CD 00 00           3972 	call	_set_bkg_tiles
   09ED E8 06              3973 	lda	sp,6(sp)
   09EF C1                 3974 	pop	bc
                           3975 ;	genLabel
   09F0                    3976 00108$:
                           3977 ;	game.c 633
                           3978 ;	genPlus
                           3979 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3980 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3981 ;	Can't optimise plus by inc, falling back to the normal way
   09F0 11 05 19           3982 	ld	de,#_map
   09F3 F8 04              3983 	lda	hl,4(sp)
   09F5 2A                 3984 	ld	a,(hl+)
   09F6 66                 3985 	ld	h,(hl)
   09F7 6F                 3986 	ld	l,a
   09F8 19                 3987 	add	hl,de
   09F9 7D                 3988 	ld	a,l
   09FA 54                 3989 	ld	d,h
   09FB F8 00              3990 	lda	hl,0(sp)
                           3991 ;	genPointerGet
                           3992 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3993 ;	AOP_STK for _dog1_power_sloc0_1_0
   09FD 22                 3994 	ld	(hl+),a
   09FE 72                 3995 	ld	(hl),d
   09FF 5F                 3996 	ld	e,a
   0A00 1A                 3997 	ld	a,(de)
   0A01 23                 3998 	inc	hl
                           3999 ;	genCast
                           4000 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4001 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4002 ; Removed redundent load
   0A02 32                 4003 	ld      (hl-),a
   0A03 2B                 4004 	dec	hl
   0A04 22                 4005 	ld	(hl+),a
   0A05 36 00              4006 	ld	(hl),#0x00
                           4007 ;	genCmpLt
                           4008 ;	AOP_STK for _dog1_power_sloc1_1_0
   0A07 2B                 4009 	dec	hl
   0A08 7E                 4010 	ld	a,(hl)
   0A09 D6 0D              4011 	sub	a,#0x0D
   0A0B 23                 4012 	inc	hl
   0A0C 7E                 4013 	ld	a,(hl)
   0A0D DE 00              4014 	sbc	a,#0x00
   0A0F DA 40 0A           4015 	jp	c,00109$
                           4016 ;	game.c 634
                           4017 ;	genCmpEq
                           4018 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4019 ; genCmpEq: left 2, right 2, result 0
   0A12 2B                 4020 	dec	hl
   0A13 7E                 4021 	ld	a,(hl)
   0A14 FE 2F              4022 	cp	a,#0x2F
   0A16 C2 1F 0A           4023 	jp	nz,00145$
   0A19 23                 4024 	inc	hl
   0A1A 7E                 4025 	ld	a,(hl)
   0A1B B7                 4026 	or	a,a
   0A1C CA 40 0A           4027 	jp	z,00109$
   0A1F                    4028 00145$:
                           4029 ;	game.c 635
                           4030 ;	genCmpEq
                           4031 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4032 ; genCmpEq: left 2, right 2, result 0
   0A1F F8 00              4033 	lda	hl,0(sp)
   0A21 7E                 4034 	ld	a,(hl)
   0A22 FE 30              4035 	cp	a,#0x30
   0A24 C2 2D 0A           4036 	jp	nz,00146$
   0A27 23                 4037 	inc	hl
   0A28 7E                 4038 	ld	a,(hl)
   0A29 B7                 4039 	or	a,a
   0A2A CA 40 0A           4040 	jp	z,00109$
   0A2D                    4041 00146$:
                           4042 ;	game.c 636
                           4043 ;	genCmpEq
                           4044 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4045 ; genCmpEq: left 2, right 2, result 0
   0A2D F8 00              4046 	lda	hl,0(sp)
   0A2F 7E                 4047 	ld	a,(hl)
   0A30 FE 2A              4048 	cp	a,#0x2A
   0A32 C2 3D 0A           4049 	jp	nz,00147$
   0A35 23                 4050 	inc	hl
   0A36 7E                 4051 	ld	a,(hl)
   0A37 B7                 4052 	or	a,a
   0A38 C2 78 0A           4053 	jp	nz,00110$
   0A3B 18 03              4054 	jr	00148$
   0A3D                    4055 00147$:
   0A3D C3 78 0A           4056 	jp	00110$
   0A40                    4057 00148$:
                           4058 ;	genLabel
   0A40                    4059 00109$:
                           4060 ;	game.c 637
                           4061 ;	genAssign (pointer)
   0A40 3E 2F              4062 	ld	a,#0x2F
   0A42 02                 4063 	ld	(bc),a
                           4064 ;	game.c 638
                           4065 ;	genIpush
                           4066 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A43 21 05 19           4067 	ld	hl,#_map
   0A46 E5                 4068 	push	hl
                           4069 ;	genIpush
   0A47 21 14 12           4070 	ld	hl,#0x1214
   0A4A E5                 4071 	push	hl
                           4072 ;	genIpush
   0A4B 21 00 00           4073 	ld	hl,#0x0000
   0A4E E5                 4074 	push	hl
                           4075 ;	genCall
   0A4F CD 00 00           4076 	call	_set_bkg_tiles
   0A52 E8 06              4077 	lda	sp,6(sp)
                           4078 ;	game.c 639
                           4079 ;	genAssign
                           4080 ;	AOP_HL for _player
   0A54 21 B3 1A           4081 	ld	hl,#_player
   0A57 4E                 4082 	ld	c,(hl)
   0A58 23                 4083 	inc	hl
   0A59 46                 4084 	ld	b,(hl)
                           4085 ;	genPlus
                           4086 ;	genPlusIncr
                           4087 ;	Can't optimise plus by inc, falling back to the normal way
   0A5A 79                 4088 	ld	a,c
   0A5B C6 08              4089 	add	a,#0x08
   0A5D 4F                 4090 	ld	c,a
   0A5E 78                 4091 	ld	a,b
   0A5F CE 00              4092 	adc	a,#0x00
   0A61 47                 4093 	ld	b,a
                           4094 ;	genPointerGet
   0A62 0A                 4095 	ld	a,(bc)
   0A63 4F                 4096 	ld	c,a
                           4097 ;	genIpush
                           4098 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4099 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A64 F8 04              4100 	lda	hl,4(sp)
   0A66 2A                 4101 	ld	a,(hl+)
   0A67 66                 4102 	ld	h,(hl)
   0A68 6F                 4103 	ld	l,a
   0A69 E5                 4104 	push	hl
                           4105 ;	genIpush
   0A6A 79                 4106 	ld	a,c
   0A6B F5                 4107 	push	af
   0A6C 33                 4108 	inc	sp
                           4109 ;	genIpush
                           4110 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A6D F8 09              4111 	lda	hl,9(sp)
   0A6F 2A                 4112 	ld	a,(hl+)
   0A70 66                 4113 	ld	h,(hl)
   0A71 6F                 4114 	ld	l,a
   0A72 E5                 4115 	push	hl
                           4116 ;	genCall
   0A73 CD 22 0C           4117 	call	_dog1_power_apply
   0A76 E8 05              4118 	lda	sp,5(sp)
                           4119 ;	genLabel
   0A78                    4120 00110$:
                           4121 ;	game.c 641
                           4122 ;	genCmpEq
                           4123 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4124 ; genCmpEq: left 2, right 2, result 0
   0A78 F8 00              4125 	lda	hl,0(sp)
   0A7A 7E                 4126 	ld	a,(hl)
   0A7B FE 0D              4127 	cp	a,#0x0D
   0A7D C2 86 0A           4128 	jp	nz,00149$
   0A80 23                 4129 	inc	hl
   0A81 7E                 4130 	ld	a,(hl)
   0A82 B7                 4131 	or	a,a
   0A83 CA 99 0A           4132 	jp	z,00117$
   0A86                    4133 00149$:
                           4134 ;	genCmpEq
                           4135 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4136 ; genCmpEq: left 2, right 2, result 0
   0A86 F8 00              4137 	lda	hl,0(sp)
   0A88 7E                 4138 	ld	a,(hl)
   0A89 FE 0E              4139 	cp	a,#0x0E
   0A8B C2 96 0A           4140 	jp	nz,00150$
   0A8E 23                 4141 	inc	hl
   0A8F 7E                 4142 	ld	a,(hl)
   0A90 B7                 4143 	or	a,a
   0A91 C2 3E 0B           4144 	jp	nz,00123$
   0A94 18 03              4145 	jr	00151$
   0A96                    4146 00150$:
   0A96 C3 3E 0B           4147 	jp	00123$
   0A99                    4148 00151$:
                           4149 ;	game.c 643
                           4150 ;	genLabel
   0A99                    4151 00117$:
                           4152 ;	genPlus
                           4153 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           4154 ;	Can't optimise plus by inc, falling back to the normal way
   0A99 11 05 19           4155 	ld	de,#_map
   0A9C F8 04              4156 	lda	hl,4(sp)
   0A9E 2A                 4157 	ld	a,(hl+)
   0A9F 66                 4158 	ld	h,(hl)
   0AA0 6F                 4159 	ld	l,a
   0AA1 19                 4160 	add	hl,de
   0AA2 4D                 4161 	ld	c,l
   0AA3 44                 4162 	ld	b,h
                           4163 ;	genPointerGet
   0AA4 0A                 4164 	ld	a,(bc)
   0AA5 4F                 4165 	ld	c,a
                           4166 ;	genCast
                           4167 ; Removed redundent load
   0AA6 06 00              4168 	ld	b,#0x00
                           4169 ;	genCmpEq
                           4170 ; genCmpEq: left 2, right 2, result 0
   0AA8 79                 4171 	ld	a,c
   0AA9 FE 0D              4172 	cp	a,#0x0D
   0AAB C2 B3 0A           4173 	jp	nz,00152$
   0AAE 78                 4174 	ld	a,b
   0AAF B7                 4175 	or	a,a
   0AB0 CA C3 0A           4176 	jp	z,00118$
   0AB3                    4177 00152$:
                           4178 ;	genCmpEq
                           4179 ; genCmpEq: left 2, right 2, result 0
   0AB3 79                 4180 	ld	a,c
   0AB4 FE 0E              4181 	cp	a,#0x0E
   0AB6 C2 C0 0A           4182 	jp	nz,00153$
   0AB9 78                 4183 	ld	a,b
   0ABA B7                 4184 	or	a,a
   0ABB C2 3E 0B           4185 	jp	nz,00123$
   0ABE 18 03              4186 	jr	00154$
   0AC0                    4187 00153$:
   0AC0 C3 3E 0B           4188 	jp	00123$
   0AC3                    4189 00154$:
                           4190 ;	genLabel
   0AC3                    4191 00118$:
                           4192 ;	game.c 645
                           4193 ;	genPlus
                           4194 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           4195 ;	Can't optimise plus by inc, falling back to the normal way
   0AC3 11 05 19           4196 	ld	de,#_map
   0AC6 F8 06              4197 	lda	hl,6(sp)
   0AC8 2A                 4198 	ld	a,(hl+)
   0AC9 66                 4199 	ld	h,(hl)
   0ACA 6F                 4200 	ld	l,a
   0ACB 19                 4201 	add	hl,de
   0ACC 4D                 4202 	ld	c,l
   0ACD 44                 4203 	ld	b,h
                           4204 ;	genPointerGet
                           4205 ;	AOP_STK for _dog1_power_sloc1_1_0
   0ACE 0A                 4206 	ld	a,(bc)
   0ACF F8 00              4207 	lda	hl,0(sp)
   0AD1 77                 4208 	ld	(hl),a
                           4209 ;	genCast
                           4210 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4211 ;	AOP_STK for _dog1_power_sloc0_1_0
   0AD2 2A                 4212 	ld	a,(hl+)
   0AD3 23                 4213 	inc	hl
   0AD4 22                 4214 	ld	(hl+),a
   0AD5 36 00              4215 	ld	(hl),#0x00
                           4216 ;	genCmpEq
                           4217 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4218 ; genCmpEq: left 2, right 2, result 0
   0AD7 2B                 4219 	dec	hl
   0AD8 7E                 4220 	ld	a,(hl)
   0AD9 FE 0F              4221 	cp	a,#0x0F
   0ADB C2 E6 0A           4222 	jp	nz,00155$
   0ADE 23                 4223 	inc	hl
   0ADF 7E                 4224 	ld	a,(hl)
   0AE0 B7                 4225 	or	a,a
   0AE1 C2 EC 0A           4226 	jp	nz,00115$
   0AE4 18 03              4227 	jr	00156$
   0AE6                    4228 00155$:
   0AE6 C3 EC 0A           4229 	jp	00115$
   0AE9                    4230 00156$:
                           4231 ;	game.c 646
                           4232 ;	genAssign (pointer)
   0AE9 3E 0D              4233 	ld	a,#0x0D
   0AEB 02                 4234 	ld	(bc),a
                           4235 ;	genLabel
   0AEC                    4236 00115$:
                           4237 ;	game.c 648
                           4238 ;	genAssign
                           4239 ;	AOP_HL for _player
   0AEC 21 B3 1A           4240 	ld	hl,#_player
   0AEF 4E                 4241 	ld	c,(hl)
   0AF0 23                 4242 	inc	hl
   0AF1 46                 4243 	ld	b,(hl)
                           4244 ;	genPlus
                           4245 ;	genPlusIncr
                           4246 ;	Can't optimise plus by inc, falling back to the normal way
   0AF2 79                 4247 	ld	a,c
   0AF3 C6 08              4248 	add	a,#0x08
   0AF5 4F                 4249 	ld	c,a
   0AF6 78                 4250 	ld	a,b
   0AF7 CE 00              4251 	adc	a,#0x00
   0AF9 47                 4252 	ld	b,a
                           4253 ;	genPointerGet
   0AFA 0A                 4254 	ld	a,(bc)
   0AFB 4F                 4255 	ld	c,a
                           4256 ;	genIpush
                           4257 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4258 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AFC F8 04              4259 	lda	hl,4(sp)
   0AFE 2A                 4260 	ld	a,(hl+)
   0AFF 66                 4261 	ld	h,(hl)
   0B00 6F                 4262 	ld	l,a
   0B01 E5                 4263 	push	hl
                           4264 ;	genIpush
   0B02 79                 4265 	ld	a,c
   0B03 F5                 4266 	push	af
   0B04 33                 4267 	inc	sp
                           4268 ;	genIpush
                           4269 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0B05 F8 09              4270 	lda	hl,9(sp)
   0B07 2A                 4271 	ld	a,(hl+)
   0B08 66                 4272 	ld	h,(hl)
   0B09 6F                 4273 	ld	l,a
   0B0A E5                 4274 	push	hl
                           4275 ;	genCall
   0B0B CD 22 0C           4276 	call	_dog1_power_apply
   0B0E E8 05              4277 	lda	sp,5(sp)
                           4278 ;	game.c 649
                           4279 ;	genAssign
                           4280 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           4281 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0B10 F8 04              4282 	lda	hl,4(sp)
   0B12 2A                 4283 	ld	a,(hl+)
   0B13 5E                 4284 	ld	e,(hl)
   0B14 23                 4285 	inc	hl
   0B15 22                 4286 	ld	(hl+),a
   0B16 73                 4287 	ld	(hl),e
                           4288 ;	game.c 650
                           4289 ;	genAssign
                           4290 ;	AOP_HL for _player
   0B17 21 B3 1A           4291 	ld	hl,#_player
   0B1A 4E                 4292 	ld	c,(hl)
   0B1B 23                 4293 	inc	hl
   0B1C 46                 4294 	ld	b,(hl)
                           4295 ;	genPlus
                           4296 ;	genPlusIncr
                           4297 ;	Can't optimise plus by inc, falling back to the normal way
   0B1D 79                 4298 	ld	a,c
   0B1E C6 08              4299 	add	a,#0x08
   0B20 4F                 4300 	ld	c,a
   0B21 78                 4301 	ld	a,b
   0B22 CE 00              4302 	adc	a,#0x00
   0B24 47                 4303 	ld	b,a
                           4304 ;	genPointerGet
   0B25 0A                 4305 	ld	a,(bc)
                           4306 ;	genIpush
                           4307 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B26 4F                 4308 	ld	c,a
   0B27 F5                 4309 	push	af
   0B28 33                 4310 	inc	sp
                           4311 ;	genIpush
                           4312 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0B29 F8 05              4313 	lda	hl,5(sp)
   0B2B 2A                 4314 	ld	a,(hl+)
   0B2C 66                 4315 	ld	h,(hl)
   0B2D 6F                 4316 	ld	l,a
   0B2E E5                 4317 	push	hl
                           4318 ;	genCall
   0B2F CD 6E 0B           4319 	call	__get_next_map_position
   0B32 42                 4320 	ld	b,d
   0B33 4B                 4321 	ld	c,e
   0B34 E8 03              4322 	lda	sp,3(sp)
                           4323 ;	genAssign
                           4324 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0B36 F8 04              4325 	lda	hl,4(sp)
   0B38 71                 4326 	ld	(hl),c
   0B39 23                 4327 	inc	hl
   0B3A 70                 4328 	ld	(hl),b
                           4329 ;	genGoto
   0B3B C3 99 0A           4330 	jp	00117$
                           4331 ;	game.c 661
                           4332 ;	genLabel
   0B3E                    4333 00123$:
                           4334 ;	game.c 666
                           4335 ;	genAssign
                           4336 ;	AOP_HL for _player
   0B3E 21 B3 1A           4337 	ld	hl,#_player
   0B41 4E                 4338 	ld	c,(hl)
   0B42 23                 4339 	inc	hl
   0B43 46                 4340 	ld	b,(hl)
                           4341 ;	genPlus
                           4342 ;	genPlusIncr
   0B44 03                 4343 	inc	bc
   0B45 03                 4344 	inc	bc
                           4345 ;	genPointerGet
   0B46 0A                 4346 	ld	a,(bc)
   0B47 4F                 4347 	ld	c,a
                           4348 ;	genAssign
                           4349 ;	AOP_HL for _player
                           4350 ;	AOP_STK for _dog1_power_sloc1_1_0
   0B48 2B                 4351 	dec	hl
   0B49 2A                 4352 	ld	a,(hl+)
   0B4A 5E                 4353 	ld	e,(hl)
   0B4B F8 00              4354 	lda	hl,0(sp)
   0B4D 22                 4355 	ld	(hl+),a
   0B4E 73                 4356 	ld	(hl),e
                           4357 ;	genPlus
                           4358 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4359 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4360 ;	genPlusIncr
                           4361 ;	Can't optimise plus by inc, falling back to the normal way
   0B4F 2B                 4362 	dec	hl
   0B50 5E                 4363 	ld	e,(hl)
   0B51 23                 4364 	inc	hl
   0B52 56                 4365 	ld	d,(hl)
   0B53 21 0B 00           4366 	ld	hl,#0x000B
   0B56 19                 4367 	add	hl,de
   0B57 7D                 4368 	ld	a,l
   0B58 54                 4369 	ld	d,h
   0B59 F8 02              4370 	lda	hl,2(sp)
                           4371 ;	genPointerGet
                           4372 ;	AOP_STK for _dog1_power_sloc0_1_0
   0B5B 22                 4373 	ld	(hl+),a
   0B5C 72                 4374 	ld	(hl),d
   0B5D 5F                 4375 	ld	e,a
   0B5E 1A                 4376 	ld	a,(de)
   0B5F 47                 4377 	ld	b,a
                           4378 ;	genIpush
                           4379 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B60 79                 4380 	ld	a,c
   0B61 F5                 4381 	push	af
   0B62 33                 4382 	inc	sp
                           4383 ;	genIpush
   0B63 78                 4384 	ld	a,b
   0B64 F5                 4385 	push	af
   0B65 33                 4386 	inc	sp
                           4387 ;	genCall
   0B66 CD 00 00           4388 	call	_set_sprite_tile
   0B69 E8 02              4389 	lda	sp,2(sp)
                           4390 ;	genLabel
   0B6B                    4391 00124$:
                           4392 ;	genEndFunction
   0B6B E8 08              4393 	lda	sp,8(sp)
   0B6D C9                 4394 	ret
   0B6E                    4395 ___dog1_power_end:
                           4396 ;	game.c 669
                           4397 ;	genLabel
                           4398 ;	genFunction
                           4399 ;	---------------------------------
                           4400 ; Function _get_next_map_position
                           4401 ; ---------------------------------
   0B6E                    4402 ____get_next_map_position_start:
   0B6E                    4403 __get_next_map_position:
   0B6E E8 FE              4404 	lda	sp,-2(sp)
                           4405 ;	game.c 670
                           4406 ;	genCmpLt
                           4407 ;	AOP_STK for 
   0B70 F8 06              4408 	lda	hl,6(sp)
   0B72 7E                 4409 	ld	a,(hl)
   0B73 FE 01              4410 	cp	#0x01
   0B75 DA 1A 0C           4411 	jp	c,00113$
                           4412 ;	genCmpGt
                           4413 ;	AOP_STK for 
   0B78 3E 04              4414 	ld	a,#0x04
   0B7A 96                 4415 	sub	a,(hl)
   0B7B DA 1A 0C           4416 	jp	c,00113$
                           4417 ;	genMinus
                           4418 ;	AOP_STK for 
   0B7E 7E                 4419 	ld	a,(hl)
   0B7F C6 FF              4420 	add	a,#0xFF
   0B81 4F                 4421 	ld	c,a
                           4422 ;	genJumpTab
   0B82 59                 4423 	ld	e,c
   0B83 16 00              4424 	ld	d,#0x00
   0B85 21 8C 0B           4425 	ld	hl,#00122$
   0B88 19                 4426 	add	hl,de
   0B89 19                 4427 	add	hl,de
   0B8A 19                 4428 	add	hl,de
   0B8B E9                 4429 	jp	(hl)
   0B8C                    4430 00122$:
   0B8C C3 98 0B           4431 	jp	00103$
   0B8F C3 B7 0B           4432 	jp	00106$
   0B92 C3 DD 0B           4433 	jp	00109$
   0B95 C3 FA 0B           4434 	jp	00112$
                           4435 ;	game.c 675
                           4436 ;	genLabel
   0B98                    4437 00103$:
                           4438 ;	game.c 672
                           4439 ;	genCmpGt
                           4440 ;	AOP_STK for 
   0B98 3E 14              4441 	ld	a,#0x14
   0B9A F8 04              4442 	lda	hl,4(sp)
   0B9C 96                 4443 	sub	a,(hl)
   0B9D 3E 00              4444 	ld	a,#0x00
   0B9F 23                 4445 	inc	hl
   0BA0 9E                 4446 	sbc	a,(hl)
   0BA1 D2 1A 0C           4447 	jp	nc,00113$
                           4448 ;	game.c 673
                           4449 ;	genMinus
                           4450 ;	AOP_STK for 
   0BA4 2B                 4451 	dec	hl
   0BA5 5E                 4452 	ld	e,(hl)
   0BA6 23                 4453 	inc	hl
   0BA7 56                 4454 	ld	d,(hl)
   0BA8 21 14 00           4455 	ld	hl,#0x0014
   0BAB 7B                 4456 	ld	a,e
   0BAC 95                 4457 	sub	a,l
   0BAD 5F                 4458 	ld	e,a
   0BAE 7A                 4459 	ld	a,d
   0BAF 9C                 4460 	sbc	a,h
   0BB0 F8 05              4461 	lda	hl,5(sp)
   0BB2 32                 4462 	ld      (hl-),a
   0BB3 73                 4463 	ld	(hl),e
                           4464 ;	game.c 675
                           4465 ;	genGoto
   0BB4 C3 1A 0C           4466 	jp	00113$
                           4467 ;	game.c 680
                           4468 ;	genLabel
   0BB7                    4469 00106$:
                           4470 ;	game.c 677
                           4471 ;	genPlus
                           4472 ;	AOP_STK for 
                           4473 ;	genPlusIncr
   0BB7 F8 04              4474 	lda	hl,4(sp)
   0BB9 4E                 4475 	ld	c,(hl)
   0BBA 23                 4476 	inc	hl
   0BBB 46                 4477 	ld	b,(hl)
   0BBC 03                 4478 	inc	bc
                           4479 ;	genIpush
                           4480 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BBD C5                 4481 	push	bc
   0BBE 21 14 00           4482 	ld	hl,#0x0014
   0BC1 E5                 4483 	push	hl
                           4484 ;	genIpush
   0BC2 C5                 4485 	push	bc
                           4486 ;	genCall
   0BC3 CD 00 00           4487 	call	__moduint_rrx_s
                           4488 ;	AOP_STK for __get_next_map_position_sloc0_1_0
   0BC6 F8 07              4489 	lda	hl,7(sp)
   0BC8 72                 4490 	ld	(hl),d
   0BC9 2B                 4491 	dec	hl
   0BCA 73                 4492 	ld	(hl),e
   0BCB E8 04              4493 	lda	sp,4(sp)
   0BCD C1                 4494 	pop	bc
                           4495 ;	genCmpEq
                           4496 ;	AOP_STK for __get_next_map_position_sloc0_1_0
                           4497 ; genCmpEq: left 2, right 2, result 0
   0BCE F8 00              4498 	lda	hl,0(sp)
   0BD0 2A                 4499 	ld	a,(hl+)
   0BD1 B6                 4500 	or	a,(hl)
   0BD2 CA 1A 0C           4501 	jp	z,00113$
   0BD5                    4502 00123$:
                           4503 ;	game.c 678
                           4504 ;	genAssign
                           4505 ;	(registers are the same)
                           4506 ;	genAssign
                           4507 ;	AOP_STK for 
   0BD5 F8 04              4508 	lda	hl,4(sp)
   0BD7 71                 4509 	ld	(hl),c
   0BD8 23                 4510 	inc	hl
   0BD9 70                 4511 	ld	(hl),b
                           4512 ;	game.c 680
                           4513 ;	genGoto
   0BDA C3 1A 0C           4514 	jp	00113$
                           4515 ;	game.c 685
                           4516 ;	genLabel
   0BDD                    4517 00109$:
                           4518 ;	game.c 682
                           4519 ;	genCmpLt
                           4520 ;	AOP_STK for 
   0BDD F8 04              4521 	lda	hl,4(sp)
   0BDF 7E                 4522 	ld	a,(hl)
   0BE0 D6 54              4523 	sub	a,#0x54
   0BE2 23                 4524 	inc	hl
   0BE3 7E                 4525 	ld	a,(hl)
   0BE4 DE 01              4526 	sbc	a,#0x01
   0BE6 D2 1A 0C           4527 	jp	nc,00113$
                           4528 ;	game.c 683
                           4529 ;	genPlus
                           4530 ;	AOP_STK for 
                           4531 ;	genPlusIncr
                           4532 ;	Can't optimise plus by inc, falling back to the normal way
   0BE9 2B                 4533 	dec	hl
   0BEA 5E                 4534 	ld	e,(hl)
   0BEB 23                 4535 	inc	hl
   0BEC 56                 4536 	ld	d,(hl)
   0BED 21 14 00           4537 	ld	hl,#0x0014
   0BF0 19                 4538 	add	hl,de
   0BF1 7D                 4539 	ld	a,l
   0BF2 54                 4540 	ld	d,h
   0BF3 F8 04              4541 	lda	hl,4(sp)
   0BF5 22                 4542 	ld	(hl+),a
   0BF6 72                 4543 	ld	(hl),d
                           4544 ;	game.c 685
                           4545 ;	genGoto
   0BF7 C3 1A 0C           4546 	jp	00113$
                           4547 ;	game.c 691
                           4548 ;	genLabel
   0BFA                    4549 00112$:
                           4550 ;	game.c 687
                           4551 ;	genIpush
                           4552 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BFA 21 14 00           4553 	ld	hl,#0x0014
   0BFD E5                 4554 	push	hl
                           4555 ;	genIpush
                           4556 ;	AOP_STK for 
   0BFE F8 06              4557 	lda	hl,6(sp)
   0C00 2A                 4558 	ld	a,(hl+)
   0C01 66                 4559 	ld	h,(hl)
   0C02 6F                 4560 	ld	l,a
   0C03 E5                 4561 	push	hl
                           4562 ;	genCall
   0C04 CD 00 00           4563 	call	__moduint_rrx_s
   0C07 42                 4564 	ld	b,d
   0C08 4B                 4565 	ld	c,e
   0C09 E8 04              4566 	lda	sp,4(sp)
                           4567 ;	genCmpEq
                           4568 ; genCmpEq: left 2, right 2, result 0
   0C0B 79                 4569 	ld	a,c
   0C0C B0                 4570 	or	a,b
   0C0D CA 1A 0C           4571 	jp	z,00113$
   0C10                    4572 00124$:
                           4573 ;	game.c 688
                           4574 ;	genMinus
                           4575 ;	AOP_STK for 
   0C10 F8 04              4576 	lda	hl,4(sp)
   0C12 5E                 4577 	ld	e,(hl)
   0C13 23                 4578 	inc	hl
   0C14 56                 4579 	ld	d,(hl)
   0C15 1B                 4580 	dec	de
   0C16 2B                 4581 	dec	hl
   0C17 73                 4582 	ld	(hl),e
   0C18 23                 4583 	inc	hl
   0C19 72                 4584 	ld	(hl),d
                           4585 ;	game.c 692
                           4586 ;	genLabel
   0C1A                    4587 00113$:
                           4588 ;	game.c 693
                           4589 ;	genRet
                           4590 ;	AOP_STK for 
   0C1A F8 04              4591 	lda	hl,4(sp)
   0C1C 5E                 4592 	ld	e,(hl)
   0C1D 23                 4593 	inc	hl
   0C1E 56                 4594 	ld	d,(hl)
                           4595 ;	genLabel
   0C1F                    4596 00114$:
                           4597 ;	genEndFunction
   0C1F E8 02              4598 	lda	sp,2(sp)
   0C21 C9                 4599 	ret
   0C22                    4600 ____get_next_map_position_end:
                           4601 ;	game.c 696
                           4602 ;	genLabel
                           4603 ;	genFunction
                           4604 ;	---------------------------------
                           4605 ; Function dog1_power_apply
                           4606 ; ---------------------------------
   0C22                    4607 ___dog1_power_apply_start:
   0C22                    4608 _dog1_power_apply:
   0C22 E8 FC              4609 	lda	sp,-4(sp)
                           4610 ;	game.c 702
                           4611 ;	genIpush
                           4612 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C24 21 14 00           4613 	ld	hl,#0x0014
   0C27 E5                 4614 	push	hl
                           4615 ;	genIpush
                           4616 ;	AOP_STK for 
   0C28 F8 08              4617 	lda	hl,8(sp)
   0C2A 2A                 4618 	ld	a,(hl+)
   0C2B 66                 4619 	ld	h,(hl)
   0C2C 6F                 4620 	ld	l,a
   0C2D E5                 4621 	push	hl
                           4622 ;	genCall
   0C2E CD 00 00           4623 	call	__divuint_rrx_s
   0C31 42                 4624 	ld	b,d
   0C32 4B                 4625 	ld	c,e
   0C33 E8 04              4626 	lda	sp,4(sp)
                           4627 ;	genLeftShift
   0C35 3E 04              4628 	ld	a,#0x03+1
   0C37 18 04              4629 	jr	00124$
   0C39                    4630 00123$:
   0C39 CB 21              4631 	sla	c
   0C3B CB 10              4632 	rl	b
   0C3D                    4633 00124$:
   0C3D 3D                 4634 	dec	a
   0C3E 20 F9              4635 	jr	nz,00123$
                           4636 ;	genPlus
                           4637 ;	genPlusIncr
                           4638 ;	Can't optimise plus by inc, falling back to the normal way
   0C40 79                 4639 	ld	a,c
   0C41 C6 10              4640 	add	a,#0x10
   0C43 4F                 4641 	ld	c,a
   0C44 78                 4642 	ld	a,b
   0C45 CE 00              4643 	adc	a,#0x00
   0C47 47                 4644 	ld	b,a
                           4645 ;	genCast
                           4646 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C48 F8 03              4647 	lda	hl,3(sp)
   0C4A 71                 4648 	ld	(hl),c
                           4649 ;	game.c 703
                           4650 ;	genIpush
                           4651 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C4B 21 14 00           4652 	ld	hl,#0x0014
   0C4E E5                 4653 	push	hl
                           4654 ;	genIpush
                           4655 ;	AOP_STK for 
   0C4F F8 08              4656 	lda	hl,8(sp)
   0C51 2A                 4657 	ld	a,(hl+)
   0C52 66                 4658 	ld	h,(hl)
   0C53 6F                 4659 	ld	l,a
   0C54 E5                 4660 	push	hl
                           4661 ;	genCall
   0C55 CD 00 00           4662 	call	__moduint_rrx_s
   0C58 4A                 4663 	ld	c,d
   0C59 43                 4664 	ld	b,e
   0C5A E8 04              4665 	lda	sp,4(sp)
                           4666 ;	genLeftShift
   0C5C 3E 04              4667 	ld	a,#0x03+1
   0C5E 18 04              4668 	jr	00126$
   0C60                    4669 00125$:
   0C60 CB 20              4670 	sla	b
   0C62 CB 11              4671 	rl	c
   0C64                    4672 00126$:
   0C64 3D                 4673 	dec	a
   0C65 20 F9              4674 	jr	nz,00125$
                           4675 ;	genPlus
                           4676 ;	genPlusIncr
                           4677 ;	Can't optimise plus by inc, falling back to the normal way
   0C67 78                 4678 	ld	a,b
   0C68 C6 08              4679 	add	a,#0x08
   0C6A 47                 4680 	ld	b,a
   0C6B 79                 4681 	ld	a,c
   0C6C CE 00              4682 	adc	a,#0x00
   0C6E 4F                 4683 	ld	c,a
                           4684 ;	genCast
   0C6F 48                 4685 	ld	c,b
                           4686 ;	game.c 704
                           4687 ;	genIpush
                           4688 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C70 C5                 4689 	push	bc
   0C71 21 05 0F           4690 	ld	hl,#0x0F05
   0C74 E5                 4691 	push	hl
                           4692 ;	genCall
   0C75 CD 00 00           4693 	call	_set_sprite_tile
   0C78 E8 02              4694 	lda	sp,2(sp)
   0C7A E1                 4695 	pop	hl
   0C7B 4D                 4696 	ld	c,l
                           4697 ;	game.c 707
                           4698 ;	genAssign
                           4699 ;	AOP_STK for _dog1_power_apply_i_1_1
   0C7C F8 02              4700 	lda	hl,2(sp)
   0C7E 36 04              4701 	ld	(hl),#0x04
                           4702 ;	game.c 708
                           4703 ;	genIpush
                           4704 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C80 C5                 4705 	push	bc
                           4706 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C81 23                 4707 	inc	hl
   0C82 7E                 4708 	ld	a,(hl)
   0C83 F5                 4709 	push	af
   0C84 33                 4710 	inc	sp
                           4711 ;	genIpush
   0C85 79                 4712 	ld	a,c
   0C86 F5                 4713 	push	af
   0C87 33                 4714 	inc	sp
                           4715 ;	genIpush
   0C88 3E 05              4716 	ld	a,#0x05
   0C8A F5                 4717 	push	af
   0C8B 33                 4718 	inc	sp
                           4719 ;	genCall
   0C8C CD 00 00           4720 	call	_move_sprite
   0C8F E8 03              4721 	lda	sp,3(sp)
   0C91 E1                 4722 	pop	hl
   0C92 4D                 4723 	ld	c,l
                           4724 ;	game.c 710
                           4725 ;	genLabel
   0C93                    4726 00106$:
                           4727 ;	genCmpEq
                           4728 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4729 ; genCmpEq: left 1, right 1, result 0
   0C93 F8 02              4730 	lda	hl,2(sp)
   0C95 7E                 4731 	ld	a,(hl)
   0C96 B7                 4732 	or	a,a
   0C97 CA FD 0C           4733 	jp	z,00108$
   0C9A                    4734 00127$:
                           4735 ;	game.c 711
                           4736 ;	genCmpLt
                           4737 ;	AOP_STK for 
   0C9A F8 08              4738 	lda	hl,8(sp)
   0C9C 7E                 4739 	ld	a,(hl)
   0C9D FE 01              4740 	cp	#0x01
   0C9F DA D7 0C           4741 	jp	c,00105$
                           4742 ;	genCmpGt
                           4743 ;	AOP_STK for 
   0CA2 3E 04              4744 	ld	a,#0x04
   0CA4 96                 4745 	sub	a,(hl)
   0CA5 DA D7 0C           4746 	jp	c,00105$
                           4747 ;	genMinus
                           4748 ;	AOP_STK for 
   0CA8 7E                 4749 	ld	a,(hl)
   0CA9 C6 FF              4750 	add	a,#0xFF
   0CAB 47                 4751 	ld	b,a
                           4752 ;	genJumpTab
   0CAC 58                 4753 	ld	e,b
   0CAD 16 00              4754 	ld	d,#0x00
   0CAF 21 B6 0C           4755 	ld	hl,#00128$
   0CB2 19                 4756 	add	hl,de
   0CB3 19                 4757 	add	hl,de
   0CB4 19                 4758 	add	hl,de
   0CB5 E9                 4759 	jp	(hl)
   0CB6                    4760 00128$:
   0CB6 C3 C2 0C           4761 	jp	00101$
   0CB9 C3 C9 0C           4762 	jp	00102$
   0CBC C3 CE 0C           4763 	jp	00103$
   0CBF C3 D5 0C           4764 	jp	00104$
                           4765 ;	game.c 713
                           4766 ;	genLabel
   0CC2                    4767 00101$:
                           4768 ;	genMinus
                           4769 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CC2 F8 03              4770 	lda	hl,3(sp)
   0CC4 35                 4771 	dec	(hl)
   0CC5 35                 4772 	dec	(hl)
                           4773 ;	game.c 714
                           4774 ;	genGoto
   0CC6 C3 D7 0C           4775 	jp	00105$
                           4776 ;	game.c 716
                           4777 ;	genLabel
   0CC9                    4778 00102$:
                           4779 ;	genPlus
                           4780 ;	genPlusIncr
                           4781 ; Removed redundent load
   0CC9 0C                 4782 	inc	c
   0CCA 0C                 4783 	inc	c
                           4784 ;	game.c 717
                           4785 ;	genGoto
   0CCB C3 D7 0C           4786 	jp	00105$
                           4787 ;	game.c 719
                           4788 ;	genLabel
   0CCE                    4789 00103$:
                           4790 ;	genPlus
                           4791 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4792 ;	genPlusIncr
   0CCE F8 03              4793 	lda	hl,3(sp)
   0CD0 34                 4794 	inc	(hl)
   0CD1 34                 4795 	inc	(hl)
                           4796 ;	game.c 720
                           4797 ;	genGoto
   0CD2 C3 D7 0C           4798 	jp	00105$
                           4799 ;	game.c 722
                           4800 ;	genLabel
   0CD5                    4801 00104$:
                           4802 ;	genMinus
   0CD5 0D                 4803 	dec	c
   0CD6 0D                 4804 	dec	c
                           4805 ;	game.c 724
                           4806 ;	genLabel
   0CD7                    4807 00105$:
                           4808 ;	game.c 725
                           4809 ;	genIpush
                           4810 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CD7 C5                 4811 	push	bc
   0CD8 3E 02              4812 	ld	a,#0x02
   0CDA F5                 4813 	push	af
   0CDB 33                 4814 	inc	sp
                           4815 ;	genCall
   0CDC CD 00 00           4816 	call	_performantDelay
   0CDF E8 01              4817 	lda	sp,1(sp)
   0CE1 E1                 4818 	pop	hl
   0CE2 4D                 4819 	ld	c,l
                           4820 ;	game.c 726
                           4821 ;	genIpush
                           4822 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CE3 C5                 4823 	push	bc
                           4824 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CE4 F8 05              4825 	lda	hl,5(sp)
   0CE6 7E                 4826 	ld	a,(hl)
   0CE7 F5                 4827 	push	af
   0CE8 33                 4828 	inc	sp
                           4829 ;	genIpush
   0CE9 79                 4830 	ld	a,c
   0CEA F5                 4831 	push	af
   0CEB 33                 4832 	inc	sp
                           4833 ;	genIpush
   0CEC 3E 05              4834 	ld	a,#0x05
   0CEE F5                 4835 	push	af
   0CEF 33                 4836 	inc	sp
                           4837 ;	genCall
   0CF0 CD 00 00           4838 	call	_move_sprite
   0CF3 E8 03              4839 	lda	sp,3(sp)
   0CF5 E1                 4840 	pop	hl
   0CF6 4D                 4841 	ld	c,l
                           4842 ;	game.c 727
                           4843 ;	genMinus
                           4844 ;	AOP_STK for _dog1_power_apply_i_1_1
   0CF7 F8 02              4845 	lda	hl,2(sp)
   0CF9 35                 4846 	dec	(hl)
                           4847 ;	genGoto
   0CFA C3 93 0C           4848 	jp	00106$
                           4849 ;	genLabel
   0CFD                    4850 00108$:
                           4851 ;	game.c 729
                           4852 ;	genPlus
                           4853 ;	AOP_STK for 
                           4854 ;	Can't optimise plus by inc, falling back to the normal way
   0CFD 11 05 19           4855 	ld	de,#_map
   0D00 F8 09              4856 	lda	hl,9(sp)
   0D02 2A                 4857 	ld	a,(hl+)
   0D03 66                 4858 	ld	h,(hl)
   0D04 6F                 4859 	ld	l,a
   0D05 19                 4860 	add	hl,de
   0D06 4D                 4861 	ld	c,l
   0D07 44                 4862 	ld	b,h
                           4863 ;	genPointerGet
                           4864 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0D08 0A                 4865 	ld	a,(bc)
   0D09 F8 01              4866 	lda	hl,1(sp)
                           4867 ;	genCmpLt
                           4868 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0D0B 77                 4869 	ld      (hl),a
                           4870 ; Removed redundent load
   0D0C FE 0B              4871 	cp	#0x0B
   0D0E DA 47 0D           4872 	jp	c,00113$
                           4873 ;	genCmpGt
                           4874 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0D11 3E 0E              4875 	ld	a,#0x0E
   0D13 96                 4876 	sub	a,(hl)
   0D14 DA 47 0D           4877 	jp	c,00113$
                           4878 ;	genMinus
                           4879 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4880 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0D17 7E                 4881 	ld	a,(hl)
   0D18 C6 F5              4882 	add	a,#0xF5
   0D1A 2B                 4883 	dec	hl
                           4884 ;	genJumpTab
                           4885 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0D1B 77                 4886 	ld      (hl),a
   0D1C 5F                 4887 	ld      e,a
   0D1D 16 00              4888 	ld	d,#0x00
   0D1F 21 26 0D           4889 	ld	hl,#00129$
   0D22 19                 4890 	add	hl,de
   0D23 19                 4891 	add	hl,de
   0D24 19                 4892 	add	hl,de
   0D25 E9                 4893 	jp	(hl)
   0D26                    4894 00129$:
   0D26 C3 32 0D           4895 	jp	00109$
   0D29 C3 38 0D           4896 	jp	00110$
   0D2C C3 3B 0D           4897 	jp	00111$
   0D2F C3 41 0D           4898 	jp	00112$
                           4899 ;	game.c 731
                           4900 ;	genLabel
   0D32                    4901 00109$:
                           4902 ;	genAssign (pointer)
   0D32 3E 30              4903 	ld	a,#0x30
   0D34 02                 4904 	ld	(bc),a
                           4905 ;	game.c 732
                           4906 ;	genGoto
   0D35 C3 4A 0D           4907 	jp	00114$
                           4908 ;	game.c 734
                           4909 ;	genLabel
   0D38                    4910 00110$:
                           4911 ;	genGoto
   0D38 C3 4A 0D           4912 	jp	00114$
                           4913 ;	game.c 736
                           4914 ;	genLabel
   0D3B                    4915 00111$:
                           4916 ;	genAssign (pointer)
   0D3B 3E 0F              4917 	ld	a,#0x0F
   0D3D 02                 4918 	ld	(bc),a
                           4919 ;	game.c 737
                           4920 ;	genGoto
   0D3E C3 4A 0D           4921 	jp	00114$
                           4922 ;	game.c 739
                           4923 ;	genLabel
   0D41                    4924 00112$:
                           4925 ;	genAssign (pointer)
   0D41 3E 0C              4926 	ld	a,#0x0C
   0D43 02                 4927 	ld	(bc),a
                           4928 ;	game.c 740
                           4929 ;	genGoto
   0D44 C3 4A 0D           4930 	jp	00114$
                           4931 ;	game.c 742
                           4932 ;	genLabel
   0D47                    4933 00113$:
                           4934 ;	genAssign (pointer)
   0D47 3E 2D              4935 	ld	a,#0x2D
   0D49 02                 4936 	ld	(bc),a
                           4937 ;	game.c 744
                           4938 ;	genLabel
   0D4A                    4939 00114$:
                           4940 ;	game.c 745
                           4941 ;	genIpush
                           4942 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D4A 21 05 19           4943 	ld	hl,#_map
   0D4D E5                 4944 	push	hl
                           4945 ;	genIpush
   0D4E 21 14 12           4946 	ld	hl,#0x1214
   0D51 E5                 4947 	push	hl
                           4948 ;	genIpush
   0D52 21 00 00           4949 	ld	hl,#0x0000
   0D55 E5                 4950 	push	hl
                           4951 ;	genCall
   0D56 CD 00 00           4952 	call	_set_bkg_tiles
   0D59 E8 06              4953 	lda	sp,6(sp)
                           4954 ;	game.c 746
                           4955 ;	genIpush
                           4956 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D5B 21 00 00           4957 	ld	hl,#0x0000
   0D5E E5                 4958 	push	hl
                           4959 ;	genIpush
   0D5F 3E 05              4960 	ld	a,#0x05
   0D61 F5                 4961 	push	af
   0D62 33                 4962 	inc	sp
                           4963 ;	genCall
   0D63 CD 00 00           4964 	call	_move_sprite
   0D66 E8 03              4965 	lda	sp,3(sp)
                           4966 ;	genLabel
   0D68                    4967 00115$:
                           4968 ;	genEndFunction
   0D68 E8 04              4969 	lda	sp,4(sp)
   0D6A C9                 4970 	ret
   0D6B                    4971 ___dog1_power_apply_end:
                           4972 ;	game.c 752
                           4973 ;	genLabel
                           4974 ;	genFunction
                           4975 ;	---------------------------------
                           4976 ; Function get_player_map_position
                           4977 ; ---------------------------------
   0D6B                    4978 ___get_player_map_position_start:
   0D6B                    4979 _get_player_map_position:
   0D6B E8 FC              4980 	lda	sp,-4(sp)
                           4981 ;	game.c 760
                           4982 ;	genCast
                           4983 ;	AOP_STK for 
   0D6D F8 06              4984 	lda	hl,6(sp)
   0D6F 4E                 4985 	ld	c,(hl)
   0D70 06 00              4986 	ld	b,#0x00
                           4987 ;	genRightShift
   0D72 CB 38              4988 	srl	b
   0D74 CB 19              4989 	rr	c
   0D76 CB 38              4990 	srl	b
   0D78 CB 19              4991 	rr	c
   0D7A CB 38              4992 	srl	b
   0D7C CB 19              4993 	rr	c
                           4994 ;	genMinus
   0D7E 0B                 4995 	dec	bc
                           4996 ;	genCast
                           4997 ;	AOP_STK for _get_player_map_position__x_1_1
   0D7F F8 03              4998 	lda	hl,3(sp)
   0D81 71                 4999 	ld	(hl),c
                           5000 ;	game.c 761
                           5001 ;	genCast
                           5002 ;	AOP_STK for 
   0D82 F8 07              5003 	lda	hl,7(sp)
   0D84 46                 5004 	ld	b,(hl)
   0D85 0E 00              5005 	ld	c,#0x00
                           5006 ;	genRightShift
   0D87 CB 39              5007 	srl	c
   0D89 CB 18              5008 	rr	b
   0D8B CB 39              5009 	srl	c
   0D8D CB 18              5010 	rr	b
   0D8F CB 39              5011 	srl	c
   0D91 CB 18              5012 	rr	b
                           5013 ;	genMinus
   0D93 58                 5014 	ld	e,b
   0D94 51                 5015 	ld	d,c
   0D95 1B                 5016 	dec	de
   0D96 1B                 5017 	dec	de
   0D97 43                 5018 	ld	b,e
   0D98 4A                 5019 	ld	c,d
                           5020 ;	genCast
                           5021 ;	AOP_STK for _get_player_map_position__y_1_1
   0D99 F8 02              5022 	lda	hl,2(sp)
   0D9B 70                 5023 	ld	(hl),b
                           5024 ;	game.c 765
                           5025 ;	genCast
                           5026 ;	AOP_STK for _get_player_map_position__x_1_1
                           5027 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0D9C 23                 5028 	inc	hl
   0D9D 7E                 5029 	ld	a,(hl)
   0D9E F8 00              5030 	lda	hl,0(sp)
   0DA0 22                 5031 	ld	(hl+),a
   0DA1 36 00              5032 	ld	(hl),#0x00
                           5033 ;	game.c 766
                           5034 ;	genCast
                           5035 ;	AOP_STK for _get_player_map_position__y_1_1
   0DA3 23                 5036 	inc	hl
   0DA4 4E                 5037 	ld	c,(hl)
   0DA5 06 00              5038 	ld	b,#0x00
                           5039 ;	genMult
   0DA7 59                 5040 	ld	e,c
   0DA8 50                 5041 	ld	d,b
   0DA9 6B                 5042 	ld	l,e
   0DAA 62                 5043 	ld	h,d
   0DAB 29                 5044 	add	hl,hl
   0DAC 29                 5045 	add	hl,hl
   0DAD 19                 5046 	add	hl,de
   0DAE 29                 5047 	add	hl,hl
   0DAF 29                 5048 	add	hl,hl
   0DB0 4D                 5049 	ld	c,l
   0DB1 44                 5050 	ld	b,h
                           5051 ;	genPlus
                           5052 ;	AOP_STK for _get_player_map_position_map_position_1_1
                           5053 ;	Can't optimise plus by inc, falling back to the normal way
   0DB2 F8 00              5054 	lda	hl,0(sp)
   0DB4 2A                 5055 	ld	a,(hl+)
   0DB5 66                 5056 	ld	h,(hl)
   0DB6 6F                 5057 	ld	l,a
   0DB7 09                 5058 	add	hl,bc
   0DB8 7D                 5059 	ld	a,l
   0DB9 54                 5060 	ld	d,h
   0DBA F8 00              5061 	lda	hl,0(sp)
   0DBC 22                 5062 	ld	(hl+),a
   0DBD 72                 5063 	ld	(hl),d
                           5064 ;	game.c 768
                           5065 ;	genRet
                           5066 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0DBE 2B                 5067 	dec	hl
   0DBF 5E                 5068 	ld	e,(hl)
   0DC0 23                 5069 	inc	hl
   0DC1 56                 5070 	ld	d,(hl)
                           5071 ;	genLabel
   0DC2                    5072 00101$:
                           5073 ;	genEndFunction
   0DC2 E8 04              5074 	lda	sp,4(sp)
   0DC4 C9                 5075 	ret
   0DC5                    5076 ___get_player_map_position_end:
                           5077 ;	game.c 771
                           5078 ;	genLabel
                           5079 ;	genFunction
                           5080 ;	---------------------------------
                           5081 ; Function player_input
                           5082 ; ---------------------------------
   0DC5                    5083 ___player_input_start:
   0DC5                    5084 _player_input:
   0DC5 E8 FB              5085 	lda	sp,-5(sp)
                           5086 ;	game.c 774
                           5087 ;	genAssign
                           5088 ;	AOP_STK for 
   0DC7 F8 07              5089 	lda	hl,7(sp)
   0DC9 4E                 5090 	ld	c,(hl)
   0DCA 23                 5091 	inc	hl
   0DCB 46                 5092 	ld	b,(hl)
                           5093 ;	genPointerGet
                           5094 ;	AOP_STK for _player_input_sloc0_1_0
   0DCC 59                 5095 	ld	e,c
   0DCD 50                 5096 	ld	d,b
   0DCE 1A                 5097 	ld	a,(de)
   0DCF F8 03              5098 	lda	hl,3(sp)
   0DD1 77                 5099 	ld	(hl),a
   0DD2 13                 5100 	inc	de
   0DD3 1A                 5101 	ld	a,(de)
   0DD4 23                 5102 	inc	hl
                           5103 ;	genPlus
                           5104 ;	AOP_STK for _player_input_sloc0_1_0
                           5105 ;	AOP_STK for _player_input_sloc1_1_0
                           5106 ;	genPlusIncr
                           5107 ;	Can't optimise plus by inc, falling back to the normal way
   0DD5 32                 5108 	ld      (hl-),a
   0DD6 5E                 5109 	ld	e,(hl)
   0DD7 23                 5110 	inc	hl
   0DD8 56                 5111 	ld	d,(hl)
   0DD9 21 0A 00           5112 	ld	hl,#0x000A
   0DDC 19                 5113 	add	hl,de
   0DDD 7D                 5114 	ld	a,l
   0DDE 54                 5115 	ld	d,h
   0DDF F8 01              5116 	lda	hl,1(sp)
                           5117 ;	genPointerGet
                           5118 ;	AOP_STK for _player_input_sloc1_1_0
                           5119 ;	AOP_STK for _player_input_sloc0_1_0
   0DE1 22                 5120 	ld	(hl+),a
   0DE2 72                 5121 	ld	(hl),d
   0DE3 5F                 5122 	ld	e,a
   0DE4 1A                 5123 	ld	a,(de)
   0DE5 23                 5124 	inc	hl
                           5125 ;	genCmpEq
                           5126 ;	AOP_STK for _player_input_sloc0_1_0
                           5127 ; genCmpEq: left 1, right 1, result 0
   0DE6 77                 5128 	ld      (hl),a
                           5129 ; Removed redundent load
   0DE7 B7                 5130 	or	a,a
   0DE8 C2 08 0F           5131 	jp	nz,00115$
   0DEB 18 03              5132 	jr	00128$
   0DED                    5133 00127$:
   0DED C3 08 0F           5134 	jp	00115$
   0DF0                    5135 00128$:
                           5136 ;	genCmpEq
                           5137 ;	AOP_HL for _input_timer
                           5138 ; genCmpEq: left 1, right 1, result 0
   0DF0 21 03 19           5139 	ld	hl,#_input_timer
   0DF3 7E                 5140 	ld	a,(hl)
   0DF4 B7                 5141 	or	a,a
   0DF5 C2 08 0F           5142 	jp	nz,00115$
   0DF8 18 03              5143 	jr	00130$
   0DFA                    5144 00129$:
   0DFA C3 08 0F           5145 	jp	00115$
   0DFD                    5146 00130$:
                           5147 ;	game.c 776
                           5148 ;	genCall
                           5149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0DFD C5                 5150 	push	bc
   0DFE CD 00 00           5151 	call	_joypad
                           5152 ;	AOP_STK for _player_input_sloc1_1_0
   0E01 F8 03              5153 	lda	hl,3(sp)
   0E03 73                 5154 	ld	(hl),e
   0E04 C1                 5155 	pop	bc
                           5156 ;	genCmpEq
                           5157 ;	AOP_STK for _player_input_sloc1_1_0
                           5158 ; genCmpEq: left 1, right 1, result 0
   0E05 F8 01              5159 	lda	hl,1(sp)
   0E07 7E                 5160 	ld	a,(hl)
   0E08 FE 01              5161 	cp	a,#0x01
   0E0A CA B8 0E           5162 	jp	z,00108$
   0E0D                    5163 00131$:
                           5164 ;	genCmpEq
                           5165 ;	AOP_STK for _player_input_sloc1_1_0
                           5166 ; genCmpEq: left 1, right 1, result 0
   0E0D F8 01              5167 	lda	hl,1(sp)
   0E0F 7E                 5168 	ld	a,(hl)
   0E10 FE 02              5169 	cp	a,#0x02
   0E12 CA 99 0E           5170 	jp	z,00107$
   0E15                    5171 00132$:
                           5172 ;	genCmpEq
                           5173 ;	AOP_STK for _player_input_sloc1_1_0
                           5174 ; genCmpEq: left 1, right 1, result 0
   0E15 F8 01              5175 	lda	hl,1(sp)
   0E17 7E                 5176 	ld	a,(hl)
   0E18 FE 04              5177 	cp	a,#0x04
   0E1A CA D7 0E           5178 	jp	z,00109$
   0E1D                    5179 00133$:
                           5180 ;	genCmpEq
                           5181 ;	AOP_STK for _player_input_sloc1_1_0
                           5182 ; genCmpEq: left 1, right 1, result 0
   0E1D F8 01              5183 	lda	hl,1(sp)
   0E1F 7E                 5184 	ld	a,(hl)
   0E20 FE 08              5185 	cp	a,#0x08
   0E22 CA F6 0E           5186 	jp	z,00110$
   0E25                    5187 00134$:
                           5188 ;	genCmpEq
                           5189 ;	AOP_STK for _player_input_sloc1_1_0
                           5190 ; genCmpEq: left 1, right 1, result 0
   0E25 F8 01              5191 	lda	hl,1(sp)
   0E27 7E                 5192 	ld	a,(hl)
   0E28 FE 10              5193 	cp	a,#0x10
   0E2A CA 38 0E           5194 	jp	z,00103$
   0E2D                    5195 00135$:
                           5196 ;	genCmpEq
                           5197 ;	AOP_STK for _player_input_sloc1_1_0
                           5198 ; genCmpEq: left 1, right 1, result 0
   0E2D F8 01              5199 	lda	hl,1(sp)
   0E2F 7E                 5200 	ld	a,(hl)
   0E30 FE 20              5201 	cp	a,#0x20
   0E32 CA 91 0E           5202 	jp	z,00106$
   0E35                    5203 00136$:
                           5204 ;	genGoto
   0E35 C3 08 0F           5205 	jp	00115$
                           5206 ;	game.c 782
                           5207 ;	genLabel
   0E38                    5208 00103$:
                           5209 ;	game.c 778
                           5210 ;	genPointerGet
                           5211 ;	AOP_STK for _player_input_sloc1_1_0
   0E38 59                 5212 	ld	e,c
   0E39 50                 5213 	ld	d,b
   0E3A 1A                 5214 	ld	a,(de)
   0E3B F8 01              5215 	lda	hl,1(sp)
   0E3D 77                 5216 	ld	(hl),a
   0E3E 13                 5217 	inc	de
   0E3F 1A                 5218 	ld	a,(de)
   0E40 23                 5219 	inc	hl
                           5220 ;	genPlus
                           5221 ;	AOP_STK for _player_input_sloc1_1_0
                           5222 ;	AOP_STK for _player_input_sloc0_1_0
                           5223 ;	genPlusIncr
                           5224 ;	Can't optimise plus by inc, falling back to the normal way
   0E41 32                 5225 	ld      (hl-),a
   0E42 5E                 5226 	ld	e,(hl)
   0E43 23                 5227 	inc	hl
   0E44 56                 5228 	ld	d,(hl)
   0E45 21 0B 00           5229 	ld	hl,#0x000B
   0E48 19                 5230 	add	hl,de
   0E49 7D                 5231 	ld	a,l
   0E4A 54                 5232 	ld	d,h
   0E4B F8 03              5233 	lda	hl,3(sp)
                           5234 ;	genPointerGet
                           5235 ;	AOP_STK for _player_input_sloc0_1_0
                           5236 ;	AOP_STK for _player_input_sloc2_1_0
   0E4D 22                 5237 	ld	(hl+),a
   0E4E 72                 5238 	ld	(hl),d
   0E4F 5F                 5239 	ld	e,a
   0E50 1A                 5240 	ld	a,(de)
   0E51 F8 00              5241 	lda	hl,0(sp)
                           5242 ;	genCmpEq
                           5243 ;	AOP_STK for _player_input_sloc2_1_0
                           5244 ; genCmpEq: left 1, right 1, result 0
   0E53 77                 5245 	ld      (hl),a
                           5246 ; Removed redundent load
   0E54 FE 01              5247 	cp	a,#0x01
   0E56 C2 7C 0E           5248 	jp	nz,00102$
   0E59 18 03              5249 	jr	00138$
   0E5B                    5250 00137$:
   0E5B C3 7C 0E           5251 	jp	00102$
   0E5E                    5252 00138$:
                           5253 ;	game.c 779
                           5254 ;	genPlus
                           5255 ;	AOP_STK for _player_input_sloc1_1_0
                           5256 ;	genPlusIncr
                           5257 ;	Can't optimise plus by inc, falling back to the normal way
   0E5E F8 01              5258 	lda	hl,1(sp)
   0E60 5E                 5259 	ld	e,(hl)
   0E61 23                 5260 	inc	hl
   0E62 56                 5261 	ld	d,(hl)
   0E63 21 0A 00           5262 	ld	hl,#0x000A
   0E66 19                 5263 	add	hl,de
   0E67 7D                 5264 	ld	a,l
   0E68 54                 5265 	ld	d,h
   0E69 6F                 5266 	ld	l,a
   0E6A 62                 5267 	ld	h,d
                           5268 ;	genAssign (pointer)
   0E6B 36 10              5269 	ld	(hl),#0x10
                           5270 ;	game.c 780
                           5271 ;	genPlus
                           5272 ;	AOP_STK for _player_input_sloc1_1_0
                           5273 ;	genPlusIncr
                           5274 ;	Can't optimise plus by inc, falling back to the normal way
   0E6D F8 01              5275 	lda	hl,1(sp)
   0E6F 5E                 5276 	ld	e,(hl)
   0E70 23                 5277 	inc	hl
   0E71 56                 5278 	ld	d,(hl)
   0E72 21 09 00           5279 	ld	hl,#0x0009
   0E75 19                 5280 	add	hl,de
   0E76 7D                 5281 	ld	a,l
   0E77 54                 5282 	ld	d,h
   0E78 6F                 5283 	ld	l,a
   0E79 62                 5284 	ld	h,d
                           5285 ;	genAssign (pointer)
   0E7A 36 01              5286 	ld	(hl),#0x01
                           5287 ;	genLabel
   0E7C                    5288 00102$:
                           5289 ;	game.c 782
                           5290 ;	genCmpEq
                           5291 ;	AOP_STK for _player_input_sloc2_1_0
                           5292 ; genCmpEq: left 1, right 1, result 0
   0E7C F8 00              5293 	lda	hl,0(sp)
   0E7E 7E                 5294 	ld	a,(hl)
   0E7F FE 02              5295 	cp	a,#0x02
   0E81 C2 08 0F           5296 	jp	nz,00115$
   0E84 18 03              5297 	jr	00140$
   0E86                    5298 00139$:
   0E86 C3 08 0F           5299 	jp	00115$
   0E89                    5300 00140$:
                           5301 ;	game.c 783
                           5302 ;	genCall
                           5303 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E89 C5                 5304 	push	bc
   0E8A CD A1 08           5305 	call	_dog1_power
   0E8D C1                 5306 	pop	bc
                           5307 ;	game.c 787
                           5308 ;	genGoto
   0E8E C3 08 0F           5309 	jp	00115$
                           5310 ;	game.c 791
                           5311 ;	genLabel
   0E91                    5312 00106$:
                           5313 ;	genCall
                           5314 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E91 C5                 5315 	push	bc
   0E92 CD CA 01           5316 	call	_change_char
   0E95 C1                 5317 	pop	bc
                           5318 ;	game.c 792
                           5319 ;	genGoto
   0E96 C3 08 0F           5320 	jp	00115$
                           5321 ;	game.c 795
                           5322 ;	genLabel
   0E99                    5323 00107$:
                           5324 ;	genAssign
                           5325 ;	AOP_HL for _input_timer
   0E99 21 03 19           5326 	ld	hl,#_input_timer
   0E9C 36 04              5327 	ld	(hl),#0x04
                           5328 ;	game.c 796
                           5329 ;	genPointerGet
                           5330 ;	AOP_STK for _player_input_sloc1_1_0
   0E9E 59                 5331 	ld	e,c
   0E9F 50                 5332 	ld	d,b
   0EA0 1A                 5333 	ld	a,(de)
   0EA1 F8 01              5334 	lda	hl,1(sp)
   0EA3 77                 5335 	ld	(hl),a
   0EA4 13                 5336 	inc	de
   0EA5 1A                 5337 	ld	a,(de)
   0EA6 23                 5338 	inc	hl
                           5339 ;	genPlus
                           5340 ;	AOP_STK for _player_input_sloc1_1_0
                           5341 ;	genPlusIncr
                           5342 ;	Can't optimise plus by inc, falling back to the normal way
   0EA7 32                 5343 	ld      (hl-),a
   0EA8 5E                 5344 	ld	e,(hl)
   0EA9 23                 5345 	inc	hl
   0EAA 56                 5346 	ld	d,(hl)
   0EAB 21 08 00           5347 	ld	hl,#0x0008
   0EAE 19                 5348 	add	hl,de
   0EAF 7D                 5349 	ld	a,l
   0EB0 54                 5350 	ld	d,h
   0EB1 6F                 5351 	ld	l,a
   0EB2 62                 5352 	ld	h,d
                           5353 ;	genAssign (pointer)
   0EB3 36 04              5354 	ld	(hl),#0x04
                           5355 ;	game.c 797
                           5356 ;	genGoto
   0EB5 C3 08 0F           5357 	jp	00115$
                           5358 ;	game.c 799
                           5359 ;	genLabel
   0EB8                    5360 00108$:
                           5361 ;	genAssign
                           5362 ;	AOP_HL for _input_timer
   0EB8 21 03 19           5363 	ld	hl,#_input_timer
   0EBB 36 04              5364 	ld	(hl),#0x04
                           5365 ;	game.c 800
                           5366 ;	genPointerGet
                           5367 ;	AOP_STK for _player_input_sloc1_1_0
   0EBD 59                 5368 	ld	e,c
   0EBE 50                 5369 	ld	d,b
   0EBF 1A                 5370 	ld	a,(de)
   0EC0 F8 01              5371 	lda	hl,1(sp)
   0EC2 77                 5372 	ld	(hl),a
   0EC3 13                 5373 	inc	de
   0EC4 1A                 5374 	ld	a,(de)
   0EC5 23                 5375 	inc	hl
                           5376 ;	genPlus
                           5377 ;	AOP_STK for _player_input_sloc1_1_0
                           5378 ;	genPlusIncr
                           5379 ;	Can't optimise plus by inc, falling back to the normal way
   0EC6 32                 5380 	ld      (hl-),a
   0EC7 5E                 5381 	ld	e,(hl)
   0EC8 23                 5382 	inc	hl
   0EC9 56                 5383 	ld	d,(hl)
   0ECA 21 08 00           5384 	ld	hl,#0x0008
   0ECD 19                 5385 	add	hl,de
   0ECE 7D                 5386 	ld	a,l
   0ECF 54                 5387 	ld	d,h
   0ED0 6F                 5388 	ld	l,a
   0ED1 62                 5389 	ld	h,d
                           5390 ;	genAssign (pointer)
   0ED2 36 02              5391 	ld	(hl),#0x02
                           5392 ;	game.c 801
                           5393 ;	genGoto
   0ED4 C3 08 0F           5394 	jp	00115$
                           5395 ;	game.c 803
                           5396 ;	genLabel
   0ED7                    5397 00109$:
                           5398 ;	genAssign
                           5399 ;	AOP_HL for _input_timer
   0ED7 21 03 19           5400 	ld	hl,#_input_timer
   0EDA 36 04              5401 	ld	(hl),#0x04
                           5402 ;	game.c 804
                           5403 ;	genPointerGet
                           5404 ;	AOP_STK for _player_input_sloc1_1_0
   0EDC 59                 5405 	ld	e,c
   0EDD 50                 5406 	ld	d,b
   0EDE 1A                 5407 	ld	a,(de)
   0EDF F8 01              5408 	lda	hl,1(sp)
   0EE1 77                 5409 	ld	(hl),a
   0EE2 13                 5410 	inc	de
   0EE3 1A                 5411 	ld	a,(de)
   0EE4 23                 5412 	inc	hl
                           5413 ;	genPlus
                           5414 ;	AOP_STK for _player_input_sloc1_1_0
                           5415 ;	genPlusIncr
                           5416 ;	Can't optimise plus by inc, falling back to the normal way
   0EE5 32                 5417 	ld      (hl-),a
   0EE6 5E                 5418 	ld	e,(hl)
   0EE7 23                 5419 	inc	hl
   0EE8 56                 5420 	ld	d,(hl)
   0EE9 21 08 00           5421 	ld	hl,#0x0008
   0EEC 19                 5422 	add	hl,de
   0EED 7D                 5423 	ld	a,l
   0EEE 54                 5424 	ld	d,h
   0EEF 6F                 5425 	ld	l,a
   0EF0 62                 5426 	ld	h,d
                           5427 ;	genAssign (pointer)
   0EF1 36 01              5428 	ld	(hl),#0x01
                           5429 ;	game.c 805
                           5430 ;	genGoto
   0EF3 C3 08 0F           5431 	jp	00115$
                           5432 ;	game.c 807
                           5433 ;	genLabel
   0EF6                    5434 00110$:
                           5435 ;	genPointerGet
   0EF6 59                 5436 	ld	e,c
   0EF7 50                 5437 	ld	d,b
   0EF8 1A                 5438 	ld	a,(de)
   0EF9 4F                 5439 	ld	c,a
   0EFA 13                 5440 	inc	de
   0EFB 1A                 5441 	ld	a,(de)
   0EFC 47                 5442 	ld	b,a
                           5443 ;	genPlus
                           5444 ;	genPlusIncr
   0EFD 21 08 00           5445 	ld	hl,#0x0008
   0F00 09                 5446 	add	hl,bc
                           5447 ;	genAssign (pointer)
   0F01 36 03              5448 	ld	(hl),#0x03
                           5449 ;	game.c 808
                           5450 ;	genAssign
                           5451 ;	AOP_HL for _input_timer
   0F03 21 03 19           5452 	ld	hl,#_input_timer
   0F06 36 04              5453 	ld	(hl),#0x04
                           5454 ;	game.c 812
                           5455 ;	genLabel
   0F08                    5456 00115$:
                           5457 ;	genEndFunction
   0F08 E8 05              5458 	lda	sp,5(sp)
   0F0A C9                 5459 	ret
   0F0B                    5460 ___player_input_end:
                           5461 ;	game.c 821
                           5462 ;	genLabel
                           5463 ;	genFunction
                           5464 ;	---------------------------------
                           5465 ; Function can_move_to_map_pos
                           5466 ; ---------------------------------
   0F0B                    5467 ___can_move_to_map_pos_start:
   0F0B                    5468 _can_move_to_map_pos:
                           5469 	
                           5470 ;	game.c 823
                           5471 ;	genPlus
                           5472 ;	AOP_STK for 
                           5473 ;	Can't optimise plus by inc, falling back to the normal way
   0F0B 11 05 19           5474 	ld	de,#_map
   0F0E F8 02              5475 	lda	hl,2(sp)
   0F10 2A                 5476 	ld	a,(hl+)
   0F11 66                 5477 	ld	h,(hl)
   0F12 6F                 5478 	ld	l,a
   0F13 19                 5479 	add	hl,de
   0F14 4D                 5480 	ld	c,l
   0F15 44                 5481 	ld	b,h
                           5482 ;	genPointerGet
   0F16 0A                 5483 	ld	a,(bc)
   0F17 4F                 5484 	ld	c,a
                           5485 ;	genCast
                           5486 ; Removed redundent load
   0F18 06 00              5487 	ld	b,#0x00
                           5488 ;	genCmpGt
   0F1A 3E 14              5489 	ld	a,#0x14
   0F1C 91                 5490 	sub	a,c
   0F1D 3E 00              5491 	ld	a,#0x00
   0F1F 98                 5492 	sbc	a,b
   0F20 D2 32 0F           5493 	jp	nc,00102$
                           5494 ;	game.c 824
                           5495 ;	genCmpLt
   0F23 79                 5496 	ld	a,c
   0F24 D6 29              5497 	sub	a,#0x29
   0F26 78                 5498 	ld	a,b
   0F27 DE 00              5499 	sbc	a,#0x00
   0F29 D2 32 0F           5500 	jp	nc,00102$
                           5501 ;	game.c 826
                           5502 ;	genRet
   0F2C 11 00 00           5503 	ld	de,#0x0000
   0F2F C3 BD 0F           5504 	jp	00112$
                           5505 ;	genLabel
   0F32                    5506 00102$:
                           5507 ;	game.c 830
                           5508 ;	genCmpEq
                           5509 ; genCmpEq: left 2, right 2, result 0
   0F32 79                 5510 	ld	a,c
   0F33 FE 29              5511 	cp	a,#0x29
   0F35 C2 3D 0F           5512 	jp	nz,00120$
   0F38 78                 5513 	ld	a,b
   0F39 B7                 5514 	or	a,a
   0F3A CA 4D 0F           5515 	jp	z,00104$
   0F3D                    5516 00120$:
                           5517 ;	genCmpEq
                           5518 ; genCmpEq: left 2, right 2, result 0
   0F3D 79                 5519 	ld	a,c
   0F3E FE 2D              5520 	cp	a,#0x2D
   0F40 C2 4A 0F           5521 	jp	nz,00121$
   0F43 78                 5522 	ld	a,b
   0F44 B7                 5523 	or	a,a
   0F45 C2 53 0F           5524 	jp	nz,00106$
   0F48 18 03              5525 	jr	00122$
   0F4A                    5526 00121$:
   0F4A C3 53 0F           5527 	jp	00106$
   0F4D                    5528 00122$:
                           5529 ;	game.c 842
                           5530 ;	genLabel
   0F4D                    5531 00104$:
                           5532 ;	genRet
   0F4D 11 00 00           5533 	ld	de,#0x0000
   0F50 C3 BD 0F           5534 	jp	00112$
                           5535 ;	game.c 844
                           5536 ;	genLabel
   0F53                    5537 00106$:
                           5538 ;	game.c 846
                           5539 ;	genPlus
                           5540 ;	genPlusIncr
   0F53 01 79 1A           5541 	ld	bc,#_bunny + 12
                           5542 ;	genPointerGet
   0F56 59                 5543 	ld	e,c
   0F57 50                 5544 	ld	d,b
   0F58 1A                 5545 	ld	a,(de)
   0F59 4F                 5546 	ld	c,a
   0F5A 13                 5547 	inc	de
   0F5B 1A                 5548 	ld	a,(de)
   0F5C 47                 5549 	ld	b,a
                           5550 ;	genCmpEq
                           5551 ;	AOP_STK for 
                           5552 ; genCmpEq: left 2, right 2, result 0
   0F5D F8 02              5553 	lda	hl,2(sp)
   0F5F 7E                 5554 	ld	a,(hl)
   0F60 B9                 5555 	cp	c
   0F61 C2 6A 0F           5556 	jp	nz,00123$
   0F64 23                 5557 	inc	hl
   0F65 7E                 5558 	ld	a,(hl)
   0F66 B8                 5559 	cp	b
   0F67 CA B4 0F           5560 	jp	z,00107$
   0F6A                    5561 00123$:
                           5562 ;	game.c 847
                           5563 ;	genPlus
                           5564 ;	genPlusIncr
   0F6A 01 87 1A           5565 	ld	bc,#_dog1 + 12
                           5566 ;	genPointerGet
   0F6D 59                 5567 	ld	e,c
   0F6E 50                 5568 	ld	d,b
   0F6F 1A                 5569 	ld	a,(de)
   0F70 4F                 5570 	ld	c,a
   0F71 13                 5571 	inc	de
   0F72 1A                 5572 	ld	a,(de)
   0F73 47                 5573 	ld	b,a
                           5574 ;	genCmpEq
                           5575 ;	AOP_STK for 
                           5576 ; genCmpEq: left 2, right 2, result 0
   0F74 F8 02              5577 	lda	hl,2(sp)
   0F76 7E                 5578 	ld	a,(hl)
   0F77 B9                 5579 	cp	c
   0F78 C2 81 0F           5580 	jp	nz,00124$
   0F7B 23                 5581 	inc	hl
   0F7C 7E                 5582 	ld	a,(hl)
   0F7D B8                 5583 	cp	b
   0F7E CA B4 0F           5584 	jp	z,00107$
   0F81                    5585 00124$:
                           5586 ;	game.c 848
                           5587 ;	genPlus
                           5588 ;	genPlusIncr
   0F81 01 95 1A           5589 	ld	bc,#_dog2 + 12
                           5590 ;	genPointerGet
   0F84 59                 5591 	ld	e,c
   0F85 50                 5592 	ld	d,b
   0F86 1A                 5593 	ld	a,(de)
   0F87 4F                 5594 	ld	c,a
   0F88 13                 5595 	inc	de
   0F89 1A                 5596 	ld	a,(de)
   0F8A 47                 5597 	ld	b,a
                           5598 ;	genCmpEq
                           5599 ;	AOP_STK for 
                           5600 ; genCmpEq: left 2, right 2, result 0
   0F8B F8 02              5601 	lda	hl,2(sp)
   0F8D 7E                 5602 	ld	a,(hl)
   0F8E B9                 5603 	cp	c
   0F8F C2 98 0F           5604 	jp	nz,00125$
   0F92 23                 5605 	inc	hl
   0F93 7E                 5606 	ld	a,(hl)
   0F94 B8                 5607 	cp	b
   0F95 CA B4 0F           5608 	jp	z,00107$
   0F98                    5609 00125$:
                           5610 ;	game.c 849
                           5611 ;	genPlus
                           5612 ;	genPlusIncr
   0F98 01 A3 1A           5613 	ld	bc,#_cat + 12
                           5614 ;	genPointerGet
   0F9B 59                 5615 	ld	e,c
   0F9C 50                 5616 	ld	d,b
   0F9D 1A                 5617 	ld	a,(de)
   0F9E 4F                 5618 	ld	c,a
   0F9F 13                 5619 	inc	de
   0FA0 1A                 5620 	ld	a,(de)
   0FA1 47                 5621 	ld	b,a
                           5622 ;	genCmpEq
                           5623 ;	AOP_STK for 
                           5624 ; genCmpEq: left 2, right 2, result 0
   0FA2 F8 02              5625 	lda	hl,2(sp)
   0FA4 7E                 5626 	ld	a,(hl)
   0FA5 B9                 5627 	cp	c
   0FA6 C2 B1 0F           5628 	jp	nz,00126$
   0FA9 23                 5629 	inc	hl
   0FAA 7E                 5630 	ld	a,(hl)
   0FAB B8                 5631 	cp	b
   0FAC C2 BA 0F           5632 	jp	nz,00108$
   0FAF 18 03              5633 	jr	00127$
   0FB1                    5634 00126$:
   0FB1 C3 BA 0F           5635 	jp	00108$
   0FB4                    5636 00127$:
                           5637 ;	genLabel
   0FB4                    5638 00107$:
                           5639 ;	game.c 851
                           5640 ;	genRet
   0FB4 11 00 00           5641 	ld	de,#0x0000
   0FB7 C3 BD 0F           5642 	jp	00112$
                           5643 ;	genLabel
   0FBA                    5644 00108$:
                           5645 ;	game.c 854
                           5646 ;	genRet
   0FBA 11 01 00           5647 	ld	de,#0x0001
                           5648 ;	genLabel
   0FBD                    5649 00112$:
                           5650 ;	genEndFunction
                           5651 	
   0FBD C9                 5652 	ret
   0FBE                    5653 ___can_move_to_map_pos_end:
                           5654 ;	game.c 857
                           5655 ;	genLabel
                           5656 ;	genFunction
                           5657 ;	---------------------------------
                           5658 ; Function can_move
                           5659 ; ---------------------------------
   0FBE                    5660 ___can_move_start:
   0FBE                    5661 _can_move:
   0FBE E8 FA              5662 	lda	sp,-6(sp)
                           5663 ;	game.c 868
                           5664 ;	genCmpGt
                           5665 ;	AOP_STK for 
   0FC0 3E 04              5666 	ld	a,#0x04
   0FC2 F8 0A              5667 	lda	hl,10(sp)
   0FC4 96                 5668 	sub	a,(hl)
   0FC5 DA 0B 10           5669 	jp	c,00106$
                           5670 ;	genJumpTab
                           5671 ;	AOP_STK for 
   0FC8 5E                 5672 	ld	e,(hl)
   0FC9 16 00              5673 	ld	d,#0x00
   0FCB 21 D2 0F           5674 	ld	hl,#00121$
   0FCE 19                 5675 	add	hl,de
   0FCF 19                 5676 	add	hl,de
   0FD0 19                 5677 	add	hl,de
   0FD1 E9                 5678 	jp	(hl)
   0FD2                    5679 00121$:
   0FD2 C3 05 10           5680 	jp	00105$
   0FD5 C3 F3 0F           5681 	jp	00103$
   0FD8 C3 EA 0F           5682 	jp	00102$
   0FDB C3 FC 0F           5683 	jp	00104$
   0FDE C3 E1 0F           5684 	jp	00101$
                           5685 ;	game.c 870
                           5686 ;	genLabel
   0FE1                    5687 00101$:
                           5688 ;	genMinus
                           5689 ;	AOP_STK for 
   0FE1 F8 08              5690 	lda	hl,8(sp)
   0FE3 7E                 5691 	ld	a,(hl)
   0FE4 C6 F8              5692 	add	a,#0xF8
   0FE6 77                 5693 	ld	(hl),a
                           5694 ;	game.c 871
                           5695 ;	genGoto
   0FE7 C3 0B 10           5696 	jp	00106$
                           5697 ;	game.c 873
                           5698 ;	genLabel
   0FEA                    5699 00102$:
                           5700 ;	genPlus
                           5701 ;	AOP_STK for 
                           5702 ;	genPlusIncr
                           5703 ;	Can't optimise plus by inc, falling back to the normal way
   0FEA F8 08              5704 	lda	hl,8(sp)
   0FEC 7E                 5705 	ld	a,(hl)
   0FED C6 08              5706 	add	a,#0x08
   0FEF 77                 5707 	ld	(hl),a
                           5708 ;	game.c 874
                           5709 ;	genGoto
   0FF0 C3 0B 10           5710 	jp	00106$
                           5711 ;	game.c 876
                           5712 ;	genLabel
   0FF3                    5713 00103$:
                           5714 ;	genMinus
                           5715 ;	AOP_STK for 
   0FF3 F8 09              5716 	lda	hl,9(sp)
   0FF5 7E                 5717 	ld	a,(hl)
   0FF6 C6 F8              5718 	add	a,#0xF8
   0FF8 77                 5719 	ld	(hl),a
                           5720 ;	game.c 877
                           5721 ;	genGoto
   0FF9 C3 0B 10           5722 	jp	00106$
                           5723 ;	game.c 879
                           5724 ;	genLabel
   0FFC                    5725 00104$:
                           5726 ;	genPlus
                           5727 ;	AOP_STK for 
                           5728 ;	genPlusIncr
                           5729 ;	Can't optimise plus by inc, falling back to the normal way
   0FFC F8 09              5730 	lda	hl,9(sp)
   0FFE 7E                 5731 	ld	a,(hl)
   0FFF C6 08              5732 	add	a,#0x08
   1001 77                 5733 	ld	(hl),a
                           5734 ;	game.c 880
                           5735 ;	genGoto
   1002 C3 0B 10           5736 	jp	00106$
                           5737 ;	game.c 882
                           5738 ;	genLabel
   1005                    5739 00105$:
                           5740 ;	genRet
   1005 11 00 00           5741 	ld	de,#0x0000
   1008 C3 A4 10           5742 	jp	00114$
                           5743 ;	game.c 883
                           5744 ;	genLabel
   100B                    5745 00106$:
                           5746 ;	game.c 885
                           5747 ;	genCast
                           5748 ;	AOP_STK for 
   100B F8 08              5749 	lda	hl,8(sp)
   100D 4E                 5750 	ld	c,(hl)
   100E 06 00              5751 	ld	b,#0x00
                           5752 ;	genRightShift
   1010 CB 38              5753 	srl	b
   1012 CB 19              5754 	rr	c
   1014 CB 38              5755 	srl	b
   1016 CB 19              5756 	rr	c
   1018 CB 38              5757 	srl	b
   101A CB 19              5758 	rr	c
                           5759 ;	genMinus
   101C 0B                 5760 	dec	bc
                           5761 ;	genCast
                           5762 ;	AOP_STK for _can_move__x_1_1
   101D F8 05              5763 	lda	hl,5(sp)
   101F 71                 5764 	ld	(hl),c
                           5765 ;	game.c 886
                           5766 ;	genCast
                           5767 ;	AOP_STK for 
   1020 F8 09              5768 	lda	hl,9(sp)
   1022 46                 5769 	ld	b,(hl)
   1023 0E 00              5770 	ld	c,#0x00
                           5771 ;	genRightShift
   1025 CB 39              5772 	srl	c
   1027 CB 18              5773 	rr	b
   1029 CB 39              5774 	srl	c
   102B CB 18              5775 	rr	b
   102D CB 39              5776 	srl	c
   102F CB 18              5777 	rr	b
                           5778 ;	genMinus
   1031 58                 5779 	ld	e,b
   1032 51                 5780 	ld	d,c
   1033 1B                 5781 	dec	de
   1034 1B                 5782 	dec	de
   1035 43                 5783 	ld	b,e
   1036 4A                 5784 	ld	c,d
                           5785 ;	genCast
                           5786 ;	AOP_STK for _can_move__y_1_1
   1037 F8 04              5787 	lda	hl,4(sp)
   1039 70                 5788 	ld	(hl),b
                           5789 ;	game.c 893
                           5790 ;	genCmpLt
                           5791 ;	AOP_STK for _can_move__x_1_1
   103A 23                 5792 	inc	hl
   103B 7E                 5793 	ld	a,(hl)
   103C FE 00              5794 	cp	#0x00
   103E DA 65 10           5795 	jp	c,00107$
                           5796 ;	genCast
                           5797 ;	AOP_STK for _can_move__x_1_1
   1041 46                 5798 	ld	b,(hl)
   1042 0E 00              5799 	ld	c,#0x00
                           5800 ;	genCmpGt
   1044 3E 13              5801 	ld	a,#0x13
   1046 90                 5802 	sub	a,b
   1047 3E 00              5803 	ld	a,#0x00
   1049 99                 5804 	sbc	a,c
   104A DA 65 10           5805 	jp	c,00107$
                           5806 ;	genCmpLt
                           5807 ;	AOP_STK for _can_move__y_1_1
   104D 2B                 5808 	dec	hl
   104E 7E                 5809 	ld	a,(hl)
   104F FE 00              5810 	cp	#0x00
   1051 DA 65 10           5811 	jp	c,00107$
                           5812 ;	genCast
                           5813 ;	AOP_STK for _can_move__y_1_1
                           5814 ;	AOP_STK for _can_move_sloc0_1_0
   1054 7E                 5815 	ld	a,(hl)
   1055 F8 00              5816 	lda	hl,0(sp)
   1057 22                 5817 	ld	(hl+),a
   1058 36 00              5818 	ld	(hl),#0x00
                           5819 ;	genCmpGt
                           5820 ;	AOP_STK for _can_move_sloc0_1_0
   105A 3E 11              5821 	ld	a,#0x11
   105C 2B                 5822 	dec	hl
   105D 96                 5823 	sub	a,(hl)
   105E 3E 00              5824 	ld	a,#0x00
   1060 23                 5825 	inc	hl
   1061 9E                 5826 	sbc	a,(hl)
   1062 D2 6B 10           5827 	jp	nc,00108$
                           5828 ;	genLabel
   1065                    5829 00107$:
                           5830 ;	game.c 895
                           5831 ;	genRet
   1065 11 00 00           5832 	ld	de,#0x0000
   1068 C3 A4 10           5833 	jp	00114$
                           5834 ;	genLabel
   106B                    5835 00108$:
                           5836 ;	game.c 902
                           5837 ;	genAssign
                           5838 ;	(registers are the same)
                           5839 ;	genAssign
                           5840 ;	AOP_STK for _can_move_map_position_1_1
   106B F8 02              5841 	lda	hl,2(sp)
   106D 70                 5842 	ld	(hl),b
   106E 23                 5843 	inc	hl
   106F 71                 5844 	ld	(hl),c
                           5845 ;	game.c 903
                           5846 ;	genMult
                           5847 ;	AOP_STK for _can_move_sloc0_1_0
   1070 F8 00              5848 	lda	hl,0(sp)
   1072 5E                 5849 	ld	e,(hl)
   1073 23                 5850 	inc	hl
   1074 56                 5851 	ld	d,(hl)
   1075 6B                 5852 	ld	l,e
   1076 62                 5853 	ld	h,d
   1077 29                 5854 	add	hl,hl
   1078 29                 5855 	add	hl,hl
   1079 19                 5856 	add	hl,de
   107A 29                 5857 	add	hl,hl
   107B 29                 5858 	add	hl,hl
   107C 4D                 5859 	ld	c,l
   107D 44                 5860 	ld	b,h
                           5861 ;	genPlus
                           5862 ;	AOP_STK for _can_move_map_position_1_1
                           5863 ;	Can't optimise plus by inc, falling back to the normal way
   107E F8 02              5864 	lda	hl,2(sp)
   1080 2A                 5865 	ld	a,(hl+)
   1081 66                 5866 	ld	h,(hl)
   1082 6F                 5867 	ld	l,a
   1083 09                 5868 	add	hl,bc
   1084 7D                 5869 	ld	a,l
   1085 54                 5870 	ld	d,h
   1086 F8 02              5871 	lda	hl,2(sp)
   1088 22                 5872 	ld	(hl+),a
   1089 72                 5873 	ld	(hl),d
                           5874 ;	game.c 905
                           5875 ;	genIpush
                           5876 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5877 ;	AOP_STK for _can_move_map_position_1_1
   108A 2B                 5878 	dec	hl
   108B 2A                 5879 	ld	a,(hl+)
   108C 66                 5880 	ld	h,(hl)
   108D 6F                 5881 	ld	l,a
   108E E5                 5882 	push	hl
                           5883 ;	genCall
   108F CD 0B 0F           5884 	call	_can_move_to_map_pos
   1092 42                 5885 	ld	b,d
   1093 4B                 5886 	ld	c,e
   1094 E8 02              5887 	lda	sp,2(sp)
                           5888 ;	genIfx
   1096 79                 5889 	ld	a,c
   1097 B0                 5890 	or	a,b
   1098 CA A1 10           5891 	jp	z,00113$
                           5892 ;	game.c 906
                           5893 ;	genRet
   109B 11 01 00           5894 	ld	de,#0x0001
   109E C3 A4 10           5895 	jp	00114$
                           5896 ;	genLabel
   10A1                    5897 00113$:
                           5898 ;	game.c 909
                           5899 ;	genRet
   10A1 11 00 00           5900 	ld	de,#0x0000
                           5901 ;	genLabel
   10A4                    5902 00114$:
                           5903 ;	genEndFunction
   10A4 E8 06              5904 	lda	sp,6(sp)
   10A6 C9                 5905 	ret
   10A7                    5906 ___can_move_end:
                           5907 ;	game.c 912
                           5908 ;	genLabel
                           5909 ;	genFunction
                           5910 ;	---------------------------------
                           5911 ; Function rotate_player
                           5912 ; ---------------------------------
   10A7                    5913 ___rotate_player_start:
   10A7                    5914 _rotate_player:
   10A7 E8 FC              5915 	lda	sp,-4(sp)
                           5916 ;	game.c 913
                           5917 ;	genAssign
                           5918 ;	AOP_HL for _player
   10A9 21 B3 1A           5919 	ld	hl,#_player
   10AC 4E                 5920 	ld	c,(hl)
   10AD 23                 5921 	inc	hl
   10AE 46                 5922 	ld	b,(hl)
                           5923 ;	genPlus
                           5924 ;	genPlusIncr
                           5925 ;	Can't optimise plus by inc, falling back to the normal way
   10AF 79                 5926 	ld	a,c
   10B0 C6 07              5927 	add	a,#0x07
   10B2 4F                 5928 	ld	c,a
   10B3 78                 5929 	ld	a,b
   10B4 CE 00              5930 	adc	a,#0x00
   10B6 47                 5931 	ld	b,a
                           5932 ;	genPointerGet
   10B7 0A                 5933 	ld	a,(bc)
   10B8 4F                 5934 	ld	c,a
                           5935 ;	genAssign
                           5936 ;	AOP_HL for _player
                           5937 ;	AOP_STK for _rotate_player_sloc0_1_0
   10B9 2B                 5938 	dec	hl
   10BA 2A                 5939 	ld	a,(hl+)
   10BB 5E                 5940 	ld	e,(hl)
   10BC F8 02              5941 	lda	hl,2(sp)
   10BE 22                 5942 	ld	(hl+),a
   10BF 73                 5943 	ld	(hl),e
                           5944 ;	genPlus
                           5945 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5946 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5947 ;	genPlusIncr
                           5948 ;	Can't optimise plus by inc, falling back to the normal way
   10C0 2B                 5949 	dec	hl
   10C1 5E                 5950 	ld	e,(hl)
   10C2 23                 5951 	inc	hl
   10C3 56                 5952 	ld	d,(hl)
   10C4 21 0B 00           5953 	ld	hl,#0x000B
   10C7 19                 5954 	add	hl,de
   10C8 7D                 5955 	ld	a,l
   10C9 54                 5956 	ld	d,h
   10CA F8 00              5957 	lda	hl,0(sp)
                           5958 ;	genPointerGet
                           5959 ;	AOP_STK for _rotate_player_sloc1_1_0
   10CC 22                 5960 	ld	(hl+),a
   10CD 72                 5961 	ld	(hl),d
   10CE 5F                 5962 	ld	e,a
   10CF 1A                 5963 	ld	a,(de)
   10D0 47                 5964 	ld	b,a
                           5965 ;	genIpush
                           5966 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10D1 79                 5967 	ld	a,c
   10D2 F5                 5968 	push	af
   10D3 33                 5969 	inc	sp
                           5970 ;	genIpush
   10D4 78                 5971 	ld	a,b
   10D5 F5                 5972 	push	af
   10D6 33                 5973 	inc	sp
                           5974 ;	genCall
   10D7 CD 00 00           5975 	call	_set_sprite_tile
   10DA E8 02              5976 	lda	sp,2(sp)
                           5977 ;	game.c 914
                           5978 ;	genAssign
                           5979 ;	AOP_HL for _player
   10DC 21 B3 1A           5980 	ld	hl,#_player
   10DF 4E                 5981 	ld	c,(hl)
   10E0 23                 5982 	inc	hl
   10E1 46                 5983 	ld	b,(hl)
                           5984 ;	genPlus
                           5985 ;	genPlusIncr
                           5986 ;	Can't optimise plus by inc, falling back to the normal way
   10E2 79                 5987 	ld	a,c
   10E3 C6 0B              5988 	add	a,#0x0B
   10E5 4F                 5989 	ld	c,a
   10E6 78                 5990 	ld	a,b
   10E7 CE 00              5991 	adc	a,#0x00
   10E9 47                 5992 	ld	b,a
                           5993 ;	genPointerGet
   10EA 0A                 5994 	ld	a,(bc)
   10EB 4F                 5995 	ld	c,a
                           5996 ;	genIpush
                           5997 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10EC 3E 20              5998 	ld	a,#0x20
   10EE F5                 5999 	push	af
   10EF 33                 6000 	inc	sp
                           6001 ;	genIpush
   10F0 79                 6002 	ld	a,c
   10F1 F5                 6003 	push	af
   10F2 33                 6004 	inc	sp
                           6005 ;	genCall
   10F3 CD 00 00           6006 	call	_set_sprite_prop
   10F6 E8 02              6007 	lda	sp,2(sp)
                           6008 ;	game.c 915
                           6009 ;	genIpush
                           6010 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10F8 3E 05              6011 	ld	a,#0x05
   10FA F5                 6012 	push	af
   10FB 33                 6013 	inc	sp
                           6014 ;	genCall
   10FC CD 00 00           6015 	call	_performantDelay
   10FF E8 01              6016 	lda	sp,1(sp)
                           6017 ;	game.c 916
                           6018 ;	genAssign
                           6019 ;	AOP_HL for _player
   1101 21 B3 1A           6020 	ld	hl,#_player
   1104 4E                 6021 	ld	c,(hl)
   1105 23                 6022 	inc	hl
   1106 46                 6023 	ld	b,(hl)
                           6024 ;	genPlus
                           6025 ;	genPlusIncr
   1107 03                 6026 	inc	bc
   1108 03                 6027 	inc	bc
   1109 03                 6028 	inc	bc
   110A 03                 6029 	inc	bc
                           6030 ;	genPointerGet
   110B 0A                 6031 	ld	a,(bc)
   110C 4F                 6032 	ld	c,a
                           6033 ;	genAssign
                           6034 ;	AOP_HL for _player
                           6035 ;	AOP_STK for _rotate_player_sloc1_1_0
   110D 2B                 6036 	dec	hl
   110E 2A                 6037 	ld	a,(hl+)
   110F 5E                 6038 	ld	e,(hl)
   1110 F8 00              6039 	lda	hl,0(sp)
   1112 22                 6040 	ld	(hl+),a
   1113 73                 6041 	ld	(hl),e
                           6042 ;	genPlus
                           6043 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6044 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6045 ;	genPlusIncr
                           6046 ;	Can't optimise plus by inc, falling back to the normal way
   1114 2B                 6047 	dec	hl
   1115 5E                 6048 	ld	e,(hl)
   1116 23                 6049 	inc	hl
   1117 56                 6050 	ld	d,(hl)
   1118 21 0B 00           6051 	ld	hl,#0x000B
   111B 19                 6052 	add	hl,de
   111C 7D                 6053 	ld	a,l
   111D 54                 6054 	ld	d,h
   111E F8 02              6055 	lda	hl,2(sp)
                           6056 ;	genPointerGet
                           6057 ;	AOP_STK for _rotate_player_sloc0_1_0
   1120 22                 6058 	ld	(hl+),a
   1121 72                 6059 	ld	(hl),d
   1122 5F                 6060 	ld	e,a
   1123 1A                 6061 	ld	a,(de)
   1124 47                 6062 	ld	b,a
                           6063 ;	genIpush
                           6064 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1125 79                 6065 	ld	a,c
   1126 F5                 6066 	push	af
   1127 33                 6067 	inc	sp
                           6068 ;	genIpush
   1128 78                 6069 	ld	a,b
   1129 F5                 6070 	push	af
   112A 33                 6071 	inc	sp
                           6072 ;	genCall
   112B CD 00 00           6073 	call	_set_sprite_tile
   112E E8 02              6074 	lda	sp,2(sp)
                           6075 ;	game.c 917
                           6076 ;	genAssign
                           6077 ;	AOP_HL for _player
   1130 21 B3 1A           6078 	ld	hl,#_player
   1133 4E                 6079 	ld	c,(hl)
   1134 23                 6080 	inc	hl
   1135 46                 6081 	ld	b,(hl)
                           6082 ;	genPlus
                           6083 ;	genPlusIncr
                           6084 ;	Can't optimise plus by inc, falling back to the normal way
   1136 79                 6085 	ld	a,c
   1137 C6 0B              6086 	add	a,#0x0B
   1139 4F                 6087 	ld	c,a
   113A 78                 6088 	ld	a,b
   113B CE 00              6089 	adc	a,#0x00
   113D 47                 6090 	ld	b,a
                           6091 ;	genPointerGet
   113E 0A                 6092 	ld	a,(bc)
   113F 4F                 6093 	ld	c,a
                           6094 ;	genIpush
                           6095 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1140 3E 60              6096 	ld	a,#0x60
   1142 F5                 6097 	push	af
   1143 33                 6098 	inc	sp
                           6099 ;	genIpush
   1144 79                 6100 	ld	a,c
   1145 F5                 6101 	push	af
   1146 33                 6102 	inc	sp
                           6103 ;	genCall
   1147 CD 00 00           6104 	call	_set_sprite_prop
   114A E8 02              6105 	lda	sp,2(sp)
                           6106 ;	game.c 918
                           6107 ;	genIpush
                           6108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   114C 3E 05              6109 	ld	a,#0x05
   114E F5                 6110 	push	af
   114F 33                 6111 	inc	sp
                           6112 ;	genCall
   1150 CD 00 00           6113 	call	_performantDelay
   1153 E8 01              6114 	lda	sp,1(sp)
                           6115 ;	game.c 919
                           6116 ;	genAssign
                           6117 ;	AOP_HL for _player
   1155 21 B3 1A           6118 	ld	hl,#_player
   1158 4E                 6119 	ld	c,(hl)
   1159 23                 6120 	inc	hl
   115A 46                 6121 	ld	b,(hl)
                           6122 ;	genPlus
                           6123 ;	genPlusIncr
                           6124 ;	Can't optimise plus by inc, falling back to the normal way
   115B 79                 6125 	ld	a,c
   115C C6 07              6126 	add	a,#0x07
   115E 4F                 6127 	ld	c,a
   115F 78                 6128 	ld	a,b
   1160 CE 00              6129 	adc	a,#0x00
   1162 47                 6130 	ld	b,a
                           6131 ;	genPointerGet
   1163 0A                 6132 	ld	a,(bc)
   1164 4F                 6133 	ld	c,a
                           6134 ;	genAssign
                           6135 ;	AOP_HL for _player
                           6136 ;	AOP_STK for _rotate_player_sloc1_1_0
   1165 2B                 6137 	dec	hl
   1166 2A                 6138 	ld	a,(hl+)
   1167 5E                 6139 	ld	e,(hl)
   1168 F8 00              6140 	lda	hl,0(sp)
   116A 22                 6141 	ld	(hl+),a
   116B 73                 6142 	ld	(hl),e
                           6143 ;	genPlus
                           6144 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6145 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6146 ;	genPlusIncr
                           6147 ;	Can't optimise plus by inc, falling back to the normal way
   116C 2B                 6148 	dec	hl
   116D 5E                 6149 	ld	e,(hl)
   116E 23                 6150 	inc	hl
   116F 56                 6151 	ld	d,(hl)
   1170 21 0B 00           6152 	ld	hl,#0x000B
   1173 19                 6153 	add	hl,de
   1174 7D                 6154 	ld	a,l
   1175 54                 6155 	ld	d,h
   1176 F8 02              6156 	lda	hl,2(sp)
                           6157 ;	genPointerGet
                           6158 ;	AOP_STK for _rotate_player_sloc0_1_0
   1178 22                 6159 	ld	(hl+),a
   1179 72                 6160 	ld	(hl),d
   117A 5F                 6161 	ld	e,a
   117B 1A                 6162 	ld	a,(de)
   117C 47                 6163 	ld	b,a
                           6164 ;	genIpush
                           6165 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   117D 79                 6166 	ld	a,c
   117E F5                 6167 	push	af
   117F 33                 6168 	inc	sp
                           6169 ;	genIpush
   1180 78                 6170 	ld	a,b
   1181 F5                 6171 	push	af
   1182 33                 6172 	inc	sp
                           6173 ;	genCall
   1183 CD 00 00           6174 	call	_set_sprite_tile
   1186 E8 02              6175 	lda	sp,2(sp)
                           6176 ;	game.c 920
                           6177 ;	genAssign
                           6178 ;	AOP_HL for _player
   1188 21 B3 1A           6179 	ld	hl,#_player
   118B 4E                 6180 	ld	c,(hl)
   118C 23                 6181 	inc	hl
   118D 46                 6182 	ld	b,(hl)
                           6183 ;	genPlus
                           6184 ;	genPlusIncr
                           6185 ;	Can't optimise plus by inc, falling back to the normal way
   118E 79                 6186 	ld	a,c
   118F C6 0B              6187 	add	a,#0x0B
   1191 4F                 6188 	ld	c,a
   1192 78                 6189 	ld	a,b
   1193 CE 00              6190 	adc	a,#0x00
   1195 47                 6191 	ld	b,a
                           6192 ;	genPointerGet
   1196 0A                 6193 	ld	a,(bc)
   1197 4F                 6194 	ld	c,a
                           6195 ;	genIpush
                           6196 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1198 3E 40              6197 	ld	a,#0x40
   119A F5                 6198 	push	af
   119B 33                 6199 	inc	sp
                           6200 ;	genIpush
   119C 79                 6201 	ld	a,c
   119D F5                 6202 	push	af
   119E 33                 6203 	inc	sp
                           6204 ;	genCall
   119F CD 00 00           6205 	call	_set_sprite_prop
   11A2 E8 02              6206 	lda	sp,2(sp)
                           6207 ;	game.c 921
                           6208 ;	genIpush
                           6209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11A4 3E 05              6210 	ld	a,#0x05
   11A6 F5                 6211 	push	af
   11A7 33                 6212 	inc	sp
                           6213 ;	genCall
   11A8 CD 00 00           6214 	call	_performantDelay
   11AB E8 01              6215 	lda	sp,1(sp)
                           6216 ;	game.c 922
                           6217 ;	genAssign
                           6218 ;	AOP_HL for _player
   11AD 21 B3 1A           6219 	ld	hl,#_player
   11B0 4E                 6220 	ld	c,(hl)
   11B1 23                 6221 	inc	hl
   11B2 46                 6222 	ld	b,(hl)
                           6223 ;	genPlus
                           6224 ;	genPlusIncr
   11B3 03                 6225 	inc	bc
   11B4 03                 6226 	inc	bc
   11B5 03                 6227 	inc	bc
   11B6 03                 6228 	inc	bc
                           6229 ;	genPointerGet
   11B7 0A                 6230 	ld	a,(bc)
   11B8 4F                 6231 	ld	c,a
                           6232 ;	genAssign
                           6233 ;	AOP_HL for _player
                           6234 ;	AOP_STK for _rotate_player_sloc1_1_0
   11B9 2B                 6235 	dec	hl
   11BA 2A                 6236 	ld	a,(hl+)
   11BB 5E                 6237 	ld	e,(hl)
   11BC F8 00              6238 	lda	hl,0(sp)
   11BE 22                 6239 	ld	(hl+),a
   11BF 73                 6240 	ld	(hl),e
                           6241 ;	genPlus
                           6242 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6243 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6244 ;	genPlusIncr
                           6245 ;	Can't optimise plus by inc, falling back to the normal way
   11C0 2B                 6246 	dec	hl
   11C1 5E                 6247 	ld	e,(hl)
   11C2 23                 6248 	inc	hl
   11C3 56                 6249 	ld	d,(hl)
   11C4 21 0B 00           6250 	ld	hl,#0x000B
   11C7 19                 6251 	add	hl,de
   11C8 7D                 6252 	ld	a,l
   11C9 54                 6253 	ld	d,h
   11CA F8 02              6254 	lda	hl,2(sp)
                           6255 ;	genPointerGet
                           6256 ;	AOP_STK for _rotate_player_sloc0_1_0
   11CC 22                 6257 	ld	(hl+),a
   11CD 72                 6258 	ld	(hl),d
   11CE 5F                 6259 	ld	e,a
   11CF 1A                 6260 	ld	a,(de)
   11D0 47                 6261 	ld	b,a
                           6262 ;	genIpush
                           6263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11D1 79                 6264 	ld	a,c
   11D2 F5                 6265 	push	af
   11D3 33                 6266 	inc	sp
                           6267 ;	genIpush
   11D4 78                 6268 	ld	a,b
   11D5 F5                 6269 	push	af
   11D6 33                 6270 	inc	sp
                           6271 ;	genCall
   11D7 CD 00 00           6272 	call	_set_sprite_tile
   11DA E8 02              6273 	lda	sp,2(sp)
                           6274 ;	game.c 923
                           6275 ;	genAssign
                           6276 ;	AOP_HL for _player
   11DC 21 B3 1A           6277 	ld	hl,#_player
   11DF 4E                 6278 	ld	c,(hl)
   11E0 23                 6279 	inc	hl
   11E1 46                 6280 	ld	b,(hl)
                           6281 ;	genPlus
                           6282 ;	genPlusIncr
                           6283 ;	Can't optimise plus by inc, falling back to the normal way
   11E2 79                 6284 	ld	a,c
   11E3 C6 0B              6285 	add	a,#0x0B
   11E5 4F                 6286 	ld	c,a
   11E6 78                 6287 	ld	a,b
   11E7 CE 00              6288 	adc	a,#0x00
   11E9 47                 6289 	ld	b,a
                           6290 ;	genPointerGet
   11EA 0A                 6291 	ld	a,(bc)
   11EB 4F                 6292 	ld	c,a
                           6293 ;	genIpush
                           6294 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11EC 3E 00              6295 	ld	a,#0x00
   11EE F5                 6296 	push	af
   11EF 33                 6297 	inc	sp
                           6298 ;	genIpush
   11F0 79                 6299 	ld	a,c
   11F1 F5                 6300 	push	af
   11F2 33                 6301 	inc	sp
                           6302 ;	genCall
   11F3 CD 00 00           6303 	call	_set_sprite_prop
   11F6 E8 02              6304 	lda	sp,2(sp)
                           6305 ;	game.c 924
                           6306 ;	genIpush
                           6307 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11F8 3E 05              6308 	ld	a,#0x05
   11FA F5                 6309 	push	af
   11FB 33                 6310 	inc	sp
                           6311 ;	genCall
   11FC CD 00 00           6312 	call	_performantDelay
   11FF E8 01              6313 	lda	sp,1(sp)
                           6314 ;	game.c 925
                           6315 ;	genAssign
                           6316 ;	AOP_HL for _player
   1201 21 B3 1A           6317 	ld	hl,#_player
   1204 4E                 6318 	ld	c,(hl)
   1205 23                 6319 	inc	hl
   1206 46                 6320 	ld	b,(hl)
                           6321 ;	genPlus
                           6322 ;	genPlusIncr
   1207 03                 6323 	inc	bc
   1208 03                 6324 	inc	bc
                           6325 ;	genPointerGet
   1209 0A                 6326 	ld	a,(bc)
   120A 4F                 6327 	ld	c,a
                           6328 ;	genAssign
                           6329 ;	AOP_HL for _player
                           6330 ;	AOP_STK for _rotate_player_sloc1_1_0
   120B 2B                 6331 	dec	hl
   120C 2A                 6332 	ld	a,(hl+)
   120D 5E                 6333 	ld	e,(hl)
   120E F8 00              6334 	lda	hl,0(sp)
   1210 22                 6335 	ld	(hl+),a
   1211 73                 6336 	ld	(hl),e
                           6337 ;	genPlus
                           6338 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6339 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6340 ;	genPlusIncr
                           6341 ;	Can't optimise plus by inc, falling back to the normal way
   1212 2B                 6342 	dec	hl
   1213 5E                 6343 	ld	e,(hl)
   1214 23                 6344 	inc	hl
   1215 56                 6345 	ld	d,(hl)
   1216 21 0B 00           6346 	ld	hl,#0x000B
   1219 19                 6347 	add	hl,de
   121A 7D                 6348 	ld	a,l
   121B 54                 6349 	ld	d,h
   121C F8 02              6350 	lda	hl,2(sp)
                           6351 ;	genPointerGet
                           6352 ;	AOP_STK for _rotate_player_sloc0_1_0
   121E 22                 6353 	ld	(hl+),a
   121F 72                 6354 	ld	(hl),d
   1220 5F                 6355 	ld	e,a
   1221 1A                 6356 	ld	a,(de)
   1222 47                 6357 	ld	b,a
                           6358 ;	genIpush
                           6359 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1223 79                 6360 	ld	a,c
   1224 F5                 6361 	push	af
   1225 33                 6362 	inc	sp
                           6363 ;	genIpush
   1226 78                 6364 	ld	a,b
   1227 F5                 6365 	push	af
   1228 33                 6366 	inc	sp
                           6367 ;	genCall
   1229 CD 00 00           6368 	call	_set_sprite_tile
   122C E8 02              6369 	lda	sp,2(sp)
                           6370 ;	game.c 926
                           6371 ;	genAssign
                           6372 ;	AOP_HL for _player
   122E 21 B3 1A           6373 	ld	hl,#_player
   1231 4E                 6374 	ld	c,(hl)
   1232 23                 6375 	inc	hl
   1233 46                 6376 	ld	b,(hl)
                           6377 ;	genPlus
                           6378 ;	genPlusIncr
                           6379 ;	Can't optimise plus by inc, falling back to the normal way
   1234 79                 6380 	ld	a,c
   1235 C6 0B              6381 	add	a,#0x0B
   1237 4F                 6382 	ld	c,a
   1238 78                 6383 	ld	a,b
   1239 CE 00              6384 	adc	a,#0x00
   123B 47                 6385 	ld	b,a
                           6386 ;	genPointerGet
   123C 0A                 6387 	ld	a,(bc)
   123D 4F                 6388 	ld	c,a
                           6389 ;	genIpush
                           6390 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   123E 3E 00              6391 	ld	a,#0x00
   1240 F5                 6392 	push	af
   1241 33                 6393 	inc	sp
                           6394 ;	genIpush
   1242 79                 6395 	ld	a,c
   1243 F5                 6396 	push	af
   1244 33                 6397 	inc	sp
                           6398 ;	genCall
   1245 CD 00 00           6399 	call	_set_sprite_prop
   1248 E8 02              6400 	lda	sp,2(sp)
                           6401 ;	genLabel
   124A                    6402 00101$:
                           6403 ;	genEndFunction
   124A E8 04              6404 	lda	sp,4(sp)
   124C C9                 6405 	ret
   124D                    6406 ___rotate_player_end:
                           6407 ;	game.c 929
                           6408 ;	genLabel
                           6409 ;	genFunction
                           6410 ;	---------------------------------
                           6411 ; Function move_character
                           6412 ; ---------------------------------
   124D                    6413 ___move_character_start:
   124D                    6414 _move_character:
   124D E8 F1              6415 	lda	sp,-15(sp)
                           6416 ;	game.c 932
                           6417 ;	genAssign
                           6418 ;	AOP_HL for _player
   124F 21 B3 1A           6419 	ld	hl,#_player
   1252 4E                 6420 	ld	c,(hl)
   1253 23                 6421 	inc	hl
   1254 46                 6422 	ld	b,(hl)
                           6423 ;	genPlus
                           6424 ;	genPlusIncr
                           6425 ;	Can't optimise plus by inc, falling back to the normal way
   1255 79                 6426 	ld	a,c
   1256 C6 0B              6427 	add	a,#0x0B
   1258 4F                 6428 	ld	c,a
   1259 78                 6429 	ld	a,b
   125A CE 00              6430 	adc	a,#0x00
   125C 47                 6431 	ld	b,a
                           6432 ;	genPointerGet
   125D 0A                 6433 	ld	a,(bc)
   125E 4F                 6434 	ld	c,a
                           6435 ;	genAssign
                           6436 ;	AOP_STK for 
                           6437 ;	AOP_STK for _move_character_sloc0_1_0
   125F F8 11              6438 	lda	hl,17(sp)
   1261 2A                 6439 	ld	a,(hl+)
   1262 5E                 6440 	ld	e,(hl)
   1263 F8 0D              6441 	lda	hl,13(sp)
   1265 22                 6442 	ld	(hl+),a
   1266 73                 6443 	ld	(hl),e
                           6444 ;	genPlus
                           6445 ;	AOP_STK for _move_character_sloc0_1_0
                           6446 ;	AOP_STK for _move_character_sloc1_1_0
                           6447 ;	genPlusIncr
                           6448 ;	Can't optimise plus by inc, falling back to the normal way
   1267 2B                 6449 	dec	hl
   1268 5E                 6450 	ld	e,(hl)
   1269 23                 6451 	inc	hl
   126A 56                 6452 	ld	d,(hl)
   126B 21 0B 00           6453 	ld	hl,#0x000B
   126E 19                 6454 	add	hl,de
   126F 7D                 6455 	ld	a,l
   1270 54                 6456 	ld	d,h
   1271 F8 0B              6457 	lda	hl,11(sp)
                           6458 ;	genPointerGet
                           6459 ;	AOP_STK for _move_character_sloc1_1_0
   1273 22                 6460 	ld	(hl+),a
   1274 72                 6461 	ld	(hl),d
   1275 5F                 6462 	ld	e,a
   1276 1A                 6463 	ld	a,(de)
   1277 47                 6464 	ld	b,a
                           6465 ;	genCmpEq
                           6466 ; genCmpEq: left 1, right 1, result 0
   1278 79                 6467 	ld	a,c
   1279 B8                 6468 	cp	b
                           6469 ;	game.c 933
                           6470 ;	genRet
                           6471 ;	genLabel
   127A CA 80 12           6472 	jp	z,00102$
   127D                    6473 00197$:
   127D C3 AA 1A           6474 	jp	00166$
   1280                    6475 00102$:
                           6476 ;	game.c 936
                           6477 ;	genPlus
                           6478 ;	AOP_STK for _move_character_sloc0_1_0
                           6479 ;	AOP_STK for _move_character_sloc2_1_0
                           6480 ;	genPlusIncr
                           6481 ;	Can't optimise plus by inc, falling back to the normal way
   1280 F8 0D              6482 	lda	hl,13(sp)
   1282 5E                 6483 	ld	e,(hl)
   1283 23                 6484 	inc	hl
   1284 56                 6485 	ld	d,(hl)
   1285 21 09 00           6486 	ld	hl,#0x0009
   1288 19                 6487 	add	hl,de
   1289 7D                 6488 	ld	a,l
   128A 54                 6489 	ld	d,h
   128B F8 09              6490 	lda	hl,9(sp)
                           6491 ;	genPointerGet
                           6492 ;	AOP_STK for _move_character_sloc2_1_0
   128D 22                 6493 	ld	(hl+),a
   128E 72                 6494 	ld	(hl),d
   128F 5F                 6495 	ld	e,a
   1290 1A                 6496 	ld	a,(de)
                           6497 ;	genCmpEq
                           6498 ; genCmpEq: left 1, right 1, result 0
   1291 4F                 6499 	ld	c,a
   1292 B7                 6500 	or	a,a
   1293 CA 91 16           6501 	jp	z,00164$
   1296                    6502 00198$:
                           6503 ;	game.c 939
                           6504 ;	genCmpEq
                           6505 ; genCmpEq: left 1, right 1, result 0
   1296 78                 6506 	ld	a,b
   1297 FE 01              6507 	cp	a,#0x01
   1299 C2 E7 15           6508 	jp	nz,00124$
   129C 18 03              6509 	jr	00200$
   129E                    6510 00199$:
   129E C3 E7 15           6511 	jp	00124$
   12A1                    6512 00200$:
                           6513 ;	game.c 941
                           6514 ;	genAssign
   12A1 0E 02              6515 	ld	c,#0x02
                           6516 ;	game.c 944
                           6517 ;	genPlus
                           6518 ;	AOP_STK for _move_character_sloc0_1_0
                           6519 ;	AOP_STK for _move_character_sloc3_1_0
                           6520 ;	genPlusIncr
                           6521 ;	Can't optimise plus by inc, falling back to the normal way
   12A3 F8 0D              6522 	lda	hl,13(sp)
   12A5 5E                 6523 	ld	e,(hl)
   12A6 23                 6524 	inc	hl
   12A7 56                 6525 	ld	d,(hl)
   12A8 21 0A 00           6526 	ld	hl,#0x000A
   12AB 19                 6527 	add	hl,de
   12AC 7D                 6528 	ld	a,l
   12AD 54                 6529 	ld	d,h
   12AE F8 07              6530 	lda	hl,7(sp)
                           6531 ;	genPointerGet
                           6532 ;	AOP_STK for _move_character_sloc3_1_0
                           6533 ;	AOP_STK for _move_character_sloc4_1_0
   12B0 22                 6534 	ld	(hl+),a
   12B1 72                 6535 	ld	(hl),d
   12B2 5F                 6536 	ld	e,a
   12B3 1A                 6537 	ld	a,(de)
   12B4 2B                 6538 	dec	hl
   12B5 2B                 6539 	dec	hl
                           6540 ;	genCmpEq
                           6541 ;	AOP_STK for _move_character_sloc4_1_0
                           6542 ; genCmpEq: left 1, right 1, result 0
   12B6 77                 6543 	ld      (hl),a
                           6544 ; Removed redundent load
   12B7 FE 04              6545 	cp	a,#0x04
   12B9 CA D9 12           6546 	jp	z,00105$
   12BC                    6547 00201$:
                           6548 ;	game.c 945
                           6549 ;	genCmpEq
                           6550 ;	AOP_STK for _move_character_sloc4_1_0
                           6551 ; genCmpEq: left 1, right 1, result 0
   12BC F8 06              6552 	lda	hl,6(sp)
   12BE 7E                 6553 	ld	a,(hl)
   12BF FE 08              6554 	cp	a,#0x08
   12C1 CA D9 12           6555 	jp	z,00105$
   12C4                    6556 00202$:
                           6557 ;	game.c 946
                           6558 ;	genCmpEq
                           6559 ;	AOP_STK for _move_character_sloc4_1_0
                           6560 ; genCmpEq: left 1, right 1, result 0
   12C4 F8 06              6561 	lda	hl,6(sp)
   12C6 7E                 6562 	ld	a,(hl)
   12C7 FE 0C              6563 	cp	a,#0x0C
   12C9 CA D9 12           6564 	jp	z,00105$
   12CC                    6565 00203$:
                           6566 ;	game.c 947
                           6567 ;	genCmpEq
                           6568 ;	AOP_STK for _move_character_sloc4_1_0
                           6569 ; genCmpEq: left 1, right 1, result 0
   12CC F8 06              6570 	lda	hl,6(sp)
   12CE 7E                 6571 	ld	a,(hl)
   12CF FE 10              6572 	cp	a,#0x10
   12D1 C2 34 13           6573 	jp	nz,00106$
   12D4 18 03              6574 	jr	00205$
   12D6                    6575 00204$:
   12D6 C3 34 13           6576 	jp	00106$
   12D9                    6577 00205$:
                           6578 ;	genLabel
   12D9                    6579 00105$:
                           6580 ;	game.c 949
                           6581 ;	genPlus
                           6582 ;	AOP_STK for _move_character_sloc0_1_0
                           6583 ;	AOP_STK for _move_character_sloc5_1_0
                           6584 ;	genPlusIncr
                           6585 ;	Can't optimise plus by inc, falling back to the normal way
   12D9 F8 0D              6586 	lda	hl,13(sp)
   12DB 5E                 6587 	ld	e,(hl)
   12DC 23                 6588 	inc	hl
   12DD 56                 6589 	ld	d,(hl)
   12DE 21 08 00           6590 	ld	hl,#0x0008
   12E1 19                 6591 	add	hl,de
   12E2 7D                 6592 	ld	a,l
   12E3 54                 6593 	ld	d,h
   12E4 F8 04              6594 	lda	hl,4(sp)
                           6595 ;	genPointerGet
                           6596 ;	AOP_STK for _move_character_sloc5_1_0
                           6597 ;	AOP_STK for _move_character_sloc4_1_0
   12E6 22                 6598 	ld	(hl+),a
   12E7 72                 6599 	ld	(hl),d
   12E8 5F                 6600 	ld	e,a
   12E9 1A                 6601 	ld	a,(de)
   12EA 23                 6602 	inc	hl
   12EB 77                 6603 	ld	(hl),a
                           6604 ;	genPlus
                           6605 ;	AOP_STK for _move_character_sloc0_1_0
                           6606 ;	AOP_STK for _move_character_sloc5_1_0
                           6607 ;	genPlusIncr
                           6608 ;	Can't optimise plus by inc, falling back to the normal way
   12EC F8 0D              6609 	lda	hl,13(sp)
   12EE 5E                 6610 	ld	e,(hl)
   12EF 23                 6611 	inc	hl
   12F0 56                 6612 	ld	d,(hl)
   12F1 21 01 00           6613 	ld	hl,#0x0001
   12F4 19                 6614 	add	hl,de
   12F5 7D                 6615 	ld	a,l
   12F6 54                 6616 	ld	d,h
   12F7 F8 04              6617 	lda	hl,4(sp)
                           6618 ;	genPointerGet
                           6619 ;	AOP_STK for _move_character_sloc5_1_0
                           6620 ;	AOP_STK for _move_character_sloc6_1_0
   12F9 22                 6621 	ld	(hl+),a
   12FA 72                 6622 	ld	(hl),d
   12FB 5F                 6623 	ld	e,a
   12FC 1A                 6624 	ld	a,(de)
   12FD 2B                 6625 	dec	hl
   12FE 2B                 6626 	dec	hl
   12FF 77                 6627 	ld	(hl),a
                           6628 ;	genPointerGet
                           6629 ;	AOP_STK for _move_character_sloc0_1_0
                           6630 ;	AOP_STK for _move_character_sloc5_1_0
   1300 F8 0D              6631 	lda	hl,13(sp)
   1302 5E                 6632 	ld	e,(hl)
   1303 23                 6633 	inc	hl
   1304 56                 6634 	ld	d,(hl)
   1305 1A                 6635 	ld	a,(de)
   1306 F8 04              6636 	lda	hl,4(sp)
   1308 77                 6637 	ld	(hl),a
                           6638 ;	genIpush
                           6639 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1309 C5                 6640 	push	bc
                           6641 ;	AOP_STK for _move_character_sloc4_1_0
   130A 23                 6642 	inc	hl
   130B 23                 6643 	inc	hl
   130C 7E                 6644 	ld	a,(hl)
   130D F5                 6645 	push	af
   130E 33                 6646 	inc	sp
                           6647 ;	genIpush
                           6648 ;	AOP_STK for _move_character_sloc6_1_0
   130F F8 06              6649 	lda	hl,6(sp)
   1311 7E                 6650 	ld	a,(hl)
   1312 F5                 6651 	push	af
   1313 33                 6652 	inc	sp
                           6653 ;	genIpush
                           6654 ;	AOP_STK for _move_character_sloc5_1_0
   1314 23                 6655 	inc	hl
   1315 7E                 6656 	ld	a,(hl)
   1316 F5                 6657 	push	af
   1317 33                 6658 	inc	sp
                           6659 ;	genCall
   1318 CD BE 0F           6660 	call	_can_move
                           6661 ;	AOP_STK for _move_character_sloc5_1_0
   131B F8 0A              6662 	lda	hl,10(sp)
   131D 72                 6663 	ld	(hl),d
   131E 2B                 6664 	dec	hl
   131F 73                 6665 	ld	(hl),e
   1320 E8 03              6666 	lda	sp,3(sp)
   1322 C1                 6667 	pop	bc
                           6668 ;	genIfx
                           6669 ;	AOP_STK for _move_character_sloc5_1_0
   1323 F8 04              6670 	lda	hl,4(sp)
   1325 2A                 6671 	ld	a,(hl+)
   1326 B6                 6672 	or	a,(hl)
   1327 C2 34 13           6673 	jp	nz,00106$
                           6674 ;	game.c 950
                           6675 ;	genAssign (pointer)
                           6676 ;	AOP_STK for _move_character_sloc3_1_0
   132A 23                 6677 	inc	hl
   132B 23                 6678 	inc	hl
   132C 5E                 6679 	ld	e,(hl)
   132D 23                 6680 	inc	hl
   132E 56                 6681 	ld	d,(hl)
   132F 3E 01              6682 	ld	a,#0x01
   1331 12                 6683 	ld	(de),a
                           6684 ;	game.c 952
                           6685 ;	genAssign
   1332 0E 00              6686 	ld	c,#0x00
                           6687 ;	genLabel
   1334                    6688 00106$:
                           6689 ;	game.c 957
                           6690 ;	genPlus
                           6691 ;	AOP_STK for _move_character_sloc0_1_0
                           6692 ;	AOP_STK for _move_character_sloc5_1_0
                           6693 ;	genPlusIncr
                           6694 ;	Can't optimise plus by inc, falling back to the normal way
   1334 F8 0D              6695 	lda	hl,13(sp)
   1336 5E                 6696 	ld	e,(hl)
   1337 23                 6697 	inc	hl
   1338 56                 6698 	ld	d,(hl)
   1339 21 08 00           6699 	ld	hl,#0x0008
   133C 19                 6700 	add	hl,de
   133D 7D                 6701 	ld	a,l
   133E 54                 6702 	ld	d,h
   133F F8 04              6703 	lda	hl,4(sp)
                           6704 ;	genPointerGet
                           6705 ;	AOP_STK for _move_character_sloc5_1_0
                           6706 ;	AOP_STK for _move_character_sloc6_1_0
   1341 22                 6707 	ld	(hl+),a
   1342 72                 6708 	ld	(hl),d
   1343 5F                 6709 	ld	e,a
   1344 1A                 6710 	ld	a,(de)
   1345 2B                 6711 	dec	hl
   1346 2B                 6712 	dec	hl
   1347 77                 6713 	ld	(hl),a
                           6714 ;	genCmpGt
                           6715 ;	AOP_STK for _move_character_sloc6_1_0
                           6716 ;	AOP_STK for _move_character_sloc5_1_0
   1348 3E 04              6717 	ld	a,#0x04
   134A 96                 6718 	sub	a,(hl)
   134B 3E 00              6719 	ld	a,#0x00
   134D 17                 6720 	rla
   134E 23                 6721 	inc	hl
   134F 77                 6722 	ld	(hl),a
                           6723 ;	genIfx
                           6724 ;	AOP_STK for _move_character_sloc5_1_0
   1350 AF                 6725 	xor	a,a
   1351 B6                 6726 	or	a,(hl)
   1352 C2 BD 14           6727 	jp	nz,00115$
                           6728 ;	genJumpTab
                           6729 ;	AOP_STK for _move_character_sloc6_1_0
   1355 2B                 6730 	dec	hl
   1356 5E                 6731 	ld	e,(hl)
   1357 16 00              6732 	ld	d,#0x00
   1359 21 60 13           6733 	ld	hl,#00206$
   135C 19                 6734 	add	hl,de
   135D 19                 6735 	add	hl,de
   135E 19                 6736 	add	hl,de
   135F E9                 6737 	jp	(hl)
   1360                    6738 00206$:
   1360 C3 B7 14           6739 	jp	00114$
   1363 C3 09 14           6740 	jp	00112$
   1366 C3 BF 13           6741 	jp	00111$
   1369 C3 63 14           6742 	jp	00113$
   136C C3 6F 13           6743 	jp	00110$
                           6744 ;	game.c 959
                           6745 ;	genLabel
   136F                    6746 00110$:
                           6747 ;	genPointerGet
                           6748 ;	AOP_STK for _move_character_sloc0_1_0
                           6749 ;	AOP_STK for _move_character_sloc4_1_0
   136F F8 0D              6750 	lda	hl,13(sp)
   1371 5E                 6751 	ld	e,(hl)
   1372 23                 6752 	inc	hl
   1373 56                 6753 	ld	d,(hl)
   1374 1A                 6754 	ld	a,(de)
   1375 F8 06              6755 	lda	hl,6(sp)
                           6756 ;	genMinus
                           6757 ;	AOP_STK for _move_character_sloc4_1_0
                           6758 ;	AOP_STK for _move_character_sloc7_1_0
   1377 77                 6759 	ld      (hl),a
                           6760 ; Removed redundent load
   1378 91                 6761 	sub	a,c
   1379 F8 02              6762 	lda	hl,2(sp)
   137B 77                 6763 	ld	(hl),a
                           6764 ;	genAssign (pointer)
                           6765 ;	AOP_STK for _move_character_sloc0_1_0
                           6766 ;	AOP_STK for _move_character_sloc7_1_0
   137C F8 0D              6767 	lda	hl,13(sp)
   137E 5E                 6768 	ld	e,(hl)
   137F 23                 6769 	inc	hl
   1380 56                 6770 	ld	d,(hl)
   1381 F8 02              6771 	lda	hl,2(sp)
   1383 7E                 6772 	ld	a,(hl)
   1384 12                 6773 	ld	(de),a
                           6774 ;	game.c 960
                           6775 ;	genPlus
                           6776 ;	AOP_STK for _move_character_sloc0_1_0
                           6777 ;	AOP_STK for _move_character_sloc8_1_0
                           6778 ;	genPlusIncr
                           6779 ;	Can't optimise plus by inc, falling back to the normal way
   1385 F8 0D              6780 	lda	hl,13(sp)
   1387 5E                 6781 	ld	e,(hl)
   1388 23                 6782 	inc	hl
   1389 56                 6783 	ld	d,(hl)
   138A 21 04 00           6784 	ld	hl,#0x0004
   138D 19                 6785 	add	hl,de
   138E 7D                 6786 	ld	a,l
   138F 54                 6787 	ld	d,h
   1390 F8 00              6788 	lda	hl,0(sp)
                           6789 ;	genPointerGet
                           6790 ;	AOP_STK for _move_character_sloc8_1_0
                           6791 ;	AOP_STK for _move_character_sloc7_1_0
   1392 22                 6792 	ld	(hl+),a
   1393 72                 6793 	ld	(hl),d
   1394 5F                 6794 	ld	e,a
   1395 1A                 6795 	ld	a,(de)
   1396 23                 6796 	inc	hl
   1397 77                 6797 	ld	(hl),a
                           6798 ;	genIpush
                           6799 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1398 C5                 6800 	push	bc
                           6801 ;	AOP_STK for _move_character_sloc7_1_0
   1399 7E                 6802 	ld	a,(hl)
   139A F5                 6803 	push	af
   139B 33                 6804 	inc	sp
                           6805 ;	genIpush
   139C 78                 6806 	ld	a,b
   139D F5                 6807 	push	af
   139E 33                 6808 	inc	sp
                           6809 ;	genCall
   139F CD 00 00           6810 	call	_set_sprite_tile
   13A2 E8 02              6811 	lda	sp,2(sp)
   13A4 C1                 6812 	pop	bc
                           6813 ;	game.c 961
                           6814 ;	genPointerGet
                           6815 ;	AOP_STK for _move_character_sloc1_1_0
                           6816 ;	AOP_STK for _move_character_sloc8_1_0
   13A5 F8 0B              6817 	lda	hl,11(sp)
   13A7 5E                 6818 	ld	e,(hl)
   13A8 23                 6819 	inc	hl
   13A9 56                 6820 	ld	d,(hl)
   13AA 1A                 6821 	ld	a,(de)
   13AB F8 00              6822 	lda	hl,0(sp)
   13AD 77                 6823 	ld	(hl),a
                           6824 ;	genIpush
                           6825 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13AE C5                 6826 	push	bc
   13AF 3E 20              6827 	ld	a,#0x20
   13B1 F5                 6828 	push	af
   13B2 33                 6829 	inc	sp
                           6830 ;	genIpush
                           6831 ;	AOP_STK for _move_character_sloc8_1_0
   13B3 7E                 6832 	ld	a,(hl)
   13B4 F5                 6833 	push	af
   13B5 33                 6834 	inc	sp
                           6835 ;	genCall
   13B6 CD 00 00           6836 	call	_set_sprite_prop
   13B9 E8 02              6837 	lda	sp,2(sp)
   13BB C1                 6838 	pop	bc
                           6839 ;	game.c 962
                           6840 ;	genGoto
   13BC C3 BD 14           6841 	jp	00115$
                           6842 ;	game.c 964
                           6843 ;	genLabel
   13BF                    6844 00111$:
                           6845 ;	genPlus
                           6846 ;	AOP_STK for _move_character_sloc0_1_0
                           6847 ;	AOP_STK for _move_character_sloc8_1_0
                           6848 ;	genPlusIncr
                           6849 ;	Can't optimise plus by inc, falling back to the normal way
   13BF F8 0D              6850 	lda	hl,13(sp)
   13C1 5E                 6851 	ld	e,(hl)
   13C2 23                 6852 	inc	hl
   13C3 56                 6853 	ld	d,(hl)
   13C4 21 04 00           6854 	ld	hl,#0x0004
   13C7 19                 6855 	add	hl,de
   13C8 7D                 6856 	ld	a,l
   13C9 54                 6857 	ld	d,h
   13CA F8 00              6858 	lda	hl,0(sp)
                           6859 ;	genPointerGet
                           6860 ;	AOP_STK for _move_character_sloc8_1_0
                           6861 ;	AOP_STK for _move_character_sloc7_1_0
   13CC 22                 6862 	ld	(hl+),a
   13CD 72                 6863 	ld	(hl),d
   13CE 5F                 6864 	ld	e,a
   13CF 1A                 6865 	ld	a,(de)
   13D0 23                 6866 	inc	hl
   13D1 77                 6867 	ld	(hl),a
                           6868 ;	genIpush
                           6869 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13D2 C5                 6870 	push	bc
                           6871 ;	AOP_STK for _move_character_sloc7_1_0
   13D3 7E                 6872 	ld	a,(hl)
   13D4 F5                 6873 	push	af
   13D5 33                 6874 	inc	sp
                           6875 ;	genIpush
   13D6 78                 6876 	ld	a,b
   13D7 F5                 6877 	push	af
   13D8 33                 6878 	inc	sp
                           6879 ;	genCall
   13D9 CD 00 00           6880 	call	_set_sprite_tile
   13DC E8 02              6881 	lda	sp,2(sp)
   13DE C1                 6882 	pop	bc
                           6883 ;	game.c 965
                           6884 ;	genPointerGet
                           6885 ;	AOP_STK for _move_character_sloc1_1_0
                           6886 ;	AOP_STK for _move_character_sloc8_1_0
   13DF F8 0B              6887 	lda	hl,11(sp)
   13E1 5E                 6888 	ld	e,(hl)
   13E2 23                 6889 	inc	hl
   13E3 56                 6890 	ld	d,(hl)
   13E4 1A                 6891 	ld	a,(de)
   13E5 F8 00              6892 	lda	hl,0(sp)
   13E7 77                 6893 	ld	(hl),a
                           6894 ;	genIpush
                           6895 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13E8 C5                 6896 	push	bc
   13E9 3E 00              6897 	ld	a,#0x00
   13EB F5                 6898 	push	af
   13EC 33                 6899 	inc	sp
                           6900 ;	genIpush
                           6901 ;	AOP_STK for _move_character_sloc8_1_0
   13ED 7E                 6902 	ld	a,(hl)
   13EE F5                 6903 	push	af
   13EF 33                 6904 	inc	sp
                           6905 ;	genCall
   13F0 CD 00 00           6906 	call	_set_sprite_prop
   13F3 E8 02              6907 	lda	sp,2(sp)
   13F5 C1                 6908 	pop	bc
                           6909 ;	game.c 966
                           6910 ;	genPointerGet
                           6911 ;	AOP_STK for _move_character_sloc0_1_0
                           6912 ;	AOP_STK for _move_character_sloc8_1_0
   13F6 F8 0D              6913 	lda	hl,13(sp)
   13F8 5E                 6914 	ld	e,(hl)
   13F9 23                 6915 	inc	hl
   13FA 56                 6916 	ld	d,(hl)
   13FB 1A                 6917 	ld	a,(de)
   13FC F8 00              6918 	lda	hl,0(sp)
                           6919 ;	genPlus
                           6920 ;	AOP_STK for _move_character_sloc8_1_0
                           6921 ;	Can't optimise plus by inc, falling back to the normal way
   13FE 77                 6922 	ld      (hl),a
                           6923 ; Removed redundent load
   13FF 81                 6924 	add	a,c
                           6925 ;	genAssign (pointer)
                           6926 ;	AOP_STK for _move_character_sloc0_1_0
   1400 F8 0D              6927 	lda	hl,13(sp)
   1402 5E                 6928 	ld	e,(hl)
   1403 23                 6929 	inc	hl
   1404 56                 6930 	ld	d,(hl)
   1405 12                 6931 	ld	(de),a
                           6932 ;	game.c 967
                           6933 ;	genGoto
   1406 C3 BD 14           6934 	jp	00115$
                           6935 ;	game.c 969
                           6936 ;	genLabel
   1409                    6937 00112$:
                           6938 ;	genPlus
                           6939 ;	AOP_STK for _move_character_sloc0_1_0
                           6940 ;	AOP_STK for _move_character_sloc8_1_0
                           6941 ;	genPlusIncr
                           6942 ;	Can't optimise plus by inc, falling back to the normal way
   1409 F8 0D              6943 	lda	hl,13(sp)
   140B 5E                 6944 	ld	e,(hl)
   140C 23                 6945 	inc	hl
   140D 56                 6946 	ld	d,(hl)
   140E 21 07 00           6947 	ld	hl,#0x0007
   1411 19                 6948 	add	hl,de
   1412 7D                 6949 	ld	a,l
   1413 54                 6950 	ld	d,h
   1414 F8 00              6951 	lda	hl,0(sp)
                           6952 ;	genPointerGet
                           6953 ;	AOP_STK for _move_character_sloc8_1_0
                           6954 ;	AOP_STK for _move_character_sloc7_1_0
   1416 22                 6955 	ld	(hl+),a
   1417 72                 6956 	ld	(hl),d
   1418 5F                 6957 	ld	e,a
   1419 1A                 6958 	ld	a,(de)
   141A 23                 6959 	inc	hl
   141B 77                 6960 	ld	(hl),a
                           6961 ;	genIpush
                           6962 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   141C C5                 6963 	push	bc
                           6964 ;	AOP_STK for _move_character_sloc7_1_0
   141D 7E                 6965 	ld	a,(hl)
   141E F5                 6966 	push	af
   141F 33                 6967 	inc	sp
                           6968 ;	genIpush
   1420 78                 6969 	ld	a,b
   1421 F5                 6970 	push	af
   1422 33                 6971 	inc	sp
                           6972 ;	genCall
   1423 CD 00 00           6973 	call	_set_sprite_tile
   1426 E8 02              6974 	lda	sp,2(sp)
   1428 C1                 6975 	pop	bc
                           6976 ;	game.c 970
                           6977 ;	genPointerGet
                           6978 ;	AOP_STK for _move_character_sloc1_1_0
                           6979 ;	AOP_STK for _move_character_sloc8_1_0
   1429 F8 0B              6980 	lda	hl,11(sp)
   142B 5E                 6981 	ld	e,(hl)
   142C 23                 6982 	inc	hl
   142D 56                 6983 	ld	d,(hl)
   142E 1A                 6984 	ld	a,(de)
   142F F8 00              6985 	lda	hl,0(sp)
   1431 77                 6986 	ld	(hl),a
                           6987 ;	genIpush
                           6988 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1432 C5                 6989 	push	bc
   1433 3E 20              6990 	ld	a,#0x20
   1435 F5                 6991 	push	af
   1436 33                 6992 	inc	sp
                           6993 ;	genIpush
                           6994 ;	AOP_STK for _move_character_sloc8_1_0
   1437 7E                 6995 	ld	a,(hl)
   1438 F5                 6996 	push	af
   1439 33                 6997 	inc	sp
                           6998 ;	genCall
   143A CD 00 00           6999 	call	_set_sprite_prop
   143D E8 02              7000 	lda	sp,2(sp)
   143F C1                 7001 	pop	bc
                           7002 ;	game.c 971
                           7003 ;	genPlus
                           7004 ;	AOP_STK for _move_character_sloc0_1_0
                           7005 ;	AOP_STK for _move_character_sloc8_1_0
                           7006 ;	genPlusIncr
                           7007 ;	Can't optimise plus by inc, falling back to the normal way
   1440 F8 0D              7008 	lda	hl,13(sp)
   1442 5E                 7009 	ld	e,(hl)
   1443 23                 7010 	inc	hl
   1444 56                 7011 	ld	d,(hl)
   1445 21 01 00           7012 	ld	hl,#0x0001
   1448 19                 7013 	add	hl,de
   1449 7D                 7014 	ld	a,l
   144A 54                 7015 	ld	d,h
   144B F8 00              7016 	lda	hl,0(sp)
                           7017 ;	genPointerGet
                           7018 ;	AOP_STK for _move_character_sloc8_1_0
                           7019 ;	AOP_STK for _move_character_sloc7_1_0
   144D 22                 7020 	ld	(hl+),a
   144E 72                 7021 	ld	(hl),d
   144F 5F                 7022 	ld	e,a
   1450 1A                 7023 	ld	a,(de)
   1451 23                 7024 	inc	hl
                           7025 ;	genMinus
                           7026 ;	AOP_STK for _move_character_sloc7_1_0
                           7027 ;	AOP_STK for _move_character_sloc4_1_0
   1452 77                 7028 	ld      (hl),a
                           7029 ; Removed redundent load
   1453 91                 7030 	sub	a,c
   1454 F8 06              7031 	lda	hl,6(sp)
   1456 77                 7032 	ld	(hl),a
                           7033 ;	genAssign (pointer)
                           7034 ;	AOP_STK for _move_character_sloc8_1_0
                           7035 ;	AOP_STK for _move_character_sloc4_1_0
   1457 F8 00              7036 	lda	hl,0(sp)
   1459 5E                 7037 	ld	e,(hl)
   145A 23                 7038 	inc	hl
   145B 56                 7039 	ld	d,(hl)
   145C F8 06              7040 	lda	hl,6(sp)
   145E 7E                 7041 	ld	a,(hl)
   145F 12                 7042 	ld	(de),a
                           7043 ;	game.c 972
                           7044 ;	genGoto
   1460 C3 BD 14           7045 	jp	00115$
                           7046 ;	game.c 974
                           7047 ;	genLabel
   1463                    7048 00113$:
                           7049 ;	genPlus
                           7050 ;	AOP_STK for _move_character_sloc0_1_0
                           7051 ;	AOP_STK for _move_character_sloc8_1_0
                           7052 ;	genPlusIncr
                           7053 ;	Can't optimise plus by inc, falling back to the normal way
   1463 F8 0D              7054 	lda	hl,13(sp)
   1465 5E                 7055 	ld	e,(hl)
   1466 23                 7056 	inc	hl
   1467 56                 7057 	ld	d,(hl)
   1468 21 07 00           7058 	ld	hl,#0x0007
   146B 19                 7059 	add	hl,de
   146C 7D                 7060 	ld	a,l
   146D 54                 7061 	ld	d,h
   146E F8 00              7062 	lda	hl,0(sp)
                           7063 ;	genPointerGet
                           7064 ;	AOP_STK for _move_character_sloc8_1_0
                           7065 ;	AOP_STK for _move_character_sloc7_1_0
   1470 22                 7066 	ld	(hl+),a
   1471 72                 7067 	ld	(hl),d
   1472 5F                 7068 	ld	e,a
   1473 1A                 7069 	ld	a,(de)
   1474 23                 7070 	inc	hl
   1475 77                 7071 	ld	(hl),a
                           7072 ;	genIpush
                           7073 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1476 C5                 7074 	push	bc
                           7075 ;	AOP_STK for _move_character_sloc7_1_0
   1477 7E                 7076 	ld	a,(hl)
   1478 F5                 7077 	push	af
   1479 33                 7078 	inc	sp
                           7079 ;	genIpush
   147A 78                 7080 	ld	a,b
   147B F5                 7081 	push	af
   147C 33                 7082 	inc	sp
                           7083 ;	genCall
   147D CD 00 00           7084 	call	_set_sprite_tile
   1480 E8 02              7085 	lda	sp,2(sp)
   1482 C1                 7086 	pop	bc
                           7087 ;	game.c 975
                           7088 ;	genPointerGet
                           7089 ;	AOP_STK for _move_character_sloc1_1_0
                           7090 ;	AOP_STK for _move_character_sloc8_1_0
   1483 F8 0B              7091 	lda	hl,11(sp)
   1485 5E                 7092 	ld	e,(hl)
   1486 23                 7093 	inc	hl
   1487 56                 7094 	ld	d,(hl)
   1488 1A                 7095 	ld	a,(de)
   1489 F8 00              7096 	lda	hl,0(sp)
   148B 77                 7097 	ld	(hl),a
                           7098 ;	genIpush
                           7099 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   148C C5                 7100 	push	bc
   148D 3E 40              7101 	ld	a,#0x40
   148F F5                 7102 	push	af
   1490 33                 7103 	inc	sp
                           7104 ;	genIpush
                           7105 ;	AOP_STK for _move_character_sloc8_1_0
   1491 7E                 7106 	ld	a,(hl)
   1492 F5                 7107 	push	af
   1493 33                 7108 	inc	sp
                           7109 ;	genCall
   1494 CD 00 00           7110 	call	_set_sprite_prop
   1497 E8 02              7111 	lda	sp,2(sp)
   1499 C1                 7112 	pop	bc
                           7113 ;	game.c 976
                           7114 ;	genPlus
                           7115 ;	AOP_STK for _move_character_sloc0_1_0
                           7116 ;	AOP_STK for _move_character_sloc8_1_0
                           7117 ;	genPlusIncr
                           7118 ;	Can't optimise plus by inc, falling back to the normal way
   149A F8 0D              7119 	lda	hl,13(sp)
   149C 5E                 7120 	ld	e,(hl)
   149D 23                 7121 	inc	hl
   149E 56                 7122 	ld	d,(hl)
   149F 21 01 00           7123 	ld	hl,#0x0001
   14A2 19                 7124 	add	hl,de
   14A3 7D                 7125 	ld	a,l
   14A4 54                 7126 	ld	d,h
   14A5 F8 00              7127 	lda	hl,0(sp)
                           7128 ;	genPointerGet
                           7129 ;	AOP_STK for _move_character_sloc8_1_0
                           7130 ;	AOP_STK for _move_character_sloc7_1_0
   14A7 22                 7131 	ld	(hl+),a
   14A8 72                 7132 	ld	(hl),d
   14A9 5F                 7133 	ld	e,a
   14AA 1A                 7134 	ld	a,(de)
   14AB 23                 7135 	inc	hl
                           7136 ;	genPlus
                           7137 ;	AOP_STK for _move_character_sloc7_1_0
                           7138 ;	Can't optimise plus by inc, falling back to the normal way
   14AC 77                 7139 	ld      (hl),a
                           7140 ; Removed redundent load
   14AD 81                 7141 	add	a,c
                           7142 ;	genAssign (pointer)
                           7143 ;	AOP_STK for _move_character_sloc8_1_0
   14AE 2B                 7144 	dec	hl
   14AF 2B                 7145 	dec	hl
   14B0 5E                 7146 	ld	e,(hl)
   14B1 23                 7147 	inc	hl
   14B2 56                 7148 	ld	d,(hl)
   14B3 12                 7149 	ld	(de),a
                           7150 ;	game.c 977
                           7151 ;	genGoto
   14B4 C3 BD 14           7152 	jp	00115$
                           7153 ;	game.c 979
                           7154 ;	genLabel
   14B7                    7155 00114$:
                           7156 ;	genCall
                           7157 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14B7 C5                 7158 	push	bc
   14B8 CD A7 10           7159 	call	_rotate_player
   14BB E1                 7160 	pop	hl
   14BC 44                 7161 	ld	b,h
                           7162 ;	game.c 981
                           7163 ;	genLabel
   14BD                    7164 00115$:
                           7165 ;	game.c 983
                           7166 ;	genPointerGet
                           7167 ;	AOP_STK for _move_character_sloc3_1_0
   14BD F8 07              7168 	lda	hl,7(sp)
   14BF 5E                 7169 	ld	e,(hl)
   14C0 23                 7170 	inc	hl
   14C1 56                 7171 	ld	d,(hl)
   14C2 1A                 7172 	ld	a,(de)
   14C3 4F                 7173 	ld	c,a
                           7174 ;	genMinus
   14C4 0D                 7175 	dec	c
                           7176 ;	genAssign (pointer)
                           7177 ;	AOP_STK for _move_character_sloc3_1_0
   14C5 2B                 7178 	dec	hl
   14C6 5E                 7179 	ld	e,(hl)
   14C7 23                 7180 	inc	hl
   14C8 56                 7181 	ld	d,(hl)
   14C9 79                 7182 	ld	a,c
   14CA 12                 7183 	ld	(de),a
                           7184 ;	game.c 984
                           7185 ;	genCmpEq
                           7186 ; genCmpEq: left 1, right 1, result 0
   14CB 79                 7187 	ld	a,c
   14CC B7                 7188 	or	a,a
   14CD C2 E7 15           7189 	jp	nz,00124$
   14D0 18 03              7190 	jr	00208$
   14D2                    7191 00207$:
   14D2 C3 E7 15           7192 	jp	00124$
   14D5                    7193 00208$:
                           7194 ;	game.c 985
                           7195 ;	genAssign (pointer)
                           7196 ;	AOP_STK for _move_character_sloc2_1_0
   14D5 F8 09              7197 	lda	hl,9(sp)
   14D7 5E                 7198 	ld	e,(hl)
   14D8 23                 7199 	inc	hl
   14D9 56                 7200 	ld	d,(hl)
   14DA 3E 00              7201 	ld	a,#0x00
   14DC 12                 7202 	ld	(de),a
                           7203 ;	game.c 986
                           7204 ;	genCmpLt
                           7205 ;	AOP_STK for _move_character_sloc6_1_0
   14DD F8 03              7206 	lda	hl,3(sp)
   14DF 7E                 7207 	ld	a,(hl)
   14E0 FE 01              7208 	cp	#0x01
   14E2 DA E7 15           7209 	jp	c,00124$
                           7210 ;	genIfx
                           7211 ;	AOP_STK for _move_character_sloc5_1_0
   14E5 AF                 7212 	xor	a,a
   14E6 23                 7213 	inc	hl
   14E7 B6                 7214 	or	a,(hl)
   14E8 C2 E7 15           7215 	jp	nz,00124$
                           7216 ;	genMinus
                           7217 ;	AOP_STK for _move_character_sloc6_1_0
   14EB 2B                 7218 	dec	hl
   14EC 7E                 7219 	ld	a,(hl)
   14ED C6 FF              7220 	add	a,#0xFF
   14EF 4F                 7221 	ld	c,a
                           7222 ;	genJumpTab
   14F0 59                 7223 	ld	e,c
   14F1 16 00              7224 	ld	d,#0x00
   14F3 21 FA 14           7225 	ld	hl,#00209$
   14F6 19                 7226 	add	hl,de
   14F7 19                 7227 	add	hl,de
   14F8 19                 7228 	add	hl,de
   14F9 E9                 7229 	jp	(hl)
   14FA                    7230 00209$:
   14FA C3 78 15           7231 	jp	00118$
   14FD C3 3F 15           7232 	jp	00117$
   1500 C3 B1 15           7233 	jp	00119$
   1503 C3 06 15           7234 	jp	00116$
                           7235 ;	game.c 989
                           7236 ;	genLabel
   1506                    7237 00116$:
                           7238 ;	genPlus
                           7239 ;	AOP_STK for _move_character_sloc0_1_0
                           7240 ;	AOP_STK for _move_character_sloc8_1_0
                           7241 ;	genPlusIncr
                           7242 ;	Can't optimise plus by inc, falling back to the normal way
   1506 F8 0D              7243 	lda	hl,13(sp)
   1508 5E                 7244 	ld	e,(hl)
   1509 23                 7245 	inc	hl
   150A 56                 7246 	ld	d,(hl)
   150B 21 02 00           7247 	ld	hl,#0x0002
   150E 19                 7248 	add	hl,de
   150F 7D                 7249 	ld	a,l
   1510 54                 7250 	ld	d,h
   1511 F8 00              7251 	lda	hl,0(sp)
                           7252 ;	genPointerGet
                           7253 ;	AOP_STK for _move_character_sloc8_1_0
   1513 22                 7254 	ld	(hl+),a
   1514 72                 7255 	ld	(hl),d
   1515 5F                 7256 	ld	e,a
   1516 1A                 7257 	ld	a,(de)
   1517 4F                 7258 	ld	c,a
                           7259 ;	genIpush
                           7260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1518 C5                 7261 	push	bc
   1519 79                 7262 	ld	a,c
   151A F5                 7263 	push	af
   151B 33                 7264 	inc	sp
                           7265 ;	genIpush
   151C 78                 7266 	ld	a,b
   151D F5                 7267 	push	af
   151E 33                 7268 	inc	sp
                           7269 ;	genCall
   151F CD 00 00           7270 	call	_set_sprite_tile
   1522 E8 02              7271 	lda	sp,2(sp)
   1524 E1                 7272 	pop	hl
   1525 44                 7273 	ld	b,h
                           7274 ;	game.c 990
                           7275 ;	genPointerGet
                           7276 ;	AOP_STK for _move_character_sloc1_1_0
   1526 F8 0B              7277 	lda	hl,11(sp)
   1528 5E                 7278 	ld	e,(hl)
   1529 23                 7279 	inc	hl
   152A 56                 7280 	ld	d,(hl)
   152B 1A                 7281 	ld	a,(de)
   152C 4F                 7282 	ld	c,a
                           7283 ;	genIpush
                           7284 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   152D C5                 7285 	push	bc
   152E 3E 20              7286 	ld	a,#0x20
   1530 F5                 7287 	push	af
   1531 33                 7288 	inc	sp
                           7289 ;	genIpush
   1532 79                 7290 	ld	a,c
   1533 F5                 7291 	push	af
   1534 33                 7292 	inc	sp
                           7293 ;	genCall
   1535 CD 00 00           7294 	call	_set_sprite_prop
   1538 E8 02              7295 	lda	sp,2(sp)
   153A E1                 7296 	pop	hl
   153B 44                 7297 	ld	b,h
                           7298 ;	game.c 991
                           7299 ;	genGoto
   153C C3 E7 15           7300 	jp	00124$
                           7301 ;	game.c 994
                           7302 ;	genLabel
   153F                    7303 00117$:
                           7304 ;	genPlus
                           7305 ;	AOP_STK for _move_character_sloc0_1_0
                           7306 ;	AOP_STK for _move_character_sloc8_1_0
                           7307 ;	genPlusIncr
                           7308 ;	Can't optimise plus by inc, falling back to the normal way
   153F F8 0D              7309 	lda	hl,13(sp)
   1541 5E                 7310 	ld	e,(hl)
   1542 23                 7311 	inc	hl
   1543 56                 7312 	ld	d,(hl)
   1544 21 02 00           7313 	ld	hl,#0x0002
   1547 19                 7314 	add	hl,de
   1548 7D                 7315 	ld	a,l
   1549 54                 7316 	ld	d,h
   154A F8 00              7317 	lda	hl,0(sp)
                           7318 ;	genPointerGet
                           7319 ;	AOP_STK for _move_character_sloc8_1_0
   154C 22                 7320 	ld	(hl+),a
   154D 72                 7321 	ld	(hl),d
   154E 5F                 7322 	ld	e,a
   154F 1A                 7323 	ld	a,(de)
   1550 4F                 7324 	ld	c,a
                           7325 ;	genIpush
                           7326 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1551 C5                 7327 	push	bc
   1552 79                 7328 	ld	a,c
   1553 F5                 7329 	push	af
   1554 33                 7330 	inc	sp
                           7331 ;	genIpush
   1555 78                 7332 	ld	a,b
   1556 F5                 7333 	push	af
   1557 33                 7334 	inc	sp
                           7335 ;	genCall
   1558 CD 00 00           7336 	call	_set_sprite_tile
   155B E8 02              7337 	lda	sp,2(sp)
   155D E1                 7338 	pop	hl
   155E 44                 7339 	ld	b,h
                           7340 ;	game.c 995
                           7341 ;	genPointerGet
                           7342 ;	AOP_STK for _move_character_sloc1_1_0
   155F F8 0B              7343 	lda	hl,11(sp)
   1561 5E                 7344 	ld	e,(hl)
   1562 23                 7345 	inc	hl
   1563 56                 7346 	ld	d,(hl)
   1564 1A                 7347 	ld	a,(de)
   1565 4F                 7348 	ld	c,a
                           7349 ;	genIpush
                           7350 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1566 C5                 7351 	push	bc
   1567 3E 00              7352 	ld	a,#0x00
   1569 F5                 7353 	push	af
   156A 33                 7354 	inc	sp
                           7355 ;	genIpush
   156B 79                 7356 	ld	a,c
   156C F5                 7357 	push	af
   156D 33                 7358 	inc	sp
                           7359 ;	genCall
   156E CD 00 00           7360 	call	_set_sprite_prop
   1571 E8 02              7361 	lda	sp,2(sp)
   1573 E1                 7362 	pop	hl
   1574 44                 7363 	ld	b,h
                           7364 ;	game.c 996
                           7365 ;	genGoto
   1575 C3 E7 15           7366 	jp	00124$
                           7367 ;	game.c 998
                           7368 ;	genLabel
   1578                    7369 00118$:
                           7370 ;	genPlus
                           7371 ;	AOP_STK for _move_character_sloc0_1_0
                           7372 ;	AOP_STK for _move_character_sloc8_1_0
                           7373 ;	genPlusIncr
                           7374 ;	Can't optimise plus by inc, falling back to the normal way
   1578 F8 0D              7375 	lda	hl,13(sp)
   157A 5E                 7376 	ld	e,(hl)
   157B 23                 7377 	inc	hl
   157C 56                 7378 	ld	d,(hl)
   157D 21 05 00           7379 	ld	hl,#0x0005
   1580 19                 7380 	add	hl,de
   1581 7D                 7381 	ld	a,l
   1582 54                 7382 	ld	d,h
   1583 F8 00              7383 	lda	hl,0(sp)
                           7384 ;	genPointerGet
                           7385 ;	AOP_STK for _move_character_sloc8_1_0
   1585 22                 7386 	ld	(hl+),a
   1586 72                 7387 	ld	(hl),d
   1587 5F                 7388 	ld	e,a
   1588 1A                 7389 	ld	a,(de)
   1589 4F                 7390 	ld	c,a
                           7391 ;	genIpush
                           7392 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   158A C5                 7393 	push	bc
   158B 79                 7394 	ld	a,c
   158C F5                 7395 	push	af
   158D 33                 7396 	inc	sp
                           7397 ;	genIpush
   158E 78                 7398 	ld	a,b
   158F F5                 7399 	push	af
   1590 33                 7400 	inc	sp
                           7401 ;	genCall
   1591 CD 00 00           7402 	call	_set_sprite_tile
   1594 E8 02              7403 	lda	sp,2(sp)
   1596 E1                 7404 	pop	hl
   1597 44                 7405 	ld	b,h
                           7406 ;	game.c 999
                           7407 ;	genPointerGet
                           7408 ;	AOP_STK for _move_character_sloc1_1_0
   1598 F8 0B              7409 	lda	hl,11(sp)
   159A 5E                 7410 	ld	e,(hl)
   159B 23                 7411 	inc	hl
   159C 56                 7412 	ld	d,(hl)
   159D 1A                 7413 	ld	a,(de)
   159E 4F                 7414 	ld	c,a
                           7415 ;	genIpush
                           7416 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   159F C5                 7417 	push	bc
   15A0 3E 20              7418 	ld	a,#0x20
   15A2 F5                 7419 	push	af
   15A3 33                 7420 	inc	sp
                           7421 ;	genIpush
   15A4 79                 7422 	ld	a,c
   15A5 F5                 7423 	push	af
   15A6 33                 7424 	inc	sp
                           7425 ;	genCall
   15A7 CD 00 00           7426 	call	_set_sprite_prop
   15AA E8 02              7427 	lda	sp,2(sp)
   15AC E1                 7428 	pop	hl
   15AD 44                 7429 	ld	b,h
                           7430 ;	game.c 1000
                           7431 ;	genGoto
   15AE C3 E7 15           7432 	jp	00124$
                           7433 ;	game.c 1002
                           7434 ;	genLabel
   15B1                    7435 00119$:
                           7436 ;	genPlus
                           7437 ;	AOP_STK for _move_character_sloc0_1_0
                           7438 ;	AOP_STK for _move_character_sloc8_1_0
                           7439 ;	genPlusIncr
                           7440 ;	Can't optimise plus by inc, falling back to the normal way
   15B1 F8 0D              7441 	lda	hl,13(sp)
   15B3 5E                 7442 	ld	e,(hl)
   15B4 23                 7443 	inc	hl
   15B5 56                 7444 	ld	d,(hl)
   15B6 21 05 00           7445 	ld	hl,#0x0005
   15B9 19                 7446 	add	hl,de
   15BA 7D                 7447 	ld	a,l
   15BB 54                 7448 	ld	d,h
   15BC F8 00              7449 	lda	hl,0(sp)
                           7450 ;	genPointerGet
                           7451 ;	AOP_STK for _move_character_sloc8_1_0
   15BE 22                 7452 	ld	(hl+),a
   15BF 72                 7453 	ld	(hl),d
   15C0 5F                 7454 	ld	e,a
   15C1 1A                 7455 	ld	a,(de)
   15C2 4F                 7456 	ld	c,a
                           7457 ;	genIpush
                           7458 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15C3 C5                 7459 	push	bc
   15C4 79                 7460 	ld	a,c
   15C5 F5                 7461 	push	af
   15C6 33                 7462 	inc	sp
                           7463 ;	genIpush
   15C7 78                 7464 	ld	a,b
   15C8 F5                 7465 	push	af
   15C9 33                 7466 	inc	sp
                           7467 ;	genCall
   15CA CD 00 00           7468 	call	_set_sprite_tile
   15CD E8 02              7469 	lda	sp,2(sp)
   15CF E1                 7470 	pop	hl
   15D0 44                 7471 	ld	b,h
                           7472 ;	game.c 1003
                           7473 ;	genPointerGet
                           7474 ;	AOP_STK for _move_character_sloc1_1_0
   15D1 F8 0B              7475 	lda	hl,11(sp)
   15D3 5E                 7476 	ld	e,(hl)
   15D4 23                 7477 	inc	hl
   15D5 56                 7478 	ld	d,(hl)
   15D6 1A                 7479 	ld	a,(de)
   15D7 4F                 7480 	ld	c,a
                           7481 ;	genIpush
                           7482 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15D8 C5                 7483 	push	bc
   15D9 3E 40              7484 	ld	a,#0x40
   15DB F5                 7485 	push	af
   15DC 33                 7486 	inc	sp
                           7487 ;	genIpush
   15DD 79                 7488 	ld	a,c
   15DE F5                 7489 	push	af
   15DF 33                 7490 	inc	sp
                           7491 ;	genCall
   15E0 CD 00 00           7492 	call	_set_sprite_prop
   15E3 E8 02              7493 	lda	sp,2(sp)
   15E5 E1                 7494 	pop	hl
   15E6 44                 7495 	ld	b,h
                           7496 ;	game.c 1005
                           7497 ;	genLabel
   15E7                    7498 00124$:
                           7499 ;	game.c 1011
                           7500 ;	genCmpEq
                           7501 ; genCmpEq: left 1, right 1, result 0
   15E7 78                 7502 	ld	a,b
   15E8 FE 02              7503 	cp	a,#0x02
   15EA C2 45 1A           7504 	jp	nz,00165$
   15ED 18 03              7505 	jr	00211$
   15EF                    7506 00210$:
   15EF C3 45 1A           7507 	jp	00165$
   15F2                    7508 00211$:
                           7509 ;	game.c 1012
                           7510 ;	genPlus
                           7511 ;	AOP_STK for _move_character_sloc0_1_0
                           7512 ;	AOP_STK for _move_character_sloc8_1_0
                           7513 ;	genPlusIncr
                           7514 ;	Can't optimise plus by inc, falling back to the normal way
   15F2 F8 0D              7515 	lda	hl,13(sp)
   15F4 5E                 7516 	ld	e,(hl)
   15F5 23                 7517 	inc	hl
   15F6 56                 7518 	ld	d,(hl)
   15F7 21 04 00           7519 	ld	hl,#0x0004
   15FA 19                 7520 	add	hl,de
   15FB 7D                 7521 	ld	a,l
   15FC 54                 7522 	ld	d,h
   15FD F8 00              7523 	lda	hl,0(sp)
                           7524 ;	genPointerGet
                           7525 ;	AOP_STK for _move_character_sloc8_1_0
   15FF 22                 7526 	ld	(hl+),a
   1600 72                 7527 	ld	(hl),d
   1601 5F                 7528 	ld	e,a
   1602 1A                 7529 	ld	a,(de)
   1603 4F                 7530 	ld	c,a
                           7531 ;	genIpush
                           7532 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1604 C5                 7533 	push	bc
   1605 79                 7534 	ld	a,c
   1606 F5                 7535 	push	af
   1607 33                 7536 	inc	sp
                           7537 ;	genIpush
   1608 78                 7538 	ld	a,b
   1609 F5                 7539 	push	af
   160A 33                 7540 	inc	sp
                           7541 ;	genCall
   160B CD 00 00           7542 	call	_set_sprite_tile
   160E E8 02              7543 	lda	sp,2(sp)
   1610 E1                 7544 	pop	hl
   1611 44                 7545 	ld	b,h
                           7546 ;	game.c 1014
                           7547 ;	genPointerGet
                           7548 ;	AOP_STK for _move_character_sloc2_1_0
   1612 F8 09              7549 	lda	hl,9(sp)
   1614 5E                 7550 	ld	e,(hl)
   1615 23                 7551 	inc	hl
   1616 56                 7552 	ld	d,(hl)
   1617 1A                 7553 	ld	a,(de)
                           7554 ;	genCmpEq
                           7555 ; genCmpEq: left 1, right 1, result 0
   1618 4F                 7556 	ld	c,a
   1619 FE 01              7557 	cp	a,#0x01
   161B C2 3A 16           7558 	jp	nz,00126$
   161E 18 03              7559 	jr	00213$
   1620                    7560 00212$:
   1620 C3 3A 16           7561 	jp	00126$
   1623                    7562 00213$:
                           7563 ;	game.c 1016
                           7564 ;	genAssign (pointer)
                           7565 ;	AOP_STK for _move_character_sloc2_1_0
   1623 F8 09              7566 	lda	hl,9(sp)
   1625 5E                 7567 	ld	e,(hl)
   1626 23                 7568 	inc	hl
   1627 56                 7569 	ld	d,(hl)
   1628 3E 02              7570 	ld	a,#0x02
   162A 12                 7571 	ld	(de),a
                           7572 ;	game.c 1017
                           7573 ;	genPlus
                           7574 ;	AOP_STK for _move_character_sloc0_1_0
                           7575 ;	genPlusIncr
                           7576 ;	Can't optimise plus by inc, falling back to the normal way
   162B F8 0D              7577 	lda	hl,13(sp)
   162D 5E                 7578 	ld	e,(hl)
   162E 23                 7579 	inc	hl
   162F 56                 7580 	ld	d,(hl)
   1630 21 0A 00           7581 	ld	hl,#0x000A
   1633 19                 7582 	add	hl,de
   1634 7D                 7583 	ld	a,l
   1635 54                 7584 	ld	d,h
   1636 6F                 7585 	ld	l,a
   1637 62                 7586 	ld	h,d
                           7587 ;	genAssign (pointer)
   1638 36 10              7588 	ld	(hl),#0x10
                           7589 ;	genLabel
   163A                    7590 00126$:
                           7591 ;	game.c 1019
                           7592 ;	genPlus
                           7593 ;	AOP_STK for _move_character_sloc0_1_0
                           7594 ;	AOP_STK for _move_character_sloc8_1_0
                           7595 ;	genPlusIncr
                           7596 ;	Can't optimise plus by inc, falling back to the normal way
   163A F8 0D              7597 	lda	hl,13(sp)
   163C 5E                 7598 	ld	e,(hl)
   163D 23                 7599 	inc	hl
   163E 56                 7600 	ld	d,(hl)
   163F 21 0A 00           7601 	ld	hl,#0x000A
   1642 19                 7602 	add	hl,de
   1643 7D                 7603 	ld	a,l
   1644 54                 7604 	ld	d,h
   1645 F8 00              7605 	lda	hl,0(sp)
                           7606 ;	genPointerGet
                           7607 ;	AOP_STK for _move_character_sloc8_1_0
   1647 22                 7608 	ld	(hl+),a
   1648 72                 7609 	ld	(hl),d
   1649 5F                 7610 	ld	e,a
   164A 1A                 7611 	ld	a,(de)
   164B 4F                 7612 	ld	c,a
                           7613 ;	genMinus
   164C 0D                 7614 	dec	c
                           7615 ;	genAssign (pointer)
                           7616 ;	AOP_STK for _move_character_sloc8_1_0
   164D 2B                 7617 	dec	hl
   164E 5E                 7618 	ld	e,(hl)
   164F 23                 7619 	inc	hl
   1650 56                 7620 	ld	d,(hl)
   1651 79                 7621 	ld	a,c
   1652 12                 7622 	ld	(de),a
                           7623 ;	game.c 1021
                           7624 ;	genCmpEq
                           7625 ; genCmpEq: left 1, right 1, result 0
   1653 79                 7626 	ld	a,c
   1654 B7                 7627 	or	a,a
   1655 C2 45 1A           7628 	jp	nz,00165$
   1658 18 03              7629 	jr	00215$
   165A                    7630 00214$:
   165A C3 45 1A           7631 	jp	00165$
   165D                    7632 00215$:
                           7633 ;	game.c 1022
                           7634 ;	genAssign (pointer)
                           7635 ;	AOP_STK for _move_character_sloc2_1_0
   165D F8 09              7636 	lda	hl,9(sp)
   165F 5E                 7637 	ld	e,(hl)
   1660 23                 7638 	inc	hl
   1661 56                 7639 	ld	d,(hl)
   1662 3E 00              7640 	ld	a,#0x00
   1664 12                 7641 	ld	(de),a
                           7642 ;	game.c 1023
                           7643 ;	genPlus
                           7644 ;	AOP_STK for _move_character_sloc0_1_0
                           7645 ;	AOP_STK for _move_character_sloc8_1_0
                           7646 ;	genPlusIncr
                           7647 ;	Can't optimise plus by inc, falling back to the normal way
   1665 F8 0D              7648 	lda	hl,13(sp)
   1667 5E                 7649 	ld	e,(hl)
   1668 23                 7650 	inc	hl
   1669 56                 7651 	ld	d,(hl)
   166A 21 02 00           7652 	ld	hl,#0x0002
   166D 19                 7653 	add	hl,de
   166E 7D                 7654 	ld	a,l
   166F 54                 7655 	ld	d,h
   1670 F8 00              7656 	lda	hl,0(sp)
                           7657 ;	genPointerGet
                           7658 ;	AOP_STK for _move_character_sloc8_1_0
   1672 22                 7659 	ld	(hl+),a
   1673 72                 7660 	ld	(hl),d
   1674 5F                 7661 	ld	e,a
   1675 1A                 7662 	ld	a,(de)
   1676 4F                 7663 	ld	c,a
                           7664 ;	genPointerGet
                           7665 ;	AOP_STK for _move_character_sloc1_1_0
                           7666 ;	AOP_STK for _move_character_sloc8_1_0
   1677 F8 0B              7667 	lda	hl,11(sp)
   1679 5E                 7668 	ld	e,(hl)
   167A 23                 7669 	inc	hl
   167B 56                 7670 	ld	d,(hl)
   167C 1A                 7671 	ld	a,(de)
   167D F8 00              7672 	lda	hl,0(sp)
   167F 77                 7673 	ld	(hl),a
                           7674 ;	genIpush
                           7675 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1680 C5                 7676 	push	bc
   1681 79                 7677 	ld	a,c
   1682 F5                 7678 	push	af
   1683 33                 7679 	inc	sp
                           7680 ;	genIpush
                           7681 ;	AOP_STK for _move_character_sloc8_1_0
   1684 7E                 7682 	ld	a,(hl)
   1685 F5                 7683 	push	af
   1686 33                 7684 	inc	sp
                           7685 ;	genCall
   1687 CD 00 00           7686 	call	_set_sprite_tile
   168A E8 02              7687 	lda	sp,2(sp)
   168C E1                 7688 	pop	hl
   168D 44                 7689 	ld	b,h
                           7690 ;	genGoto
   168E C3 45 1A           7691 	jp	00165$
                           7692 ;	genLabel
   1691                    7693 00164$:
                           7694 ;	game.c 1032
                           7695 ;	genCmpEq
                           7696 ;	AOP_HL for _input_timer
                           7697 ; genCmpEq: left 1, right 1, result 0
   1691 21 03 19           7698 	ld	hl,#_input_timer
   1694 7E                 7699 	ld	a,(hl)
   1695 FE 04              7700 	cp	a,#0x04
   1697 C2 F3 16           7701 	jp	nz,00134$
   169A 18 03              7702 	jr	00217$
   169C                    7703 00216$:
   169C C3 F3 16           7704 	jp	00134$
   169F                    7705 00217$:
                           7706 ;	game.c 1033
                           7707 ;	genPlus
                           7708 ;	AOP_STK for _move_character_sloc0_1_0
                           7709 ;	AOP_STK for _move_character_sloc8_1_0
                           7710 ;	genPlusIncr
                           7711 ;	Can't optimise plus by inc, falling back to the normal way
   169F F8 0D              7712 	lda	hl,13(sp)
   16A1 5E                 7713 	ld	e,(hl)
   16A2 23                 7714 	inc	hl
   16A3 56                 7715 	ld	d,(hl)
   16A4 21 08 00           7716 	ld	hl,#0x0008
   16A7 19                 7717 	add	hl,de
   16A8 7D                 7718 	ld	a,l
   16A9 54                 7719 	ld	d,h
   16AA F8 00              7720 	lda	hl,0(sp)
                           7721 ;	genPointerGet
                           7722 ;	AOP_STK for _move_character_sloc8_1_0
   16AC 22                 7723 	ld	(hl+),a
   16AD 72                 7724 	ld	(hl),d
   16AE 5F                 7725 	ld	e,a
   16AF 1A                 7726 	ld	a,(de)
   16B0 4F                 7727 	ld	c,a
                           7728 ;	genPlus
                           7729 ;	AOP_STK for _move_character_sloc0_1_0
                           7730 ;	AOP_STK for _move_character_sloc8_1_0
                           7731 ;	genPlusIncr
                           7732 ;	Can't optimise plus by inc, falling back to the normal way
   16B1 F8 0D              7733 	lda	hl,13(sp)
   16B3 5E                 7734 	ld	e,(hl)
   16B4 23                 7735 	inc	hl
   16B5 56                 7736 	ld	d,(hl)
   16B6 21 01 00           7737 	ld	hl,#0x0001
   16B9 19                 7738 	add	hl,de
   16BA 7D                 7739 	ld	a,l
   16BB 54                 7740 	ld	d,h
   16BC F8 00              7741 	lda	hl,0(sp)
                           7742 ;	genPointerGet
                           7743 ;	AOP_STK for _move_character_sloc8_1_0
                           7744 ;	AOP_STK for _move_character_sloc7_1_0
   16BE 22                 7745 	ld	(hl+),a
   16BF 72                 7746 	ld	(hl),d
   16C0 5F                 7747 	ld	e,a
   16C1 1A                 7748 	ld	a,(de)
   16C2 23                 7749 	inc	hl
   16C3 77                 7750 	ld	(hl),a
                           7751 ;	genPointerGet
                           7752 ;	AOP_STK for _move_character_sloc0_1_0
                           7753 ;	AOP_STK for _move_character_sloc8_1_0
   16C4 F8 0D              7754 	lda	hl,13(sp)
   16C6 5E                 7755 	ld	e,(hl)
   16C7 23                 7756 	inc	hl
   16C8 56                 7757 	ld	d,(hl)
   16C9 1A                 7758 	ld	a,(de)
   16CA F8 00              7759 	lda	hl,0(sp)
   16CC 77                 7760 	ld	(hl),a
                           7761 ;	genIpush
                           7762 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16CD C5                 7763 	push	bc
   16CE 79                 7764 	ld	a,c
   16CF F5                 7765 	push	af
   16D0 33                 7766 	inc	sp
                           7767 ;	genIpush
                           7768 ;	AOP_STK for _move_character_sloc7_1_0
   16D1 23                 7769 	inc	hl
   16D2 23                 7770 	inc	hl
   16D3 7E                 7771 	ld	a,(hl)
   16D4 F5                 7772 	push	af
   16D5 33                 7773 	inc	sp
                           7774 ;	genIpush
                           7775 ;	AOP_STK for _move_character_sloc8_1_0
   16D6 2B                 7776 	dec	hl
   16D7 2B                 7777 	dec	hl
   16D8 7E                 7778 	ld	a,(hl)
   16D9 F5                 7779 	push	af
   16DA 33                 7780 	inc	sp
                           7781 ;	genCall
   16DB CD BE 0F           7782 	call	_can_move
                           7783 ;	AOP_STK for _move_character_sloc8_1_0
   16DE F8 06              7784 	lda	hl,6(sp)
   16E0 72                 7785 	ld	(hl),d
   16E1 2B                 7786 	dec	hl
   16E2 73                 7787 	ld	(hl),e
   16E3 E8 03              7788 	lda	sp,3(sp)
   16E5 E1                 7789 	pop	hl
   16E6 44                 7790 	ld	b,h
                           7791 ;	genIfx
                           7792 ;	AOP_STK for _move_character_sloc8_1_0
   16E7 F8 00              7793 	lda	hl,0(sp)
   16E9 2A                 7794 	ld	a,(hl+)
   16EA B6                 7795 	or	a,(hl)
   16EB C2 F3 16           7796 	jp	nz,00134$
                           7797 ;	game.c 1034
                           7798 ;	genAssign
                           7799 ;	AOP_HL for _input_timer
   16EE 21 03 19           7800 	ld	hl,#_input_timer
   16F1 36 00              7801 	ld	(hl),#0x00
                           7802 ;	genLabel
   16F3                    7803 00134$:
                           7804 ;	game.c 1042
                           7805 ;	genPlus
                           7806 ;	AOP_STK for _move_character_sloc0_1_0
                           7807 ;	AOP_STK for _move_character_sloc8_1_0
                           7808 ;	genPlusIncr
                           7809 ;	Can't optimise plus by inc, falling back to the normal way
   16F3 F8 0D              7810 	lda	hl,13(sp)
   16F5 5E                 7811 	ld	e,(hl)
   16F6 23                 7812 	inc	hl
   16F7 56                 7813 	ld	d,(hl)
   16F8 21 08 00           7814 	ld	hl,#0x0008
   16FB 19                 7815 	add	hl,de
   16FC 7D                 7816 	ld	a,l
   16FD 54                 7817 	ld	d,h
   16FE F8 00              7818 	lda	hl,0(sp)
                           7819 ;	genPointerGet
                           7820 ;	AOP_STK for _move_character_sloc8_1_0
   1700 22                 7821 	ld	(hl+),a
   1701 72                 7822 	ld	(hl),d
   1702 5F                 7823 	ld	e,a
   1703 1A                 7824 	ld	a,(de)
                           7825 ;	genCmpLt
                           7826 ;	AOP_STK for _move_character_sloc8_1_0
   1704 4F                 7827 	ld	c,a
   1705 FE 01              7828 	cp	#0x01
   1707 3E 00              7829 	ld	a,#0x00
   1709 17                 7830 	rla
   170A 2B                 7831 	dec	hl
   170B 77                 7832 	ld	(hl),a
                           7833 ;	genIfx
                           7834 ;	AOP_STK for _move_character_sloc8_1_0
   170C AF                 7835 	xor	a,a
   170D B6                 7836 	or	a,(hl)
   170E C2 C0 19           7837 	jp	nz,00155$
                           7838 ;	genCmpGt
   1711 3E 04              7839 	ld	a,#0x04
   1713 91                 7840 	sub	a,c
   1714 DA C0 19           7841 	jp	c,00155$
                           7842 ;	genMinus
                           7843 ;	AOP_STK for _move_character_sloc7_1_0
   1717 79                 7844 	ld	a,c
   1718 C6 FF              7845 	add	a,#0xFF
   171A 23                 7846 	inc	hl
   171B 23                 7847 	inc	hl
                           7848 ;	genJumpTab
                           7849 ;	AOP_STK for _move_character_sloc7_1_0
   171C 77                 7850 	ld      (hl),a
   171D 5F                 7851 	ld      e,a
   171E 16 00              7852 	ld	d,#0x00
   1720 21 27 17           7853 	ld	hl,#00218$
   1723 19                 7854 	add	hl,de
   1724 19                 7855 	add	hl,de
   1725 19                 7856 	add	hl,de
   1726 E9                 7857 	jp	(hl)
   1727                    7858 00218$:
   1727 C3 7B 18           7859 	jp	00145$
   172A C3 D7 17           7860 	jp	00140$
   172D C3 1F 19           7861 	jp	00150$
   1730 C3 33 17           7862 	jp	00135$
                           7863 ;	game.c 1045
                           7864 ;	genLabel
   1733                    7865 00135$:
                           7866 ;	genPlus
                           7867 ;	AOP_STK for _move_character_sloc0_1_0
                           7868 ;	AOP_STK for _move_character_sloc5_1_0
                           7869 ;	genPlusIncr
                           7870 ;	Can't optimise plus by inc, falling back to the normal way
   1733 F8 0D              7871 	lda	hl,13(sp)
   1735 5E                 7872 	ld	e,(hl)
   1736 23                 7873 	inc	hl
   1737 56                 7874 	ld	d,(hl)
   1738 21 02 00           7875 	ld	hl,#0x0002
   173B 19                 7876 	add	hl,de
   173C 7D                 7877 	ld	a,l
   173D 54                 7878 	ld	d,h
   173E F8 04              7879 	lda	hl,4(sp)
                           7880 ;	genPointerGet
                           7881 ;	AOP_STK for _move_character_sloc5_1_0
                           7882 ;	AOP_STK for _move_character_sloc7_1_0
   1740 22                 7883 	ld	(hl+),a
   1741 72                 7884 	ld	(hl),d
   1742 5F                 7885 	ld	e,a
   1743 1A                 7886 	ld	a,(de)
   1744 F8 02              7887 	lda	hl,2(sp)
   1746 77                 7888 	ld	(hl),a
                           7889 ;	genIpush
                           7890 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1747 C5                 7891 	push	bc
                           7892 ;	AOP_STK for _move_character_sloc7_1_0
   1748 7E                 7893 	ld	a,(hl)
   1749 F5                 7894 	push	af
   174A 33                 7895 	inc	sp
                           7896 ;	genIpush
   174B 78                 7897 	ld	a,b
   174C F5                 7898 	push	af
   174D 33                 7899 	inc	sp
                           7900 ;	genCall
   174E CD 00 00           7901 	call	_set_sprite_tile
   1751 E8 02              7902 	lda	sp,2(sp)
   1753 C1                 7903 	pop	bc
                           7904 ;	game.c 1046
                           7905 ;	genCmpEq
                           7906 ;	AOP_HL for _input_timer
                           7907 ; genCmpEq: left 1, right 1, result 0
   1754 21 03 19           7908 	ld	hl,#_input_timer
   1757 7E                 7909 	ld	a,(hl)
   1758 FE 04              7910 	cp	a,#0x04
   175A C2 8E 17           7911 	jp	nz,00137$
   175D 18 03              7912 	jr	00220$
   175F                    7913 00219$:
   175F C3 8E 17           7914 	jp	00137$
   1762                    7915 00220$:
                           7916 ;	game.c 1047
                           7917 ;	genPlus
                           7918 ;	AOP_STK for _move_character_sloc0_1_0
                           7919 ;	AOP_STK for _move_character_sloc3_1_0
                           7920 ;	genPlusIncr
                           7921 ;	Can't optimise plus by inc, falling back to the normal way
   1762 F8 0D              7922 	lda	hl,13(sp)
   1764 5E                 7923 	ld	e,(hl)
   1765 23                 7924 	inc	hl
   1766 56                 7925 	ld	d,(hl)
   1767 21 03 00           7926 	ld	hl,#0x0003
   176A 19                 7927 	add	hl,de
   176B 7D                 7928 	ld	a,l
   176C 54                 7929 	ld	d,h
   176D F8 07              7930 	lda	hl,7(sp)
                           7931 ;	genPointerGet
                           7932 ;	AOP_STK for _move_character_sloc3_1_0
                           7933 ;	AOP_STK for _move_character_sloc7_1_0
   176F 22                 7934 	ld	(hl+),a
   1770 72                 7935 	ld	(hl),d
   1771 5F                 7936 	ld	e,a
   1772 1A                 7937 	ld	a,(de)
   1773 F8 02              7938 	lda	hl,2(sp)
   1775 77                 7939 	ld	(hl),a
                           7940 ;	genPointerGet
                           7941 ;	AOP_STK for _move_character_sloc1_1_0
                           7942 ;	AOP_STK for _move_character_sloc6_1_0
   1776 F8 0B              7943 	lda	hl,11(sp)
   1778 5E                 7944 	ld	e,(hl)
   1779 23                 7945 	inc	hl
   177A 56                 7946 	ld	d,(hl)
   177B 1A                 7947 	ld	a,(de)
   177C F8 03              7948 	lda	hl,3(sp)
   177E 77                 7949 	ld	(hl),a
                           7950 ;	genIpush
                           7951 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   177F C5                 7952 	push	bc
                           7953 ;	AOP_STK for _move_character_sloc7_1_0
   1780 2B                 7954 	dec	hl
   1781 7E                 7955 	ld	a,(hl)
   1782 F5                 7956 	push	af
   1783 33                 7957 	inc	sp
                           7958 ;	genIpush
                           7959 ;	AOP_STK for _move_character_sloc6_1_0
   1784 23                 7960 	inc	hl
   1785 7E                 7961 	ld	a,(hl)
   1786 F5                 7962 	push	af
   1787 33                 7963 	inc	sp
                           7964 ;	genCall
   1788 CD 00 00           7965 	call	_set_sprite_tile
   178B E8 02              7966 	lda	sp,2(sp)
   178D C1                 7967 	pop	bc
                           7968 ;	genLabel
   178E                    7969 00137$:
                           7970 ;	game.c 1049
                           7971 ;	genCmpEq
                           7972 ;	AOP_HL for _input_timer
                           7973 ; genCmpEq: left 1, right 1, result 0
   178E 21 03 19           7974 	ld	hl,#_input_timer
   1791 7E                 7975 	ld	a,(hl)
   1792 FE 02              7976 	cp	a,#0x02
   1794 C2 BD 17           7977 	jp	nz,00139$
   1797 18 03              7978 	jr	00222$
   1799                    7979 00221$:
   1799 C3 BD 17           7980 	jp	00139$
   179C                    7981 00222$:
                           7982 ;	game.c 1050
                           7983 ;	genPointerGet
                           7984 ;	AOP_STK for _move_character_sloc5_1_0
                           7985 ;	AOP_STK for _move_character_sloc7_1_0
   179C F8 04              7986 	lda	hl,4(sp)
   179E 5E                 7987 	ld	e,(hl)
   179F 23                 7988 	inc	hl
   17A0 56                 7989 	ld	d,(hl)
   17A1 1A                 7990 	ld	a,(de)
   17A2 F8 02              7991 	lda	hl,2(sp)
   17A4 77                 7992 	ld	(hl),a
                           7993 ;	genPointerGet
                           7994 ;	AOP_STK for _move_character_sloc1_1_0
                           7995 ;	AOP_STK for _move_character_sloc6_1_0
   17A5 F8 0B              7996 	lda	hl,11(sp)
   17A7 5E                 7997 	ld	e,(hl)
   17A8 23                 7998 	inc	hl
   17A9 56                 7999 	ld	d,(hl)
   17AA 1A                 8000 	ld	a,(de)
   17AB F8 03              8001 	lda	hl,3(sp)
   17AD 77                 8002 	ld	(hl),a
                           8003 ;	genIpush
                           8004 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17AE C5                 8005 	push	bc
                           8006 ;	AOP_STK for _move_character_sloc7_1_0
   17AF 2B                 8007 	dec	hl
   17B0 7E                 8008 	ld	a,(hl)
   17B1 F5                 8009 	push	af
   17B2 33                 8010 	inc	sp
                           8011 ;	genIpush
                           8012 ;	AOP_STK for _move_character_sloc6_1_0
   17B3 23                 8013 	inc	hl
   17B4 7E                 8014 	ld	a,(hl)
   17B5 F5                 8015 	push	af
   17B6 33                 8016 	inc	sp
                           8017 ;	genCall
   17B7 CD 00 00           8018 	call	_set_sprite_tile
   17BA E8 02              8019 	lda	sp,2(sp)
   17BC C1                 8020 	pop	bc
                           8021 ;	genLabel
   17BD                    8022 00139$:
                           8023 ;	game.c 1052
                           8024 ;	genPointerGet
                           8025 ;	AOP_STK for _move_character_sloc1_1_0
                           8026 ;	AOP_STK for _move_character_sloc7_1_0
   17BD F8 0B              8027 	lda	hl,11(sp)
   17BF 5E                 8028 	ld	e,(hl)
   17C0 23                 8029 	inc	hl
   17C1 56                 8030 	ld	d,(hl)
   17C2 1A                 8031 	ld	a,(de)
   17C3 F8 02              8032 	lda	hl,2(sp)
   17C5 77                 8033 	ld	(hl),a
                           8034 ;	genIpush
                           8035 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17C6 C5                 8036 	push	bc
   17C7 3E 20              8037 	ld	a,#0x20
   17C9 F5                 8038 	push	af
   17CA 33                 8039 	inc	sp
                           8040 ;	genIpush
                           8041 ;	AOP_STK for _move_character_sloc7_1_0
   17CB 7E                 8042 	ld	a,(hl)
   17CC F5                 8043 	push	af
   17CD 33                 8044 	inc	sp
                           8045 ;	genCall
   17CE CD 00 00           8046 	call	_set_sprite_prop
   17D1 E8 02              8047 	lda	sp,2(sp)
   17D3 C1                 8048 	pop	bc
                           8049 ;	game.c 1053
                           8050 ;	genGoto
   17D4 C3 C0 19           8051 	jp	00155$
                           8052 ;	game.c 1056
                           8053 ;	genLabel
   17D7                    8054 00140$:
                           8055 ;	genPlus
                           8056 ;	AOP_STK for _move_character_sloc0_1_0
                           8057 ;	AOP_STK for _move_character_sloc5_1_0
                           8058 ;	genPlusIncr
                           8059 ;	Can't optimise plus by inc, falling back to the normal way
   17D7 F8 0D              8060 	lda	hl,13(sp)
   17D9 5E                 8061 	ld	e,(hl)
   17DA 23                 8062 	inc	hl
   17DB 56                 8063 	ld	d,(hl)
   17DC 21 02 00           8064 	ld	hl,#0x0002
   17DF 19                 8065 	add	hl,de
   17E0 7D                 8066 	ld	a,l
   17E1 54                 8067 	ld	d,h
   17E2 F8 04              8068 	lda	hl,4(sp)
                           8069 ;	genPointerGet
                           8070 ;	AOP_STK for _move_character_sloc5_1_0
                           8071 ;	AOP_STK for _move_character_sloc7_1_0
   17E4 22                 8072 	ld	(hl+),a
   17E5 72                 8073 	ld	(hl),d
   17E6 5F                 8074 	ld	e,a
   17E7 1A                 8075 	ld	a,(de)
   17E8 F8 02              8076 	lda	hl,2(sp)
   17EA 77                 8077 	ld	(hl),a
                           8078 ;	genIpush
                           8079 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17EB C5                 8080 	push	bc
                           8081 ;	AOP_STK for _move_character_sloc7_1_0
   17EC 7E                 8082 	ld	a,(hl)
   17ED F5                 8083 	push	af
   17EE 33                 8084 	inc	sp
                           8085 ;	genIpush
   17EF 78                 8086 	ld	a,b
   17F0 F5                 8087 	push	af
   17F1 33                 8088 	inc	sp
                           8089 ;	genCall
   17F2 CD 00 00           8090 	call	_set_sprite_tile
   17F5 E8 02              8091 	lda	sp,2(sp)
   17F7 C1                 8092 	pop	bc
                           8093 ;	game.c 1057
                           8094 ;	genCmpEq
                           8095 ;	AOP_HL for _input_timer
                           8096 ; genCmpEq: left 1, right 1, result 0
   17F8 21 03 19           8097 	ld	hl,#_input_timer
   17FB 7E                 8098 	ld	a,(hl)
   17FC FE 04              8099 	cp	a,#0x04
   17FE C2 32 18           8100 	jp	nz,00142$
   1801 18 03              8101 	jr	00224$
   1803                    8102 00223$:
   1803 C3 32 18           8103 	jp	00142$
   1806                    8104 00224$:
                           8105 ;	game.c 1058
                           8106 ;	genPlus
                           8107 ;	AOP_STK for _move_character_sloc0_1_0
                           8108 ;	AOP_STK for _move_character_sloc3_1_0
                           8109 ;	genPlusIncr
                           8110 ;	Can't optimise plus by inc, falling back to the normal way
   1806 F8 0D              8111 	lda	hl,13(sp)
   1808 5E                 8112 	ld	e,(hl)
   1809 23                 8113 	inc	hl
   180A 56                 8114 	ld	d,(hl)
   180B 21 03 00           8115 	ld	hl,#0x0003
   180E 19                 8116 	add	hl,de
   180F 7D                 8117 	ld	a,l
   1810 54                 8118 	ld	d,h
   1811 F8 07              8119 	lda	hl,7(sp)
                           8120 ;	genPointerGet
                           8121 ;	AOP_STK for _move_character_sloc3_1_0
                           8122 ;	AOP_STK for _move_character_sloc7_1_0
   1813 22                 8123 	ld	(hl+),a
   1814 72                 8124 	ld	(hl),d
   1815 5F                 8125 	ld	e,a
   1816 1A                 8126 	ld	a,(de)
   1817 F8 02              8127 	lda	hl,2(sp)
   1819 77                 8128 	ld	(hl),a
                           8129 ;	genPointerGet
                           8130 ;	AOP_STK for _move_character_sloc1_1_0
                           8131 ;	AOP_STK for _move_character_sloc6_1_0
   181A F8 0B              8132 	lda	hl,11(sp)
   181C 5E                 8133 	ld	e,(hl)
   181D 23                 8134 	inc	hl
   181E 56                 8135 	ld	d,(hl)
   181F 1A                 8136 	ld	a,(de)
   1820 F8 03              8137 	lda	hl,3(sp)
   1822 77                 8138 	ld	(hl),a
                           8139 ;	genIpush
                           8140 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1823 C5                 8141 	push	bc
                           8142 ;	AOP_STK for _move_character_sloc7_1_0
   1824 2B                 8143 	dec	hl
   1825 7E                 8144 	ld	a,(hl)
   1826 F5                 8145 	push	af
   1827 33                 8146 	inc	sp
                           8147 ;	genIpush
                           8148 ;	AOP_STK for _move_character_sloc6_1_0
   1828 23                 8149 	inc	hl
   1829 7E                 8150 	ld	a,(hl)
   182A F5                 8151 	push	af
   182B 33                 8152 	inc	sp
                           8153 ;	genCall
   182C CD 00 00           8154 	call	_set_sprite_tile
   182F E8 02              8155 	lda	sp,2(sp)
   1831 C1                 8156 	pop	bc
                           8157 ;	genLabel
   1832                    8158 00142$:
                           8159 ;	game.c 1060
                           8160 ;	genCmpEq
                           8161 ;	AOP_HL for _input_timer
                           8162 ; genCmpEq: left 1, right 1, result 0
   1832 21 03 19           8163 	ld	hl,#_input_timer
   1835 7E                 8164 	ld	a,(hl)
   1836 FE 02              8165 	cp	a,#0x02
   1838 C2 61 18           8166 	jp	nz,00144$
   183B 18 03              8167 	jr	00226$
   183D                    8168 00225$:
   183D C3 61 18           8169 	jp	00144$
   1840                    8170 00226$:
                           8171 ;	game.c 1061
                           8172 ;	genPointerGet
                           8173 ;	AOP_STK for _move_character_sloc5_1_0
                           8174 ;	AOP_STK for _move_character_sloc7_1_0
   1840 F8 04              8175 	lda	hl,4(sp)
   1842 5E                 8176 	ld	e,(hl)
   1843 23                 8177 	inc	hl
   1844 56                 8178 	ld	d,(hl)
   1845 1A                 8179 	ld	a,(de)
   1846 F8 02              8180 	lda	hl,2(sp)
   1848 77                 8181 	ld	(hl),a
                           8182 ;	genPointerGet
                           8183 ;	AOP_STK for _move_character_sloc1_1_0
                           8184 ;	AOP_STK for _move_character_sloc6_1_0
   1849 F8 0B              8185 	lda	hl,11(sp)
   184B 5E                 8186 	ld	e,(hl)
   184C 23                 8187 	inc	hl
   184D 56                 8188 	ld	d,(hl)
   184E 1A                 8189 	ld	a,(de)
   184F F8 03              8190 	lda	hl,3(sp)
   1851 77                 8191 	ld	(hl),a
                           8192 ;	genIpush
                           8193 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1852 C5                 8194 	push	bc
                           8195 ;	AOP_STK for _move_character_sloc7_1_0
   1853 2B                 8196 	dec	hl
   1854 7E                 8197 	ld	a,(hl)
   1855 F5                 8198 	push	af
   1856 33                 8199 	inc	sp
                           8200 ;	genIpush
                           8201 ;	AOP_STK for _move_character_sloc6_1_0
   1857 23                 8202 	inc	hl
   1858 7E                 8203 	ld	a,(hl)
   1859 F5                 8204 	push	af
   185A 33                 8205 	inc	sp
                           8206 ;	genCall
   185B CD 00 00           8207 	call	_set_sprite_tile
   185E E8 02              8208 	lda	sp,2(sp)
   1860 C1                 8209 	pop	bc
                           8210 ;	genLabel
   1861                    8211 00144$:
                           8212 ;	game.c 1064
                           8213 ;	genPointerGet
                           8214 ;	AOP_STK for _move_character_sloc1_1_0
                           8215 ;	AOP_STK for _move_character_sloc7_1_0
   1861 F8 0B              8216 	lda	hl,11(sp)
   1863 5E                 8217 	ld	e,(hl)
   1864 23                 8218 	inc	hl
   1865 56                 8219 	ld	d,(hl)
   1866 1A                 8220 	ld	a,(de)
   1867 F8 02              8221 	lda	hl,2(sp)
   1869 77                 8222 	ld	(hl),a
                           8223 ;	genIpush
                           8224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   186A C5                 8225 	push	bc
   186B 3E 00              8226 	ld	a,#0x00
   186D F5                 8227 	push	af
   186E 33                 8228 	inc	sp
                           8229 ;	genIpush
                           8230 ;	AOP_STK for _move_character_sloc7_1_0
   186F 7E                 8231 	ld	a,(hl)
   1870 F5                 8232 	push	af
   1871 33                 8233 	inc	sp
                           8234 ;	genCall
   1872 CD 00 00           8235 	call	_set_sprite_prop
   1875 E8 02              8236 	lda	sp,2(sp)
   1877 C1                 8237 	pop	bc
                           8238 ;	game.c 1065
                           8239 ;	genGoto
   1878 C3 C0 19           8240 	jp	00155$
                           8241 ;	game.c 1067
                           8242 ;	genLabel
   187B                    8243 00145$:
                           8244 ;	genPlus
                           8245 ;	AOP_STK for _move_character_sloc0_1_0
                           8246 ;	AOP_STK for _move_character_sloc5_1_0
                           8247 ;	genPlusIncr
                           8248 ;	Can't optimise plus by inc, falling back to the normal way
   187B F8 0D              8249 	lda	hl,13(sp)
   187D 5E                 8250 	ld	e,(hl)
   187E 23                 8251 	inc	hl
   187F 56                 8252 	ld	d,(hl)
   1880 21 05 00           8253 	ld	hl,#0x0005
   1883 19                 8254 	add	hl,de
   1884 7D                 8255 	ld	a,l
   1885 54                 8256 	ld	d,h
   1886 F8 04              8257 	lda	hl,4(sp)
                           8258 ;	genPointerGet
                           8259 ;	AOP_STK for _move_character_sloc5_1_0
                           8260 ;	AOP_STK for _move_character_sloc7_1_0
   1888 22                 8261 	ld	(hl+),a
   1889 72                 8262 	ld	(hl),d
   188A 5F                 8263 	ld	e,a
   188B 1A                 8264 	ld	a,(de)
   188C F8 02              8265 	lda	hl,2(sp)
   188E 77                 8266 	ld	(hl),a
                           8267 ;	genIpush
                           8268 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   188F C5                 8269 	push	bc
                           8270 ;	AOP_STK for _move_character_sloc7_1_0
   1890 7E                 8271 	ld	a,(hl)
   1891 F5                 8272 	push	af
   1892 33                 8273 	inc	sp
                           8274 ;	genIpush
   1893 78                 8275 	ld	a,b
   1894 F5                 8276 	push	af
   1895 33                 8277 	inc	sp
                           8278 ;	genCall
   1896 CD 00 00           8279 	call	_set_sprite_tile
   1899 E8 02              8280 	lda	sp,2(sp)
   189B C1                 8281 	pop	bc
                           8282 ;	game.c 1069
                           8283 ;	genCmpEq
                           8284 ;	AOP_HL for _input_timer
                           8285 ; genCmpEq: left 1, right 1, result 0
   189C 21 03 19           8286 	ld	hl,#_input_timer
   189F 7E                 8287 	ld	a,(hl)
   18A0 FE 04              8288 	cp	a,#0x04
   18A2 C2 D6 18           8289 	jp	nz,00147$
   18A5 18 03              8290 	jr	00228$
   18A7                    8291 00227$:
   18A7 C3 D6 18           8292 	jp	00147$
   18AA                    8293 00228$:
                           8294 ;	game.c 1070
                           8295 ;	genPlus
                           8296 ;	AOP_STK for _move_character_sloc0_1_0
                           8297 ;	AOP_STK for _move_character_sloc3_1_0
                           8298 ;	genPlusIncr
                           8299 ;	Can't optimise plus by inc, falling back to the normal way
   18AA F8 0D              8300 	lda	hl,13(sp)
   18AC 5E                 8301 	ld	e,(hl)
   18AD 23                 8302 	inc	hl
   18AE 56                 8303 	ld	d,(hl)
   18AF 21 06 00           8304 	ld	hl,#0x0006
   18B2 19                 8305 	add	hl,de
   18B3 7D                 8306 	ld	a,l
   18B4 54                 8307 	ld	d,h
   18B5 F8 07              8308 	lda	hl,7(sp)
                           8309 ;	genPointerGet
                           8310 ;	AOP_STK for _move_character_sloc3_1_0
                           8311 ;	AOP_STK for _move_character_sloc7_1_0
   18B7 22                 8312 	ld	(hl+),a
   18B8 72                 8313 	ld	(hl),d
   18B9 5F                 8314 	ld	e,a
   18BA 1A                 8315 	ld	a,(de)
   18BB F8 02              8316 	lda	hl,2(sp)
   18BD 77                 8317 	ld	(hl),a
                           8318 ;	genPointerGet
                           8319 ;	AOP_STK for _move_character_sloc1_1_0
                           8320 ;	AOP_STK for _move_character_sloc6_1_0
   18BE F8 0B              8321 	lda	hl,11(sp)
   18C0 5E                 8322 	ld	e,(hl)
   18C1 23                 8323 	inc	hl
   18C2 56                 8324 	ld	d,(hl)
   18C3 1A                 8325 	ld	a,(de)
   18C4 F8 03              8326 	lda	hl,3(sp)
   18C6 77                 8327 	ld	(hl),a
                           8328 ;	genIpush
                           8329 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18C7 C5                 8330 	push	bc
                           8331 ;	AOP_STK for _move_character_sloc7_1_0
   18C8 2B                 8332 	dec	hl
   18C9 7E                 8333 	ld	a,(hl)
   18CA F5                 8334 	push	af
   18CB 33                 8335 	inc	sp
                           8336 ;	genIpush
                           8337 ;	AOP_STK for _move_character_sloc6_1_0
   18CC 23                 8338 	inc	hl
   18CD 7E                 8339 	ld	a,(hl)
   18CE F5                 8340 	push	af
   18CF 33                 8341 	inc	sp
                           8342 ;	genCall
   18D0 CD 00 00           8343 	call	_set_sprite_tile
   18D3 E8 02              8344 	lda	sp,2(sp)
   18D5 C1                 8345 	pop	bc
                           8346 ;	genLabel
   18D6                    8347 00147$:
                           8348 ;	game.c 1072
                           8349 ;	genCmpEq
                           8350 ;	AOP_HL for _input_timer
                           8351 ; genCmpEq: left 1, right 1, result 0
   18D6 21 03 19           8352 	ld	hl,#_input_timer
   18D9 7E                 8353 	ld	a,(hl)
   18DA FE 02              8354 	cp	a,#0x02
   18DC C2 05 19           8355 	jp	nz,00149$
   18DF 18 03              8356 	jr	00230$
   18E1                    8357 00229$:
   18E1 C3 05 19           8358 	jp	00149$
   18E4                    8359 00230$:
                           8360 ;	game.c 1073
                           8361 ;	genPointerGet
                           8362 ;	AOP_STK for _move_character_sloc5_1_0
                           8363 ;	AOP_STK for _move_character_sloc7_1_0
   18E4 F8 04              8364 	lda	hl,4(sp)
   18E6 5E                 8365 	ld	e,(hl)
   18E7 23                 8366 	inc	hl
   18E8 56                 8367 	ld	d,(hl)
   18E9 1A                 8368 	ld	a,(de)
   18EA F8 02              8369 	lda	hl,2(sp)
   18EC 77                 8370 	ld	(hl),a
                           8371 ;	genPointerGet
                           8372 ;	AOP_STK for _move_character_sloc1_1_0
                           8373 ;	AOP_STK for _move_character_sloc6_1_0
   18ED F8 0B              8374 	lda	hl,11(sp)
   18EF 5E                 8375 	ld	e,(hl)
   18F0 23                 8376 	inc	hl
   18F1 56                 8377 	ld	d,(hl)
   18F2 1A                 8378 	ld	a,(de)
   18F3 F8 03              8379 	lda	hl,3(sp)
   18F5 77                 8380 	ld	(hl),a
                           8381 ;	genIpush
                           8382 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18F6 C5                 8383 	push	bc
                           8384 ;	AOP_STK for _move_character_sloc7_1_0
   18F7 2B                 8385 	dec	hl
   18F8 7E                 8386 	ld	a,(hl)
   18F9 F5                 8387 	push	af
   18FA 33                 8388 	inc	sp
                           8389 ;	genIpush
                           8390 ;	AOP_STK for _move_character_sloc6_1_0
   18FB 23                 8391 	inc	hl
   18FC 7E                 8392 	ld	a,(hl)
   18FD F5                 8393 	push	af
   18FE 33                 8394 	inc	sp
                           8395 ;	genCall
   18FF CD 00 00           8396 	call	_set_sprite_tile
   1902 E8 02              8397 	lda	sp,2(sp)
   1904 C1                 8398 	pop	bc
                           8399 ;	genLabel
   1905                    8400 00149$:
                           8401 ;	game.c 1076
                           8402 ;	genPointerGet
                           8403 ;	AOP_STK for _move_character_sloc1_1_0
                           8404 ;	AOP_STK for _move_character_sloc7_1_0
   1905 F8 0B              8405 	lda	hl,11(sp)
   1907 5E                 8406 	ld	e,(hl)
   1908 23                 8407 	inc	hl
   1909 56                 8408 	ld	d,(hl)
   190A 1A                 8409 	ld	a,(de)
   190B F8 02              8410 	lda	hl,2(sp)
   190D 77                 8411 	ld	(hl),a
                           8412 ;	genIpush
                           8413 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   190E C5                 8414 	push	bc
   190F 3E 20              8415 	ld	a,#0x20
   1911 F5                 8416 	push	af
   1912 33                 8417 	inc	sp
                           8418 ;	genIpush
                           8419 ;	AOP_STK for _move_character_sloc7_1_0
   1913 7E                 8420 	ld	a,(hl)
   1914 F5                 8421 	push	af
   1915 33                 8422 	inc	sp
                           8423 ;	genCall
   1916 CD 00 00           8424 	call	_set_sprite_prop
   1919 E8 02              8425 	lda	sp,2(sp)
   191B C1                 8426 	pop	bc
                           8427 ;	game.c 1077
                           8428 ;	genGoto
   191C C3 C0 19           8429 	jp	00155$
                           8430 ;	game.c 1079
                           8431 ;	genLabel
   191F                    8432 00150$:
                           8433 ;	genPlus
                           8434 ;	AOP_STK for _move_character_sloc0_1_0
                           8435 ;	AOP_STK for _move_character_sloc5_1_0
                           8436 ;	genPlusIncr
                           8437 ;	Can't optimise plus by inc, falling back to the normal way
   191F F8 0D              8438 	lda	hl,13(sp)
   1921 5E                 8439 	ld	e,(hl)
   1922 23                 8440 	inc	hl
   1923 56                 8441 	ld	d,(hl)
   1924 21 05 00           8442 	ld	hl,#0x0005
   1927 19                 8443 	add	hl,de
   1928 7D                 8444 	ld	a,l
   1929 54                 8445 	ld	d,h
   192A F8 04              8446 	lda	hl,4(sp)
                           8447 ;	genPointerGet
                           8448 ;	AOP_STK for _move_character_sloc5_1_0
                           8449 ;	AOP_STK for _move_character_sloc7_1_0
   192C 22                 8450 	ld	(hl+),a
   192D 72                 8451 	ld	(hl),d
   192E 5F                 8452 	ld	e,a
   192F 1A                 8453 	ld	a,(de)
   1930 F8 02              8454 	lda	hl,2(sp)
   1932 77                 8455 	ld	(hl),a
                           8456 ;	genIpush
                           8457 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1933 C5                 8458 	push	bc
                           8459 ;	AOP_STK for _move_character_sloc7_1_0
   1934 7E                 8460 	ld	a,(hl)
   1935 F5                 8461 	push	af
   1936 33                 8462 	inc	sp
                           8463 ;	genIpush
   1937 78                 8464 	ld	a,b
   1938 F5                 8465 	push	af
   1939 33                 8466 	inc	sp
                           8467 ;	genCall
   193A CD 00 00           8468 	call	_set_sprite_tile
   193D E8 02              8469 	lda	sp,2(sp)
   193F C1                 8470 	pop	bc
                           8471 ;	game.c 1081
                           8472 ;	genCmpEq
                           8473 ;	AOP_HL for _input_timer
                           8474 ; genCmpEq: left 1, right 1, result 0
   1940 21 03 19           8475 	ld	hl,#_input_timer
   1943 7E                 8476 	ld	a,(hl)
   1944 FE 04              8477 	cp	a,#0x04
   1946 C2 7A 19           8478 	jp	nz,00152$
   1949 18 03              8479 	jr	00232$
   194B                    8480 00231$:
   194B C3 7A 19           8481 	jp	00152$
   194E                    8482 00232$:
                           8483 ;	game.c 1082
                           8484 ;	genPlus
                           8485 ;	AOP_STK for _move_character_sloc0_1_0
                           8486 ;	AOP_STK for _move_character_sloc3_1_0
                           8487 ;	genPlusIncr
                           8488 ;	Can't optimise plus by inc, falling back to the normal way
   194E F8 0D              8489 	lda	hl,13(sp)
   1950 5E                 8490 	ld	e,(hl)
   1951 23                 8491 	inc	hl
   1952 56                 8492 	ld	d,(hl)
   1953 21 06 00           8493 	ld	hl,#0x0006
   1956 19                 8494 	add	hl,de
   1957 7D                 8495 	ld	a,l
   1958 54                 8496 	ld	d,h
   1959 F8 07              8497 	lda	hl,7(sp)
                           8498 ;	genPointerGet
                           8499 ;	AOP_STK for _move_character_sloc3_1_0
                           8500 ;	AOP_STK for _move_character_sloc7_1_0
   195B 22                 8501 	ld	(hl+),a
   195C 72                 8502 	ld	(hl),d
   195D 5F                 8503 	ld	e,a
   195E 1A                 8504 	ld	a,(de)
   195F F8 02              8505 	lda	hl,2(sp)
   1961 77                 8506 	ld	(hl),a
                           8507 ;	genPointerGet
                           8508 ;	AOP_STK for _move_character_sloc1_1_0
                           8509 ;	AOP_STK for _move_character_sloc6_1_0
   1962 F8 0B              8510 	lda	hl,11(sp)
   1964 5E                 8511 	ld	e,(hl)
   1965 23                 8512 	inc	hl
   1966 56                 8513 	ld	d,(hl)
   1967 1A                 8514 	ld	a,(de)
   1968 F8 03              8515 	lda	hl,3(sp)
   196A 77                 8516 	ld	(hl),a
                           8517 ;	genIpush
                           8518 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   196B C5                 8519 	push	bc
                           8520 ;	AOP_STK for _move_character_sloc7_1_0
   196C 2B                 8521 	dec	hl
   196D 7E                 8522 	ld	a,(hl)
   196E F5                 8523 	push	af
   196F 33                 8524 	inc	sp
                           8525 ;	genIpush
                           8526 ;	AOP_STK for _move_character_sloc6_1_0
   1970 23                 8527 	inc	hl
   1971 7E                 8528 	ld	a,(hl)
   1972 F5                 8529 	push	af
   1973 33                 8530 	inc	sp
                           8531 ;	genCall
   1974 CD 00 00           8532 	call	_set_sprite_tile
   1977 E8 02              8533 	lda	sp,2(sp)
   1979 C1                 8534 	pop	bc
                           8535 ;	genLabel
   197A                    8536 00152$:
                           8537 ;	game.c 1084
                           8538 ;	genCmpEq
                           8539 ;	AOP_HL for _input_timer
                           8540 ; genCmpEq: left 1, right 1, result 0
   197A 21 03 19           8541 	ld	hl,#_input_timer
   197D 7E                 8542 	ld	a,(hl)
   197E FE 02              8543 	cp	a,#0x02
   1980 C2 A9 19           8544 	jp	nz,00154$
   1983 18 03              8545 	jr	00234$
   1985                    8546 00233$:
   1985 C3 A9 19           8547 	jp	00154$
   1988                    8548 00234$:
                           8549 ;	game.c 1085
                           8550 ;	genPointerGet
                           8551 ;	AOP_STK for _move_character_sloc5_1_0
                           8552 ;	AOP_STK for _move_character_sloc7_1_0
   1988 F8 04              8553 	lda	hl,4(sp)
   198A 5E                 8554 	ld	e,(hl)
   198B 23                 8555 	inc	hl
   198C 56                 8556 	ld	d,(hl)
   198D 1A                 8557 	ld	a,(de)
   198E F8 02              8558 	lda	hl,2(sp)
   1990 77                 8559 	ld	(hl),a
                           8560 ;	genPointerGet
                           8561 ;	AOP_STK for _move_character_sloc1_1_0
                           8562 ;	AOP_STK for _move_character_sloc6_1_0
   1991 F8 0B              8563 	lda	hl,11(sp)
   1993 5E                 8564 	ld	e,(hl)
   1994 23                 8565 	inc	hl
   1995 56                 8566 	ld	d,(hl)
   1996 1A                 8567 	ld	a,(de)
   1997 F8 03              8568 	lda	hl,3(sp)
   1999 77                 8569 	ld	(hl),a
                           8570 ;	genIpush
                           8571 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   199A C5                 8572 	push	bc
                           8573 ;	AOP_STK for _move_character_sloc7_1_0
   199B 2B                 8574 	dec	hl
   199C 7E                 8575 	ld	a,(hl)
   199D F5                 8576 	push	af
   199E 33                 8577 	inc	sp
                           8578 ;	genIpush
                           8579 ;	AOP_STK for _move_character_sloc6_1_0
   199F 23                 8580 	inc	hl
   19A0 7E                 8581 	ld	a,(hl)
   19A1 F5                 8582 	push	af
   19A2 33                 8583 	inc	sp
                           8584 ;	genCall
   19A3 CD 00 00           8585 	call	_set_sprite_tile
   19A6 E8 02              8586 	lda	sp,2(sp)
   19A8 C1                 8587 	pop	bc
                           8588 ;	genLabel
   19A9                    8589 00154$:
                           8590 ;	game.c 1087
                           8591 ;	genPointerGet
                           8592 ;	AOP_STK for _move_character_sloc1_1_0
                           8593 ;	AOP_STK for _move_character_sloc7_1_0
   19A9 F8 0B              8594 	lda	hl,11(sp)
   19AB 5E                 8595 	ld	e,(hl)
   19AC 23                 8596 	inc	hl
   19AD 56                 8597 	ld	d,(hl)
   19AE 1A                 8598 	ld	a,(de)
   19AF F8 02              8599 	lda	hl,2(sp)
   19B1 77                 8600 	ld	(hl),a
                           8601 ;	genIpush
                           8602 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19B2 C5                 8603 	push	bc
   19B3 3E 40              8604 	ld	a,#0x40
   19B5 F5                 8605 	push	af
   19B6 33                 8606 	inc	sp
                           8607 ;	genIpush
                           8608 ;	AOP_STK for _move_character_sloc7_1_0
   19B7 7E                 8609 	ld	a,(hl)
   19B8 F5                 8610 	push	af
   19B9 33                 8611 	inc	sp
                           8612 ;	genCall
   19BA CD 00 00           8613 	call	_set_sprite_prop
   19BD E8 02              8614 	lda	sp,2(sp)
   19BF C1                 8615 	pop	bc
                           8616 ;	game.c 1089
                           8617 ;	genLabel
   19C0                    8618 00155$:
                           8619 ;	game.c 1092
                           8620 ;	genCmpEq
                           8621 ;	AOP_HL for _input_timer
                           8622 ; genCmpEq: left 1, right 1, result 0
   19C0 21 03 19           8623 	ld	hl,#_input_timer
   19C3 7E                 8624 	ld	a,(hl)
   19C4 B7                 8625 	or	a,a
   19C5 CA 45 1A           8626 	jp	z,00165$
   19C8                    8627 00235$:
                           8628 ;	game.c 1094
                           8629 ;	genIfx
                           8630 ;	AOP_STK for _move_character_sloc8_1_0
   19C8 AF                 8631 	xor	a,a
   19C9 F8 00              8632 	lda	hl,0(sp)
   19CB B6                 8633 	or	a,(hl)
   19CC C2 45 1A           8634 	jp	nz,00165$
                           8635 ;	genCmpGt
   19CF 3E 04              8636 	ld	a,#0x04
   19D1 91                 8637 	sub	a,c
   19D2 DA 45 1A           8638 	jp	c,00165$
                           8639 ;	genMinus
   19D5 0D                 8640 	dec	c
                           8641 ;	genJumpTab
   19D6 59                 8642 	ld	e,c
   19D7 16 00              8643 	ld	d,#0x00
   19D9 21 E0 19           8644 	ld	hl,#00236$
   19DC 19                 8645 	add	hl,de
   19DD 19                 8646 	add	hl,de
   19DE 19                 8647 	add	hl,de
   19DF E9                 8648 	jp	(hl)
   19E0                    8649 00236$:
   19E0 C3 0F 1A           8650 	jp	00158$
   19E3 C3 FE 19           8651 	jp	00157$
   19E6 C3 2C 1A           8652 	jp	00159$
   19E9 C3 EC 19           8653 	jp	00156$
                           8654 ;	game.c 1096
                           8655 ;	genLabel
   19EC                    8656 00156$:
                           8657 ;	genPointerGet
                           8658 ;	AOP_STK for _move_character_sloc0_1_0
   19EC F8 0D              8659 	lda	hl,13(sp)
   19EE 5E                 8660 	ld	e,(hl)
   19EF 23                 8661 	inc	hl
   19F0 56                 8662 	ld	d,(hl)
   19F1 1A                 8663 	ld	a,(de)
   19F2 4F                 8664 	ld	c,a
                           8665 ;	genMinus
   19F3 0D                 8666 	dec	c
   19F4 0D                 8667 	dec	c
                           8668 ;	genAssign (pointer)
                           8669 ;	AOP_STK for _move_character_sloc0_1_0
   19F5 2B                 8670 	dec	hl
   19F6 5E                 8671 	ld	e,(hl)
   19F7 23                 8672 	inc	hl
   19F8 56                 8673 	ld	d,(hl)
   19F9 79                 8674 	ld	a,c
   19FA 12                 8675 	ld	(de),a
                           8676 ;	game.c 1097
                           8677 ;	genGoto
   19FB C3 45 1A           8678 	jp	00165$
                           8679 ;	game.c 1099
                           8680 ;	genLabel
   19FE                    8681 00157$:
                           8682 ;	genPointerGet
                           8683 ;	AOP_STK for _move_character_sloc0_1_0
   19FE F8 0D              8684 	lda	hl,13(sp)
   1A00 5E                 8685 	ld	e,(hl)
   1A01 23                 8686 	inc	hl
   1A02 56                 8687 	ld	d,(hl)
   1A03 1A                 8688 	ld	a,(de)
                           8689 ;	genPlus
                           8690 ;	genPlusIncr
                           8691 ;	Can't optimise plus by inc, falling back to the normal way
   1A04 4F                 8692 	ld	c,a
   1A05 C6 02              8693 	add	a,#0x02
                           8694 ;	genAssign (pointer)
                           8695 ;	AOP_STK for _move_character_sloc0_1_0
   1A07 2B                 8696 	dec	hl
   1A08 5E                 8697 	ld	e,(hl)
   1A09 23                 8698 	inc	hl
   1A0A 56                 8699 	ld	d,(hl)
   1A0B 12                 8700 	ld	(de),a
                           8701 ;	game.c 1100
                           8702 ;	genGoto
   1A0C C3 45 1A           8703 	jp	00165$
                           8704 ;	game.c 1102
                           8705 ;	genLabel
   1A0F                    8706 00158$:
                           8707 ;	genPlus
                           8708 ;	AOP_STK for _move_character_sloc0_1_0
                           8709 ;	AOP_STK for _move_character_sloc8_1_0
                           8710 ;	genPlusIncr
                           8711 ;	Can't optimise plus by inc, falling back to the normal way
   1A0F F8 0D              8712 	lda	hl,13(sp)
   1A11 5E                 8713 	ld	e,(hl)
   1A12 23                 8714 	inc	hl
   1A13 56                 8715 	ld	d,(hl)
   1A14 21 01 00           8716 	ld	hl,#0x0001
   1A17 19                 8717 	add	hl,de
   1A18 7D                 8718 	ld	a,l
   1A19 54                 8719 	ld	d,h
   1A1A F8 00              8720 	lda	hl,0(sp)
                           8721 ;	genPointerGet
                           8722 ;	AOP_STK for _move_character_sloc8_1_0
   1A1C 22                 8723 	ld	(hl+),a
   1A1D 72                 8724 	ld	(hl),d
   1A1E 5F                 8725 	ld	e,a
   1A1F 1A                 8726 	ld	a,(de)
   1A20 4F                 8727 	ld	c,a
                           8728 ;	genMinus
   1A21 0D                 8729 	dec	c
   1A22 0D                 8730 	dec	c
                           8731 ;	genAssign (pointer)
                           8732 ;	AOP_STK for _move_character_sloc8_1_0
   1A23 2B                 8733 	dec	hl
   1A24 5E                 8734 	ld	e,(hl)
   1A25 23                 8735 	inc	hl
   1A26 56                 8736 	ld	d,(hl)
   1A27 79                 8737 	ld	a,c
   1A28 12                 8738 	ld	(de),a
                           8739 ;	game.c 1103
                           8740 ;	genGoto
   1A29 C3 45 1A           8741 	jp	00165$
                           8742 ;	game.c 1105
                           8743 ;	genLabel
   1A2C                    8744 00159$:
                           8745 ;	genPlus
                           8746 ;	AOP_STK for _move_character_sloc0_1_0
                           8747 ;	AOP_STK for _move_character_sloc8_1_0
                           8748 ;	genPlusIncr
                           8749 ;	Can't optimise plus by inc, falling back to the normal way
   1A2C F8 0D              8750 	lda	hl,13(sp)
   1A2E 5E                 8751 	ld	e,(hl)
   1A2F 23                 8752 	inc	hl
   1A30 56                 8753 	ld	d,(hl)
   1A31 21 01 00           8754 	ld	hl,#0x0001
   1A34 19                 8755 	add	hl,de
   1A35 7D                 8756 	ld	a,l
   1A36 54                 8757 	ld	d,h
   1A37 F8 00              8758 	lda	hl,0(sp)
                           8759 ;	genPointerGet
                           8760 ;	AOP_STK for _move_character_sloc8_1_0
   1A39 22                 8761 	ld	(hl+),a
   1A3A 72                 8762 	ld	(hl),d
   1A3B 5F                 8763 	ld	e,a
   1A3C 1A                 8764 	ld	a,(de)
                           8765 ;	genPlus
                           8766 ;	genPlusIncr
                           8767 ;	Can't optimise plus by inc, falling back to the normal way
   1A3D 4F                 8768 	ld	c,a
   1A3E C6 02              8769 	add	a,#0x02
                           8770 ;	genAssign (pointer)
                           8771 ;	AOP_STK for _move_character_sloc8_1_0
   1A40 2B                 8772 	dec	hl
   1A41 5E                 8773 	ld	e,(hl)
   1A42 23                 8774 	inc	hl
   1A43 56                 8775 	ld	d,(hl)
   1A44 12                 8776 	ld	(de),a
                           8777 ;	game.c 1107
                           8778 ;	genLabel
   1A45                    8779 00165$:
                           8780 ;	game.c 1112
                           8781 ;	genPlus
                           8782 ;	AOP_STK for _move_character_sloc0_1_0
                           8783 ;	AOP_STK for _move_character_sloc8_1_0
                           8784 ;	genPlusIncr
                           8785 ;	Can't optimise plus by inc, falling back to the normal way
   1A45 F8 0D              8786 	lda	hl,13(sp)
   1A47 5E                 8787 	ld	e,(hl)
   1A48 23                 8788 	inc	hl
   1A49 56                 8789 	ld	d,(hl)
   1A4A 21 01 00           8790 	ld	hl,#0x0001
   1A4D 19                 8791 	add	hl,de
   1A4E 7D                 8792 	ld	a,l
   1A4F 54                 8793 	ld	d,h
   1A50 F8 00              8794 	lda	hl,0(sp)
                           8795 ;	genPointerGet
                           8796 ;	AOP_STK for _move_character_sloc8_1_0
   1A52 22                 8797 	ld	(hl+),a
   1A53 72                 8798 	ld	(hl),d
   1A54 5F                 8799 	ld	e,a
   1A55 1A                 8800 	ld	a,(de)
   1A56 4F                 8801 	ld	c,a
                           8802 ;	genPointerGet
                           8803 ;	AOP_STK for _move_character_sloc0_1_0
                           8804 ;	AOP_STK for _move_character_sloc7_1_0
   1A57 F8 0D              8805 	lda	hl,13(sp)
   1A59 5E                 8806 	ld	e,(hl)
   1A5A 23                 8807 	inc	hl
   1A5B 56                 8808 	ld	d,(hl)
   1A5C 1A                 8809 	ld	a,(de)
   1A5D F8 02              8810 	lda	hl,2(sp)
   1A5F 77                 8811 	ld	(hl),a
                           8812 ;	genIpush
                           8813 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A60 79                 8814 	ld	a,c
   1A61 F5                 8815 	push	af
   1A62 33                 8816 	inc	sp
                           8817 ;	genIpush
                           8818 ;	AOP_STK for _move_character_sloc7_1_0
   1A63 7E                 8819 	ld	a,(hl)
   1A64 F5                 8820 	push	af
   1A65 33                 8821 	inc	sp
                           8822 ;	genIpush
   1A66 78                 8823 	ld	a,b
   1A67 F5                 8824 	push	af
   1A68 33                 8825 	inc	sp
                           8826 ;	genCall
   1A69 CD 00 00           8827 	call	_move_sprite
   1A6C E8 03              8828 	lda	sp,3(sp)
                           8829 ;	game.c 1113
                           8830 ;	genPlus
                           8831 ;	AOP_STK for _move_character_sloc0_1_0
                           8832 ;	genPlusIncr
                           8833 ;	Can't optimise plus by inc, falling back to the normal way
   1A6E F8 0D              8834 	lda	hl,13(sp)
   1A70 5E                 8835 	ld	e,(hl)
   1A71 23                 8836 	inc	hl
   1A72 56                 8837 	ld	d,(hl)
   1A73 21 0C 00           8838 	ld	hl,#0x000C
   1A76 19                 8839 	add	hl,de
   1A77 4D                 8840 	ld	c,l
   1A78 44                 8841 	ld	b,h
                           8842 ;	genPointerGet
                           8843 ;	AOP_STK for _move_character_sloc8_1_0
                           8844 ;	AOP_STK for _move_character_sloc7_1_0
   1A79 F8 00              8845 	lda	hl,0(sp)
   1A7B 5E                 8846 	ld	e,(hl)
   1A7C 23                 8847 	inc	hl
   1A7D 56                 8848 	ld	d,(hl)
   1A7E 1A                 8849 	ld	a,(de)
   1A7F 23                 8850 	inc	hl
   1A80 77                 8851 	ld	(hl),a
                           8852 ;	genPointerGet
                           8853 ;	AOP_STK for _move_character_sloc0_1_0
                           8854 ;	AOP_STK for _move_character_sloc8_1_0
   1A81 F8 0D              8855 	lda	hl,13(sp)
   1A83 5E                 8856 	ld	e,(hl)
   1A84 23                 8857 	inc	hl
   1A85 56                 8858 	ld	d,(hl)
   1A86 1A                 8859 	ld	a,(de)
   1A87 F8 00              8860 	lda	hl,0(sp)
   1A89 77                 8861 	ld	(hl),a
                           8862 ;	genIpush
                           8863 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1A8A C5                 8864 	push	bc
                           8865 ;	AOP_STK for _move_character_sloc7_1_0
   1A8B 23                 8866 	inc	hl
   1A8C 23                 8867 	inc	hl
   1A8D 7E                 8868 	ld	a,(hl)
   1A8E F5                 8869 	push	af
   1A8F 33                 8870 	inc	sp
                           8871 ;	genIpush
                           8872 ;	AOP_STK for _move_character_sloc8_1_0
   1A90 2B                 8873 	dec	hl
   1A91 2B                 8874 	dec	hl
   1A92 7E                 8875 	ld	a,(hl)
   1A93 F5                 8876 	push	af
   1A94 33                 8877 	inc	sp
                           8878 ;	genCall
   1A95 CD 6B 0D           8879 	call	_get_player_map_position
                           8880 ;	AOP_STK for _move_character_sloc8_1_0
   1A98 F8 05              8881 	lda	hl,5(sp)
   1A9A 72                 8882 	ld	(hl),d
   1A9B 2B                 8883 	dec	hl
   1A9C 73                 8884 	ld	(hl),e
   1A9D E8 02              8885 	lda	sp,2(sp)
   1A9F C1                 8886 	pop	bc
                           8887 ;	genAssign (pointer)
                           8888 ;	AOP_STK for _move_character_sloc8_1_0
   1AA0 59                 8889 	ld	e,c
   1AA1 50                 8890 	ld	d,b
   1AA2 F8 00              8891 	lda	hl,0(sp)
   1AA4 7E                 8892 	ld	a,(hl)
   1AA5 12                 8893 	ld	(de),a
   1AA6 13                 8894 	inc	de
   1AA7 23                 8895 	inc	hl
   1AA8 7E                 8896 	ld	a,(hl)
   1AA9 12                 8897 	ld	(de),a
                           8898 ;	genLabel
   1AAA                    8899 00166$:
                           8900 ;	genEndFunction
   1AAA E8 0F              8901 	lda	sp,15(sp)
   1AAC C9                 8902 	ret
   1AAD                    8903 ___move_character_end:
                           8904 ;	game.c 1116
                           8905 ;	genLabel
                           8906 ;	genFunction
                           8907 ;	---------------------------------
                           8908 ; Function set_character_sprite
                           8909 ; ---------------------------------
   1AAD                    8910 ___set_character_sprite_start:
   1AAD                    8911 _set_character_sprite:
   1AAD E8 F9              8912 	lda	sp,-7(sp)
                           8913 ;	game.c 1117
                           8914 ;	genAssign
                           8915 ;	AOP_STK for 
   1AAF F8 09              8916 	lda	hl,9(sp)
   1AB1 4E                 8917 	ld	c,(hl)
   1AB2 23                 8918 	inc	hl
   1AB3 46                 8919 	ld	b,(hl)
                           8920 ;	genPlus
                           8921 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8922 ;	genPlusIncr
                           8923 ;	Can't optimise plus by inc, falling back to the normal way
   1AB4 21 0B 00           8924 	ld	hl,#0x000B
   1AB7 09                 8925 	add	hl,bc
   1AB8 7D                 8926 	ld	a,l
   1AB9 54                 8927 	ld	d,h
   1ABA F8 05              8928 	lda	hl,5(sp)
                           8929 ;	genPointerGet
                           8930 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8931 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1ABC 22                 8932 	ld	(hl+),a
   1ABD 72                 8933 	ld	(hl),d
   1ABE 5F                 8934 	ld	e,a
   1ABF 1A                 8935 	ld	a,(de)
   1AC0 2B                 8936 	dec	hl
   1AC1 2B                 8937 	dec	hl
   1AC2 77                 8938 	ld	(hl),a
                           8939 ;	genCmpGt
                           8940 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           8941 ;	AOP_HL for _characters_available
   1AC3 21 02 19           8942 	ld	hl,#_characters_available
   1AC6 7E                 8943 	ld	a,(hl)
   1AC7 F8 04              8944 	lda	hl,4(sp)
   1AC9 96                 8945 	sub	a,(hl)
   1ACA DA 46 1B           8946 	jp	c,00103$
                           8947 ;	game.c 1118
                           8948 ;	genPlus
                           8949 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8950 ;	genPlusIncr
                           8951 ;	Can't optimise plus by inc, falling back to the normal way
   1ACD 21 02 00           8952 	ld	hl,#0x0002
   1AD0 09                 8953 	add	hl,bc
   1AD1 7D                 8954 	ld	a,l
   1AD2 54                 8955 	ld	d,h
   1AD3 F8 02              8956 	lda	hl,2(sp)
                           8957 ;	genPointerGet
                           8958 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8959 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1AD5 22                 8960 	ld	(hl+),a
   1AD6 72                 8961 	ld	(hl),d
   1AD7 5F                 8962 	ld	e,a
   1AD8 1A                 8963 	ld	a,(de)
   1AD9 2B                 8964 	dec	hl
   1ADA 2B                 8965 	dec	hl
   1ADB 77                 8966 	ld	(hl),a
                           8967 ;	genIpush
                           8968 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1ADC C5                 8969 	push	bc
                           8970 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1ADD 7E                 8971 	ld	a,(hl)
   1ADE F5                 8972 	push	af
   1ADF 33                 8973 	inc	sp
                           8974 ;	genIpush
                           8975 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1AE0 F8 07              8976 	lda	hl,7(sp)
   1AE2 7E                 8977 	ld	a,(hl)
   1AE3 F5                 8978 	push	af
   1AE4 33                 8979 	inc	sp
                           8980 ;	genCall
   1AE5 CD 00 00           8981 	call	_set_sprite_tile
   1AE8 E8 02              8982 	lda	sp,2(sp)
   1AEA C1                 8983 	pop	bc
                           8984 ;	game.c 1119
                           8985 ;	genPlus
                           8986 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8987 ;	genPlusIncr
                           8988 ;	Can't optimise plus by inc, falling back to the normal way
   1AEB 21 01 00           8989 	ld	hl,#0x0001
   1AEE 09                 8990 	add	hl,bc
   1AEF 7D                 8991 	ld	a,l
   1AF0 54                 8992 	ld	d,h
   1AF1 F8 02              8993 	lda	hl,2(sp)
                           8994 ;	genPointerGet
                           8995 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8996 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1AF3 22                 8997 	ld	(hl+),a
   1AF4 72                 8998 	ld	(hl),d
   1AF5 5F                 8999 	ld	e,a
   1AF6 1A                 9000 	ld	a,(de)
   1AF7 2B                 9001 	dec	hl
   1AF8 2B                 9002 	dec	hl
   1AF9 77                 9003 	ld	(hl),a
                           9004 ;	genPointerGet
                           9005 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1AFA 0A                 9006 	ld	a,(bc)
   1AFB F8 04              9007 	lda	hl,4(sp)
                           9008 ;	genPointerGet
                           9009 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9010 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1AFD 22                 9011 	ld	(hl+),a
   1AFE 5E                 9012 	ld	e,(hl)
   1AFF 23                 9013 	inc	hl
   1B00 56                 9014 	ld	d,(hl)
   1B01 1A                 9015 	ld	a,(de)
   1B02 F8 00              9016 	lda	hl,0(sp)
   1B04 77                 9017 	ld	(hl),a
                           9018 ;	genIpush
                           9019 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1B05 C5                 9020 	push	bc
                           9021 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B06 23                 9022 	inc	hl
   1B07 7E                 9023 	ld	a,(hl)
   1B08 F5                 9024 	push	af
   1B09 33                 9025 	inc	sp
                           9026 ;	genIpush
                           9027 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B0A F8 07              9028 	lda	hl,7(sp)
   1B0C 7E                 9029 	ld	a,(hl)
   1B0D F5                 9030 	push	af
   1B0E 33                 9031 	inc	sp
                           9032 ;	genIpush
                           9033 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B0F F8 04              9034 	lda	hl,4(sp)
   1B11 7E                 9035 	ld	a,(hl)
   1B12 F5                 9036 	push	af
   1B13 33                 9037 	inc	sp
                           9038 ;	genCall
   1B14 CD 00 00           9039 	call	_move_sprite
   1B17 E8 03              9040 	lda	sp,3(sp)
   1B19 C1                 9041 	pop	bc
                           9042 ;	game.c 1120
                           9043 ;	genPlus
                           9044 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9045 ;	genPlusIncr
                           9046 ;	Can't optimise plus by inc, falling back to the normal way
   1B1A 21 0C 00           9047 	ld	hl,#0x000C
   1B1D 09                 9048 	add	hl,bc
   1B1E 7D                 9049 	ld	a,l
   1B1F 54                 9050 	ld	d,h
   1B20 F8 05              9051 	lda	hl,5(sp)
   1B22 22                 9052 	ld	(hl+),a
   1B23 72                 9053 	ld	(hl),d
                           9054 ;	genPointerGet
                           9055 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9056 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B24 F8 02              9057 	lda	hl,2(sp)
   1B26 5E                 9058 	ld	e,(hl)
   1B27 23                 9059 	inc	hl
   1B28 56                 9060 	ld	d,(hl)
   1B29 1A                 9061 	ld	a,(de)
   1B2A F8 00              9062 	lda	hl,0(sp)
   1B2C 77                 9063 	ld	(hl),a
                           9064 ;	genPointerGet
   1B2D 0A                 9065 	ld	a,(bc)
   1B2E 4F                 9066 	ld	c,a
                           9067 ;	genIpush
                           9068 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           9069 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B2F 7E                 9070 	ld	a,(hl)
   1B30 F5                 9071 	push	af
   1B31 33                 9072 	inc	sp
                           9073 ;	genIpush
   1B32 79                 9074 	ld	a,c
   1B33 F5                 9075 	push	af
   1B34 33                 9076 	inc	sp
                           9077 ;	genCall
   1B35 CD 6B 0D           9078 	call	_get_player_map_position
   1B38 42                 9079 	ld	b,d
   1B39 4B                 9080 	ld	c,e
   1B3A E8 02              9081 	lda	sp,2(sp)
                           9082 ;	genAssign (pointer)
                           9083 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   1B3C F8 05              9084 	lda	hl,5(sp)
   1B3E 5E                 9085 	ld	e,(hl)
   1B3F 23                 9086 	inc	hl
   1B40 56                 9087 	ld	d,(hl)
   1B41 79                 9088 	ld	a,c
   1B42 12                 9089 	ld	(de),a
   1B43 13                 9090 	inc	de
   1B44 78                 9091 	ld	a,b
   1B45 12                 9092 	ld	(de),a
                           9093 ;	genLabel
   1B46                    9094 00103$:
                           9095 ;	genEndFunction
   1B46 E8 07              9096 	lda	sp,7(sp)
   1B48 C9                 9097 	ret
   1B49                    9098 ___set_character_sprite_end:
                           9099 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_next_map_position_end      0C22 R
  0 ____get_next_map_position_start    0B6E R
  0 ___can_move_end                    10A7 R
  0 ___can_move_start                  0FBE R
  0 ___can_move_to_map_pos_end         0FBE R
  0 ___can_move_to_map_pos_start       0F0B R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0D6B R
  0 ___dog1_power_apply_start          0C22 R
  0 ___dog1_power_end                  0B6E R
  0 ___dog1_power_start                08A1 R
  0 ___get_player_map_position_end     0DC5 R
  0 ___get_player_map_position_start   0D6B R
  0 ___got_door_end                    07CC R
  0 ___got_door_start                  05E2 R
  0 ___got_key_end                     05E2 R
  0 ___got_key_start                   0535 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0535 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      08A1 R
  0 ___is_ded_start                    07CC R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              1AAD R
  0 ___move_character_start            124D R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0F0B R
  0 ___player_input_start              0DC5 R
  0 ___rotate_player_end               124D R
  0 ___rotate_player_start             10A7 R
  0 ___set_character_sprite_end        1B49 R
  0 ___set_character_sprite_start      1AAD R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_next_map_position            0B6E GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          0FBE GR
  0 _can_move_to_map_pos               0F0B GR
  1 _cat                               1A97 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7B GR
  0 _dog1_power                        08A1 GR
  0 _dog1_power_apply                  0C22 GR
  1 _dog2                              1A89 GR
  0 _get_player_map_position           0D6B GR
  0 _got_door                          05E2 GR
  0 _got_key                           0535 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA5 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07CC GR
  1 _item1                             1ABB GR
  1 _item2                             1AC1 GR
  1 _item3                             1AC7 GR
    _joypad                            **** GX
  1 _key                               1AB5 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    124D GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AB3 GR
  0 _player_input                      0DC5 GR
    _printf                            **** GX
  0 _rotate_player                     10A7 GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              1AAD GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1B49   flags 0
   1 _DATA                              size 1ACD   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 101B   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
