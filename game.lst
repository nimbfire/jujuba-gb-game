                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Thu Feb 27 13:15:02 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc323350
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _instanciate_chars
                             14 	.globl _copy_map
                             15 	.globl _helper_copy_map
                             16 	.globl _change_char
                             17 	.globl _map_water
                             18 	.globl _init
                             19 	.globl _main
                             20 	.globl _timers
                             21 	.globl _performantDelay
                             22 	.globl _item3
                             23 	.globl _item2
                             24 	.globl _item1
                             25 	.globl _key
                             26 	.globl _player
                             27 	.globl _horse
                             28 	.globl _cat
                             29 	.globl _dog2
                             30 	.globl _dog1
                             31 	.globl _bunny
                             32 	.globl _map
                             33 	.globl _current_map
                             34 	.globl _input_timer
                             35 	.globl _characters_available
                             36 	.globl _timer
                             37 	.globl _running
                             38 	.globl _spritePalette
                             39 	.globl _sprites_park
                             40 	.globl _MapTest
                             41 	.globl _Map10
                             42 	.globl _Map9
                             43 	.globl _Map8
                             44 	.globl _Map7
                             45 	.globl _Map6
                             46 	.globl _Map5
                             47 	.globl _Map4
                             48 	.globl _Map3
                             49 	.globl _Map2
                             50 	.globl _Map1
                             51 	.globl _Characters
                             52 	.globl _map_loop
                             53 	.globl _map_init
                             54 	.globl _got_key
                             55 	.globl _got_door
                             56 	.globl _is_ded
                             57 	.globl __get_next_map_position
                             58 	.globl _dog1_power_apply
                             59 	.globl _get_player_map_position
                             60 	.globl _player_input
                             61 	.globl _can_move
                             62 	.globl _move_character
                             63 	.globl _set_character_sprite
                             64 ;--------------------------------------------------------
                             65 ; special function registers
                             66 ;--------------------------------------------------------
                             67 ;--------------------------------------------------------
                             68 ; special function bits 
                             69 ;--------------------------------------------------------
                             70 ;--------------------------------------------------------
                             71 ; internal ram data
                             72 ;--------------------------------------------------------
                             73 	.area _DATA
   0000                      74 _Characters::
   0000                      75 	.ds 496
   01F0                      76 _Map1::
   01F0                      77 	.ds 360
   0358                      78 _Map2::
   0358                      79 	.ds 360
   04C0                      80 _Map3::
   04C0                      81 	.ds 360
   0628                      82 _Map4::
   0628                      83 	.ds 360
   0790                      84 _Map5::
   0790                      85 	.ds 360
   08F8                      86 _Map6::
   08F8                      87 	.ds 360
   0A60                      88 _Map7::
   0A60                      89 	.ds 360
   0BC8                      90 _Map8::
   0BC8                      91 	.ds 360
   0D30                      92 _Map9::
   0D30                      93 	.ds 360
   0E98                      94 _Map10::
   0E98                      95 	.ds 360
   1000                      96 _MapTest::
   1000                      97 	.ds 360
   1168                      98 _sprites_park::
   1168                      99 	.ds 1936
   18F8                     100 _spritePalette::
   18F8                     101 	.ds 8
   1900                     102 _running::
   1900                     103 	.ds 1
   1901                     104 _timer::
   1901                     105 	.ds 1
   1902                     106 _characters_available::
   1902                     107 	.ds 1
   1903                     108 _input_timer::
   1903                     109 	.ds 1
   1904                     110 _current_map::
   1904                     111 	.ds 1
   1905                     112 _map::
   1905                     113 	.ds 360
   1A6D                     114 _bunny::
   1A6D                     115 	.ds 13
   1A7A                     116 _dog1::
   1A7A                     117 	.ds 13
   1A87                     118 _dog2::
   1A87                     119 	.ds 13
   1A94                     120 _cat::
   1A94                     121 	.ds 13
   1AA1                     122 _horse::
   1AA1                     123 	.ds 13
   1AAE                     124 _player::
   1AAE                     125 	.ds 2
   1AB0                     126 _key::
   1AB0                     127 	.ds 6
   1AB6                     128 _item1::
   1AB6                     129 	.ds 6
   1ABC                     130 _item2::
   1ABC                     131 	.ds 6
   1AC2                     132 _item3::
   1AC2                     133 	.ds 6
                            134 ;--------------------------------------------------------
                            135 ; overlayable items in internal ram 
                            136 ;--------------------------------------------------------
                            137 	.area _OVERLAY
                            138 ;--------------------------------------------------------
                            139 ; indirectly addressable internal ram data
                            140 ;--------------------------------------------------------
                            141 	.area _ISEG
                            142 ;--------------------------------------------------------
                            143 ; bit data
                            144 ;--------------------------------------------------------
                            145 	.area _BSEG
                            146 ;--------------------------------------------------------
                            147 ; external ram data
                            148 ;--------------------------------------------------------
                            149 	.area _XSEG
                            150 ;--------------------------------------------------------
                            151 ; global & static initialisations
                            152 ;--------------------------------------------------------
                            153 	.area _GSINIT
                            154 	.area _GSFINAL
                            155 	.area _GSINIT
                            156 ;	game.c 26
                            157 ;	game.c 1064
                            158 ;	genArrayInit
                            159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            160 	ld	hl,#_Characters
   0003 CD 00 00            161 	call	__initrleblock
   0006 2C                  162 	.db	44
   0007 09 00 00 09 00 09   163 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   164 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   165 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   166 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   167 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         168 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               169 	.db	-5,0x00
   0035 7F                  170 	.db	127
   0036 13 00 1E 0A 9E 00   171 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   172 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   173 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   174 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   175 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   176 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   177 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   178 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   179 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   180 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   181 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   182 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   183 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   184 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   185 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   186 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  187 	.db	127
   00B6 00 00 04 70 04 40   188 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   189 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   190 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   191 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   192 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   193 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   194 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   195 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   196 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   197 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   198 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   199 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   200 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   201 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   202 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   203 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  204 	.db	62
   0136 00 00 39 14 FF 00   205 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   206 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   207 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   208 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   209 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   210 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   211 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   212 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               213 	.db	-127,0x00
   0176 04                  214 	.db	4
   0177 00 00 00 00         215 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  216 	.db	0
                            217 ;	game.c 25
                            218 ;	game.c 1064
                            219 ;	genArrayInit
                            220 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            221 	ld	hl,#_Map1
   017F CD 00 00            222 	call	__initrleblock
   0182 04                  223 	.db	4
   0183 01 01 01 01         224 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               225 	.db	-16,0x16
   0189 04                  226 	.db	4
   018A 01 0A 02 01         227 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               228 	.db	-15,0x09
   0190 0C                  229 	.db	12
   0191 16 01 01 02 15 15   230 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         231 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               232 	.db	-6,0x15
   019F 09                  233 	.db	9
   01A0 02 09 16 02 01 02   234 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  235 	.db	0x17
   01A9 FA 15               236 	.db	-6,0x15
   01AB 20                  237 	.db	32
   01AC 17 15 15 15 17 15   238 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   239 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   240 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   241 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               242 	.db	-5,0x02
   01CE 06                  243 	.db	6
   01CF 01 15 01 01 01 17   244 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               245 	.db	-5,0x0B
   01D7 3E                  246 	.db	62
   01D8 01 01 01 15 02 02   247 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   248 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   249 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   250 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   251 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   252 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   253 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   254 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               255 	.db	-6,0x15
   0218 0C                  256 	.db	12
   0219 02 02 15 02 02 02   257 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         258 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               259 	.db	-8,0x15
   0227 3C                  260 	.db	60
   0228 17 17 17 15 15 15   261 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   262 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   263 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   264 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   265 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   266 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   267 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         268 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               269 	.db	-7,0x15
   0266 07                  270 	.db	7
   0267 17 17 15 15 15 01   271 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               272 	.db	-10,0x15
   0270 28                  273 	.db	40
   0271 17 15 15 15 15 17   274 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   275 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   276 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   277 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   278 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               279 	.db	-5,0x0B
   029B 0F                  280 	.db	15
   029C 04 2E 00 02 01 02   281 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   282 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               283 	.db	-5,0x0B
   02AD 03                  284 	.db	3
   02AE 04 00 00            285 	.db	0x04, 0x00, 0x00
   02B1 00                  286 	.db	0
                            287 ;	game.c 25
                            288 ;	game.c 1064
                            289 ;	genArrayInit
                            290 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            291 	ld	hl,#_Map2
   02B5 CD 00 00            292 	call	__initrleblock
   02B8 FB 00               293 	.db	-5,0x00
   02BA 01                  294 	.db	1
   02BB 2D                  295 	.db	0x2D
   02BC F9 00               296 	.db	-7,0x00
   02BE 04                  297 	.db	4
   02BF 2D 00 15 15         298 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               299 	.db	-6,0x00
   02C5 7F                  300 	.db	127
   02C6 0B 0B 00 0B 0B 0B   301 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   302 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   303 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   304 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   305 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   306 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   307 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   308 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   309 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   310 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   311 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   312 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   313 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   314 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   315 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   316 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  317 	.db	53
   0346 00 00 2D 00 00 00   318 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   319 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   320 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   321 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   322 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   323 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      324 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               325 	.db	-5,0x0B
   037D 03                  326 	.db	3
   037E 15 00 15            327 	.db	0x15, 0x00, 0x15
   0381 FB 0B               328 	.db	-5,0x0B
   0383 37                  329 	.db	55
   0384 15 15 0B 15 15 00   330 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   331 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   332 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   333 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   334 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   335 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   336 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               337 	.db	-5,0x0B
   03BD 09                  338 	.db	9
   03BE 15 15 0B 15 15 00   339 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  340 	.db	0x15
   03C7 F6 0B               341 	.db	-10,0x0B
   03C9 07                  342 	.db	7
   03CA 15 15 15 0B 15 15   343 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               344 	.db	-16,0x15
   03D3 09                  345 	.db	9
   03D4 00 15 15 00 00 00   346 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  347 	.db	0x15
   03DD F9 00               348 	.db	-7,0x00
   03DF 09                  349 	.db	9
   03E0 15 15 15 00 00 15   350 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  351 	.db	0x15
   03E9 FB 00               352 	.db	-5,0x00
   03EB FB 15               353 	.db	-5,0x15
   03ED FB 00               354 	.db	-5,0x00
   03EF 02                  355 	.db	2
   03F0 15 15               356 	.db	0x15, 0x15
   03F2 00                  357 	.db	0
                            358 ;	game.c 25
                            359 ;	game.c 1064
                            360 ;	genArrayInit
                            361 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            362 	ld	hl,#_Map3
   03F6 CD 00 00            363 	call	__initrleblock
   03F9 F2 01               364 	.db	-14,0x01
   03FB 03                  365 	.db	3
   03FC 2D 0B 0B            366 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               367 	.db	-5,0x01
   0401 02                  368 	.db	2
   0402 17 17               369 	.db	0x17, 0x17
   0404 FA 15               370 	.db	-6,0x15
   0406 0E                  371 	.db	14
   0407 17 17 15 15 0B 15   372 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   373 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               374 	.db	-5,0x01
   0417 08                  375 	.db	8
   0418 29 01 01 01 2D 01   376 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               377 	.db	-5,0x01
   0422 7F                  378 	.db	127
   0423 15 15 2D 15 15 15   379 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   380 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   381 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   382 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   383 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   384 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   385 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   386 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   387 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   388 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   389 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   390 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   391 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   392 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   393 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   394 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  395 	.db	61
   04A3 01 15 17 15 15 01   396 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   397 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   398 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   399 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   400 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   401 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   402 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      403 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               404 	.db	-5,0x01
   04E2 0B                  405 	.db	11
   04E3 15 15 01 15 2D 01   406 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            407 	.db	0x15, 0x15, 0x0B
   04EE FB 15               408 	.db	-5,0x15
   04F0 59                  409 	.db	89
   04F1 17 15 15 17 15 15   410 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   411 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   412 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   413 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   414 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   415 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   416 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   417 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   418 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   419 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   420 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  421 	.db	0x17
   054A 00                  422 	.db	0
                            423 ;	game.c 25
                            424 ;	game.c 1064
                            425 ;	genArrayInit
                            426 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            427 	ld	hl,#_Map4
   054E CD 00 00            428 	call	__initrleblock
   0551 06                  429 	.db	6
   0552 00 00 0A 0A 15 15   430 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               431 	.db	-5,0x0B
   055A 01                  432 	.db	1
   055B 15                  433 	.db	0x15
   055C FA 0B               434 	.db	-6,0x0B
   055E 25                  435 	.db	37
   055F 15 15 00 0A 2D 06   436 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   437 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   438 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   439 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      440 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               441 	.db	-5,0x0B
   0586 08                  442 	.db	8
   0587 0A 07 0B 0B 15 0B   443 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               444 	.db	-5,0x0B
   0591 01                  445 	.db	1
   0592 15                  446 	.db	0x15
   0593 F6 0B               447 	.db	-10,0x0B
   0595 42                  448 	.db	66
   0596 00 2D 0B 01 00 0B   449 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   450 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   451 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   452 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   453 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   454 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   455 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   456 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               457 	.db	0x15, 0x00
   05D8 F9 0B               458 	.db	-7,0x0B
   05DA 43                  459 	.db	67
   05DB 15 0B 0B 00 0B 15   460 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   461 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   462 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   463 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   464 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   465 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   466 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   467 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            468 	.db	0x15, 0x0B, 0x15
   061E F9 0B               469 	.db	-7,0x0B
   0620 16                  470 	.db	22
   0621 15 15 0B 0B 0B 0B   471 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   472 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   473 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               474 	.db	-5,0x0B
   0639 66                  475 	.db	102
   063A 15 0A 07 15 00 02   476 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   477 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   478 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   479 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   480 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   481 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   482 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   483 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   484 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   485 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   486 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   487 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   488 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  489 	.db	0
                            490 ;	game.c 25
                            491 ;	game.c 1064
                            492 ;	genArrayInit
                            493 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            494 	ld	hl,#_Map5
   06A4 CD 00 00            495 	call	__initrleblock
   06A7 F2 01               496 	.db	-14,0x01
   06A9 03                  497 	.db	3
   06AA 2D 0B 0B            498 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               499 	.db	-5,0x01
   06AF 02                  500 	.db	2
   06B0 17 17               501 	.db	0x17, 0x17
   06B2 FA 15               502 	.db	-6,0x15
   06B4 07                  503 	.db	7
   06B5 17 17 15 15 0B 15   504 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               505 	.db	-5,0x01
   06BE 02                  506 	.db	2
   06BF 17 15               507 	.db	0x17, 0x15
   06C1 FB 01               508 	.db	-5,0x01
   06C3 7F                  509 	.db	127
   06C4 29 01 01 01 2D 01   510 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   511 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   512 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   513 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   514 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   515 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   516 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   517 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   518 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   519 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   520 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   521 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   522 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   523 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   524 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   525 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  526 	.db	74
   0744 01 2D 01 01 01 15   527 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   528 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   529 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   530 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   531 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   532 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   533 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   534 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   535 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               536 	.db	0x01, 0x29
   078E FB 01               537 	.db	-5,0x01
   0790 0B                  538 	.db	11
   0791 15 15 01 15 2D 01   539 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            540 	.db	0x15, 0x15, 0x0B
   079C FB 15               541 	.db	-5,0x15
   079E 59                  542 	.db	89
   079F 17 15 15 17 15 15   543 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   544 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   545 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   546 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   547 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   548 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   549 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   550 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   551 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   552 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   553 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  554 	.db	0x17
   07F8 00                  555 	.db	0
                            556 ;	game.c 25
                            557 ;	game.c 1064
                            558 ;	genArrayInit
                            559 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            560 	ld	hl,#_Map6
   07FC CD 00 00            561 	call	__initrleblock
   07FF BF 00               562 	.db	-65,0x00
   0801 02                  563 	.db	2
   0802 0C 0C               564 	.db	0x0C, 0x0C
   0804 EE 00               565 	.db	-18,0x00
   0806 02                  566 	.db	2
   0807 0C 0C               567 	.db	0x0C, 0x0C
   0809 81 00               568 	.db	-127,0x00
   080B 81 00               569 	.db	-127,0x00
   080D ED 00               570 	.db	-19,0x00
   080F 00                  571 	.db	0
                            572 ;	game.c 25
                            573 ;	game.c 1064
                            574 ;	genArrayInit
                            575 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            576 	ld	hl,#_Map7
   0813 CD 00 00            577 	call	__initrleblock
   0816 BF 00               578 	.db	-65,0x00
   0818 02                  579 	.db	2
   0819 0C 0C               580 	.db	0x0C, 0x0C
   081B EE 00               581 	.db	-18,0x00
   081D 02                  582 	.db	2
   081E 0C 0C               583 	.db	0x0C, 0x0C
   0820 81 00               584 	.db	-127,0x00
   0822 81 00               585 	.db	-127,0x00
   0824 ED 00               586 	.db	-19,0x00
   0826 00                  587 	.db	0
                            588 ;	game.c 25
                            589 ;	game.c 1064
                            590 ;	genArrayInit
                            591 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            592 	ld	hl,#_Map8
   082A CD 00 00            593 	call	__initrleblock
   082D BF 00               594 	.db	-65,0x00
   082F 02                  595 	.db	2
   0830 0C 0C               596 	.db	0x0C, 0x0C
   0832 EE 00               597 	.db	-18,0x00
   0834 02                  598 	.db	2
   0835 0C 0C               599 	.db	0x0C, 0x0C
   0837 81 00               600 	.db	-127,0x00
   0839 81 00               601 	.db	-127,0x00
   083B ED 00               602 	.db	-19,0x00
   083D 00                  603 	.db	0
                            604 ;	game.c 25
                            605 ;	game.c 1064
                            606 ;	genArrayInit
                            607 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            608 	ld	hl,#_Map9
   0841 CD 00 00            609 	call	__initrleblock
   0844 BF 00               610 	.db	-65,0x00
   0846 02                  611 	.db	2
   0847 0C 0C               612 	.db	0x0C, 0x0C
   0849 EE 00               613 	.db	-18,0x00
   084B 02                  614 	.db	2
   084C 0C 0C               615 	.db	0x0C, 0x0C
   084E 81 00               616 	.db	-127,0x00
   0850 81 00               617 	.db	-127,0x00
   0852 ED 00               618 	.db	-19,0x00
   0854 00                  619 	.db	0
                            620 ;	game.c 25
                            621 ;	game.c 1064
                            622 ;	genArrayInit
                            623 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            624 	ld	hl,#_Map10
   0858 CD 00 00            625 	call	__initrleblock
   085B BF 00               626 	.db	-65,0x00
   085D 02                  627 	.db	2
   085E 0C 0C               628 	.db	0x0C, 0x0C
   0860 EE 00               629 	.db	-18,0x00
   0862 02                  630 	.db	2
   0863 0C 0C               631 	.db	0x0C, 0x0C
   0865 81 00               632 	.db	-127,0x00
   0867 81 00               633 	.db	-127,0x00
   0869 ED 00               634 	.db	-19,0x00
   086B 00                  635 	.db	0
                            636 ;	game.c 25
                            637 ;	game.c 1064
                            638 ;	genArrayInit
                            639 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            640 	ld	hl,#_MapTest
   086F CD 00 00            641 	call	__initrleblock
   0872 E8 00               642 	.db	-24,0x00
   0874 06                  643 	.db	6
   0875 47 4A 59 46 00 5F   644 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087B D9 00               645 	.db	-39,0x00
   087D 0A                  646 	.db	10
   087E 4B 46 58 4A 00 5F   647 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62
        00 62
   0886 00 65               648 	.db	0x00, 0x65
   0888 F6 00               649 	.db	-10,0x00
   088A 0A                  650 	.db	10
   088B 4B 46 58 4A 00 60   651 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x60, 0x00, 0x62
        00 62
   0893 00 66               652 	.db	0x00, 0x66
   0895 F6 00               653 	.db	-10,0x00
   0897 0A                  654 	.db	10
   0898 4B 46 58 4A 00 5C   655 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62
        00 62
   08A0 00 67               656 	.db	0x00, 0x67
   08A2 ED 00               657 	.db	-19,0x00
   08A4 01                  658 	.db	1
   08A5 68                  659 	.db	0x68
   08A6 EB 00               660 	.db	-21,0x00
   08A8 0A                  661 	.db	10
   08A9 46 62 55 54 49 4A   662 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08B1 49 54               663 	.db	0x49, 0x54
   08B3 F4 00               664 	.db	-12,0x00
   08B5 0A                  665 	.db	10
   08B6 55 4A 57 58 54 53   666 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08BE 4A 52               667 	.db	0x4A, 0x52
   08C0 FB 00               668 	.db	-5,0x00
   08C2 01                  669 	.db	1
   08C3 2E                  670 	.db	0x2E
   08C4 EF 00               671 	.db	-17,0x00
   08C6 0C                  672 	.db	12
   08C7 2D 00 00 00 00 47   673 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08CF 57 54 48 46         674 	.db	0x57, 0x54, 0x48, 0x46
   08D3 F8 00               675 	.db	-8,0x00
   08D5 18                  676 	.db	24
   08D6 2D 00 0B 0B 00 00   677 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08DE 4A 57 58 54 53 46   678 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   08E6 52 00 00 00 2D 00   679 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   08EE F0 00               680 	.db	-16,0x00
   08F0 0B                  681 	.db	11
   08F1 2D 00 0D 0D 00 32   682 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   08F9 5A 51 46            683 	.db	0x5A, 0x51, 0x46
   08FC F7 00               684 	.db	-9,0x00
   08FE 0E                  685 	.db	14
   08FF 2D 00 0E 0E 00 33   686 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   0907 52 55 5A 57 57 46   687 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   090D FA 00               688 	.db	-6,0x00
   090F 0D                  689 	.db	13
   0910 2D 00 29 29 00 00   690 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   0918 51 54 48 54 58      691 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   091D E0 00               692 	.db	-32,0x00
   091F 00                  693 	.db	0
                            694 ;	game.c 26
                            695 ;	game.c 1064
                            696 ;	genArrayInit
                            697 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0920 21 68 11            698 	ld	hl,#_sprites_park
   0923 CD 00 00            699 	call	__initrleblock
   0926 EC 00               700 	.db	-20,0x00
   0928 09                  701 	.db	9
   0929 10 00 00 00 02 00   702 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   0931 20                  703 	.db	0x20
   0932 F7 00               704 	.db	-9,0x00
   0934 01                  705 	.db	1
   0935 10                  706 	.db	0x10
   0936 F7 00               707 	.db	-9,0x00
   0938 21                  708 	.db	33
   0939 94 08 00 00 42 00   709 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   0941 00 80 25 00 50 00   710 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   0949 00 00 90 00 00 00   711 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   0951 80 00 00 10 80 00   712 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   0959 5A                  713 	.db	0x5A
   095A FB 00               714 	.db	-5,0x00
   095C 05                  715 	.db	5
   095D 02 20 00 00 08      716 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0962 F9 00               717 	.db	-7,0x00
   0964 0B                  718 	.db	11
   0965 01 00 00 08 01 00   719 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   096D 00 00 09            720 	.db	0x00, 0x00, 0x09
   0970 F9 00               721 	.db	-7,0x00
   0972 7F                  722 	.db	127
   0973 10 08 00 00 40 04   723 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   097B 00 00 5A 00 7F 00   724 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   0983 80 00 80 00 80 00   725 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   098B 80 00 80 00 7E 00   726 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   0993 81 00 81 00 81 00   727 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   099B 81 00 7E 00 00 00   728 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09A3 50 00 20 00 00 00   729 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09AB 0A 00 04 00 FF 00   730 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09B3 AA 00 FF 00 FF 00   731 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09BB 55 00 FF 00 FE FF   732 	.db	0x55, 0x00, 0xFF, 0x00, 0xFE, 0xFF, 0xEF, 0xFF
        EF FF
   09C3 BB FF FF FF EF FF   733 	.db	0xBB, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFB, 0xFF
        FB FF
   09CB BF FF FF FF FF 00   734 	.db	0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF9, 0x00
        F9 00
   09D3 2F 00 FF 00 D8 00   735 	.db	0x2F, 0x00, 0xFF, 0x00, 0xD8, 0x00, 0xFF, 0x00
        FF 00
   09DB A5 00 FF 00 AD 00   736 	.db	0xA5, 0x00, 0xFF, 0x00, 0xAD, 0x00, 0x5C, 0x00
        5C 00
   09E3 DB 00 29 00 F6 00   737 	.db	0xDB, 0x00, 0x29, 0x00, 0xF6, 0x00, 0x49, 0x00
        49 00
   09EB BA 00 D6 00 00 00   738 	.db	0xBA, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x42
        42
   09F2 0A                  739 	.db	10
   09F3 00 24 00 18 00 18   740 	.db	0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00, 0x24
        00 24
   09FB 00 42               741 	.db	0x00, 0x42
   09FD FB 00               742 	.db	-5,0x00
   09FF 0B                  743 	.db	11
   0A00 42 00 24 00 18 00   744 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A08 24 00 42            745 	.db	0x24, 0x00, 0x42
   0A0B FB 00               746 	.db	-5,0x00
   0A0D 0B                  747 	.db	11
   0A0E 42 00 24 00 18 00   748 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A16 24 00 42            749 	.db	0x24, 0x00, 0x42
   0A19 FB 00               750 	.db	-5,0x00
   0A1B 0B                  751 	.db	11
   0A1C 42 00 24 00 18 00   752 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A24 24 00 42            753 	.db	0x24, 0x00, 0x42
   0A27 EB 00               754 	.db	-21,0x00
   0A29 4B                  755 	.db	75
   0A2A 42 00 24 00 18 00   756 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A32 24 00 42 00 00 00   757 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A3A 6E 10 FF 00 BF 40   758 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A42 76 08 00 3C 00 3C   759 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A4A 80 7F 80 7F 80 7F   760 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A52 80 7F 80 7F 00 FF   761 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A5A 7E 00 DF 20 FF 00   762 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A62 7E 00 18 24 00 3C   763 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A6A 42 00 24 00 18 00   764 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A72 24 00 42            765 	.db	0x24, 0x00, 0x42
   0A75 FB 00               766 	.db	-5,0x00
   0A77 0B                  767 	.db	11
   0A78 42 00 24 00 18 00   768 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A80 24 00 42            769 	.db	0x24, 0x00, 0x42
   0A83 FB 00               770 	.db	-5,0x00
   0A85 0B                  771 	.db	11
   0A86 42 00 24 00 18 00   772 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A8E 24 00 42            773 	.db	0x24, 0x00, 0x42
   0A91 FB 00               774 	.db	-5,0x00
   0A93 0B                  775 	.db	11
   0A94 42 00 24 00 18 00   776 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A9C 24 00 42            777 	.db	0x24, 0x00, 0x42
   0A9F FB 00               778 	.db	-5,0x00
   0AA1 0B                  779 	.db	11
   0AA2 42 00 24 00 18 00   780 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AAA 24 00 42            781 	.db	0x24, 0x00, 0x42
   0AAD FB 00               782 	.db	-5,0x00
   0AAF 0B                  783 	.db	11
   0AB0 42 00 24 00 18 00   784 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AB8 24 00 42            785 	.db	0x24, 0x00, 0x42
   0ABB FB 00               786 	.db	-5,0x00
   0ABD 0B                  787 	.db	11
   0ABE 42 00 24 00 18 00   788 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AC6 24 00 42            789 	.db	0x24, 0x00, 0x42
   0AC9 FB 00               790 	.db	-5,0x00
   0ACB 0B                  791 	.db	11
   0ACC 42 00 24 00 18 00   792 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD4 24 00 42            793 	.db	0x24, 0x00, 0x42
   0AD7 FB 00               794 	.db	-5,0x00
   0AD9 0B                  795 	.db	11
   0ADA 42 00 24 00 18 00   796 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AE2 24 00 42            797 	.db	0x24, 0x00, 0x42
   0AE5 EB 00               798 	.db	-21,0x00
   0AE7 0B                  799 	.db	11
   0AE8 42 00 24 00 18 00   800 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AF0 24 00 42            801 	.db	0x24, 0x00, 0x42
   0AF3 FB 00               802 	.db	-5,0x00
   0AF5 0B                  803 	.db	11
   0AF6 42 00 24 00 18 00   804 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AFE 24 00 42            805 	.db	0x24, 0x00, 0x42
   0B01 FB 00               806 	.db	-5,0x00
   0B03 0B                  807 	.db	11
   0B04 42 00 24 00 18 00   808 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B0C 24 00 42            809 	.db	0x24, 0x00, 0x42
   0B0F FB 00               810 	.db	-5,0x00
   0B11 0B                  811 	.db	11
   0B12 42 00 24 00 18 00   812 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B1A 24 00 42            813 	.db	0x24, 0x00, 0x42
   0B1D FB 00               814 	.db	-5,0x00
   0B1F 0B                  815 	.db	11
   0B20 42 00 24 00 18 00   816 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B28 24 00 42            817 	.db	0x24, 0x00, 0x42
   0B2B FB 00               818 	.db	-5,0x00
   0B2D 0B                  819 	.db	11
   0B2E 42 00 24 00 18 00   820 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B36 24 00 42            821 	.db	0x24, 0x00, 0x42
   0B39 FB 00               822 	.db	-5,0x00
   0B3B 7F                  823 	.db	127
   0B3C 42 00 24 00 18 00   824 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B44 24 00 42 00 00 00   825 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B4C C7 C7 BB BB BB BB   826 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B54 D7 D7 DB DB 42 C3   827 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B5C FF 00 C7 00 C7 00   828 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B64 EF 00 E7 00 FF 00   829 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B6C 76 00 FF 00 BF 00   830 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B74 7E 00 00 3C 00 3C   831 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B7C 42 7E 81 FF 81 FF   832 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B84 81 FF 81 FF 81 FF   833 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B8C F3 8D C1 BF C1 BF   834 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0B94 81 FF 81 FF 7E 7E   835 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0B9C 04 02 01 09 09 F9   836 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0BA4 06 06 00 00 00 00   837 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BAC AA 00 55 00 AA 00   838 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BB4 AA 00 55 00 AA 00   839 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BBB 6C                  840 	.db	108
   0BBC AA AA 55 55 AA AA   841 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BC4 AA AA 55 55 AA AA   842 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x00
        55 00
   0BCC 00 42 00 24 00 18   843 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0BD4 00 24 00 42 00 00   844 	.db	0x00, 0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x09
        00 09
   0BDC 00 00 09 00 09 0F   845 	.db	0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00, 0xCA
        00 CA
   0BE4 05 FF 00 3F 00 00   846 	.db	0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45, 0x00
        45 00
   0BEC 13 00 1E 0A 9E 00   847 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   0BF4 FF 00 FF 00 7E 00   848 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x94
        4A 94
   0BFC 00 9C 00 9E 0A FF   849 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   0C04 00 7C 00 4A 00 49   850 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x89
        00 89
   0C0C 89 4F 4F 4F 4A 8F   851 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   0C14 9F 7F 7F 7F 7F 45   852 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x00
        45 00
   0C1C 00 42 00 24 00 18   853 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0C24 00 24 00 42         854 	.db	0x00, 0x24, 0x00, 0x42
   0C28 FB 00               855 	.db	-5,0x00
   0C2A 0B                  856 	.db	11
   0C2B 42 00 24 00 18 00   857 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C33 24 00 42            858 	.db	0x24, 0x00, 0x42
   0C36 FB 00               859 	.db	-5,0x00
   0C38 0B                  860 	.db	11
   0C39 42 00 24 00 18 00   861 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C41 24 00 42            862 	.db	0x24, 0x00, 0x42
   0C44 FB 00               863 	.db	-5,0x00
   0C46 0B                  864 	.db	11
   0C47 42 00 24 00 18 00   865 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C4F 24 00 42            866 	.db	0x24, 0x00, 0x42
   0C52 FB 00               867 	.db	-5,0x00
   0C54 0B                  868 	.db	11
   0C55 42 00 24 00 18 00   869 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C5D 24 00 42            870 	.db	0x24, 0x00, 0x42
   0C60 FB 00               871 	.db	-5,0x00
   0C62 0B                  872 	.db	11
   0C63 42 00 24 00 18 00   873 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C6B 24 00 42            874 	.db	0x24, 0x00, 0x42
   0C6E FB 00               875 	.db	-5,0x00
   0C70 0B                  876 	.db	11
   0C71 42 00 24 00 18 00   877 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C79 24 00 42            878 	.db	0x24, 0x00, 0x42
   0C7C FB 00               879 	.db	-5,0x00
   0C7E 0B                  880 	.db	11
   0C7F 42 00 24 00 18 00   881 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C87 24 00 42            882 	.db	0x24, 0x00, 0x42
   0C8A FB 00               883 	.db	-5,0x00
   0C8C 0B                  884 	.db	11
   0C8D 42 00 24 00 18 00   885 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C95 24 00 42            886 	.db	0x24, 0x00, 0x42
   0C98 FB 00               887 	.db	-5,0x00
   0C9A 0B                  888 	.db	11
   0C9B 42 00 24 00 18 00   889 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA3 24 00 42            890 	.db	0x24, 0x00, 0x42
   0CA6 EB 00               891 	.db	-21,0x00
   0CA8 0B                  892 	.db	11
   0CA9 42 00 24 00 18 00   893 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CB1 24 00 42            894 	.db	0x24, 0x00, 0x42
   0CB4 FB 00               895 	.db	-5,0x00
   0CB6 0B                  896 	.db	11
   0CB7 42 00 24 00 18 00   897 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CBF 24 00 42            898 	.db	0x24, 0x00, 0x42
   0CC2 FB 00               899 	.db	-5,0x00
   0CC4 0B                  900 	.db	11
   0CC5 42 00 24 00 18 00   901 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CCD 24 00 42            902 	.db	0x24, 0x00, 0x42
   0CD0 FB 00               903 	.db	-5,0x00
   0CD2 0B                  904 	.db	11
   0CD3 42 00 24 00 18 00   905 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CDB 24 00 42            906 	.db	0x24, 0x00, 0x42
   0CDE FB 00               907 	.db	-5,0x00
   0CE0 0B                  908 	.db	11
   0CE1 42 00 24 00 18 00   909 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CE9 24 00 42            910 	.db	0x24, 0x00, 0x42
   0CEC FA 00               911 	.db	-6,0x00
   0CEE 7F                  912 	.db	127
   0CEF 38 00 44 00 44 00   913 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CF7 44 00 44 00 44 00   914 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0CFF 78 00 44 00 44 00   915 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0D07 44 00 44 00 78 00   916 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D0F 1C 00 20 00 40 00   917 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0D17 40 00 20 00 1C 00   918 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D1F 78 00 44 00 44 00   919 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D27 44 00 44 00 78 00   920 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D2F 7C 00 40 00 40 00   921 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D37 40 00 40 00 7C 00   922 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D3F 7C 00 40 00 40 00   923 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D47 40 00 40 00 40 00   924 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D4F 18 00 20 00 40 00   925 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D57 42 00 24 00 18 00   926 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D5F 44 00 44 00 44 00   927 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D67 44 00 44 00 44 00   928 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D6E 7F                  929 	.db	127
   0D6F 00 10 00 00 00 10   930 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D77 00 10 00 10 00 10   931 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D7F 00 3E 00 08 00 08   932 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D87 00 08 00 48 00 30   933 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D8F 00 44 00 48 00 50   934 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D97 00 50 00 48 00 44   935 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0D9F 00 40 00 40 00 40   936 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0DA7 00 40 00 40 00 78   937 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0DAF 00 44 00 6C 00 54   938 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0DB7 00 44 00 44 00 44   939 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DBF 00 44 00 64 00 64   940 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DC7 00 54 00 4C 00 4C   941 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DCF 00 38 00 44 00 44   942 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DD7 00 44 00 44 00 38   943 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DDF 00 78 00 44 00 44   944 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DE7 00 40 00 40 00 40   945 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DEE 7F                  946 	.db	127
   0DEF 00 00 38 00 44 00   947 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DF7 44 00 54 00 38 00   948 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0DFF 00 00 78 00 44 00   949 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E07 78 00 50 00 48 00   950 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0E0F 00 00 38 00 40 00   951 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0E17 38 00 04 00 04 00   952 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E1F 00 00 7C 00 10 00   953 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E27 10 00 10 00 10 00   954 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E2F 00 00 44 00 44 00   955 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E37 44 00 44 00 44 00   956 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E3F 00 00 41 00 41 00   957 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E47 49 00 2A 00 2A 00   958 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E4F 00 00 44 00 44 00   959 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E57 10 00 28 00 44 00   960 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E5F 00 00 44 00 28 00   961 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E67 10 00 10 00 10 00   962 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E6E 7F                  963 	.db	127
   0E6F 00 00 00 7C 00 04   964 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E77 00 10 00 20 00 40   965 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E7F 00 08 00 18 00 28   966 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E87 00 08 00 08 00 08   967 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E8F 00 00 00 38 00 44   968 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E97 00 08 00 10 00 20   969 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0E9F 00 00 00 70 00 08   970 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0EA7 00 30 00 08 00 08   971 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0EAF 00 00 00 10 00 08   972 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0EB7 00 7E 00 04 00 08   973 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EBF 00 00 00 44 00 44   974 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0EC7 00 28 00 10 00 10   975 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0ECF 3C 3C 42 7E 81 FF   976 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0ED7 A1 FF 81 FF 81 FF   977 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EDF 3C 3C 42 7E 81 FF   978 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EE7 A1 FF 81 FF 81 FF   979 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0EEE 7F                  980 	.db	127
   0EEF FF 3C 3C 42 7E 81   981 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EF7 FF A1 FF 81 FF 81   982 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0EFF FF 3C 3C 42 7E 81   983 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F07 FF A1 FF 81 FF 81   984 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F0F FF 3C 3C 42 7E 81   985 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F17 FF A1 FF 81 FF 81   986 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F1F FF 3C 3C 42 7E 81   987 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F27 FF A1 FF 81 FF 81   988 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F2F FF 3C 3C 42 7E 81   989 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F37 FF A1 FF 81 FF 81   990 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F3F FF 3C 3C 42 7E 81   991 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F47 FF A1 FF 81 FF 81   992 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F4F FF 3C 3C 42 7E 81   993 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F57 FF A1 FF 81 FF 81   994 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F5F FF 3C 3C 42 7E 81   995 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F67 FF A1 FF 81 FF 81   996 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F6E 7F                  997 	.db	127
   0F6F 81 FF 3C 3C 42 7E   998 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F77 81 FF A1 FF 81 FF   999 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F7F 81 FF 3C 3C 42 7E  1000 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F87 81 FF A1 FF 81 FF  1001 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F8F 81 FF 3C 3C 42 7E  1002 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F97 81 FF A1 FF 81 FF  1003 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F9F 81 FF 3C 3C 42 7E  1004 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FA7 81 FF A1 FF 81 FF  1005 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FAF 81 FF 3C 3C 42 7E  1006 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FB7 81 FF A1 FF 81 FF  1007 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FBF 81 FF 3C 3C 42 7E  1008 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FC7 81 FF A1 FF 81 FF  1009 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FCF 81 FF 3C 3C 42 7E  1010 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FD7 81 FF A1 FF 81 FF  1011 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FDF 81 FF 3C 3C 42 7E  1012 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FE7 81 FF A1 FF 81 FF  1013 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FEE 33                 1014 	.db	51
   0FEF FF 81 FF 3C 3C 42  1015 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FF7 FF 81 FF A1 FF 81  1016 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0FFF FF 81 FF 3C 3C 42  1017 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1007 FF 81 FF A1 FF 81  1018 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   100F FF 81 FF 3C 3C 42  1019 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1017 FF 81 FF A1 FF 81  1020 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   101F FF 81 FF           1021 	.db	0xFF, 0x81, 0xFF
   1022 00                 1022 	.db	0
                           1023 ;	game.c 44
                           1024 ;	game.c 1064
                           1025 ;	genArrayInit
                           1026 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1023 21 F8 18           1027 	ld	hl,#_spritePalette
   1026 CD 00 00           1028 	call	__initrleblock
   1029 08                 1029 	.db	8
   102A DC 6B D2 3A 87 29  1030 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   1032 00                 1031 	.db	0
                           1032 ;--------------------------------------------------------
                           1033 ; Home
                           1034 ;--------------------------------------------------------
                           1035 	.area _HOME
                           1036 	.area _CODE
                           1037 ;--------------------------------------------------------
                           1038 ; code
                           1039 ;--------------------------------------------------------
                           1040 	.area _CODE
                           1041 ;	game.c 70
                           1042 ;	genLabel
                           1043 ;	genFunction
                           1044 ;	---------------------------------
                           1045 ; Function performantDelay
                           1046 ; ---------------------------------
   0000                    1047 ___performantDelay_start:
   0000                    1048 _performantDelay:
                           1049 	
                           1050 ;	game.c 72
                           1051 ;	genAssign
   0000 0E 00              1052 	ld	c,#0x00
                           1053 ;	genLabel
   0002                    1054 00101$:
                           1055 ;	genCmpEq
                           1056 ;	AOP_STK for 
                           1057 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1058 	lda	hl,2(sp)
   0004 7E                 1059 	ld	a,(hl)
   0005 B9                 1060 	cp	c
   0006 20 03              1061 	jr	nz,00109$
   0008 C3 15 00           1062 	jp	00105$
   000B                    1063 00109$:
                           1064 ;	game.c 73
                           1065 ;	genCall
                           1066 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1067 	push	bc
   000C CD 00 00           1068 	call	_wait_vbl_done
   000F E1                 1069 	pop	hl
   0010 4D                 1070 	ld	c,l
                           1071 ;	game.c 72
                           1072 ;	genPlus
                           1073 ;	genPlusIncr
                           1074 ; Removed redundent load
   0011 0C                 1075 	inc	c
                           1076 ;	genGoto
   0012 C3 02 00           1077 	jp	00101$
                           1078 ;	genLabel
   0015                    1079 00105$:
                           1080 ;	genEndFunction
                           1081 	
   0015 C9                 1082 	ret
   0016                    1083 ___performantDelay_end:
                           1084 ;	game.c 105
                           1085 ;	genLabel
                           1086 ;	genFunction
                           1087 ;	---------------------------------
                           1088 ; Function timers
                           1089 ; ---------------------------------
   0016                    1090 ___timers_start:
   0016                    1091 _timers:
                           1092 	
                           1093 ;	game.c 107
                           1094 ;	genCmpEq
                           1095 ;	AOP_HL for _input_timer
                           1096 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1097 	ld	hl,#_input_timer
   0019 7E                 1098 	ld	a,(hl)
   001A B7                 1099 	or	a,a
   001B CA 22 00           1100 	jp	z,00102$
   001E                    1101 00106$:
                           1102 ;	game.c 108
                           1103 ;	genMinus
                           1104 ;	AOP_HL for _input_timer
   001E 21 03 19           1105 	ld	hl,#_input_timer
   0021 35                 1106 	dec	(hl)
                           1107 ;	genLabel
   0022                    1108 00102$:
                           1109 ;	game.c 110
                           1110 ;	genPlus
                           1111 ;	AOP_HL for _timer
                           1112 ;	genPlusIncr
   0022 21 01 19           1113 	ld	hl,#_timer
   0025 34                 1114 	inc	(hl)
                           1115 ;	genLabel
   0026                    1116 00103$:
                           1117 ;	genEndFunction
                           1118 	
   0026 C9                 1119 	ret
   0027                    1120 ___timers_end:
                           1121 ;	game.c 114
                           1122 ;	genLabel
                           1123 ;	genFunction
                           1124 ;	---------------------------------
                           1125 ; Function main
                           1126 ; ---------------------------------
   0027                    1127 ___main_start:
   0027                    1128 _main:
                           1129 	
                           1130 ;	game.c 116
                           1131 ;	genCall
                           1132 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1133 	call	_init
                           1134 ;	game.c 117
                           1135 ;	genCall
                           1136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1137 	call	_map_init
                           1138 ;	game.c 119
                           1139 ;	genLabel
   002D                    1140 00101$:
                           1141 ;	genIfx
                           1142 ;	AOP_HL for _running
   002D AF                 1143 	xor	a,a
   002E 21 00 19           1144 	ld	hl,#_running
   0031 B6                 1145 	or	a,(hl)
   0032 CA 47 00           1146 	jp	z,00103$
                           1147 ;	game.c 121
                           1148 ;	genCall
                           1149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1150 	call	_timers
                           1151 ;	game.c 122
                           1152 ;	genCall
                           1153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1154 	call	_map_loop
                           1155 ;	game.c 123
                           1156 ;	genIpush
                           1157 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1158 	ld	a,#0x02
   003D F5                 1159 	push	af
   003E 33                 1160 	inc	sp
                           1161 ;	genCall
   003F CD 00 00           1162 	call	_performantDelay
   0042 E8 01              1163 	lda	sp,1(sp)
                           1164 ;	genGoto
   0044 C3 2D 00           1165 	jp	00101$
                           1166 ;	genLabel
   0047                    1167 00103$:
                           1168 ;	game.c 127
                           1169 ;	genIpush
                           1170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1171 	ld	hl,#__str_0
   004A E5                 1172 	push	hl
                           1173 ;	genCall
   004B CD 00 00           1174 	call	_printf
   004E E8 02              1175 	lda	sp,2(sp)
                           1176 ;	game.c 128
                           1177 ;	genLabel
   0050                    1178 00105$:
                           1179 ;	genGoto
   0050 C3 50 00           1180 	jp	00105$
                           1181 ;	genLabel
   0053                    1182 00107$:
                           1183 ;	genEndFunction
                           1184 	
   0053 C9                 1185 	ret
   0054                    1186 ___main_end:
   0054                    1187 __str_0:
   0054 54 68 65 20 65 6E  1188 	.ascii "The end"
        64
   005B 0A                 1189 	.db 0x0A
   005C 00                 1190 	.db 0x00
                           1191 ;	game.c 133
                           1192 ;	genLabel
                           1193 ;	genFunction
                           1194 ;	---------------------------------
                           1195 ; Function init
                           1196 ; ---------------------------------
   005D                    1197 ___init_start:
   005D                    1198 _init:
   005D E8 FD              1199 	lda	sp,-3(sp)
                           1200 ;	game.c 134
                           1201 ;	genAssign
                           1202 ;	AOP_HL for _current_map
   005F 21 04 19           1203 	ld	hl,#_current_map
   0062 36 C8              1204 	ld	(hl),#0xC8
                           1205 ;	game.c 135
                           1206 ;	genAssign
                           1207 ;	AOP_HL for _characters_available
   0064 21 02 19           1208 	ld	hl,#_characters_available
   0067 36 02              1209 	ld	(hl),#0x02
                           1210 ;	game.c 137
                           1211 ;	genCall
                           1212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1213 	call	_copy_map
                           1214 ;	game.c 138
                           1215 ;	genIpush
                           1216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1217 	ld	hl,#_sprites_park
   006F E5                 1218 	push	hl
                           1219 ;	genIpush
   0070 21 00 78           1220 	ld	hl,#0x7800
   0073 E5                 1221 	push	hl
                           1222 ;	genCall
   0074 CD 00 00           1223 	call	_set_bkg_data
   0077 E8 04              1224 	lda	sp,4(sp)
                           1225 ;	game.c 139
                           1226 ;	genIpush
                           1227 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1228 	ld	hl,#_map
   007C E5                 1229 	push	hl
                           1230 ;	genIpush
   007D 21 14 12           1231 	ld	hl,#0x1214
   0080 E5                 1232 	push	hl
                           1233 ;	genIpush
   0081 21 00 00           1234 	ld	hl,#0x0000
   0084 E5                 1235 	push	hl
                           1236 ;	genCall
   0085 CD 00 00           1237 	call	_set_bkg_tiles
   0088 E8 06              1238 	lda	sp,6(sp)
                           1239 ;	game.c 141
                           1240 ;	genIpush
                           1241 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1242 	ld	hl,#_Characters
   008D E5                 1243 	push	hl
                           1244 ;	genIpush
   008E 21 00 1E           1245 	ld	hl,#0x1E00
   0091 E5                 1246 	push	hl
                           1247 ;	genCall
   0092 CD 00 00           1248 	call	_set_sprite_data
   0095 E8 04              1249 	lda	sp,4(sp)
                           1250 ;	game.c 142
                           1251 ;	genIpush
                           1252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1253 	ld	hl,#_spritePalette
   009A E5                 1254 	push	hl
                           1255 ;	genIpush
   009B 21 00 04           1256 	ld	hl,#0x0400
   009E E5                 1257 	push	hl
                           1258 ;	genCall
   009F CD 00 00           1259 	call	_set_sprite_palette
   00A2 E8 04              1260 	lda	sp,4(sp)
                           1261 ;	game.c 146
                           1262 ;	genIpush
                           1263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1264 	ld	hl,#_spritePalette
   00A7 E5                 1265 	push	hl
                           1266 ;	genIpush
   00A8 21 00 03           1267 	ld	hl,#0x0300
   00AB E5                 1268 	push	hl
                           1269 ;	genCall
   00AC CD 00 00           1270 	call	_set_bkg_palette
   00AF E8 04              1271 	lda	sp,4(sp)
                           1272 ;	game.c 147
                           1273 ;	genIpush
                           1274 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1275 	ld	hl,#0x0000
   00B4 E5                 1276 	push	hl
                           1277 ;	genCall
   00B5 CD 00 00           1278 	call	_set_sprite_prop
   00B8 E8 02              1279 	lda	sp,2(sp)
                           1280 ;	game.c 152
                           1281 ;	genAssign
   00BA 01 47 FF           1282 	ld	bc,#0xFF47
                           1283 ;	genAssign (pointer)
   00BD 3E E4              1284 	ld	a,#0xE4
   00BF 02                 1285 	ld	(bc),a
                           1286 ;	game.c 154
                           1287 ;	genAssign
   00C0 01 40 FF           1288 	ld	bc,#0xFF40
                           1289 ;	genAssign
                           1290 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1291 	lda	hl,1(sp)
   00C5 36 40              1292 	ld	(hl),#0x40
   00C7 23                 1293 	inc	hl
   00C8 36 FF              1294 	ld	(hl),#0xFF
                           1295 ;	genPointerGet
                           1296 ;	AOP_STK for _init_sloc0_1_0
                           1297 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1298 	dec	hl
   00CB 5E                 1299 	ld	e,(hl)
   00CC 23                 1300 	inc	hl
   00CD 56                 1301 	ld	d,(hl)
   00CE 1A                 1302 	ld	a,(de)
   00CF 2B                 1303 	dec	hl
   00D0 2B                 1304 	dec	hl
                           1305 ;	genOr
                           1306 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1307 	ld      (hl),a
   00D2 7F                 1308 	ld      a,a
   00D3 F6 80              1309 	or	a,#0x80
                           1310 ;	genAssign (pointer)
   00D5 02                 1311 	ld	(bc),a
                           1312 ;	game.c 156
                           1313 ;	genAssign
   00D6 01 40 FF           1314 	ld	bc,#0xFF40
                           1315 ;	genAssign
                           1316 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1317 	inc	hl
   00DA 36 40              1318 	ld	(hl),#0x40
   00DC 23                 1319 	inc	hl
   00DD 36 FF              1320 	ld	(hl),#0xFF
                           1321 ;	genPointerGet
                           1322 ;	AOP_STK for _init_sloc0_1_0
                           1323 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1324 	dec	hl
   00E0 5E                 1325 	ld	e,(hl)
   00E1 23                 1326 	inc	hl
   00E2 56                 1327 	ld	d,(hl)
   00E3 1A                 1328 	ld	a,(de)
   00E4 2B                 1329 	dec	hl
   00E5 2B                 1330 	dec	hl
                           1331 ;	genOr
                           1332 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1333 	ld      (hl),a
   00E7 7F                 1334 	ld      a,a
   00E8 F6 01              1335 	or	a,#0x01
                           1336 ;	genAssign (pointer)
   00EA 02                 1337 	ld	(bc),a
                           1338 ;	game.c 158
                           1339 ;	genAssign
   00EB 01 40 FF           1340 	ld	bc,#0xFF40
                           1341 ;	genAssign
                           1342 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1343 	inc	hl
   00EF 36 40              1344 	ld	(hl),#0x40
   00F1 23                 1345 	inc	hl
   00F2 36 FF              1346 	ld	(hl),#0xFF
                           1347 ;	genPointerGet
                           1348 ;	AOP_STK for _init_sloc0_1_0
                           1349 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1350 	dec	hl
   00F5 5E                 1351 	ld	e,(hl)
   00F6 23                 1352 	inc	hl
   00F7 56                 1353 	ld	d,(hl)
   00F8 1A                 1354 	ld	a,(de)
   00F9 2B                 1355 	dec	hl
   00FA 2B                 1356 	dec	hl
                           1357 ;	genOr
                           1358 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1359 	ld      (hl),a
   00FC 7F                 1360 	ld      a,a
   00FD F6 02              1361 	or	a,#0x02
                           1362 ;	genAssign (pointer)
   00FF 02                 1363 	ld	(bc),a
                           1364 ;	game.c 160
                           1365 ;	genAssign
                           1366 ;	AOP_HL for _input_timer
   0100 21 03 19           1367 	ld	hl,#_input_timer
   0103 36 00              1368 	ld	(hl),#0x00
                           1369 ;	game.c 161
                           1370 ;	genAssign
                           1371 ;	AOP_HL for _running
   0105 21 00 19           1372 	ld	hl,#_running
   0108 36 01              1373 	ld	(hl),#0x01
                           1374 ;	game.c 162
                           1375 ;	genAssign
                           1376 ;	AOP_HL for _timer
   010A 21 01 19           1377 	ld	hl,#_timer
   010D 36 01              1378 	ld	(hl),#0x01
                           1379 ;	game.c 163
                           1380 ;	genAddrOf
                           1381 ;	AOP_HL for _player
   010F 11 6D 1A           1382 	ld	de,#_bunny
   0112 21 AE 1A           1383 	ld	hl,#_player
   0115 73                 1384 	ld	(hl),e
   0116 23                 1385 	inc	hl
   0117 72                 1386 	ld	(hl),d
                           1387 ;	genLabel
   0118                    1388 00101$:
                           1389 ;	genEndFunction
   0118 E8 03              1390 	lda	sp,3(sp)
   011A C9                 1391 	ret
   011B                    1392 ___init_end:
                           1393 ;	game.c 167
                           1394 ;	genLabel
                           1395 ;	genFunction
                           1396 ;	---------------------------------
                           1397 ; Function map_water
                           1398 ; ---------------------------------
   011B                    1399 ___map_water_start:
   011B                    1400 _map_water:
   011B E8 DC              1401 	lda	sp,-36(sp)
                           1402 ;	game.c 168
                           1403 ;	genAddrOf
   011D F8 14              1404 	lda	hl,20(sp)
   011F 4D                 1405 	ld	c,l
   0120 44                 1406 	ld	b,h
                           1407 ;	genAssign
                           1408 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1409 	lda	hl,2(sp)
   0123 71                 1410 	ld	(hl),c
   0124 23                 1411 	inc	hl
   0125 70                 1412 	ld	(hl),b
                           1413 ;	genArrayInit
                           1414 ;	AOP_STK for _map_water_sloc0_1_0
                           1415 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1416 	push	bc
   0127 2B                 1417 	dec	hl
   0128 2A                 1418 	ld	a,(hl+)
   0129 66                 1419 	ld	h,(hl)
   012A 6F                 1420 	ld	l,a
   012B CD 00 00           1421 	call	__initrleblock
   012E 10                 1422 	.db	16
   012F FF 00 DD 00 AA 00  1423 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1424 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1425 	.db	0
   0140 C1                 1426 	pop	bc
                           1427 ;	game.c 174
                           1428 ;	genAddrOf
                           1429 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1430 	lda	hl,4(sp)
   0143 7D                 1431 	ld	a,l
   0144 54                 1432 	ld	d,h
   0145 F8 02              1433 	lda	hl,2(sp)
   0147 22                 1434 	ld	(hl+),a
   0148 72                 1435 	ld	(hl),d
                           1436 ;	genAssign
                           1437 ;	AOP_STK for _map_water_sloc0_1_0
                           1438 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1439 	dec	hl
   014A 2A                 1440 	ld	a,(hl+)
   014B 5E                 1441 	ld	e,(hl)
   014C F8 00              1442 	lda	hl,0(sp)
   014E 22                 1443 	ld	(hl+),a
   014F 73                 1444 	ld	(hl),e
                           1445 ;	genArrayInit
                           1446 ;	AOP_STK for _map_water_sloc1_1_0
                           1447 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1448 	push	bc
   0151 2B                 1449 	dec	hl
   0152 2A                 1450 	ld	a,(hl+)
   0153 66                 1451 	ld	h,(hl)
   0154 6F                 1452 	ld	l,a
   0155 CD 00 00           1453 	call	__initrleblock
   0158 10                 1454 	.db	16
   0159 FF 00 BB 00 55 00  1455 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1456 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1457 	.db	0
   016A C1                 1458 	pop	bc
                           1459 ;	game.c 180
                           1460 ;	genIpush
                           1461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1462 	push	bc
   016C 3E 20              1463 	ld	a,#0x20
   016E F5                 1464 	push	af
   016F 33                 1465 	inc	sp
                           1466 ;	genIpush
                           1467 ;	AOP_HL for _timer
   0170 21 01 19           1468 	ld	hl,#_timer
   0173 7E                 1469 	ld	a,(hl)
   0174 F5                 1470 	push	af
   0175 33                 1471 	inc	sp
                           1472 ;	genCall
   0176 CD 00 00           1473 	call	__moduchar_rrx_s
                           1474 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1475 	lda	hl,4(sp)
   017B 73                 1476 	ld	(hl),e
   017C E8 02              1477 	lda	sp,2(sp)
   017E C1                 1478 	pop	bc
                           1479 ;	genCmpEq
                           1480 ;	AOP_STK for _map_water_sloc1_1_0
                           1481 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1482 	lda	hl,0(sp)
   0181 7E                 1483 	ld	a,(hl)
   0182 B7                 1484 	or	a,a
   0183 C2 C7 01           1485 	jp	nz,00106$
   0186 18 03              1486 	jr	00111$
   0188                    1487 00110$:
   0188 C3 C7 01           1488 	jp	00106$
   018B                    1489 00111$:
                           1490 ;	game.c 181
                           1491 ;	genIpush
                           1492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1493 	push	bc
   018C 3E 40              1494 	ld	a,#0x40
   018E F5                 1495 	push	af
   018F 33                 1496 	inc	sp
                           1497 ;	genIpush
                           1498 ;	AOP_HL for _timer
   0190 21 01 19           1499 	ld	hl,#_timer
   0193 7E                 1500 	ld	a,(hl)
   0194 F5                 1501 	push	af
   0195 33                 1502 	inc	sp
                           1503 ;	genCall
   0196 CD 00 00           1504 	call	__moduchar_rrx_s
                           1505 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1506 	lda	hl,4(sp)
   019B 73                 1507 	ld	(hl),e
   019C E8 02              1508 	lda	sp,2(sp)
   019E C1                 1509 	pop	bc
                           1510 ;	genCmpEq
                           1511 ;	AOP_STK for _map_water_sloc1_1_0
                           1512 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1513 	lda	hl,0(sp)
   01A1 7E                 1514 	ld	a,(hl)
   01A2 B7                 1515 	or	a,a
   01A3 C2 B8 01           1516 	jp	nz,00102$
   01A6 18 03              1517 	jr	00113$
   01A8                    1518 00112$:
   01A8 C3 B8 01           1519 	jp	00102$
   01AB                    1520 00113$:
                           1521 ;	game.c 182
                           1522 ;	genIpush
                           1523 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1524 	push	bc
                           1525 ;	genIpush
   01AC 21 0B 01           1526 	ld	hl,#0x010B
   01AF E5                 1527 	push	hl
                           1528 ;	genCall
   01B0 CD 00 00           1529 	call	_set_bkg_data
   01B3 E8 04              1530 	lda	sp,4(sp)
                           1531 ;	genGoto
   01B5 C3 C7 01           1532 	jp	00106$
                           1533 ;	genLabel
   01B8                    1534 00102$:
                           1535 ;	game.c 186
                           1536 ;	genIpush
                           1537 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1538 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1539 	lda	hl,2(sp)
   01BA 2A                 1540 	ld	a,(hl+)
   01BB 66                 1541 	ld	h,(hl)
   01BC 6F                 1542 	ld	l,a
   01BD E5                 1543 	push	hl
                           1544 ;	genIpush
   01BE 21 0B 01           1545 	ld	hl,#0x010B
   01C1 E5                 1546 	push	hl
                           1547 ;	genCall
   01C2 CD 00 00           1548 	call	_set_bkg_data
   01C5 E8 04              1549 	lda	sp,4(sp)
                           1550 ;	genLabel
   01C7                    1551 00106$:
                           1552 ;	genEndFunction
   01C7 E8 24              1553 	lda	sp,36(sp)
   01C9 C9                 1554 	ret
   01CA                    1555 ___map_water_end:
                           1556 ;	game.c 231
                           1557 ;	genLabel
                           1558 ;	genFunction
                           1559 ;	---------------------------------
                           1560 ; Function change_char
                           1561 ; ---------------------------------
   01CA                    1562 ___change_char_start:
   01CA                    1563 _change_char:
                           1564 	
                           1565 ;	game.c 233
                           1566 ;	genCmpEq
                           1567 ;	AOP_HL for _characters_available
                           1568 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1569 	ld	hl,#_characters_available
   01CD 7E                 1570 	ld	a,(hl)
   01CE FE 01              1571 	cp	a,#0x01
   01D0 C2 DE 01           1572 	jp	nz,00102$
   01D3 18 03              1573 	jr	00135$
   01D5                    1574 00134$:
   01D5 C3 DE 01           1575 	jp	00102$
   01D8                    1576 00135$:
                           1577 ;	game.c 234
                           1578 ;	genRet
   01D8 11 00 00           1579 	ld	de,#0x0000
   01DB C3 EE 02           1580 	jp	00121$
                           1581 ;	genLabel
   01DE                    1582 00102$:
                           1583 ;	game.c 237
                           1584 ;	genAssign
                           1585 ;	AOP_HL for _player
   01DE 21 AE 1A           1586 	ld	hl,#_player
   01E1 4E                 1587 	ld	c,(hl)
   01E2 23                 1588 	inc	hl
   01E3 46                 1589 	ld	b,(hl)
                           1590 ;	genPlus
                           1591 ;	genPlusIncr
   01E4 21 08 00           1592 	ld	hl,#0x0008
   01E7 09                 1593 	add	hl,bc
                           1594 ;	genAssign (pointer)
   01E8 36 00              1595 	ld	(hl),#0x00
                           1596 ;	game.c 239
                           1597 ;	genCmpEq
                           1598 ;	AOP_HL for _characters_available
                           1599 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1600 	ld	hl,#_characters_available
   01ED 7E                 1601 	ld	a,(hl)
   01EE FE 02              1602 	cp	a,#0x02
   01F0 C2 2B 02           1603 	jp	nz,00107$
   01F3 18 03              1604 	jr	00137$
   01F5                    1605 00136$:
   01F5 C3 2B 02           1606 	jp	00107$
   01F8                    1607 00137$:
                           1608 ;	game.c 240
                           1609 ;	genAssign
                           1610 ;	AOP_HL for _player
   01F8 21 AE 1A           1611 	ld	hl,#_player
   01FB 4E                 1612 	ld	c,(hl)
   01FC 23                 1613 	inc	hl
   01FD 46                 1614 	ld	b,(hl)
                           1615 ;	genPlus
                           1616 ;	genPlusIncr
                           1617 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1618 	ld	a,c
   01FF C6 0B              1619 	add	a,#0x0B
   0201 4F                 1620 	ld	c,a
   0202 78                 1621 	ld	a,b
   0203 CE 00              1622 	adc	a,#0x00
   0205 47                 1623 	ld	b,a
                           1624 ;	genPointerGet
   0206 0A                 1625 	ld	a,(bc)
                           1626 ;	genCmpEq
                           1627 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1628 	ld	c,a
   0208 FE 01              1629 	cp	a,#0x01
   020A CA 16 02           1630 	jp	z,00103$
   020D                    1631 00138$:
                           1632 ;	genCmpEq
                           1633 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1634 	ld	a,c
   020E FE 02              1635 	cp	a,#0x02
   0210 CA 22 02           1636 	jp	z,00104$
   0213                    1637 00139$:
                           1638 ;	genGoto
   0213 C3 2B 02           1639 	jp	00107$
                           1640 ;	game.c 242
                           1641 ;	genLabel
   0216                    1642 00103$:
                           1643 ;	genAddrOf
                           1644 ;	AOP_HL for _player
   0216 11 7A 1A           1645 	ld	de,#_dog1
   0219 21 AE 1A           1646 	ld	hl,#_player
   021C 73                 1647 	ld	(hl),e
   021D 23                 1648 	inc	hl
   021E 72                 1649 	ld	(hl),d
                           1650 ;	game.c 243
                           1651 ;	genGoto
   021F C3 2B 02           1652 	jp	00107$
                           1653 ;	game.c 245
                           1654 ;	genLabel
   0222                    1655 00104$:
                           1656 ;	genAddrOf
                           1657 ;	AOP_HL for _player
   0222 11 6D 1A           1658 	ld	de,#_bunny
   0225 21 AE 1A           1659 	ld	hl,#_player
   0228 73                 1660 	ld	(hl),e
   0229 23                 1661 	inc	hl
   022A 72                 1662 	ld	(hl),d
                           1663 ;	game.c 247
                           1664 ;	genLabel
   022B                    1665 00107$:
                           1666 ;	game.c 249
                           1667 ;	genCmpEq
                           1668 ;	AOP_HL for _characters_available
                           1669 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1670 	ld	hl,#_characters_available
   022E 7E                 1671 	ld	a,(hl)
   022F FE 03              1672 	cp	a,#0x03
   0231 C2 7E 02           1673 	jp	nz,00113$
   0234 18 03              1674 	jr	00141$
   0236                    1675 00140$:
   0236 C3 7E 02           1676 	jp	00113$
   0239                    1677 00141$:
                           1678 ;	game.c 250
                           1679 ;	genAssign
                           1680 ;	AOP_HL for _player
   0239 21 AE 1A           1681 	ld	hl,#_player
   023C 4E                 1682 	ld	c,(hl)
   023D 23                 1683 	inc	hl
   023E 46                 1684 	ld	b,(hl)
                           1685 ;	genPlus
                           1686 ;	genPlusIncr
                           1687 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1688 	ld	a,c
   0240 C6 0B              1689 	add	a,#0x0B
   0242 4F                 1690 	ld	c,a
   0243 78                 1691 	ld	a,b
   0244 CE 00              1692 	adc	a,#0x00
   0246 47                 1693 	ld	b,a
                           1694 ;	genPointerGet
   0247 0A                 1695 	ld	a,(bc)
                           1696 ;	genCmpEq
                           1697 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1698 	ld	c,a
   0249 FE 01              1699 	cp	a,#0x01
   024B CA 5D 02           1700 	jp	z,00108$
   024E                    1701 00142$:
                           1702 ;	genCmpEq
                           1703 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1704 	ld	a,c
   024F FE 02              1705 	cp	a,#0x02
   0251 CA 69 02           1706 	jp	z,00109$
   0254                    1707 00143$:
                           1708 ;	genCmpEq
                           1709 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1710 	ld	a,c
   0255 FE 03              1711 	cp	a,#0x03
   0257 CA 75 02           1712 	jp	z,00110$
   025A                    1713 00144$:
                           1714 ;	genGoto
   025A C3 7E 02           1715 	jp	00113$
                           1716 ;	game.c 252
                           1717 ;	genLabel
   025D                    1718 00108$:
                           1719 ;	genAddrOf
                           1720 ;	AOP_HL for _player
   025D 11 7A 1A           1721 	ld	de,#_dog1
   0260 21 AE 1A           1722 	ld	hl,#_player
   0263 73                 1723 	ld	(hl),e
   0264 23                 1724 	inc	hl
   0265 72                 1725 	ld	(hl),d
                           1726 ;	game.c 253
                           1727 ;	genGoto
   0266 C3 7E 02           1728 	jp	00113$
                           1729 ;	game.c 255
                           1730 ;	genLabel
   0269                    1731 00109$:
                           1732 ;	genAddrOf
                           1733 ;	AOP_HL for _player
   0269 11 87 1A           1734 	ld	de,#_dog2
   026C 21 AE 1A           1735 	ld	hl,#_player
   026F 73                 1736 	ld	(hl),e
   0270 23                 1737 	inc	hl
   0271 72                 1738 	ld	(hl),d
                           1739 ;	game.c 256
                           1740 ;	genGoto
   0272 C3 7E 02           1741 	jp	00113$
                           1742 ;	game.c 258
                           1743 ;	genLabel
   0275                    1744 00110$:
                           1745 ;	genAddrOf
                           1746 ;	AOP_HL for _player
   0275 11 6D 1A           1747 	ld	de,#_bunny
   0278 21 AE 1A           1748 	ld	hl,#_player
   027B 73                 1749 	ld	(hl),e
   027C 23                 1750 	inc	hl
   027D 72                 1751 	ld	(hl),d
                           1752 ;	game.c 260
                           1753 ;	genLabel
   027E                    1754 00113$:
                           1755 ;	game.c 262
                           1756 ;	genCmpEq
                           1757 ;	AOP_HL for _characters_available
                           1758 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1759 	ld	hl,#_characters_available
   0281 7E                 1760 	ld	a,(hl)
   0282 FE 04              1761 	cp	a,#0x04
   0284 C2 EB 02           1762 	jp	nz,00120$
   0287 18 03              1763 	jr	00146$
   0289                    1764 00145$:
   0289 C3 EB 02           1765 	jp	00120$
   028C                    1766 00146$:
                           1767 ;	game.c 263
                           1768 ;	genAssign
                           1769 ;	AOP_HL for _player
   028C 21 AE 1A           1770 	ld	hl,#_player
   028F 4E                 1771 	ld	c,(hl)
   0290 23                 1772 	inc	hl
   0291 46                 1773 	ld	b,(hl)
                           1774 ;	genPlus
                           1775 ;	genPlusIncr
                           1776 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1777 	ld	a,c
   0293 C6 0B              1778 	add	a,#0x0B
   0295 4F                 1779 	ld	c,a
   0296 78                 1780 	ld	a,b
   0297 CE 00              1781 	adc	a,#0x00
   0299 47                 1782 	ld	b,a
                           1783 ;	genPointerGet
   029A 0A                 1784 	ld	a,(bc)
                           1785 ;	genCmpLt
   029B 4F                 1786 	ld	c,a
   029C FE 01              1787 	cp	#0x01
   029E DA EB 02           1788 	jp	c,00120$
                           1789 ;	genCmpGt
   02A1 3E 04              1790 	ld	a,#0x04
   02A3 91                 1791 	sub	a,c
   02A4 DA EB 02           1792 	jp	c,00120$
                           1793 ;	genMinus
   02A7 0D                 1794 	dec	c
                           1795 ;	genJumpTab
   02A8 59                 1796 	ld	e,c
   02A9 16 00              1797 	ld	d,#0x00
   02AB 21 B2 02           1798 	ld	hl,#00147$
   02AE 19                 1799 	add	hl,de
   02AF 19                 1800 	add	hl,de
   02B0 19                 1801 	add	hl,de
   02B1 E9                 1802 	jp	(hl)
   02B2                    1803 00147$:
   02B2 C3 BE 02           1804 	jp	00114$
   02B5 C3 CA 02           1805 	jp	00115$
   02B8 C3 D6 02           1806 	jp	00116$
   02BB C3 E2 02           1807 	jp	00117$
                           1808 ;	game.c 265
                           1809 ;	genLabel
   02BE                    1810 00114$:
                           1811 ;	genAddrOf
                           1812 ;	AOP_HL for _player
   02BE 11 7A 1A           1813 	ld	de,#_dog1
   02C1 21 AE 1A           1814 	ld	hl,#_player
   02C4 73                 1815 	ld	(hl),e
   02C5 23                 1816 	inc	hl
   02C6 72                 1817 	ld	(hl),d
                           1818 ;	game.c 266
                           1819 ;	genGoto
   02C7 C3 EB 02           1820 	jp	00120$
                           1821 ;	game.c 268
                           1822 ;	genLabel
   02CA                    1823 00115$:
                           1824 ;	genAddrOf
                           1825 ;	AOP_HL for _player
   02CA 11 87 1A           1826 	ld	de,#_dog2
   02CD 21 AE 1A           1827 	ld	hl,#_player
   02D0 73                 1828 	ld	(hl),e
   02D1 23                 1829 	inc	hl
   02D2 72                 1830 	ld	(hl),d
                           1831 ;	game.c 269
                           1832 ;	genGoto
   02D3 C3 EB 02           1833 	jp	00120$
                           1834 ;	game.c 271
                           1835 ;	genLabel
   02D6                    1836 00116$:
                           1837 ;	genAddrOf
                           1838 ;	AOP_HL for _player
   02D6 11 94 1A           1839 	ld	de,#_cat
   02D9 21 AE 1A           1840 	ld	hl,#_player
   02DC 73                 1841 	ld	(hl),e
   02DD 23                 1842 	inc	hl
   02DE 72                 1843 	ld	(hl),d
                           1844 ;	game.c 272
                           1845 ;	genGoto
   02DF C3 EB 02           1846 	jp	00120$
                           1847 ;	game.c 274
                           1848 ;	genLabel
   02E2                    1849 00117$:
                           1850 ;	genAddrOf
                           1851 ;	AOP_HL for _player
   02E2 11 6D 1A           1852 	ld	de,#_bunny
   02E5 21 AE 1A           1853 	ld	hl,#_player
   02E8 73                 1854 	ld	(hl),e
   02E9 23                 1855 	inc	hl
   02EA 72                 1856 	ld	(hl),d
                           1857 ;	game.c 276
                           1858 ;	genLabel
   02EB                    1859 00120$:
                           1860 ;	game.c 281
                           1861 ;	genCall
                           1862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD 42 0E           1863 	call	_rotate_player
                           1864 ;	genLabel
   02EE                    1865 00121$:
                           1866 ;	genEndFunction
                           1867 	
   02EE C9                 1868 	ret
   02EF                    1869 ___change_char_end:
                           1870 ;	game.c 285
                           1871 ;	genLabel
                           1872 ;	genFunction
                           1873 ;	---------------------------------
                           1874 ; Function map_loop
                           1875 ; ---------------------------------
   02EF                    1876 ___map_loop_start:
   02EF                    1877 _map_loop:
                           1878 	
                           1879 ;	game.c 287
                           1880 ;	genIpush
                           1881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 AE 1A           1882 	ld	hl,#_player
   02F2 E5                 1883 	push	hl
                           1884 ;	genCall
   02F3 CD B0 07           1885 	call	_is_ded
   02F6 42                 1886 	ld	b,d
   02F7 4B                 1887 	ld	c,e
   02F8 E8 02              1888 	lda	sp,2(sp)
                           1889 ;	genIfx
   02FA 79                 1890 	ld	a,c
   02FB B0                 1891 	or	a,b
   02FC CA 02 03           1892 	jp	z,00102$
                           1893 ;	game.c 288
                           1894 ;	genCall
                           1895 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1896 	call	_map_init
                           1897 ;	genLabel
   0302                    1898 00102$:
                           1899 ;	game.c 290
                           1900 ;	genIpush
                           1901 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 AE 1A           1902 	ld	hl,#_player
   0305 E5                 1903 	push	hl
                           1904 ;	genCall
   0306 CD C6 05           1905 	call	_got_door
   0309 E8 02              1906 	lda	sp,2(sp)
                           1907 ;	game.c 292
                           1908 ;	genIpush
                           1909 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 AE 1A           1910 	ld	hl,#_player
   030E E5                 1911 	push	hl
                           1912 ;	genCall
   030F CD 19 05           1913 	call	_got_key
   0312 E8 02              1914 	lda	sp,2(sp)
                           1915 ;	game.c 293
                           1916 ;	genCall
                           1917 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1918 	call	_map_water
                           1919 ;	game.c 296
                           1920 ;	genIpush
                           1921 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 AE 1A           1922 	ld	hl,#_player
   031A E5                 1923 	push	hl
                           1924 ;	genCall
   031B CD E3 0B           1925 	call	_player_input
   031E E8 02              1926 	lda	sp,2(sp)
                           1927 ;	game.c 299
                           1928 ;	genIpush
                           1929 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1930 	ld	hl,#_bunny
   0323 E5                 1931 	push	hl
                           1932 ;	genCall
   0324 CD E8 0F           1933 	call	_move_character
   0327 E8 02              1934 	lda	sp,2(sp)
                           1935 ;	game.c 300
                           1936 ;	genIpush
                           1937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7A 1A           1938 	ld	hl,#_dog1
   032C E5                 1939 	push	hl
                           1940 ;	genCall
   032D CD E8 0F           1941 	call	_move_character
   0330 E8 02              1942 	lda	sp,2(sp)
                           1943 ;	game.c 301
                           1944 ;	genIpush
                           1945 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 87 1A           1946 	ld	hl,#_dog2
   0335 E5                 1947 	push	hl
                           1948 ;	genCall
   0336 CD E8 0F           1949 	call	_move_character
   0339 E8 02              1950 	lda	sp,2(sp)
                           1951 ;	game.c 302
                           1952 ;	genIpush
                           1953 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 94 1A           1954 	ld	hl,#_cat
   033E E5                 1955 	push	hl
                           1956 ;	genCall
   033F CD E8 0F           1957 	call	_move_character
   0342 E8 02              1958 	lda	sp,2(sp)
                           1959 ;	genLabel
   0344                    1960 00103$:
                           1961 ;	genEndFunction
                           1962 	
   0344 C9                 1963 	ret
   0345                    1964 ___map_loop_end:
                           1965 ;	game.c 307
                           1966 ;	genLabel
                           1967 ;	genFunction
                           1968 ;	---------------------------------
                           1969 ; Function helper_copy_map
                           1970 ; ---------------------------------
   0345                    1971 ___helper_copy_map_start:
   0345                    1972 _helper_copy_map:
   0345 E8 FC              1973 	lda	sp,-4(sp)
                           1974 ;	game.c 309
                           1975 ;	genAssign
   0347 01 00 00           1976 	ld	bc,#0x0000
                           1977 ;	genLabel
   034A                    1978 00101$:
                           1979 ;	genCmpLt
   034A 79                 1980 	ld	a,c
   034B D6 68              1981 	sub	a,#0x68
   034D 78                 1982 	ld	a,b
   034E DE 01              1983 	sbc	a,#0x01
   0350 D2 74 03           1984 	jp	nc,00105$
                           1985 ;	game.c 310
                           1986 ;	genPlus
                           1987 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1988 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1989 	ld	hl,#_map
   0356 09                 1990 	add	hl,bc
   0357 7D                 1991 	ld	a,l
   0358 54                 1992 	ld	d,h
   0359 F8 02              1993 	lda	hl,2(sp)
   035B 22                 1994 	ld	(hl+),a
   035C 72                 1995 	ld	(hl),d
                           1996 ;	genPlus
                           1997 ;	AOP_STK for 
                           1998 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           1999 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              2000 	lda	hl,6(sp)
   035F 2A                 2001 	ld	a,(hl+)
   0360 66                 2002 	ld	h,(hl)
   0361 6F                 2003 	ld	l,a
   0362 09                 2004 	add	hl,bc
   0363 7D                 2005 	ld	a,l
   0364 54                 2006 	ld	d,h
   0365 F8 00              2007 	lda	hl,0(sp)
                           2008 ;	genPointerGet
                           2009 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2010 	ld	(hl+),a
   0368 72                 2011 	ld	(hl),d
   0369 5F                 2012 	ld	e,a
   036A 1A                 2013 	ld	a,(de)
                           2014 ;	genAssign (pointer)
                           2015 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2016 	inc	hl
   036C 5E                 2017 	ld	e,(hl)
   036D 23                 2018 	inc	hl
   036E 56                 2019 	ld	d,(hl)
   036F 12                 2020 	ld	(de),a
                           2021 ;	game.c 309
                           2022 ;	genPlus
                           2023 ;	genPlusIncr
   0370 03                 2024 	inc	bc
                           2025 ;	genGoto
   0371 C3 4A 03           2026 	jp	00101$
                           2027 ;	genLabel
   0374                    2028 00105$:
                           2029 ;	genEndFunction
   0374 E8 04              2030 	lda	sp,4(sp)
   0376 C9                 2031 	ret
   0377                    2032 ___helper_copy_map_end:
                           2033 ;	game.c 314
                           2034 ;	genLabel
                           2035 ;	genFunction
                           2036 ;	---------------------------------
                           2037 ; Function copy_map
                           2038 ; ---------------------------------
   0377                    2039 ___copy_map_start:
   0377                    2040 _copy_map:
                           2041 	
                           2042 ;	game.c 315
                           2043 ;	genCmpLt
                           2044 ;	AOP_HL for _current_map
   0377 21 04 19           2045 	ld	hl,#_current_map
   037A 7E                 2046 	ld	a,(hl)
   037B FE 01              2047 	cp	#0x01
   037D DA 2A 04           2048 	jp	c,00111$
                           2049 ;	genCmpGt
                           2050 ;	AOP_HL for _current_map
   0380 3E 0A              2051 	ld	a,#0x0A
   0382 96                 2052 	sub	a,(hl)
   0383 DA 2A 04           2053 	jp	c,00111$
                           2054 ;	genMinus
                           2055 ;	AOP_HL for _current_map
   0386 7E                 2056 	ld	a,(hl)
   0387 C6 FF              2057 	add	a,#0xFF
   0389 4F                 2058 	ld	c,a
                           2059 ;	genJumpTab
   038A 59                 2060 	ld	e,c
   038B 16 00              2061 	ld	d,#0x00
   038D 21 94 03           2062 	ld	hl,#00117$
   0390 19                 2063 	add	hl,de
   0391 19                 2064 	add	hl,de
   0392 19                 2065 	add	hl,de
   0393 E9                 2066 	jp	(hl)
   0394                    2067 00117$:
   0394 C3 B2 03           2068 	jp	00101$
   0397 C3 BE 03           2069 	jp	00102$
   039A C3 CA 03           2070 	jp	00103$
   039D C3 D6 03           2071 	jp	00104$
   03A0 C3 E2 03           2072 	jp	00105$
   03A3 C3 EE 03           2073 	jp	00106$
   03A6 C3 FA 03           2074 	jp	00107$
   03A9 C3 06 04           2075 	jp	00108$
   03AC C3 12 04           2076 	jp	00109$
   03AF C3 1E 04           2077 	jp	00110$
                           2078 ;	game.c 317
                           2079 ;	genLabel
   03B2                    2080 00101$:
                           2081 ;	genIpush
                           2082 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2083 	ld	hl,#_Map1
   03B5 E5                 2084 	push	hl
                           2085 ;	genCall
   03B6 CD 45 03           2086 	call	_helper_copy_map
   03B9 E8 02              2087 	lda	sp,2(sp)
                           2088 ;	game.c 318
                           2089 ;	genGoto
   03BB C3 33 04           2090 	jp	00113$
                           2091 ;	game.c 320
                           2092 ;	genLabel
   03BE                    2093 00102$:
                           2094 ;	genIpush
                           2095 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2096 	ld	hl,#_Map2
   03C1 E5                 2097 	push	hl
                           2098 ;	genCall
   03C2 CD 45 03           2099 	call	_helper_copy_map
   03C5 E8 02              2100 	lda	sp,2(sp)
                           2101 ;	game.c 321
                           2102 ;	genGoto
   03C7 C3 33 04           2103 	jp	00113$
                           2104 ;	game.c 323
                           2105 ;	genLabel
   03CA                    2106 00103$:
                           2107 ;	genIpush
                           2108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2109 	ld	hl,#_Map3
   03CD E5                 2110 	push	hl
                           2111 ;	genCall
   03CE CD 45 03           2112 	call	_helper_copy_map
   03D1 E8 02              2113 	lda	sp,2(sp)
                           2114 ;	game.c 324
                           2115 ;	genGoto
   03D3 C3 33 04           2116 	jp	00113$
                           2117 ;	game.c 326
                           2118 ;	genLabel
   03D6                    2119 00104$:
                           2120 ;	genIpush
                           2121 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2122 	ld	hl,#_Map4
   03D9 E5                 2123 	push	hl
                           2124 ;	genCall
   03DA CD 45 03           2125 	call	_helper_copy_map
   03DD E8 02              2126 	lda	sp,2(sp)
                           2127 ;	game.c 327
                           2128 ;	genGoto
   03DF C3 33 04           2129 	jp	00113$
                           2130 ;	game.c 329
                           2131 ;	genLabel
   03E2                    2132 00105$:
                           2133 ;	genIpush
                           2134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2135 	ld	hl,#_MapTest
   03E5 E5                 2136 	push	hl
                           2137 ;	genCall
   03E6 CD 45 03           2138 	call	_helper_copy_map
   03E9 E8 02              2139 	lda	sp,2(sp)
                           2140 ;	game.c 330
                           2141 ;	genGoto
   03EB C3 33 04           2142 	jp	00113$
                           2143 ;	game.c 332
                           2144 ;	genLabel
   03EE                    2145 00106$:
                           2146 ;	genIpush
                           2147 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2148 	ld	hl,#_MapTest
   03F1 E5                 2149 	push	hl
                           2150 ;	genCall
   03F2 CD 45 03           2151 	call	_helper_copy_map
   03F5 E8 02              2152 	lda	sp,2(sp)
                           2153 ;	game.c 333
                           2154 ;	genGoto
   03F7 C3 33 04           2155 	jp	00113$
                           2156 ;	game.c 335
                           2157 ;	genLabel
   03FA                    2158 00107$:
                           2159 ;	genIpush
                           2160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2161 	ld	hl,#_MapTest
   03FD E5                 2162 	push	hl
                           2163 ;	genCall
   03FE CD 45 03           2164 	call	_helper_copy_map
   0401 E8 02              2165 	lda	sp,2(sp)
                           2166 ;	game.c 336
                           2167 ;	genGoto
   0403 C3 33 04           2168 	jp	00113$
                           2169 ;	game.c 338
                           2170 ;	genLabel
   0406                    2171 00108$:
                           2172 ;	genIpush
                           2173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2174 	ld	hl,#_MapTest
   0409 E5                 2175 	push	hl
                           2176 ;	genCall
   040A CD 45 03           2177 	call	_helper_copy_map
   040D E8 02              2178 	lda	sp,2(sp)
                           2179 ;	game.c 339
                           2180 ;	genGoto
   040F C3 33 04           2181 	jp	00113$
                           2182 ;	game.c 341
                           2183 ;	genLabel
   0412                    2184 00109$:
                           2185 ;	genIpush
                           2186 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2187 	ld	hl,#_MapTest
   0415 E5                 2188 	push	hl
                           2189 ;	genCall
   0416 CD 45 03           2190 	call	_helper_copy_map
   0419 E8 02              2191 	lda	sp,2(sp)
                           2192 ;	game.c 342
                           2193 ;	genGoto
   041B C3 33 04           2194 	jp	00113$
                           2195 ;	game.c 344
                           2196 ;	genLabel
   041E                    2197 00110$:
                           2198 ;	genIpush
                           2199 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2200 	ld	hl,#_MapTest
   0421 E5                 2201 	push	hl
                           2202 ;	genCall
   0422 CD 45 03           2203 	call	_helper_copy_map
   0425 E8 02              2204 	lda	sp,2(sp)
                           2205 ;	game.c 345
                           2206 ;	genGoto
   0427 C3 33 04           2207 	jp	00113$
                           2208 ;	game.c 347
                           2209 ;	genLabel
   042A                    2210 00111$:
                           2211 ;	genIpush
                           2212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2213 	ld	hl,#_MapTest
   042D E5                 2214 	push	hl
                           2215 ;	genCall
   042E CD 45 03           2216 	call	_helper_copy_map
   0431 E8 02              2217 	lda	sp,2(sp)
                           2218 ;	game.c 350
                           2219 ;	genLabel
   0433                    2220 00113$:
                           2221 ;	genEndFunction
                           2222 	
   0433 C9                 2223 	ret
   0434                    2224 ___copy_map_end:
                           2225 ;	game.c 354
                           2226 ;	genLabel
                           2227 ;	genFunction
                           2228 ;	---------------------------------
                           2229 ; Function map_init
                           2230 ; ---------------------------------
   0434                    2231 ___map_init_start:
   0434                    2232 _map_init:
                           2233 	
                           2234 ;	game.c 355
                           2235 ;	genCall
                           2236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2237 	call	_copy_map
                           2238 ;	game.c 356
                           2239 ;	genIpush
                           2240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2241 	ld	hl,#_map
   043A E5                 2242 	push	hl
                           2243 ;	genIpush
   043B 21 14 12           2244 	ld	hl,#0x1214
   043E E5                 2245 	push	hl
                           2246 ;	genIpush
   043F 21 00 00           2247 	ld	hl,#0x0000
   0442 E5                 2248 	push	hl
                           2249 ;	genCall
   0443 CD 00 00           2250 	call	_set_bkg_tiles
   0446 E8 06              2251 	lda	sp,6(sp)
                           2252 ;	game.c 357
                           2253 ;	genCall
                           2254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2255 	call	_instanciate_chars
                           2256 ;	genLabel
   044B                    2257 00101$:
                           2258 ;	genEndFunction
                           2259 	
   044B C9                 2260 	ret
   044C                    2261 ___map_init_end:
                           2262 ;	game.c 372
                           2263 ;	genLabel
                           2264 ;	genFunction
                           2265 ;	---------------------------------
                           2266 ; Function instanciate_chars
                           2267 ; ---------------------------------
   044C                    2268 ___instanciate_chars_start:
   044C                    2269 _instanciate_chars:
                           2270 	
                           2271 ;	game.c 374
                           2272 ;	genAssign (pointer)
   044C 11 6D 1A           2273 	ld	de,#_bunny
   044F 3E 08              2274 	ld	a,#0x08
   0451 12                 2275 	ld	(de),a
                           2276 ;	game.c 375
                           2277 ;	genPlus
                           2278 ;	genPlusIncr
   0452 21 6E 1A           2279 	ld	hl,#_bunny + 1
                           2280 ;	genAssign (pointer)
   0455 36 10              2281 	ld	(hl),#0x10
                           2282 ;	game.c 376
                           2283 ;	genPlus
                           2284 ;	genPlusIncr
   0457 23                 2285 	inc	hl
                           2286 ;	genAssign (pointer)
   0458 36 00              2287 	ld	(hl),#0x00
                           2288 ;	game.c 377
                           2289 ;	genPlus
                           2290 ;	genPlusIncr
   045A 23                 2291 	inc	hl
                           2292 ;	genAssign (pointer)
   045B 36 01              2293 	ld	(hl),#0x01
                           2294 ;	game.c 378
                           2295 ;	genPlus
                           2296 ;	genPlusIncr
   045D 23                 2297 	inc	hl
                           2298 ;	genAssign (pointer)
   045E 36 02              2299 	ld	(hl),#0x02
                           2300 ;	game.c 379
                           2301 ;	genPlus
                           2302 ;	genPlusIncr
   0460 23                 2303 	inc	hl
                           2304 ;	genAssign (pointer)
   0461 36 10              2305 	ld	(hl),#0x10
                           2306 ;	game.c 380
                           2307 ;	genPlus
                           2308 ;	genPlusIncr
   0463 23                 2309 	inc	hl
                           2310 ;	genAssign (pointer)
   0464 36 11              2311 	ld	(hl),#0x11
                           2312 ;	game.c 381
                           2313 ;	genPlus
                           2314 ;	genPlusIncr
   0466 23                 2315 	inc	hl
                           2316 ;	genAssign (pointer)
   0467 36 12              2317 	ld	(hl),#0x12
                           2318 ;	game.c 382
                           2319 ;	genPlus
                           2320 ;	genPlusIncr
   0469 23                 2321 	inc	hl
                           2322 ;	genAssign (pointer)
   046A 36 00              2323 	ld	(hl),#0x00
                           2324 ;	game.c 383
                           2325 ;	genPlus
                           2326 ;	genPlusIncr
   046C 23                 2327 	inc	hl
                           2328 ;	genAssign (pointer)
   046D 36 00              2329 	ld	(hl),#0x00
                           2330 ;	game.c 384
                           2331 ;	genPlus
                           2332 ;	genPlusIncr
   046F 23                 2333 	inc	hl
   0470 23                 2334 	inc	hl
                           2335 ;	genAssign (pointer)
   0471 36 01              2336 	ld	(hl),#0x01
                           2337 ;	game.c 385
                           2338 ;	genPlus
                           2339 ;	genPlusIncr
   0473 23                 2340 	inc	hl
                           2341 ;	genAssign (pointer)
   0474 36 01              2342 	ld	(hl),#0x01
                           2343 ;	game.c 387
                           2344 ;	genAssign (pointer)
   0476 11 7A 1A           2345 	ld	de,#_dog1
   0479 3E 10              2346 	ld	a,#0x10
   047B 12                 2347 	ld	(de),a
                           2348 ;	game.c 388
                           2349 ;	genPlus
                           2350 ;	genPlusIncr
   047C 21 7B 1A           2351 	ld	hl,#_dog1 + 1
                           2352 ;	genAssign (pointer)
   047F 36 10              2353 	ld	(hl),#0x10
                           2354 ;	game.c 389
                           2355 ;	genPlus
                           2356 ;	genPlusIncr
   0481 23                 2357 	inc	hl
                           2358 ;	genAssign (pointer)
   0482 36 03              2359 	ld	(hl),#0x03
                           2360 ;	game.c 390
                           2361 ;	genPlus
                           2362 ;	genPlusIncr
   0484 23                 2363 	inc	hl
                           2364 ;	genAssign (pointer)
   0485 36 04              2365 	ld	(hl),#0x04
                           2366 ;	game.c 391
                           2367 ;	genPlus
                           2368 ;	genPlusIncr
   0487 23                 2369 	inc	hl
                           2370 ;	genAssign (pointer)
   0488 36 05              2371 	ld	(hl),#0x05
                           2372 ;	game.c 392
                           2373 ;	genPlus
                           2374 ;	genPlusIncr
   048A 23                 2375 	inc	hl
                           2376 ;	genAssign (pointer)
   048B 36 13              2377 	ld	(hl),#0x13
                           2378 ;	game.c 393
                           2379 ;	genPlus
                           2380 ;	genPlusIncr
   048D 23                 2381 	inc	hl
                           2382 ;	genAssign (pointer)
   048E 36 14              2383 	ld	(hl),#0x14
                           2384 ;	game.c 394
                           2385 ;	genPlus
                           2386 ;	genPlusIncr
   0490 23                 2387 	inc	hl
                           2388 ;	genAssign (pointer)
   0491 36 15              2389 	ld	(hl),#0x15
                           2390 ;	game.c 395
                           2391 ;	genPlus
                           2392 ;	genPlusIncr
   0493 23                 2393 	inc	hl
                           2394 ;	genAssign (pointer)
   0494 36 00              2395 	ld	(hl),#0x00
                           2396 ;	game.c 396
                           2397 ;	genPlus
                           2398 ;	genPlusIncr
   0496 23                 2399 	inc	hl
                           2400 ;	genAssign (pointer)
   0497 36 00              2401 	ld	(hl),#0x00
                           2402 ;	game.c 397
                           2403 ;	genPlus
                           2404 ;	genPlusIncr
   0499 23                 2405 	inc	hl
   049A 23                 2406 	inc	hl
                           2407 ;	genAssign (pointer)
   049B 36 02              2408 	ld	(hl),#0x02
                           2409 ;	game.c 398
                           2410 ;	genPlus
                           2411 ;	genPlusIncr
   049D 23                 2412 	inc	hl
                           2413 ;	genAssign (pointer)
   049E 36 00              2414 	ld	(hl),#0x00
                           2415 ;	game.c 400
                           2416 ;	genAssign (pointer)
   04A0 11 87 1A           2417 	ld	de,#_dog2
   04A3 3E 08              2418 	ld	a,#0x08
   04A5 12                 2419 	ld	(de),a
                           2420 ;	game.c 401
                           2421 ;	genPlus
                           2422 ;	genPlusIncr
   04A6 21 88 1A           2423 	ld	hl,#_dog2 + 1
                           2424 ;	genAssign (pointer)
   04A9 36 18              2425 	ld	(hl),#0x18
                           2426 ;	game.c 402
                           2427 ;	genPlus
                           2428 ;	genPlusIncr
   04AB 23                 2429 	inc	hl
                           2430 ;	genAssign (pointer)
   04AC 36 06              2431 	ld	(hl),#0x06
                           2432 ;	game.c 403
                           2433 ;	genPlus
                           2434 ;	genPlusIncr
   04AE 23                 2435 	inc	hl
                           2436 ;	genAssign (pointer)
   04AF 36 07              2437 	ld	(hl),#0x07
                           2438 ;	game.c 404
                           2439 ;	genPlus
                           2440 ;	genPlusIncr
   04B1 23                 2441 	inc	hl
                           2442 ;	genAssign (pointer)
   04B2 36 08              2443 	ld	(hl),#0x08
                           2444 ;	game.c 405
                           2445 ;	genPlus
                           2446 ;	genPlusIncr
   04B4 23                 2447 	inc	hl
                           2448 ;	genAssign (pointer)
   04B5 36 13              2449 	ld	(hl),#0x13
                           2450 ;	game.c 406
                           2451 ;	genPlus
                           2452 ;	genPlusIncr
   04B7 23                 2453 	inc	hl
                           2454 ;	genAssign (pointer)
   04B8 36 14              2455 	ld	(hl),#0x14
                           2456 ;	game.c 407
                           2457 ;	genPlus
                           2458 ;	genPlusIncr
   04BA 23                 2459 	inc	hl
                           2460 ;	genAssign (pointer)
   04BB 36 15              2461 	ld	(hl),#0x15
                           2462 ;	game.c 408
                           2463 ;	genPlus
                           2464 ;	genPlusIncr
   04BD 23                 2465 	inc	hl
                           2466 ;	genAssign (pointer)
   04BE 36 00              2467 	ld	(hl),#0x00
                           2468 ;	game.c 409
                           2469 ;	genPlus
                           2470 ;	genPlusIncr
   04C0 23                 2471 	inc	hl
                           2472 ;	genAssign (pointer)
   04C1 36 00              2473 	ld	(hl),#0x00
                           2474 ;	game.c 410
                           2475 ;	genPlus
                           2476 ;	genPlusIncr
   04C3 23                 2477 	inc	hl
   04C4 23                 2478 	inc	hl
                           2479 ;	genAssign (pointer)
   04C5 36 03              2480 	ld	(hl),#0x03
                           2481 ;	game.c 411
                           2482 ;	genPlus
                           2483 ;	genPlusIncr
   04C7 23                 2484 	inc	hl
                           2485 ;	genAssign (pointer)
   04C8 36 00              2486 	ld	(hl),#0x00
                           2487 ;	game.c 413
                           2488 ;	genAssign (pointer)
   04CA 11 94 1A           2489 	ld	de,#_cat
   04CD 3E 10              2490 	ld	a,#0x10
   04CF 12                 2491 	ld	(de),a
                           2492 ;	game.c 414
                           2493 ;	genPlus
                           2494 ;	genPlusIncr
   04D0 21 95 1A           2495 	ld	hl,#_cat + 1
                           2496 ;	genAssign (pointer)
   04D3 36 18              2497 	ld	(hl),#0x18
                           2498 ;	game.c 415
                           2499 ;	genPlus
                           2500 ;	genPlusIncr
   04D5 23                 2501 	inc	hl
                           2502 ;	genAssign (pointer)
   04D6 36 09              2503 	ld	(hl),#0x09
                           2504 ;	game.c 416
                           2505 ;	genPlus
                           2506 ;	genPlusIncr
   04D8 23                 2507 	inc	hl
                           2508 ;	genAssign (pointer)
   04D9 36 0A              2509 	ld	(hl),#0x0A
                           2510 ;	game.c 417
                           2511 ;	genPlus
                           2512 ;	genPlusIncr
   04DB 23                 2513 	inc	hl
                           2514 ;	genAssign (pointer)
   04DC 36 05              2515 	ld	(hl),#0x05
                           2516 ;	game.c 418
                           2517 ;	genPlus
                           2518 ;	genPlusIncr
   04DE 23                 2519 	inc	hl
                           2520 ;	genAssign (pointer)
   04DF 36 13              2521 	ld	(hl),#0x13
                           2522 ;	game.c 419
                           2523 ;	genPlus
                           2524 ;	genPlusIncr
   04E1 23                 2525 	inc	hl
                           2526 ;	genAssign (pointer)
   04E2 36 14              2527 	ld	(hl),#0x14
                           2528 ;	game.c 420
                           2529 ;	genPlus
                           2530 ;	genPlusIncr
   04E4 23                 2531 	inc	hl
                           2532 ;	genAssign (pointer)
   04E5 36 15              2533 	ld	(hl),#0x15
                           2534 ;	game.c 421
                           2535 ;	genPlus
                           2536 ;	genPlusIncr
   04E7 23                 2537 	inc	hl
                           2538 ;	genAssign (pointer)
   04E8 36 00              2539 	ld	(hl),#0x00
                           2540 ;	game.c 422
                           2541 ;	genPlus
                           2542 ;	genPlusIncr
   04EA 23                 2543 	inc	hl
                           2544 ;	genAssign (pointer)
   04EB 36 00              2545 	ld	(hl),#0x00
                           2546 ;	game.c 423
                           2547 ;	genPlus
                           2548 ;	genPlusIncr
   04ED 23                 2549 	inc	hl
   04EE 23                 2550 	inc	hl
                           2551 ;	genAssign (pointer)
   04EF 36 04              2552 	ld	(hl),#0x04
                           2553 ;	game.c 424
                           2554 ;	genPlus
                           2555 ;	genPlusIncr
   04F1 23                 2556 	inc	hl
                           2557 ;	genAssign (pointer)
   04F2 36 00              2558 	ld	(hl),#0x00
                           2559 ;	game.c 427
                           2560 ;	genIpush
                           2561 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04F4 21 6D 1A           2562 	ld	hl,#_bunny
   04F7 E5                 2563 	push	hl
                           2564 ;	genCall
   04F8 CD 0C 18           2565 	call	_set_character_sprite
   04FB E8 02              2566 	lda	sp,2(sp)
                           2567 ;	game.c 428
                           2568 ;	genIpush
                           2569 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04FD 21 7A 1A           2570 	ld	hl,#_dog1
   0500 E5                 2571 	push	hl
                           2572 ;	genCall
   0501 CD 0C 18           2573 	call	_set_character_sprite
   0504 E8 02              2574 	lda	sp,2(sp)
                           2575 ;	game.c 429
                           2576 ;	genIpush
                           2577 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0506 21 87 1A           2578 	ld	hl,#_dog2
   0509 E5                 2579 	push	hl
                           2580 ;	genCall
   050A CD 0C 18           2581 	call	_set_character_sprite
   050D E8 02              2582 	lda	sp,2(sp)
                           2583 ;	game.c 430
                           2584 ;	genIpush
                           2585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   050F 21 94 1A           2586 	ld	hl,#_cat
   0512 E5                 2587 	push	hl
                           2588 ;	genCall
   0513 CD 0C 18           2589 	call	_set_character_sprite
   0516 E8 02              2590 	lda	sp,2(sp)
                           2591 ;	genLabel
   0518                    2592 00101$:
                           2593 ;	genEndFunction
                           2594 	
   0518 C9                 2595 	ret
   0519                    2596 ___instanciate_chars_end:
                           2597 ;	game.c 434
                           2598 ;	genLabel
                           2599 ;	genFunction
                           2600 ;	---------------------------------
                           2601 ; Function got_key
                           2602 ; ---------------------------------
   0519                    2603 ___got_key_start:
   0519                    2604 _got_key:
   0519 E8 FC              2605 	lda	sp,-4(sp)
                           2606 ;	game.c 435
                           2607 ;	genAssign
                           2608 ;	AOP_HL for _player
   051B 21 AE 1A           2609 	ld	hl,#_player
   051E 4E                 2610 	ld	c,(hl)
   051F 23                 2611 	inc	hl
   0520 46                 2612 	ld	b,(hl)
                           2613 ;	genPlus
                           2614 ;	genPlusIncr
   0521 03                 2615 	inc	bc
                           2616 ;	genPointerGet
   0522 0A                 2617 	ld	a,(bc)
   0523 4F                 2618 	ld	c,a
                           2619 ;	genAssign
                           2620 ;	AOP_HL for _player
                           2621 ;	AOP_STK for _got_key_sloc0_1_0
   0524 2B                 2622 	dec	hl
   0525 2A                 2623 	ld	a,(hl+)
   0526 5E                 2624 	ld	e,(hl)
   0527 F8 00              2625 	lda	hl,0(sp)
   0529 22                 2626 	ld	(hl+),a
   052A 73                 2627 	ld	(hl),e
                           2628 ;	genPointerGet
                           2629 ;	AOP_STK for _got_key_sloc0_1_0
   052B 2B                 2630 	dec	hl
   052C 5E                 2631 	ld	e,(hl)
   052D 23                 2632 	inc	hl
   052E 56                 2633 	ld	d,(hl)
   052F 1A                 2634 	ld	a,(de)
   0530 47                 2635 	ld	b,a
                           2636 ;	genIpush
                           2637 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0531 79                 2638 	ld	a,c
   0532 F5                 2639 	push	af
   0533 33                 2640 	inc	sp
                           2641 ;	genIpush
   0534 78                 2642 	ld	a,b
   0535 F5                 2643 	push	af
   0536 33                 2644 	inc	sp
                           2645 ;	genCall
   0537 CD 8F 0B           2646 	call	_get_player_map_position
   053A 42                 2647 	ld	b,d
   053B 4B                 2648 	ld	c,e
   053C E8 02              2649 	lda	sp,2(sp)
                           2650 ;	genAssign
                           2651 ;	(registers are the same)
                           2652 ;	game.c 438
                           2653 ;	genPlus
                           2654 ;	Can't optimise plus by inc, falling back to the normal way
   053E 21 05 19           2655 	ld	hl,#_map
   0541 09                 2656 	add	hl,bc
   0542 4D                 2657 	ld	c,l
   0543 44                 2658 	ld	b,h
                           2659 ;	genPointerGet
   0544 0A                 2660 	ld	a,(bc)
   0545 4F                 2661 	ld	c,a
                           2662 ;	genCast
                           2663 ; Removed redundent load
   0546 06 00              2664 	ld	b,#0x00
                           2665 ;	genCmpEq
                           2666 ; genCmpEq: left 2, right 2, result 0
   0548 79                 2667 	ld	a,c
   0549 FE 2E              2668 	cp	a,#0x2E
   054B C2 55 05           2669 	jp	nz,00116$
   054E 78                 2670 	ld	a,b
   054F B7                 2671 	or	a,a
   0550 C2 C3 05           2672 	jp	nz,00109$
   0553 18 03              2673 	jr	00117$
   0555                    2674 00116$:
   0555 C3 C3 05           2675 	jp	00109$
   0558                    2676 00117$:
                           2677 ;	game.c 443
                           2678 ;	genAssign
                           2679 ;	AOP_STK for _got_key_map_position_2_2
   0558 F8 02              2680 	lda	hl,2(sp)
   055A 36 68              2681 	ld	(hl),#0x68
   055C 23                 2682 	inc	hl
   055D 36 01              2683 	ld	(hl),#0x01
                           2684 ;	game.c 444
                           2685 ;	genLabel
   055F                    2686 00104$:
                           2687 ;	genCmpEq
                           2688 ;	AOP_STK for _got_key_map_position_2_2
                           2689 ; genCmpEq: left 2, right 2, result 0
   055F F8 02              2690 	lda	hl,2(sp)
   0561 2A                 2691 	ld	a,(hl+)
   0562 B6                 2692 	or	a,(hl)
   0563 CA B2 05           2693 	jp	z,00106$
   0566                    2694 00118$:
                           2695 ;	game.c 445
                           2696 ;	genMinus
                           2697 ;	AOP_STK for _got_key_map_position_2_2
   0566 F8 02              2698 	lda	hl,2(sp)
   0568 5E                 2699 	ld	e,(hl)
   0569 23                 2700 	inc	hl
   056A 56                 2701 	ld	d,(hl)
   056B 1B                 2702 	dec	de
   056C 2B                 2703 	dec	hl
   056D 73                 2704 	ld	(hl),e
   056E 23                 2705 	inc	hl
   056F 72                 2706 	ld	(hl),d
                           2707 ;	game.c 447
                           2708 ;	genPlus
                           2709 ;	AOP_STK for _got_key_map_position_2_2
                           2710 ;	AOP_STK for _got_key_sloc0_1_0
                           2711 ;	Can't optimise plus by inc, falling back to the normal way
   0570 11 05 19           2712 	ld	de,#_map
   0573 2B                 2713 	dec	hl
   0574 2A                 2714 	ld	a,(hl+)
   0575 66                 2715 	ld	h,(hl)
   0576 6F                 2716 	ld	l,a
   0577 19                 2717 	add	hl,de
   0578 7D                 2718 	ld	a,l
   0579 54                 2719 	ld	d,h
   057A F8 00              2720 	lda	hl,0(sp)
                           2721 ;	genPointerGet
                           2722 ;	AOP_STK for _got_key_sloc0_1_0
   057C 22                 2723 	ld	(hl+),a
   057D 72                 2724 	ld	(hl),d
   057E 5F                 2725 	ld	e,a
   057F 1A                 2726 	ld	a,(de)
   0580 4F                 2727 	ld	c,a
                           2728 ;	genCast
                           2729 ; Removed redundent load
   0581 06 00              2730 	ld	b,#0x00
                           2731 ;	genCmpEq
                           2732 ; genCmpEq: left 2, right 2, result 0
   0583 79                 2733 	ld	a,c
   0584 FE 29              2734 	cp	a,#0x29
   0586 C2 8E 05           2735 	jp	nz,00119$
   0589 78                 2736 	ld	a,b
   058A B7                 2737 	or	a,a
   058B CA 9C 05           2738 	jp	z,00101$
   058E                    2739 00119$:
                           2740 ;	genCmpEq
                           2741 ; genCmpEq: left 2, right 2, result 0
   058E 79                 2742 	ld	a,c
   058F FE 2E              2743 	cp	a,#0x2E
   0591 C2 99 05           2744 	jp	nz,00120$
   0594 78                 2745 	ld	a,b
   0595 B7                 2746 	or	a,a
   0596 CA A7 05           2747 	jp	z,00102$
   0599                    2748 00120$:
                           2749 ;	genGoto
   0599 C3 5F 05           2750 	jp	00104$
                           2751 ;	game.c 449
                           2752 ;	genLabel
   059C                    2753 00101$:
                           2754 ;	genAssign (pointer)
                           2755 ;	AOP_STK for _got_key_sloc0_1_0
   059C F8 00              2756 	lda	hl,0(sp)
   059E 5E                 2757 	ld	e,(hl)
   059F 23                 2758 	inc	hl
   05A0 56                 2759 	ld	d,(hl)
   05A1 3E 2A              2760 	ld	a,#0x2A
   05A3 12                 2761 	ld	(de),a
                           2762 ;	game.c 450
                           2763 ;	genGoto
   05A4 C3 5F 05           2764 	jp	00104$
                           2765 ;	game.c 452
                           2766 ;	genLabel
   05A7                    2767 00102$:
                           2768 ;	genAssign (pointer)
                           2769 ;	AOP_STK for _got_key_sloc0_1_0
   05A7 F8 00              2770 	lda	hl,0(sp)
   05A9 5E                 2771 	ld	e,(hl)
   05AA 23                 2772 	inc	hl
   05AB 56                 2773 	ld	d,(hl)
   05AC 3E 09              2774 	ld	a,#0x09
   05AE 12                 2775 	ld	(de),a
                           2776 ;	game.c 455
                           2777 ;	genGoto
   05AF C3 5F 05           2778 	jp	00104$
                           2779 ;	genLabel
   05B2                    2780 00106$:
                           2781 ;	game.c 457
                           2782 ;	genIpush
                           2783 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05B2 21 05 19           2784 	ld	hl,#_map
   05B5 E5                 2785 	push	hl
                           2786 ;	genIpush
   05B6 21 14 12           2787 	ld	hl,#0x1214
   05B9 E5                 2788 	push	hl
                           2789 ;	genIpush
   05BA 21 00 00           2790 	ld	hl,#0x0000
   05BD E5                 2791 	push	hl
                           2792 ;	genCall
   05BE CD 00 00           2793 	call	_set_bkg_tiles
   05C1 E8 06              2794 	lda	sp,6(sp)
                           2795 ;	genLabel
   05C3                    2796 00109$:
                           2797 ;	genEndFunction
   05C3 E8 04              2798 	lda	sp,4(sp)
   05C5 C9                 2799 	ret
   05C6                    2800 ___got_key_end:
                           2801 ;	game.c 461
                           2802 ;	genLabel
                           2803 ;	genFunction
                           2804 ;	---------------------------------
                           2805 ; Function got_door
                           2806 ; ---------------------------------
   05C6                    2807 ___got_door_start:
   05C6                    2808 _got_door:
   05C6 E8 FE              2809 	lda	sp,-2(sp)
                           2810 ;	game.c 462
                           2811 ;	genAssign
                           2812 ;	AOP_HL for _player
   05C8 21 AE 1A           2813 	ld	hl,#_player
   05CB 4E                 2814 	ld	c,(hl)
   05CC 23                 2815 	inc	hl
   05CD 46                 2816 	ld	b,(hl)
                           2817 ;	genPlus
                           2818 ;	genPlusIncr
   05CE 03                 2819 	inc	bc
                           2820 ;	genPointerGet
   05CF 0A                 2821 	ld	a,(bc)
   05D0 4F                 2822 	ld	c,a
                           2823 ;	genAssign
                           2824 ;	AOP_HL for _player
                           2825 ;	AOP_STK for _got_door_sloc0_1_0
   05D1 2B                 2826 	dec	hl
   05D2 2A                 2827 	ld	a,(hl+)
   05D3 5E                 2828 	ld	e,(hl)
   05D4 F8 00              2829 	lda	hl,0(sp)
   05D6 22                 2830 	ld	(hl+),a
   05D7 73                 2831 	ld	(hl),e
                           2832 ;	genPointerGet
                           2833 ;	AOP_STK for _got_door_sloc0_1_0
   05D8 2B                 2834 	dec	hl
   05D9 5E                 2835 	ld	e,(hl)
   05DA 23                 2836 	inc	hl
   05DB 56                 2837 	ld	d,(hl)
   05DC 1A                 2838 	ld	a,(de)
   05DD 47                 2839 	ld	b,a
                           2840 ;	genIpush
                           2841 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05DE 79                 2842 	ld	a,c
   05DF F5                 2843 	push	af
   05E0 33                 2844 	inc	sp
                           2845 ;	genIpush
   05E1 78                 2846 	ld	a,b
   05E2 F5                 2847 	push	af
   05E3 33                 2848 	inc	sp
                           2849 ;	genCall
   05E4 CD 8F 0B           2850 	call	_get_player_map_position
   05E7 42                 2851 	ld	b,d
   05E8 4B                 2852 	ld	c,e
   05E9 E8 02              2853 	lda	sp,2(sp)
                           2854 ;	genAssign
                           2855 ;	(registers are the same)
                           2856 ;	game.c 464
                           2857 ;	genPlus
                           2858 ;	Can't optimise plus by inc, falling back to the normal way
   05EB 21 05 19           2859 	ld	hl,#_map
   05EE 09                 2860 	add	hl,bc
   05EF 4D                 2861 	ld	c,l
   05F0 44                 2862 	ld	b,h
                           2863 ;	genPointerGet
   05F1 0A                 2864 	ld	a,(bc)
   05F2 4F                 2865 	ld	c,a
                           2866 ;	genCast
                           2867 ; Removed redundent load
   05F3 06 00              2868 	ld	b,#0x00
                           2869 ;	genCmpEq
                           2870 ; genCmpEq: left 2, right 2, result 0
   05F5 79                 2871 	ld	a,c
   05F6 FE 65              2872 	cp	a,#0x65
   05F8 C2 00 06           2873 	jp	nz,00144$
   05FB 78                 2874 	ld	a,b
   05FC B7                 2875 	or	a,a
   05FD CA D4 06           2876 	jp	z,00101$
   0600                    2877 00144$:
                           2878 ;	genCmpEq
                           2879 ; genCmpEq: left 2, right 2, result 0
   0600 79                 2880 	ld	a,c
   0601 FE 66              2881 	cp	a,#0x66
   0603 C2 0B 06           2882 	jp	nz,00145$
   0606 78                 2883 	ld	a,b
   0607 B7                 2884 	or	a,a
   0608 CA DF 06           2885 	jp	z,00102$
   060B                    2886 00145$:
                           2887 ;	genCmpEq
                           2888 ; genCmpEq: left 2, right 2, result 0
   060B 79                 2889 	ld	a,c
   060C FE 67              2890 	cp	a,#0x67
   060E C2 16 06           2891 	jp	nz,00146$
   0611 78                 2892 	ld	a,b
   0612 B7                 2893 	or	a,a
   0613 CA EA 06           2894 	jp	z,00103$
   0616                    2895 00146$:
                           2896 ;	genCmpEq
                           2897 ; genCmpEq: left 2, right 2, result 0
   0616 79                 2898 	ld	a,c
   0617 FE 68              2899 	cp	a,#0x68
   0619 C2 21 06           2900 	jp	nz,00147$
   061C 78                 2901 	ld	a,b
   061D B7                 2902 	or	a,a
   061E CA F5 06           2903 	jp	z,00104$
   0621                    2904 00147$:
                           2905 ;	genCmpEq
                           2906 ; genCmpEq: left 2, right 2, result 0
   0621 79                 2907 	ld	a,c
   0622 FE 69              2908 	cp	a,#0x69
   0624 C2 2C 06           2909 	jp	nz,00148$
   0627 78                 2910 	ld	a,b
   0628 B7                 2911 	or	a,a
   0629 CA 00 07           2912 	jp	z,00105$
   062C                    2913 00148$:
                           2914 ;	genCmpEq
                           2915 ; genCmpEq: left 2, right 2, result 0
   062C 79                 2916 	ld	a,c
   062D FE 6A              2917 	cp	a,#0x6A
   062F C2 37 06           2918 	jp	nz,00149$
   0632 78                 2919 	ld	a,b
   0633 B7                 2920 	or	a,a
   0634 CA 0B 07           2921 	jp	z,00106$
   0637                    2922 00149$:
                           2923 ;	genCmpEq
                           2924 ; genCmpEq: left 2, right 2, result 0
   0637 79                 2925 	ld	a,c
   0638 FE 6B              2926 	cp	a,#0x6B
   063A C2 42 06           2927 	jp	nz,00150$
   063D 78                 2928 	ld	a,b
   063E B7                 2929 	or	a,a
   063F CA 16 07           2930 	jp	z,00107$
   0642                    2931 00150$:
                           2932 ;	genCmpEq
                           2933 ; genCmpEq: left 2, right 2, result 0
   0642 79                 2934 	ld	a,c
   0643 FE 6C              2935 	cp	a,#0x6C
   0645 C2 4D 06           2936 	jp	nz,00151$
   0648 78                 2937 	ld	a,b
   0649 B7                 2938 	or	a,a
   064A CA 21 07           2939 	jp	z,00108$
   064D                    2940 00151$:
                           2941 ;	genCmpEq
                           2942 ; genCmpEq: left 2, right 2, result 0
   064D 79                 2943 	ld	a,c
   064E FE 6D              2944 	cp	a,#0x6D
   0650 C2 58 06           2945 	jp	nz,00152$
   0653 78                 2946 	ld	a,b
   0654 B7                 2947 	or	a,a
   0655 CA 2C 07           2948 	jp	z,00109$
   0658                    2949 00152$:
                           2950 ;	genCmpEq
                           2951 ; genCmpEq: left 2, right 2, result 0
   0658 79                 2952 	ld	a,c
   0659 FE 6E              2953 	cp	a,#0x6E
   065B C2 63 06           2954 	jp	nz,00153$
   065E 78                 2955 	ld	a,b
   065F B7                 2956 	or	a,a
   0660 CA 37 07           2957 	jp	z,00110$
   0663                    2958 00153$:
                           2959 ;	genCmpEq
                           2960 ; genCmpEq: left 2, right 2, result 0
   0663 79                 2961 	ld	a,c
   0664 FE 6F              2962 	cp	a,#0x6F
   0666 C2 6E 06           2963 	jp	nz,00154$
   0669 78                 2964 	ld	a,b
   066A B7                 2965 	or	a,a
   066B CA 42 07           2966 	jp	z,00111$
   066E                    2967 00154$:
                           2968 ;	genCmpEq
                           2969 ; genCmpEq: left 2, right 2, result 0
   066E 79                 2970 	ld	a,c
   066F FE 70              2971 	cp	a,#0x70
   0671 C2 79 06           2972 	jp	nz,00155$
   0674 78                 2973 	ld	a,b
   0675 B7                 2974 	or	a,a
   0676 CA 4D 07           2975 	jp	z,00112$
   0679                    2976 00155$:
                           2977 ;	genCmpEq
                           2978 ; genCmpEq: left 2, right 2, result 0
   0679 79                 2979 	ld	a,c
   067A FE 71              2980 	cp	a,#0x71
   067C C2 84 06           2981 	jp	nz,00156$
   067F 78                 2982 	ld	a,b
   0680 B7                 2983 	or	a,a
   0681 CA 58 07           2984 	jp	z,00113$
   0684                    2985 00156$:
                           2986 ;	genCmpEq
                           2987 ; genCmpEq: left 2, right 2, result 0
   0684 79                 2988 	ld	a,c
   0685 FE 72              2989 	cp	a,#0x72
   0687 C2 8F 06           2990 	jp	nz,00157$
   068A 78                 2991 	ld	a,b
   068B B7                 2992 	or	a,a
   068C CA 63 07           2993 	jp	z,00114$
   068F                    2994 00157$:
                           2995 ;	genCmpEq
                           2996 ; genCmpEq: left 2, right 2, result 0
   068F 79                 2997 	ld	a,c
   0690 FE 73              2998 	cp	a,#0x73
   0692 C2 9A 06           2999 	jp	nz,00158$
   0695 78                 3000 	ld	a,b
   0696 B7                 3001 	or	a,a
   0697 CA 6E 07           3002 	jp	z,00115$
   069A                    3003 00158$:
                           3004 ;	genCmpEq
                           3005 ; genCmpEq: left 2, right 2, result 0
   069A 79                 3006 	ld	a,c
   069B FE 74              3007 	cp	a,#0x74
   069D C2 A5 06           3008 	jp	nz,00159$
   06A0 78                 3009 	ld	a,b
   06A1 B7                 3010 	or	a,a
   06A2 CA 79 07           3011 	jp	z,00116$
   06A5                    3012 00159$:
                           3013 ;	genCmpEq
                           3014 ; genCmpEq: left 2, right 2, result 0
   06A5 79                 3015 	ld	a,c
   06A6 FE 75              3016 	cp	a,#0x75
   06A8 C2 B0 06           3017 	jp	nz,00160$
   06AB 78                 3018 	ld	a,b
   06AC B7                 3019 	or	a,a
   06AD CA 84 07           3020 	jp	z,00117$
   06B0                    3021 00160$:
                           3022 ;	genCmpEq
                           3023 ; genCmpEq: left 2, right 2, result 0
   06B0 79                 3024 	ld	a,c
   06B1 FE 76              3025 	cp	a,#0x76
   06B3 C2 BB 06           3026 	jp	nz,00161$
   06B6 78                 3027 	ld	a,b
   06B7 B7                 3028 	or	a,a
   06B8 CA 8F 07           3029 	jp	z,00118$
   06BB                    3030 00161$:
                           3031 ;	genCmpEq
                           3032 ; genCmpEq: left 2, right 2, result 0
   06BB 79                 3033 	ld	a,c
   06BC FE 77              3034 	cp	a,#0x77
   06BE C2 C6 06           3035 	jp	nz,00162$
   06C1 78                 3036 	ld	a,b
   06C2 B7                 3037 	or	a,a
   06C3 CA 9A 07           3038 	jp	z,00119$
   06C6                    3039 00162$:
                           3040 ;	genCmpEq
                           3041 ; genCmpEq: left 2, right 2, result 0
   06C6 79                 3042 	ld	a,c
   06C7 FE 78              3043 	cp	a,#0x78
   06C9 C2 D1 06           3044 	jp	nz,00163$
   06CC 78                 3045 	ld	a,b
   06CD B7                 3046 	or	a,a
   06CE CA A5 07           3047 	jp	z,00120$
   06D1                    3048 00163$:
                           3049 ;	genGoto
   06D1 C3 AD 07           3050 	jp	00122$
                           3051 ;	game.c 466
                           3052 ;	genLabel
   06D4                    3053 00101$:
                           3054 ;	genAssign
                           3055 ;	AOP_HL for _current_map
   06D4 21 04 19           3056 	ld	hl,#_current_map
   06D7 36 01              3057 	ld	(hl),#0x01
                           3058 ;	game.c 467
                           3059 ;	genCall
                           3060 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06D9 CD 34 04           3061 	call	_map_init
                           3062 ;	game.c 468
                           3063 ;	genGoto
   06DC C3 AD 07           3064 	jp	00122$
                           3065 ;	game.c 470
                           3066 ;	genLabel
   06DF                    3067 00102$:
                           3068 ;	genAssign
                           3069 ;	AOP_HL for _current_map
   06DF 21 04 19           3070 	ld	hl,#_current_map
   06E2 36 02              3071 	ld	(hl),#0x02
                           3072 ;	game.c 471
                           3073 ;	genCall
                           3074 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06E4 CD 34 04           3075 	call	_map_init
                           3076 ;	game.c 472
                           3077 ;	genGoto
   06E7 C3 AD 07           3078 	jp	00122$
                           3079 ;	game.c 474
                           3080 ;	genLabel
   06EA                    3081 00103$:
                           3082 ;	genAssign
                           3083 ;	AOP_HL for _current_map
   06EA 21 04 19           3084 	ld	hl,#_current_map
   06ED 36 03              3085 	ld	(hl),#0x03
                           3086 ;	game.c 475
                           3087 ;	genCall
                           3088 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06EF CD 34 04           3089 	call	_map_init
                           3090 ;	game.c 476
                           3091 ;	genGoto
   06F2 C3 AD 07           3092 	jp	00122$
                           3093 ;	game.c 478
                           3094 ;	genLabel
   06F5                    3095 00104$:
                           3096 ;	genAssign
                           3097 ;	AOP_HL for _current_map
   06F5 21 04 19           3098 	ld	hl,#_current_map
   06F8 36 04              3099 	ld	(hl),#0x04
                           3100 ;	game.c 479
                           3101 ;	genCall
                           3102 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06FA CD 34 04           3103 	call	_map_init
                           3104 ;	game.c 480
                           3105 ;	genGoto
   06FD C3 AD 07           3106 	jp	00122$
                           3107 ;	game.c 482
                           3108 ;	genLabel
   0700                    3109 00105$:
                           3110 ;	genAssign
                           3111 ;	AOP_HL for _current_map
   0700 21 04 19           3112 	ld	hl,#_current_map
   0703 36 05              3113 	ld	(hl),#0x05
                           3114 ;	game.c 483
                           3115 ;	genCall
                           3116 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0705 CD 34 04           3117 	call	_map_init
                           3118 ;	game.c 484
                           3119 ;	genGoto
   0708 C3 AD 07           3120 	jp	00122$
                           3121 ;	game.c 486
                           3122 ;	genLabel
   070B                    3123 00106$:
                           3124 ;	genAssign
                           3125 ;	AOP_HL for _current_map
   070B 21 04 19           3126 	ld	hl,#_current_map
   070E 36 06              3127 	ld	(hl),#0x06
                           3128 ;	game.c 487
                           3129 ;	genCall
                           3130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0710 CD 34 04           3131 	call	_map_init
                           3132 ;	game.c 488
                           3133 ;	genGoto
   0713 C3 AD 07           3134 	jp	00122$
                           3135 ;	game.c 490
                           3136 ;	genLabel
   0716                    3137 00107$:
                           3138 ;	genAssign
                           3139 ;	AOP_HL for _current_map
   0716 21 04 19           3140 	ld	hl,#_current_map
   0719 36 07              3141 	ld	(hl),#0x07
                           3142 ;	game.c 491
                           3143 ;	genCall
                           3144 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   071B CD 34 04           3145 	call	_map_init
                           3146 ;	game.c 492
                           3147 ;	genGoto
   071E C3 AD 07           3148 	jp	00122$
                           3149 ;	game.c 494
                           3150 ;	genLabel
   0721                    3151 00108$:
                           3152 ;	genAssign
                           3153 ;	AOP_HL for _current_map
   0721 21 04 19           3154 	ld	hl,#_current_map
   0724 36 08              3155 	ld	(hl),#0x08
                           3156 ;	game.c 495
                           3157 ;	genCall
                           3158 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0726 CD 34 04           3159 	call	_map_init
                           3160 ;	game.c 496
                           3161 ;	genGoto
   0729 C3 AD 07           3162 	jp	00122$
                           3163 ;	game.c 498
                           3164 ;	genLabel
   072C                    3165 00109$:
                           3166 ;	genAssign
                           3167 ;	AOP_HL for _current_map
   072C 21 04 19           3168 	ld	hl,#_current_map
   072F 36 09              3169 	ld	(hl),#0x09
                           3170 ;	game.c 499
                           3171 ;	genCall
                           3172 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0731 CD 34 04           3173 	call	_map_init
                           3174 ;	game.c 500
                           3175 ;	genGoto
   0734 C3 AD 07           3176 	jp	00122$
                           3177 ;	game.c 502
                           3178 ;	genLabel
   0737                    3179 00110$:
                           3180 ;	genAssign
                           3181 ;	AOP_HL for _current_map
   0737 21 04 19           3182 	ld	hl,#_current_map
   073A 36 0A              3183 	ld	(hl),#0x0A
                           3184 ;	game.c 503
                           3185 ;	genCall
                           3186 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073C CD 34 04           3187 	call	_map_init
                           3188 ;	game.c 504
                           3189 ;	genGoto
   073F C3 AD 07           3190 	jp	00122$
                           3191 ;	game.c 506
                           3192 ;	genLabel
   0742                    3193 00111$:
                           3194 ;	genAssign
                           3195 ;	AOP_HL for _current_map
   0742 21 04 19           3196 	ld	hl,#_current_map
   0745 36 0B              3197 	ld	(hl),#0x0B
                           3198 ;	game.c 507
                           3199 ;	genCall
                           3200 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0747 CD 34 04           3201 	call	_map_init
                           3202 ;	game.c 508
                           3203 ;	genGoto
   074A C3 AD 07           3204 	jp	00122$
                           3205 ;	game.c 510
                           3206 ;	genLabel
   074D                    3207 00112$:
                           3208 ;	genAssign
                           3209 ;	AOP_HL for _current_map
   074D 21 04 19           3210 	ld	hl,#_current_map
   0750 36 0C              3211 	ld	(hl),#0x0C
                           3212 ;	game.c 511
                           3213 ;	genCall
                           3214 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0752 CD 34 04           3215 	call	_map_init
                           3216 ;	game.c 512
                           3217 ;	genGoto
   0755 C3 AD 07           3218 	jp	00122$
                           3219 ;	game.c 514
                           3220 ;	genLabel
   0758                    3221 00113$:
                           3222 ;	genAssign
                           3223 ;	AOP_HL for _current_map
   0758 21 04 19           3224 	ld	hl,#_current_map
   075B 36 0D              3225 	ld	(hl),#0x0D
                           3226 ;	game.c 515
                           3227 ;	genCall
                           3228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   075D CD 34 04           3229 	call	_map_init
                           3230 ;	game.c 516
                           3231 ;	genGoto
   0760 C3 AD 07           3232 	jp	00122$
                           3233 ;	game.c 518
                           3234 ;	genLabel
   0763                    3235 00114$:
                           3236 ;	genAssign
                           3237 ;	AOP_HL for _current_map
   0763 21 04 19           3238 	ld	hl,#_current_map
   0766 36 0E              3239 	ld	(hl),#0x0E
                           3240 ;	game.c 519
                           3241 ;	genCall
                           3242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0768 CD 34 04           3243 	call	_map_init
                           3244 ;	game.c 520
                           3245 ;	genGoto
   076B C3 AD 07           3246 	jp	00122$
                           3247 ;	game.c 522
                           3248 ;	genLabel
   076E                    3249 00115$:
                           3250 ;	genAssign
                           3251 ;	AOP_HL for _current_map
   076E 21 04 19           3252 	ld	hl,#_current_map
   0771 36 0F              3253 	ld	(hl),#0x0F
                           3254 ;	game.c 523
                           3255 ;	genCall
                           3256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0773 CD 34 04           3257 	call	_map_init
                           3258 ;	game.c 524
                           3259 ;	genGoto
   0776 C3 AD 07           3260 	jp	00122$
                           3261 ;	game.c 526
                           3262 ;	genLabel
   0779                    3263 00116$:
                           3264 ;	genAssign
                           3265 ;	AOP_HL for _current_map
   0779 21 04 19           3266 	ld	hl,#_current_map
   077C 36 10              3267 	ld	(hl),#0x10
                           3268 ;	game.c 527
                           3269 ;	genCall
                           3270 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   077E CD 34 04           3271 	call	_map_init
                           3272 ;	game.c 528
                           3273 ;	genGoto
   0781 C3 AD 07           3274 	jp	00122$
                           3275 ;	game.c 530
                           3276 ;	genLabel
   0784                    3277 00117$:
                           3278 ;	genAssign
                           3279 ;	AOP_HL for _current_map
   0784 21 04 19           3280 	ld	hl,#_current_map
   0787 36 11              3281 	ld	(hl),#0x11
                           3282 ;	game.c 531
                           3283 ;	genCall
                           3284 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0789 CD 34 04           3285 	call	_map_init
                           3286 ;	game.c 532
                           3287 ;	genGoto
   078C C3 AD 07           3288 	jp	00122$
                           3289 ;	game.c 534
                           3290 ;	genLabel
   078F                    3291 00118$:
                           3292 ;	genAssign
                           3293 ;	AOP_HL for _current_map
   078F 21 04 19           3294 	ld	hl,#_current_map
   0792 36 12              3295 	ld	(hl),#0x12
                           3296 ;	game.c 535
                           3297 ;	genCall
                           3298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0794 CD 34 04           3299 	call	_map_init
                           3300 ;	game.c 536
                           3301 ;	genGoto
   0797 C3 AD 07           3302 	jp	00122$
                           3303 ;	game.c 538
                           3304 ;	genLabel
   079A                    3305 00119$:
                           3306 ;	genAssign
                           3307 ;	AOP_HL for _current_map
   079A 21 04 19           3308 	ld	hl,#_current_map
   079D 36 13              3309 	ld	(hl),#0x13
                           3310 ;	game.c 539
                           3311 ;	genCall
                           3312 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079F CD 34 04           3313 	call	_map_init
                           3314 ;	game.c 540
                           3315 ;	genGoto
   07A2 C3 AD 07           3316 	jp	00122$
                           3317 ;	game.c 542
                           3318 ;	genLabel
   07A5                    3319 00120$:
                           3320 ;	genAssign
                           3321 ;	AOP_HL for _current_map
   07A5 21 04 19           3322 	ld	hl,#_current_map
   07A8 36 14              3323 	ld	(hl),#0x14
                           3324 ;	game.c 543
                           3325 ;	genCall
                           3326 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07AA CD 34 04           3327 	call	_map_init
                           3328 ;	game.c 545
                           3329 ;	genLabel
   07AD                    3330 00122$:
                           3331 ;	genEndFunction
   07AD E8 02              3332 	lda	sp,2(sp)
   07AF C9                 3333 	ret
   07B0                    3334 ___got_door_end:
                           3335 ;	game.c 550
                           3336 ;	genLabel
                           3337 ;	genFunction
                           3338 ;	---------------------------------
                           3339 ; Function is_ded
                           3340 ; ---------------------------------
   07B0                    3341 ___is_ded_start:
   07B0                    3342 _is_ded:
   07B0 E8 F7              3343 	lda	sp,-9(sp)
                           3344 ;	game.c 556
                           3345 ;	genAssign
                           3346 ;	AOP_STK for 
   07B2 F8 0B              3347 	lda	hl,11(sp)
   07B4 4E                 3348 	ld	c,(hl)
   07B5 23                 3349 	inc	hl
   07B6 46                 3350 	ld	b,(hl)
                           3351 ;	genPointerGet
   07B7 59                 3352 	ld	e,c
   07B8 50                 3353 	ld	d,b
   07B9 1A                 3354 	ld	a,(de)
   07BA 4F                 3355 	ld	c,a
   07BB 13                 3356 	inc	de
   07BC 1A                 3357 	ld	a,(de)
   07BD 47                 3358 	ld	b,a
                           3359 ;	genPlus
                           3360 ;	AOP_STK for _is_ded_sloc0_1_0
                           3361 ;	genPlusIncr
                           3362 ;	Can't optimise plus by inc, falling back to the normal way
   07BE 21 09 00           3363 	ld	hl,#0x0009
   07C1 09                 3364 	add	hl,bc
   07C2 7D                 3365 	ld	a,l
   07C3 54                 3366 	ld	d,h
   07C4 F8 03              3367 	lda	hl,3(sp)
                           3368 ;	genPointerGet
                           3369 ;	AOP_STK for _is_ded_sloc0_1_0
   07C6 22                 3370 	ld	(hl+),a
   07C7 72                 3371 	ld	(hl),d
   07C8 5F                 3372 	ld	e,a
   07C9 1A                 3373 	ld	a,(de)
                           3374 ;	genIfx
   07CA B7                 3375 	or	a,a
   07CB CA ED 07           3376 	jp	z,00102$
                           3377 ;	genPlus
                           3378 ;	AOP_STK for _is_ded_sloc0_1_0
                           3379 ;	genPlusIncr
                           3380 ;	Can't optimise plus by inc, falling back to the normal way
   07CE 21 0B 00           3381 	ld	hl,#0x000B
   07D1 09                 3382 	add	hl,bc
   07D2 7D                 3383 	ld	a,l
   07D3 54                 3384 	ld	d,h
   07D4 F8 03              3385 	lda	hl,3(sp)
                           3386 ;	genPointerGet
                           3387 ;	AOP_STK for _is_ded_sloc0_1_0
                           3388 ;	AOP_STK for _is_ded_sloc1_1_0
   07D6 22                 3389 	ld	(hl+),a
   07D7 72                 3390 	ld	(hl),d
   07D8 5F                 3391 	ld	e,a
   07D9 1A                 3392 	ld	a,(de)
   07DA 2B                 3393 	dec	hl
   07DB 2B                 3394 	dec	hl
                           3395 ;	genCmpEq
                           3396 ;	AOP_STK for _is_ded_sloc1_1_0
                           3397 ; genCmpEq: left 1, right 1, result 0
   07DC 77                 3398 	ld      (hl),a
                           3399 ; Removed redundent load
   07DD FE 01              3400 	cp	a,#0x01
   07DF C2 ED 07           3401 	jp	nz,00102$
   07E2 18 03              3402 	jr	00112$
   07E4                    3403 00111$:
   07E4 C3 ED 07           3404 	jp	00102$
   07E7                    3405 00112$:
                           3406 ;	game.c 557
                           3407 ;	genRet
   07E7 11 00 00           3408 	ld	de,#0x0000
   07EA C3 82 08           3409 	jp	00106$
                           3410 ;	genLabel
   07ED                    3411 00102$:
                           3412 ;	game.c 562
                           3413 ;	genPointerGet
                           3414 ;	AOP_STK for _is_ded_sloc1_1_0
   07ED 0A                 3415 	ld	a,(bc)
   07EE F8 02              3416 	lda	hl,2(sp)
   07F0 77                 3417 	ld	(hl),a
                           3418 ;	genCast
                           3419 ;	AOP_STK for _is_ded_sloc1_1_0
                           3420 ;	AOP_STK for _is_ded_sloc0_1_0
   07F1 2A                 3421 	ld	a,(hl+)
   07F2 22                 3422 	ld	(hl+),a
   07F3 36 00              3423 	ld	(hl),#0x00
                           3424 ;	genRightShift
                           3425 ;	AOP_STK for _is_ded_sloc0_1_0
                           3426 ;	AOP_STK for _is_ded_sloc2_1_0
   07F5 2B                 3427 	dec	hl
   07F6 7E                 3428 	ld	a,(hl)
   07F7 F8 00              3429 	lda	hl,0(sp)
   07F9 77                 3430 	ld	(hl),a
   07FA F8 04              3431 	lda	hl,4(sp)
   07FC 7E                 3432 	ld	a,(hl)
   07FD F8 01              3433 	lda	hl,1(sp)
   07FF 77                 3434 	ld	(hl),a
   0800 CB 3E              3435 	srl	(hl)
   0802 2B                 3436 	dec	hl
   0803 CB 1E              3437 	rr	(hl)
   0805 23                 3438 	inc	hl
   0806 CB 3E              3439 	srl	(hl)
   0808 2B                 3440 	dec	hl
   0809 CB 1E              3441 	rr	(hl)
   080B 23                 3442 	inc	hl
   080C CB 3E              3443 	srl	(hl)
   080E 2B                 3444 	dec	hl
   080F CB 1E              3445 	rr	(hl)
                           3446 ;	genMinus
                           3447 ;	AOP_STK for _is_ded_sloc2_1_0
                           3448 ;	AOP_STK for _is_ded_sloc0_1_0
   0811 5E                 3449 	ld	e,(hl)
   0812 23                 3450 	inc	hl
   0813 56                 3451 	ld	d,(hl)
   0814 21 01 00           3452 	ld	hl,#0x0001
   0817 7B                 3453 	ld	a,e
   0818 95                 3454 	sub	a,l
   0819 5F                 3455 	ld	e,a
   081A 7A                 3456 	ld	a,d
   081B 9C                 3457 	sbc	a,h
   081C F8 04              3458 	lda	hl,4(sp)
   081E 32                 3459 	ld      (hl-),a
   081F 73                 3460 	ld	(hl),e
                           3461 ;	genCast
                           3462 ;	AOP_STK for _is_ded_sloc0_1_0
                           3463 ;	AOP_STK for _is_ded__x_1_1
   0820 7E                 3464 	ld	a,(hl)
   0821 F8 08              3465 	lda	hl,8(sp)
   0823 77                 3466 	ld	(hl),a
                           3467 ;	game.c 563
                           3468 ;	genPlus
                           3469 ;	genPlusIncr
   0824 03                 3470 	inc	bc
                           3471 ;	genPointerGet
   0825 0A                 3472 	ld	a,(bc)
   0826 4F                 3473 	ld	c,a
                           3474 ;	genCast
                           3475 ; Removed redundent load
   0827 06 00              3476 	ld	b,#0x00
                           3477 ;	genRightShift
   0829 CB 38              3478 	srl	b
   082B CB 19              3479 	rr	c
   082D CB 38              3480 	srl	b
   082F CB 19              3481 	rr	c
   0831 CB 38              3482 	srl	b
   0833 CB 19              3483 	rr	c
                           3484 ;	genMinus
   0835 0B                 3485 	dec	bc
   0836 0B                 3486 	dec	bc
                           3487 ;	genCast
                           3488 ;	AOP_STK for _is_ded__y_1_1
   0837 2B                 3489 	dec	hl
   0838 71                 3490 	ld	(hl),c
                           3491 ;	game.c 568
                           3492 ;	genCast
                           3493 ;	AOP_STK for _is_ded__x_1_1
                           3494 ;	AOP_STK for _is_ded_map_position_1_1
   0839 23                 3495 	inc	hl
   083A 7E                 3496 	ld	a,(hl)
   083B F8 05              3497 	lda	hl,5(sp)
   083D 22                 3498 	ld	(hl+),a
   083E 36 00              3499 	ld	(hl),#0x00
                           3500 ;	game.c 569
                           3501 ;	genCast
                           3502 ;	AOP_STK for _is_ded__y_1_1
   0840 23                 3503 	inc	hl
   0841 4E                 3504 	ld	c,(hl)
   0842 06 00              3505 	ld	b,#0x00
                           3506 ;	genMult
   0844 59                 3507 	ld	e,c
   0845 50                 3508 	ld	d,b
   0846 6B                 3509 	ld	l,e
   0847 62                 3510 	ld	h,d
   0848 29                 3511 	add	hl,hl
   0849 29                 3512 	add	hl,hl
   084A 19                 3513 	add	hl,de
   084B 29                 3514 	add	hl,hl
   084C 29                 3515 	add	hl,hl
   084D 4D                 3516 	ld	c,l
   084E 44                 3517 	ld	b,h
                           3518 ;	genPlus
                           3519 ;	AOP_STK for _is_ded_map_position_1_1
                           3520 ;	Can't optimise plus by inc, falling back to the normal way
   084F F8 05              3521 	lda	hl,5(sp)
   0851 2A                 3522 	ld	a,(hl+)
   0852 66                 3523 	ld	h,(hl)
   0853 6F                 3524 	ld	l,a
   0854 09                 3525 	add	hl,bc
   0855 7D                 3526 	ld	a,l
   0856 54                 3527 	ld	d,h
   0857 F8 05              3528 	lda	hl,5(sp)
   0859 22                 3529 	ld	(hl+),a
   085A 72                 3530 	ld	(hl),d
                           3531 ;	game.c 571
                           3532 ;	genPlus
                           3533 ;	AOP_STK for _is_ded_map_position_1_1
                           3534 ;	Can't optimise plus by inc, falling back to the normal way
   085B 11 05 19           3535 	ld	de,#_map
   085E 2B                 3536 	dec	hl
   085F 2A                 3537 	ld	a,(hl+)
   0860 66                 3538 	ld	h,(hl)
   0861 6F                 3539 	ld	l,a
   0862 19                 3540 	add	hl,de
   0863 4D                 3541 	ld	c,l
   0864 44                 3542 	ld	b,h
                           3543 ;	genPointerGet
   0865 0A                 3544 	ld	a,(bc)
   0866 4F                 3545 	ld	c,a
                           3546 ;	genCast
                           3547 ; Removed redundent load
   0867 06 00              3548 	ld	b,#0x00
                           3549 ;	genCmpEq
                           3550 ; genCmpEq: left 2, right 2, result 0
   0869 79                 3551 	ld	a,c
   086A FE 0B              3552 	cp	a,#0x0B
   086C C2 76 08           3553 	jp	nz,00117$
   086F 78                 3554 	ld	a,b
   0870 B7                 3555 	or	a,a
   0871 C2 7F 08           3556 	jp	nz,00105$
   0874 18 03              3557 	jr	00118$
   0876                    3558 00117$:
   0876 C3 7F 08           3559 	jp	00105$
   0879                    3560 00118$:
                           3561 ;	game.c 575
                           3562 ;	genRet
   0879 11 01 00           3563 	ld	de,#0x0001
   087C C3 82 08           3564 	jp	00106$
                           3565 ;	game.c 576
                           3566 ;	genLabel
   087F                    3567 00105$:
                           3568 ;	game.c 577
                           3569 ;	genRet
   087F 11 00 00           3570 	ld	de,#0x0000
                           3571 ;	genLabel
   0882                    3572 00106$:
                           3573 ;	genEndFunction
   0882 E8 09              3574 	lda	sp,9(sp)
   0884 C9                 3575 	ret
   0885                    3576 ___is_ded_end:
                           3577 ;	game.c 580
                           3578 ;	genLabel
                           3579 ;	genFunction
                           3580 ;	---------------------------------
                           3581 ; Function dog1_power
                           3582 ; ---------------------------------
   0885                    3583 ___dog1_power_start:
   0885                    3584 _dog1_power:
   0885 E8 F8              3585 	lda	sp,-8(sp)
                           3586 ;	game.c 584
                           3587 ;	genAssign
                           3588 ;	AOP_HL for _player
   0887 21 AE 1A           3589 	ld	hl,#_player
   088A 4E                 3590 	ld	c,(hl)
   088B 23                 3591 	inc	hl
   088C 46                 3592 	ld	b,(hl)
                           3593 ;	genPlus
                           3594 ;	genPlusIncr
   088D 03                 3595 	inc	bc
   088E 03                 3596 	inc	bc
   088F 03                 3597 	inc	bc
   0890 03                 3598 	inc	bc
                           3599 ;	genPointerGet
   0891 0A                 3600 	ld	a,(bc)
   0892 4F                 3601 	ld	c,a
                           3602 ;	genAssign
                           3603 ;	AOP_HL for _player
                           3604 ;	AOP_STK for _dog1_power_sloc0_1_0
   0893 2B                 3605 	dec	hl
   0894 2A                 3606 	ld	a,(hl+)
   0895 5E                 3607 	ld	e,(hl)
   0896 F8 02              3608 	lda	hl,2(sp)
   0898 22                 3609 	ld	(hl+),a
   0899 73                 3610 	ld	(hl),e
                           3611 ;	genPlus
                           3612 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3613 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3614 ;	genPlusIncr
                           3615 ;	Can't optimise plus by inc, falling back to the normal way
   089A 2B                 3616 	dec	hl
   089B 5E                 3617 	ld	e,(hl)
   089C 23                 3618 	inc	hl
   089D 56                 3619 	ld	d,(hl)
   089E 21 0B 00           3620 	ld	hl,#0x000B
   08A1 19                 3621 	add	hl,de
   08A2 7D                 3622 	ld	a,l
   08A3 54                 3623 	ld	d,h
   08A4 F8 00              3624 	lda	hl,0(sp)
                           3625 ;	genPointerGet
                           3626 ;	AOP_STK for _dog1_power_sloc1_1_0
   08A6 22                 3627 	ld	(hl+),a
   08A7 72                 3628 	ld	(hl),d
   08A8 5F                 3629 	ld	e,a
   08A9 1A                 3630 	ld	a,(de)
   08AA 47                 3631 	ld	b,a
                           3632 ;	genIpush
                           3633 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08AB 79                 3634 	ld	a,c
   08AC F5                 3635 	push	af
   08AD 33                 3636 	inc	sp
                           3637 ;	genIpush
   08AE 78                 3638 	ld	a,b
   08AF F5                 3639 	push	af
   08B0 33                 3640 	inc	sp
                           3641 ;	genCall
   08B1 CD 00 00           3642 	call	_set_sprite_tile
   08B4 E8 02              3643 	lda	sp,2(sp)
                           3644 ;	game.c 586
                           3645 ;	genAssign
                           3646 ;	AOP_HL for _player
   08B6 21 AE 1A           3647 	ld	hl,#_player
   08B9 4E                 3648 	ld	c,(hl)
   08BA 23                 3649 	inc	hl
   08BB 46                 3650 	ld	b,(hl)
                           3651 ;	genPlus
                           3652 ;	genPlusIncr
   08BC 03                 3653 	inc	bc
                           3654 ;	genPointerGet
   08BD 0A                 3655 	ld	a,(bc)
   08BE 4F                 3656 	ld	c,a
                           3657 ;	genAssign
                           3658 ;	AOP_HL for _player
                           3659 ;	AOP_STK for _dog1_power_sloc1_1_0
   08BF 2B                 3660 	dec	hl
   08C0 2A                 3661 	ld	a,(hl+)
   08C1 5E                 3662 	ld	e,(hl)
   08C2 F8 00              3663 	lda	hl,0(sp)
   08C4 22                 3664 	ld	(hl+),a
   08C5 73                 3665 	ld	(hl),e
                           3666 ;	genPointerGet
                           3667 ;	AOP_STK for _dog1_power_sloc1_1_0
   08C6 2B                 3668 	dec	hl
   08C7 5E                 3669 	ld	e,(hl)
   08C8 23                 3670 	inc	hl
   08C9 56                 3671 	ld	d,(hl)
   08CA 1A                 3672 	ld	a,(de)
   08CB 47                 3673 	ld	b,a
                           3674 ;	genIpush
                           3675 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08CC 79                 3676 	ld	a,c
   08CD F5                 3677 	push	af
   08CE 33                 3678 	inc	sp
                           3679 ;	genIpush
   08CF 78                 3680 	ld	a,b
   08D0 F5                 3681 	push	af
   08D1 33                 3682 	inc	sp
                           3683 ;	genCall
   08D2 CD 8F 0B           3684 	call	_get_player_map_position
   08D5 42                 3685 	ld	b,d
   08D6 4B                 3686 	ld	c,e
   08D7 E8 02              3687 	lda	sp,2(sp)
                           3688 ;	genAssign
                           3689 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08D9 F8 06              3690 	lda	hl,6(sp)
   08DB 71                 3691 	ld	(hl),c
   08DC 23                 3692 	inc	hl
   08DD 70                 3693 	ld	(hl),b
                           3694 ;	game.c 588
                           3695 ;	genAssign
                           3696 ;	AOP_HL for _player
   08DE 21 AE 1A           3697 	ld	hl,#_player
   08E1 4E                 3698 	ld	c,(hl)
   08E2 23                 3699 	inc	hl
   08E3 46                 3700 	ld	b,(hl)
                           3701 ;	genPlus
                           3702 ;	genPlusIncr
                           3703 ;	Can't optimise plus by inc, falling back to the normal way
   08E4 79                 3704 	ld	a,c
   08E5 C6 08              3705 	add	a,#0x08
   08E7 4F                 3706 	ld	c,a
   08E8 78                 3707 	ld	a,b
   08E9 CE 00              3708 	adc	a,#0x00
   08EB 47                 3709 	ld	b,a
                           3710 ;	genPointerGet
   08EC 0A                 3711 	ld	a,(bc)
                           3712 ;	genIpush
                           3713 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08ED 4F                 3714 	ld	c,a
   08EE F5                 3715 	push	af
   08EF 33                 3716 	inc	sp
                           3717 ;	genIpush
                           3718 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08F0 F8 07              3719 	lda	hl,7(sp)
   08F2 2A                 3720 	ld	a,(hl+)
   08F3 66                 3721 	ld	h,(hl)
   08F4 6F                 3722 	ld	l,a
   08F5 E5                 3723 	push	hl
                           3724 ;	genCall
   08F6 CD 03 0A           3725 	call	__get_next_map_position
   08F9 42                 3726 	ld	b,d
   08FA 4B                 3727 	ld	c,e
   08FB E8 03              3728 	lda	sp,3(sp)
                           3729 ;	genAssign
                           3730 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08FD F8 06              3731 	lda	hl,6(sp)
   08FF 71                 3732 	ld	(hl),c
   0900 23                 3733 	inc	hl
   0901 70                 3734 	ld	(hl),b
                           3735 ;	game.c 589
                           3736 ;	genAssign
                           3737 ;	AOP_HL for _player
   0902 21 AE 1A           3738 	ld	hl,#_player
   0905 4E                 3739 	ld	c,(hl)
   0906 23                 3740 	inc	hl
   0907 46                 3741 	ld	b,(hl)
                           3742 ;	genPlus
                           3743 ;	genPlusIncr
                           3744 ;	Can't optimise plus by inc, falling back to the normal way
   0908 79                 3745 	ld	a,c
   0909 C6 08              3746 	add	a,#0x08
   090B 4F                 3747 	ld	c,a
   090C 78                 3748 	ld	a,b
   090D CE 00              3749 	adc	a,#0x00
   090F 47                 3750 	ld	b,a
                           3751 ;	genPointerGet
   0910 0A                 3752 	ld	a,(bc)
                           3753 ;	genIpush
                           3754 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0911 4F                 3755 	ld	c,a
   0912 F5                 3756 	push	af
   0913 33                 3757 	inc	sp
                           3758 ;	genIpush
                           3759 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0914 F8 07              3760 	lda	hl,7(sp)
   0916 2A                 3761 	ld	a,(hl+)
   0917 66                 3762 	ld	h,(hl)
   0918 6F                 3763 	ld	l,a
   0919 E5                 3764 	push	hl
                           3765 ;	genCall
   091A CD 03 0A           3766 	call	__get_next_map_position
   091D 42                 3767 	ld	b,d
   091E 4B                 3768 	ld	c,e
   091F E8 03              3769 	lda	sp,3(sp)
                           3770 ;	genAssign
                           3771 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0921 F8 04              3772 	lda	hl,4(sp)
   0923 71                 3773 	ld	(hl),c
   0924 23                 3774 	inc	hl
   0925 70                 3775 	ld	(hl),b
                           3776 ;	game.c 610
                           3777 ;	genPlus
                           3778 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3779 ;	Can't optimise plus by inc, falling back to the normal way
   0926 11 05 19           3780 	ld	de,#_map
   0929 23                 3781 	inc	hl
   092A 2A                 3782 	ld	a,(hl+)
   092B 66                 3783 	ld	h,(hl)
   092C 6F                 3784 	ld	l,a
   092D 19                 3785 	add	hl,de
   092E 4D                 3786 	ld	c,l
   092F 44                 3787 	ld	b,h
                           3788 ;	genPointerGet
                           3789 ;	AOP_STK for _dog1_power_sloc1_1_0
   0930 0A                 3790 	ld	a,(bc)
   0931 F8 00              3791 	lda	hl,0(sp)
   0933 77                 3792 	ld	(hl),a
                           3793 ;	genCast
                           3794 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3795 ;	AOP_STK for _dog1_power_sloc0_1_0
   0934 2A                 3796 	ld	a,(hl+)
   0935 23                 3797 	inc	hl
   0936 22                 3798 	ld	(hl+),a
   0937 36 00              3799 	ld	(hl),#0x00
                           3800 ;	genCmpEq
                           3801 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3802 ; genCmpEq: left 2, right 2, result 0
   0939 2B                 3803 	dec	hl
   093A 7E                 3804 	ld	a,(hl)
   093B FE 2D              3805 	cp	a,#0x2D
   093D C2 48 09           3806 	jp	nz,00114$
   0940 23                 3807 	inc	hl
   0941 7E                 3808 	ld	a,(hl)
   0942 B7                 3809 	or	a,a
   0943 C2 D3 09           3810 	jp	nz,00107$
   0946 18 03              3811 	jr	00115$
   0948                    3812 00114$:
   0948 C3 D3 09           3813 	jp	00107$
   094B                    3814 00115$:
                           3815 ;	game.c 617
                           3816 ;	genPlus
                           3817 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3818 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3819 ;	Can't optimise plus by inc, falling back to the normal way
   094B 11 05 19           3820 	ld	de,#_map
   094E F8 04              3821 	lda	hl,4(sp)
   0950 2A                 3822 	ld	a,(hl+)
   0951 66                 3823 	ld	h,(hl)
   0952 6F                 3824 	ld	l,a
   0953 19                 3825 	add	hl,de
   0954 7D                 3826 	ld	a,l
   0955 54                 3827 	ld	d,h
   0956 F8 00              3828 	lda	hl,0(sp)
                           3829 ;	genPointerGet
                           3830 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3831 ;	AOP_STK for _dog1_power_sloc0_1_0
   0958 22                 3832 	ld	(hl+),a
   0959 72                 3833 	ld	(hl),d
   095A 5F                 3834 	ld	e,a
   095B 1A                 3835 	ld	a,(de)
   095C 23                 3836 	inc	hl
                           3837 ;	genCast
                           3838 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3839 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3840 ; Removed redundent load
   095D 32                 3841 	ld      (hl-),a
   095E 2B                 3842 	dec	hl
   095F 22                 3843 	ld	(hl+),a
   0960 36 00              3844 	ld	(hl),#0x00
                           3845 ;	genCmpLt
                           3846 ;	AOP_STK for _dog1_power_sloc1_1_0
   0962 2B                 3847 	dec	hl
   0963 7E                 3848 	ld	a,(hl)
   0964 D6 0F              3849 	sub	a,#0x0F
   0966 23                 3850 	inc	hl
   0967 7E                 3851 	ld	a,(hl)
   0968 DE 00              3852 	sbc	a,#0x00
   096A DA 9B 09           3853 	jp	c,00101$
                           3854 ;	game.c 618
                           3855 ;	genCmpEq
                           3856 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3857 ; genCmpEq: left 2, right 2, result 0
   096D 2B                 3858 	dec	hl
   096E 7E                 3859 	ld	a,(hl)
   096F FE 2F              3860 	cp	a,#0x2F
   0971 C2 7A 09           3861 	jp	nz,00116$
   0974 23                 3862 	inc	hl
   0975 7E                 3863 	ld	a,(hl)
   0976 B7                 3864 	or	a,a
   0977 CA 9B 09           3865 	jp	z,00101$
   097A                    3866 00116$:
                           3867 ;	game.c 619
                           3868 ;	genCmpEq
                           3869 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3870 ; genCmpEq: left 2, right 2, result 0
   097A F8 00              3871 	lda	hl,0(sp)
   097C 7E                 3872 	ld	a,(hl)
   097D FE 30              3873 	cp	a,#0x30
   097F C2 88 09           3874 	jp	nz,00117$
   0982 23                 3875 	inc	hl
   0983 7E                 3876 	ld	a,(hl)
   0984 B7                 3877 	or	a,a
   0985 CA 9B 09           3878 	jp	z,00101$
   0988                    3879 00117$:
                           3880 ;	game.c 620
                           3881 ;	genCmpEq
                           3882 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3883 ; genCmpEq: left 2, right 2, result 0
   0988 F8 00              3884 	lda	hl,0(sp)
   098A 7E                 3885 	ld	a,(hl)
   098B FE 2A              3886 	cp	a,#0x2A
   098D C2 98 09           3887 	jp	nz,00118$
   0990 23                 3888 	inc	hl
   0991 7E                 3889 	ld	a,(hl)
   0992 B7                 3890 	or	a,a
   0993 C2 D3 09           3891 	jp	nz,00107$
   0996 18 03              3892 	jr	00119$
   0998                    3893 00118$:
   0998 C3 D3 09           3894 	jp	00107$
   099B                    3895 00119$:
                           3896 ;	genLabel
   099B                    3897 00101$:
                           3898 ;	game.c 621
                           3899 ;	genAssign (pointer)
   099B 3E 2F              3900 	ld	a,#0x2F
   099D 02                 3901 	ld	(bc),a
                           3902 ;	game.c 622
                           3903 ;	genIpush
                           3904 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   099E 21 05 19           3905 	ld	hl,#_map
   09A1 E5                 3906 	push	hl
                           3907 ;	genIpush
   09A2 21 14 12           3908 	ld	hl,#0x1214
   09A5 E5                 3909 	push	hl
                           3910 ;	genIpush
   09A6 21 00 00           3911 	ld	hl,#0x0000
   09A9 E5                 3912 	push	hl
                           3913 ;	genCall
   09AA CD 00 00           3914 	call	_set_bkg_tiles
   09AD E8 06              3915 	lda	sp,6(sp)
                           3916 ;	game.c 623
                           3917 ;	genAssign
                           3918 ;	AOP_HL for _player
   09AF 21 AE 1A           3919 	ld	hl,#_player
   09B2 4E                 3920 	ld	c,(hl)
   09B3 23                 3921 	inc	hl
   09B4 46                 3922 	ld	b,(hl)
                           3923 ;	genPlus
                           3924 ;	genPlusIncr
                           3925 ;	Can't optimise plus by inc, falling back to the normal way
   09B5 79                 3926 	ld	a,c
   09B6 C6 08              3927 	add	a,#0x08
   09B8 4F                 3928 	ld	c,a
   09B9 78                 3929 	ld	a,b
   09BA CE 00              3930 	adc	a,#0x00
   09BC 47                 3931 	ld	b,a
                           3932 ;	genPointerGet
   09BD 0A                 3933 	ld	a,(bc)
   09BE 4F                 3934 	ld	c,a
                           3935 ;	genIpush
                           3936 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3937 ;	AOP_STK for _dog1_power_map_position_next_1_1
   09BF F8 04              3938 	lda	hl,4(sp)
   09C1 2A                 3939 	ld	a,(hl+)
   09C2 66                 3940 	ld	h,(hl)
   09C3 6F                 3941 	ld	l,a
   09C4 E5                 3942 	push	hl
                           3943 ;	genIpush
   09C5 79                 3944 	ld	a,c
   09C6 F5                 3945 	push	af
   09C7 33                 3946 	inc	sp
                           3947 ;	genIpush
                           3948 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09C8 F8 09              3949 	lda	hl,9(sp)
   09CA 2A                 3950 	ld	a,(hl+)
   09CB 66                 3951 	ld	h,(hl)
   09CC 6F                 3952 	ld	l,a
   09CD E5                 3953 	push	hl
                           3954 ;	genCall
   09CE CD 6B 0A           3955 	call	_dog1_power_apply
   09D1 E8 05              3956 	lda	sp,5(sp)
                           3957 ;	game.c 634
                           3958 ;	genLabel
   09D3                    3959 00107$:
                           3960 ;	game.c 639
                           3961 ;	genAssign
                           3962 ;	AOP_HL for _player
   09D3 21 AE 1A           3963 	ld	hl,#_player
   09D6 4E                 3964 	ld	c,(hl)
   09D7 23                 3965 	inc	hl
   09D8 46                 3966 	ld	b,(hl)
                           3967 ;	genPlus
                           3968 ;	genPlusIncr
   09D9 03                 3969 	inc	bc
   09DA 03                 3970 	inc	bc
                           3971 ;	genPointerGet
   09DB 0A                 3972 	ld	a,(bc)
   09DC 4F                 3973 	ld	c,a
                           3974 ;	genAssign
                           3975 ;	AOP_HL for _player
                           3976 ;	AOP_STK for _dog1_power_sloc1_1_0
   09DD 2B                 3977 	dec	hl
   09DE 2A                 3978 	ld	a,(hl+)
   09DF 5E                 3979 	ld	e,(hl)
   09E0 F8 00              3980 	lda	hl,0(sp)
   09E2 22                 3981 	ld	(hl+),a
   09E3 73                 3982 	ld	(hl),e
                           3983 ;	genPlus
                           3984 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3985 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3986 ;	genPlusIncr
                           3987 ;	Can't optimise plus by inc, falling back to the normal way
   09E4 2B                 3988 	dec	hl
   09E5 5E                 3989 	ld	e,(hl)
   09E6 23                 3990 	inc	hl
   09E7 56                 3991 	ld	d,(hl)
   09E8 21 0B 00           3992 	ld	hl,#0x000B
   09EB 19                 3993 	add	hl,de
   09EC 7D                 3994 	ld	a,l
   09ED 54                 3995 	ld	d,h
   09EE F8 02              3996 	lda	hl,2(sp)
                           3997 ;	genPointerGet
                           3998 ;	AOP_STK for _dog1_power_sloc0_1_0
   09F0 22                 3999 	ld	(hl+),a
   09F1 72                 4000 	ld	(hl),d
   09F2 5F                 4001 	ld	e,a
   09F3 1A                 4002 	ld	a,(de)
   09F4 47                 4003 	ld	b,a
                           4004 ;	genIpush
                           4005 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09F5 79                 4006 	ld	a,c
   09F6 F5                 4007 	push	af
   09F7 33                 4008 	inc	sp
                           4009 ;	genIpush
   09F8 78                 4010 	ld	a,b
   09F9 F5                 4011 	push	af
   09FA 33                 4012 	inc	sp
                           4013 ;	genCall
   09FB CD 00 00           4014 	call	_set_sprite_tile
   09FE E8 02              4015 	lda	sp,2(sp)
                           4016 ;	genLabel
   0A00                    4017 00108$:
                           4018 ;	genEndFunction
   0A00 E8 08              4019 	lda	sp,8(sp)
   0A02 C9                 4020 	ret
   0A03                    4021 ___dog1_power_end:
                           4022 ;	game.c 642
                           4023 ;	genLabel
                           4024 ;	genFunction
                           4025 ;	---------------------------------
                           4026 ; Function _get_next_map_position
                           4027 ; ---------------------------------
   0A03                    4028 ____get_next_map_position_start:
   0A03                    4029 __get_next_map_position:
                           4030 	
                           4031 ;	game.c 643
                           4032 ;	genCmpLt
                           4033 ;	AOP_STK for 
   0A03 F8 04              4034 	lda	hl,4(sp)
   0A05 7E                 4035 	ld	a,(hl)
   0A06 FE 01              4036 	cp	#0x01
   0A08 DA 65 0A           4037 	jp	c,00105$
                           4038 ;	genCmpGt
                           4039 ;	AOP_STK for 
   0A0B 3E 04              4040 	ld	a,#0x04
   0A0D 96                 4041 	sub	a,(hl)
   0A0E DA 65 0A           4042 	jp	c,00105$
                           4043 ;	genMinus
                           4044 ;	AOP_STK for 
   0A11 7E                 4045 	ld	a,(hl)
   0A12 C6 FF              4046 	add	a,#0xFF
   0A14 4F                 4047 	ld	c,a
                           4048 ;	genJumpTab
   0A15 59                 4049 	ld	e,c
   0A16 16 00              4050 	ld	d,#0x00
   0A18 21 1F 0A           4051 	ld	hl,#00110$
   0A1B 19                 4052 	add	hl,de
   0A1C 19                 4053 	add	hl,de
   0A1D 19                 4054 	add	hl,de
   0A1E E9                 4055 	jp	(hl)
   0A1F                    4056 00110$:
   0A1F C3 2B 0A           4057 	jp	00101$
   0A22 C3 3F 0A           4058 	jp	00102$
   0A25 C3 49 0A           4059 	jp	00103$
   0A28 C3 5B 0A           4060 	jp	00104$
                           4061 ;	game.c 645
                           4062 ;	genLabel
   0A2B                    4063 00101$:
                           4064 ;	genMinus
                           4065 ;	AOP_STK for 
   0A2B F8 02              4066 	lda	hl,2(sp)
   0A2D 5E                 4067 	ld	e,(hl)
   0A2E 23                 4068 	inc	hl
   0A2F 56                 4069 	ld	d,(hl)
   0A30 21 14 00           4070 	ld	hl,#0x0014
   0A33 7B                 4071 	ld	a,e
   0A34 95                 4072 	sub	a,l
   0A35 5F                 4073 	ld	e,a
   0A36 7A                 4074 	ld	a,d
   0A37 9C                 4075 	sbc	a,h
   0A38 F8 03              4076 	lda	hl,3(sp)
   0A3A 32                 4077 	ld      (hl-),a
   0A3B 73                 4078 	ld	(hl),e
                           4079 ;	game.c 646
                           4080 ;	genGoto
   0A3C C3 65 0A           4081 	jp	00105$
                           4082 ;	game.c 648
                           4083 ;	genLabel
   0A3F                    4084 00102$:
                           4085 ;	genPlus
                           4086 ;	AOP_STK for 
                           4087 ;	genPlusIncr
   0A3F F8 02              4088 	lda	hl,2(sp)
   0A41 34                 4089 	inc	(hl)
   0A42 20 02              4090 	jr	nz,00111$
   0A44 23                 4091 	inc	hl
   0A45 34                 4092 	inc	(hl)
   0A46                    4093 00111$:
                           4094 ;	game.c 649
                           4095 ;	genGoto
   0A46 C3 65 0A           4096 	jp	00105$
                           4097 ;	game.c 651
                           4098 ;	genLabel
   0A49                    4099 00103$:
                           4100 ;	genPlus
                           4101 ;	AOP_STK for 
                           4102 ;	genPlusIncr
                           4103 ;	Can't optimise plus by inc, falling back to the normal way
   0A49 F8 02              4104 	lda	hl,2(sp)
   0A4B 5E                 4105 	ld	e,(hl)
   0A4C 23                 4106 	inc	hl
   0A4D 56                 4107 	ld	d,(hl)
   0A4E 21 14 00           4108 	ld	hl,#0x0014
   0A51 19                 4109 	add	hl,de
   0A52 7D                 4110 	ld	a,l
   0A53 54                 4111 	ld	d,h
   0A54 F8 02              4112 	lda	hl,2(sp)
   0A56 22                 4113 	ld	(hl+),a
   0A57 72                 4114 	ld	(hl),d
                           4115 ;	game.c 652
                           4116 ;	genGoto
   0A58 C3 65 0A           4117 	jp	00105$
                           4118 ;	game.c 654
                           4119 ;	genLabel
   0A5B                    4120 00104$:
                           4121 ;	genMinus
                           4122 ;	AOP_STK for 
   0A5B F8 02              4123 	lda	hl,2(sp)
   0A5D 5E                 4124 	ld	e,(hl)
   0A5E 23                 4125 	inc	hl
   0A5F 56                 4126 	ld	d,(hl)
   0A60 1B                 4127 	dec	de
   0A61 2B                 4128 	dec	hl
   0A62 73                 4129 	ld	(hl),e
   0A63 23                 4130 	inc	hl
   0A64 72                 4131 	ld	(hl),d
                           4132 ;	game.c 656
                           4133 ;	genLabel
   0A65                    4134 00105$:
                           4135 ;	game.c 657
                           4136 ;	genRet
                           4137 ;	AOP_STK for 
   0A65 F8 02              4138 	lda	hl,2(sp)
   0A67 5E                 4139 	ld	e,(hl)
   0A68 23                 4140 	inc	hl
   0A69 56                 4141 	ld	d,(hl)
                           4142 ;	genLabel
   0A6A                    4143 00106$:
                           4144 ;	genEndFunction
                           4145 	
   0A6A C9                 4146 	ret
   0A6B                    4147 ____get_next_map_position_end:
                           4148 ;	game.c 660
                           4149 ;	genLabel
                           4150 ;	genFunction
                           4151 ;	---------------------------------
                           4152 ; Function dog1_power_apply
                           4153 ; ---------------------------------
   0A6B                    4154 ___dog1_power_apply_start:
   0A6B                    4155 _dog1_power_apply:
   0A6B E8 FD              4156 	lda	sp,-3(sp)
                           4157 ;	game.c 666
                           4158 ;	genIpush
                           4159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A6D 21 14 00           4160 	ld	hl,#0x0014
   0A70 E5                 4161 	push	hl
                           4162 ;	genIpush
                           4163 ;	AOP_STK for 
   0A71 F8 07              4164 	lda	hl,7(sp)
   0A73 2A                 4165 	ld	a,(hl+)
   0A74 66                 4166 	ld	h,(hl)
   0A75 6F                 4167 	ld	l,a
   0A76 E5                 4168 	push	hl
                           4169 ;	genCall
   0A77 CD 00 00           4170 	call	__divuint_rrx_s
   0A7A 42                 4171 	ld	b,d
   0A7B 4B                 4172 	ld	c,e
   0A7C E8 04              4173 	lda	sp,4(sp)
                           4174 ;	genLeftShift
   0A7E 3E 04              4175 	ld	a,#0x03+1
   0A80 18 04              4176 	jr	00122$
   0A82                    4177 00121$:
   0A82 CB 21              4178 	sla	c
   0A84 CB 10              4179 	rl	b
   0A86                    4180 00122$:
   0A86 3D                 4181 	dec	a
   0A87 20 F9              4182 	jr	nz,00121$
                           4183 ;	genPlus
                           4184 ;	genPlusIncr
                           4185 ;	Can't optimise plus by inc, falling back to the normal way
   0A89 79                 4186 	ld	a,c
   0A8A C6 10              4187 	add	a,#0x10
   0A8C 4F                 4188 	ld	c,a
   0A8D 78                 4189 	ld	a,b
   0A8E CE 00              4190 	adc	a,#0x00
   0A90 47                 4191 	ld	b,a
                           4192 ;	genCast
                           4193 ;	AOP_STK for _dog1_power_apply_y_1_1
   0A91 F8 02              4194 	lda	hl,2(sp)
   0A93 71                 4195 	ld	(hl),c
                           4196 ;	game.c 667
                           4197 ;	genIpush
                           4198 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A94 21 14 00           4199 	ld	hl,#0x0014
   0A97 E5                 4200 	push	hl
                           4201 ;	genIpush
                           4202 ;	AOP_STK for 
   0A98 F8 07              4203 	lda	hl,7(sp)
   0A9A 2A                 4204 	ld	a,(hl+)
   0A9B 66                 4205 	ld	h,(hl)
   0A9C 6F                 4206 	ld	l,a
   0A9D E5                 4207 	push	hl
                           4208 ;	genCall
   0A9E CD 00 00           4209 	call	__moduint_rrx_s
   0AA1 4A                 4210 	ld	c,d
   0AA2 43                 4211 	ld	b,e
   0AA3 E8 04              4212 	lda	sp,4(sp)
                           4213 ;	genLeftShift
   0AA5 3E 04              4214 	ld	a,#0x03+1
   0AA7 18 04              4215 	jr	00124$
   0AA9                    4216 00123$:
   0AA9 CB 20              4217 	sla	b
   0AAB CB 11              4218 	rl	c
   0AAD                    4219 00124$:
   0AAD 3D                 4220 	dec	a
   0AAE 20 F9              4221 	jr	nz,00123$
                           4222 ;	genPlus
                           4223 ;	genPlusIncr
                           4224 ;	Can't optimise plus by inc, falling back to the normal way
   0AB0 78                 4225 	ld	a,b
   0AB1 C6 08              4226 	add	a,#0x08
   0AB3 47                 4227 	ld	b,a
   0AB4 79                 4228 	ld	a,c
   0AB5 CE 00              4229 	adc	a,#0x00
   0AB7 4F                 4230 	ld	c,a
                           4231 ;	genCast
   0AB8 48                 4232 	ld	c,b
                           4233 ;	game.c 668
                           4234 ;	genIpush
                           4235 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AB9 C5                 4236 	push	bc
   0ABA 21 05 0F           4237 	ld	hl,#0x0F05
   0ABD E5                 4238 	push	hl
                           4239 ;	genCall
   0ABE CD 00 00           4240 	call	_set_sprite_tile
   0AC1 E8 02              4241 	lda	sp,2(sp)
   0AC3 E1                 4242 	pop	hl
   0AC4 4D                 4243 	ld	c,l
                           4244 ;	game.c 671
                           4245 ;	genAssign
                           4246 ;	AOP_STK for _dog1_power_apply_i_1_1
   0AC5 F8 01              4247 	lda	hl,1(sp)
   0AC7 36 04              4248 	ld	(hl),#0x04
                           4249 ;	game.c 672
                           4250 ;	genIpush
                           4251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AC9 C5                 4252 	push	bc
                           4253 ;	AOP_STK for _dog1_power_apply_y_1_1
   0ACA 23                 4254 	inc	hl
   0ACB 7E                 4255 	ld	a,(hl)
   0ACC F5                 4256 	push	af
   0ACD 33                 4257 	inc	sp
                           4258 ;	genIpush
   0ACE 79                 4259 	ld	a,c
   0ACF F5                 4260 	push	af
   0AD0 33                 4261 	inc	sp
                           4262 ;	genIpush
   0AD1 3E 05              4263 	ld	a,#0x05
   0AD3 F5                 4264 	push	af
   0AD4 33                 4265 	inc	sp
                           4266 ;	genCall
   0AD5 CD 00 00           4267 	call	_move_sprite
   0AD8 E8 03              4268 	lda	sp,3(sp)
   0ADA E1                 4269 	pop	hl
   0ADB 4D                 4270 	ld	c,l
                           4271 ;	game.c 674
                           4272 ;	genLabel
   0ADC                    4273 00106$:
                           4274 ;	genCmpEq
                           4275 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4276 ; genCmpEq: left 1, right 1, result 0
   0ADC F8 01              4277 	lda	hl,1(sp)
   0ADE 7E                 4278 	ld	a,(hl)
   0ADF B7                 4279 	or	a,a
   0AE0 CA 46 0B           4280 	jp	z,00108$
   0AE3                    4281 00125$:
                           4282 ;	game.c 675
                           4283 ;	genCmpLt
                           4284 ;	AOP_STK for 
   0AE3 F8 07              4285 	lda	hl,7(sp)
   0AE5 7E                 4286 	ld	a,(hl)
   0AE6 FE 01              4287 	cp	#0x01
   0AE8 DA 20 0B           4288 	jp	c,00105$
                           4289 ;	genCmpGt
                           4290 ;	AOP_STK for 
   0AEB 3E 04              4291 	ld	a,#0x04
   0AED 96                 4292 	sub	a,(hl)
   0AEE DA 20 0B           4293 	jp	c,00105$
                           4294 ;	genMinus
                           4295 ;	AOP_STK for 
   0AF1 7E                 4296 	ld	a,(hl)
   0AF2 C6 FF              4297 	add	a,#0xFF
   0AF4 47                 4298 	ld	b,a
                           4299 ;	genJumpTab
   0AF5 58                 4300 	ld	e,b
   0AF6 16 00              4301 	ld	d,#0x00
   0AF8 21 FF 0A           4302 	ld	hl,#00126$
   0AFB 19                 4303 	add	hl,de
   0AFC 19                 4304 	add	hl,de
   0AFD 19                 4305 	add	hl,de
   0AFE E9                 4306 	jp	(hl)
   0AFF                    4307 00126$:
   0AFF C3 0B 0B           4308 	jp	00101$
   0B02 C3 12 0B           4309 	jp	00102$
   0B05 C3 17 0B           4310 	jp	00103$
   0B08 C3 1E 0B           4311 	jp	00104$
                           4312 ;	game.c 677
                           4313 ;	genLabel
   0B0B                    4314 00101$:
                           4315 ;	genMinus
                           4316 ;	AOP_STK for _dog1_power_apply_y_1_1
   0B0B F8 02              4317 	lda	hl,2(sp)
   0B0D 35                 4318 	dec	(hl)
   0B0E 35                 4319 	dec	(hl)
                           4320 ;	game.c 678
                           4321 ;	genGoto
   0B0F C3 20 0B           4322 	jp	00105$
                           4323 ;	game.c 680
                           4324 ;	genLabel
   0B12                    4325 00102$:
                           4326 ;	genPlus
                           4327 ;	genPlusIncr
                           4328 ; Removed redundent load
   0B12 0C                 4329 	inc	c
   0B13 0C                 4330 	inc	c
                           4331 ;	game.c 681
                           4332 ;	genGoto
   0B14 C3 20 0B           4333 	jp	00105$
                           4334 ;	game.c 683
                           4335 ;	genLabel
   0B17                    4336 00103$:
                           4337 ;	genPlus
                           4338 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4339 ;	genPlusIncr
   0B17 F8 02              4340 	lda	hl,2(sp)
   0B19 34                 4341 	inc	(hl)
   0B1A 34                 4342 	inc	(hl)
                           4343 ;	game.c 684
                           4344 ;	genGoto
   0B1B C3 20 0B           4345 	jp	00105$
                           4346 ;	game.c 686
                           4347 ;	genLabel
   0B1E                    4348 00104$:
                           4349 ;	genMinus
   0B1E 0D                 4350 	dec	c
   0B1F 0D                 4351 	dec	c
                           4352 ;	game.c 688
                           4353 ;	genLabel
   0B20                    4354 00105$:
                           4355 ;	game.c 689
                           4356 ;	genIpush
                           4357 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B20 C5                 4358 	push	bc
   0B21 3E 02              4359 	ld	a,#0x02
   0B23 F5                 4360 	push	af
   0B24 33                 4361 	inc	sp
                           4362 ;	genCall
   0B25 CD 00 00           4363 	call	_performantDelay
   0B28 E8 01              4364 	lda	sp,1(sp)
   0B2A E1                 4365 	pop	hl
   0B2B 4D                 4366 	ld	c,l
                           4367 ;	game.c 690
                           4368 ;	genIpush
                           4369 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B2C C5                 4370 	push	bc
                           4371 ;	AOP_STK for _dog1_power_apply_y_1_1
   0B2D F8 04              4372 	lda	hl,4(sp)
   0B2F 7E                 4373 	ld	a,(hl)
   0B30 F5                 4374 	push	af
   0B31 33                 4375 	inc	sp
                           4376 ;	genIpush
   0B32 79                 4377 	ld	a,c
   0B33 F5                 4378 	push	af
   0B34 33                 4379 	inc	sp
                           4380 ;	genIpush
   0B35 3E 05              4381 	ld	a,#0x05
   0B37 F5                 4382 	push	af
   0B38 33                 4383 	inc	sp
                           4384 ;	genCall
   0B39 CD 00 00           4385 	call	_move_sprite
   0B3C E8 03              4386 	lda	sp,3(sp)
   0B3E E1                 4387 	pop	hl
   0B3F 4D                 4388 	ld	c,l
                           4389 ;	game.c 691
                           4390 ;	genMinus
                           4391 ;	AOP_STK for _dog1_power_apply_i_1_1
   0B40 F8 01              4392 	lda	hl,1(sp)
   0B42 35                 4393 	dec	(hl)
                           4394 ;	genGoto
   0B43 C3 DC 0A           4395 	jp	00106$
                           4396 ;	genLabel
   0B46                    4397 00108$:
                           4398 ;	game.c 693
                           4399 ;	genPlus
                           4400 ;	AOP_STK for 
                           4401 ;	Can't optimise plus by inc, falling back to the normal way
   0B46 11 05 19           4402 	ld	de,#_map
   0B49 F8 08              4403 	lda	hl,8(sp)
   0B4B 2A                 4404 	ld	a,(hl+)
   0B4C 66                 4405 	ld	h,(hl)
   0B4D 6F                 4406 	ld	l,a
   0B4E 19                 4407 	add	hl,de
   0B4F 4D                 4408 	ld	c,l
   0B50 44                 4409 	ld	b,h
                           4410 ;	genPointerGet
                           4411 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0B51 0A                 4412 	ld	a,(bc)
   0B52 F8 00              4413 	lda	hl,0(sp)
                           4414 ;	genCmpEq
                           4415 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4416 ; genCmpEq: left 1, right 1, result 0
   0B54 77                 4417 	ld      (hl),a
                           4418 ; Removed redundent load
   0B55 FE 0B              4419 	cp	a,#0x0B
   0B57 CA 65 0B           4420 	jp	z,00109$
   0B5A                    4421 00127$:
                           4422 ;	genCmpEq
                           4423 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4424 ; genCmpEq: left 1, right 1, result 0
   0B5A F8 00              4425 	lda	hl,0(sp)
   0B5C 7E                 4426 	ld	a,(hl)
   0B5D FE 0C              4427 	cp	a,#0x0C
   0B5F CA 6E 0B           4428 	jp	z,00112$
   0B62                    4429 00128$:
                           4430 ;	genGoto
   0B62 C3 6B 0B           4431 	jp	00111$
                           4432 ;	game.c 695
                           4433 ;	genLabel
   0B65                    4434 00109$:
                           4435 ;	genAssign (pointer)
   0B65 3E 30              4436 	ld	a,#0x30
   0B67 02                 4437 	ld	(bc),a
                           4438 ;	game.c 696
                           4439 ;	genGoto
   0B68 C3 6E 0B           4440 	jp	00112$
                           4441 ;	game.c 700
                           4442 ;	genLabel
   0B6B                    4443 00111$:
                           4444 ;	genAssign (pointer)
   0B6B 3E 2D              4445 	ld	a,#0x2D
   0B6D 02                 4446 	ld	(bc),a
                           4447 ;	game.c 702
                           4448 ;	genLabel
   0B6E                    4449 00112$:
                           4450 ;	game.c 703
                           4451 ;	genIpush
                           4452 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B6E 21 05 19           4453 	ld	hl,#_map
   0B71 E5                 4454 	push	hl
                           4455 ;	genIpush
   0B72 21 14 12           4456 	ld	hl,#0x1214
   0B75 E5                 4457 	push	hl
                           4458 ;	genIpush
   0B76 21 00 00           4459 	ld	hl,#0x0000
   0B79 E5                 4460 	push	hl
                           4461 ;	genCall
   0B7A CD 00 00           4462 	call	_set_bkg_tiles
   0B7D E8 06              4463 	lda	sp,6(sp)
                           4464 ;	game.c 704
                           4465 ;	genIpush
                           4466 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B7F 21 00 00           4467 	ld	hl,#0x0000
   0B82 E5                 4468 	push	hl
                           4469 ;	genIpush
   0B83 3E 05              4470 	ld	a,#0x05
   0B85 F5                 4471 	push	af
   0B86 33                 4472 	inc	sp
                           4473 ;	genCall
   0B87 CD 00 00           4474 	call	_move_sprite
   0B8A E8 03              4475 	lda	sp,3(sp)
                           4476 ;	genLabel
   0B8C                    4477 00113$:
                           4478 ;	genEndFunction
   0B8C E8 03              4479 	lda	sp,3(sp)
   0B8E C9                 4480 	ret
   0B8F                    4481 ___dog1_power_apply_end:
                           4482 ;	game.c 710
                           4483 ;	genLabel
                           4484 ;	genFunction
                           4485 ;	---------------------------------
                           4486 ; Function get_player_map_position
                           4487 ; ---------------------------------
   0B8F                    4488 ___get_player_map_position_start:
   0B8F                    4489 _get_player_map_position:
   0B8F E8 FC              4490 	lda	sp,-4(sp)
                           4491 ;	game.c 718
                           4492 ;	genCast
                           4493 ;	AOP_STK for 
   0B91 F8 06              4494 	lda	hl,6(sp)
   0B93 4E                 4495 	ld	c,(hl)
   0B94 06 00              4496 	ld	b,#0x00
                           4497 ;	genRightShift
   0B96 CB 38              4498 	srl	b
   0B98 CB 19              4499 	rr	c
   0B9A CB 38              4500 	srl	b
   0B9C CB 19              4501 	rr	c
   0B9E CB 38              4502 	srl	b
   0BA0 CB 19              4503 	rr	c
                           4504 ;	genMinus
   0BA2 0B                 4505 	dec	bc
                           4506 ;	genCast
                           4507 ;	AOP_STK for _get_player_map_position__x_1_1
   0BA3 F8 03              4508 	lda	hl,3(sp)
   0BA5 71                 4509 	ld	(hl),c
                           4510 ;	game.c 719
                           4511 ;	genCast
                           4512 ;	AOP_STK for 
   0BA6 F8 07              4513 	lda	hl,7(sp)
   0BA8 46                 4514 	ld	b,(hl)
   0BA9 0E 00              4515 	ld	c,#0x00
                           4516 ;	genRightShift
   0BAB CB 39              4517 	srl	c
   0BAD CB 18              4518 	rr	b
   0BAF CB 39              4519 	srl	c
   0BB1 CB 18              4520 	rr	b
   0BB3 CB 39              4521 	srl	c
   0BB5 CB 18              4522 	rr	b
                           4523 ;	genMinus
   0BB7 58                 4524 	ld	e,b
   0BB8 51                 4525 	ld	d,c
   0BB9 1B                 4526 	dec	de
   0BBA 1B                 4527 	dec	de
   0BBB 43                 4528 	ld	b,e
   0BBC 4A                 4529 	ld	c,d
                           4530 ;	genCast
                           4531 ;	AOP_STK for _get_player_map_position__y_1_1
   0BBD F8 02              4532 	lda	hl,2(sp)
   0BBF 70                 4533 	ld	(hl),b
                           4534 ;	game.c 723
                           4535 ;	genCast
                           4536 ;	AOP_STK for _get_player_map_position__x_1_1
                           4537 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0BC0 23                 4538 	inc	hl
   0BC1 7E                 4539 	ld	a,(hl)
   0BC2 F8 00              4540 	lda	hl,0(sp)
   0BC4 22                 4541 	ld	(hl+),a
   0BC5 36 00              4542 	ld	(hl),#0x00
                           4543 ;	game.c 724
                           4544 ;	genCast
                           4545 ;	AOP_STK for _get_player_map_position__y_1_1
   0BC7 23                 4546 	inc	hl
   0BC8 4E                 4547 	ld	c,(hl)
   0BC9 06 00              4548 	ld	b,#0x00
                           4549 ;	genMult
   0BCB 59                 4550 	ld	e,c
   0BCC 50                 4551 	ld	d,b
   0BCD 6B                 4552 	ld	l,e
   0BCE 62                 4553 	ld	h,d
   0BCF 29                 4554 	add	hl,hl
   0BD0 29                 4555 	add	hl,hl
   0BD1 19                 4556 	add	hl,de
   0BD2 29                 4557 	add	hl,hl
   0BD3 29                 4558 	add	hl,hl
   0BD4 4D                 4559 	ld	c,l
   0BD5 44                 4560 	ld	b,h
                           4561 ;	genPlus
                           4562 ;	AOP_STK for _get_player_map_position_map_position_1_1
                           4563 ;	Can't optimise plus by inc, falling back to the normal way
   0BD6 F8 00              4564 	lda	hl,0(sp)
   0BD8 2A                 4565 	ld	a,(hl+)
   0BD9 66                 4566 	ld	h,(hl)
   0BDA 6F                 4567 	ld	l,a
   0BDB 09                 4568 	add	hl,bc
   0BDC 4D                 4569 	ld	c,l
   0BDD 44                 4570 	ld	b,h
                           4571 ;	game.c 726
                           4572 ;	genRet
   0BDE 59                 4573 	ld	e,c
   0BDF 50                 4574 	ld	d,b
                           4575 ;	genLabel
   0BE0                    4576 00101$:
                           4577 ;	genEndFunction
   0BE0 E8 04              4578 	lda	sp,4(sp)
   0BE2 C9                 4579 	ret
   0BE3                    4580 ___get_player_map_position_end:
                           4581 ;	game.c 729
                           4582 ;	genLabel
                           4583 ;	genFunction
                           4584 ;	---------------------------------
                           4585 ; Function player_input
                           4586 ; ---------------------------------
   0BE3                    4587 ___player_input_start:
   0BE3                    4588 _player_input:
   0BE3 E8 FB              4589 	lda	sp,-5(sp)
                           4590 ;	game.c 732
                           4591 ;	genAssign
                           4592 ;	AOP_STK for 
   0BE5 F8 07              4593 	lda	hl,7(sp)
   0BE7 4E                 4594 	ld	c,(hl)
   0BE8 23                 4595 	inc	hl
   0BE9 46                 4596 	ld	b,(hl)
                           4597 ;	genPointerGet
                           4598 ;	AOP_STK for _player_input_sloc0_1_0
   0BEA 59                 4599 	ld	e,c
   0BEB 50                 4600 	ld	d,b
   0BEC 1A                 4601 	ld	a,(de)
   0BED F8 03              4602 	lda	hl,3(sp)
   0BEF 77                 4603 	ld	(hl),a
   0BF0 13                 4604 	inc	de
   0BF1 1A                 4605 	ld	a,(de)
   0BF2 23                 4606 	inc	hl
                           4607 ;	genPlus
                           4608 ;	AOP_STK for _player_input_sloc0_1_0
                           4609 ;	AOP_STK for _player_input_sloc1_1_0
                           4610 ;	genPlusIncr
                           4611 ;	Can't optimise plus by inc, falling back to the normal way
   0BF3 32                 4612 	ld      (hl-),a
   0BF4 5E                 4613 	ld	e,(hl)
   0BF5 23                 4614 	inc	hl
   0BF6 56                 4615 	ld	d,(hl)
   0BF7 21 0A 00           4616 	ld	hl,#0x000A
   0BFA 19                 4617 	add	hl,de
   0BFB 7D                 4618 	ld	a,l
   0BFC 54                 4619 	ld	d,h
   0BFD F8 01              4620 	lda	hl,1(sp)
                           4621 ;	genPointerGet
                           4622 ;	AOP_STK for _player_input_sloc1_1_0
                           4623 ;	AOP_STK for _player_input_sloc0_1_0
   0BFF 22                 4624 	ld	(hl+),a
   0C00 72                 4625 	ld	(hl),d
   0C01 5F                 4626 	ld	e,a
   0C02 1A                 4627 	ld	a,(de)
   0C03 23                 4628 	inc	hl
                           4629 ;	genCmpEq
                           4630 ;	AOP_STK for _player_input_sloc0_1_0
                           4631 ; genCmpEq: left 1, right 1, result 0
   0C04 77                 4632 	ld      (hl),a
                           4633 ; Removed redundent load
   0C05 B7                 4634 	or	a,a
   0C06 C2 26 0D           4635 	jp	nz,00115$
   0C09 18 03              4636 	jr	00128$
   0C0B                    4637 00127$:
   0C0B C3 26 0D           4638 	jp	00115$
   0C0E                    4639 00128$:
                           4640 ;	genCmpEq
                           4641 ;	AOP_HL for _input_timer
                           4642 ; genCmpEq: left 1, right 1, result 0
   0C0E 21 03 19           4643 	ld	hl,#_input_timer
   0C11 7E                 4644 	ld	a,(hl)
   0C12 B7                 4645 	or	a,a
   0C13 C2 26 0D           4646 	jp	nz,00115$
   0C16 18 03              4647 	jr	00130$
   0C18                    4648 00129$:
   0C18 C3 26 0D           4649 	jp	00115$
   0C1B                    4650 00130$:
                           4651 ;	game.c 734
                           4652 ;	genCall
                           4653 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C1B C5                 4654 	push	bc
   0C1C CD 00 00           4655 	call	_joypad
                           4656 ;	AOP_STK for _player_input_sloc1_1_0
   0C1F F8 03              4657 	lda	hl,3(sp)
   0C21 73                 4658 	ld	(hl),e
   0C22 C1                 4659 	pop	bc
                           4660 ;	genCmpEq
                           4661 ;	AOP_STK for _player_input_sloc1_1_0
                           4662 ; genCmpEq: left 1, right 1, result 0
   0C23 F8 01              4663 	lda	hl,1(sp)
   0C25 7E                 4664 	ld	a,(hl)
   0C26 FE 01              4665 	cp	a,#0x01
   0C28 CA D6 0C           4666 	jp	z,00108$
   0C2B                    4667 00131$:
                           4668 ;	genCmpEq
                           4669 ;	AOP_STK for _player_input_sloc1_1_0
                           4670 ; genCmpEq: left 1, right 1, result 0
   0C2B F8 01              4671 	lda	hl,1(sp)
   0C2D 7E                 4672 	ld	a,(hl)
   0C2E FE 02              4673 	cp	a,#0x02
   0C30 CA B7 0C           4674 	jp	z,00107$
   0C33                    4675 00132$:
                           4676 ;	genCmpEq
                           4677 ;	AOP_STK for _player_input_sloc1_1_0
                           4678 ; genCmpEq: left 1, right 1, result 0
   0C33 F8 01              4679 	lda	hl,1(sp)
   0C35 7E                 4680 	ld	a,(hl)
   0C36 FE 04              4681 	cp	a,#0x04
   0C38 CA F5 0C           4682 	jp	z,00109$
   0C3B                    4683 00133$:
                           4684 ;	genCmpEq
                           4685 ;	AOP_STK for _player_input_sloc1_1_0
                           4686 ; genCmpEq: left 1, right 1, result 0
   0C3B F8 01              4687 	lda	hl,1(sp)
   0C3D 7E                 4688 	ld	a,(hl)
   0C3E FE 08              4689 	cp	a,#0x08
   0C40 CA 14 0D           4690 	jp	z,00110$
   0C43                    4691 00134$:
                           4692 ;	genCmpEq
                           4693 ;	AOP_STK for _player_input_sloc1_1_0
                           4694 ; genCmpEq: left 1, right 1, result 0
   0C43 F8 01              4695 	lda	hl,1(sp)
   0C45 7E                 4696 	ld	a,(hl)
   0C46 FE 10              4697 	cp	a,#0x10
   0C48 CA 56 0C           4698 	jp	z,00103$
   0C4B                    4699 00135$:
                           4700 ;	genCmpEq
                           4701 ;	AOP_STK for _player_input_sloc1_1_0
                           4702 ; genCmpEq: left 1, right 1, result 0
   0C4B F8 01              4703 	lda	hl,1(sp)
   0C4D 7E                 4704 	ld	a,(hl)
   0C4E FE 20              4705 	cp	a,#0x20
   0C50 CA AF 0C           4706 	jp	z,00106$
   0C53                    4707 00136$:
                           4708 ;	genGoto
   0C53 C3 26 0D           4709 	jp	00115$
                           4710 ;	game.c 740
                           4711 ;	genLabel
   0C56                    4712 00103$:
                           4713 ;	game.c 736
                           4714 ;	genPointerGet
                           4715 ;	AOP_STK for _player_input_sloc1_1_0
   0C56 59                 4716 	ld	e,c
   0C57 50                 4717 	ld	d,b
   0C58 1A                 4718 	ld	a,(de)
   0C59 F8 01              4719 	lda	hl,1(sp)
   0C5B 77                 4720 	ld	(hl),a
   0C5C 13                 4721 	inc	de
   0C5D 1A                 4722 	ld	a,(de)
   0C5E 23                 4723 	inc	hl
                           4724 ;	genPlus
                           4725 ;	AOP_STK for _player_input_sloc1_1_0
                           4726 ;	AOP_STK for _player_input_sloc0_1_0
                           4727 ;	genPlusIncr
                           4728 ;	Can't optimise plus by inc, falling back to the normal way
   0C5F 32                 4729 	ld      (hl-),a
   0C60 5E                 4730 	ld	e,(hl)
   0C61 23                 4731 	inc	hl
   0C62 56                 4732 	ld	d,(hl)
   0C63 21 0B 00           4733 	ld	hl,#0x000B
   0C66 19                 4734 	add	hl,de
   0C67 7D                 4735 	ld	a,l
   0C68 54                 4736 	ld	d,h
   0C69 F8 03              4737 	lda	hl,3(sp)
                           4738 ;	genPointerGet
                           4739 ;	AOP_STK for _player_input_sloc0_1_0
                           4740 ;	AOP_STK for _player_input_sloc2_1_0
   0C6B 22                 4741 	ld	(hl+),a
   0C6C 72                 4742 	ld	(hl),d
   0C6D 5F                 4743 	ld	e,a
   0C6E 1A                 4744 	ld	a,(de)
   0C6F F8 00              4745 	lda	hl,0(sp)
                           4746 ;	genCmpEq
                           4747 ;	AOP_STK for _player_input_sloc2_1_0
                           4748 ; genCmpEq: left 1, right 1, result 0
   0C71 77                 4749 	ld      (hl),a
                           4750 ; Removed redundent load
   0C72 FE 01              4751 	cp	a,#0x01
   0C74 C2 9A 0C           4752 	jp	nz,00102$
   0C77 18 03              4753 	jr	00138$
   0C79                    4754 00137$:
   0C79 C3 9A 0C           4755 	jp	00102$
   0C7C                    4756 00138$:
                           4757 ;	game.c 737
                           4758 ;	genPlus
                           4759 ;	AOP_STK for _player_input_sloc1_1_0
                           4760 ;	genPlusIncr
                           4761 ;	Can't optimise plus by inc, falling back to the normal way
   0C7C F8 01              4762 	lda	hl,1(sp)
   0C7E 5E                 4763 	ld	e,(hl)
   0C7F 23                 4764 	inc	hl
   0C80 56                 4765 	ld	d,(hl)
   0C81 21 0A 00           4766 	ld	hl,#0x000A
   0C84 19                 4767 	add	hl,de
   0C85 7D                 4768 	ld	a,l
   0C86 54                 4769 	ld	d,h
   0C87 6F                 4770 	ld	l,a
   0C88 62                 4771 	ld	h,d
                           4772 ;	genAssign (pointer)
   0C89 36 10              4773 	ld	(hl),#0x10
                           4774 ;	game.c 738
                           4775 ;	genPlus
                           4776 ;	AOP_STK for _player_input_sloc1_1_0
                           4777 ;	genPlusIncr
                           4778 ;	Can't optimise plus by inc, falling back to the normal way
   0C8B F8 01              4779 	lda	hl,1(sp)
   0C8D 5E                 4780 	ld	e,(hl)
   0C8E 23                 4781 	inc	hl
   0C8F 56                 4782 	ld	d,(hl)
   0C90 21 09 00           4783 	ld	hl,#0x0009
   0C93 19                 4784 	add	hl,de
   0C94 7D                 4785 	ld	a,l
   0C95 54                 4786 	ld	d,h
   0C96 6F                 4787 	ld	l,a
   0C97 62                 4788 	ld	h,d
                           4789 ;	genAssign (pointer)
   0C98 36 01              4790 	ld	(hl),#0x01
                           4791 ;	genLabel
   0C9A                    4792 00102$:
                           4793 ;	game.c 740
                           4794 ;	genCmpEq
                           4795 ;	AOP_STK for _player_input_sloc2_1_0
                           4796 ; genCmpEq: left 1, right 1, result 0
   0C9A F8 00              4797 	lda	hl,0(sp)
   0C9C 7E                 4798 	ld	a,(hl)
   0C9D FE 02              4799 	cp	a,#0x02
   0C9F C2 26 0D           4800 	jp	nz,00115$
   0CA2 18 03              4801 	jr	00140$
   0CA4                    4802 00139$:
   0CA4 C3 26 0D           4803 	jp	00115$
   0CA7                    4804 00140$:
                           4805 ;	game.c 741
                           4806 ;	genCall
                           4807 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CA7 C5                 4808 	push	bc
   0CA8 CD 85 08           4809 	call	_dog1_power
   0CAB C1                 4810 	pop	bc
                           4811 ;	game.c 745
                           4812 ;	genGoto
   0CAC C3 26 0D           4813 	jp	00115$
                           4814 ;	game.c 749
                           4815 ;	genLabel
   0CAF                    4816 00106$:
                           4817 ;	genCall
                           4818 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CAF C5                 4819 	push	bc
   0CB0 CD CA 01           4820 	call	_change_char
   0CB3 C1                 4821 	pop	bc
                           4822 ;	game.c 750
                           4823 ;	genGoto
   0CB4 C3 26 0D           4824 	jp	00115$
                           4825 ;	game.c 753
                           4826 ;	genLabel
   0CB7                    4827 00107$:
                           4828 ;	genAssign
                           4829 ;	AOP_HL for _input_timer
   0CB7 21 03 19           4830 	ld	hl,#_input_timer
   0CBA 36 04              4831 	ld	(hl),#0x04
                           4832 ;	game.c 754
                           4833 ;	genPointerGet
                           4834 ;	AOP_STK for _player_input_sloc1_1_0
   0CBC 59                 4835 	ld	e,c
   0CBD 50                 4836 	ld	d,b
   0CBE 1A                 4837 	ld	a,(de)
   0CBF F8 01              4838 	lda	hl,1(sp)
   0CC1 77                 4839 	ld	(hl),a
   0CC2 13                 4840 	inc	de
   0CC3 1A                 4841 	ld	a,(de)
   0CC4 23                 4842 	inc	hl
                           4843 ;	genPlus
                           4844 ;	AOP_STK for _player_input_sloc1_1_0
                           4845 ;	genPlusIncr
                           4846 ;	Can't optimise plus by inc, falling back to the normal way
   0CC5 32                 4847 	ld      (hl-),a
   0CC6 5E                 4848 	ld	e,(hl)
   0CC7 23                 4849 	inc	hl
   0CC8 56                 4850 	ld	d,(hl)
   0CC9 21 08 00           4851 	ld	hl,#0x0008
   0CCC 19                 4852 	add	hl,de
   0CCD 7D                 4853 	ld	a,l
   0CCE 54                 4854 	ld	d,h
   0CCF 6F                 4855 	ld	l,a
   0CD0 62                 4856 	ld	h,d
                           4857 ;	genAssign (pointer)
   0CD1 36 04              4858 	ld	(hl),#0x04
                           4859 ;	game.c 755
                           4860 ;	genGoto
   0CD3 C3 26 0D           4861 	jp	00115$
                           4862 ;	game.c 757
                           4863 ;	genLabel
   0CD6                    4864 00108$:
                           4865 ;	genAssign
                           4866 ;	AOP_HL for _input_timer
   0CD6 21 03 19           4867 	ld	hl,#_input_timer
   0CD9 36 04              4868 	ld	(hl),#0x04
                           4869 ;	game.c 758
                           4870 ;	genPointerGet
                           4871 ;	AOP_STK for _player_input_sloc1_1_0
   0CDB 59                 4872 	ld	e,c
   0CDC 50                 4873 	ld	d,b
   0CDD 1A                 4874 	ld	a,(de)
   0CDE F8 01              4875 	lda	hl,1(sp)
   0CE0 77                 4876 	ld	(hl),a
   0CE1 13                 4877 	inc	de
   0CE2 1A                 4878 	ld	a,(de)
   0CE3 23                 4879 	inc	hl
                           4880 ;	genPlus
                           4881 ;	AOP_STK for _player_input_sloc1_1_0
                           4882 ;	genPlusIncr
                           4883 ;	Can't optimise plus by inc, falling back to the normal way
   0CE4 32                 4884 	ld      (hl-),a
   0CE5 5E                 4885 	ld	e,(hl)
   0CE6 23                 4886 	inc	hl
   0CE7 56                 4887 	ld	d,(hl)
   0CE8 21 08 00           4888 	ld	hl,#0x0008
   0CEB 19                 4889 	add	hl,de
   0CEC 7D                 4890 	ld	a,l
   0CED 54                 4891 	ld	d,h
   0CEE 6F                 4892 	ld	l,a
   0CEF 62                 4893 	ld	h,d
                           4894 ;	genAssign (pointer)
   0CF0 36 02              4895 	ld	(hl),#0x02
                           4896 ;	game.c 759
                           4897 ;	genGoto
   0CF2 C3 26 0D           4898 	jp	00115$
                           4899 ;	game.c 761
                           4900 ;	genLabel
   0CF5                    4901 00109$:
                           4902 ;	genAssign
                           4903 ;	AOP_HL for _input_timer
   0CF5 21 03 19           4904 	ld	hl,#_input_timer
   0CF8 36 04              4905 	ld	(hl),#0x04
                           4906 ;	game.c 762
                           4907 ;	genPointerGet
                           4908 ;	AOP_STK for _player_input_sloc1_1_0
   0CFA 59                 4909 	ld	e,c
   0CFB 50                 4910 	ld	d,b
   0CFC 1A                 4911 	ld	a,(de)
   0CFD F8 01              4912 	lda	hl,1(sp)
   0CFF 77                 4913 	ld	(hl),a
   0D00 13                 4914 	inc	de
   0D01 1A                 4915 	ld	a,(de)
   0D02 23                 4916 	inc	hl
                           4917 ;	genPlus
                           4918 ;	AOP_STK for _player_input_sloc1_1_0
                           4919 ;	genPlusIncr
                           4920 ;	Can't optimise plus by inc, falling back to the normal way
   0D03 32                 4921 	ld      (hl-),a
   0D04 5E                 4922 	ld	e,(hl)
   0D05 23                 4923 	inc	hl
   0D06 56                 4924 	ld	d,(hl)
   0D07 21 08 00           4925 	ld	hl,#0x0008
   0D0A 19                 4926 	add	hl,de
   0D0B 7D                 4927 	ld	a,l
   0D0C 54                 4928 	ld	d,h
   0D0D 6F                 4929 	ld	l,a
   0D0E 62                 4930 	ld	h,d
                           4931 ;	genAssign (pointer)
   0D0F 36 01              4932 	ld	(hl),#0x01
                           4933 ;	game.c 763
                           4934 ;	genGoto
   0D11 C3 26 0D           4935 	jp	00115$
                           4936 ;	game.c 765
                           4937 ;	genLabel
   0D14                    4938 00110$:
                           4939 ;	genPointerGet
   0D14 59                 4940 	ld	e,c
   0D15 50                 4941 	ld	d,b
   0D16 1A                 4942 	ld	a,(de)
   0D17 4F                 4943 	ld	c,a
   0D18 13                 4944 	inc	de
   0D19 1A                 4945 	ld	a,(de)
   0D1A 47                 4946 	ld	b,a
                           4947 ;	genPlus
                           4948 ;	genPlusIncr
   0D1B 21 08 00           4949 	ld	hl,#0x0008
   0D1E 09                 4950 	add	hl,bc
                           4951 ;	genAssign (pointer)
   0D1F 36 03              4952 	ld	(hl),#0x03
                           4953 ;	game.c 766
                           4954 ;	genAssign
                           4955 ;	AOP_HL for _input_timer
   0D21 21 03 19           4956 	ld	hl,#_input_timer
   0D24 36 04              4957 	ld	(hl),#0x04
                           4958 ;	game.c 770
                           4959 ;	genLabel
   0D26                    4960 00115$:
                           4961 ;	genEndFunction
   0D26 E8 05              4962 	lda	sp,5(sp)
   0D28 C9                 4963 	ret
   0D29                    4964 ___player_input_end:
                           4965 ;	game.c 780
                           4966 ;	genLabel
                           4967 ;	genFunction
                           4968 ;	---------------------------------
                           4969 ; Function can_move
                           4970 ; ---------------------------------
   0D29                    4971 ___can_move_start:
   0D29                    4972 _can_move:
   0D29 E8 FA              4973 	lda	sp,-6(sp)
                           4974 ;	game.c 791
                           4975 ;	genCmpGt
                           4976 ;	AOP_STK for 
   0D2B 3E 04              4977 	ld	a,#0x04
   0D2D F8 0A              4978 	lda	hl,10(sp)
   0D2F 96                 4979 	sub	a,(hl)
   0D30 DA 76 0D           4980 	jp	c,00106$
                           4981 ;	genJumpTab
                           4982 ;	AOP_STK for 
   0D33 5E                 4983 	ld	e,(hl)
   0D34 16 00              4984 	ld	d,#0x00
   0D36 21 3D 0D           4985 	ld	hl,#00127$
   0D39 19                 4986 	add	hl,de
   0D3A 19                 4987 	add	hl,de
   0D3B 19                 4988 	add	hl,de
   0D3C E9                 4989 	jp	(hl)
   0D3D                    4990 00127$:
   0D3D C3 70 0D           4991 	jp	00105$
   0D40 C3 5E 0D           4992 	jp	00103$
   0D43 C3 55 0D           4993 	jp	00102$
   0D46 C3 67 0D           4994 	jp	00104$
   0D49 C3 4C 0D           4995 	jp	00101$
                           4996 ;	game.c 793
                           4997 ;	genLabel
   0D4C                    4998 00101$:
                           4999 ;	genMinus
                           5000 ;	AOP_STK for 
   0D4C F8 08              5001 	lda	hl,8(sp)
   0D4E 7E                 5002 	ld	a,(hl)
   0D4F C6 F8              5003 	add	a,#0xF8
   0D51 77                 5004 	ld	(hl),a
                           5005 ;	game.c 794
                           5006 ;	genGoto
   0D52 C3 76 0D           5007 	jp	00106$
                           5008 ;	game.c 796
                           5009 ;	genLabel
   0D55                    5010 00102$:
                           5011 ;	genPlus
                           5012 ;	AOP_STK for 
                           5013 ;	genPlusIncr
                           5014 ;	Can't optimise plus by inc, falling back to the normal way
   0D55 F8 08              5015 	lda	hl,8(sp)
   0D57 7E                 5016 	ld	a,(hl)
   0D58 C6 08              5017 	add	a,#0x08
   0D5A 77                 5018 	ld	(hl),a
                           5019 ;	game.c 797
                           5020 ;	genGoto
   0D5B C3 76 0D           5021 	jp	00106$
                           5022 ;	game.c 799
                           5023 ;	genLabel
   0D5E                    5024 00103$:
                           5025 ;	genMinus
                           5026 ;	AOP_STK for 
   0D5E F8 09              5027 	lda	hl,9(sp)
   0D60 7E                 5028 	ld	a,(hl)
   0D61 C6 F8              5029 	add	a,#0xF8
   0D63 77                 5030 	ld	(hl),a
                           5031 ;	game.c 800
                           5032 ;	genGoto
   0D64 C3 76 0D           5033 	jp	00106$
                           5034 ;	game.c 802
                           5035 ;	genLabel
   0D67                    5036 00104$:
                           5037 ;	genPlus
                           5038 ;	AOP_STK for 
                           5039 ;	genPlusIncr
                           5040 ;	Can't optimise plus by inc, falling back to the normal way
   0D67 F8 09              5041 	lda	hl,9(sp)
   0D69 7E                 5042 	ld	a,(hl)
   0D6A C6 08              5043 	add	a,#0x08
   0D6C 77                 5044 	ld	(hl),a
                           5045 ;	game.c 803
                           5046 ;	genGoto
   0D6D C3 76 0D           5047 	jp	00106$
                           5048 ;	game.c 805
                           5049 ;	genLabel
   0D70                    5050 00105$:
                           5051 ;	genRet
   0D70 11 00 00           5052 	ld	de,#0x0000
   0D73 C3 3F 0E           5053 	jp	00118$
                           5054 ;	game.c 806
                           5055 ;	genLabel
   0D76                    5056 00106$:
                           5057 ;	game.c 808
                           5058 ;	genCast
                           5059 ;	AOP_STK for 
   0D76 F8 08              5060 	lda	hl,8(sp)
   0D78 4E                 5061 	ld	c,(hl)
   0D79 06 00              5062 	ld	b,#0x00
                           5063 ;	genRightShift
   0D7B CB 38              5064 	srl	b
   0D7D CB 19              5065 	rr	c
   0D7F CB 38              5066 	srl	b
   0D81 CB 19              5067 	rr	c
   0D83 CB 38              5068 	srl	b
   0D85 CB 19              5069 	rr	c
                           5070 ;	genMinus
   0D87 0B                 5071 	dec	bc
                           5072 ;	genCast
                           5073 ;	AOP_STK for _can_move__x_1_1
   0D88 F8 05              5074 	lda	hl,5(sp)
   0D8A 71                 5075 	ld	(hl),c
                           5076 ;	game.c 809
                           5077 ;	genCast
                           5078 ;	AOP_STK for 
   0D8B F8 09              5079 	lda	hl,9(sp)
   0D8D 46                 5080 	ld	b,(hl)
   0D8E 0E 00              5081 	ld	c,#0x00
                           5082 ;	genRightShift
   0D90 CB 39              5083 	srl	c
   0D92 CB 18              5084 	rr	b
   0D94 CB 39              5085 	srl	c
   0D96 CB 18              5086 	rr	b
   0D98 CB 39              5087 	srl	c
   0D9A CB 18              5088 	rr	b
                           5089 ;	genMinus
   0D9C 58                 5090 	ld	e,b
   0D9D 51                 5091 	ld	d,c
   0D9E 1B                 5092 	dec	de
   0D9F 1B                 5093 	dec	de
   0DA0 43                 5094 	ld	b,e
   0DA1 4A                 5095 	ld	c,d
                           5096 ;	genCast
                           5097 ;	AOP_STK for _can_move__y_1_1
   0DA2 F8 04              5098 	lda	hl,4(sp)
   0DA4 70                 5099 	ld	(hl),b
                           5100 ;	game.c 816
                           5101 ;	genCmpLt
                           5102 ;	AOP_STK for _can_move__x_1_1
   0DA5 23                 5103 	inc	hl
   0DA6 7E                 5104 	ld	a,(hl)
   0DA7 FE 00              5105 	cp	#0x00
   0DA9 DA D0 0D           5106 	jp	c,00107$
                           5107 ;	genCast
                           5108 ;	AOP_STK for _can_move__x_1_1
   0DAC 46                 5109 	ld	b,(hl)
   0DAD 0E 00              5110 	ld	c,#0x00
                           5111 ;	genCmpGt
   0DAF 3E 13              5112 	ld	a,#0x13
   0DB1 90                 5113 	sub	a,b
   0DB2 3E 00              5114 	ld	a,#0x00
   0DB4 99                 5115 	sbc	a,c
   0DB5 DA D0 0D           5116 	jp	c,00107$
                           5117 ;	genCmpLt
                           5118 ;	AOP_STK for _can_move__y_1_1
   0DB8 2B                 5119 	dec	hl
   0DB9 7E                 5120 	ld	a,(hl)
   0DBA FE 00              5121 	cp	#0x00
   0DBC DA D0 0D           5122 	jp	c,00107$
                           5123 ;	genCast
                           5124 ;	AOP_STK for _can_move__y_1_1
                           5125 ;	AOP_STK for _can_move_sloc0_1_0
   0DBF 7E                 5126 	ld	a,(hl)
   0DC0 F8 00              5127 	lda	hl,0(sp)
   0DC2 22                 5128 	ld	(hl+),a
   0DC3 36 00              5129 	ld	(hl),#0x00
                           5130 ;	genCmpGt
                           5131 ;	AOP_STK for _can_move_sloc0_1_0
   0DC5 3E 11              5132 	ld	a,#0x11
   0DC7 2B                 5133 	dec	hl
   0DC8 96                 5134 	sub	a,(hl)
   0DC9 3E 00              5135 	ld	a,#0x00
   0DCB 23                 5136 	inc	hl
   0DCC 9E                 5137 	sbc	a,(hl)
   0DCD D2 D6 0D           5138 	jp	nc,00108$
                           5139 ;	genLabel
   0DD0                    5140 00107$:
                           5141 ;	game.c 818
                           5142 ;	genRet
   0DD0 11 00 00           5143 	ld	de,#0x0000
   0DD3 C3 3F 0E           5144 	jp	00118$
                           5145 ;	genLabel
   0DD6                    5146 00108$:
                           5147 ;	game.c 825
                           5148 ;	genAssign
                           5149 ;	(registers are the same)
                           5150 ;	genAssign
                           5151 ;	AOP_STK for _can_move_map_position_1_1
   0DD6 F8 02              5152 	lda	hl,2(sp)
   0DD8 70                 5153 	ld	(hl),b
   0DD9 23                 5154 	inc	hl
   0DDA 71                 5155 	ld	(hl),c
                           5156 ;	game.c 826
                           5157 ;	genMult
                           5158 ;	AOP_STK for _can_move_sloc0_1_0
   0DDB F8 00              5159 	lda	hl,0(sp)
   0DDD 5E                 5160 	ld	e,(hl)
   0DDE 23                 5161 	inc	hl
   0DDF 56                 5162 	ld	d,(hl)
   0DE0 6B                 5163 	ld	l,e
   0DE1 62                 5164 	ld	h,d
   0DE2 29                 5165 	add	hl,hl
   0DE3 29                 5166 	add	hl,hl
   0DE4 19                 5167 	add	hl,de
   0DE5 29                 5168 	add	hl,hl
   0DE6 29                 5169 	add	hl,hl
   0DE7 4D                 5170 	ld	c,l
   0DE8 44                 5171 	ld	b,h
                           5172 ;	genPlus
                           5173 ;	AOP_STK for _can_move_map_position_1_1
                           5174 ;	Can't optimise plus by inc, falling back to the normal way
   0DE9 F8 02              5175 	lda	hl,2(sp)
   0DEB 2A                 5176 	ld	a,(hl+)
   0DEC 66                 5177 	ld	h,(hl)
   0DED 6F                 5178 	ld	l,a
   0DEE 09                 5179 	add	hl,bc
   0DEF 7D                 5180 	ld	a,l
   0DF0 54                 5181 	ld	d,h
   0DF1 F8 02              5182 	lda	hl,2(sp)
   0DF3 22                 5183 	ld	(hl+),a
   0DF4 72                 5184 	ld	(hl),d
                           5185 ;	game.c 828
                           5186 ;	genPlus
                           5187 ;	AOP_STK for _can_move_map_position_1_1
                           5188 ;	Can't optimise plus by inc, falling back to the normal way
   0DF5 11 05 19           5189 	ld	de,#_map
   0DF8 2B                 5190 	dec	hl
   0DF9 2A                 5191 	ld	a,(hl+)
   0DFA 66                 5192 	ld	h,(hl)
   0DFB 6F                 5193 	ld	l,a
   0DFC 19                 5194 	add	hl,de
   0DFD 4D                 5195 	ld	c,l
   0DFE 44                 5196 	ld	b,h
                           5197 ;	genPointerGet
   0DFF 0A                 5198 	ld	a,(bc)
   0E00 4F                 5199 	ld	c,a
                           5200 ;	genCast
                           5201 ; Removed redundent load
   0E01 06 00              5202 	ld	b,#0x00
                           5203 ;	genCmpGt
   0E03 3E 14              5204 	ld	a,#0x14
   0E05 91                 5205 	sub	a,c
   0E06 3E 00              5206 	ld	a,#0x00
   0E08 98                 5207 	sbc	a,b
   0E09 D2 1B 0E           5208 	jp	nc,00113$
                           5209 ;	game.c 829
                           5210 ;	genCmpLt
   0E0C 79                 5211 	ld	a,c
   0E0D D6 29              5212 	sub	a,#0x29
   0E0F 78                 5213 	ld	a,b
   0E10 DE 00              5214 	sbc	a,#0x00
   0E12 D2 1B 0E           5215 	jp	nc,00113$
                           5216 ;	game.c 831
                           5217 ;	genRet
   0E15 11 00 00           5218 	ld	de,#0x0000
   0E18 C3 3F 0E           5219 	jp	00118$
                           5220 ;	genLabel
   0E1B                    5221 00113$:
                           5222 ;	game.c 835
                           5223 ;	genCmpEq
                           5224 ; genCmpEq: left 2, right 2, result 0
   0E1B 79                 5225 	ld	a,c
   0E1C FE 29              5226 	cp	a,#0x29
   0E1E C2 26 0E           5227 	jp	nz,00132$
   0E21 78                 5228 	ld	a,b
   0E22 B7                 5229 	or	a,a
   0E23 CA 36 0E           5230 	jp	z,00115$
   0E26                    5231 00132$:
                           5232 ;	genCmpEq
                           5233 ; genCmpEq: left 2, right 2, result 0
   0E26 79                 5234 	ld	a,c
   0E27 FE 2D              5235 	cp	a,#0x2D
   0E29 C2 33 0E           5236 	jp	nz,00133$
   0E2C 78                 5237 	ld	a,b
   0E2D B7                 5238 	or	a,a
   0E2E C2 3C 0E           5239 	jp	nz,00117$
   0E31 18 03              5240 	jr	00134$
   0E33                    5241 00133$:
   0E33 C3 3C 0E           5242 	jp	00117$
   0E36                    5243 00134$:
                           5244 ;	game.c 847
                           5245 ;	genLabel
   0E36                    5246 00115$:
                           5247 ;	genRet
   0E36 11 00 00           5248 	ld	de,#0x0000
   0E39 C3 3F 0E           5249 	jp	00118$
                           5250 ;	game.c 849
                           5251 ;	genLabel
   0E3C                    5252 00117$:
                           5253 ;	game.c 853
                           5254 ;	genRet
   0E3C 11 01 00           5255 	ld	de,#0x0001
                           5256 ;	genLabel
   0E3F                    5257 00118$:
                           5258 ;	genEndFunction
   0E3F E8 06              5259 	lda	sp,6(sp)
   0E41 C9                 5260 	ret
   0E42                    5261 ___can_move_end:
                           5262 ;	game.c 855
                           5263 ;	genLabel
                           5264 ;	genFunction
                           5265 ;	---------------------------------
                           5266 ; Function rotate_player
                           5267 ; ---------------------------------
   0E42                    5268 ___rotate_player_start:
   0E42                    5269 _rotate_player:
   0E42 E8 FC              5270 	lda	sp,-4(sp)
                           5271 ;	game.c 856
                           5272 ;	genAssign
                           5273 ;	AOP_HL for _player
   0E44 21 AE 1A           5274 	ld	hl,#_player
   0E47 4E                 5275 	ld	c,(hl)
   0E48 23                 5276 	inc	hl
   0E49 46                 5277 	ld	b,(hl)
                           5278 ;	genPlus
                           5279 ;	genPlusIncr
                           5280 ;	Can't optimise plus by inc, falling back to the normal way
   0E4A 79                 5281 	ld	a,c
   0E4B C6 07              5282 	add	a,#0x07
   0E4D 4F                 5283 	ld	c,a
   0E4E 78                 5284 	ld	a,b
   0E4F CE 00              5285 	adc	a,#0x00
   0E51 47                 5286 	ld	b,a
                           5287 ;	genPointerGet
   0E52 0A                 5288 	ld	a,(bc)
   0E53 4F                 5289 	ld	c,a
                           5290 ;	genAssign
                           5291 ;	AOP_HL for _player
                           5292 ;	AOP_STK for _rotate_player_sloc0_1_0
   0E54 2B                 5293 	dec	hl
   0E55 2A                 5294 	ld	a,(hl+)
   0E56 5E                 5295 	ld	e,(hl)
   0E57 F8 02              5296 	lda	hl,2(sp)
   0E59 22                 5297 	ld	(hl+),a
   0E5A 73                 5298 	ld	(hl),e
                           5299 ;	genPlus
                           5300 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5301 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5302 ;	genPlusIncr
                           5303 ;	Can't optimise plus by inc, falling back to the normal way
   0E5B 2B                 5304 	dec	hl
   0E5C 5E                 5305 	ld	e,(hl)
   0E5D 23                 5306 	inc	hl
   0E5E 56                 5307 	ld	d,(hl)
   0E5F 21 0B 00           5308 	ld	hl,#0x000B
   0E62 19                 5309 	add	hl,de
   0E63 7D                 5310 	ld	a,l
   0E64 54                 5311 	ld	d,h
   0E65 F8 00              5312 	lda	hl,0(sp)
                           5313 ;	genPointerGet
                           5314 ;	AOP_STK for _rotate_player_sloc1_1_0
   0E67 22                 5315 	ld	(hl+),a
   0E68 72                 5316 	ld	(hl),d
   0E69 5F                 5317 	ld	e,a
   0E6A 1A                 5318 	ld	a,(de)
   0E6B 47                 5319 	ld	b,a
                           5320 ;	genIpush
                           5321 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E6C 79                 5322 	ld	a,c
   0E6D F5                 5323 	push	af
   0E6E 33                 5324 	inc	sp
                           5325 ;	genIpush
   0E6F 78                 5326 	ld	a,b
   0E70 F5                 5327 	push	af
   0E71 33                 5328 	inc	sp
                           5329 ;	genCall
   0E72 CD 00 00           5330 	call	_set_sprite_tile
   0E75 E8 02              5331 	lda	sp,2(sp)
                           5332 ;	game.c 857
                           5333 ;	genAssign
                           5334 ;	AOP_HL for _player
   0E77 21 AE 1A           5335 	ld	hl,#_player
   0E7A 4E                 5336 	ld	c,(hl)
   0E7B 23                 5337 	inc	hl
   0E7C 46                 5338 	ld	b,(hl)
                           5339 ;	genPlus
                           5340 ;	genPlusIncr
                           5341 ;	Can't optimise plus by inc, falling back to the normal way
   0E7D 79                 5342 	ld	a,c
   0E7E C6 0B              5343 	add	a,#0x0B
   0E80 4F                 5344 	ld	c,a
   0E81 78                 5345 	ld	a,b
   0E82 CE 00              5346 	adc	a,#0x00
   0E84 47                 5347 	ld	b,a
                           5348 ;	genPointerGet
   0E85 0A                 5349 	ld	a,(bc)
   0E86 4F                 5350 	ld	c,a
                           5351 ;	genIpush
                           5352 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E87 3E 20              5353 	ld	a,#0x20
   0E89 F5                 5354 	push	af
   0E8A 33                 5355 	inc	sp
                           5356 ;	genIpush
   0E8B 79                 5357 	ld	a,c
   0E8C F5                 5358 	push	af
   0E8D 33                 5359 	inc	sp
                           5360 ;	genCall
   0E8E CD 00 00           5361 	call	_set_sprite_prop
   0E91 E8 02              5362 	lda	sp,2(sp)
                           5363 ;	game.c 858
                           5364 ;	genIpush
                           5365 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E93 3E 05              5366 	ld	a,#0x05
   0E95 F5                 5367 	push	af
   0E96 33                 5368 	inc	sp
                           5369 ;	genCall
   0E97 CD 00 00           5370 	call	_performantDelay
   0E9A E8 01              5371 	lda	sp,1(sp)
                           5372 ;	game.c 859
                           5373 ;	genAssign
                           5374 ;	AOP_HL for _player
   0E9C 21 AE 1A           5375 	ld	hl,#_player
   0E9F 4E                 5376 	ld	c,(hl)
   0EA0 23                 5377 	inc	hl
   0EA1 46                 5378 	ld	b,(hl)
                           5379 ;	genPlus
                           5380 ;	genPlusIncr
   0EA2 03                 5381 	inc	bc
   0EA3 03                 5382 	inc	bc
   0EA4 03                 5383 	inc	bc
   0EA5 03                 5384 	inc	bc
                           5385 ;	genPointerGet
   0EA6 0A                 5386 	ld	a,(bc)
   0EA7 4F                 5387 	ld	c,a
                           5388 ;	genAssign
                           5389 ;	AOP_HL for _player
                           5390 ;	AOP_STK for _rotate_player_sloc1_1_0
   0EA8 2B                 5391 	dec	hl
   0EA9 2A                 5392 	ld	a,(hl+)
   0EAA 5E                 5393 	ld	e,(hl)
   0EAB F8 00              5394 	lda	hl,0(sp)
   0EAD 22                 5395 	ld	(hl+),a
   0EAE 73                 5396 	ld	(hl),e
                           5397 ;	genPlus
                           5398 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5399 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5400 ;	genPlusIncr
                           5401 ;	Can't optimise plus by inc, falling back to the normal way
   0EAF 2B                 5402 	dec	hl
   0EB0 5E                 5403 	ld	e,(hl)
   0EB1 23                 5404 	inc	hl
   0EB2 56                 5405 	ld	d,(hl)
   0EB3 21 0B 00           5406 	ld	hl,#0x000B
   0EB6 19                 5407 	add	hl,de
   0EB7 7D                 5408 	ld	a,l
   0EB8 54                 5409 	ld	d,h
   0EB9 F8 02              5410 	lda	hl,2(sp)
                           5411 ;	genPointerGet
                           5412 ;	AOP_STK for _rotate_player_sloc0_1_0
   0EBB 22                 5413 	ld	(hl+),a
   0EBC 72                 5414 	ld	(hl),d
   0EBD 5F                 5415 	ld	e,a
   0EBE 1A                 5416 	ld	a,(de)
   0EBF 47                 5417 	ld	b,a
                           5418 ;	genIpush
                           5419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EC0 79                 5420 	ld	a,c
   0EC1 F5                 5421 	push	af
   0EC2 33                 5422 	inc	sp
                           5423 ;	genIpush
   0EC3 78                 5424 	ld	a,b
   0EC4 F5                 5425 	push	af
   0EC5 33                 5426 	inc	sp
                           5427 ;	genCall
   0EC6 CD 00 00           5428 	call	_set_sprite_tile
   0EC9 E8 02              5429 	lda	sp,2(sp)
                           5430 ;	game.c 860
                           5431 ;	genAssign
                           5432 ;	AOP_HL for _player
   0ECB 21 AE 1A           5433 	ld	hl,#_player
   0ECE 4E                 5434 	ld	c,(hl)
   0ECF 23                 5435 	inc	hl
   0ED0 46                 5436 	ld	b,(hl)
                           5437 ;	genPlus
                           5438 ;	genPlusIncr
                           5439 ;	Can't optimise plus by inc, falling back to the normal way
   0ED1 79                 5440 	ld	a,c
   0ED2 C6 0B              5441 	add	a,#0x0B
   0ED4 4F                 5442 	ld	c,a
   0ED5 78                 5443 	ld	a,b
   0ED6 CE 00              5444 	adc	a,#0x00
   0ED8 47                 5445 	ld	b,a
                           5446 ;	genPointerGet
   0ED9 0A                 5447 	ld	a,(bc)
   0EDA 4F                 5448 	ld	c,a
                           5449 ;	genIpush
                           5450 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EDB 3E 60              5451 	ld	a,#0x60
   0EDD F5                 5452 	push	af
   0EDE 33                 5453 	inc	sp
                           5454 ;	genIpush
   0EDF 79                 5455 	ld	a,c
   0EE0 F5                 5456 	push	af
   0EE1 33                 5457 	inc	sp
                           5458 ;	genCall
   0EE2 CD 00 00           5459 	call	_set_sprite_prop
   0EE5 E8 02              5460 	lda	sp,2(sp)
                           5461 ;	game.c 861
                           5462 ;	genIpush
                           5463 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EE7 3E 05              5464 	ld	a,#0x05
   0EE9 F5                 5465 	push	af
   0EEA 33                 5466 	inc	sp
                           5467 ;	genCall
   0EEB CD 00 00           5468 	call	_performantDelay
   0EEE E8 01              5469 	lda	sp,1(sp)
                           5470 ;	game.c 862
                           5471 ;	genAssign
                           5472 ;	AOP_HL for _player
   0EF0 21 AE 1A           5473 	ld	hl,#_player
   0EF3 4E                 5474 	ld	c,(hl)
   0EF4 23                 5475 	inc	hl
   0EF5 46                 5476 	ld	b,(hl)
                           5477 ;	genPlus
                           5478 ;	genPlusIncr
                           5479 ;	Can't optimise plus by inc, falling back to the normal way
   0EF6 79                 5480 	ld	a,c
   0EF7 C6 07              5481 	add	a,#0x07
   0EF9 4F                 5482 	ld	c,a
   0EFA 78                 5483 	ld	a,b
   0EFB CE 00              5484 	adc	a,#0x00
   0EFD 47                 5485 	ld	b,a
                           5486 ;	genPointerGet
   0EFE 0A                 5487 	ld	a,(bc)
   0EFF 4F                 5488 	ld	c,a
                           5489 ;	genAssign
                           5490 ;	AOP_HL for _player
                           5491 ;	AOP_STK for _rotate_player_sloc1_1_0
   0F00 2B                 5492 	dec	hl
   0F01 2A                 5493 	ld	a,(hl+)
   0F02 5E                 5494 	ld	e,(hl)
   0F03 F8 00              5495 	lda	hl,0(sp)
   0F05 22                 5496 	ld	(hl+),a
   0F06 73                 5497 	ld	(hl),e
                           5498 ;	genPlus
                           5499 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5500 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5501 ;	genPlusIncr
                           5502 ;	Can't optimise plus by inc, falling back to the normal way
   0F07 2B                 5503 	dec	hl
   0F08 5E                 5504 	ld	e,(hl)
   0F09 23                 5505 	inc	hl
   0F0A 56                 5506 	ld	d,(hl)
   0F0B 21 0B 00           5507 	ld	hl,#0x000B
   0F0E 19                 5508 	add	hl,de
   0F0F 7D                 5509 	ld	a,l
   0F10 54                 5510 	ld	d,h
   0F11 F8 02              5511 	lda	hl,2(sp)
                           5512 ;	genPointerGet
                           5513 ;	AOP_STK for _rotate_player_sloc0_1_0
   0F13 22                 5514 	ld	(hl+),a
   0F14 72                 5515 	ld	(hl),d
   0F15 5F                 5516 	ld	e,a
   0F16 1A                 5517 	ld	a,(de)
   0F17 47                 5518 	ld	b,a
                           5519 ;	genIpush
                           5520 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F18 79                 5521 	ld	a,c
   0F19 F5                 5522 	push	af
   0F1A 33                 5523 	inc	sp
                           5524 ;	genIpush
   0F1B 78                 5525 	ld	a,b
   0F1C F5                 5526 	push	af
   0F1D 33                 5527 	inc	sp
                           5528 ;	genCall
   0F1E CD 00 00           5529 	call	_set_sprite_tile
   0F21 E8 02              5530 	lda	sp,2(sp)
                           5531 ;	game.c 863
                           5532 ;	genAssign
                           5533 ;	AOP_HL for _player
   0F23 21 AE 1A           5534 	ld	hl,#_player
   0F26 4E                 5535 	ld	c,(hl)
   0F27 23                 5536 	inc	hl
   0F28 46                 5537 	ld	b,(hl)
                           5538 ;	genPlus
                           5539 ;	genPlusIncr
                           5540 ;	Can't optimise plus by inc, falling back to the normal way
   0F29 79                 5541 	ld	a,c
   0F2A C6 0B              5542 	add	a,#0x0B
   0F2C 4F                 5543 	ld	c,a
   0F2D 78                 5544 	ld	a,b
   0F2E CE 00              5545 	adc	a,#0x00
   0F30 47                 5546 	ld	b,a
                           5547 ;	genPointerGet
   0F31 0A                 5548 	ld	a,(bc)
   0F32 4F                 5549 	ld	c,a
                           5550 ;	genIpush
                           5551 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F33 3E 40              5552 	ld	a,#0x40
   0F35 F5                 5553 	push	af
   0F36 33                 5554 	inc	sp
                           5555 ;	genIpush
   0F37 79                 5556 	ld	a,c
   0F38 F5                 5557 	push	af
   0F39 33                 5558 	inc	sp
                           5559 ;	genCall
   0F3A CD 00 00           5560 	call	_set_sprite_prop
   0F3D E8 02              5561 	lda	sp,2(sp)
                           5562 ;	game.c 864
                           5563 ;	genIpush
                           5564 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F3F 3E 05              5565 	ld	a,#0x05
   0F41 F5                 5566 	push	af
   0F42 33                 5567 	inc	sp
                           5568 ;	genCall
   0F43 CD 00 00           5569 	call	_performantDelay
   0F46 E8 01              5570 	lda	sp,1(sp)
                           5571 ;	game.c 865
                           5572 ;	genAssign
                           5573 ;	AOP_HL for _player
   0F48 21 AE 1A           5574 	ld	hl,#_player
   0F4B 4E                 5575 	ld	c,(hl)
   0F4C 23                 5576 	inc	hl
   0F4D 46                 5577 	ld	b,(hl)
                           5578 ;	genPlus
                           5579 ;	genPlusIncr
   0F4E 03                 5580 	inc	bc
   0F4F 03                 5581 	inc	bc
   0F50 03                 5582 	inc	bc
   0F51 03                 5583 	inc	bc
                           5584 ;	genPointerGet
   0F52 0A                 5585 	ld	a,(bc)
   0F53 4F                 5586 	ld	c,a
                           5587 ;	genAssign
                           5588 ;	AOP_HL for _player
                           5589 ;	AOP_STK for _rotate_player_sloc1_1_0
   0F54 2B                 5590 	dec	hl
   0F55 2A                 5591 	ld	a,(hl+)
   0F56 5E                 5592 	ld	e,(hl)
   0F57 F8 00              5593 	lda	hl,0(sp)
   0F59 22                 5594 	ld	(hl+),a
   0F5A 73                 5595 	ld	(hl),e
                           5596 ;	genPlus
                           5597 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5598 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5599 ;	genPlusIncr
                           5600 ;	Can't optimise plus by inc, falling back to the normal way
   0F5B 2B                 5601 	dec	hl
   0F5C 5E                 5602 	ld	e,(hl)
   0F5D 23                 5603 	inc	hl
   0F5E 56                 5604 	ld	d,(hl)
   0F5F 21 0B 00           5605 	ld	hl,#0x000B
   0F62 19                 5606 	add	hl,de
   0F63 7D                 5607 	ld	a,l
   0F64 54                 5608 	ld	d,h
   0F65 F8 02              5609 	lda	hl,2(sp)
                           5610 ;	genPointerGet
                           5611 ;	AOP_STK for _rotate_player_sloc0_1_0
   0F67 22                 5612 	ld	(hl+),a
   0F68 72                 5613 	ld	(hl),d
   0F69 5F                 5614 	ld	e,a
   0F6A 1A                 5615 	ld	a,(de)
   0F6B 47                 5616 	ld	b,a
                           5617 ;	genIpush
                           5618 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F6C 79                 5619 	ld	a,c
   0F6D F5                 5620 	push	af
   0F6E 33                 5621 	inc	sp
                           5622 ;	genIpush
   0F6F 78                 5623 	ld	a,b
   0F70 F5                 5624 	push	af
   0F71 33                 5625 	inc	sp
                           5626 ;	genCall
   0F72 CD 00 00           5627 	call	_set_sprite_tile
   0F75 E8 02              5628 	lda	sp,2(sp)
                           5629 ;	game.c 866
                           5630 ;	genAssign
                           5631 ;	AOP_HL for _player
   0F77 21 AE 1A           5632 	ld	hl,#_player
   0F7A 4E                 5633 	ld	c,(hl)
   0F7B 23                 5634 	inc	hl
   0F7C 46                 5635 	ld	b,(hl)
                           5636 ;	genPlus
                           5637 ;	genPlusIncr
                           5638 ;	Can't optimise plus by inc, falling back to the normal way
   0F7D 79                 5639 	ld	a,c
   0F7E C6 0B              5640 	add	a,#0x0B
   0F80 4F                 5641 	ld	c,a
   0F81 78                 5642 	ld	a,b
   0F82 CE 00              5643 	adc	a,#0x00
   0F84 47                 5644 	ld	b,a
                           5645 ;	genPointerGet
   0F85 0A                 5646 	ld	a,(bc)
   0F86 4F                 5647 	ld	c,a
                           5648 ;	genIpush
                           5649 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F87 3E 00              5650 	ld	a,#0x00
   0F89 F5                 5651 	push	af
   0F8A 33                 5652 	inc	sp
                           5653 ;	genIpush
   0F8B 79                 5654 	ld	a,c
   0F8C F5                 5655 	push	af
   0F8D 33                 5656 	inc	sp
                           5657 ;	genCall
   0F8E CD 00 00           5658 	call	_set_sprite_prop
   0F91 E8 02              5659 	lda	sp,2(sp)
                           5660 ;	game.c 867
                           5661 ;	genIpush
                           5662 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F93 3E 05              5663 	ld	a,#0x05
   0F95 F5                 5664 	push	af
   0F96 33                 5665 	inc	sp
                           5666 ;	genCall
   0F97 CD 00 00           5667 	call	_performantDelay
   0F9A E8 01              5668 	lda	sp,1(sp)
                           5669 ;	game.c 868
                           5670 ;	genAssign
                           5671 ;	AOP_HL for _player
   0F9C 21 AE 1A           5672 	ld	hl,#_player
   0F9F 4E                 5673 	ld	c,(hl)
   0FA0 23                 5674 	inc	hl
   0FA1 46                 5675 	ld	b,(hl)
                           5676 ;	genPlus
                           5677 ;	genPlusIncr
   0FA2 03                 5678 	inc	bc
   0FA3 03                 5679 	inc	bc
                           5680 ;	genPointerGet
   0FA4 0A                 5681 	ld	a,(bc)
   0FA5 4F                 5682 	ld	c,a
                           5683 ;	genAssign
                           5684 ;	AOP_HL for _player
                           5685 ;	AOP_STK for _rotate_player_sloc1_1_0
   0FA6 2B                 5686 	dec	hl
   0FA7 2A                 5687 	ld	a,(hl+)
   0FA8 5E                 5688 	ld	e,(hl)
   0FA9 F8 00              5689 	lda	hl,0(sp)
   0FAB 22                 5690 	ld	(hl+),a
   0FAC 73                 5691 	ld	(hl),e
                           5692 ;	genPlus
                           5693 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5694 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5695 ;	genPlusIncr
                           5696 ;	Can't optimise plus by inc, falling back to the normal way
   0FAD 2B                 5697 	dec	hl
   0FAE 5E                 5698 	ld	e,(hl)
   0FAF 23                 5699 	inc	hl
   0FB0 56                 5700 	ld	d,(hl)
   0FB1 21 0B 00           5701 	ld	hl,#0x000B
   0FB4 19                 5702 	add	hl,de
   0FB5 7D                 5703 	ld	a,l
   0FB6 54                 5704 	ld	d,h
   0FB7 F8 02              5705 	lda	hl,2(sp)
                           5706 ;	genPointerGet
                           5707 ;	AOP_STK for _rotate_player_sloc0_1_0
   0FB9 22                 5708 	ld	(hl+),a
   0FBA 72                 5709 	ld	(hl),d
   0FBB 5F                 5710 	ld	e,a
   0FBC 1A                 5711 	ld	a,(de)
   0FBD 47                 5712 	ld	b,a
                           5713 ;	genIpush
                           5714 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FBE 79                 5715 	ld	a,c
   0FBF F5                 5716 	push	af
   0FC0 33                 5717 	inc	sp
                           5718 ;	genIpush
   0FC1 78                 5719 	ld	a,b
   0FC2 F5                 5720 	push	af
   0FC3 33                 5721 	inc	sp
                           5722 ;	genCall
   0FC4 CD 00 00           5723 	call	_set_sprite_tile
   0FC7 E8 02              5724 	lda	sp,2(sp)
                           5725 ;	game.c 869
                           5726 ;	genAssign
                           5727 ;	AOP_HL for _player
   0FC9 21 AE 1A           5728 	ld	hl,#_player
   0FCC 4E                 5729 	ld	c,(hl)
   0FCD 23                 5730 	inc	hl
   0FCE 46                 5731 	ld	b,(hl)
                           5732 ;	genPlus
                           5733 ;	genPlusIncr
                           5734 ;	Can't optimise plus by inc, falling back to the normal way
   0FCF 79                 5735 	ld	a,c
   0FD0 C6 0B              5736 	add	a,#0x0B
   0FD2 4F                 5737 	ld	c,a
   0FD3 78                 5738 	ld	a,b
   0FD4 CE 00              5739 	adc	a,#0x00
   0FD6 47                 5740 	ld	b,a
                           5741 ;	genPointerGet
   0FD7 0A                 5742 	ld	a,(bc)
   0FD8 4F                 5743 	ld	c,a
                           5744 ;	genIpush
                           5745 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD9 3E 00              5746 	ld	a,#0x00
   0FDB F5                 5747 	push	af
   0FDC 33                 5748 	inc	sp
                           5749 ;	genIpush
   0FDD 79                 5750 	ld	a,c
   0FDE F5                 5751 	push	af
   0FDF 33                 5752 	inc	sp
                           5753 ;	genCall
   0FE0 CD 00 00           5754 	call	_set_sprite_prop
   0FE3 E8 02              5755 	lda	sp,2(sp)
                           5756 ;	genLabel
   0FE5                    5757 00101$:
                           5758 ;	genEndFunction
   0FE5 E8 04              5759 	lda	sp,4(sp)
   0FE7 C9                 5760 	ret
   0FE8                    5761 ___rotate_player_end:
                           5762 ;	game.c 872
                           5763 ;	genLabel
                           5764 ;	genFunction
                           5765 ;	---------------------------------
                           5766 ; Function move_character
                           5767 ; ---------------------------------
   0FE8                    5768 ___move_character_start:
   0FE8                    5769 _move_character:
   0FE8 E8 F1              5770 	lda	sp,-15(sp)
                           5771 ;	game.c 875
                           5772 ;	genAssign
                           5773 ;	AOP_HL for _player
   0FEA 21 AE 1A           5774 	ld	hl,#_player
   0FED 4E                 5775 	ld	c,(hl)
   0FEE 23                 5776 	inc	hl
   0FEF 46                 5777 	ld	b,(hl)
                           5778 ;	genPlus
                           5779 ;	genPlusIncr
                           5780 ;	Can't optimise plus by inc, falling back to the normal way
   0FF0 79                 5781 	ld	a,c
   0FF1 C6 0B              5782 	add	a,#0x0B
   0FF3 4F                 5783 	ld	c,a
   0FF4 78                 5784 	ld	a,b
   0FF5 CE 00              5785 	adc	a,#0x00
   0FF7 47                 5786 	ld	b,a
                           5787 ;	genPointerGet
   0FF8 0A                 5788 	ld	a,(bc)
   0FF9 4F                 5789 	ld	c,a
                           5790 ;	genAssign
                           5791 ;	AOP_STK for 
                           5792 ;	AOP_STK for _move_character_sloc0_1_0
   0FFA F8 11              5793 	lda	hl,17(sp)
   0FFC 2A                 5794 	ld	a,(hl+)
   0FFD 5E                 5795 	ld	e,(hl)
   0FFE F8 0D              5796 	lda	hl,13(sp)
   1000 22                 5797 	ld	(hl+),a
   1001 73                 5798 	ld	(hl),e
                           5799 ;	genPlus
                           5800 ;	AOP_STK for _move_character_sloc0_1_0
                           5801 ;	AOP_STK for _move_character_sloc1_1_0
                           5802 ;	genPlusIncr
                           5803 ;	Can't optimise plus by inc, falling back to the normal way
   1002 2B                 5804 	dec	hl
   1003 5E                 5805 	ld	e,(hl)
   1004 23                 5806 	inc	hl
   1005 56                 5807 	ld	d,(hl)
   1006 21 0B 00           5808 	ld	hl,#0x000B
   1009 19                 5809 	add	hl,de
   100A 7D                 5810 	ld	a,l
   100B 54                 5811 	ld	d,h
   100C F8 0B              5812 	lda	hl,11(sp)
                           5813 ;	genPointerGet
                           5814 ;	AOP_STK for _move_character_sloc1_1_0
   100E 22                 5815 	ld	(hl+),a
   100F 72                 5816 	ld	(hl),d
   1010 5F                 5817 	ld	e,a
   1011 1A                 5818 	ld	a,(de)
   1012 47                 5819 	ld	b,a
                           5820 ;	genCmpEq
                           5821 ; genCmpEq: left 1, right 1, result 0
   1013 79                 5822 	ld	a,c
   1014 B8                 5823 	cp	b
                           5824 ;	game.c 876
                           5825 ;	genRet
                           5826 ;	genLabel
   1015 CA 1B 10           5827 	jp	z,00102$
   1018                    5828 00197$:
   1018 C3 09 18           5829 	jp	00166$
   101B                    5830 00102$:
                           5831 ;	game.c 879
                           5832 ;	genPlus
                           5833 ;	AOP_STK for _move_character_sloc0_1_0
                           5834 ;	AOP_STK for _move_character_sloc2_1_0
                           5835 ;	genPlusIncr
                           5836 ;	Can't optimise plus by inc, falling back to the normal way
   101B F8 0D              5837 	lda	hl,13(sp)
   101D 5E                 5838 	ld	e,(hl)
   101E 23                 5839 	inc	hl
   101F 56                 5840 	ld	d,(hl)
   1020 21 09 00           5841 	ld	hl,#0x0009
   1023 19                 5842 	add	hl,de
   1024 7D                 5843 	ld	a,l
   1025 54                 5844 	ld	d,h
   1026 F8 09              5845 	lda	hl,9(sp)
                           5846 ;	genPointerGet
                           5847 ;	AOP_STK for _move_character_sloc2_1_0
   1028 22                 5848 	ld	(hl+),a
   1029 72                 5849 	ld	(hl),d
   102A 5F                 5850 	ld	e,a
   102B 1A                 5851 	ld	a,(de)
                           5852 ;	genCmpEq
                           5853 ; genCmpEq: left 1, right 1, result 0
   102C 4F                 5854 	ld	c,a
   102D B7                 5855 	or	a,a
   102E CA 2C 14           5856 	jp	z,00164$
   1031                    5857 00198$:
                           5858 ;	game.c 882
                           5859 ;	genCmpEq
                           5860 ; genCmpEq: left 1, right 1, result 0
   1031 78                 5861 	ld	a,b
   1032 FE 01              5862 	cp	a,#0x01
   1034 C2 82 13           5863 	jp	nz,00124$
   1037 18 03              5864 	jr	00200$
   1039                    5865 00199$:
   1039 C3 82 13           5866 	jp	00124$
   103C                    5867 00200$:
                           5868 ;	game.c 884
                           5869 ;	genAssign
   103C 0E 02              5870 	ld	c,#0x02
                           5871 ;	game.c 887
                           5872 ;	genPlus
                           5873 ;	AOP_STK for _move_character_sloc0_1_0
                           5874 ;	AOP_STK for _move_character_sloc3_1_0
                           5875 ;	genPlusIncr
                           5876 ;	Can't optimise plus by inc, falling back to the normal way
   103E F8 0D              5877 	lda	hl,13(sp)
   1040 5E                 5878 	ld	e,(hl)
   1041 23                 5879 	inc	hl
   1042 56                 5880 	ld	d,(hl)
   1043 21 0A 00           5881 	ld	hl,#0x000A
   1046 19                 5882 	add	hl,de
   1047 7D                 5883 	ld	a,l
   1048 54                 5884 	ld	d,h
   1049 F8 07              5885 	lda	hl,7(sp)
                           5886 ;	genPointerGet
                           5887 ;	AOP_STK for _move_character_sloc3_1_0
                           5888 ;	AOP_STK for _move_character_sloc4_1_0
   104B 22                 5889 	ld	(hl+),a
   104C 72                 5890 	ld	(hl),d
   104D 5F                 5891 	ld	e,a
   104E 1A                 5892 	ld	a,(de)
   104F 2B                 5893 	dec	hl
   1050 2B                 5894 	dec	hl
                           5895 ;	genCmpEq
                           5896 ;	AOP_STK for _move_character_sloc4_1_0
                           5897 ; genCmpEq: left 1, right 1, result 0
   1051 77                 5898 	ld      (hl),a
                           5899 ; Removed redundent load
   1052 FE 04              5900 	cp	a,#0x04
   1054 CA 74 10           5901 	jp	z,00105$
   1057                    5902 00201$:
                           5903 ;	game.c 888
                           5904 ;	genCmpEq
                           5905 ;	AOP_STK for _move_character_sloc4_1_0
                           5906 ; genCmpEq: left 1, right 1, result 0
   1057 F8 06              5907 	lda	hl,6(sp)
   1059 7E                 5908 	ld	a,(hl)
   105A FE 08              5909 	cp	a,#0x08
   105C CA 74 10           5910 	jp	z,00105$
   105F                    5911 00202$:
                           5912 ;	game.c 889
                           5913 ;	genCmpEq
                           5914 ;	AOP_STK for _move_character_sloc4_1_0
                           5915 ; genCmpEq: left 1, right 1, result 0
   105F F8 06              5916 	lda	hl,6(sp)
   1061 7E                 5917 	ld	a,(hl)
   1062 FE 0C              5918 	cp	a,#0x0C
   1064 CA 74 10           5919 	jp	z,00105$
   1067                    5920 00203$:
                           5921 ;	game.c 890
                           5922 ;	genCmpEq
                           5923 ;	AOP_STK for _move_character_sloc4_1_0
                           5924 ; genCmpEq: left 1, right 1, result 0
   1067 F8 06              5925 	lda	hl,6(sp)
   1069 7E                 5926 	ld	a,(hl)
   106A FE 10              5927 	cp	a,#0x10
   106C C2 CF 10           5928 	jp	nz,00106$
   106F 18 03              5929 	jr	00205$
   1071                    5930 00204$:
   1071 C3 CF 10           5931 	jp	00106$
   1074                    5932 00205$:
                           5933 ;	genLabel
   1074                    5934 00105$:
                           5935 ;	game.c 892
                           5936 ;	genPlus
                           5937 ;	AOP_STK for _move_character_sloc0_1_0
                           5938 ;	AOP_STK for _move_character_sloc5_1_0
                           5939 ;	genPlusIncr
                           5940 ;	Can't optimise plus by inc, falling back to the normal way
   1074 F8 0D              5941 	lda	hl,13(sp)
   1076 5E                 5942 	ld	e,(hl)
   1077 23                 5943 	inc	hl
   1078 56                 5944 	ld	d,(hl)
   1079 21 08 00           5945 	ld	hl,#0x0008
   107C 19                 5946 	add	hl,de
   107D 7D                 5947 	ld	a,l
   107E 54                 5948 	ld	d,h
   107F F8 04              5949 	lda	hl,4(sp)
                           5950 ;	genPointerGet
                           5951 ;	AOP_STK for _move_character_sloc5_1_0
                           5952 ;	AOP_STK for _move_character_sloc4_1_0
   1081 22                 5953 	ld	(hl+),a
   1082 72                 5954 	ld	(hl),d
   1083 5F                 5955 	ld	e,a
   1084 1A                 5956 	ld	a,(de)
   1085 23                 5957 	inc	hl
   1086 77                 5958 	ld	(hl),a
                           5959 ;	genPlus
                           5960 ;	AOP_STK for _move_character_sloc0_1_0
                           5961 ;	AOP_STK for _move_character_sloc5_1_0
                           5962 ;	genPlusIncr
                           5963 ;	Can't optimise plus by inc, falling back to the normal way
   1087 F8 0D              5964 	lda	hl,13(sp)
   1089 5E                 5965 	ld	e,(hl)
   108A 23                 5966 	inc	hl
   108B 56                 5967 	ld	d,(hl)
   108C 21 01 00           5968 	ld	hl,#0x0001
   108F 19                 5969 	add	hl,de
   1090 7D                 5970 	ld	a,l
   1091 54                 5971 	ld	d,h
   1092 F8 04              5972 	lda	hl,4(sp)
                           5973 ;	genPointerGet
                           5974 ;	AOP_STK for _move_character_sloc5_1_0
                           5975 ;	AOP_STK for _move_character_sloc6_1_0
   1094 22                 5976 	ld	(hl+),a
   1095 72                 5977 	ld	(hl),d
   1096 5F                 5978 	ld	e,a
   1097 1A                 5979 	ld	a,(de)
   1098 2B                 5980 	dec	hl
   1099 2B                 5981 	dec	hl
   109A 77                 5982 	ld	(hl),a
                           5983 ;	genPointerGet
                           5984 ;	AOP_STK for _move_character_sloc0_1_0
                           5985 ;	AOP_STK for _move_character_sloc5_1_0
   109B F8 0D              5986 	lda	hl,13(sp)
   109D 5E                 5987 	ld	e,(hl)
   109E 23                 5988 	inc	hl
   109F 56                 5989 	ld	d,(hl)
   10A0 1A                 5990 	ld	a,(de)
   10A1 F8 04              5991 	lda	hl,4(sp)
   10A3 77                 5992 	ld	(hl),a
                           5993 ;	genIpush
                           5994 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   10A4 C5                 5995 	push	bc
                           5996 ;	AOP_STK for _move_character_sloc4_1_0
   10A5 23                 5997 	inc	hl
   10A6 23                 5998 	inc	hl
   10A7 7E                 5999 	ld	a,(hl)
   10A8 F5                 6000 	push	af
   10A9 33                 6001 	inc	sp
                           6002 ;	genIpush
                           6003 ;	AOP_STK for _move_character_sloc6_1_0
   10AA F8 06              6004 	lda	hl,6(sp)
   10AC 7E                 6005 	ld	a,(hl)
   10AD F5                 6006 	push	af
   10AE 33                 6007 	inc	sp
                           6008 ;	genIpush
                           6009 ;	AOP_STK for _move_character_sloc5_1_0
   10AF 23                 6010 	inc	hl
   10B0 7E                 6011 	ld	a,(hl)
   10B1 F5                 6012 	push	af
   10B2 33                 6013 	inc	sp
                           6014 ;	genCall
   10B3 CD 29 0D           6015 	call	_can_move
                           6016 ;	AOP_STK for _move_character_sloc5_1_0
   10B6 F8 0A              6017 	lda	hl,10(sp)
   10B8 72                 6018 	ld	(hl),d
   10B9 2B                 6019 	dec	hl
   10BA 73                 6020 	ld	(hl),e
   10BB E8 03              6021 	lda	sp,3(sp)
   10BD C1                 6022 	pop	bc
                           6023 ;	genIfx
                           6024 ;	AOP_STK for _move_character_sloc5_1_0
   10BE F8 04              6025 	lda	hl,4(sp)
   10C0 2A                 6026 	ld	a,(hl+)
   10C1 B6                 6027 	or	a,(hl)
   10C2 C2 CF 10           6028 	jp	nz,00106$
                           6029 ;	game.c 893
                           6030 ;	genAssign (pointer)
                           6031 ;	AOP_STK for _move_character_sloc3_1_0
   10C5 23                 6032 	inc	hl
   10C6 23                 6033 	inc	hl
   10C7 5E                 6034 	ld	e,(hl)
   10C8 23                 6035 	inc	hl
   10C9 56                 6036 	ld	d,(hl)
   10CA 3E 01              6037 	ld	a,#0x01
   10CC 12                 6038 	ld	(de),a
                           6039 ;	game.c 895
                           6040 ;	genAssign
   10CD 0E 00              6041 	ld	c,#0x00
                           6042 ;	genLabel
   10CF                    6043 00106$:
                           6044 ;	game.c 900
                           6045 ;	genPlus
                           6046 ;	AOP_STK for _move_character_sloc0_1_0
                           6047 ;	AOP_STK for _move_character_sloc5_1_0
                           6048 ;	genPlusIncr
                           6049 ;	Can't optimise plus by inc, falling back to the normal way
   10CF F8 0D              6050 	lda	hl,13(sp)
   10D1 5E                 6051 	ld	e,(hl)
   10D2 23                 6052 	inc	hl
   10D3 56                 6053 	ld	d,(hl)
   10D4 21 08 00           6054 	ld	hl,#0x0008
   10D7 19                 6055 	add	hl,de
   10D8 7D                 6056 	ld	a,l
   10D9 54                 6057 	ld	d,h
   10DA F8 04              6058 	lda	hl,4(sp)
                           6059 ;	genPointerGet
                           6060 ;	AOP_STK for _move_character_sloc5_1_0
                           6061 ;	AOP_STK for _move_character_sloc6_1_0
   10DC 22                 6062 	ld	(hl+),a
   10DD 72                 6063 	ld	(hl),d
   10DE 5F                 6064 	ld	e,a
   10DF 1A                 6065 	ld	a,(de)
   10E0 2B                 6066 	dec	hl
   10E1 2B                 6067 	dec	hl
   10E2 77                 6068 	ld	(hl),a
                           6069 ;	genCmpGt
                           6070 ;	AOP_STK for _move_character_sloc6_1_0
                           6071 ;	AOP_STK for _move_character_sloc5_1_0
   10E3 3E 04              6072 	ld	a,#0x04
   10E5 96                 6073 	sub	a,(hl)
   10E6 3E 00              6074 	ld	a,#0x00
   10E8 17                 6075 	rla
   10E9 23                 6076 	inc	hl
   10EA 77                 6077 	ld	(hl),a
                           6078 ;	genIfx
                           6079 ;	AOP_STK for _move_character_sloc5_1_0
   10EB AF                 6080 	xor	a,a
   10EC B6                 6081 	or	a,(hl)
   10ED C2 58 12           6082 	jp	nz,00115$
                           6083 ;	genJumpTab
                           6084 ;	AOP_STK for _move_character_sloc6_1_0
   10F0 2B                 6085 	dec	hl
   10F1 5E                 6086 	ld	e,(hl)
   10F2 16 00              6087 	ld	d,#0x00
   10F4 21 FB 10           6088 	ld	hl,#00206$
   10F7 19                 6089 	add	hl,de
   10F8 19                 6090 	add	hl,de
   10F9 19                 6091 	add	hl,de
   10FA E9                 6092 	jp	(hl)
   10FB                    6093 00206$:
   10FB C3 52 12           6094 	jp	00114$
   10FE C3 A4 11           6095 	jp	00112$
   1101 C3 5A 11           6096 	jp	00111$
   1104 C3 FE 11           6097 	jp	00113$
   1107 C3 0A 11           6098 	jp	00110$
                           6099 ;	game.c 902
                           6100 ;	genLabel
   110A                    6101 00110$:
                           6102 ;	genPointerGet
                           6103 ;	AOP_STK for _move_character_sloc0_1_0
                           6104 ;	AOP_STK for _move_character_sloc4_1_0
   110A F8 0D              6105 	lda	hl,13(sp)
   110C 5E                 6106 	ld	e,(hl)
   110D 23                 6107 	inc	hl
   110E 56                 6108 	ld	d,(hl)
   110F 1A                 6109 	ld	a,(de)
   1110 F8 06              6110 	lda	hl,6(sp)
                           6111 ;	genMinus
                           6112 ;	AOP_STK for _move_character_sloc4_1_0
                           6113 ;	AOP_STK for _move_character_sloc7_1_0
   1112 77                 6114 	ld      (hl),a
                           6115 ; Removed redundent load
   1113 91                 6116 	sub	a,c
   1114 F8 02              6117 	lda	hl,2(sp)
   1116 77                 6118 	ld	(hl),a
                           6119 ;	genAssign (pointer)
                           6120 ;	AOP_STK for _move_character_sloc0_1_0
                           6121 ;	AOP_STK for _move_character_sloc7_1_0
   1117 F8 0D              6122 	lda	hl,13(sp)
   1119 5E                 6123 	ld	e,(hl)
   111A 23                 6124 	inc	hl
   111B 56                 6125 	ld	d,(hl)
   111C F8 02              6126 	lda	hl,2(sp)
   111E 7E                 6127 	ld	a,(hl)
   111F 12                 6128 	ld	(de),a
                           6129 ;	game.c 903
                           6130 ;	genPlus
                           6131 ;	AOP_STK for _move_character_sloc0_1_0
                           6132 ;	AOP_STK for _move_character_sloc8_1_0
                           6133 ;	genPlusIncr
                           6134 ;	Can't optimise plus by inc, falling back to the normal way
   1120 F8 0D              6135 	lda	hl,13(sp)
   1122 5E                 6136 	ld	e,(hl)
   1123 23                 6137 	inc	hl
   1124 56                 6138 	ld	d,(hl)
   1125 21 04 00           6139 	ld	hl,#0x0004
   1128 19                 6140 	add	hl,de
   1129 7D                 6141 	ld	a,l
   112A 54                 6142 	ld	d,h
   112B F8 00              6143 	lda	hl,0(sp)
                           6144 ;	genPointerGet
                           6145 ;	AOP_STK for _move_character_sloc8_1_0
                           6146 ;	AOP_STK for _move_character_sloc7_1_0
   112D 22                 6147 	ld	(hl+),a
   112E 72                 6148 	ld	(hl),d
   112F 5F                 6149 	ld	e,a
   1130 1A                 6150 	ld	a,(de)
   1131 23                 6151 	inc	hl
   1132 77                 6152 	ld	(hl),a
                           6153 ;	genIpush
                           6154 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1133 C5                 6155 	push	bc
                           6156 ;	AOP_STK for _move_character_sloc7_1_0
   1134 7E                 6157 	ld	a,(hl)
   1135 F5                 6158 	push	af
   1136 33                 6159 	inc	sp
                           6160 ;	genIpush
   1137 78                 6161 	ld	a,b
   1138 F5                 6162 	push	af
   1139 33                 6163 	inc	sp
                           6164 ;	genCall
   113A CD 00 00           6165 	call	_set_sprite_tile
   113D E8 02              6166 	lda	sp,2(sp)
   113F C1                 6167 	pop	bc
                           6168 ;	game.c 904
                           6169 ;	genPointerGet
                           6170 ;	AOP_STK for _move_character_sloc1_1_0
                           6171 ;	AOP_STK for _move_character_sloc8_1_0
   1140 F8 0B              6172 	lda	hl,11(sp)
   1142 5E                 6173 	ld	e,(hl)
   1143 23                 6174 	inc	hl
   1144 56                 6175 	ld	d,(hl)
   1145 1A                 6176 	ld	a,(de)
   1146 F8 00              6177 	lda	hl,0(sp)
   1148 77                 6178 	ld	(hl),a
                           6179 ;	genIpush
                           6180 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1149 C5                 6181 	push	bc
   114A 3E 20              6182 	ld	a,#0x20
   114C F5                 6183 	push	af
   114D 33                 6184 	inc	sp
                           6185 ;	genIpush
                           6186 ;	AOP_STK for _move_character_sloc8_1_0
   114E 7E                 6187 	ld	a,(hl)
   114F F5                 6188 	push	af
   1150 33                 6189 	inc	sp
                           6190 ;	genCall
   1151 CD 00 00           6191 	call	_set_sprite_prop
   1154 E8 02              6192 	lda	sp,2(sp)
   1156 C1                 6193 	pop	bc
                           6194 ;	game.c 905
                           6195 ;	genGoto
   1157 C3 58 12           6196 	jp	00115$
                           6197 ;	game.c 907
                           6198 ;	genLabel
   115A                    6199 00111$:
                           6200 ;	genPlus
                           6201 ;	AOP_STK for _move_character_sloc0_1_0
                           6202 ;	AOP_STK for _move_character_sloc8_1_0
                           6203 ;	genPlusIncr
                           6204 ;	Can't optimise plus by inc, falling back to the normal way
   115A F8 0D              6205 	lda	hl,13(sp)
   115C 5E                 6206 	ld	e,(hl)
   115D 23                 6207 	inc	hl
   115E 56                 6208 	ld	d,(hl)
   115F 21 04 00           6209 	ld	hl,#0x0004
   1162 19                 6210 	add	hl,de
   1163 7D                 6211 	ld	a,l
   1164 54                 6212 	ld	d,h
   1165 F8 00              6213 	lda	hl,0(sp)
                           6214 ;	genPointerGet
                           6215 ;	AOP_STK for _move_character_sloc8_1_0
                           6216 ;	AOP_STK for _move_character_sloc7_1_0
   1167 22                 6217 	ld	(hl+),a
   1168 72                 6218 	ld	(hl),d
   1169 5F                 6219 	ld	e,a
   116A 1A                 6220 	ld	a,(de)
   116B 23                 6221 	inc	hl
   116C 77                 6222 	ld	(hl),a
                           6223 ;	genIpush
                           6224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   116D C5                 6225 	push	bc
                           6226 ;	AOP_STK for _move_character_sloc7_1_0
   116E 7E                 6227 	ld	a,(hl)
   116F F5                 6228 	push	af
   1170 33                 6229 	inc	sp
                           6230 ;	genIpush
   1171 78                 6231 	ld	a,b
   1172 F5                 6232 	push	af
   1173 33                 6233 	inc	sp
                           6234 ;	genCall
   1174 CD 00 00           6235 	call	_set_sprite_tile
   1177 E8 02              6236 	lda	sp,2(sp)
   1179 C1                 6237 	pop	bc
                           6238 ;	game.c 908
                           6239 ;	genPointerGet
                           6240 ;	AOP_STK for _move_character_sloc1_1_0
                           6241 ;	AOP_STK for _move_character_sloc8_1_0
   117A F8 0B              6242 	lda	hl,11(sp)
   117C 5E                 6243 	ld	e,(hl)
   117D 23                 6244 	inc	hl
   117E 56                 6245 	ld	d,(hl)
   117F 1A                 6246 	ld	a,(de)
   1180 F8 00              6247 	lda	hl,0(sp)
   1182 77                 6248 	ld	(hl),a
                           6249 ;	genIpush
                           6250 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1183 C5                 6251 	push	bc
   1184 3E 00              6252 	ld	a,#0x00
   1186 F5                 6253 	push	af
   1187 33                 6254 	inc	sp
                           6255 ;	genIpush
                           6256 ;	AOP_STK for _move_character_sloc8_1_0
   1188 7E                 6257 	ld	a,(hl)
   1189 F5                 6258 	push	af
   118A 33                 6259 	inc	sp
                           6260 ;	genCall
   118B CD 00 00           6261 	call	_set_sprite_prop
   118E E8 02              6262 	lda	sp,2(sp)
   1190 C1                 6263 	pop	bc
                           6264 ;	game.c 909
                           6265 ;	genPointerGet
                           6266 ;	AOP_STK for _move_character_sloc0_1_0
                           6267 ;	AOP_STK for _move_character_sloc8_1_0
   1191 F8 0D              6268 	lda	hl,13(sp)
   1193 5E                 6269 	ld	e,(hl)
   1194 23                 6270 	inc	hl
   1195 56                 6271 	ld	d,(hl)
   1196 1A                 6272 	ld	a,(de)
   1197 F8 00              6273 	lda	hl,0(sp)
                           6274 ;	genPlus
                           6275 ;	AOP_STK for _move_character_sloc8_1_0
                           6276 ;	Can't optimise plus by inc, falling back to the normal way
   1199 77                 6277 	ld      (hl),a
                           6278 ; Removed redundent load
   119A 81                 6279 	add	a,c
                           6280 ;	genAssign (pointer)
                           6281 ;	AOP_STK for _move_character_sloc0_1_0
   119B F8 0D              6282 	lda	hl,13(sp)
   119D 5E                 6283 	ld	e,(hl)
   119E 23                 6284 	inc	hl
   119F 56                 6285 	ld	d,(hl)
   11A0 12                 6286 	ld	(de),a
                           6287 ;	game.c 910
                           6288 ;	genGoto
   11A1 C3 58 12           6289 	jp	00115$
                           6290 ;	game.c 912
                           6291 ;	genLabel
   11A4                    6292 00112$:
                           6293 ;	genPlus
                           6294 ;	AOP_STK for _move_character_sloc0_1_0
                           6295 ;	AOP_STK for _move_character_sloc8_1_0
                           6296 ;	genPlusIncr
                           6297 ;	Can't optimise plus by inc, falling back to the normal way
   11A4 F8 0D              6298 	lda	hl,13(sp)
   11A6 5E                 6299 	ld	e,(hl)
   11A7 23                 6300 	inc	hl
   11A8 56                 6301 	ld	d,(hl)
   11A9 21 07 00           6302 	ld	hl,#0x0007
   11AC 19                 6303 	add	hl,de
   11AD 7D                 6304 	ld	a,l
   11AE 54                 6305 	ld	d,h
   11AF F8 00              6306 	lda	hl,0(sp)
                           6307 ;	genPointerGet
                           6308 ;	AOP_STK for _move_character_sloc8_1_0
                           6309 ;	AOP_STK for _move_character_sloc7_1_0
   11B1 22                 6310 	ld	(hl+),a
   11B2 72                 6311 	ld	(hl),d
   11B3 5F                 6312 	ld	e,a
   11B4 1A                 6313 	ld	a,(de)
   11B5 23                 6314 	inc	hl
   11B6 77                 6315 	ld	(hl),a
                           6316 ;	genIpush
                           6317 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   11B7 C5                 6318 	push	bc
                           6319 ;	AOP_STK for _move_character_sloc7_1_0
   11B8 7E                 6320 	ld	a,(hl)
   11B9 F5                 6321 	push	af
   11BA 33                 6322 	inc	sp
                           6323 ;	genIpush
   11BB 78                 6324 	ld	a,b
   11BC F5                 6325 	push	af
   11BD 33                 6326 	inc	sp
                           6327 ;	genCall
   11BE CD 00 00           6328 	call	_set_sprite_tile
   11C1 E8 02              6329 	lda	sp,2(sp)
   11C3 C1                 6330 	pop	bc
                           6331 ;	game.c 913
                           6332 ;	genPointerGet
                           6333 ;	AOP_STK for _move_character_sloc1_1_0
                           6334 ;	AOP_STK for _move_character_sloc8_1_0
   11C4 F8 0B              6335 	lda	hl,11(sp)
   11C6 5E                 6336 	ld	e,(hl)
   11C7 23                 6337 	inc	hl
   11C8 56                 6338 	ld	d,(hl)
   11C9 1A                 6339 	ld	a,(de)
   11CA F8 00              6340 	lda	hl,0(sp)
   11CC 77                 6341 	ld	(hl),a
                           6342 ;	genIpush
                           6343 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   11CD C5                 6344 	push	bc
   11CE 3E 20              6345 	ld	a,#0x20
   11D0 F5                 6346 	push	af
   11D1 33                 6347 	inc	sp
                           6348 ;	genIpush
                           6349 ;	AOP_STK for _move_character_sloc8_1_0
   11D2 7E                 6350 	ld	a,(hl)
   11D3 F5                 6351 	push	af
   11D4 33                 6352 	inc	sp
                           6353 ;	genCall
   11D5 CD 00 00           6354 	call	_set_sprite_prop
   11D8 E8 02              6355 	lda	sp,2(sp)
   11DA C1                 6356 	pop	bc
                           6357 ;	game.c 914
                           6358 ;	genPlus
                           6359 ;	AOP_STK for _move_character_sloc0_1_0
                           6360 ;	AOP_STK for _move_character_sloc8_1_0
                           6361 ;	genPlusIncr
                           6362 ;	Can't optimise plus by inc, falling back to the normal way
   11DB F8 0D              6363 	lda	hl,13(sp)
   11DD 5E                 6364 	ld	e,(hl)
   11DE 23                 6365 	inc	hl
   11DF 56                 6366 	ld	d,(hl)
   11E0 21 01 00           6367 	ld	hl,#0x0001
   11E3 19                 6368 	add	hl,de
   11E4 7D                 6369 	ld	a,l
   11E5 54                 6370 	ld	d,h
   11E6 F8 00              6371 	lda	hl,0(sp)
                           6372 ;	genPointerGet
                           6373 ;	AOP_STK for _move_character_sloc8_1_0
                           6374 ;	AOP_STK for _move_character_sloc7_1_0
   11E8 22                 6375 	ld	(hl+),a
   11E9 72                 6376 	ld	(hl),d
   11EA 5F                 6377 	ld	e,a
   11EB 1A                 6378 	ld	a,(de)
   11EC 23                 6379 	inc	hl
                           6380 ;	genMinus
                           6381 ;	AOP_STK for _move_character_sloc7_1_0
                           6382 ;	AOP_STK for _move_character_sloc4_1_0
   11ED 77                 6383 	ld      (hl),a
                           6384 ; Removed redundent load
   11EE 91                 6385 	sub	a,c
   11EF F8 06              6386 	lda	hl,6(sp)
   11F1 77                 6387 	ld	(hl),a
                           6388 ;	genAssign (pointer)
                           6389 ;	AOP_STK for _move_character_sloc8_1_0
                           6390 ;	AOP_STK for _move_character_sloc4_1_0
   11F2 F8 00              6391 	lda	hl,0(sp)
   11F4 5E                 6392 	ld	e,(hl)
   11F5 23                 6393 	inc	hl
   11F6 56                 6394 	ld	d,(hl)
   11F7 F8 06              6395 	lda	hl,6(sp)
   11F9 7E                 6396 	ld	a,(hl)
   11FA 12                 6397 	ld	(de),a
                           6398 ;	game.c 915
                           6399 ;	genGoto
   11FB C3 58 12           6400 	jp	00115$
                           6401 ;	game.c 917
                           6402 ;	genLabel
   11FE                    6403 00113$:
                           6404 ;	genPlus
                           6405 ;	AOP_STK for _move_character_sloc0_1_0
                           6406 ;	AOP_STK for _move_character_sloc8_1_0
                           6407 ;	genPlusIncr
                           6408 ;	Can't optimise plus by inc, falling back to the normal way
   11FE F8 0D              6409 	lda	hl,13(sp)
   1200 5E                 6410 	ld	e,(hl)
   1201 23                 6411 	inc	hl
   1202 56                 6412 	ld	d,(hl)
   1203 21 07 00           6413 	ld	hl,#0x0007
   1206 19                 6414 	add	hl,de
   1207 7D                 6415 	ld	a,l
   1208 54                 6416 	ld	d,h
   1209 F8 00              6417 	lda	hl,0(sp)
                           6418 ;	genPointerGet
                           6419 ;	AOP_STK for _move_character_sloc8_1_0
                           6420 ;	AOP_STK for _move_character_sloc7_1_0
   120B 22                 6421 	ld	(hl+),a
   120C 72                 6422 	ld	(hl),d
   120D 5F                 6423 	ld	e,a
   120E 1A                 6424 	ld	a,(de)
   120F 23                 6425 	inc	hl
   1210 77                 6426 	ld	(hl),a
                           6427 ;	genIpush
                           6428 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1211 C5                 6429 	push	bc
                           6430 ;	AOP_STK for _move_character_sloc7_1_0
   1212 7E                 6431 	ld	a,(hl)
   1213 F5                 6432 	push	af
   1214 33                 6433 	inc	sp
                           6434 ;	genIpush
   1215 78                 6435 	ld	a,b
   1216 F5                 6436 	push	af
   1217 33                 6437 	inc	sp
                           6438 ;	genCall
   1218 CD 00 00           6439 	call	_set_sprite_tile
   121B E8 02              6440 	lda	sp,2(sp)
   121D C1                 6441 	pop	bc
                           6442 ;	game.c 918
                           6443 ;	genPointerGet
                           6444 ;	AOP_STK for _move_character_sloc1_1_0
                           6445 ;	AOP_STK for _move_character_sloc8_1_0
   121E F8 0B              6446 	lda	hl,11(sp)
   1220 5E                 6447 	ld	e,(hl)
   1221 23                 6448 	inc	hl
   1222 56                 6449 	ld	d,(hl)
   1223 1A                 6450 	ld	a,(de)
   1224 F8 00              6451 	lda	hl,0(sp)
   1226 77                 6452 	ld	(hl),a
                           6453 ;	genIpush
                           6454 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1227 C5                 6455 	push	bc
   1228 3E 40              6456 	ld	a,#0x40
   122A F5                 6457 	push	af
   122B 33                 6458 	inc	sp
                           6459 ;	genIpush
                           6460 ;	AOP_STK for _move_character_sloc8_1_0
   122C 7E                 6461 	ld	a,(hl)
   122D F5                 6462 	push	af
   122E 33                 6463 	inc	sp
                           6464 ;	genCall
   122F CD 00 00           6465 	call	_set_sprite_prop
   1232 E8 02              6466 	lda	sp,2(sp)
   1234 C1                 6467 	pop	bc
                           6468 ;	game.c 919
                           6469 ;	genPlus
                           6470 ;	AOP_STK for _move_character_sloc0_1_0
                           6471 ;	AOP_STK for _move_character_sloc8_1_0
                           6472 ;	genPlusIncr
                           6473 ;	Can't optimise plus by inc, falling back to the normal way
   1235 F8 0D              6474 	lda	hl,13(sp)
   1237 5E                 6475 	ld	e,(hl)
   1238 23                 6476 	inc	hl
   1239 56                 6477 	ld	d,(hl)
   123A 21 01 00           6478 	ld	hl,#0x0001
   123D 19                 6479 	add	hl,de
   123E 7D                 6480 	ld	a,l
   123F 54                 6481 	ld	d,h
   1240 F8 00              6482 	lda	hl,0(sp)
                           6483 ;	genPointerGet
                           6484 ;	AOP_STK for _move_character_sloc8_1_0
                           6485 ;	AOP_STK for _move_character_sloc7_1_0
   1242 22                 6486 	ld	(hl+),a
   1243 72                 6487 	ld	(hl),d
   1244 5F                 6488 	ld	e,a
   1245 1A                 6489 	ld	a,(de)
   1246 23                 6490 	inc	hl
                           6491 ;	genPlus
                           6492 ;	AOP_STK for _move_character_sloc7_1_0
                           6493 ;	Can't optimise plus by inc, falling back to the normal way
   1247 77                 6494 	ld      (hl),a
                           6495 ; Removed redundent load
   1248 81                 6496 	add	a,c
                           6497 ;	genAssign (pointer)
                           6498 ;	AOP_STK for _move_character_sloc8_1_0
   1249 2B                 6499 	dec	hl
   124A 2B                 6500 	dec	hl
   124B 5E                 6501 	ld	e,(hl)
   124C 23                 6502 	inc	hl
   124D 56                 6503 	ld	d,(hl)
   124E 12                 6504 	ld	(de),a
                           6505 ;	game.c 920
                           6506 ;	genGoto
   124F C3 58 12           6507 	jp	00115$
                           6508 ;	game.c 922
                           6509 ;	genLabel
   1252                    6510 00114$:
                           6511 ;	genCall
                           6512 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1252 C5                 6513 	push	bc
   1253 CD 42 0E           6514 	call	_rotate_player
   1256 E1                 6515 	pop	hl
   1257 44                 6516 	ld	b,h
                           6517 ;	game.c 924
                           6518 ;	genLabel
   1258                    6519 00115$:
                           6520 ;	game.c 926
                           6521 ;	genPointerGet
                           6522 ;	AOP_STK for _move_character_sloc3_1_0
   1258 F8 07              6523 	lda	hl,7(sp)
   125A 5E                 6524 	ld	e,(hl)
   125B 23                 6525 	inc	hl
   125C 56                 6526 	ld	d,(hl)
   125D 1A                 6527 	ld	a,(de)
   125E 4F                 6528 	ld	c,a
                           6529 ;	genMinus
   125F 0D                 6530 	dec	c
                           6531 ;	genAssign (pointer)
                           6532 ;	AOP_STK for _move_character_sloc3_1_0
   1260 2B                 6533 	dec	hl
   1261 5E                 6534 	ld	e,(hl)
   1262 23                 6535 	inc	hl
   1263 56                 6536 	ld	d,(hl)
   1264 79                 6537 	ld	a,c
   1265 12                 6538 	ld	(de),a
                           6539 ;	game.c 927
                           6540 ;	genCmpEq
                           6541 ; genCmpEq: left 1, right 1, result 0
   1266 79                 6542 	ld	a,c
   1267 B7                 6543 	or	a,a
   1268 C2 82 13           6544 	jp	nz,00124$
   126B 18 03              6545 	jr	00208$
   126D                    6546 00207$:
   126D C3 82 13           6547 	jp	00124$
   1270                    6548 00208$:
                           6549 ;	game.c 928
                           6550 ;	genAssign (pointer)
                           6551 ;	AOP_STK for _move_character_sloc2_1_0
   1270 F8 09              6552 	lda	hl,9(sp)
   1272 5E                 6553 	ld	e,(hl)
   1273 23                 6554 	inc	hl
   1274 56                 6555 	ld	d,(hl)
   1275 3E 00              6556 	ld	a,#0x00
   1277 12                 6557 	ld	(de),a
                           6558 ;	game.c 929
                           6559 ;	genCmpLt
                           6560 ;	AOP_STK for _move_character_sloc6_1_0
   1278 F8 03              6561 	lda	hl,3(sp)
   127A 7E                 6562 	ld	a,(hl)
   127B FE 01              6563 	cp	#0x01
   127D DA 82 13           6564 	jp	c,00124$
                           6565 ;	genIfx
                           6566 ;	AOP_STK for _move_character_sloc5_1_0
   1280 AF                 6567 	xor	a,a
   1281 23                 6568 	inc	hl
   1282 B6                 6569 	or	a,(hl)
   1283 C2 82 13           6570 	jp	nz,00124$
                           6571 ;	genMinus
                           6572 ;	AOP_STK for _move_character_sloc6_1_0
   1286 2B                 6573 	dec	hl
   1287 7E                 6574 	ld	a,(hl)
   1288 C6 FF              6575 	add	a,#0xFF
   128A 4F                 6576 	ld	c,a
                           6577 ;	genJumpTab
   128B 59                 6578 	ld	e,c
   128C 16 00              6579 	ld	d,#0x00
   128E 21 95 12           6580 	ld	hl,#00209$
   1291 19                 6581 	add	hl,de
   1292 19                 6582 	add	hl,de
   1293 19                 6583 	add	hl,de
   1294 E9                 6584 	jp	(hl)
   1295                    6585 00209$:
   1295 C3 13 13           6586 	jp	00118$
   1298 C3 DA 12           6587 	jp	00117$
   129B C3 4C 13           6588 	jp	00119$
   129E C3 A1 12           6589 	jp	00116$
                           6590 ;	game.c 932
                           6591 ;	genLabel
   12A1                    6592 00116$:
                           6593 ;	genPlus
                           6594 ;	AOP_STK for _move_character_sloc0_1_0
                           6595 ;	AOP_STK for _move_character_sloc8_1_0
                           6596 ;	genPlusIncr
                           6597 ;	Can't optimise plus by inc, falling back to the normal way
   12A1 F8 0D              6598 	lda	hl,13(sp)
   12A3 5E                 6599 	ld	e,(hl)
   12A4 23                 6600 	inc	hl
   12A5 56                 6601 	ld	d,(hl)
   12A6 21 02 00           6602 	ld	hl,#0x0002
   12A9 19                 6603 	add	hl,de
   12AA 7D                 6604 	ld	a,l
   12AB 54                 6605 	ld	d,h
   12AC F8 00              6606 	lda	hl,0(sp)
                           6607 ;	genPointerGet
                           6608 ;	AOP_STK for _move_character_sloc8_1_0
   12AE 22                 6609 	ld	(hl+),a
   12AF 72                 6610 	ld	(hl),d
   12B0 5F                 6611 	ld	e,a
   12B1 1A                 6612 	ld	a,(de)
   12B2 4F                 6613 	ld	c,a
                           6614 ;	genIpush
                           6615 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12B3 C5                 6616 	push	bc
   12B4 79                 6617 	ld	a,c
   12B5 F5                 6618 	push	af
   12B6 33                 6619 	inc	sp
                           6620 ;	genIpush
   12B7 78                 6621 	ld	a,b
   12B8 F5                 6622 	push	af
   12B9 33                 6623 	inc	sp
                           6624 ;	genCall
   12BA CD 00 00           6625 	call	_set_sprite_tile
   12BD E8 02              6626 	lda	sp,2(sp)
   12BF E1                 6627 	pop	hl
   12C0 44                 6628 	ld	b,h
                           6629 ;	game.c 933
                           6630 ;	genPointerGet
                           6631 ;	AOP_STK for _move_character_sloc1_1_0
   12C1 F8 0B              6632 	lda	hl,11(sp)
   12C3 5E                 6633 	ld	e,(hl)
   12C4 23                 6634 	inc	hl
   12C5 56                 6635 	ld	d,(hl)
   12C6 1A                 6636 	ld	a,(de)
   12C7 4F                 6637 	ld	c,a
                           6638 ;	genIpush
                           6639 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12C8 C5                 6640 	push	bc
   12C9 3E 20              6641 	ld	a,#0x20
   12CB F5                 6642 	push	af
   12CC 33                 6643 	inc	sp
                           6644 ;	genIpush
   12CD 79                 6645 	ld	a,c
   12CE F5                 6646 	push	af
   12CF 33                 6647 	inc	sp
                           6648 ;	genCall
   12D0 CD 00 00           6649 	call	_set_sprite_prop
   12D3 E8 02              6650 	lda	sp,2(sp)
   12D5 E1                 6651 	pop	hl
   12D6 44                 6652 	ld	b,h
                           6653 ;	game.c 934
                           6654 ;	genGoto
   12D7 C3 82 13           6655 	jp	00124$
                           6656 ;	game.c 937
                           6657 ;	genLabel
   12DA                    6658 00117$:
                           6659 ;	genPlus
                           6660 ;	AOP_STK for _move_character_sloc0_1_0
                           6661 ;	AOP_STK for _move_character_sloc8_1_0
                           6662 ;	genPlusIncr
                           6663 ;	Can't optimise plus by inc, falling back to the normal way
   12DA F8 0D              6664 	lda	hl,13(sp)
   12DC 5E                 6665 	ld	e,(hl)
   12DD 23                 6666 	inc	hl
   12DE 56                 6667 	ld	d,(hl)
   12DF 21 02 00           6668 	ld	hl,#0x0002
   12E2 19                 6669 	add	hl,de
   12E3 7D                 6670 	ld	a,l
   12E4 54                 6671 	ld	d,h
   12E5 F8 00              6672 	lda	hl,0(sp)
                           6673 ;	genPointerGet
                           6674 ;	AOP_STK for _move_character_sloc8_1_0
   12E7 22                 6675 	ld	(hl+),a
   12E8 72                 6676 	ld	(hl),d
   12E9 5F                 6677 	ld	e,a
   12EA 1A                 6678 	ld	a,(de)
   12EB 4F                 6679 	ld	c,a
                           6680 ;	genIpush
                           6681 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12EC C5                 6682 	push	bc
   12ED 79                 6683 	ld	a,c
   12EE F5                 6684 	push	af
   12EF 33                 6685 	inc	sp
                           6686 ;	genIpush
   12F0 78                 6687 	ld	a,b
   12F1 F5                 6688 	push	af
   12F2 33                 6689 	inc	sp
                           6690 ;	genCall
   12F3 CD 00 00           6691 	call	_set_sprite_tile
   12F6 E8 02              6692 	lda	sp,2(sp)
   12F8 E1                 6693 	pop	hl
   12F9 44                 6694 	ld	b,h
                           6695 ;	game.c 938
                           6696 ;	genPointerGet
                           6697 ;	AOP_STK for _move_character_sloc1_1_0
   12FA F8 0B              6698 	lda	hl,11(sp)
   12FC 5E                 6699 	ld	e,(hl)
   12FD 23                 6700 	inc	hl
   12FE 56                 6701 	ld	d,(hl)
   12FF 1A                 6702 	ld	a,(de)
   1300 4F                 6703 	ld	c,a
                           6704 ;	genIpush
                           6705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1301 C5                 6706 	push	bc
   1302 3E 00              6707 	ld	a,#0x00
   1304 F5                 6708 	push	af
   1305 33                 6709 	inc	sp
                           6710 ;	genIpush
   1306 79                 6711 	ld	a,c
   1307 F5                 6712 	push	af
   1308 33                 6713 	inc	sp
                           6714 ;	genCall
   1309 CD 00 00           6715 	call	_set_sprite_prop
   130C E8 02              6716 	lda	sp,2(sp)
   130E E1                 6717 	pop	hl
   130F 44                 6718 	ld	b,h
                           6719 ;	game.c 939
                           6720 ;	genGoto
   1310 C3 82 13           6721 	jp	00124$
                           6722 ;	game.c 941
                           6723 ;	genLabel
   1313                    6724 00118$:
                           6725 ;	genPlus
                           6726 ;	AOP_STK for _move_character_sloc0_1_0
                           6727 ;	AOP_STK for _move_character_sloc8_1_0
                           6728 ;	genPlusIncr
                           6729 ;	Can't optimise plus by inc, falling back to the normal way
   1313 F8 0D              6730 	lda	hl,13(sp)
   1315 5E                 6731 	ld	e,(hl)
   1316 23                 6732 	inc	hl
   1317 56                 6733 	ld	d,(hl)
   1318 21 05 00           6734 	ld	hl,#0x0005
   131B 19                 6735 	add	hl,de
   131C 7D                 6736 	ld	a,l
   131D 54                 6737 	ld	d,h
   131E F8 00              6738 	lda	hl,0(sp)
                           6739 ;	genPointerGet
                           6740 ;	AOP_STK for _move_character_sloc8_1_0
   1320 22                 6741 	ld	(hl+),a
   1321 72                 6742 	ld	(hl),d
   1322 5F                 6743 	ld	e,a
   1323 1A                 6744 	ld	a,(de)
   1324 4F                 6745 	ld	c,a
                           6746 ;	genIpush
                           6747 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1325 C5                 6748 	push	bc
   1326 79                 6749 	ld	a,c
   1327 F5                 6750 	push	af
   1328 33                 6751 	inc	sp
                           6752 ;	genIpush
   1329 78                 6753 	ld	a,b
   132A F5                 6754 	push	af
   132B 33                 6755 	inc	sp
                           6756 ;	genCall
   132C CD 00 00           6757 	call	_set_sprite_tile
   132F E8 02              6758 	lda	sp,2(sp)
   1331 E1                 6759 	pop	hl
   1332 44                 6760 	ld	b,h
                           6761 ;	game.c 942
                           6762 ;	genPointerGet
                           6763 ;	AOP_STK for _move_character_sloc1_1_0
   1333 F8 0B              6764 	lda	hl,11(sp)
   1335 5E                 6765 	ld	e,(hl)
   1336 23                 6766 	inc	hl
   1337 56                 6767 	ld	d,(hl)
   1338 1A                 6768 	ld	a,(de)
   1339 4F                 6769 	ld	c,a
                           6770 ;	genIpush
                           6771 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   133A C5                 6772 	push	bc
   133B 3E 20              6773 	ld	a,#0x20
   133D F5                 6774 	push	af
   133E 33                 6775 	inc	sp
                           6776 ;	genIpush
   133F 79                 6777 	ld	a,c
   1340 F5                 6778 	push	af
   1341 33                 6779 	inc	sp
                           6780 ;	genCall
   1342 CD 00 00           6781 	call	_set_sprite_prop
   1345 E8 02              6782 	lda	sp,2(sp)
   1347 E1                 6783 	pop	hl
   1348 44                 6784 	ld	b,h
                           6785 ;	game.c 943
                           6786 ;	genGoto
   1349 C3 82 13           6787 	jp	00124$
                           6788 ;	game.c 945
                           6789 ;	genLabel
   134C                    6790 00119$:
                           6791 ;	genPlus
                           6792 ;	AOP_STK for _move_character_sloc0_1_0
                           6793 ;	AOP_STK for _move_character_sloc8_1_0
                           6794 ;	genPlusIncr
                           6795 ;	Can't optimise plus by inc, falling back to the normal way
   134C F8 0D              6796 	lda	hl,13(sp)
   134E 5E                 6797 	ld	e,(hl)
   134F 23                 6798 	inc	hl
   1350 56                 6799 	ld	d,(hl)
   1351 21 05 00           6800 	ld	hl,#0x0005
   1354 19                 6801 	add	hl,de
   1355 7D                 6802 	ld	a,l
   1356 54                 6803 	ld	d,h
   1357 F8 00              6804 	lda	hl,0(sp)
                           6805 ;	genPointerGet
                           6806 ;	AOP_STK for _move_character_sloc8_1_0
   1359 22                 6807 	ld	(hl+),a
   135A 72                 6808 	ld	(hl),d
   135B 5F                 6809 	ld	e,a
   135C 1A                 6810 	ld	a,(de)
   135D 4F                 6811 	ld	c,a
                           6812 ;	genIpush
                           6813 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   135E C5                 6814 	push	bc
   135F 79                 6815 	ld	a,c
   1360 F5                 6816 	push	af
   1361 33                 6817 	inc	sp
                           6818 ;	genIpush
   1362 78                 6819 	ld	a,b
   1363 F5                 6820 	push	af
   1364 33                 6821 	inc	sp
                           6822 ;	genCall
   1365 CD 00 00           6823 	call	_set_sprite_tile
   1368 E8 02              6824 	lda	sp,2(sp)
   136A E1                 6825 	pop	hl
   136B 44                 6826 	ld	b,h
                           6827 ;	game.c 946
                           6828 ;	genPointerGet
                           6829 ;	AOP_STK for _move_character_sloc1_1_0
   136C F8 0B              6830 	lda	hl,11(sp)
   136E 5E                 6831 	ld	e,(hl)
   136F 23                 6832 	inc	hl
   1370 56                 6833 	ld	d,(hl)
   1371 1A                 6834 	ld	a,(de)
   1372 4F                 6835 	ld	c,a
                           6836 ;	genIpush
                           6837 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1373 C5                 6838 	push	bc
   1374 3E 40              6839 	ld	a,#0x40
   1376 F5                 6840 	push	af
   1377 33                 6841 	inc	sp
                           6842 ;	genIpush
   1378 79                 6843 	ld	a,c
   1379 F5                 6844 	push	af
   137A 33                 6845 	inc	sp
                           6846 ;	genCall
   137B CD 00 00           6847 	call	_set_sprite_prop
   137E E8 02              6848 	lda	sp,2(sp)
   1380 E1                 6849 	pop	hl
   1381 44                 6850 	ld	b,h
                           6851 ;	game.c 948
                           6852 ;	genLabel
   1382                    6853 00124$:
                           6854 ;	game.c 954
                           6855 ;	genCmpEq
                           6856 ; genCmpEq: left 1, right 1, result 0
   1382 78                 6857 	ld	a,b
   1383 FE 02              6858 	cp	a,#0x02
   1385 C2 E0 17           6859 	jp	nz,00165$
   1388 18 03              6860 	jr	00211$
   138A                    6861 00210$:
   138A C3 E0 17           6862 	jp	00165$
   138D                    6863 00211$:
                           6864 ;	game.c 955
                           6865 ;	genPlus
                           6866 ;	AOP_STK for _move_character_sloc0_1_0
                           6867 ;	AOP_STK for _move_character_sloc8_1_0
                           6868 ;	genPlusIncr
                           6869 ;	Can't optimise plus by inc, falling back to the normal way
   138D F8 0D              6870 	lda	hl,13(sp)
   138F 5E                 6871 	ld	e,(hl)
   1390 23                 6872 	inc	hl
   1391 56                 6873 	ld	d,(hl)
   1392 21 04 00           6874 	ld	hl,#0x0004
   1395 19                 6875 	add	hl,de
   1396 7D                 6876 	ld	a,l
   1397 54                 6877 	ld	d,h
   1398 F8 00              6878 	lda	hl,0(sp)
                           6879 ;	genPointerGet
                           6880 ;	AOP_STK for _move_character_sloc8_1_0
   139A 22                 6881 	ld	(hl+),a
   139B 72                 6882 	ld	(hl),d
   139C 5F                 6883 	ld	e,a
   139D 1A                 6884 	ld	a,(de)
   139E 4F                 6885 	ld	c,a
                           6886 ;	genIpush
                           6887 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   139F C5                 6888 	push	bc
   13A0 79                 6889 	ld	a,c
   13A1 F5                 6890 	push	af
   13A2 33                 6891 	inc	sp
                           6892 ;	genIpush
   13A3 78                 6893 	ld	a,b
   13A4 F5                 6894 	push	af
   13A5 33                 6895 	inc	sp
                           6896 ;	genCall
   13A6 CD 00 00           6897 	call	_set_sprite_tile
   13A9 E8 02              6898 	lda	sp,2(sp)
   13AB E1                 6899 	pop	hl
   13AC 44                 6900 	ld	b,h
                           6901 ;	game.c 957
                           6902 ;	genPointerGet
                           6903 ;	AOP_STK for _move_character_sloc2_1_0
   13AD F8 09              6904 	lda	hl,9(sp)
   13AF 5E                 6905 	ld	e,(hl)
   13B0 23                 6906 	inc	hl
   13B1 56                 6907 	ld	d,(hl)
   13B2 1A                 6908 	ld	a,(de)
                           6909 ;	genCmpEq
                           6910 ; genCmpEq: left 1, right 1, result 0
   13B3 4F                 6911 	ld	c,a
   13B4 FE 01              6912 	cp	a,#0x01
   13B6 C2 D5 13           6913 	jp	nz,00126$
   13B9 18 03              6914 	jr	00213$
   13BB                    6915 00212$:
   13BB C3 D5 13           6916 	jp	00126$
   13BE                    6917 00213$:
                           6918 ;	game.c 959
                           6919 ;	genAssign (pointer)
                           6920 ;	AOP_STK for _move_character_sloc2_1_0
   13BE F8 09              6921 	lda	hl,9(sp)
   13C0 5E                 6922 	ld	e,(hl)
   13C1 23                 6923 	inc	hl
   13C2 56                 6924 	ld	d,(hl)
   13C3 3E 02              6925 	ld	a,#0x02
   13C5 12                 6926 	ld	(de),a
                           6927 ;	game.c 960
                           6928 ;	genPlus
                           6929 ;	AOP_STK for _move_character_sloc0_1_0
                           6930 ;	genPlusIncr
                           6931 ;	Can't optimise plus by inc, falling back to the normal way
   13C6 F8 0D              6932 	lda	hl,13(sp)
   13C8 5E                 6933 	ld	e,(hl)
   13C9 23                 6934 	inc	hl
   13CA 56                 6935 	ld	d,(hl)
   13CB 21 0A 00           6936 	ld	hl,#0x000A
   13CE 19                 6937 	add	hl,de
   13CF 7D                 6938 	ld	a,l
   13D0 54                 6939 	ld	d,h
   13D1 6F                 6940 	ld	l,a
   13D2 62                 6941 	ld	h,d
                           6942 ;	genAssign (pointer)
   13D3 36 10              6943 	ld	(hl),#0x10
                           6944 ;	genLabel
   13D5                    6945 00126$:
                           6946 ;	game.c 962
                           6947 ;	genPlus
                           6948 ;	AOP_STK for _move_character_sloc0_1_0
                           6949 ;	AOP_STK for _move_character_sloc8_1_0
                           6950 ;	genPlusIncr
                           6951 ;	Can't optimise plus by inc, falling back to the normal way
   13D5 F8 0D              6952 	lda	hl,13(sp)
   13D7 5E                 6953 	ld	e,(hl)
   13D8 23                 6954 	inc	hl
   13D9 56                 6955 	ld	d,(hl)
   13DA 21 0A 00           6956 	ld	hl,#0x000A
   13DD 19                 6957 	add	hl,de
   13DE 7D                 6958 	ld	a,l
   13DF 54                 6959 	ld	d,h
   13E0 F8 00              6960 	lda	hl,0(sp)
                           6961 ;	genPointerGet
                           6962 ;	AOP_STK for _move_character_sloc8_1_0
   13E2 22                 6963 	ld	(hl+),a
   13E3 72                 6964 	ld	(hl),d
   13E4 5F                 6965 	ld	e,a
   13E5 1A                 6966 	ld	a,(de)
   13E6 4F                 6967 	ld	c,a
                           6968 ;	genMinus
   13E7 0D                 6969 	dec	c
                           6970 ;	genAssign (pointer)
                           6971 ;	AOP_STK for _move_character_sloc8_1_0
   13E8 2B                 6972 	dec	hl
   13E9 5E                 6973 	ld	e,(hl)
   13EA 23                 6974 	inc	hl
   13EB 56                 6975 	ld	d,(hl)
   13EC 79                 6976 	ld	a,c
   13ED 12                 6977 	ld	(de),a
                           6978 ;	game.c 964
                           6979 ;	genCmpEq
                           6980 ; genCmpEq: left 1, right 1, result 0
   13EE 79                 6981 	ld	a,c
   13EF B7                 6982 	or	a,a
   13F0 C2 E0 17           6983 	jp	nz,00165$
   13F3 18 03              6984 	jr	00215$
   13F5                    6985 00214$:
   13F5 C3 E0 17           6986 	jp	00165$
   13F8                    6987 00215$:
                           6988 ;	game.c 965
                           6989 ;	genAssign (pointer)
                           6990 ;	AOP_STK for _move_character_sloc2_1_0
   13F8 F8 09              6991 	lda	hl,9(sp)
   13FA 5E                 6992 	ld	e,(hl)
   13FB 23                 6993 	inc	hl
   13FC 56                 6994 	ld	d,(hl)
   13FD 3E 00              6995 	ld	a,#0x00
   13FF 12                 6996 	ld	(de),a
                           6997 ;	game.c 966
                           6998 ;	genPlus
                           6999 ;	AOP_STK for _move_character_sloc0_1_0
                           7000 ;	AOP_STK for _move_character_sloc8_1_0
                           7001 ;	genPlusIncr
                           7002 ;	Can't optimise plus by inc, falling back to the normal way
   1400 F8 0D              7003 	lda	hl,13(sp)
   1402 5E                 7004 	ld	e,(hl)
   1403 23                 7005 	inc	hl
   1404 56                 7006 	ld	d,(hl)
   1405 21 02 00           7007 	ld	hl,#0x0002
   1408 19                 7008 	add	hl,de
   1409 7D                 7009 	ld	a,l
   140A 54                 7010 	ld	d,h
   140B F8 00              7011 	lda	hl,0(sp)
                           7012 ;	genPointerGet
                           7013 ;	AOP_STK for _move_character_sloc8_1_0
   140D 22                 7014 	ld	(hl+),a
   140E 72                 7015 	ld	(hl),d
   140F 5F                 7016 	ld	e,a
   1410 1A                 7017 	ld	a,(de)
   1411 4F                 7018 	ld	c,a
                           7019 ;	genPointerGet
                           7020 ;	AOP_STK for _move_character_sloc1_1_0
                           7021 ;	AOP_STK for _move_character_sloc8_1_0
   1412 F8 0B              7022 	lda	hl,11(sp)
   1414 5E                 7023 	ld	e,(hl)
   1415 23                 7024 	inc	hl
   1416 56                 7025 	ld	d,(hl)
   1417 1A                 7026 	ld	a,(de)
   1418 F8 00              7027 	lda	hl,0(sp)
   141A 77                 7028 	ld	(hl),a
                           7029 ;	genIpush
                           7030 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   141B C5                 7031 	push	bc
   141C 79                 7032 	ld	a,c
   141D F5                 7033 	push	af
   141E 33                 7034 	inc	sp
                           7035 ;	genIpush
                           7036 ;	AOP_STK for _move_character_sloc8_1_0
   141F 7E                 7037 	ld	a,(hl)
   1420 F5                 7038 	push	af
   1421 33                 7039 	inc	sp
                           7040 ;	genCall
   1422 CD 00 00           7041 	call	_set_sprite_tile
   1425 E8 02              7042 	lda	sp,2(sp)
   1427 E1                 7043 	pop	hl
   1428 44                 7044 	ld	b,h
                           7045 ;	genGoto
   1429 C3 E0 17           7046 	jp	00165$
                           7047 ;	genLabel
   142C                    7048 00164$:
                           7049 ;	game.c 975
                           7050 ;	genCmpEq
                           7051 ;	AOP_HL for _input_timer
                           7052 ; genCmpEq: left 1, right 1, result 0
   142C 21 03 19           7053 	ld	hl,#_input_timer
   142F 7E                 7054 	ld	a,(hl)
   1430 FE 04              7055 	cp	a,#0x04
   1432 C2 8E 14           7056 	jp	nz,00134$
   1435 18 03              7057 	jr	00217$
   1437                    7058 00216$:
   1437 C3 8E 14           7059 	jp	00134$
   143A                    7060 00217$:
                           7061 ;	game.c 976
                           7062 ;	genPlus
                           7063 ;	AOP_STK for _move_character_sloc0_1_0
                           7064 ;	AOP_STK for _move_character_sloc8_1_0
                           7065 ;	genPlusIncr
                           7066 ;	Can't optimise plus by inc, falling back to the normal way
   143A F8 0D              7067 	lda	hl,13(sp)
   143C 5E                 7068 	ld	e,(hl)
   143D 23                 7069 	inc	hl
   143E 56                 7070 	ld	d,(hl)
   143F 21 08 00           7071 	ld	hl,#0x0008
   1442 19                 7072 	add	hl,de
   1443 7D                 7073 	ld	a,l
   1444 54                 7074 	ld	d,h
   1445 F8 00              7075 	lda	hl,0(sp)
                           7076 ;	genPointerGet
                           7077 ;	AOP_STK for _move_character_sloc8_1_0
   1447 22                 7078 	ld	(hl+),a
   1448 72                 7079 	ld	(hl),d
   1449 5F                 7080 	ld	e,a
   144A 1A                 7081 	ld	a,(de)
   144B 4F                 7082 	ld	c,a
                           7083 ;	genPlus
                           7084 ;	AOP_STK for _move_character_sloc0_1_0
                           7085 ;	AOP_STK for _move_character_sloc8_1_0
                           7086 ;	genPlusIncr
                           7087 ;	Can't optimise plus by inc, falling back to the normal way
   144C F8 0D              7088 	lda	hl,13(sp)
   144E 5E                 7089 	ld	e,(hl)
   144F 23                 7090 	inc	hl
   1450 56                 7091 	ld	d,(hl)
   1451 21 01 00           7092 	ld	hl,#0x0001
   1454 19                 7093 	add	hl,de
   1455 7D                 7094 	ld	a,l
   1456 54                 7095 	ld	d,h
   1457 F8 00              7096 	lda	hl,0(sp)
                           7097 ;	genPointerGet
                           7098 ;	AOP_STK for _move_character_sloc8_1_0
                           7099 ;	AOP_STK for _move_character_sloc7_1_0
   1459 22                 7100 	ld	(hl+),a
   145A 72                 7101 	ld	(hl),d
   145B 5F                 7102 	ld	e,a
   145C 1A                 7103 	ld	a,(de)
   145D 23                 7104 	inc	hl
   145E 77                 7105 	ld	(hl),a
                           7106 ;	genPointerGet
                           7107 ;	AOP_STK for _move_character_sloc0_1_0
                           7108 ;	AOP_STK for _move_character_sloc8_1_0
   145F F8 0D              7109 	lda	hl,13(sp)
   1461 5E                 7110 	ld	e,(hl)
   1462 23                 7111 	inc	hl
   1463 56                 7112 	ld	d,(hl)
   1464 1A                 7113 	ld	a,(de)
   1465 F8 00              7114 	lda	hl,0(sp)
   1467 77                 7115 	ld	(hl),a
                           7116 ;	genIpush
                           7117 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1468 C5                 7118 	push	bc
   1469 79                 7119 	ld	a,c
   146A F5                 7120 	push	af
   146B 33                 7121 	inc	sp
                           7122 ;	genIpush
                           7123 ;	AOP_STK for _move_character_sloc7_1_0
   146C 23                 7124 	inc	hl
   146D 23                 7125 	inc	hl
   146E 7E                 7126 	ld	a,(hl)
   146F F5                 7127 	push	af
   1470 33                 7128 	inc	sp
                           7129 ;	genIpush
                           7130 ;	AOP_STK for _move_character_sloc8_1_0
   1471 2B                 7131 	dec	hl
   1472 2B                 7132 	dec	hl
   1473 7E                 7133 	ld	a,(hl)
   1474 F5                 7134 	push	af
   1475 33                 7135 	inc	sp
                           7136 ;	genCall
   1476 CD 29 0D           7137 	call	_can_move
                           7138 ;	AOP_STK for _move_character_sloc8_1_0
   1479 F8 06              7139 	lda	hl,6(sp)
   147B 72                 7140 	ld	(hl),d
   147C 2B                 7141 	dec	hl
   147D 73                 7142 	ld	(hl),e
   147E E8 03              7143 	lda	sp,3(sp)
   1480 E1                 7144 	pop	hl
   1481 44                 7145 	ld	b,h
                           7146 ;	genIfx
                           7147 ;	AOP_STK for _move_character_sloc8_1_0
   1482 F8 00              7148 	lda	hl,0(sp)
   1484 2A                 7149 	ld	a,(hl+)
   1485 B6                 7150 	or	a,(hl)
   1486 C2 8E 14           7151 	jp	nz,00134$
                           7152 ;	game.c 977
                           7153 ;	genAssign
                           7154 ;	AOP_HL for _input_timer
   1489 21 03 19           7155 	ld	hl,#_input_timer
   148C 36 00              7156 	ld	(hl),#0x00
                           7157 ;	genLabel
   148E                    7158 00134$:
                           7159 ;	game.c 985
                           7160 ;	genPlus
                           7161 ;	AOP_STK for _move_character_sloc0_1_0
                           7162 ;	AOP_STK for _move_character_sloc8_1_0
                           7163 ;	genPlusIncr
                           7164 ;	Can't optimise plus by inc, falling back to the normal way
   148E F8 0D              7165 	lda	hl,13(sp)
   1490 5E                 7166 	ld	e,(hl)
   1491 23                 7167 	inc	hl
   1492 56                 7168 	ld	d,(hl)
   1493 21 08 00           7169 	ld	hl,#0x0008
   1496 19                 7170 	add	hl,de
   1497 7D                 7171 	ld	a,l
   1498 54                 7172 	ld	d,h
   1499 F8 00              7173 	lda	hl,0(sp)
                           7174 ;	genPointerGet
                           7175 ;	AOP_STK for _move_character_sloc8_1_0
   149B 22                 7176 	ld	(hl+),a
   149C 72                 7177 	ld	(hl),d
   149D 5F                 7178 	ld	e,a
   149E 1A                 7179 	ld	a,(de)
                           7180 ;	genCmpLt
                           7181 ;	AOP_STK for _move_character_sloc8_1_0
   149F 4F                 7182 	ld	c,a
   14A0 FE 01              7183 	cp	#0x01
   14A2 3E 00              7184 	ld	a,#0x00
   14A4 17                 7185 	rla
   14A5 2B                 7186 	dec	hl
   14A6 77                 7187 	ld	(hl),a
                           7188 ;	genIfx
                           7189 ;	AOP_STK for _move_character_sloc8_1_0
   14A7 AF                 7190 	xor	a,a
   14A8 B6                 7191 	or	a,(hl)
   14A9 C2 5B 17           7192 	jp	nz,00155$
                           7193 ;	genCmpGt
   14AC 3E 04              7194 	ld	a,#0x04
   14AE 91                 7195 	sub	a,c
   14AF DA 5B 17           7196 	jp	c,00155$
                           7197 ;	genMinus
                           7198 ;	AOP_STK for _move_character_sloc7_1_0
   14B2 79                 7199 	ld	a,c
   14B3 C6 FF              7200 	add	a,#0xFF
   14B5 23                 7201 	inc	hl
   14B6 23                 7202 	inc	hl
                           7203 ;	genJumpTab
                           7204 ;	AOP_STK for _move_character_sloc7_1_0
   14B7 77                 7205 	ld      (hl),a
   14B8 5F                 7206 	ld      e,a
   14B9 16 00              7207 	ld	d,#0x00
   14BB 21 C2 14           7208 	ld	hl,#00218$
   14BE 19                 7209 	add	hl,de
   14BF 19                 7210 	add	hl,de
   14C0 19                 7211 	add	hl,de
   14C1 E9                 7212 	jp	(hl)
   14C2                    7213 00218$:
   14C2 C3 16 16           7214 	jp	00145$
   14C5 C3 72 15           7215 	jp	00140$
   14C8 C3 BA 16           7216 	jp	00150$
   14CB C3 CE 14           7217 	jp	00135$
                           7218 ;	game.c 988
                           7219 ;	genLabel
   14CE                    7220 00135$:
                           7221 ;	genPlus
                           7222 ;	AOP_STK for _move_character_sloc0_1_0
                           7223 ;	AOP_STK for _move_character_sloc5_1_0
                           7224 ;	genPlusIncr
                           7225 ;	Can't optimise plus by inc, falling back to the normal way
   14CE F8 0D              7226 	lda	hl,13(sp)
   14D0 5E                 7227 	ld	e,(hl)
   14D1 23                 7228 	inc	hl
   14D2 56                 7229 	ld	d,(hl)
   14D3 21 02 00           7230 	ld	hl,#0x0002
   14D6 19                 7231 	add	hl,de
   14D7 7D                 7232 	ld	a,l
   14D8 54                 7233 	ld	d,h
   14D9 F8 04              7234 	lda	hl,4(sp)
                           7235 ;	genPointerGet
                           7236 ;	AOP_STK for _move_character_sloc5_1_0
                           7237 ;	AOP_STK for _move_character_sloc7_1_0
   14DB 22                 7238 	ld	(hl+),a
   14DC 72                 7239 	ld	(hl),d
   14DD 5F                 7240 	ld	e,a
   14DE 1A                 7241 	ld	a,(de)
   14DF F8 02              7242 	lda	hl,2(sp)
   14E1 77                 7243 	ld	(hl),a
                           7244 ;	genIpush
                           7245 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14E2 C5                 7246 	push	bc
                           7247 ;	AOP_STK for _move_character_sloc7_1_0
   14E3 7E                 7248 	ld	a,(hl)
   14E4 F5                 7249 	push	af
   14E5 33                 7250 	inc	sp
                           7251 ;	genIpush
   14E6 78                 7252 	ld	a,b
   14E7 F5                 7253 	push	af
   14E8 33                 7254 	inc	sp
                           7255 ;	genCall
   14E9 CD 00 00           7256 	call	_set_sprite_tile
   14EC E8 02              7257 	lda	sp,2(sp)
   14EE C1                 7258 	pop	bc
                           7259 ;	game.c 989
                           7260 ;	genCmpEq
                           7261 ;	AOP_HL for _input_timer
                           7262 ; genCmpEq: left 1, right 1, result 0
   14EF 21 03 19           7263 	ld	hl,#_input_timer
   14F2 7E                 7264 	ld	a,(hl)
   14F3 FE 04              7265 	cp	a,#0x04
   14F5 C2 29 15           7266 	jp	nz,00137$
   14F8 18 03              7267 	jr	00220$
   14FA                    7268 00219$:
   14FA C3 29 15           7269 	jp	00137$
   14FD                    7270 00220$:
                           7271 ;	game.c 990
                           7272 ;	genPlus
                           7273 ;	AOP_STK for _move_character_sloc0_1_0
                           7274 ;	AOP_STK for _move_character_sloc3_1_0
                           7275 ;	genPlusIncr
                           7276 ;	Can't optimise plus by inc, falling back to the normal way
   14FD F8 0D              7277 	lda	hl,13(sp)
   14FF 5E                 7278 	ld	e,(hl)
   1500 23                 7279 	inc	hl
   1501 56                 7280 	ld	d,(hl)
   1502 21 03 00           7281 	ld	hl,#0x0003
   1505 19                 7282 	add	hl,de
   1506 7D                 7283 	ld	a,l
   1507 54                 7284 	ld	d,h
   1508 F8 07              7285 	lda	hl,7(sp)
                           7286 ;	genPointerGet
                           7287 ;	AOP_STK for _move_character_sloc3_1_0
                           7288 ;	AOP_STK for _move_character_sloc7_1_0
   150A 22                 7289 	ld	(hl+),a
   150B 72                 7290 	ld	(hl),d
   150C 5F                 7291 	ld	e,a
   150D 1A                 7292 	ld	a,(de)
   150E F8 02              7293 	lda	hl,2(sp)
   1510 77                 7294 	ld	(hl),a
                           7295 ;	genPointerGet
                           7296 ;	AOP_STK for _move_character_sloc1_1_0
                           7297 ;	AOP_STK for _move_character_sloc6_1_0
   1511 F8 0B              7298 	lda	hl,11(sp)
   1513 5E                 7299 	ld	e,(hl)
   1514 23                 7300 	inc	hl
   1515 56                 7301 	ld	d,(hl)
   1516 1A                 7302 	ld	a,(de)
   1517 F8 03              7303 	lda	hl,3(sp)
   1519 77                 7304 	ld	(hl),a
                           7305 ;	genIpush
                           7306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   151A C5                 7307 	push	bc
                           7308 ;	AOP_STK for _move_character_sloc7_1_0
   151B 2B                 7309 	dec	hl
   151C 7E                 7310 	ld	a,(hl)
   151D F5                 7311 	push	af
   151E 33                 7312 	inc	sp
                           7313 ;	genIpush
                           7314 ;	AOP_STK for _move_character_sloc6_1_0
   151F 23                 7315 	inc	hl
   1520 7E                 7316 	ld	a,(hl)
   1521 F5                 7317 	push	af
   1522 33                 7318 	inc	sp
                           7319 ;	genCall
   1523 CD 00 00           7320 	call	_set_sprite_tile
   1526 E8 02              7321 	lda	sp,2(sp)
   1528 C1                 7322 	pop	bc
                           7323 ;	genLabel
   1529                    7324 00137$:
                           7325 ;	game.c 992
                           7326 ;	genCmpEq
                           7327 ;	AOP_HL for _input_timer
                           7328 ; genCmpEq: left 1, right 1, result 0
   1529 21 03 19           7329 	ld	hl,#_input_timer
   152C 7E                 7330 	ld	a,(hl)
   152D FE 02              7331 	cp	a,#0x02
   152F C2 58 15           7332 	jp	nz,00139$
   1532 18 03              7333 	jr	00222$
   1534                    7334 00221$:
   1534 C3 58 15           7335 	jp	00139$
   1537                    7336 00222$:
                           7337 ;	game.c 993
                           7338 ;	genPointerGet
                           7339 ;	AOP_STK for _move_character_sloc5_1_0
                           7340 ;	AOP_STK for _move_character_sloc7_1_0
   1537 F8 04              7341 	lda	hl,4(sp)
   1539 5E                 7342 	ld	e,(hl)
   153A 23                 7343 	inc	hl
   153B 56                 7344 	ld	d,(hl)
   153C 1A                 7345 	ld	a,(de)
   153D F8 02              7346 	lda	hl,2(sp)
   153F 77                 7347 	ld	(hl),a
                           7348 ;	genPointerGet
                           7349 ;	AOP_STK for _move_character_sloc1_1_0
                           7350 ;	AOP_STK for _move_character_sloc6_1_0
   1540 F8 0B              7351 	lda	hl,11(sp)
   1542 5E                 7352 	ld	e,(hl)
   1543 23                 7353 	inc	hl
   1544 56                 7354 	ld	d,(hl)
   1545 1A                 7355 	ld	a,(de)
   1546 F8 03              7356 	lda	hl,3(sp)
   1548 77                 7357 	ld	(hl),a
                           7358 ;	genIpush
                           7359 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1549 C5                 7360 	push	bc
                           7361 ;	AOP_STK for _move_character_sloc7_1_0
   154A 2B                 7362 	dec	hl
   154B 7E                 7363 	ld	a,(hl)
   154C F5                 7364 	push	af
   154D 33                 7365 	inc	sp
                           7366 ;	genIpush
                           7367 ;	AOP_STK for _move_character_sloc6_1_0
   154E 23                 7368 	inc	hl
   154F 7E                 7369 	ld	a,(hl)
   1550 F5                 7370 	push	af
   1551 33                 7371 	inc	sp
                           7372 ;	genCall
   1552 CD 00 00           7373 	call	_set_sprite_tile
   1555 E8 02              7374 	lda	sp,2(sp)
   1557 C1                 7375 	pop	bc
                           7376 ;	genLabel
   1558                    7377 00139$:
                           7378 ;	game.c 995
                           7379 ;	genPointerGet
                           7380 ;	AOP_STK for _move_character_sloc1_1_0
                           7381 ;	AOP_STK for _move_character_sloc7_1_0
   1558 F8 0B              7382 	lda	hl,11(sp)
   155A 5E                 7383 	ld	e,(hl)
   155B 23                 7384 	inc	hl
   155C 56                 7385 	ld	d,(hl)
   155D 1A                 7386 	ld	a,(de)
   155E F8 02              7387 	lda	hl,2(sp)
   1560 77                 7388 	ld	(hl),a
                           7389 ;	genIpush
                           7390 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1561 C5                 7391 	push	bc
   1562 3E 20              7392 	ld	a,#0x20
   1564 F5                 7393 	push	af
   1565 33                 7394 	inc	sp
                           7395 ;	genIpush
                           7396 ;	AOP_STK for _move_character_sloc7_1_0
   1566 7E                 7397 	ld	a,(hl)
   1567 F5                 7398 	push	af
   1568 33                 7399 	inc	sp
                           7400 ;	genCall
   1569 CD 00 00           7401 	call	_set_sprite_prop
   156C E8 02              7402 	lda	sp,2(sp)
   156E C1                 7403 	pop	bc
                           7404 ;	game.c 996
                           7405 ;	genGoto
   156F C3 5B 17           7406 	jp	00155$
                           7407 ;	game.c 999
                           7408 ;	genLabel
   1572                    7409 00140$:
                           7410 ;	genPlus
                           7411 ;	AOP_STK for _move_character_sloc0_1_0
                           7412 ;	AOP_STK for _move_character_sloc5_1_0
                           7413 ;	genPlusIncr
                           7414 ;	Can't optimise plus by inc, falling back to the normal way
   1572 F8 0D              7415 	lda	hl,13(sp)
   1574 5E                 7416 	ld	e,(hl)
   1575 23                 7417 	inc	hl
   1576 56                 7418 	ld	d,(hl)
   1577 21 02 00           7419 	ld	hl,#0x0002
   157A 19                 7420 	add	hl,de
   157B 7D                 7421 	ld	a,l
   157C 54                 7422 	ld	d,h
   157D F8 04              7423 	lda	hl,4(sp)
                           7424 ;	genPointerGet
                           7425 ;	AOP_STK for _move_character_sloc5_1_0
                           7426 ;	AOP_STK for _move_character_sloc7_1_0
   157F 22                 7427 	ld	(hl+),a
   1580 72                 7428 	ld	(hl),d
   1581 5F                 7429 	ld	e,a
   1582 1A                 7430 	ld	a,(de)
   1583 F8 02              7431 	lda	hl,2(sp)
   1585 77                 7432 	ld	(hl),a
                           7433 ;	genIpush
                           7434 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1586 C5                 7435 	push	bc
                           7436 ;	AOP_STK for _move_character_sloc7_1_0
   1587 7E                 7437 	ld	a,(hl)
   1588 F5                 7438 	push	af
   1589 33                 7439 	inc	sp
                           7440 ;	genIpush
   158A 78                 7441 	ld	a,b
   158B F5                 7442 	push	af
   158C 33                 7443 	inc	sp
                           7444 ;	genCall
   158D CD 00 00           7445 	call	_set_sprite_tile
   1590 E8 02              7446 	lda	sp,2(sp)
   1592 C1                 7447 	pop	bc
                           7448 ;	game.c 1000
                           7449 ;	genCmpEq
                           7450 ;	AOP_HL for _input_timer
                           7451 ; genCmpEq: left 1, right 1, result 0
   1593 21 03 19           7452 	ld	hl,#_input_timer
   1596 7E                 7453 	ld	a,(hl)
   1597 FE 04              7454 	cp	a,#0x04
   1599 C2 CD 15           7455 	jp	nz,00142$
   159C 18 03              7456 	jr	00224$
   159E                    7457 00223$:
   159E C3 CD 15           7458 	jp	00142$
   15A1                    7459 00224$:
                           7460 ;	game.c 1001
                           7461 ;	genPlus
                           7462 ;	AOP_STK for _move_character_sloc0_1_0
                           7463 ;	AOP_STK for _move_character_sloc3_1_0
                           7464 ;	genPlusIncr
                           7465 ;	Can't optimise plus by inc, falling back to the normal way
   15A1 F8 0D              7466 	lda	hl,13(sp)
   15A3 5E                 7467 	ld	e,(hl)
   15A4 23                 7468 	inc	hl
   15A5 56                 7469 	ld	d,(hl)
   15A6 21 03 00           7470 	ld	hl,#0x0003
   15A9 19                 7471 	add	hl,de
   15AA 7D                 7472 	ld	a,l
   15AB 54                 7473 	ld	d,h
   15AC F8 07              7474 	lda	hl,7(sp)
                           7475 ;	genPointerGet
                           7476 ;	AOP_STK for _move_character_sloc3_1_0
                           7477 ;	AOP_STK for _move_character_sloc7_1_0
   15AE 22                 7478 	ld	(hl+),a
   15AF 72                 7479 	ld	(hl),d
   15B0 5F                 7480 	ld	e,a
   15B1 1A                 7481 	ld	a,(de)
   15B2 F8 02              7482 	lda	hl,2(sp)
   15B4 77                 7483 	ld	(hl),a
                           7484 ;	genPointerGet
                           7485 ;	AOP_STK for _move_character_sloc1_1_0
                           7486 ;	AOP_STK for _move_character_sloc6_1_0
   15B5 F8 0B              7487 	lda	hl,11(sp)
   15B7 5E                 7488 	ld	e,(hl)
   15B8 23                 7489 	inc	hl
   15B9 56                 7490 	ld	d,(hl)
   15BA 1A                 7491 	ld	a,(de)
   15BB F8 03              7492 	lda	hl,3(sp)
   15BD 77                 7493 	ld	(hl),a
                           7494 ;	genIpush
                           7495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15BE C5                 7496 	push	bc
                           7497 ;	AOP_STK for _move_character_sloc7_1_0
   15BF 2B                 7498 	dec	hl
   15C0 7E                 7499 	ld	a,(hl)
   15C1 F5                 7500 	push	af
   15C2 33                 7501 	inc	sp
                           7502 ;	genIpush
                           7503 ;	AOP_STK for _move_character_sloc6_1_0
   15C3 23                 7504 	inc	hl
   15C4 7E                 7505 	ld	a,(hl)
   15C5 F5                 7506 	push	af
   15C6 33                 7507 	inc	sp
                           7508 ;	genCall
   15C7 CD 00 00           7509 	call	_set_sprite_tile
   15CA E8 02              7510 	lda	sp,2(sp)
   15CC C1                 7511 	pop	bc
                           7512 ;	genLabel
   15CD                    7513 00142$:
                           7514 ;	game.c 1003
                           7515 ;	genCmpEq
                           7516 ;	AOP_HL for _input_timer
                           7517 ; genCmpEq: left 1, right 1, result 0
   15CD 21 03 19           7518 	ld	hl,#_input_timer
   15D0 7E                 7519 	ld	a,(hl)
   15D1 FE 02              7520 	cp	a,#0x02
   15D3 C2 FC 15           7521 	jp	nz,00144$
   15D6 18 03              7522 	jr	00226$
   15D8                    7523 00225$:
   15D8 C3 FC 15           7524 	jp	00144$
   15DB                    7525 00226$:
                           7526 ;	game.c 1004
                           7527 ;	genPointerGet
                           7528 ;	AOP_STK for _move_character_sloc5_1_0
                           7529 ;	AOP_STK for _move_character_sloc7_1_0
   15DB F8 04              7530 	lda	hl,4(sp)
   15DD 5E                 7531 	ld	e,(hl)
   15DE 23                 7532 	inc	hl
   15DF 56                 7533 	ld	d,(hl)
   15E0 1A                 7534 	ld	a,(de)
   15E1 F8 02              7535 	lda	hl,2(sp)
   15E3 77                 7536 	ld	(hl),a
                           7537 ;	genPointerGet
                           7538 ;	AOP_STK for _move_character_sloc1_1_0
                           7539 ;	AOP_STK for _move_character_sloc6_1_0
   15E4 F8 0B              7540 	lda	hl,11(sp)
   15E6 5E                 7541 	ld	e,(hl)
   15E7 23                 7542 	inc	hl
   15E8 56                 7543 	ld	d,(hl)
   15E9 1A                 7544 	ld	a,(de)
   15EA F8 03              7545 	lda	hl,3(sp)
   15EC 77                 7546 	ld	(hl),a
                           7547 ;	genIpush
                           7548 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15ED C5                 7549 	push	bc
                           7550 ;	AOP_STK for _move_character_sloc7_1_0
   15EE 2B                 7551 	dec	hl
   15EF 7E                 7552 	ld	a,(hl)
   15F0 F5                 7553 	push	af
   15F1 33                 7554 	inc	sp
                           7555 ;	genIpush
                           7556 ;	AOP_STK for _move_character_sloc6_1_0
   15F2 23                 7557 	inc	hl
   15F3 7E                 7558 	ld	a,(hl)
   15F4 F5                 7559 	push	af
   15F5 33                 7560 	inc	sp
                           7561 ;	genCall
   15F6 CD 00 00           7562 	call	_set_sprite_tile
   15F9 E8 02              7563 	lda	sp,2(sp)
   15FB C1                 7564 	pop	bc
                           7565 ;	genLabel
   15FC                    7566 00144$:
                           7567 ;	game.c 1007
                           7568 ;	genPointerGet
                           7569 ;	AOP_STK for _move_character_sloc1_1_0
                           7570 ;	AOP_STK for _move_character_sloc7_1_0
   15FC F8 0B              7571 	lda	hl,11(sp)
   15FE 5E                 7572 	ld	e,(hl)
   15FF 23                 7573 	inc	hl
   1600 56                 7574 	ld	d,(hl)
   1601 1A                 7575 	ld	a,(de)
   1602 F8 02              7576 	lda	hl,2(sp)
   1604 77                 7577 	ld	(hl),a
                           7578 ;	genIpush
                           7579 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1605 C5                 7580 	push	bc
   1606 3E 00              7581 	ld	a,#0x00
   1608 F5                 7582 	push	af
   1609 33                 7583 	inc	sp
                           7584 ;	genIpush
                           7585 ;	AOP_STK for _move_character_sloc7_1_0
   160A 7E                 7586 	ld	a,(hl)
   160B F5                 7587 	push	af
   160C 33                 7588 	inc	sp
                           7589 ;	genCall
   160D CD 00 00           7590 	call	_set_sprite_prop
   1610 E8 02              7591 	lda	sp,2(sp)
   1612 C1                 7592 	pop	bc
                           7593 ;	game.c 1008
                           7594 ;	genGoto
   1613 C3 5B 17           7595 	jp	00155$
                           7596 ;	game.c 1010
                           7597 ;	genLabel
   1616                    7598 00145$:
                           7599 ;	genPlus
                           7600 ;	AOP_STK for _move_character_sloc0_1_0
                           7601 ;	AOP_STK for _move_character_sloc5_1_0
                           7602 ;	genPlusIncr
                           7603 ;	Can't optimise plus by inc, falling back to the normal way
   1616 F8 0D              7604 	lda	hl,13(sp)
   1618 5E                 7605 	ld	e,(hl)
   1619 23                 7606 	inc	hl
   161A 56                 7607 	ld	d,(hl)
   161B 21 05 00           7608 	ld	hl,#0x0005
   161E 19                 7609 	add	hl,de
   161F 7D                 7610 	ld	a,l
   1620 54                 7611 	ld	d,h
   1621 F8 04              7612 	lda	hl,4(sp)
                           7613 ;	genPointerGet
                           7614 ;	AOP_STK for _move_character_sloc5_1_0
                           7615 ;	AOP_STK for _move_character_sloc7_1_0
   1623 22                 7616 	ld	(hl+),a
   1624 72                 7617 	ld	(hl),d
   1625 5F                 7618 	ld	e,a
   1626 1A                 7619 	ld	a,(de)
   1627 F8 02              7620 	lda	hl,2(sp)
   1629 77                 7621 	ld	(hl),a
                           7622 ;	genIpush
                           7623 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   162A C5                 7624 	push	bc
                           7625 ;	AOP_STK for _move_character_sloc7_1_0
   162B 7E                 7626 	ld	a,(hl)
   162C F5                 7627 	push	af
   162D 33                 7628 	inc	sp
                           7629 ;	genIpush
   162E 78                 7630 	ld	a,b
   162F F5                 7631 	push	af
   1630 33                 7632 	inc	sp
                           7633 ;	genCall
   1631 CD 00 00           7634 	call	_set_sprite_tile
   1634 E8 02              7635 	lda	sp,2(sp)
   1636 C1                 7636 	pop	bc
                           7637 ;	game.c 1012
                           7638 ;	genCmpEq
                           7639 ;	AOP_HL for _input_timer
                           7640 ; genCmpEq: left 1, right 1, result 0
   1637 21 03 19           7641 	ld	hl,#_input_timer
   163A 7E                 7642 	ld	a,(hl)
   163B FE 04              7643 	cp	a,#0x04
   163D C2 71 16           7644 	jp	nz,00147$
   1640 18 03              7645 	jr	00228$
   1642                    7646 00227$:
   1642 C3 71 16           7647 	jp	00147$
   1645                    7648 00228$:
                           7649 ;	game.c 1013
                           7650 ;	genPlus
                           7651 ;	AOP_STK for _move_character_sloc0_1_0
                           7652 ;	AOP_STK for _move_character_sloc3_1_0
                           7653 ;	genPlusIncr
                           7654 ;	Can't optimise plus by inc, falling back to the normal way
   1645 F8 0D              7655 	lda	hl,13(sp)
   1647 5E                 7656 	ld	e,(hl)
   1648 23                 7657 	inc	hl
   1649 56                 7658 	ld	d,(hl)
   164A 21 06 00           7659 	ld	hl,#0x0006
   164D 19                 7660 	add	hl,de
   164E 7D                 7661 	ld	a,l
   164F 54                 7662 	ld	d,h
   1650 F8 07              7663 	lda	hl,7(sp)
                           7664 ;	genPointerGet
                           7665 ;	AOP_STK for _move_character_sloc3_1_0
                           7666 ;	AOP_STK for _move_character_sloc7_1_0
   1652 22                 7667 	ld	(hl+),a
   1653 72                 7668 	ld	(hl),d
   1654 5F                 7669 	ld	e,a
   1655 1A                 7670 	ld	a,(de)
   1656 F8 02              7671 	lda	hl,2(sp)
   1658 77                 7672 	ld	(hl),a
                           7673 ;	genPointerGet
                           7674 ;	AOP_STK for _move_character_sloc1_1_0
                           7675 ;	AOP_STK for _move_character_sloc6_1_0
   1659 F8 0B              7676 	lda	hl,11(sp)
   165B 5E                 7677 	ld	e,(hl)
   165C 23                 7678 	inc	hl
   165D 56                 7679 	ld	d,(hl)
   165E 1A                 7680 	ld	a,(de)
   165F F8 03              7681 	lda	hl,3(sp)
   1661 77                 7682 	ld	(hl),a
                           7683 ;	genIpush
                           7684 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1662 C5                 7685 	push	bc
                           7686 ;	AOP_STK for _move_character_sloc7_1_0
   1663 2B                 7687 	dec	hl
   1664 7E                 7688 	ld	a,(hl)
   1665 F5                 7689 	push	af
   1666 33                 7690 	inc	sp
                           7691 ;	genIpush
                           7692 ;	AOP_STK for _move_character_sloc6_1_0
   1667 23                 7693 	inc	hl
   1668 7E                 7694 	ld	a,(hl)
   1669 F5                 7695 	push	af
   166A 33                 7696 	inc	sp
                           7697 ;	genCall
   166B CD 00 00           7698 	call	_set_sprite_tile
   166E E8 02              7699 	lda	sp,2(sp)
   1670 C1                 7700 	pop	bc
                           7701 ;	genLabel
   1671                    7702 00147$:
                           7703 ;	game.c 1015
                           7704 ;	genCmpEq
                           7705 ;	AOP_HL for _input_timer
                           7706 ; genCmpEq: left 1, right 1, result 0
   1671 21 03 19           7707 	ld	hl,#_input_timer
   1674 7E                 7708 	ld	a,(hl)
   1675 FE 02              7709 	cp	a,#0x02
   1677 C2 A0 16           7710 	jp	nz,00149$
   167A 18 03              7711 	jr	00230$
   167C                    7712 00229$:
   167C C3 A0 16           7713 	jp	00149$
   167F                    7714 00230$:
                           7715 ;	game.c 1016
                           7716 ;	genPointerGet
                           7717 ;	AOP_STK for _move_character_sloc5_1_0
                           7718 ;	AOP_STK for _move_character_sloc7_1_0
   167F F8 04              7719 	lda	hl,4(sp)
   1681 5E                 7720 	ld	e,(hl)
   1682 23                 7721 	inc	hl
   1683 56                 7722 	ld	d,(hl)
   1684 1A                 7723 	ld	a,(de)
   1685 F8 02              7724 	lda	hl,2(sp)
   1687 77                 7725 	ld	(hl),a
                           7726 ;	genPointerGet
                           7727 ;	AOP_STK for _move_character_sloc1_1_0
                           7728 ;	AOP_STK for _move_character_sloc6_1_0
   1688 F8 0B              7729 	lda	hl,11(sp)
   168A 5E                 7730 	ld	e,(hl)
   168B 23                 7731 	inc	hl
   168C 56                 7732 	ld	d,(hl)
   168D 1A                 7733 	ld	a,(de)
   168E F8 03              7734 	lda	hl,3(sp)
   1690 77                 7735 	ld	(hl),a
                           7736 ;	genIpush
                           7737 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1691 C5                 7738 	push	bc
                           7739 ;	AOP_STK for _move_character_sloc7_1_0
   1692 2B                 7740 	dec	hl
   1693 7E                 7741 	ld	a,(hl)
   1694 F5                 7742 	push	af
   1695 33                 7743 	inc	sp
                           7744 ;	genIpush
                           7745 ;	AOP_STK for _move_character_sloc6_1_0
   1696 23                 7746 	inc	hl
   1697 7E                 7747 	ld	a,(hl)
   1698 F5                 7748 	push	af
   1699 33                 7749 	inc	sp
                           7750 ;	genCall
   169A CD 00 00           7751 	call	_set_sprite_tile
   169D E8 02              7752 	lda	sp,2(sp)
   169F C1                 7753 	pop	bc
                           7754 ;	genLabel
   16A0                    7755 00149$:
                           7756 ;	game.c 1019
                           7757 ;	genPointerGet
                           7758 ;	AOP_STK for _move_character_sloc1_1_0
                           7759 ;	AOP_STK for _move_character_sloc7_1_0
   16A0 F8 0B              7760 	lda	hl,11(sp)
   16A2 5E                 7761 	ld	e,(hl)
   16A3 23                 7762 	inc	hl
   16A4 56                 7763 	ld	d,(hl)
   16A5 1A                 7764 	ld	a,(de)
   16A6 F8 02              7765 	lda	hl,2(sp)
   16A8 77                 7766 	ld	(hl),a
                           7767 ;	genIpush
                           7768 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16A9 C5                 7769 	push	bc
   16AA 3E 20              7770 	ld	a,#0x20
   16AC F5                 7771 	push	af
   16AD 33                 7772 	inc	sp
                           7773 ;	genIpush
                           7774 ;	AOP_STK for _move_character_sloc7_1_0
   16AE 7E                 7775 	ld	a,(hl)
   16AF F5                 7776 	push	af
   16B0 33                 7777 	inc	sp
                           7778 ;	genCall
   16B1 CD 00 00           7779 	call	_set_sprite_prop
   16B4 E8 02              7780 	lda	sp,2(sp)
   16B6 C1                 7781 	pop	bc
                           7782 ;	game.c 1020
                           7783 ;	genGoto
   16B7 C3 5B 17           7784 	jp	00155$
                           7785 ;	game.c 1022
                           7786 ;	genLabel
   16BA                    7787 00150$:
                           7788 ;	genPlus
                           7789 ;	AOP_STK for _move_character_sloc0_1_0
                           7790 ;	AOP_STK for _move_character_sloc5_1_0
                           7791 ;	genPlusIncr
                           7792 ;	Can't optimise plus by inc, falling back to the normal way
   16BA F8 0D              7793 	lda	hl,13(sp)
   16BC 5E                 7794 	ld	e,(hl)
   16BD 23                 7795 	inc	hl
   16BE 56                 7796 	ld	d,(hl)
   16BF 21 05 00           7797 	ld	hl,#0x0005
   16C2 19                 7798 	add	hl,de
   16C3 7D                 7799 	ld	a,l
   16C4 54                 7800 	ld	d,h
   16C5 F8 04              7801 	lda	hl,4(sp)
                           7802 ;	genPointerGet
                           7803 ;	AOP_STK for _move_character_sloc5_1_0
                           7804 ;	AOP_STK for _move_character_sloc7_1_0
   16C7 22                 7805 	ld	(hl+),a
   16C8 72                 7806 	ld	(hl),d
   16C9 5F                 7807 	ld	e,a
   16CA 1A                 7808 	ld	a,(de)
   16CB F8 02              7809 	lda	hl,2(sp)
   16CD 77                 7810 	ld	(hl),a
                           7811 ;	genIpush
                           7812 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16CE C5                 7813 	push	bc
                           7814 ;	AOP_STK for _move_character_sloc7_1_0
   16CF 7E                 7815 	ld	a,(hl)
   16D0 F5                 7816 	push	af
   16D1 33                 7817 	inc	sp
                           7818 ;	genIpush
   16D2 78                 7819 	ld	a,b
   16D3 F5                 7820 	push	af
   16D4 33                 7821 	inc	sp
                           7822 ;	genCall
   16D5 CD 00 00           7823 	call	_set_sprite_tile
   16D8 E8 02              7824 	lda	sp,2(sp)
   16DA C1                 7825 	pop	bc
                           7826 ;	game.c 1024
                           7827 ;	genCmpEq
                           7828 ;	AOP_HL for _input_timer
                           7829 ; genCmpEq: left 1, right 1, result 0
   16DB 21 03 19           7830 	ld	hl,#_input_timer
   16DE 7E                 7831 	ld	a,(hl)
   16DF FE 04              7832 	cp	a,#0x04
   16E1 C2 15 17           7833 	jp	nz,00152$
   16E4 18 03              7834 	jr	00232$
   16E6                    7835 00231$:
   16E6 C3 15 17           7836 	jp	00152$
   16E9                    7837 00232$:
                           7838 ;	game.c 1025
                           7839 ;	genPlus
                           7840 ;	AOP_STK for _move_character_sloc0_1_0
                           7841 ;	AOP_STK for _move_character_sloc3_1_0
                           7842 ;	genPlusIncr
                           7843 ;	Can't optimise plus by inc, falling back to the normal way
   16E9 F8 0D              7844 	lda	hl,13(sp)
   16EB 5E                 7845 	ld	e,(hl)
   16EC 23                 7846 	inc	hl
   16ED 56                 7847 	ld	d,(hl)
   16EE 21 06 00           7848 	ld	hl,#0x0006
   16F1 19                 7849 	add	hl,de
   16F2 7D                 7850 	ld	a,l
   16F3 54                 7851 	ld	d,h
   16F4 F8 07              7852 	lda	hl,7(sp)
                           7853 ;	genPointerGet
                           7854 ;	AOP_STK for _move_character_sloc3_1_0
                           7855 ;	AOP_STK for _move_character_sloc7_1_0
   16F6 22                 7856 	ld	(hl+),a
   16F7 72                 7857 	ld	(hl),d
   16F8 5F                 7858 	ld	e,a
   16F9 1A                 7859 	ld	a,(de)
   16FA F8 02              7860 	lda	hl,2(sp)
   16FC 77                 7861 	ld	(hl),a
                           7862 ;	genPointerGet
                           7863 ;	AOP_STK for _move_character_sloc1_1_0
                           7864 ;	AOP_STK for _move_character_sloc6_1_0
   16FD F8 0B              7865 	lda	hl,11(sp)
   16FF 5E                 7866 	ld	e,(hl)
   1700 23                 7867 	inc	hl
   1701 56                 7868 	ld	d,(hl)
   1702 1A                 7869 	ld	a,(de)
   1703 F8 03              7870 	lda	hl,3(sp)
   1705 77                 7871 	ld	(hl),a
                           7872 ;	genIpush
                           7873 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1706 C5                 7874 	push	bc
                           7875 ;	AOP_STK for _move_character_sloc7_1_0
   1707 2B                 7876 	dec	hl
   1708 7E                 7877 	ld	a,(hl)
   1709 F5                 7878 	push	af
   170A 33                 7879 	inc	sp
                           7880 ;	genIpush
                           7881 ;	AOP_STK for _move_character_sloc6_1_0
   170B 23                 7882 	inc	hl
   170C 7E                 7883 	ld	a,(hl)
   170D F5                 7884 	push	af
   170E 33                 7885 	inc	sp
                           7886 ;	genCall
   170F CD 00 00           7887 	call	_set_sprite_tile
   1712 E8 02              7888 	lda	sp,2(sp)
   1714 C1                 7889 	pop	bc
                           7890 ;	genLabel
   1715                    7891 00152$:
                           7892 ;	game.c 1027
                           7893 ;	genCmpEq
                           7894 ;	AOP_HL for _input_timer
                           7895 ; genCmpEq: left 1, right 1, result 0
   1715 21 03 19           7896 	ld	hl,#_input_timer
   1718 7E                 7897 	ld	a,(hl)
   1719 FE 02              7898 	cp	a,#0x02
   171B C2 44 17           7899 	jp	nz,00154$
   171E 18 03              7900 	jr	00234$
   1720                    7901 00233$:
   1720 C3 44 17           7902 	jp	00154$
   1723                    7903 00234$:
                           7904 ;	game.c 1028
                           7905 ;	genPointerGet
                           7906 ;	AOP_STK for _move_character_sloc5_1_0
                           7907 ;	AOP_STK for _move_character_sloc7_1_0
   1723 F8 04              7908 	lda	hl,4(sp)
   1725 5E                 7909 	ld	e,(hl)
   1726 23                 7910 	inc	hl
   1727 56                 7911 	ld	d,(hl)
   1728 1A                 7912 	ld	a,(de)
   1729 F8 02              7913 	lda	hl,2(sp)
   172B 77                 7914 	ld	(hl),a
                           7915 ;	genPointerGet
                           7916 ;	AOP_STK for _move_character_sloc1_1_0
                           7917 ;	AOP_STK for _move_character_sloc6_1_0
   172C F8 0B              7918 	lda	hl,11(sp)
   172E 5E                 7919 	ld	e,(hl)
   172F 23                 7920 	inc	hl
   1730 56                 7921 	ld	d,(hl)
   1731 1A                 7922 	ld	a,(de)
   1732 F8 03              7923 	lda	hl,3(sp)
   1734 77                 7924 	ld	(hl),a
                           7925 ;	genIpush
                           7926 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1735 C5                 7927 	push	bc
                           7928 ;	AOP_STK for _move_character_sloc7_1_0
   1736 2B                 7929 	dec	hl
   1737 7E                 7930 	ld	a,(hl)
   1738 F5                 7931 	push	af
   1739 33                 7932 	inc	sp
                           7933 ;	genIpush
                           7934 ;	AOP_STK for _move_character_sloc6_1_0
   173A 23                 7935 	inc	hl
   173B 7E                 7936 	ld	a,(hl)
   173C F5                 7937 	push	af
   173D 33                 7938 	inc	sp
                           7939 ;	genCall
   173E CD 00 00           7940 	call	_set_sprite_tile
   1741 E8 02              7941 	lda	sp,2(sp)
   1743 C1                 7942 	pop	bc
                           7943 ;	genLabel
   1744                    7944 00154$:
                           7945 ;	game.c 1030
                           7946 ;	genPointerGet
                           7947 ;	AOP_STK for _move_character_sloc1_1_0
                           7948 ;	AOP_STK for _move_character_sloc7_1_0
   1744 F8 0B              7949 	lda	hl,11(sp)
   1746 5E                 7950 	ld	e,(hl)
   1747 23                 7951 	inc	hl
   1748 56                 7952 	ld	d,(hl)
   1749 1A                 7953 	ld	a,(de)
   174A F8 02              7954 	lda	hl,2(sp)
   174C 77                 7955 	ld	(hl),a
                           7956 ;	genIpush
                           7957 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   174D C5                 7958 	push	bc
   174E 3E 40              7959 	ld	a,#0x40
   1750 F5                 7960 	push	af
   1751 33                 7961 	inc	sp
                           7962 ;	genIpush
                           7963 ;	AOP_STK for _move_character_sloc7_1_0
   1752 7E                 7964 	ld	a,(hl)
   1753 F5                 7965 	push	af
   1754 33                 7966 	inc	sp
                           7967 ;	genCall
   1755 CD 00 00           7968 	call	_set_sprite_prop
   1758 E8 02              7969 	lda	sp,2(sp)
   175A C1                 7970 	pop	bc
                           7971 ;	game.c 1032
                           7972 ;	genLabel
   175B                    7973 00155$:
                           7974 ;	game.c 1035
                           7975 ;	genCmpEq
                           7976 ;	AOP_HL for _input_timer
                           7977 ; genCmpEq: left 1, right 1, result 0
   175B 21 03 19           7978 	ld	hl,#_input_timer
   175E 7E                 7979 	ld	a,(hl)
   175F B7                 7980 	or	a,a
   1760 CA E0 17           7981 	jp	z,00165$
   1763                    7982 00235$:
                           7983 ;	game.c 1037
                           7984 ;	genIfx
                           7985 ;	AOP_STK for _move_character_sloc8_1_0
   1763 AF                 7986 	xor	a,a
   1764 F8 00              7987 	lda	hl,0(sp)
   1766 B6                 7988 	or	a,(hl)
   1767 C2 E0 17           7989 	jp	nz,00165$
                           7990 ;	genCmpGt
   176A 3E 04              7991 	ld	a,#0x04
   176C 91                 7992 	sub	a,c
   176D DA E0 17           7993 	jp	c,00165$
                           7994 ;	genMinus
   1770 0D                 7995 	dec	c
                           7996 ;	genJumpTab
   1771 59                 7997 	ld	e,c
   1772 16 00              7998 	ld	d,#0x00
   1774 21 7B 17           7999 	ld	hl,#00236$
   1777 19                 8000 	add	hl,de
   1778 19                 8001 	add	hl,de
   1779 19                 8002 	add	hl,de
   177A E9                 8003 	jp	(hl)
   177B                    8004 00236$:
   177B C3 AA 17           8005 	jp	00158$
   177E C3 99 17           8006 	jp	00157$
   1781 C3 C7 17           8007 	jp	00159$
   1784 C3 87 17           8008 	jp	00156$
                           8009 ;	game.c 1039
                           8010 ;	genLabel
   1787                    8011 00156$:
                           8012 ;	genPointerGet
                           8013 ;	AOP_STK for _move_character_sloc0_1_0
   1787 F8 0D              8014 	lda	hl,13(sp)
   1789 5E                 8015 	ld	e,(hl)
   178A 23                 8016 	inc	hl
   178B 56                 8017 	ld	d,(hl)
   178C 1A                 8018 	ld	a,(de)
   178D 4F                 8019 	ld	c,a
                           8020 ;	genMinus
   178E 0D                 8021 	dec	c
   178F 0D                 8022 	dec	c
                           8023 ;	genAssign (pointer)
                           8024 ;	AOP_STK for _move_character_sloc0_1_0
   1790 2B                 8025 	dec	hl
   1791 5E                 8026 	ld	e,(hl)
   1792 23                 8027 	inc	hl
   1793 56                 8028 	ld	d,(hl)
   1794 79                 8029 	ld	a,c
   1795 12                 8030 	ld	(de),a
                           8031 ;	game.c 1040
                           8032 ;	genGoto
   1796 C3 E0 17           8033 	jp	00165$
                           8034 ;	game.c 1042
                           8035 ;	genLabel
   1799                    8036 00157$:
                           8037 ;	genPointerGet
                           8038 ;	AOP_STK for _move_character_sloc0_1_0
   1799 F8 0D              8039 	lda	hl,13(sp)
   179B 5E                 8040 	ld	e,(hl)
   179C 23                 8041 	inc	hl
   179D 56                 8042 	ld	d,(hl)
   179E 1A                 8043 	ld	a,(de)
                           8044 ;	genPlus
                           8045 ;	genPlusIncr
                           8046 ;	Can't optimise plus by inc, falling back to the normal way
   179F 4F                 8047 	ld	c,a
   17A0 C6 02              8048 	add	a,#0x02
                           8049 ;	genAssign (pointer)
                           8050 ;	AOP_STK for _move_character_sloc0_1_0
   17A2 2B                 8051 	dec	hl
   17A3 5E                 8052 	ld	e,(hl)
   17A4 23                 8053 	inc	hl
   17A5 56                 8054 	ld	d,(hl)
   17A6 12                 8055 	ld	(de),a
                           8056 ;	game.c 1043
                           8057 ;	genGoto
   17A7 C3 E0 17           8058 	jp	00165$
                           8059 ;	game.c 1045
                           8060 ;	genLabel
   17AA                    8061 00158$:
                           8062 ;	genPlus
                           8063 ;	AOP_STK for _move_character_sloc0_1_0
                           8064 ;	AOP_STK for _move_character_sloc8_1_0
                           8065 ;	genPlusIncr
                           8066 ;	Can't optimise plus by inc, falling back to the normal way
   17AA F8 0D              8067 	lda	hl,13(sp)
   17AC 5E                 8068 	ld	e,(hl)
   17AD 23                 8069 	inc	hl
   17AE 56                 8070 	ld	d,(hl)
   17AF 21 01 00           8071 	ld	hl,#0x0001
   17B2 19                 8072 	add	hl,de
   17B3 7D                 8073 	ld	a,l
   17B4 54                 8074 	ld	d,h
   17B5 F8 00              8075 	lda	hl,0(sp)
                           8076 ;	genPointerGet
                           8077 ;	AOP_STK for _move_character_sloc8_1_0
   17B7 22                 8078 	ld	(hl+),a
   17B8 72                 8079 	ld	(hl),d
   17B9 5F                 8080 	ld	e,a
   17BA 1A                 8081 	ld	a,(de)
   17BB 4F                 8082 	ld	c,a
                           8083 ;	genMinus
   17BC 0D                 8084 	dec	c
   17BD 0D                 8085 	dec	c
                           8086 ;	genAssign (pointer)
                           8087 ;	AOP_STK for _move_character_sloc8_1_0
   17BE 2B                 8088 	dec	hl
   17BF 5E                 8089 	ld	e,(hl)
   17C0 23                 8090 	inc	hl
   17C1 56                 8091 	ld	d,(hl)
   17C2 79                 8092 	ld	a,c
   17C3 12                 8093 	ld	(de),a
                           8094 ;	game.c 1046
                           8095 ;	genGoto
   17C4 C3 E0 17           8096 	jp	00165$
                           8097 ;	game.c 1048
                           8098 ;	genLabel
   17C7                    8099 00159$:
                           8100 ;	genPlus
                           8101 ;	AOP_STK for _move_character_sloc0_1_0
                           8102 ;	AOP_STK for _move_character_sloc8_1_0
                           8103 ;	genPlusIncr
                           8104 ;	Can't optimise plus by inc, falling back to the normal way
   17C7 F8 0D              8105 	lda	hl,13(sp)
   17C9 5E                 8106 	ld	e,(hl)
   17CA 23                 8107 	inc	hl
   17CB 56                 8108 	ld	d,(hl)
   17CC 21 01 00           8109 	ld	hl,#0x0001
   17CF 19                 8110 	add	hl,de
   17D0 7D                 8111 	ld	a,l
   17D1 54                 8112 	ld	d,h
   17D2 F8 00              8113 	lda	hl,0(sp)
                           8114 ;	genPointerGet
                           8115 ;	AOP_STK for _move_character_sloc8_1_0
   17D4 22                 8116 	ld	(hl+),a
   17D5 72                 8117 	ld	(hl),d
   17D6 5F                 8118 	ld	e,a
   17D7 1A                 8119 	ld	a,(de)
                           8120 ;	genPlus
                           8121 ;	genPlusIncr
                           8122 ;	Can't optimise plus by inc, falling back to the normal way
   17D8 4F                 8123 	ld	c,a
   17D9 C6 02              8124 	add	a,#0x02
                           8125 ;	genAssign (pointer)
                           8126 ;	AOP_STK for _move_character_sloc8_1_0
   17DB 2B                 8127 	dec	hl
   17DC 5E                 8128 	ld	e,(hl)
   17DD 23                 8129 	inc	hl
   17DE 56                 8130 	ld	d,(hl)
   17DF 12                 8131 	ld	(de),a
                           8132 ;	game.c 1050
                           8133 ;	genLabel
   17E0                    8134 00165$:
                           8135 ;	game.c 1055
                           8136 ;	genPlus
                           8137 ;	AOP_STK for _move_character_sloc0_1_0
                           8138 ;	AOP_STK for _move_character_sloc8_1_0
                           8139 ;	genPlusIncr
                           8140 ;	Can't optimise plus by inc, falling back to the normal way
   17E0 F8 0D              8141 	lda	hl,13(sp)
   17E2 5E                 8142 	ld	e,(hl)
   17E3 23                 8143 	inc	hl
   17E4 56                 8144 	ld	d,(hl)
   17E5 21 01 00           8145 	ld	hl,#0x0001
   17E8 19                 8146 	add	hl,de
   17E9 7D                 8147 	ld	a,l
   17EA 54                 8148 	ld	d,h
   17EB F8 00              8149 	lda	hl,0(sp)
                           8150 ;	genPointerGet
                           8151 ;	AOP_STK for _move_character_sloc8_1_0
   17ED 22                 8152 	ld	(hl+),a
   17EE 72                 8153 	ld	(hl),d
   17EF 5F                 8154 	ld	e,a
   17F0 1A                 8155 	ld	a,(de)
   17F1 4F                 8156 	ld	c,a
                           8157 ;	genPointerGet
                           8158 ;	AOP_STK for _move_character_sloc0_1_0
                           8159 ;	AOP_STK for _move_character_sloc8_1_0
   17F2 F8 0D              8160 	lda	hl,13(sp)
   17F4 5E                 8161 	ld	e,(hl)
   17F5 23                 8162 	inc	hl
   17F6 56                 8163 	ld	d,(hl)
   17F7 1A                 8164 	ld	a,(de)
   17F8 F8 00              8165 	lda	hl,0(sp)
   17FA 77                 8166 	ld	(hl),a
                           8167 ;	genIpush
                           8168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17FB 79                 8169 	ld	a,c
   17FC F5                 8170 	push	af
   17FD 33                 8171 	inc	sp
                           8172 ;	genIpush
                           8173 ;	AOP_STK for _move_character_sloc8_1_0
   17FE 7E                 8174 	ld	a,(hl)
   17FF F5                 8175 	push	af
   1800 33                 8176 	inc	sp
                           8177 ;	genIpush
   1801 78                 8178 	ld	a,b
   1802 F5                 8179 	push	af
   1803 33                 8180 	inc	sp
                           8181 ;	genCall
   1804 CD 00 00           8182 	call	_move_sprite
   1807 E8 03              8183 	lda	sp,3(sp)
                           8184 ;	genLabel
   1809                    8185 00166$:
                           8186 ;	genEndFunction
   1809 E8 0F              8187 	lda	sp,15(sp)
   180B C9                 8188 	ret
   180C                    8189 ___move_character_end:
                           8190 ;	game.c 1058
                           8191 ;	genLabel
                           8192 ;	genFunction
                           8193 ;	---------------------------------
                           8194 ; Function set_character_sprite
                           8195 ; ---------------------------------
   180C                    8196 ___set_character_sprite_start:
   180C                    8197 _set_character_sprite:
   180C E8 FA              8198 	lda	sp,-6(sp)
                           8199 ;	game.c 1059
                           8200 ;	genAssign
                           8201 ;	AOP_STK for 
   180E F8 08              8202 	lda	hl,8(sp)
   1810 4E                 8203 	ld	c,(hl)
   1811 23                 8204 	inc	hl
   1812 46                 8205 	ld	b,(hl)
                           8206 ;	genPlus
                           8207 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8208 ;	genPlusIncr
                           8209 ;	Can't optimise plus by inc, falling back to the normal way
   1813 21 0B 00           8210 	ld	hl,#0x000B
   1816 09                 8211 	add	hl,bc
   1817 7D                 8212 	ld	a,l
   1818 54                 8213 	ld	d,h
   1819 F8 04              8214 	lda	hl,4(sp)
                           8215 ;	genPointerGet
                           8216 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8217 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   181B 22                 8218 	ld	(hl+),a
   181C 72                 8219 	ld	(hl),d
   181D 5F                 8220 	ld	e,a
   181E 1A                 8221 	ld	a,(de)
   181F 2B                 8222 	dec	hl
   1820 2B                 8223 	dec	hl
   1821 77                 8224 	ld	(hl),a
                           8225 ;	genCmpGt
                           8226 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           8227 ;	AOP_HL for _characters_available
   1822 21 02 19           8228 	ld	hl,#_characters_available
   1825 7E                 8229 	ld	a,(hl)
   1826 F8 03              8230 	lda	hl,3(sp)
   1828 96                 8231 	sub	a,(hl)
   1829 DA 72 18           8232 	jp	c,00103$
                           8233 ;	game.c 1060
                           8234 ;	genPlus
                           8235 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8236 ;	genPlusIncr
                           8237 ;	Can't optimise plus by inc, falling back to the normal way
   182C 21 02 00           8238 	ld	hl,#0x0002
   182F 09                 8239 	add	hl,bc
   1830 7D                 8240 	ld	a,l
   1831 54                 8241 	ld	d,h
   1832 F8 01              8242 	lda	hl,1(sp)
                           8243 ;	genPointerGet
                           8244 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8245 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1834 22                 8246 	ld	(hl+),a
   1835 72                 8247 	ld	(hl),d
   1836 5F                 8248 	ld	e,a
   1837 1A                 8249 	ld	a,(de)
   1838 2B                 8250 	dec	hl
   1839 2B                 8251 	dec	hl
   183A 77                 8252 	ld	(hl),a
                           8253 ;	genIpush
                           8254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   183B C5                 8255 	push	bc
                           8256 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   183C 7E                 8257 	ld	a,(hl)
   183D F5                 8258 	push	af
   183E 33                 8259 	inc	sp
                           8260 ;	genIpush
                           8261 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   183F F8 06              8262 	lda	hl,6(sp)
   1841 7E                 8263 	ld	a,(hl)
   1842 F5                 8264 	push	af
   1843 33                 8265 	inc	sp
                           8266 ;	genCall
   1844 CD 00 00           8267 	call	_set_sprite_tile
   1847 E8 02              8268 	lda	sp,2(sp)
   1849 C1                 8269 	pop	bc
                           8270 ;	game.c 1061
                           8271 ;	genPlus
                           8272 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8273 ;	genPlusIncr
                           8274 ;	Can't optimise plus by inc, falling back to the normal way
   184A 21 01 00           8275 	ld	hl,#0x0001
   184D 09                 8276 	add	hl,bc
   184E 7D                 8277 	ld	a,l
   184F 54                 8278 	ld	d,h
   1850 F8 01              8279 	lda	hl,1(sp)
                           8280 ;	genPointerGet
                           8281 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8282 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1852 22                 8283 	ld	(hl+),a
   1853 72                 8284 	ld	(hl),d
   1854 5F                 8285 	ld	e,a
   1855 1A                 8286 	ld	a,(de)
   1856 2B                 8287 	dec	hl
   1857 2B                 8288 	dec	hl
   1858 77                 8289 	ld	(hl),a
                           8290 ;	genPointerGet
   1859 0A                 8291 	ld	a,(bc)
   185A 4F                 8292 	ld	c,a
                           8293 ;	genPointerGet
                           8294 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   185B F8 04              8295 	lda	hl,4(sp)
   185D 5E                 8296 	ld	e,(hl)
   185E 23                 8297 	inc	hl
   185F 56                 8298 	ld	d,(hl)
   1860 1A                 8299 	ld	a,(de)
   1861 47                 8300 	ld	b,a
                           8301 ;	genIpush
                           8302 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8303 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1862 F8 00              8304 	lda	hl,0(sp)
   1864 7E                 8305 	ld	a,(hl)
   1865 F5                 8306 	push	af
   1866 33                 8307 	inc	sp
                           8308 ;	genIpush
   1867 79                 8309 	ld	a,c
   1868 F5                 8310 	push	af
   1869 33                 8311 	inc	sp
                           8312 ;	genIpush
   186A 78                 8313 	ld	a,b
   186B F5                 8314 	push	af
   186C 33                 8315 	inc	sp
                           8316 ;	genCall
   186D CD 00 00           8317 	call	_move_sprite
   1870 E8 03              8318 	lda	sp,3(sp)
                           8319 ;	genLabel
   1872                    8320 00103$:
                           8321 ;	genEndFunction
   1872 E8 06              8322 	lda	sp,6(sp)
   1874 C9                 8323 	ret
   1875                    8324 ___set_character_sprite_end:
                           8325 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_next_map_position_end      0A6B R
  0 ____get_next_map_position_start    0A03 R
  0 ___can_move_end                    0E42 R
  0 ___can_move_start                  0D29 R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0B8F R
  0 ___dog1_power_apply_start          0A6B R
  0 ___dog1_power_end                  0A03 R
  0 ___dog1_power_start                0885 R
  0 ___get_player_map_position_end     0BE3 R
  0 ___get_player_map_position_start   0B8F R
  0 ___got_door_end                    07B0 R
  0 ___got_door_start                  05C6 R
  0 ___got_key_end                     05C6 R
  0 ___got_key_start                   0519 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0519 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      0885 R
  0 ___is_ded_start                    07B0 R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              180C R
  0 ___move_character_start            0FE8 R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0D29 R
  0 ___player_input_start              0BE3 R
  0 ___rotate_player_end               0FE8 R
  0 ___rotate_player_start             0E42 R
  0 ___set_character_sprite_end        1875 R
  0 ___set_character_sprite_start      180C R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_next_map_position            0A03 GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          0D29 GR
  1 _cat                               1A94 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7A GR
  0 _dog1_power                        0885 GR
  0 _dog1_power_apply                  0A6B GR
  1 _dog2                              1A87 GR
  0 _get_player_map_position           0B8F GR
  0 _got_door                          05C6 GR
  0 _got_key                           0519 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA1 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07B0 GR
  1 _item1                             1AB6 GR
  1 _item2                             1ABC GR
  1 _item3                             1AC2 GR
    _joypad                            **** GX
  1 _key                               1AB0 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    0FE8 GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AAE GR
  0 _player_input                      0BE3 GR
    _printf                            **** GX
  0 _rotate_player                     0E42 GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              180C GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1875   flags 0
   1 _DATA                              size 1AC8   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 1033   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
