                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Fri Feb 28 11:38:49 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc91130
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _instanciate_chars
                             14 	.globl _copy_map
                             15 	.globl _helper_copy_map
                             16 	.globl _change_char
                             17 	.globl _map_water
                             18 	.globl _init
                             19 	.globl _main
                             20 	.globl _timers
                             21 	.globl _performantDelay
                             22 	.globl _item3
                             23 	.globl _item2
                             24 	.globl _item1
                             25 	.globl _key
                             26 	.globl _player
                             27 	.globl _horse
                             28 	.globl _cat
                             29 	.globl _dog2
                             30 	.globl _dog1
                             31 	.globl _bunny
                             32 	.globl _map
                             33 	.globl _current_map
                             34 	.globl _input_timer
                             35 	.globl _characters_available
                             36 	.globl _timer
                             37 	.globl _running
                             38 	.globl _spritePalette
                             39 	.globl _sprites_park
                             40 	.globl _MapTest
                             41 	.globl _Map10
                             42 	.globl _Map9
                             43 	.globl _Map8
                             44 	.globl _Map7
                             45 	.globl _Map6
                             46 	.globl _Map5
                             47 	.globl _Map4
                             48 	.globl _Map3
                             49 	.globl _Map2
                             50 	.globl _Map1
                             51 	.globl _Characters
                             52 	.globl _map_loop
                             53 	.globl _map_init
                             54 	.globl _got_key
                             55 	.globl _got_door
                             56 	.globl _is_ded
                             57 	.globl __get_next_map_position
                             58 	.globl _dog1_power_apply
                             59 	.globl __get_map_position_from_xy
                             60 	.globl _player_input
                             61 	.globl _can_move_to_map_pos
                             62 	.globl _can_move
                             63 	.globl _move_character
                             64 	.globl _set_character_sprite
                             65 ;--------------------------------------------------------
                             66 ; special function registers
                             67 ;--------------------------------------------------------
                             68 ;--------------------------------------------------------
                             69 ; special function bits 
                             70 ;--------------------------------------------------------
                             71 ;--------------------------------------------------------
                             72 ; internal ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DATA
   0000                      75 _Characters::
   0000                      76 	.ds 496
   01F0                      77 _Map1::
   01F0                      78 	.ds 360
   0358                      79 _Map2::
   0358                      80 	.ds 360
   04C0                      81 _Map3::
   04C0                      82 	.ds 360
   0628                      83 _Map4::
   0628                      84 	.ds 360
   0790                      85 _Map5::
   0790                      86 	.ds 360
   08F8                      87 _Map6::
   08F8                      88 	.ds 360
   0A60                      89 _Map7::
   0A60                      90 	.ds 360
   0BC8                      91 _Map8::
   0BC8                      92 	.ds 360
   0D30                      93 _Map9::
   0D30                      94 	.ds 360
   0E98                      95 _Map10::
   0E98                      96 	.ds 360
   1000                      97 _MapTest::
   1000                      98 	.ds 360
   1168                      99 _sprites_park::
   1168                     100 	.ds 1936
   18F8                     101 _spritePalette::
   18F8                     102 	.ds 8
   1900                     103 _running::
   1900                     104 	.ds 1
   1901                     105 _timer::
   1901                     106 	.ds 1
   1902                     107 _characters_available::
   1902                     108 	.ds 1
   1903                     109 _input_timer::
   1903                     110 	.ds 1
   1904                     111 _current_map::
   1904                     112 	.ds 1
   1905                     113 _map::
   1905                     114 	.ds 360
   1A6D                     115 _bunny::
   1A6D                     116 	.ds 14
   1A7B                     117 _dog1::
   1A7B                     118 	.ds 14
   1A89                     119 _dog2::
   1A89                     120 	.ds 14
   1A97                     121 _cat::
   1A97                     122 	.ds 14
   1AA5                     123 _horse::
   1AA5                     124 	.ds 14
   1AB3                     125 _player::
   1AB3                     126 	.ds 2
   1AB5                     127 _key::
   1AB5                     128 	.ds 6
   1ABB                     129 _item1::
   1ABB                     130 	.ds 6
   1AC1                     131 _item2::
   1AC1                     132 	.ds 6
   1AC7                     133 _item3::
   1AC7                     134 	.ds 6
                            135 ;--------------------------------------------------------
                            136 ; overlayable items in internal ram 
                            137 ;--------------------------------------------------------
                            138 	.area _OVERLAY
                            139 ;--------------------------------------------------------
                            140 ; indirectly addressable internal ram data
                            141 ;--------------------------------------------------------
                            142 	.area _ISEG
                            143 ;--------------------------------------------------------
                            144 ; bit data
                            145 ;--------------------------------------------------------
                            146 	.area _BSEG
                            147 ;--------------------------------------------------------
                            148 ; external ram data
                            149 ;--------------------------------------------------------
                            150 	.area _XSEG
                            151 ;--------------------------------------------------------
                            152 ; global & static initialisations
                            153 ;--------------------------------------------------------
                            154 	.area _GSINIT
                            155 	.area _GSFINAL
                            156 	.area _GSINIT
                            157 ;	game.c 26
                            158 ;	game.c 1126
                            159 ;	genArrayInit
                            160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            161 	ld	hl,#_Characters
   0003 CD 00 00            162 	call	__initrleblock
   0006 2C                  163 	.db	44
   0007 09 00 00 09 00 09   164 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   165 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   166 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   167 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   168 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         169 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               170 	.db	-5,0x00
   0035 7F                  171 	.db	127
   0036 13 00 1E 0A 9E 00   172 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   173 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   174 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   175 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   176 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   177 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   178 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   179 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   180 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   181 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   182 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   183 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   184 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   185 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   186 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   187 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  188 	.db	127
   00B6 00 00 04 70 04 40   189 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   190 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   191 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   192 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   193 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   194 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   195 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   196 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   197 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   198 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   199 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   200 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   201 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   202 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   203 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   204 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  205 	.db	62
   0136 00 00 39 14 FF 00   206 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   207 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   208 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   209 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   210 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   211 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   212 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   213 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               214 	.db	-127,0x00
   0176 04                  215 	.db	4
   0177 00 00 00 00         216 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  217 	.db	0
                            218 ;	game.c 25
                            219 ;	game.c 1126
                            220 ;	genArrayInit
                            221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            222 	ld	hl,#_Map1
   017F CD 00 00            223 	call	__initrleblock
   0182 04                  224 	.db	4
   0183 01 01 01 01         225 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               226 	.db	-16,0x16
   0189 04                  227 	.db	4
   018A 01 0A 02 01         228 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               229 	.db	-15,0x09
   0190 0C                  230 	.db	12
   0191 16 01 01 02 15 15   231 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         232 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               233 	.db	-6,0x15
   019F 09                  234 	.db	9
   01A0 02 09 16 02 01 02   235 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  236 	.db	0x17
   01A9 FA 15               237 	.db	-6,0x15
   01AB 20                  238 	.db	32
   01AC 17 15 15 15 17 15   239 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   240 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   241 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   242 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               243 	.db	-5,0x02
   01CE 06                  244 	.db	6
   01CF 01 15 01 01 01 17   245 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               246 	.db	-5,0x0B
   01D7 3E                  247 	.db	62
   01D8 01 01 01 15 02 02   248 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   249 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   250 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   251 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   252 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   253 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   254 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   255 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               256 	.db	-6,0x15
   0218 0C                  257 	.db	12
   0219 02 02 15 02 02 02   258 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         259 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               260 	.db	-8,0x15
   0227 3C                  261 	.db	60
   0228 17 17 17 15 15 15   262 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   263 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   264 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   265 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   266 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   267 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   268 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         269 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               270 	.db	-7,0x15
   0266 07                  271 	.db	7
   0267 17 17 15 15 15 01   272 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               273 	.db	-10,0x15
   0270 28                  274 	.db	40
   0271 17 15 15 15 15 17   275 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   276 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   277 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   278 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   279 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               280 	.db	-5,0x0B
   029B 0F                  281 	.db	15
   029C 04 2E 00 02 01 02   282 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   283 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               284 	.db	-5,0x0B
   02AD 03                  285 	.db	3
   02AE 04 00 00            286 	.db	0x04, 0x00, 0x00
   02B1 00                  287 	.db	0
                            288 ;	game.c 25
                            289 ;	game.c 1126
                            290 ;	genArrayInit
                            291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            292 	ld	hl,#_Map2
   02B5 CD 00 00            293 	call	__initrleblock
   02B8 FB 00               294 	.db	-5,0x00
   02BA 01                  295 	.db	1
   02BB 2D                  296 	.db	0x2D
   02BC F9 00               297 	.db	-7,0x00
   02BE 04                  298 	.db	4
   02BF 2D 00 15 15         299 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               300 	.db	-6,0x00
   02C5 7F                  301 	.db	127
   02C6 0B 0B 00 0B 0B 0B   302 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   303 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   304 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   305 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   306 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   307 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   308 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   309 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   310 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   311 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   312 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   313 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   314 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   315 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   316 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   317 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  318 	.db	53
   0346 00 00 2D 00 00 00   319 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   320 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   321 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   322 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   323 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   324 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      325 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               326 	.db	-5,0x0B
   037D 03                  327 	.db	3
   037E 15 00 15            328 	.db	0x15, 0x00, 0x15
   0381 FB 0B               329 	.db	-5,0x0B
   0383 37                  330 	.db	55
   0384 15 15 0B 15 15 00   331 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   332 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   333 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   334 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   335 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   336 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   337 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               338 	.db	-5,0x0B
   03BD 09                  339 	.db	9
   03BE 15 15 0B 15 15 00   340 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  341 	.db	0x15
   03C7 F6 0B               342 	.db	-10,0x0B
   03C9 07                  343 	.db	7
   03CA 15 15 15 0B 15 15   344 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               345 	.db	-16,0x15
   03D3 09                  346 	.db	9
   03D4 00 15 15 00 00 00   347 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  348 	.db	0x15
   03DD F9 00               349 	.db	-7,0x00
   03DF 09                  350 	.db	9
   03E0 15 15 15 00 00 15   351 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  352 	.db	0x15
   03E9 FB 00               353 	.db	-5,0x00
   03EB FB 15               354 	.db	-5,0x15
   03ED FB 00               355 	.db	-5,0x00
   03EF 02                  356 	.db	2
   03F0 15 15               357 	.db	0x15, 0x15
   03F2 00                  358 	.db	0
                            359 ;	game.c 25
                            360 ;	game.c 1126
                            361 ;	genArrayInit
                            362 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            363 	ld	hl,#_Map3
   03F6 CD 00 00            364 	call	__initrleblock
   03F9 F2 01               365 	.db	-14,0x01
   03FB 03                  366 	.db	3
   03FC 2D 0B 0B            367 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               368 	.db	-5,0x01
   0401 02                  369 	.db	2
   0402 17 17               370 	.db	0x17, 0x17
   0404 FA 15               371 	.db	-6,0x15
   0406 0E                  372 	.db	14
   0407 17 17 15 15 0B 15   373 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   374 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               375 	.db	-5,0x01
   0417 08                  376 	.db	8
   0418 29 01 01 01 2D 01   377 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               378 	.db	-5,0x01
   0422 7F                  379 	.db	127
   0423 15 15 2D 15 15 15   380 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   381 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   382 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   383 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   384 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   385 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   386 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   387 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   388 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   389 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   390 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   391 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   392 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   393 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   394 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   395 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  396 	.db	61
   04A3 01 15 17 15 15 01   397 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   398 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   399 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   400 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   401 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   402 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   403 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      404 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               405 	.db	-5,0x01
   04E2 0B                  406 	.db	11
   04E3 15 15 01 15 2D 01   407 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            408 	.db	0x15, 0x15, 0x0B
   04EE FB 15               409 	.db	-5,0x15
   04F0 59                  410 	.db	89
   04F1 17 15 15 17 15 15   411 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   412 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   413 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   414 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   415 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   416 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   417 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   418 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   419 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   420 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   421 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  422 	.db	0x17
   054A 00                  423 	.db	0
                            424 ;	game.c 25
                            425 ;	game.c 1126
                            426 ;	genArrayInit
                            427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            428 	ld	hl,#_Map4
   054E CD 00 00            429 	call	__initrleblock
   0551 06                  430 	.db	6
   0552 00 00 0A 0A 15 15   431 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               432 	.db	-5,0x0B
   055A 01                  433 	.db	1
   055B 15                  434 	.db	0x15
   055C FA 0B               435 	.db	-6,0x0B
   055E 25                  436 	.db	37
   055F 15 15 00 0A 2D 06   437 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   438 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   439 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   440 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      441 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               442 	.db	-5,0x0B
   0586 08                  443 	.db	8
   0587 0A 07 0B 0B 15 0B   444 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               445 	.db	-5,0x0B
   0591 01                  446 	.db	1
   0592 15                  447 	.db	0x15
   0593 F6 0B               448 	.db	-10,0x0B
   0595 42                  449 	.db	66
   0596 00 2D 0B 01 00 0B   450 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   451 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   452 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   453 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   454 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   455 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   456 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   457 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               458 	.db	0x15, 0x00
   05D8 F9 0B               459 	.db	-7,0x0B
   05DA 43                  460 	.db	67
   05DB 15 0B 0B 00 0B 15   461 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   462 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   463 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   464 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   465 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   466 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   467 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   468 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            469 	.db	0x15, 0x0B, 0x15
   061E F9 0B               470 	.db	-7,0x0B
   0620 16                  471 	.db	22
   0621 15 15 0B 0B 0B 0B   472 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   473 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   474 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               475 	.db	-5,0x0B
   0639 66                  476 	.db	102
   063A 15 0A 07 15 00 02   477 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   478 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   479 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   480 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   481 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   482 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   483 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   484 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   485 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   486 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   487 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   488 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   489 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  490 	.db	0
                            491 ;	game.c 25
                            492 ;	game.c 1126
                            493 ;	genArrayInit
                            494 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            495 	ld	hl,#_Map5
   06A4 CD 00 00            496 	call	__initrleblock
   06A7 F2 01               497 	.db	-14,0x01
   06A9 03                  498 	.db	3
   06AA 2D 0B 0B            499 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               500 	.db	-5,0x01
   06AF 02                  501 	.db	2
   06B0 17 17               502 	.db	0x17, 0x17
   06B2 FA 15               503 	.db	-6,0x15
   06B4 07                  504 	.db	7
   06B5 17 17 15 15 0B 15   505 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               506 	.db	-5,0x01
   06BE 02                  507 	.db	2
   06BF 17 15               508 	.db	0x17, 0x15
   06C1 FB 01               509 	.db	-5,0x01
   06C3 7F                  510 	.db	127
   06C4 29 01 01 01 2D 01   511 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   512 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   513 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   514 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   515 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   516 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   517 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   518 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   519 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   520 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   521 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   522 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   523 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   524 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   525 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   526 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  527 	.db	74
   0744 01 2D 01 01 01 15   528 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   529 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   530 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   531 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   532 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   533 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   534 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   535 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   536 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               537 	.db	0x01, 0x29
   078E FB 01               538 	.db	-5,0x01
   0790 0B                  539 	.db	11
   0791 15 15 01 15 2D 01   540 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            541 	.db	0x15, 0x15, 0x0B
   079C FB 15               542 	.db	-5,0x15
   079E 59                  543 	.db	89
   079F 17 15 15 17 15 15   544 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   545 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   546 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   547 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   548 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   549 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   550 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   551 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   552 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   553 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   554 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  555 	.db	0x17
   07F8 00                  556 	.db	0
                            557 ;	game.c 25
                            558 ;	game.c 1126
                            559 ;	genArrayInit
                            560 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            561 	ld	hl,#_Map6
   07FC CD 00 00            562 	call	__initrleblock
   07FF BF 00               563 	.db	-65,0x00
   0801 02                  564 	.db	2
   0802 0C 0C               565 	.db	0x0C, 0x0C
   0804 EE 00               566 	.db	-18,0x00
   0806 02                  567 	.db	2
   0807 0C 0C               568 	.db	0x0C, 0x0C
   0809 81 00               569 	.db	-127,0x00
   080B 81 00               570 	.db	-127,0x00
   080D ED 00               571 	.db	-19,0x00
   080F 00                  572 	.db	0
                            573 ;	game.c 25
                            574 ;	game.c 1126
                            575 ;	genArrayInit
                            576 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            577 	ld	hl,#_Map7
   0813 CD 00 00            578 	call	__initrleblock
   0816 BF 00               579 	.db	-65,0x00
   0818 02                  580 	.db	2
   0819 0C 0C               581 	.db	0x0C, 0x0C
   081B EE 00               582 	.db	-18,0x00
   081D 02                  583 	.db	2
   081E 0C 0C               584 	.db	0x0C, 0x0C
   0820 81 00               585 	.db	-127,0x00
   0822 81 00               586 	.db	-127,0x00
   0824 ED 00               587 	.db	-19,0x00
   0826 00                  588 	.db	0
                            589 ;	game.c 25
                            590 ;	game.c 1126
                            591 ;	genArrayInit
                            592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            593 	ld	hl,#_Map8
   082A CD 00 00            594 	call	__initrleblock
   082D BF 00               595 	.db	-65,0x00
   082F 02                  596 	.db	2
   0830 0C 0C               597 	.db	0x0C, 0x0C
   0832 EE 00               598 	.db	-18,0x00
   0834 02                  599 	.db	2
   0835 0C 0C               600 	.db	0x0C, 0x0C
   0837 81 00               601 	.db	-127,0x00
   0839 81 00               602 	.db	-127,0x00
   083B ED 00               603 	.db	-19,0x00
   083D 00                  604 	.db	0
                            605 ;	game.c 25
                            606 ;	game.c 1126
                            607 ;	genArrayInit
                            608 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            609 	ld	hl,#_Map9
   0841 CD 00 00            610 	call	__initrleblock
   0844 BF 00               611 	.db	-65,0x00
   0846 02                  612 	.db	2
   0847 0C 0C               613 	.db	0x0C, 0x0C
   0849 EE 00               614 	.db	-18,0x00
   084B 02                  615 	.db	2
   084C 0C 0C               616 	.db	0x0C, 0x0C
   084E 81 00               617 	.db	-127,0x00
   0850 81 00               618 	.db	-127,0x00
   0852 ED 00               619 	.db	-19,0x00
   0854 00                  620 	.db	0
                            621 ;	game.c 25
                            622 ;	game.c 1126
                            623 ;	genArrayInit
                            624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            625 	ld	hl,#_Map10
   0858 CD 00 00            626 	call	__initrleblock
   085B BF 00               627 	.db	-65,0x00
   085D 02                  628 	.db	2
   085E 0C 0C               629 	.db	0x0C, 0x0C
   0860 EE 00               630 	.db	-18,0x00
   0862 02                  631 	.db	2
   0863 0C 0C               632 	.db	0x0C, 0x0C
   0865 81 00               633 	.db	-127,0x00
   0867 81 00               634 	.db	-127,0x00
   0869 ED 00               635 	.db	-19,0x00
   086B 00                  636 	.db	0
                            637 ;	game.c 25
                            638 ;	game.c 1126
                            639 ;	genArrayInit
                            640 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            641 	ld	hl,#_MapTest
   086F CD 00 00            642 	call	__initrleblock
   0872 E8 00               643 	.db	-24,0x00
   0874 06                  644 	.db	6
   0875 47 4A 59 46 00 5F   645 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087B F4 00               646 	.db	-12,0x00
   087D 02                  647 	.db	2
   087E 2D 2D               648 	.db	0x2D, 0x2D
   0880 EE 00               649 	.db	-18,0x00
   0882 39                  650 	.db	57
   0883 0D 0D 2D 00 00 00   651 	.db	0x0D, 0x0D, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x4B
        00 4B
   088B 46 58 4A 00 5F 00   652 	.db	0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62, 0x00
        62 00
   0893 65 00 00 00 0D 0E   653 	.db	0x65, 0x00, 0x00, 0x00, 0x0D, 0x0E, 0x0D, 0x0D
        0D 0D
   089B 0D 2D 00 4B 46 58   654 	.db	0x0D, 0x2D, 0x00, 0x4B, 0x46, 0x58, 0x4A, 0x00
        4A 00
   08A3 60 00 62 00 66 00   655 	.db	0x60, 0x00, 0x62, 0x00, 0x66, 0x00, 0x00, 0x00
        00 00
   08AB 0D 0D 00 00 0F 00   656 	.db	0x0D, 0x0D, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x4B
        00 4B
   08B3 46 58 4A 00 5C 00   657 	.db	0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62, 0x00
        62 00
   08BB 67                  658 	.db	0x67
   08BC F9 00               659 	.db	-7,0x00
   08BE 01                  660 	.db	1
   08BF 10                  661 	.db	0x10
   08C0 F5 00               662 	.db	-11,0x00
   08C2 01                  663 	.db	1
   08C3 68                  664 	.db	0x68
   08C4 EB 00               665 	.db	-21,0x00
   08C6 0A                  666 	.db	10
   08C7 46 62 55 54 49 4A   667 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08CF 49 54               668 	.db	0x49, 0x54
   08D1 F4 00               669 	.db	-12,0x00
   08D3 0A                  670 	.db	10
   08D4 55 4A 57 58 54 53   671 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08DC 4A 52               672 	.db	0x4A, 0x52
   08DE FB 00               673 	.db	-5,0x00
   08E0 01                  674 	.db	1
   08E1 2E                  675 	.db	0x2E
   08E2 EF 00               676 	.db	-17,0x00
   08E4 0C                  677 	.db	12
   08E5 2D 00 00 00 00 47   678 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08ED 57 54 48 46         679 	.db	0x57, 0x54, 0x48, 0x46
   08F1 F8 00               680 	.db	-8,0x00
   08F3 18                  681 	.db	24
   08F4 2D 00 0B 0B 00 00   682 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08FC 4A 57 58 54 53 46   683 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   0904 52 00 00 00 2D 00   684 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   090C F0 00               685 	.db	-16,0x00
   090E 0B                  686 	.db	11
   090F 2D 00 0D 0D 00 32   687 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   0917 5A 51 46            688 	.db	0x5A, 0x51, 0x46
   091A F7 00               689 	.db	-9,0x00
   091C 0E                  690 	.db	14
   091D 2D 00 0E 0E 00 33   691 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   0925 52 55 5A 57 57 46   692 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   092B FA 00               693 	.db	-6,0x00
   092D 0D                  694 	.db	13
   092E 2D 00 29 29 00 00   695 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   0936 51 54 48 54 58      696 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   093B E0 00               697 	.db	-32,0x00
   093D 00                  698 	.db	0
                            699 ;	game.c 26
                            700 ;	game.c 1126
                            701 ;	genArrayInit
                            702 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   093E 21 68 11            703 	ld	hl,#_sprites_park
   0941 CD 00 00            704 	call	__initrleblock
   0944 EC 00               705 	.db	-20,0x00
   0946 09                  706 	.db	9
   0947 10 00 00 00 02 00   707 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   094F 20                  708 	.db	0x20
   0950 F7 00               709 	.db	-9,0x00
   0952 01                  710 	.db	1
   0953 10                  711 	.db	0x10
   0954 F7 00               712 	.db	-9,0x00
   0956 21                  713 	.db	33
   0957 94 08 00 00 42 00   714 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   095F 00 80 25 00 50 00   715 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   0967 00 00 90 00 00 00   716 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   096F 80 00 00 10 80 00   717 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   0977 5A                  718 	.db	0x5A
   0978 FB 00               719 	.db	-5,0x00
   097A 05                  720 	.db	5
   097B 02 20 00 00 08      721 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0980 F9 00               722 	.db	-7,0x00
   0982 0B                  723 	.db	11
   0983 01 00 00 08 01 00   724 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   098B 00 00 09            725 	.db	0x00, 0x00, 0x09
   098E F9 00               726 	.db	-7,0x00
   0990 4C                  727 	.db	76
   0991 10 08 00 00 40 04   728 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   0999 00 00 5A 00 7F 00   729 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   09A1 80 00 80 00 80 00   730 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   09A9 80 00 80 00 7E 00   731 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   09B1 81 00 81 00 81 00   732 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   09B9 81 00 7E 00 00 00   733 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09C1 50 00 20 00 00 00   734 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09C9 0A 00 04 00 FF 00   735 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09D1 AA 00 FF 00 FF 00   736 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09D9 55 00 FF 00         737 	.db	0x55, 0x00, 0xFF, 0x00
   09DD EF FF               738 	.db	-17,0xFF
   09DF 4C                  739 	.db	76
   09E0 00 DD 00 BB 00 F7   740 	.db	0x00, 0xDD, 0x00, 0xBB, 0x00, 0xF7, 0x00, 0xFF
        00 FF
   09E8 00 EE 00 DD 00 FF   741 	.db	0x00, 0xEE, 0x00, 0xDD, 0x00, 0xFF, 0x00, 0xAD
        00 AD
   09F0 00 5C 00 DB 00 29   742 	.db	0x00, 0x5C, 0x00, 0xDB, 0x00, 0x29, 0x00, 0xF6
        00 F6
   09F8 00 49 00 BA 00 D6   743 	.db	0x00, 0x49, 0x00, 0xBA, 0x00, 0xD6, 0x00, 0xFF
        00 FF
   0A00 7E F3 8D C1 BF C1   744 	.db	0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81
        BF 81
   0A08 FF 81 FF 81 FF FF   745 	.db	0xFF, 0x81, 0xFF, 0x81, 0xFF, 0xFF, 0x7E, 0xFF
        7E FF
   0A10 7E F3 8D C1 BF C1   746 	.db	0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81
        BF 81
   0A18 FF 81 FF 81 FF FF   747 	.db	0xFF, 0x81, 0xFF, 0x81, 0xFF, 0xFF, 0x7E, 0x00
        7E 00
   0A20 00 42 00 24 00 18   748 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0A28 00 24 00 42         749 	.db	0x00, 0x24, 0x00, 0x42
   0A2C FB 00               750 	.db	-5,0x00
   0A2E 0B                  751 	.db	11
   0A2F 42 00 24 00 18 00   752 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A37 24 00 42            753 	.db	0x24, 0x00, 0x42
   0A3A EB 00               754 	.db	-21,0x00
   0A3C 4B                  755 	.db	75
   0A3D 42 00 24 00 18 00   756 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A45 24 00 42 00 00 00   757 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A4D 6E 10 FF 00 BF 40   758 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A55 76 08 00 3C 00 3C   759 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A5D 80 7F 80 7F 80 7F   760 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A65 80 7F 80 7F 00 FF   761 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A6D 7E 00 DF 20 FF 00   762 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A75 7E 00 18 24 00 3C   763 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A7D 42 00 24 00 18 00   764 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A85 24 00 42            765 	.db	0x24, 0x00, 0x42
   0A88 FB 00               766 	.db	-5,0x00
   0A8A 0B                  767 	.db	11
   0A8B 42 00 24 00 18 00   768 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A93 24 00 42            769 	.db	0x24, 0x00, 0x42
   0A96 FB 00               770 	.db	-5,0x00
   0A98 0B                  771 	.db	11
   0A99 42 00 24 00 18 00   772 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AA1 24 00 42            773 	.db	0x24, 0x00, 0x42
   0AA4 FB 00               774 	.db	-5,0x00
   0AA6 0B                  775 	.db	11
   0AA7 42 00 24 00 18 00   776 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AAF 24 00 42            777 	.db	0x24, 0x00, 0x42
   0AB2 FB 00               778 	.db	-5,0x00
   0AB4 0B                  779 	.db	11
   0AB5 42 00 24 00 18 00   780 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0ABD 24 00 42            781 	.db	0x24, 0x00, 0x42
   0AC0 FB 00               782 	.db	-5,0x00
   0AC2 0B                  783 	.db	11
   0AC3 42 00 24 00 18 00   784 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0ACB 24 00 42            785 	.db	0x24, 0x00, 0x42
   0ACE FB 00               786 	.db	-5,0x00
   0AD0 0B                  787 	.db	11
   0AD1 42 00 24 00 18 00   788 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD9 24 00 42            789 	.db	0x24, 0x00, 0x42
   0ADC FB 00               790 	.db	-5,0x00
   0ADE 0B                  791 	.db	11
   0ADF 42 00 24 00 18 00   792 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AE7 24 00 42            793 	.db	0x24, 0x00, 0x42
   0AEA FB 00               794 	.db	-5,0x00
   0AEC 0B                  795 	.db	11
   0AED 42 00 24 00 18 00   796 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AF5 24 00 42            797 	.db	0x24, 0x00, 0x42
   0AF8 EB 00               798 	.db	-21,0x00
   0AFA 0B                  799 	.db	11
   0AFB 42 00 24 00 18 00   800 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B03 24 00 42            801 	.db	0x24, 0x00, 0x42
   0B06 FB 00               802 	.db	-5,0x00
   0B08 0B                  803 	.db	11
   0B09 42 00 24 00 18 00   804 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B11 24 00 42            805 	.db	0x24, 0x00, 0x42
   0B14 FB 00               806 	.db	-5,0x00
   0B16 0B                  807 	.db	11
   0B17 42 00 24 00 18 00   808 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B1F 24 00 42            809 	.db	0x24, 0x00, 0x42
   0B22 FB 00               810 	.db	-5,0x00
   0B24 0B                  811 	.db	11
   0B25 42 00 24 00 18 00   812 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B2D 24 00 42            813 	.db	0x24, 0x00, 0x42
   0B30 FB 00               814 	.db	-5,0x00
   0B32 0B                  815 	.db	11
   0B33 42 00 24 00 18 00   816 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B3B 24 00 42            817 	.db	0x24, 0x00, 0x42
   0B3E FB 00               818 	.db	-5,0x00
   0B40 0B                  819 	.db	11
   0B41 42 00 24 00 18 00   820 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B49 24 00 42            821 	.db	0x24, 0x00, 0x42
   0B4C FB 00               822 	.db	-5,0x00
   0B4E 7F                  823 	.db	127
   0B4F 42 00 24 00 18 00   824 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B57 24 00 42 00 00 00   825 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B5F C7 C7 BB BB BB BB   826 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B67 D7 D7 DB DB 42 C3   827 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B6F FF 00 C7 00 C7 00   828 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B77 EF 00 E7 00 FF 00   829 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B7F 76 00 FF 00 BF 00   830 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B87 7E 00 00 3C 00 3C   831 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B8F 42 7E 81 FF 81 FF   832 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B97 81 FF 81 FF 81 FF   833 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B9F F3 8D C1 BF C1 BF   834 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0BA7 81 FF 81 FF 7E 7E   835 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0BAF 04 02 01 09 09 F9   836 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0BB7 06 06 00 00 00 00   837 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BBF AA 00 55 00 AA 00   838 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BC7 AA 00 55 00 AA 00   839 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BCE 0F                  840 	.db	15
   0BCF AA AA 55 55 AA AA   841 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BD7 AA AA 55 55 AA AA   842 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55
        55
   0BDE F0 00               843 	.db	-16,0x00
   0BE0 4D                  844 	.db	77
   0BE1 09 00 00 09 00 09   845 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   0BE9 CA 05 FF 00 3F 00   846 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0BF1 00 13 00 1E 0A 9E   847 	.db	0x00, 0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F
        00 9F
   0BF9 02 FF 00 FF 00 7E   848 	.db	0x02, 0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A
        00 4A
   0C01 94 00 9C 00 9E 0A   849 	.db	0x94, 0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01
        FF 01
   0C09 FE 00 7C 00 4A 00   850 	.db	0xFE, 0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00
        49 00
   0C11 89 89 4F 4F 4F 4A   851 	.db	0x89, 0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F
        8F 8F
   0C19 9F 9F 7F 7F 7F 7F   852 	.db	0x9F, 0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45
        45 45
   0C21 00 00 42 00 24 00   853 	.db	0x00, 0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00
        18 00
   0C29 18 00 24 00 42      854 	.db	0x18, 0x00, 0x24, 0x00, 0x42
   0C2E FB 00               855 	.db	-5,0x00
   0C30 0B                  856 	.db	11
   0C31 42 00 24 00 18 00   857 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C39 24 00 42            858 	.db	0x24, 0x00, 0x42
   0C3C FB 00               859 	.db	-5,0x00
   0C3E 0B                  860 	.db	11
   0C3F 42 00 24 00 18 00   861 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C47 24 00 42            862 	.db	0x24, 0x00, 0x42
   0C4A FB 00               863 	.db	-5,0x00
   0C4C 0B                  864 	.db	11
   0C4D 42 00 24 00 18 00   865 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C55 24 00 42            866 	.db	0x24, 0x00, 0x42
   0C58 FB 00               867 	.db	-5,0x00
   0C5A 0B                  868 	.db	11
   0C5B 42 00 24 00 18 00   869 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C63 24 00 42            870 	.db	0x24, 0x00, 0x42
   0C66 FB 00               871 	.db	-5,0x00
   0C68 0B                  872 	.db	11
   0C69 42 00 24 00 18 00   873 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C71 24 00 42            874 	.db	0x24, 0x00, 0x42
   0C74 FB 00               875 	.db	-5,0x00
   0C76 0B                  876 	.db	11
   0C77 42 00 24 00 18 00   877 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C7F 24 00 42            878 	.db	0x24, 0x00, 0x42
   0C82 FB 00               879 	.db	-5,0x00
   0C84 0B                  880 	.db	11
   0C85 42 00 24 00 18 00   881 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C8D 24 00 42            882 	.db	0x24, 0x00, 0x42
   0C90 FB 00               883 	.db	-5,0x00
   0C92 0B                  884 	.db	11
   0C93 42 00 24 00 18 00   885 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C9B 24 00 42            886 	.db	0x24, 0x00, 0x42
   0C9E FB 00               887 	.db	-5,0x00
   0CA0 0B                  888 	.db	11
   0CA1 42 00 24 00 18 00   889 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA9 24 00 42            890 	.db	0x24, 0x00, 0x42
   0CAC EB 00               891 	.db	-21,0x00
   0CAE 0B                  892 	.db	11
   0CAF 42 00 24 00 18 00   893 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CB7 24 00 42            894 	.db	0x24, 0x00, 0x42
   0CBA FB 00               895 	.db	-5,0x00
   0CBC 0B                  896 	.db	11
   0CBD 42 00 24 00 18 00   897 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CC5 24 00 42            898 	.db	0x24, 0x00, 0x42
   0CC8 FB 00               899 	.db	-5,0x00
   0CCA 0B                  900 	.db	11
   0CCB 42 00 24 00 18 00   901 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CD3 24 00 42            902 	.db	0x24, 0x00, 0x42
   0CD6 FB 00               903 	.db	-5,0x00
   0CD8 0B                  904 	.db	11
   0CD9 42 00 24 00 18 00   905 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CE1 24 00 42            906 	.db	0x24, 0x00, 0x42
   0CE4 FB 00               907 	.db	-5,0x00
   0CE6 0B                  908 	.db	11
   0CE7 42 00 24 00 18 00   909 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CEF 24 00 42            910 	.db	0x24, 0x00, 0x42
   0CF2 FA 00               911 	.db	-6,0x00
   0CF4 7F                  912 	.db	127
   0CF5 38 00 44 00 44 00   913 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CFD 44 00 44 00 44 00   914 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0D05 78 00 44 00 44 00   915 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0D0D 44 00 44 00 78 00   916 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D15 1C 00 20 00 40 00   917 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0D1D 40 00 20 00 1C 00   918 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D25 78 00 44 00 44 00   919 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D2D 44 00 44 00 78 00   920 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D35 7C 00 40 00 40 00   921 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D3D 40 00 40 00 7C 00   922 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D45 7C 00 40 00 40 00   923 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D4D 40 00 40 00 40 00   924 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D55 18 00 20 00 40 00   925 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D5D 42 00 24 00 18 00   926 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D65 44 00 44 00 44 00   927 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D6D 44 00 44 00 44 00   928 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D74 7F                  929 	.db	127
   0D75 00 10 00 00 00 10   930 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D7D 00 10 00 10 00 10   931 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D85 00 3E 00 08 00 08   932 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D8D 00 08 00 48 00 30   933 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D95 00 44 00 48 00 50   934 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D9D 00 50 00 48 00 44   935 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0DA5 00 40 00 40 00 40   936 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0DAD 00 40 00 40 00 78   937 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0DB5 00 44 00 6C 00 54   938 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0DBD 00 44 00 44 00 44   939 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DC5 00 44 00 64 00 64   940 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DCD 00 54 00 4C 00 4C   941 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DD5 00 38 00 44 00 44   942 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DDD 00 44 00 44 00 38   943 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DE5 00 78 00 44 00 44   944 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DED 00 40 00 40 00 40   945 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DF4 7F                  946 	.db	127
   0DF5 00 00 38 00 44 00   947 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DFD 44 00 54 00 38 00   948 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0E05 00 00 78 00 44 00   949 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E0D 78 00 50 00 48 00   950 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0E15 00 00 38 00 40 00   951 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0E1D 38 00 04 00 04 00   952 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E25 00 00 7C 00 10 00   953 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E2D 10 00 10 00 10 00   954 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E35 00 00 44 00 44 00   955 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E3D 44 00 44 00 44 00   956 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E45 00 00 41 00 41 00   957 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E4D 49 00 2A 00 2A 00   958 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E55 00 00 44 00 44 00   959 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E5D 10 00 28 00 44 00   960 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E65 00 00 44 00 28 00   961 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E6D 10 00 10 00 10 00   962 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E74 7F                  963 	.db	127
   0E75 00 00 00 7C 00 04   964 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E7D 00 10 00 20 00 40   965 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E85 00 08 00 18 00 28   966 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E8D 00 08 00 08 00 08   967 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E95 00 00 00 38 00 44   968 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E9D 00 08 00 10 00 20   969 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0EA5 00 00 00 70 00 08   970 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0EAD 00 30 00 08 00 08   971 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0EB5 00 00 00 10 00 08   972 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0EBD 00 7E 00 04 00 08   973 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EC5 00 00 00 44 00 44   974 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0ECD 00 28 00 10 00 10   975 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0ED5 3C 3C 42 7E 81 FF   976 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EDD A1 FF 81 FF 81 FF   977 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EE5 3C 3C 42 7E 81 FF   978 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EED A1 FF 81 FF 81 FF   979 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0EF4 7F                  980 	.db	127
   0EF5 FF 3C 3C 42 7E 81   981 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EFD FF A1 FF 81 FF 81   982 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F05 FF 3C 3C 42 7E 81   983 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F0D FF A1 FF 81 FF 81   984 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F15 FF 3C 3C 42 7E 81   985 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F1D FF A1 FF 81 FF 81   986 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F25 FF 3C 3C 42 7E 81   987 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F2D FF A1 FF 81 FF 81   988 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F35 FF 3C 3C 42 7E 81   989 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F3D FF A1 FF 81 FF 81   990 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F45 FF 3C 3C 42 7E 81   991 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F4D FF A1 FF 81 FF 81   992 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F55 FF 3C 3C 42 7E 81   993 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F5D FF A1 FF 81 FF 81   994 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F65 FF 3C 3C 42 7E 81   995 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F6D FF A1 FF 81 FF 81   996 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F74 7F                  997 	.db	127
   0F75 81 FF 3C 3C 42 7E   998 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F7D 81 FF A1 FF 81 FF   999 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F85 81 FF 3C 3C 42 7E  1000 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F8D 81 FF A1 FF 81 FF  1001 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F95 81 FF 3C 3C 42 7E  1002 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F9D 81 FF A1 FF 81 FF  1003 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FA5 81 FF 3C 3C 42 7E  1004 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FAD 81 FF A1 FF 81 FF  1005 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FB5 81 FF 3C 3C 42 7E  1006 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FBD 81 FF A1 FF 81 FF  1007 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FC5 81 FF 3C 3C 42 7E  1008 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FCD 81 FF A1 FF 81 FF  1009 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FD5 81 FF 3C 3C 42 7E  1010 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FDD 81 FF A1 FF 81 FF  1011 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FE5 81 FF 3C 3C 42 7E  1012 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FED 81 FF A1 FF 81 FF  1013 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FF4 33                 1014 	.db	51
   0FF5 FF 81 FF 3C 3C 42  1015 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FFD FF 81 FF A1 FF 81  1016 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1005 FF 81 FF 3C 3C 42  1017 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   100D FF 81 FF A1 FF 81  1018 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1015 FF 81 FF 3C 3C 42  1019 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   101D FF 81 FF A1 FF 81  1020 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1025 FF 81 FF           1021 	.db	0xFF, 0x81, 0xFF
   1028 00                 1022 	.db	0
                           1023 ;	game.c 44
                           1024 ;	game.c 1126
                           1025 ;	genArrayInit
                           1026 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1029 21 F8 18           1027 	ld	hl,#_spritePalette
   102C CD 00 00           1028 	call	__initrleblock
   102F 08                 1029 	.db	8
   1030 DC 6B D2 3A 87 29  1030 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   1038 00                 1031 	.db	0
                           1032 ;--------------------------------------------------------
                           1033 ; Home
                           1034 ;--------------------------------------------------------
                           1035 	.area _HOME
                           1036 	.area _CODE
                           1037 ;--------------------------------------------------------
                           1038 ; code
                           1039 ;--------------------------------------------------------
                           1040 	.area _CODE
                           1041 ;	game.c 70
                           1042 ;	genLabel
                           1043 ;	genFunction
                           1044 ;	---------------------------------
                           1045 ; Function performantDelay
                           1046 ; ---------------------------------
   0000                    1047 ___performantDelay_start:
   0000                    1048 _performantDelay:
                           1049 	
                           1050 ;	game.c 72
                           1051 ;	genAssign
   0000 0E 00              1052 	ld	c,#0x00
                           1053 ;	genLabel
   0002                    1054 00101$:
                           1055 ;	genCmpEq
                           1056 ;	AOP_STK for 
                           1057 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1058 	lda	hl,2(sp)
   0004 7E                 1059 	ld	a,(hl)
   0005 B9                 1060 	cp	c
   0006 20 03              1061 	jr	nz,00109$
   0008 C3 15 00           1062 	jp	00105$
   000B                    1063 00109$:
                           1064 ;	game.c 73
                           1065 ;	genCall
                           1066 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1067 	push	bc
   000C CD 00 00           1068 	call	_wait_vbl_done
   000F E1                 1069 	pop	hl
   0010 4D                 1070 	ld	c,l
                           1071 ;	game.c 72
                           1072 ;	genPlus
                           1073 ;	genPlusIncr
                           1074 ; Removed redundent load
   0011 0C                 1075 	inc	c
                           1076 ;	genGoto
   0012 C3 02 00           1077 	jp	00101$
                           1078 ;	genLabel
   0015                    1079 00105$:
                           1080 ;	genEndFunction
                           1081 	
   0015 C9                 1082 	ret
   0016                    1083 ___performantDelay_end:
                           1084 ;	game.c 107
                           1085 ;	genLabel
                           1086 ;	genFunction
                           1087 ;	---------------------------------
                           1088 ; Function timers
                           1089 ; ---------------------------------
   0016                    1090 ___timers_start:
   0016                    1091 _timers:
                           1092 	
                           1093 ;	game.c 109
                           1094 ;	genCmpEq
                           1095 ;	AOP_HL for _input_timer
                           1096 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1097 	ld	hl,#_input_timer
   0019 7E                 1098 	ld	a,(hl)
   001A B7                 1099 	or	a,a
   001B CA 22 00           1100 	jp	z,00102$
   001E                    1101 00106$:
                           1102 ;	game.c 110
                           1103 ;	genMinus
                           1104 ;	AOP_HL for _input_timer
   001E 21 03 19           1105 	ld	hl,#_input_timer
   0021 35                 1106 	dec	(hl)
                           1107 ;	genLabel
   0022                    1108 00102$:
                           1109 ;	game.c 112
                           1110 ;	genPlus
                           1111 ;	AOP_HL for _timer
                           1112 ;	genPlusIncr
   0022 21 01 19           1113 	ld	hl,#_timer
   0025 34                 1114 	inc	(hl)
                           1115 ;	genLabel
   0026                    1116 00103$:
                           1117 ;	genEndFunction
                           1118 	
   0026 C9                 1119 	ret
   0027                    1120 ___timers_end:
                           1121 ;	game.c 116
                           1122 ;	genLabel
                           1123 ;	genFunction
                           1124 ;	---------------------------------
                           1125 ; Function main
                           1126 ; ---------------------------------
   0027                    1127 ___main_start:
   0027                    1128 _main:
                           1129 	
                           1130 ;	game.c 118
                           1131 ;	genCall
                           1132 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1133 	call	_init
                           1134 ;	game.c 119
                           1135 ;	genCall
                           1136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1137 	call	_map_init
                           1138 ;	game.c 121
                           1139 ;	genLabel
   002D                    1140 00101$:
                           1141 ;	genIfx
                           1142 ;	AOP_HL for _running
   002D AF                 1143 	xor	a,a
   002E 21 00 19           1144 	ld	hl,#_running
   0031 B6                 1145 	or	a,(hl)
   0032 CA 47 00           1146 	jp	z,00103$
                           1147 ;	game.c 123
                           1148 ;	genCall
                           1149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1150 	call	_timers
                           1151 ;	game.c 124
                           1152 ;	genCall
                           1153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1154 	call	_map_loop
                           1155 ;	game.c 125
                           1156 ;	genIpush
                           1157 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1158 	ld	a,#0x02
   003D F5                 1159 	push	af
   003E 33                 1160 	inc	sp
                           1161 ;	genCall
   003F CD 00 00           1162 	call	_performantDelay
   0042 E8 01              1163 	lda	sp,1(sp)
                           1164 ;	genGoto
   0044 C3 2D 00           1165 	jp	00101$
                           1166 ;	genLabel
   0047                    1167 00103$:
                           1168 ;	game.c 129
                           1169 ;	genIpush
                           1170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1171 	ld	hl,#__str_0
   004A E5                 1172 	push	hl
                           1173 ;	genCall
   004B CD 00 00           1174 	call	_printf
   004E E8 02              1175 	lda	sp,2(sp)
                           1176 ;	game.c 130
                           1177 ;	genLabel
   0050                    1178 00105$:
                           1179 ;	genGoto
   0050 C3 50 00           1180 	jp	00105$
                           1181 ;	genLabel
   0053                    1182 00107$:
                           1183 ;	genEndFunction
                           1184 	
   0053 C9                 1185 	ret
   0054                    1186 ___main_end:
   0054                    1187 __str_0:
   0054 54 68 65 20 65 6E  1188 	.ascii "The end"
        64
   005B 0A                 1189 	.db 0x0A
   005C 00                 1190 	.db 0x00
                           1191 ;	game.c 135
                           1192 ;	genLabel
                           1193 ;	genFunction
                           1194 ;	---------------------------------
                           1195 ; Function init
                           1196 ; ---------------------------------
   005D                    1197 ___init_start:
   005D                    1198 _init:
   005D E8 FD              1199 	lda	sp,-3(sp)
                           1200 ;	game.c 136
                           1201 ;	genAssign
                           1202 ;	AOP_HL for _current_map
   005F 21 04 19           1203 	ld	hl,#_current_map
   0062 36 C8              1204 	ld	(hl),#0xC8
                           1205 ;	game.c 137
                           1206 ;	genAssign
                           1207 ;	AOP_HL for _characters_available
   0064 21 02 19           1208 	ld	hl,#_characters_available
   0067 36 02              1209 	ld	(hl),#0x02
                           1210 ;	game.c 139
                           1211 ;	genCall
                           1212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1213 	call	_copy_map
                           1214 ;	game.c 140
                           1215 ;	genIpush
                           1216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1217 	ld	hl,#_sprites_park
   006F E5                 1218 	push	hl
                           1219 ;	genIpush
   0070 21 00 78           1220 	ld	hl,#0x7800
   0073 E5                 1221 	push	hl
                           1222 ;	genCall
   0074 CD 00 00           1223 	call	_set_bkg_data
   0077 E8 04              1224 	lda	sp,4(sp)
                           1225 ;	game.c 141
                           1226 ;	genIpush
                           1227 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1228 	ld	hl,#_map
   007C E5                 1229 	push	hl
                           1230 ;	genIpush
   007D 21 14 12           1231 	ld	hl,#0x1214
   0080 E5                 1232 	push	hl
                           1233 ;	genIpush
   0081 21 00 00           1234 	ld	hl,#0x0000
   0084 E5                 1235 	push	hl
                           1236 ;	genCall
   0085 CD 00 00           1237 	call	_set_bkg_tiles
   0088 E8 06              1238 	lda	sp,6(sp)
                           1239 ;	game.c 143
                           1240 ;	genIpush
                           1241 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1242 	ld	hl,#_Characters
   008D E5                 1243 	push	hl
                           1244 ;	genIpush
   008E 21 00 1E           1245 	ld	hl,#0x1E00
   0091 E5                 1246 	push	hl
                           1247 ;	genCall
   0092 CD 00 00           1248 	call	_set_sprite_data
   0095 E8 04              1249 	lda	sp,4(sp)
                           1250 ;	game.c 144
                           1251 ;	genIpush
                           1252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1253 	ld	hl,#_spritePalette
   009A E5                 1254 	push	hl
                           1255 ;	genIpush
   009B 21 00 04           1256 	ld	hl,#0x0400
   009E E5                 1257 	push	hl
                           1258 ;	genCall
   009F CD 00 00           1259 	call	_set_sprite_palette
   00A2 E8 04              1260 	lda	sp,4(sp)
                           1261 ;	game.c 148
                           1262 ;	genIpush
                           1263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1264 	ld	hl,#_spritePalette
   00A7 E5                 1265 	push	hl
                           1266 ;	genIpush
   00A8 21 00 03           1267 	ld	hl,#0x0300
   00AB E5                 1268 	push	hl
                           1269 ;	genCall
   00AC CD 00 00           1270 	call	_set_bkg_palette
   00AF E8 04              1271 	lda	sp,4(sp)
                           1272 ;	game.c 149
                           1273 ;	genIpush
                           1274 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1275 	ld	hl,#0x0000
   00B4 E5                 1276 	push	hl
                           1277 ;	genCall
   00B5 CD 00 00           1278 	call	_set_sprite_prop
   00B8 E8 02              1279 	lda	sp,2(sp)
                           1280 ;	game.c 154
                           1281 ;	genAssign
   00BA 01 47 FF           1282 	ld	bc,#0xFF47
                           1283 ;	genAssign (pointer)
   00BD 3E E4              1284 	ld	a,#0xE4
   00BF 02                 1285 	ld	(bc),a
                           1286 ;	game.c 156
                           1287 ;	genAssign
   00C0 01 40 FF           1288 	ld	bc,#0xFF40
                           1289 ;	genAssign
                           1290 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1291 	lda	hl,1(sp)
   00C5 36 40              1292 	ld	(hl),#0x40
   00C7 23                 1293 	inc	hl
   00C8 36 FF              1294 	ld	(hl),#0xFF
                           1295 ;	genPointerGet
                           1296 ;	AOP_STK for _init_sloc0_1_0
                           1297 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1298 	dec	hl
   00CB 5E                 1299 	ld	e,(hl)
   00CC 23                 1300 	inc	hl
   00CD 56                 1301 	ld	d,(hl)
   00CE 1A                 1302 	ld	a,(de)
   00CF 2B                 1303 	dec	hl
   00D0 2B                 1304 	dec	hl
                           1305 ;	genOr
                           1306 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1307 	ld      (hl),a
   00D2 7F                 1308 	ld      a,a
   00D3 F6 80              1309 	or	a,#0x80
                           1310 ;	genAssign (pointer)
   00D5 02                 1311 	ld	(bc),a
                           1312 ;	game.c 158
                           1313 ;	genAssign
   00D6 01 40 FF           1314 	ld	bc,#0xFF40
                           1315 ;	genAssign
                           1316 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1317 	inc	hl
   00DA 36 40              1318 	ld	(hl),#0x40
   00DC 23                 1319 	inc	hl
   00DD 36 FF              1320 	ld	(hl),#0xFF
                           1321 ;	genPointerGet
                           1322 ;	AOP_STK for _init_sloc0_1_0
                           1323 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1324 	dec	hl
   00E0 5E                 1325 	ld	e,(hl)
   00E1 23                 1326 	inc	hl
   00E2 56                 1327 	ld	d,(hl)
   00E3 1A                 1328 	ld	a,(de)
   00E4 2B                 1329 	dec	hl
   00E5 2B                 1330 	dec	hl
                           1331 ;	genOr
                           1332 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1333 	ld      (hl),a
   00E7 7F                 1334 	ld      a,a
   00E8 F6 01              1335 	or	a,#0x01
                           1336 ;	genAssign (pointer)
   00EA 02                 1337 	ld	(bc),a
                           1338 ;	game.c 160
                           1339 ;	genAssign
   00EB 01 40 FF           1340 	ld	bc,#0xFF40
                           1341 ;	genAssign
                           1342 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1343 	inc	hl
   00EF 36 40              1344 	ld	(hl),#0x40
   00F1 23                 1345 	inc	hl
   00F2 36 FF              1346 	ld	(hl),#0xFF
                           1347 ;	genPointerGet
                           1348 ;	AOP_STK for _init_sloc0_1_0
                           1349 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1350 	dec	hl
   00F5 5E                 1351 	ld	e,(hl)
   00F6 23                 1352 	inc	hl
   00F7 56                 1353 	ld	d,(hl)
   00F8 1A                 1354 	ld	a,(de)
   00F9 2B                 1355 	dec	hl
   00FA 2B                 1356 	dec	hl
                           1357 ;	genOr
                           1358 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1359 	ld      (hl),a
   00FC 7F                 1360 	ld      a,a
   00FD F6 02              1361 	or	a,#0x02
                           1362 ;	genAssign (pointer)
   00FF 02                 1363 	ld	(bc),a
                           1364 ;	game.c 162
                           1365 ;	genAssign
                           1366 ;	AOP_HL for _input_timer
   0100 21 03 19           1367 	ld	hl,#_input_timer
   0103 36 00              1368 	ld	(hl),#0x00
                           1369 ;	game.c 163
                           1370 ;	genAssign
                           1371 ;	AOP_HL for _running
   0105 21 00 19           1372 	ld	hl,#_running
   0108 36 01              1373 	ld	(hl),#0x01
                           1374 ;	game.c 164
                           1375 ;	genAssign
                           1376 ;	AOP_HL for _timer
   010A 21 01 19           1377 	ld	hl,#_timer
   010D 36 01              1378 	ld	(hl),#0x01
                           1379 ;	game.c 165
                           1380 ;	genAddrOf
                           1381 ;	AOP_HL for _player
   010F 11 6D 1A           1382 	ld	de,#_bunny
   0112 21 B3 1A           1383 	ld	hl,#_player
   0115 73                 1384 	ld	(hl),e
   0116 23                 1385 	inc	hl
   0117 72                 1386 	ld	(hl),d
                           1387 ;	genLabel
   0118                    1388 00101$:
                           1389 ;	genEndFunction
   0118 E8 03              1390 	lda	sp,3(sp)
   011A C9                 1391 	ret
   011B                    1392 ___init_end:
                           1393 ;	game.c 169
                           1394 ;	genLabel
                           1395 ;	genFunction
                           1396 ;	---------------------------------
                           1397 ; Function map_water
                           1398 ; ---------------------------------
   011B                    1399 ___map_water_start:
   011B                    1400 _map_water:
   011B E8 DC              1401 	lda	sp,-36(sp)
                           1402 ;	game.c 170
                           1403 ;	genAddrOf
   011D F8 14              1404 	lda	hl,20(sp)
   011F 4D                 1405 	ld	c,l
   0120 44                 1406 	ld	b,h
                           1407 ;	genAssign
                           1408 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1409 	lda	hl,2(sp)
   0123 71                 1410 	ld	(hl),c
   0124 23                 1411 	inc	hl
   0125 70                 1412 	ld	(hl),b
                           1413 ;	genArrayInit
                           1414 ;	AOP_STK for _map_water_sloc0_1_0
                           1415 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1416 	push	bc
   0127 2B                 1417 	dec	hl
   0128 2A                 1418 	ld	a,(hl+)
   0129 66                 1419 	ld	h,(hl)
   012A 6F                 1420 	ld	l,a
   012B CD 00 00           1421 	call	__initrleblock
   012E 10                 1422 	.db	16
   012F FF 00 DD 00 AA 00  1423 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1424 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1425 	.db	0
   0140 C1                 1426 	pop	bc
                           1427 ;	game.c 176
                           1428 ;	genAddrOf
                           1429 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1430 	lda	hl,4(sp)
   0143 7D                 1431 	ld	a,l
   0144 54                 1432 	ld	d,h
   0145 F8 02              1433 	lda	hl,2(sp)
   0147 22                 1434 	ld	(hl+),a
   0148 72                 1435 	ld	(hl),d
                           1436 ;	genAssign
                           1437 ;	AOP_STK for _map_water_sloc0_1_0
                           1438 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1439 	dec	hl
   014A 2A                 1440 	ld	a,(hl+)
   014B 5E                 1441 	ld	e,(hl)
   014C F8 00              1442 	lda	hl,0(sp)
   014E 22                 1443 	ld	(hl+),a
   014F 73                 1444 	ld	(hl),e
                           1445 ;	genArrayInit
                           1446 ;	AOP_STK for _map_water_sloc1_1_0
                           1447 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1448 	push	bc
   0151 2B                 1449 	dec	hl
   0152 2A                 1450 	ld	a,(hl+)
   0153 66                 1451 	ld	h,(hl)
   0154 6F                 1452 	ld	l,a
   0155 CD 00 00           1453 	call	__initrleblock
   0158 10                 1454 	.db	16
   0159 FF 00 BB 00 55 00  1455 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1456 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1457 	.db	0
   016A C1                 1458 	pop	bc
                           1459 ;	game.c 182
                           1460 ;	genIpush
                           1461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1462 	push	bc
   016C 3E 20              1463 	ld	a,#0x20
   016E F5                 1464 	push	af
   016F 33                 1465 	inc	sp
                           1466 ;	genIpush
                           1467 ;	AOP_HL for _timer
   0170 21 01 19           1468 	ld	hl,#_timer
   0173 7E                 1469 	ld	a,(hl)
   0174 F5                 1470 	push	af
   0175 33                 1471 	inc	sp
                           1472 ;	genCall
   0176 CD 00 00           1473 	call	__moduchar_rrx_s
                           1474 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1475 	lda	hl,4(sp)
   017B 73                 1476 	ld	(hl),e
   017C E8 02              1477 	lda	sp,2(sp)
   017E C1                 1478 	pop	bc
                           1479 ;	genCmpEq
                           1480 ;	AOP_STK for _map_water_sloc1_1_0
                           1481 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1482 	lda	hl,0(sp)
   0181 7E                 1483 	ld	a,(hl)
   0182 B7                 1484 	or	a,a
   0183 C2 C7 01           1485 	jp	nz,00106$
   0186 18 03              1486 	jr	00111$
   0188                    1487 00110$:
   0188 C3 C7 01           1488 	jp	00106$
   018B                    1489 00111$:
                           1490 ;	game.c 183
                           1491 ;	genIpush
                           1492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1493 	push	bc
   018C 3E 40              1494 	ld	a,#0x40
   018E F5                 1495 	push	af
   018F 33                 1496 	inc	sp
                           1497 ;	genIpush
                           1498 ;	AOP_HL for _timer
   0190 21 01 19           1499 	ld	hl,#_timer
   0193 7E                 1500 	ld	a,(hl)
   0194 F5                 1501 	push	af
   0195 33                 1502 	inc	sp
                           1503 ;	genCall
   0196 CD 00 00           1504 	call	__moduchar_rrx_s
                           1505 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1506 	lda	hl,4(sp)
   019B 73                 1507 	ld	(hl),e
   019C E8 02              1508 	lda	sp,2(sp)
   019E C1                 1509 	pop	bc
                           1510 ;	genCmpEq
                           1511 ;	AOP_STK for _map_water_sloc1_1_0
                           1512 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1513 	lda	hl,0(sp)
   01A1 7E                 1514 	ld	a,(hl)
   01A2 B7                 1515 	or	a,a
   01A3 C2 B8 01           1516 	jp	nz,00102$
   01A6 18 03              1517 	jr	00113$
   01A8                    1518 00112$:
   01A8 C3 B8 01           1519 	jp	00102$
   01AB                    1520 00113$:
                           1521 ;	game.c 184
                           1522 ;	genIpush
                           1523 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1524 	push	bc
                           1525 ;	genIpush
   01AC 21 0B 01           1526 	ld	hl,#0x010B
   01AF E5                 1527 	push	hl
                           1528 ;	genCall
   01B0 CD 00 00           1529 	call	_set_bkg_data
   01B3 E8 04              1530 	lda	sp,4(sp)
                           1531 ;	genGoto
   01B5 C3 C7 01           1532 	jp	00106$
                           1533 ;	genLabel
   01B8                    1534 00102$:
                           1535 ;	game.c 188
                           1536 ;	genIpush
                           1537 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1538 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1539 	lda	hl,2(sp)
   01BA 2A                 1540 	ld	a,(hl+)
   01BB 66                 1541 	ld	h,(hl)
   01BC 6F                 1542 	ld	l,a
   01BD E5                 1543 	push	hl
                           1544 ;	genIpush
   01BE 21 0B 01           1545 	ld	hl,#0x010B
   01C1 E5                 1546 	push	hl
                           1547 ;	genCall
   01C2 CD 00 00           1548 	call	_set_bkg_data
   01C5 E8 04              1549 	lda	sp,4(sp)
                           1550 ;	genLabel
   01C7                    1551 00106$:
                           1552 ;	genEndFunction
   01C7 E8 24              1553 	lda	sp,36(sp)
   01C9 C9                 1554 	ret
   01CA                    1555 ___map_water_end:
                           1556 ;	game.c 233
                           1557 ;	genLabel
                           1558 ;	genFunction
                           1559 ;	---------------------------------
                           1560 ; Function change_char
                           1561 ; ---------------------------------
   01CA                    1562 ___change_char_start:
   01CA                    1563 _change_char:
                           1564 	
                           1565 ;	game.c 235
                           1566 ;	genCmpEq
                           1567 ;	AOP_HL for _characters_available
                           1568 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1569 	ld	hl,#_characters_available
   01CD 7E                 1570 	ld	a,(hl)
   01CE FE 01              1571 	cp	a,#0x01
   01D0 C2 DE 01           1572 	jp	nz,00102$
   01D3 18 03              1573 	jr	00135$
   01D5                    1574 00134$:
   01D5 C3 DE 01           1575 	jp	00102$
   01D8                    1576 00135$:
                           1577 ;	game.c 236
                           1578 ;	genRet
   01D8 11 00 00           1579 	ld	de,#0x0000
   01DB C3 EE 02           1580 	jp	00121$
                           1581 ;	genLabel
   01DE                    1582 00102$:
                           1583 ;	game.c 239
                           1584 ;	genAssign
                           1585 ;	AOP_HL for _player
   01DE 21 B3 1A           1586 	ld	hl,#_player
   01E1 4E                 1587 	ld	c,(hl)
   01E2 23                 1588 	inc	hl
   01E3 46                 1589 	ld	b,(hl)
                           1590 ;	genPlus
                           1591 ;	genPlusIncr
   01E4 21 08 00           1592 	ld	hl,#0x0008
   01E7 09                 1593 	add	hl,bc
                           1594 ;	genAssign (pointer)
   01E8 36 00              1595 	ld	(hl),#0x00
                           1596 ;	game.c 241
                           1597 ;	genCmpEq
                           1598 ;	AOP_HL for _characters_available
                           1599 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1600 	ld	hl,#_characters_available
   01ED 7E                 1601 	ld	a,(hl)
   01EE FE 02              1602 	cp	a,#0x02
   01F0 C2 2B 02           1603 	jp	nz,00107$
   01F3 18 03              1604 	jr	00137$
   01F5                    1605 00136$:
   01F5 C3 2B 02           1606 	jp	00107$
   01F8                    1607 00137$:
                           1608 ;	game.c 242
                           1609 ;	genAssign
                           1610 ;	AOP_HL for _player
   01F8 21 B3 1A           1611 	ld	hl,#_player
   01FB 4E                 1612 	ld	c,(hl)
   01FC 23                 1613 	inc	hl
   01FD 46                 1614 	ld	b,(hl)
                           1615 ;	genPlus
                           1616 ;	genPlusIncr
                           1617 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1618 	ld	a,c
   01FF C6 0B              1619 	add	a,#0x0B
   0201 4F                 1620 	ld	c,a
   0202 78                 1621 	ld	a,b
   0203 CE 00              1622 	adc	a,#0x00
   0205 47                 1623 	ld	b,a
                           1624 ;	genPointerGet
   0206 0A                 1625 	ld	a,(bc)
                           1626 ;	genCmpEq
                           1627 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1628 	ld	c,a
   0208 FE 01              1629 	cp	a,#0x01
   020A CA 16 02           1630 	jp	z,00103$
   020D                    1631 00138$:
                           1632 ;	genCmpEq
                           1633 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1634 	ld	a,c
   020E FE 02              1635 	cp	a,#0x02
   0210 CA 22 02           1636 	jp	z,00104$
   0213                    1637 00139$:
                           1638 ;	genGoto
   0213 C3 2B 02           1639 	jp	00107$
                           1640 ;	game.c 244
                           1641 ;	genLabel
   0216                    1642 00103$:
                           1643 ;	genAddrOf
                           1644 ;	AOP_HL for _player
   0216 11 7B 1A           1645 	ld	de,#_dog1
   0219 21 B3 1A           1646 	ld	hl,#_player
   021C 73                 1647 	ld	(hl),e
   021D 23                 1648 	inc	hl
   021E 72                 1649 	ld	(hl),d
                           1650 ;	game.c 245
                           1651 ;	genGoto
   021F C3 2B 02           1652 	jp	00107$
                           1653 ;	game.c 247
                           1654 ;	genLabel
   0222                    1655 00104$:
                           1656 ;	genAddrOf
                           1657 ;	AOP_HL for _player
   0222 11 6D 1A           1658 	ld	de,#_bunny
   0225 21 B3 1A           1659 	ld	hl,#_player
   0228 73                 1660 	ld	(hl),e
   0229 23                 1661 	inc	hl
   022A 72                 1662 	ld	(hl),d
                           1663 ;	game.c 249
                           1664 ;	genLabel
   022B                    1665 00107$:
                           1666 ;	game.c 251
                           1667 ;	genCmpEq
                           1668 ;	AOP_HL for _characters_available
                           1669 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1670 	ld	hl,#_characters_available
   022E 7E                 1671 	ld	a,(hl)
   022F FE 03              1672 	cp	a,#0x03
   0231 C2 7E 02           1673 	jp	nz,00113$
   0234 18 03              1674 	jr	00141$
   0236                    1675 00140$:
   0236 C3 7E 02           1676 	jp	00113$
   0239                    1677 00141$:
                           1678 ;	game.c 252
                           1679 ;	genAssign
                           1680 ;	AOP_HL for _player
   0239 21 B3 1A           1681 	ld	hl,#_player
   023C 4E                 1682 	ld	c,(hl)
   023D 23                 1683 	inc	hl
   023E 46                 1684 	ld	b,(hl)
                           1685 ;	genPlus
                           1686 ;	genPlusIncr
                           1687 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1688 	ld	a,c
   0240 C6 0B              1689 	add	a,#0x0B
   0242 4F                 1690 	ld	c,a
   0243 78                 1691 	ld	a,b
   0244 CE 00              1692 	adc	a,#0x00
   0246 47                 1693 	ld	b,a
                           1694 ;	genPointerGet
   0247 0A                 1695 	ld	a,(bc)
                           1696 ;	genCmpEq
                           1697 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1698 	ld	c,a
   0249 FE 01              1699 	cp	a,#0x01
   024B CA 5D 02           1700 	jp	z,00108$
   024E                    1701 00142$:
                           1702 ;	genCmpEq
                           1703 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1704 	ld	a,c
   024F FE 02              1705 	cp	a,#0x02
   0251 CA 69 02           1706 	jp	z,00109$
   0254                    1707 00143$:
                           1708 ;	genCmpEq
                           1709 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1710 	ld	a,c
   0255 FE 03              1711 	cp	a,#0x03
   0257 CA 75 02           1712 	jp	z,00110$
   025A                    1713 00144$:
                           1714 ;	genGoto
   025A C3 7E 02           1715 	jp	00113$
                           1716 ;	game.c 254
                           1717 ;	genLabel
   025D                    1718 00108$:
                           1719 ;	genAddrOf
                           1720 ;	AOP_HL for _player
   025D 11 7B 1A           1721 	ld	de,#_dog1
   0260 21 B3 1A           1722 	ld	hl,#_player
   0263 73                 1723 	ld	(hl),e
   0264 23                 1724 	inc	hl
   0265 72                 1725 	ld	(hl),d
                           1726 ;	game.c 255
                           1727 ;	genGoto
   0266 C3 7E 02           1728 	jp	00113$
                           1729 ;	game.c 257
                           1730 ;	genLabel
   0269                    1731 00109$:
                           1732 ;	genAddrOf
                           1733 ;	AOP_HL for _player
   0269 11 89 1A           1734 	ld	de,#_dog2
   026C 21 B3 1A           1735 	ld	hl,#_player
   026F 73                 1736 	ld	(hl),e
   0270 23                 1737 	inc	hl
   0271 72                 1738 	ld	(hl),d
                           1739 ;	game.c 258
                           1740 ;	genGoto
   0272 C3 7E 02           1741 	jp	00113$
                           1742 ;	game.c 260
                           1743 ;	genLabel
   0275                    1744 00110$:
                           1745 ;	genAddrOf
                           1746 ;	AOP_HL for _player
   0275 11 6D 1A           1747 	ld	de,#_bunny
   0278 21 B3 1A           1748 	ld	hl,#_player
   027B 73                 1749 	ld	(hl),e
   027C 23                 1750 	inc	hl
   027D 72                 1751 	ld	(hl),d
                           1752 ;	game.c 262
                           1753 ;	genLabel
   027E                    1754 00113$:
                           1755 ;	game.c 264
                           1756 ;	genCmpEq
                           1757 ;	AOP_HL for _characters_available
                           1758 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1759 	ld	hl,#_characters_available
   0281 7E                 1760 	ld	a,(hl)
   0282 FE 04              1761 	cp	a,#0x04
   0284 C2 EB 02           1762 	jp	nz,00120$
   0287 18 03              1763 	jr	00146$
   0289                    1764 00145$:
   0289 C3 EB 02           1765 	jp	00120$
   028C                    1766 00146$:
                           1767 ;	game.c 265
                           1768 ;	genAssign
                           1769 ;	AOP_HL for _player
   028C 21 B3 1A           1770 	ld	hl,#_player
   028F 4E                 1771 	ld	c,(hl)
   0290 23                 1772 	inc	hl
   0291 46                 1773 	ld	b,(hl)
                           1774 ;	genPlus
                           1775 ;	genPlusIncr
                           1776 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1777 	ld	a,c
   0293 C6 0B              1778 	add	a,#0x0B
   0295 4F                 1779 	ld	c,a
   0296 78                 1780 	ld	a,b
   0297 CE 00              1781 	adc	a,#0x00
   0299 47                 1782 	ld	b,a
                           1783 ;	genPointerGet
   029A 0A                 1784 	ld	a,(bc)
                           1785 ;	genCmpLt
   029B 4F                 1786 	ld	c,a
   029C FE 01              1787 	cp	#0x01
   029E DA EB 02           1788 	jp	c,00120$
                           1789 ;	genCmpGt
   02A1 3E 04              1790 	ld	a,#0x04
   02A3 91                 1791 	sub	a,c
   02A4 DA EB 02           1792 	jp	c,00120$
                           1793 ;	genMinus
   02A7 0D                 1794 	dec	c
                           1795 ;	genJumpTab
   02A8 59                 1796 	ld	e,c
   02A9 16 00              1797 	ld	d,#0x00
   02AB 21 B2 02           1798 	ld	hl,#00147$
   02AE 19                 1799 	add	hl,de
   02AF 19                 1800 	add	hl,de
   02B0 19                 1801 	add	hl,de
   02B1 E9                 1802 	jp	(hl)
   02B2                    1803 00147$:
   02B2 C3 BE 02           1804 	jp	00114$
   02B5 C3 CA 02           1805 	jp	00115$
   02B8 C3 D6 02           1806 	jp	00116$
   02BB C3 E2 02           1807 	jp	00117$
                           1808 ;	game.c 267
                           1809 ;	genLabel
   02BE                    1810 00114$:
                           1811 ;	genAddrOf
                           1812 ;	AOP_HL for _player
   02BE 11 7B 1A           1813 	ld	de,#_dog1
   02C1 21 B3 1A           1814 	ld	hl,#_player
   02C4 73                 1815 	ld	(hl),e
   02C5 23                 1816 	inc	hl
   02C6 72                 1817 	ld	(hl),d
                           1818 ;	game.c 268
                           1819 ;	genGoto
   02C7 C3 EB 02           1820 	jp	00120$
                           1821 ;	game.c 270
                           1822 ;	genLabel
   02CA                    1823 00115$:
                           1824 ;	genAddrOf
                           1825 ;	AOP_HL for _player
   02CA 11 89 1A           1826 	ld	de,#_dog2
   02CD 21 B3 1A           1827 	ld	hl,#_player
   02D0 73                 1828 	ld	(hl),e
   02D1 23                 1829 	inc	hl
   02D2 72                 1830 	ld	(hl),d
                           1831 ;	game.c 271
                           1832 ;	genGoto
   02D3 C3 EB 02           1833 	jp	00120$
                           1834 ;	game.c 273
                           1835 ;	genLabel
   02D6                    1836 00116$:
                           1837 ;	genAddrOf
                           1838 ;	AOP_HL for _player
   02D6 11 97 1A           1839 	ld	de,#_cat
   02D9 21 B3 1A           1840 	ld	hl,#_player
   02DC 73                 1841 	ld	(hl),e
   02DD 23                 1842 	inc	hl
   02DE 72                 1843 	ld	(hl),d
                           1844 ;	game.c 274
                           1845 ;	genGoto
   02DF C3 EB 02           1846 	jp	00120$
                           1847 ;	game.c 276
                           1848 ;	genLabel
   02E2                    1849 00117$:
                           1850 ;	genAddrOf
                           1851 ;	AOP_HL for _player
   02E2 11 6D 1A           1852 	ld	de,#_bunny
   02E5 21 B3 1A           1853 	ld	hl,#_player
   02E8 73                 1854 	ld	(hl),e
   02E9 23                 1855 	inc	hl
   02EA 72                 1856 	ld	(hl),d
                           1857 ;	game.c 278
                           1858 ;	genLabel
   02EB                    1859 00120$:
                           1860 ;	game.c 283
                           1861 ;	genCall
                           1862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD B3 10           1863 	call	_rotate_player
                           1864 ;	genLabel
   02EE                    1865 00121$:
                           1866 ;	genEndFunction
                           1867 	
   02EE C9                 1868 	ret
   02EF                    1869 ___change_char_end:
                           1870 ;	game.c 287
                           1871 ;	genLabel
                           1872 ;	genFunction
                           1873 ;	---------------------------------
                           1874 ; Function map_loop
                           1875 ; ---------------------------------
   02EF                    1876 ___map_loop_start:
   02EF                    1877 _map_loop:
                           1878 	
                           1879 ;	game.c 289
                           1880 ;	genIpush
                           1881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 B3 1A           1882 	ld	hl,#_player
   02F2 E5                 1883 	push	hl
                           1884 ;	genCall
   02F3 CD CC 07           1885 	call	_is_ded
   02F6 42                 1886 	ld	b,d
   02F7 4B                 1887 	ld	c,e
   02F8 E8 02              1888 	lda	sp,2(sp)
                           1889 ;	genIfx
   02FA 79                 1890 	ld	a,c
   02FB B0                 1891 	or	a,b
   02FC CA 02 03           1892 	jp	z,00102$
                           1893 ;	game.c 290
                           1894 ;	genCall
                           1895 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1896 	call	_map_init
                           1897 ;	genLabel
   0302                    1898 00102$:
                           1899 ;	game.c 292
                           1900 ;	genIpush
                           1901 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 B3 1A           1902 	ld	hl,#_player
   0305 E5                 1903 	push	hl
                           1904 ;	genCall
   0306 CD E2 05           1905 	call	_got_door
   0309 E8 02              1906 	lda	sp,2(sp)
                           1907 ;	game.c 294
                           1908 ;	genIpush
                           1909 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 B3 1A           1910 	ld	hl,#_player
   030E E5                 1911 	push	hl
                           1912 ;	genCall
   030F CD 35 05           1913 	call	_got_key
   0312 E8 02              1914 	lda	sp,2(sp)
                           1915 ;	game.c 295
                           1916 ;	genCall
                           1917 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1918 	call	_map_water
                           1919 ;	game.c 298
                           1920 ;	genIpush
                           1921 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 B3 1A           1922 	ld	hl,#_player
   031A E5                 1923 	push	hl
                           1924 ;	genCall
   031B CD BB 0D           1925 	call	_player_input
   031E E8 02              1926 	lda	sp,2(sp)
                           1927 ;	game.c 301
                           1928 ;	genIpush
                           1929 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1930 	ld	hl,#_bunny
   0323 E5                 1931 	push	hl
                           1932 ;	genCall
   0324 CD 59 12           1933 	call	_move_character
   0327 E8 02              1934 	lda	sp,2(sp)
                           1935 ;	game.c 302
                           1936 ;	genIpush
                           1937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7B 1A           1938 	ld	hl,#_dog1
   032C E5                 1939 	push	hl
                           1940 ;	genCall
   032D CD 59 12           1941 	call	_move_character
   0330 E8 02              1942 	lda	sp,2(sp)
                           1943 ;	game.c 303
                           1944 ;	genIpush
                           1945 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 89 1A           1946 	ld	hl,#_dog2
   0335 E5                 1947 	push	hl
                           1948 ;	genCall
   0336 CD 59 12           1949 	call	_move_character
   0339 E8 02              1950 	lda	sp,2(sp)
                           1951 ;	game.c 304
                           1952 ;	genIpush
                           1953 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 97 1A           1954 	ld	hl,#_cat
   033E E5                 1955 	push	hl
                           1956 ;	genCall
   033F CD 59 12           1957 	call	_move_character
   0342 E8 02              1958 	lda	sp,2(sp)
                           1959 ;	genLabel
   0344                    1960 00103$:
                           1961 ;	genEndFunction
                           1962 	
   0344 C9                 1963 	ret
   0345                    1964 ___map_loop_end:
                           1965 ;	game.c 309
                           1966 ;	genLabel
                           1967 ;	genFunction
                           1968 ;	---------------------------------
                           1969 ; Function helper_copy_map
                           1970 ; ---------------------------------
   0345                    1971 ___helper_copy_map_start:
   0345                    1972 _helper_copy_map:
   0345 E8 FC              1973 	lda	sp,-4(sp)
                           1974 ;	game.c 311
                           1975 ;	genAssign
   0347 01 00 00           1976 	ld	bc,#0x0000
                           1977 ;	genLabel
   034A                    1978 00101$:
                           1979 ;	genCmpLt
   034A 79                 1980 	ld	a,c
   034B D6 68              1981 	sub	a,#0x68
   034D 78                 1982 	ld	a,b
   034E DE 01              1983 	sbc	a,#0x01
   0350 D2 74 03           1984 	jp	nc,00105$
                           1985 ;	game.c 312
                           1986 ;	genPlus
                           1987 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1988 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1989 	ld	hl,#_map
   0356 09                 1990 	add	hl,bc
   0357 7D                 1991 	ld	a,l
   0358 54                 1992 	ld	d,h
   0359 F8 02              1993 	lda	hl,2(sp)
   035B 22                 1994 	ld	(hl+),a
   035C 72                 1995 	ld	(hl),d
                           1996 ;	genPlus
                           1997 ;	AOP_STK for 
                           1998 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           1999 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              2000 	lda	hl,6(sp)
   035F 2A                 2001 	ld	a,(hl+)
   0360 66                 2002 	ld	h,(hl)
   0361 6F                 2003 	ld	l,a
   0362 09                 2004 	add	hl,bc
   0363 7D                 2005 	ld	a,l
   0364 54                 2006 	ld	d,h
   0365 F8 00              2007 	lda	hl,0(sp)
                           2008 ;	genPointerGet
                           2009 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2010 	ld	(hl+),a
   0368 72                 2011 	ld	(hl),d
   0369 5F                 2012 	ld	e,a
   036A 1A                 2013 	ld	a,(de)
                           2014 ;	genAssign (pointer)
                           2015 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2016 	inc	hl
   036C 5E                 2017 	ld	e,(hl)
   036D 23                 2018 	inc	hl
   036E 56                 2019 	ld	d,(hl)
   036F 12                 2020 	ld	(de),a
                           2021 ;	game.c 311
                           2022 ;	genPlus
                           2023 ;	genPlusIncr
   0370 03                 2024 	inc	bc
                           2025 ;	genGoto
   0371 C3 4A 03           2026 	jp	00101$
                           2027 ;	genLabel
   0374                    2028 00105$:
                           2029 ;	genEndFunction
   0374 E8 04              2030 	lda	sp,4(sp)
   0376 C9                 2031 	ret
   0377                    2032 ___helper_copy_map_end:
                           2033 ;	game.c 316
                           2034 ;	genLabel
                           2035 ;	genFunction
                           2036 ;	---------------------------------
                           2037 ; Function copy_map
                           2038 ; ---------------------------------
   0377                    2039 ___copy_map_start:
   0377                    2040 _copy_map:
                           2041 	
                           2042 ;	game.c 317
                           2043 ;	genCmpLt
                           2044 ;	AOP_HL for _current_map
   0377 21 04 19           2045 	ld	hl,#_current_map
   037A 7E                 2046 	ld	a,(hl)
   037B FE 01              2047 	cp	#0x01
   037D DA 2A 04           2048 	jp	c,00111$
                           2049 ;	genCmpGt
                           2050 ;	AOP_HL for _current_map
   0380 3E 0A              2051 	ld	a,#0x0A
   0382 96                 2052 	sub	a,(hl)
   0383 DA 2A 04           2053 	jp	c,00111$
                           2054 ;	genMinus
                           2055 ;	AOP_HL for _current_map
   0386 7E                 2056 	ld	a,(hl)
   0387 C6 FF              2057 	add	a,#0xFF
   0389 4F                 2058 	ld	c,a
                           2059 ;	genJumpTab
   038A 59                 2060 	ld	e,c
   038B 16 00              2061 	ld	d,#0x00
   038D 21 94 03           2062 	ld	hl,#00117$
   0390 19                 2063 	add	hl,de
   0391 19                 2064 	add	hl,de
   0392 19                 2065 	add	hl,de
   0393 E9                 2066 	jp	(hl)
   0394                    2067 00117$:
   0394 C3 B2 03           2068 	jp	00101$
   0397 C3 BE 03           2069 	jp	00102$
   039A C3 CA 03           2070 	jp	00103$
   039D C3 D6 03           2071 	jp	00104$
   03A0 C3 E2 03           2072 	jp	00105$
   03A3 C3 EE 03           2073 	jp	00106$
   03A6 C3 FA 03           2074 	jp	00107$
   03A9 C3 06 04           2075 	jp	00108$
   03AC C3 12 04           2076 	jp	00109$
   03AF C3 1E 04           2077 	jp	00110$
                           2078 ;	game.c 319
                           2079 ;	genLabel
   03B2                    2080 00101$:
                           2081 ;	genIpush
                           2082 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2083 	ld	hl,#_Map1
   03B5 E5                 2084 	push	hl
                           2085 ;	genCall
   03B6 CD 45 03           2086 	call	_helper_copy_map
   03B9 E8 02              2087 	lda	sp,2(sp)
                           2088 ;	game.c 320
                           2089 ;	genGoto
   03BB C3 33 04           2090 	jp	00113$
                           2091 ;	game.c 322
                           2092 ;	genLabel
   03BE                    2093 00102$:
                           2094 ;	genIpush
                           2095 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2096 	ld	hl,#_Map2
   03C1 E5                 2097 	push	hl
                           2098 ;	genCall
   03C2 CD 45 03           2099 	call	_helper_copy_map
   03C5 E8 02              2100 	lda	sp,2(sp)
                           2101 ;	game.c 323
                           2102 ;	genGoto
   03C7 C3 33 04           2103 	jp	00113$
                           2104 ;	game.c 325
                           2105 ;	genLabel
   03CA                    2106 00103$:
                           2107 ;	genIpush
                           2108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2109 	ld	hl,#_Map3
   03CD E5                 2110 	push	hl
                           2111 ;	genCall
   03CE CD 45 03           2112 	call	_helper_copy_map
   03D1 E8 02              2113 	lda	sp,2(sp)
                           2114 ;	game.c 326
                           2115 ;	genGoto
   03D3 C3 33 04           2116 	jp	00113$
                           2117 ;	game.c 328
                           2118 ;	genLabel
   03D6                    2119 00104$:
                           2120 ;	genIpush
                           2121 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2122 	ld	hl,#_Map4
   03D9 E5                 2123 	push	hl
                           2124 ;	genCall
   03DA CD 45 03           2125 	call	_helper_copy_map
   03DD E8 02              2126 	lda	sp,2(sp)
                           2127 ;	game.c 329
                           2128 ;	genGoto
   03DF C3 33 04           2129 	jp	00113$
                           2130 ;	game.c 331
                           2131 ;	genLabel
   03E2                    2132 00105$:
                           2133 ;	genIpush
                           2134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2135 	ld	hl,#_MapTest
   03E5 E5                 2136 	push	hl
                           2137 ;	genCall
   03E6 CD 45 03           2138 	call	_helper_copy_map
   03E9 E8 02              2139 	lda	sp,2(sp)
                           2140 ;	game.c 332
                           2141 ;	genGoto
   03EB C3 33 04           2142 	jp	00113$
                           2143 ;	game.c 334
                           2144 ;	genLabel
   03EE                    2145 00106$:
                           2146 ;	genIpush
                           2147 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2148 	ld	hl,#_MapTest
   03F1 E5                 2149 	push	hl
                           2150 ;	genCall
   03F2 CD 45 03           2151 	call	_helper_copy_map
   03F5 E8 02              2152 	lda	sp,2(sp)
                           2153 ;	game.c 335
                           2154 ;	genGoto
   03F7 C3 33 04           2155 	jp	00113$
                           2156 ;	game.c 337
                           2157 ;	genLabel
   03FA                    2158 00107$:
                           2159 ;	genIpush
                           2160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2161 	ld	hl,#_MapTest
   03FD E5                 2162 	push	hl
                           2163 ;	genCall
   03FE CD 45 03           2164 	call	_helper_copy_map
   0401 E8 02              2165 	lda	sp,2(sp)
                           2166 ;	game.c 338
                           2167 ;	genGoto
   0403 C3 33 04           2168 	jp	00113$
                           2169 ;	game.c 340
                           2170 ;	genLabel
   0406                    2171 00108$:
                           2172 ;	genIpush
                           2173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2174 	ld	hl,#_MapTest
   0409 E5                 2175 	push	hl
                           2176 ;	genCall
   040A CD 45 03           2177 	call	_helper_copy_map
   040D E8 02              2178 	lda	sp,2(sp)
                           2179 ;	game.c 341
                           2180 ;	genGoto
   040F C3 33 04           2181 	jp	00113$
                           2182 ;	game.c 343
                           2183 ;	genLabel
   0412                    2184 00109$:
                           2185 ;	genIpush
                           2186 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2187 	ld	hl,#_MapTest
   0415 E5                 2188 	push	hl
                           2189 ;	genCall
   0416 CD 45 03           2190 	call	_helper_copy_map
   0419 E8 02              2191 	lda	sp,2(sp)
                           2192 ;	game.c 344
                           2193 ;	genGoto
   041B C3 33 04           2194 	jp	00113$
                           2195 ;	game.c 346
                           2196 ;	genLabel
   041E                    2197 00110$:
                           2198 ;	genIpush
                           2199 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2200 	ld	hl,#_MapTest
   0421 E5                 2201 	push	hl
                           2202 ;	genCall
   0422 CD 45 03           2203 	call	_helper_copy_map
   0425 E8 02              2204 	lda	sp,2(sp)
                           2205 ;	game.c 347
                           2206 ;	genGoto
   0427 C3 33 04           2207 	jp	00113$
                           2208 ;	game.c 349
                           2209 ;	genLabel
   042A                    2210 00111$:
                           2211 ;	genIpush
                           2212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2213 	ld	hl,#_MapTest
   042D E5                 2214 	push	hl
                           2215 ;	genCall
   042E CD 45 03           2216 	call	_helper_copy_map
   0431 E8 02              2217 	lda	sp,2(sp)
                           2218 ;	game.c 352
                           2219 ;	genLabel
   0433                    2220 00113$:
                           2221 ;	genEndFunction
                           2222 	
   0433 C9                 2223 	ret
   0434                    2224 ___copy_map_end:
                           2225 ;	game.c 356
                           2226 ;	genLabel
                           2227 ;	genFunction
                           2228 ;	---------------------------------
                           2229 ; Function map_init
                           2230 ; ---------------------------------
   0434                    2231 ___map_init_start:
   0434                    2232 _map_init:
                           2233 	
                           2234 ;	game.c 357
                           2235 ;	genCall
                           2236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2237 	call	_copy_map
                           2238 ;	game.c 358
                           2239 ;	genIpush
                           2240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2241 	ld	hl,#_map
   043A E5                 2242 	push	hl
                           2243 ;	genIpush
   043B 21 14 12           2244 	ld	hl,#0x1214
   043E E5                 2245 	push	hl
                           2246 ;	genIpush
   043F 21 00 00           2247 	ld	hl,#0x0000
   0442 E5                 2248 	push	hl
                           2249 ;	genCall
   0443 CD 00 00           2250 	call	_set_bkg_tiles
   0446 E8 06              2251 	lda	sp,6(sp)
                           2252 ;	game.c 359
                           2253 ;	genCall
                           2254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2255 	call	_instanciate_chars
                           2256 ;	genLabel
   044B                    2257 00101$:
                           2258 ;	genEndFunction
                           2259 	
   044B C9                 2260 	ret
   044C                    2261 ___map_init_end:
                           2262 ;	game.c 374
                           2263 ;	genLabel
                           2264 ;	genFunction
                           2265 ;	---------------------------------
                           2266 ; Function instanciate_chars
                           2267 ; ---------------------------------
   044C                    2268 ___instanciate_chars_start:
   044C                    2269 _instanciate_chars:
                           2270 	
                           2271 ;	game.c 376
                           2272 ;	genAssign (pointer)
   044C 11 6D 1A           2273 	ld	de,#_bunny
   044F 3E 08              2274 	ld	a,#0x08
   0451 12                 2275 	ld	(de),a
                           2276 ;	game.c 377
                           2277 ;	genPlus
                           2278 ;	genPlusIncr
   0452 21 6E 1A           2279 	ld	hl,#_bunny + 1
                           2280 ;	genAssign (pointer)
   0455 36 10              2281 	ld	(hl),#0x10
                           2282 ;	game.c 378
                           2283 ;	genPlus
                           2284 ;	genPlusIncr
   0457 23                 2285 	inc	hl
                           2286 ;	genAssign (pointer)
   0458 36 00              2287 	ld	(hl),#0x00
                           2288 ;	game.c 379
                           2289 ;	genPlus
                           2290 ;	genPlusIncr
   045A 23                 2291 	inc	hl
                           2292 ;	genAssign (pointer)
   045B 36 01              2293 	ld	(hl),#0x01
                           2294 ;	game.c 380
                           2295 ;	genPlus
                           2296 ;	genPlusIncr
   045D 23                 2297 	inc	hl
                           2298 ;	genAssign (pointer)
   045E 36 02              2299 	ld	(hl),#0x02
                           2300 ;	game.c 381
                           2301 ;	genPlus
                           2302 ;	genPlusIncr
   0460 23                 2303 	inc	hl
                           2304 ;	genAssign (pointer)
   0461 36 10              2305 	ld	(hl),#0x10
                           2306 ;	game.c 382
                           2307 ;	genPlus
                           2308 ;	genPlusIncr
   0463 23                 2309 	inc	hl
                           2310 ;	genAssign (pointer)
   0464 36 11              2311 	ld	(hl),#0x11
                           2312 ;	game.c 383
                           2313 ;	genPlus
                           2314 ;	genPlusIncr
   0466 23                 2315 	inc	hl
                           2316 ;	genAssign (pointer)
   0467 36 12              2317 	ld	(hl),#0x12
                           2318 ;	game.c 384
                           2319 ;	genPlus
                           2320 ;	genPlusIncr
   0469 23                 2321 	inc	hl
                           2322 ;	genAssign (pointer)
   046A 36 00              2323 	ld	(hl),#0x00
                           2324 ;	game.c 385
                           2325 ;	genPlus
                           2326 ;	genPlusIncr
   046C 23                 2327 	inc	hl
                           2328 ;	genAssign (pointer)
   046D 36 00              2329 	ld	(hl),#0x00
                           2330 ;	game.c 386
                           2331 ;	genPlus
                           2332 ;	genPlusIncr
   046F 23                 2333 	inc	hl
   0470 23                 2334 	inc	hl
                           2335 ;	genAssign (pointer)
   0471 36 01              2336 	ld	(hl),#0x01
                           2337 ;	game.c 387
                           2338 ;	genPlus
                           2339 ;	genPlusIncr
   0473 23                 2340 	inc	hl
                           2341 ;	genAssign (pointer)
   0474 5D                 2342 	ld	e,l
   0475 54                 2343 	ld	d,h
   0476 3E 90              2344 	ld	a,#0x90
   0478 12                 2345 	ld	(de),a
   0479 13                 2346 	inc	de
   047A 3E 01              2347 	ld	a,#0x01
   047C 12                 2348 	ld	(de),a
                           2349 ;	game.c 389
                           2350 ;	genAssign (pointer)
   047D 11 7B 1A           2351 	ld	de,#_dog1
   0480 3E 10              2352 	ld	a,#0x10
   0482 12                 2353 	ld	(de),a
                           2354 ;	game.c 390
                           2355 ;	genPlus
                           2356 ;	genPlusIncr
   0483 21 7C 1A           2357 	ld	hl,#_dog1 + 1
                           2358 ;	genAssign (pointer)
   0486 36 10              2359 	ld	(hl),#0x10
                           2360 ;	game.c 391
                           2361 ;	genPlus
                           2362 ;	genPlusIncr
   0488 23                 2363 	inc	hl
                           2364 ;	genAssign (pointer)
   0489 36 03              2365 	ld	(hl),#0x03
                           2366 ;	game.c 392
                           2367 ;	genPlus
                           2368 ;	genPlusIncr
   048B 23                 2369 	inc	hl
                           2370 ;	genAssign (pointer)
   048C 36 04              2371 	ld	(hl),#0x04
                           2372 ;	game.c 393
                           2373 ;	genPlus
                           2374 ;	genPlusIncr
   048E 23                 2375 	inc	hl
                           2376 ;	genAssign (pointer)
   048F 36 05              2377 	ld	(hl),#0x05
                           2378 ;	game.c 394
                           2379 ;	genPlus
                           2380 ;	genPlusIncr
   0491 23                 2381 	inc	hl
                           2382 ;	genAssign (pointer)
   0492 36 13              2383 	ld	(hl),#0x13
                           2384 ;	game.c 395
                           2385 ;	genPlus
                           2386 ;	genPlusIncr
   0494 23                 2387 	inc	hl
                           2388 ;	genAssign (pointer)
   0495 36 14              2389 	ld	(hl),#0x14
                           2390 ;	game.c 396
                           2391 ;	genPlus
                           2392 ;	genPlusIncr
   0497 23                 2393 	inc	hl
                           2394 ;	genAssign (pointer)
   0498 36 15              2395 	ld	(hl),#0x15
                           2396 ;	game.c 397
                           2397 ;	genPlus
                           2398 ;	genPlusIncr
   049A 23                 2399 	inc	hl
                           2400 ;	genAssign (pointer)
   049B 36 00              2401 	ld	(hl),#0x00
                           2402 ;	game.c 398
                           2403 ;	genPlus
                           2404 ;	genPlusIncr
   049D 23                 2405 	inc	hl
                           2406 ;	genAssign (pointer)
   049E 36 00              2407 	ld	(hl),#0x00
                           2408 ;	game.c 399
                           2409 ;	genPlus
                           2410 ;	genPlusIncr
   04A0 23                 2411 	inc	hl
   04A1 23                 2412 	inc	hl
                           2413 ;	genAssign (pointer)
   04A2 36 02              2414 	ld	(hl),#0x02
                           2415 ;	game.c 400
                           2416 ;	genPlus
                           2417 ;	genPlusIncr
   04A4 23                 2418 	inc	hl
                           2419 ;	genAssign (pointer)
   04A5 5D                 2420 	ld	e,l
   04A6 54                 2421 	ld	d,h
   04A7 3E 90              2422 	ld	a,#0x90
   04A9 12                 2423 	ld	(de),a
   04AA 13                 2424 	inc	de
   04AB 3E 01              2425 	ld	a,#0x01
   04AD 12                 2426 	ld	(de),a
                           2427 ;	game.c 402
                           2428 ;	genAssign (pointer)
   04AE 11 89 1A           2429 	ld	de,#_dog2
   04B1 3E 08              2430 	ld	a,#0x08
   04B3 12                 2431 	ld	(de),a
                           2432 ;	game.c 403
                           2433 ;	genPlus
                           2434 ;	genPlusIncr
   04B4 21 8A 1A           2435 	ld	hl,#_dog2 + 1
                           2436 ;	genAssign (pointer)
   04B7 36 18              2437 	ld	(hl),#0x18
                           2438 ;	game.c 404
                           2439 ;	genPlus
                           2440 ;	genPlusIncr
   04B9 23                 2441 	inc	hl
                           2442 ;	genAssign (pointer)
   04BA 36 06              2443 	ld	(hl),#0x06
                           2444 ;	game.c 405
                           2445 ;	genPlus
                           2446 ;	genPlusIncr
   04BC 23                 2447 	inc	hl
                           2448 ;	genAssign (pointer)
   04BD 36 07              2449 	ld	(hl),#0x07
                           2450 ;	game.c 406
                           2451 ;	genPlus
                           2452 ;	genPlusIncr
   04BF 23                 2453 	inc	hl
                           2454 ;	genAssign (pointer)
   04C0 36 08              2455 	ld	(hl),#0x08
                           2456 ;	game.c 407
                           2457 ;	genPlus
                           2458 ;	genPlusIncr
   04C2 23                 2459 	inc	hl
                           2460 ;	genAssign (pointer)
   04C3 36 13              2461 	ld	(hl),#0x13
                           2462 ;	game.c 408
                           2463 ;	genPlus
                           2464 ;	genPlusIncr
   04C5 23                 2465 	inc	hl
                           2466 ;	genAssign (pointer)
   04C6 36 14              2467 	ld	(hl),#0x14
                           2468 ;	game.c 409
                           2469 ;	genPlus
                           2470 ;	genPlusIncr
   04C8 23                 2471 	inc	hl
                           2472 ;	genAssign (pointer)
   04C9 36 15              2473 	ld	(hl),#0x15
                           2474 ;	game.c 410
                           2475 ;	genPlus
                           2476 ;	genPlusIncr
   04CB 23                 2477 	inc	hl
                           2478 ;	genAssign (pointer)
   04CC 36 00              2479 	ld	(hl),#0x00
                           2480 ;	game.c 411
                           2481 ;	genPlus
                           2482 ;	genPlusIncr
   04CE 23                 2483 	inc	hl
                           2484 ;	genAssign (pointer)
   04CF 36 00              2485 	ld	(hl),#0x00
                           2486 ;	game.c 412
                           2487 ;	genPlus
                           2488 ;	genPlusIncr
   04D1 23                 2489 	inc	hl
   04D2 23                 2490 	inc	hl
                           2491 ;	genAssign (pointer)
   04D3 36 03              2492 	ld	(hl),#0x03
                           2493 ;	game.c 413
                           2494 ;	genPlus
                           2495 ;	genPlusIncr
   04D5 23                 2496 	inc	hl
                           2497 ;	genAssign (pointer)
   04D6 5D                 2498 	ld	e,l
   04D7 54                 2499 	ld	d,h
   04D8 3E 90              2500 	ld	a,#0x90
   04DA 12                 2501 	ld	(de),a
   04DB 13                 2502 	inc	de
   04DC 3E 01              2503 	ld	a,#0x01
   04DE 12                 2504 	ld	(de),a
                           2505 ;	game.c 415
                           2506 ;	genAssign (pointer)
   04DF 11 97 1A           2507 	ld	de,#_cat
   04E2 3E 10              2508 	ld	a,#0x10
   04E4 12                 2509 	ld	(de),a
                           2510 ;	game.c 416
                           2511 ;	genPlus
                           2512 ;	genPlusIncr
   04E5 21 98 1A           2513 	ld	hl,#_cat + 1
                           2514 ;	genAssign (pointer)
   04E8 36 18              2515 	ld	(hl),#0x18
                           2516 ;	game.c 417
                           2517 ;	genPlus
                           2518 ;	genPlusIncr
   04EA 23                 2519 	inc	hl
                           2520 ;	genAssign (pointer)
   04EB 36 09              2521 	ld	(hl),#0x09
                           2522 ;	game.c 418
                           2523 ;	genPlus
                           2524 ;	genPlusIncr
   04ED 23                 2525 	inc	hl
                           2526 ;	genAssign (pointer)
   04EE 36 0A              2527 	ld	(hl),#0x0A
                           2528 ;	game.c 419
                           2529 ;	genPlus
                           2530 ;	genPlusIncr
   04F0 23                 2531 	inc	hl
                           2532 ;	genAssign (pointer)
   04F1 36 05              2533 	ld	(hl),#0x05
                           2534 ;	game.c 420
                           2535 ;	genPlus
                           2536 ;	genPlusIncr
   04F3 23                 2537 	inc	hl
                           2538 ;	genAssign (pointer)
   04F4 36 13              2539 	ld	(hl),#0x13
                           2540 ;	game.c 421
                           2541 ;	genPlus
                           2542 ;	genPlusIncr
   04F6 23                 2543 	inc	hl
                           2544 ;	genAssign (pointer)
   04F7 36 14              2545 	ld	(hl),#0x14
                           2546 ;	game.c 422
                           2547 ;	genPlus
                           2548 ;	genPlusIncr
   04F9 23                 2549 	inc	hl
                           2550 ;	genAssign (pointer)
   04FA 36 15              2551 	ld	(hl),#0x15
                           2552 ;	game.c 423
                           2553 ;	genPlus
                           2554 ;	genPlusIncr
   04FC 23                 2555 	inc	hl
                           2556 ;	genAssign (pointer)
   04FD 36 00              2557 	ld	(hl),#0x00
                           2558 ;	game.c 424
                           2559 ;	genPlus
                           2560 ;	genPlusIncr
   04FF 23                 2561 	inc	hl
                           2562 ;	genAssign (pointer)
   0500 36 00              2563 	ld	(hl),#0x00
                           2564 ;	game.c 425
                           2565 ;	genPlus
                           2566 ;	genPlusIncr
   0502 23                 2567 	inc	hl
   0503 23                 2568 	inc	hl
                           2569 ;	genAssign (pointer)
   0504 36 04              2570 	ld	(hl),#0x04
                           2571 ;	game.c 426
                           2572 ;	genPlus
                           2573 ;	genPlusIncr
   0506 23                 2574 	inc	hl
                           2575 ;	genAssign (pointer)
   0507 5D                 2576 	ld	e,l
   0508 54                 2577 	ld	d,h
   0509 3E 90              2578 	ld	a,#0x90
   050B 12                 2579 	ld	(de),a
   050C 13                 2580 	inc	de
   050D 3E 01              2581 	ld	a,#0x01
   050F 12                 2582 	ld	(de),a
                           2583 ;	game.c 429
                           2584 ;	genIpush
                           2585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0510 21 6D 1A           2586 	ld	hl,#_bunny
   0513 E5                 2587 	push	hl
                           2588 ;	genCall
   0514 CD B9 1A           2589 	call	_set_character_sprite
   0517 E8 02              2590 	lda	sp,2(sp)
                           2591 ;	game.c 430
                           2592 ;	genIpush
                           2593 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0519 21 7B 1A           2594 	ld	hl,#_dog1
   051C E5                 2595 	push	hl
                           2596 ;	genCall
   051D CD B9 1A           2597 	call	_set_character_sprite
   0520 E8 02              2598 	lda	sp,2(sp)
                           2599 ;	game.c 431
                           2600 ;	genIpush
                           2601 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0522 21 89 1A           2602 	ld	hl,#_dog2
   0525 E5                 2603 	push	hl
                           2604 ;	genCall
   0526 CD B9 1A           2605 	call	_set_character_sprite
   0529 E8 02              2606 	lda	sp,2(sp)
                           2607 ;	game.c 432
                           2608 ;	genIpush
                           2609 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   052B 21 97 1A           2610 	ld	hl,#_cat
   052E E5                 2611 	push	hl
                           2612 ;	genCall
   052F CD B9 1A           2613 	call	_set_character_sprite
   0532 E8 02              2614 	lda	sp,2(sp)
                           2615 ;	genLabel
   0534                    2616 00101$:
                           2617 ;	genEndFunction
                           2618 	
   0534 C9                 2619 	ret
   0535                    2620 ___instanciate_chars_end:
                           2621 ;	game.c 436
                           2622 ;	genLabel
                           2623 ;	genFunction
                           2624 ;	---------------------------------
                           2625 ; Function got_key
                           2626 ; ---------------------------------
   0535                    2627 ___got_key_start:
   0535                    2628 _got_key:
   0535 E8 FC              2629 	lda	sp,-4(sp)
                           2630 ;	game.c 437
                           2631 ;	genAssign
                           2632 ;	AOP_HL for _player
   0537 21 B3 1A           2633 	ld	hl,#_player
   053A 4E                 2634 	ld	c,(hl)
   053B 23                 2635 	inc	hl
   053C 46                 2636 	ld	b,(hl)
                           2637 ;	genPlus
                           2638 ;	genPlusIncr
   053D 03                 2639 	inc	bc
                           2640 ;	genPointerGet
   053E 0A                 2641 	ld	a,(bc)
   053F 4F                 2642 	ld	c,a
                           2643 ;	genAssign
                           2644 ;	AOP_HL for _player
                           2645 ;	AOP_STK for _got_key_sloc0_1_0
   0540 2B                 2646 	dec	hl
   0541 2A                 2647 	ld	a,(hl+)
   0542 5E                 2648 	ld	e,(hl)
   0543 F8 00              2649 	lda	hl,0(sp)
   0545 22                 2650 	ld	(hl+),a
   0546 73                 2651 	ld	(hl),e
                           2652 ;	genPointerGet
                           2653 ;	AOP_STK for _got_key_sloc0_1_0
   0547 2B                 2654 	dec	hl
   0548 5E                 2655 	ld	e,(hl)
   0549 23                 2656 	inc	hl
   054A 56                 2657 	ld	d,(hl)
   054B 1A                 2658 	ld	a,(de)
   054C 47                 2659 	ld	b,a
                           2660 ;	genIpush
                           2661 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054D 79                 2662 	ld	a,c
   054E F5                 2663 	push	af
   054F 33                 2664 	inc	sp
                           2665 ;	genIpush
   0550 78                 2666 	ld	a,b
   0551 F5                 2667 	push	af
   0552 33                 2668 	inc	sp
                           2669 ;	genCall
   0553 CD 61 0D           2670 	call	__get_map_position_from_xy
   0556 42                 2671 	ld	b,d
   0557 4B                 2672 	ld	c,e
   0558 E8 02              2673 	lda	sp,2(sp)
                           2674 ;	genAssign
                           2675 ;	(registers are the same)
                           2676 ;	game.c 440
                           2677 ;	genPlus
                           2678 ;	Can't optimise plus by inc, falling back to the normal way
   055A 21 05 19           2679 	ld	hl,#_map
   055D 09                 2680 	add	hl,bc
   055E 4D                 2681 	ld	c,l
   055F 44                 2682 	ld	b,h
                           2683 ;	genPointerGet
   0560 0A                 2684 	ld	a,(bc)
   0561 4F                 2685 	ld	c,a
                           2686 ;	genCast
                           2687 ; Removed redundent load
   0562 06 00              2688 	ld	b,#0x00
                           2689 ;	genCmpEq
                           2690 ; genCmpEq: left 2, right 2, result 0
   0564 79                 2691 	ld	a,c
   0565 FE 2E              2692 	cp	a,#0x2E
   0567 C2 71 05           2693 	jp	nz,00116$
   056A 78                 2694 	ld	a,b
   056B B7                 2695 	or	a,a
   056C C2 DF 05           2696 	jp	nz,00109$
   056F 18 03              2697 	jr	00117$
   0571                    2698 00116$:
   0571 C3 DF 05           2699 	jp	00109$
   0574                    2700 00117$:
                           2701 ;	game.c 445
                           2702 ;	genAssign
                           2703 ;	AOP_STK for _got_key_map_position_2_2
   0574 F8 02              2704 	lda	hl,2(sp)
   0576 36 68              2705 	ld	(hl),#0x68
   0578 23                 2706 	inc	hl
   0579 36 01              2707 	ld	(hl),#0x01
                           2708 ;	game.c 446
                           2709 ;	genLabel
   057B                    2710 00104$:
                           2711 ;	genCmpEq
                           2712 ;	AOP_STK for _got_key_map_position_2_2
                           2713 ; genCmpEq: left 2, right 2, result 0
   057B F8 02              2714 	lda	hl,2(sp)
   057D 2A                 2715 	ld	a,(hl+)
   057E B6                 2716 	or	a,(hl)
   057F CA CE 05           2717 	jp	z,00106$
   0582                    2718 00118$:
                           2719 ;	game.c 447
                           2720 ;	genMinus
                           2721 ;	AOP_STK for _got_key_map_position_2_2
   0582 F8 02              2722 	lda	hl,2(sp)
   0584 5E                 2723 	ld	e,(hl)
   0585 23                 2724 	inc	hl
   0586 56                 2725 	ld	d,(hl)
   0587 1B                 2726 	dec	de
   0588 2B                 2727 	dec	hl
   0589 73                 2728 	ld	(hl),e
   058A 23                 2729 	inc	hl
   058B 72                 2730 	ld	(hl),d
                           2731 ;	game.c 449
                           2732 ;	genPlus
                           2733 ;	AOP_STK for _got_key_map_position_2_2
                           2734 ;	AOP_STK for _got_key_sloc0_1_0
                           2735 ;	Can't optimise plus by inc, falling back to the normal way
   058C 11 05 19           2736 	ld	de,#_map
   058F 2B                 2737 	dec	hl
   0590 2A                 2738 	ld	a,(hl+)
   0591 66                 2739 	ld	h,(hl)
   0592 6F                 2740 	ld	l,a
   0593 19                 2741 	add	hl,de
   0594 7D                 2742 	ld	a,l
   0595 54                 2743 	ld	d,h
   0596 F8 00              2744 	lda	hl,0(sp)
                           2745 ;	genPointerGet
                           2746 ;	AOP_STK for _got_key_sloc0_1_0
   0598 22                 2747 	ld	(hl+),a
   0599 72                 2748 	ld	(hl),d
   059A 5F                 2749 	ld	e,a
   059B 1A                 2750 	ld	a,(de)
   059C 4F                 2751 	ld	c,a
                           2752 ;	genCast
                           2753 ; Removed redundent load
   059D 06 00              2754 	ld	b,#0x00
                           2755 ;	genCmpEq
                           2756 ; genCmpEq: left 2, right 2, result 0
   059F 79                 2757 	ld	a,c
   05A0 FE 29              2758 	cp	a,#0x29
   05A2 C2 AA 05           2759 	jp	nz,00119$
   05A5 78                 2760 	ld	a,b
   05A6 B7                 2761 	or	a,a
   05A7 CA B8 05           2762 	jp	z,00101$
   05AA                    2763 00119$:
                           2764 ;	genCmpEq
                           2765 ; genCmpEq: left 2, right 2, result 0
   05AA 79                 2766 	ld	a,c
   05AB FE 2E              2767 	cp	a,#0x2E
   05AD C2 B5 05           2768 	jp	nz,00120$
   05B0 78                 2769 	ld	a,b
   05B1 B7                 2770 	or	a,a
   05B2 CA C3 05           2771 	jp	z,00102$
   05B5                    2772 00120$:
                           2773 ;	genGoto
   05B5 C3 7B 05           2774 	jp	00104$
                           2775 ;	game.c 451
                           2776 ;	genLabel
   05B8                    2777 00101$:
                           2778 ;	genAssign (pointer)
                           2779 ;	AOP_STK for _got_key_sloc0_1_0
   05B8 F8 00              2780 	lda	hl,0(sp)
   05BA 5E                 2781 	ld	e,(hl)
   05BB 23                 2782 	inc	hl
   05BC 56                 2783 	ld	d,(hl)
   05BD 3E 2A              2784 	ld	a,#0x2A
   05BF 12                 2785 	ld	(de),a
                           2786 ;	game.c 452
                           2787 ;	genGoto
   05C0 C3 7B 05           2788 	jp	00104$
                           2789 ;	game.c 454
                           2790 ;	genLabel
   05C3                    2791 00102$:
                           2792 ;	genAssign (pointer)
                           2793 ;	AOP_STK for _got_key_sloc0_1_0
   05C3 F8 00              2794 	lda	hl,0(sp)
   05C5 5E                 2795 	ld	e,(hl)
   05C6 23                 2796 	inc	hl
   05C7 56                 2797 	ld	d,(hl)
   05C8 3E 09              2798 	ld	a,#0x09
   05CA 12                 2799 	ld	(de),a
                           2800 ;	game.c 457
                           2801 ;	genGoto
   05CB C3 7B 05           2802 	jp	00104$
                           2803 ;	genLabel
   05CE                    2804 00106$:
                           2805 ;	game.c 459
                           2806 ;	genIpush
                           2807 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05CE 21 05 19           2808 	ld	hl,#_map
   05D1 E5                 2809 	push	hl
                           2810 ;	genIpush
   05D2 21 14 12           2811 	ld	hl,#0x1214
   05D5 E5                 2812 	push	hl
                           2813 ;	genIpush
   05D6 21 00 00           2814 	ld	hl,#0x0000
   05D9 E5                 2815 	push	hl
                           2816 ;	genCall
   05DA CD 00 00           2817 	call	_set_bkg_tiles
   05DD E8 06              2818 	lda	sp,6(sp)
                           2819 ;	genLabel
   05DF                    2820 00109$:
                           2821 ;	genEndFunction
   05DF E8 04              2822 	lda	sp,4(sp)
   05E1 C9                 2823 	ret
   05E2                    2824 ___got_key_end:
                           2825 ;	game.c 463
                           2826 ;	genLabel
                           2827 ;	genFunction
                           2828 ;	---------------------------------
                           2829 ; Function got_door
                           2830 ; ---------------------------------
   05E2                    2831 ___got_door_start:
   05E2                    2832 _got_door:
   05E2 E8 FE              2833 	lda	sp,-2(sp)
                           2834 ;	game.c 464
                           2835 ;	genAssign
                           2836 ;	AOP_HL for _player
   05E4 21 B3 1A           2837 	ld	hl,#_player
   05E7 4E                 2838 	ld	c,(hl)
   05E8 23                 2839 	inc	hl
   05E9 46                 2840 	ld	b,(hl)
                           2841 ;	genPlus
                           2842 ;	genPlusIncr
   05EA 03                 2843 	inc	bc
                           2844 ;	genPointerGet
   05EB 0A                 2845 	ld	a,(bc)
   05EC 4F                 2846 	ld	c,a
                           2847 ;	genAssign
                           2848 ;	AOP_HL for _player
                           2849 ;	AOP_STK for _got_door_sloc0_1_0
   05ED 2B                 2850 	dec	hl
   05EE 2A                 2851 	ld	a,(hl+)
   05EF 5E                 2852 	ld	e,(hl)
   05F0 F8 00              2853 	lda	hl,0(sp)
   05F2 22                 2854 	ld	(hl+),a
   05F3 73                 2855 	ld	(hl),e
                           2856 ;	genPointerGet
                           2857 ;	AOP_STK for _got_door_sloc0_1_0
   05F4 2B                 2858 	dec	hl
   05F5 5E                 2859 	ld	e,(hl)
   05F6 23                 2860 	inc	hl
   05F7 56                 2861 	ld	d,(hl)
   05F8 1A                 2862 	ld	a,(de)
   05F9 47                 2863 	ld	b,a
                           2864 ;	genIpush
                           2865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05FA 79                 2866 	ld	a,c
   05FB F5                 2867 	push	af
   05FC 33                 2868 	inc	sp
                           2869 ;	genIpush
   05FD 78                 2870 	ld	a,b
   05FE F5                 2871 	push	af
   05FF 33                 2872 	inc	sp
                           2873 ;	genCall
   0600 CD 61 0D           2874 	call	__get_map_position_from_xy
   0603 42                 2875 	ld	b,d
   0604 4B                 2876 	ld	c,e
   0605 E8 02              2877 	lda	sp,2(sp)
                           2878 ;	genAssign
                           2879 ;	(registers are the same)
                           2880 ;	game.c 466
                           2881 ;	genPlus
                           2882 ;	Can't optimise plus by inc, falling back to the normal way
   0607 21 05 19           2883 	ld	hl,#_map
   060A 09                 2884 	add	hl,bc
   060B 4D                 2885 	ld	c,l
   060C 44                 2886 	ld	b,h
                           2887 ;	genPointerGet
   060D 0A                 2888 	ld	a,(bc)
   060E 4F                 2889 	ld	c,a
                           2890 ;	genCast
                           2891 ; Removed redundent load
   060F 06 00              2892 	ld	b,#0x00
                           2893 ;	genCmpEq
                           2894 ; genCmpEq: left 2, right 2, result 0
   0611 79                 2895 	ld	a,c
   0612 FE 65              2896 	cp	a,#0x65
   0614 C2 1C 06           2897 	jp	nz,00144$
   0617 78                 2898 	ld	a,b
   0618 B7                 2899 	or	a,a
   0619 CA F0 06           2900 	jp	z,00101$
   061C                    2901 00144$:
                           2902 ;	genCmpEq
                           2903 ; genCmpEq: left 2, right 2, result 0
   061C 79                 2904 	ld	a,c
   061D FE 66              2905 	cp	a,#0x66
   061F C2 27 06           2906 	jp	nz,00145$
   0622 78                 2907 	ld	a,b
   0623 B7                 2908 	or	a,a
   0624 CA FB 06           2909 	jp	z,00102$
   0627                    2910 00145$:
                           2911 ;	genCmpEq
                           2912 ; genCmpEq: left 2, right 2, result 0
   0627 79                 2913 	ld	a,c
   0628 FE 67              2914 	cp	a,#0x67
   062A C2 32 06           2915 	jp	nz,00146$
   062D 78                 2916 	ld	a,b
   062E B7                 2917 	or	a,a
   062F CA 06 07           2918 	jp	z,00103$
   0632                    2919 00146$:
                           2920 ;	genCmpEq
                           2921 ; genCmpEq: left 2, right 2, result 0
   0632 79                 2922 	ld	a,c
   0633 FE 68              2923 	cp	a,#0x68
   0635 C2 3D 06           2924 	jp	nz,00147$
   0638 78                 2925 	ld	a,b
   0639 B7                 2926 	or	a,a
   063A CA 11 07           2927 	jp	z,00104$
   063D                    2928 00147$:
                           2929 ;	genCmpEq
                           2930 ; genCmpEq: left 2, right 2, result 0
   063D 79                 2931 	ld	a,c
   063E FE 69              2932 	cp	a,#0x69
   0640 C2 48 06           2933 	jp	nz,00148$
   0643 78                 2934 	ld	a,b
   0644 B7                 2935 	or	a,a
   0645 CA 1C 07           2936 	jp	z,00105$
   0648                    2937 00148$:
                           2938 ;	genCmpEq
                           2939 ; genCmpEq: left 2, right 2, result 0
   0648 79                 2940 	ld	a,c
   0649 FE 6A              2941 	cp	a,#0x6A
   064B C2 53 06           2942 	jp	nz,00149$
   064E 78                 2943 	ld	a,b
   064F B7                 2944 	or	a,a
   0650 CA 27 07           2945 	jp	z,00106$
   0653                    2946 00149$:
                           2947 ;	genCmpEq
                           2948 ; genCmpEq: left 2, right 2, result 0
   0653 79                 2949 	ld	a,c
   0654 FE 6B              2950 	cp	a,#0x6B
   0656 C2 5E 06           2951 	jp	nz,00150$
   0659 78                 2952 	ld	a,b
   065A B7                 2953 	or	a,a
   065B CA 32 07           2954 	jp	z,00107$
   065E                    2955 00150$:
                           2956 ;	genCmpEq
                           2957 ; genCmpEq: left 2, right 2, result 0
   065E 79                 2958 	ld	a,c
   065F FE 6C              2959 	cp	a,#0x6C
   0661 C2 69 06           2960 	jp	nz,00151$
   0664 78                 2961 	ld	a,b
   0665 B7                 2962 	or	a,a
   0666 CA 3D 07           2963 	jp	z,00108$
   0669                    2964 00151$:
                           2965 ;	genCmpEq
                           2966 ; genCmpEq: left 2, right 2, result 0
   0669 79                 2967 	ld	a,c
   066A FE 6D              2968 	cp	a,#0x6D
   066C C2 74 06           2969 	jp	nz,00152$
   066F 78                 2970 	ld	a,b
   0670 B7                 2971 	or	a,a
   0671 CA 48 07           2972 	jp	z,00109$
   0674                    2973 00152$:
                           2974 ;	genCmpEq
                           2975 ; genCmpEq: left 2, right 2, result 0
   0674 79                 2976 	ld	a,c
   0675 FE 6E              2977 	cp	a,#0x6E
   0677 C2 7F 06           2978 	jp	nz,00153$
   067A 78                 2979 	ld	a,b
   067B B7                 2980 	or	a,a
   067C CA 53 07           2981 	jp	z,00110$
   067F                    2982 00153$:
                           2983 ;	genCmpEq
                           2984 ; genCmpEq: left 2, right 2, result 0
   067F 79                 2985 	ld	a,c
   0680 FE 6F              2986 	cp	a,#0x6F
   0682 C2 8A 06           2987 	jp	nz,00154$
   0685 78                 2988 	ld	a,b
   0686 B7                 2989 	or	a,a
   0687 CA 5E 07           2990 	jp	z,00111$
   068A                    2991 00154$:
                           2992 ;	genCmpEq
                           2993 ; genCmpEq: left 2, right 2, result 0
   068A 79                 2994 	ld	a,c
   068B FE 70              2995 	cp	a,#0x70
   068D C2 95 06           2996 	jp	nz,00155$
   0690 78                 2997 	ld	a,b
   0691 B7                 2998 	or	a,a
   0692 CA 69 07           2999 	jp	z,00112$
   0695                    3000 00155$:
                           3001 ;	genCmpEq
                           3002 ; genCmpEq: left 2, right 2, result 0
   0695 79                 3003 	ld	a,c
   0696 FE 71              3004 	cp	a,#0x71
   0698 C2 A0 06           3005 	jp	nz,00156$
   069B 78                 3006 	ld	a,b
   069C B7                 3007 	or	a,a
   069D CA 74 07           3008 	jp	z,00113$
   06A0                    3009 00156$:
                           3010 ;	genCmpEq
                           3011 ; genCmpEq: left 2, right 2, result 0
   06A0 79                 3012 	ld	a,c
   06A1 FE 72              3013 	cp	a,#0x72
   06A3 C2 AB 06           3014 	jp	nz,00157$
   06A6 78                 3015 	ld	a,b
   06A7 B7                 3016 	or	a,a
   06A8 CA 7F 07           3017 	jp	z,00114$
   06AB                    3018 00157$:
                           3019 ;	genCmpEq
                           3020 ; genCmpEq: left 2, right 2, result 0
   06AB 79                 3021 	ld	a,c
   06AC FE 73              3022 	cp	a,#0x73
   06AE C2 B6 06           3023 	jp	nz,00158$
   06B1 78                 3024 	ld	a,b
   06B2 B7                 3025 	or	a,a
   06B3 CA 8A 07           3026 	jp	z,00115$
   06B6                    3027 00158$:
                           3028 ;	genCmpEq
                           3029 ; genCmpEq: left 2, right 2, result 0
   06B6 79                 3030 	ld	a,c
   06B7 FE 74              3031 	cp	a,#0x74
   06B9 C2 C1 06           3032 	jp	nz,00159$
   06BC 78                 3033 	ld	a,b
   06BD B7                 3034 	or	a,a
   06BE CA 95 07           3035 	jp	z,00116$
   06C1                    3036 00159$:
                           3037 ;	genCmpEq
                           3038 ; genCmpEq: left 2, right 2, result 0
   06C1 79                 3039 	ld	a,c
   06C2 FE 75              3040 	cp	a,#0x75
   06C4 C2 CC 06           3041 	jp	nz,00160$
   06C7 78                 3042 	ld	a,b
   06C8 B7                 3043 	or	a,a
   06C9 CA A0 07           3044 	jp	z,00117$
   06CC                    3045 00160$:
                           3046 ;	genCmpEq
                           3047 ; genCmpEq: left 2, right 2, result 0
   06CC 79                 3048 	ld	a,c
   06CD FE 76              3049 	cp	a,#0x76
   06CF C2 D7 06           3050 	jp	nz,00161$
   06D2 78                 3051 	ld	a,b
   06D3 B7                 3052 	or	a,a
   06D4 CA AB 07           3053 	jp	z,00118$
   06D7                    3054 00161$:
                           3055 ;	genCmpEq
                           3056 ; genCmpEq: left 2, right 2, result 0
   06D7 79                 3057 	ld	a,c
   06D8 FE 77              3058 	cp	a,#0x77
   06DA C2 E2 06           3059 	jp	nz,00162$
   06DD 78                 3060 	ld	a,b
   06DE B7                 3061 	or	a,a
   06DF CA B6 07           3062 	jp	z,00119$
   06E2                    3063 00162$:
                           3064 ;	genCmpEq
                           3065 ; genCmpEq: left 2, right 2, result 0
   06E2 79                 3066 	ld	a,c
   06E3 FE 78              3067 	cp	a,#0x78
   06E5 C2 ED 06           3068 	jp	nz,00163$
   06E8 78                 3069 	ld	a,b
   06E9 B7                 3070 	or	a,a
   06EA CA C1 07           3071 	jp	z,00120$
   06ED                    3072 00163$:
                           3073 ;	genGoto
   06ED C3 C9 07           3074 	jp	00122$
                           3075 ;	game.c 468
                           3076 ;	genLabel
   06F0                    3077 00101$:
                           3078 ;	genAssign
                           3079 ;	AOP_HL for _current_map
   06F0 21 04 19           3080 	ld	hl,#_current_map
   06F3 36 01              3081 	ld	(hl),#0x01
                           3082 ;	game.c 469
                           3083 ;	genCall
                           3084 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 CD 34 04           3085 	call	_map_init
                           3086 ;	game.c 470
                           3087 ;	genGoto
   06F8 C3 C9 07           3088 	jp	00122$
                           3089 ;	game.c 472
                           3090 ;	genLabel
   06FB                    3091 00102$:
                           3092 ;	genAssign
                           3093 ;	AOP_HL for _current_map
   06FB 21 04 19           3094 	ld	hl,#_current_map
   06FE 36 02              3095 	ld	(hl),#0x02
                           3096 ;	game.c 473
                           3097 ;	genCall
                           3098 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0700 CD 34 04           3099 	call	_map_init
                           3100 ;	game.c 474
                           3101 ;	genGoto
   0703 C3 C9 07           3102 	jp	00122$
                           3103 ;	game.c 476
                           3104 ;	genLabel
   0706                    3105 00103$:
                           3106 ;	genAssign
                           3107 ;	AOP_HL for _current_map
   0706 21 04 19           3108 	ld	hl,#_current_map
   0709 36 03              3109 	ld	(hl),#0x03
                           3110 ;	game.c 477
                           3111 ;	genCall
                           3112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   070B CD 34 04           3113 	call	_map_init
                           3114 ;	game.c 478
                           3115 ;	genGoto
   070E C3 C9 07           3116 	jp	00122$
                           3117 ;	game.c 480
                           3118 ;	genLabel
   0711                    3119 00104$:
                           3120 ;	genAssign
                           3121 ;	AOP_HL for _current_map
   0711 21 04 19           3122 	ld	hl,#_current_map
   0714 36 04              3123 	ld	(hl),#0x04
                           3124 ;	game.c 481
                           3125 ;	genCall
                           3126 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0716 CD 34 04           3127 	call	_map_init
                           3128 ;	game.c 482
                           3129 ;	genGoto
   0719 C3 C9 07           3130 	jp	00122$
                           3131 ;	game.c 484
                           3132 ;	genLabel
   071C                    3133 00105$:
                           3134 ;	genAssign
                           3135 ;	AOP_HL for _current_map
   071C 21 04 19           3136 	ld	hl,#_current_map
   071F 36 05              3137 	ld	(hl),#0x05
                           3138 ;	game.c 485
                           3139 ;	genCall
                           3140 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0721 CD 34 04           3141 	call	_map_init
                           3142 ;	game.c 486
                           3143 ;	genGoto
   0724 C3 C9 07           3144 	jp	00122$
                           3145 ;	game.c 488
                           3146 ;	genLabel
   0727                    3147 00106$:
                           3148 ;	genAssign
                           3149 ;	AOP_HL for _current_map
   0727 21 04 19           3150 	ld	hl,#_current_map
   072A 36 06              3151 	ld	(hl),#0x06
                           3152 ;	game.c 489
                           3153 ;	genCall
                           3154 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   072C CD 34 04           3155 	call	_map_init
                           3156 ;	game.c 490
                           3157 ;	genGoto
   072F C3 C9 07           3158 	jp	00122$
                           3159 ;	game.c 492
                           3160 ;	genLabel
   0732                    3161 00107$:
                           3162 ;	genAssign
                           3163 ;	AOP_HL for _current_map
   0732 21 04 19           3164 	ld	hl,#_current_map
   0735 36 07              3165 	ld	(hl),#0x07
                           3166 ;	game.c 493
                           3167 ;	genCall
                           3168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0737 CD 34 04           3169 	call	_map_init
                           3170 ;	game.c 494
                           3171 ;	genGoto
   073A C3 C9 07           3172 	jp	00122$
                           3173 ;	game.c 496
                           3174 ;	genLabel
   073D                    3175 00108$:
                           3176 ;	genAssign
                           3177 ;	AOP_HL for _current_map
   073D 21 04 19           3178 	ld	hl,#_current_map
   0740 36 08              3179 	ld	(hl),#0x08
                           3180 ;	game.c 497
                           3181 ;	genCall
                           3182 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0742 CD 34 04           3183 	call	_map_init
                           3184 ;	game.c 498
                           3185 ;	genGoto
   0745 C3 C9 07           3186 	jp	00122$
                           3187 ;	game.c 500
                           3188 ;	genLabel
   0748                    3189 00109$:
                           3190 ;	genAssign
                           3191 ;	AOP_HL for _current_map
   0748 21 04 19           3192 	ld	hl,#_current_map
   074B 36 09              3193 	ld	(hl),#0x09
                           3194 ;	game.c 501
                           3195 ;	genCall
                           3196 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   074D CD 34 04           3197 	call	_map_init
                           3198 ;	game.c 502
                           3199 ;	genGoto
   0750 C3 C9 07           3200 	jp	00122$
                           3201 ;	game.c 504
                           3202 ;	genLabel
   0753                    3203 00110$:
                           3204 ;	genAssign
                           3205 ;	AOP_HL for _current_map
   0753 21 04 19           3206 	ld	hl,#_current_map
   0756 36 0A              3207 	ld	(hl),#0x0A
                           3208 ;	game.c 505
                           3209 ;	genCall
                           3210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0758 CD 34 04           3211 	call	_map_init
                           3212 ;	game.c 506
                           3213 ;	genGoto
   075B C3 C9 07           3214 	jp	00122$
                           3215 ;	game.c 508
                           3216 ;	genLabel
   075E                    3217 00111$:
                           3218 ;	genAssign
                           3219 ;	AOP_HL for _current_map
   075E 21 04 19           3220 	ld	hl,#_current_map
   0761 36 0B              3221 	ld	(hl),#0x0B
                           3222 ;	game.c 509
                           3223 ;	genCall
                           3224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0763 CD 34 04           3225 	call	_map_init
                           3226 ;	game.c 510
                           3227 ;	genGoto
   0766 C3 C9 07           3228 	jp	00122$
                           3229 ;	game.c 512
                           3230 ;	genLabel
   0769                    3231 00112$:
                           3232 ;	genAssign
                           3233 ;	AOP_HL for _current_map
   0769 21 04 19           3234 	ld	hl,#_current_map
   076C 36 0C              3235 	ld	(hl),#0x0C
                           3236 ;	game.c 513
                           3237 ;	genCall
                           3238 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076E CD 34 04           3239 	call	_map_init
                           3240 ;	game.c 514
                           3241 ;	genGoto
   0771 C3 C9 07           3242 	jp	00122$
                           3243 ;	game.c 516
                           3244 ;	genLabel
   0774                    3245 00113$:
                           3246 ;	genAssign
                           3247 ;	AOP_HL for _current_map
   0774 21 04 19           3248 	ld	hl,#_current_map
   0777 36 0D              3249 	ld	(hl),#0x0D
                           3250 ;	game.c 517
                           3251 ;	genCall
                           3252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0779 CD 34 04           3253 	call	_map_init
                           3254 ;	game.c 518
                           3255 ;	genGoto
   077C C3 C9 07           3256 	jp	00122$
                           3257 ;	game.c 520
                           3258 ;	genLabel
   077F                    3259 00114$:
                           3260 ;	genAssign
                           3261 ;	AOP_HL for _current_map
   077F 21 04 19           3262 	ld	hl,#_current_map
   0782 36 0E              3263 	ld	(hl),#0x0E
                           3264 ;	game.c 521
                           3265 ;	genCall
                           3266 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0784 CD 34 04           3267 	call	_map_init
                           3268 ;	game.c 522
                           3269 ;	genGoto
   0787 C3 C9 07           3270 	jp	00122$
                           3271 ;	game.c 524
                           3272 ;	genLabel
   078A                    3273 00115$:
                           3274 ;	genAssign
                           3275 ;	AOP_HL for _current_map
   078A 21 04 19           3276 	ld	hl,#_current_map
   078D 36 0F              3277 	ld	(hl),#0x0F
                           3278 ;	game.c 525
                           3279 ;	genCall
                           3280 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078F CD 34 04           3281 	call	_map_init
                           3282 ;	game.c 526
                           3283 ;	genGoto
   0792 C3 C9 07           3284 	jp	00122$
                           3285 ;	game.c 528
                           3286 ;	genLabel
   0795                    3287 00116$:
                           3288 ;	genAssign
                           3289 ;	AOP_HL for _current_map
   0795 21 04 19           3290 	ld	hl,#_current_map
   0798 36 10              3291 	ld	(hl),#0x10
                           3292 ;	game.c 529
                           3293 ;	genCall
                           3294 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079A CD 34 04           3295 	call	_map_init
                           3296 ;	game.c 530
                           3297 ;	genGoto
   079D C3 C9 07           3298 	jp	00122$
                           3299 ;	game.c 532
                           3300 ;	genLabel
   07A0                    3301 00117$:
                           3302 ;	genAssign
                           3303 ;	AOP_HL for _current_map
   07A0 21 04 19           3304 	ld	hl,#_current_map
   07A3 36 11              3305 	ld	(hl),#0x11
                           3306 ;	game.c 533
                           3307 ;	genCall
                           3308 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07A5 CD 34 04           3309 	call	_map_init
                           3310 ;	game.c 534
                           3311 ;	genGoto
   07A8 C3 C9 07           3312 	jp	00122$
                           3313 ;	game.c 536
                           3314 ;	genLabel
   07AB                    3315 00118$:
                           3316 ;	genAssign
                           3317 ;	AOP_HL for _current_map
   07AB 21 04 19           3318 	ld	hl,#_current_map
   07AE 36 12              3319 	ld	(hl),#0x12
                           3320 ;	game.c 537
                           3321 ;	genCall
                           3322 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B0 CD 34 04           3323 	call	_map_init
                           3324 ;	game.c 538
                           3325 ;	genGoto
   07B3 C3 C9 07           3326 	jp	00122$
                           3327 ;	game.c 540
                           3328 ;	genLabel
   07B6                    3329 00119$:
                           3330 ;	genAssign
                           3331 ;	AOP_HL for _current_map
   07B6 21 04 19           3332 	ld	hl,#_current_map
   07B9 36 13              3333 	ld	(hl),#0x13
                           3334 ;	game.c 541
                           3335 ;	genCall
                           3336 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BB CD 34 04           3337 	call	_map_init
                           3338 ;	game.c 542
                           3339 ;	genGoto
   07BE C3 C9 07           3340 	jp	00122$
                           3341 ;	game.c 544
                           3342 ;	genLabel
   07C1                    3343 00120$:
                           3344 ;	genAssign
                           3345 ;	AOP_HL for _current_map
   07C1 21 04 19           3346 	ld	hl,#_current_map
   07C4 36 14              3347 	ld	(hl),#0x14
                           3348 ;	game.c 545
                           3349 ;	genCall
                           3350 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C6 CD 34 04           3351 	call	_map_init
                           3352 ;	game.c 547
                           3353 ;	genLabel
   07C9                    3354 00122$:
                           3355 ;	genEndFunction
   07C9 E8 02              3356 	lda	sp,2(sp)
   07CB C9                 3357 	ret
   07CC                    3358 ___got_door_end:
                           3359 ;	game.c 552
                           3360 ;	genLabel
                           3361 ;	genFunction
                           3362 ;	---------------------------------
                           3363 ; Function is_ded
                           3364 ; ---------------------------------
   07CC                    3365 ___is_ded_start:
   07CC                    3366 _is_ded:
   07CC E8 FD              3367 	lda	sp,-3(sp)
                           3368 ;	game.c 556
                           3369 ;	genAssign
                           3370 ;	AOP_STK for 
   07CE F8 05              3371 	lda	hl,5(sp)
   07D0 4E                 3372 	ld	c,(hl)
   07D1 23                 3373 	inc	hl
   07D2 46                 3374 	ld	b,(hl)
                           3375 ;	genPointerGet
   07D3 59                 3376 	ld	e,c
   07D4 50                 3377 	ld	d,b
   07D5 1A                 3378 	ld	a,(de)
   07D6 4F                 3379 	ld	c,a
   07D7 13                 3380 	inc	de
   07D8 1A                 3381 	ld	a,(de)
   07D9 47                 3382 	ld	b,a
                           3383 ;	genPlus
                           3384 ;	AOP_STK for _is_ded_sloc0_1_0
                           3385 ;	genPlusIncr
                           3386 ;	Can't optimise plus by inc, falling back to the normal way
   07DA 21 09 00           3387 	ld	hl,#0x0009
   07DD 09                 3388 	add	hl,bc
   07DE 7D                 3389 	ld	a,l
   07DF 54                 3390 	ld	d,h
   07E0 F8 01              3391 	lda	hl,1(sp)
                           3392 ;	genPointerGet
                           3393 ;	AOP_STK for _is_ded_sloc0_1_0
   07E2 22                 3394 	ld	(hl+),a
   07E3 72                 3395 	ld	(hl),d
   07E4 5F                 3396 	ld	e,a
   07E5 1A                 3397 	ld	a,(de)
                           3398 ;	genIfx
   07E6 B7                 3399 	or	a,a
   07E7 CA 09 08           3400 	jp	z,00102$
                           3401 ;	genPlus
                           3402 ;	AOP_STK for _is_ded_sloc0_1_0
                           3403 ;	genPlusIncr
                           3404 ;	Can't optimise plus by inc, falling back to the normal way
   07EA 21 0B 00           3405 	ld	hl,#0x000B
   07ED 09                 3406 	add	hl,bc
   07EE 7D                 3407 	ld	a,l
   07EF 54                 3408 	ld	d,h
   07F0 F8 01              3409 	lda	hl,1(sp)
                           3410 ;	genPointerGet
                           3411 ;	AOP_STK for _is_ded_sloc0_1_0
                           3412 ;	AOP_STK for _is_ded_sloc1_1_0
   07F2 22                 3413 	ld	(hl+),a
   07F3 72                 3414 	ld	(hl),d
   07F4 5F                 3415 	ld	e,a
   07F5 1A                 3416 	ld	a,(de)
   07F6 2B                 3417 	dec	hl
   07F7 2B                 3418 	dec	hl
                           3419 ;	genCmpEq
                           3420 ;	AOP_STK for _is_ded_sloc1_1_0
                           3421 ; genCmpEq: left 1, right 1, result 0
   07F8 77                 3422 	ld      (hl),a
                           3423 ; Removed redundent load
   07F9 FE 01              3424 	cp	a,#0x01
   07FB C2 09 08           3425 	jp	nz,00102$
   07FE 18 03              3426 	jr	00113$
   0800                    3427 00112$:
   0800 C3 09 08           3428 	jp	00102$
   0803                    3429 00113$:
                           3430 ;	game.c 558
                           3431 ;	genRet
   0803 11 00 00           3432 	ld	de,#0x0000
   0806 C3 55 08           3433 	jp	00107$
                           3434 ;	genLabel
   0809                    3435 00102$:
                           3436 ;	game.c 562
                           3437 ;	genPlus
                           3438 ;	AOP_STK for _is_ded_sloc0_1_0
                           3439 ;	genPlusIncr
                           3440 ;	Can't optimise plus by inc, falling back to the normal way
   0809 21 01 00           3441 	ld	hl,#0x0001
   080C 09                 3442 	add	hl,bc
   080D 7D                 3443 	ld	a,l
   080E 54                 3444 	ld	d,h
   080F F8 01              3445 	lda	hl,1(sp)
                           3446 ;	genPointerGet
                           3447 ;	AOP_STK for _is_ded_sloc0_1_0
                           3448 ;	AOP_STK for _is_ded_sloc1_1_0
   0811 22                 3449 	ld	(hl+),a
   0812 72                 3450 	ld	(hl),d
   0813 5F                 3451 	ld	e,a
   0814 1A                 3452 	ld	a,(de)
   0815 2B                 3453 	dec	hl
   0816 2B                 3454 	dec	hl
   0817 77                 3455 	ld	(hl),a
                           3456 ;	genPointerGet
   0818 0A                 3457 	ld	a,(bc)
   0819 4F                 3458 	ld	c,a
                           3459 ;	genIpush
                           3460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3461 ;	AOP_STK for _is_ded_sloc1_1_0
   081A 7E                 3462 	ld	a,(hl)
   081B F5                 3463 	push	af
   081C 33                 3464 	inc	sp
                           3465 ;	genIpush
   081D 79                 3466 	ld	a,c
   081E F5                 3467 	push	af
   081F 33                 3468 	inc	sp
                           3469 ;	genCall
   0820 CD 61 0D           3470 	call	__get_map_position_from_xy
   0823 42                 3471 	ld	b,d
   0824 4B                 3472 	ld	c,e
   0825 E8 02              3473 	lda	sp,2(sp)
                           3474 ;	genAssign
                           3475 ;	(registers are the same)
                           3476 ;	game.c 565
                           3477 ;	genPlus
                           3478 ;	Can't optimise plus by inc, falling back to the normal way
   0827 21 05 19           3479 	ld	hl,#_map
   082A 09                 3480 	add	hl,bc
   082B 4D                 3481 	ld	c,l
   082C 44                 3482 	ld	b,h
                           3483 ;	genPointerGet
   082D 0A                 3484 	ld	a,(bc)
   082E 4F                 3485 	ld	c,a
                           3486 ;	genCast
                           3487 ; Removed redundent load
   082F 06 00              3488 	ld	b,#0x00
                           3489 ;	genCmpEq
                           3490 ; genCmpEq: left 2, right 2, result 0
   0831 79                 3491 	ld	a,c
   0832 FE 0B              3492 	cp	a,#0x0B
   0834 C2 3C 08           3493 	jp	nz,00114$
   0837 78                 3494 	ld	a,b
   0838 B7                 3495 	or	a,a
   0839 CA 4C 08           3496 	jp	z,00104$
   083C                    3497 00114$:
                           3498 ;	genCmpEq
                           3499 ; genCmpEq: left 2, right 2, result 0
   083C 79                 3500 	ld	a,c
   083D FE 0C              3501 	cp	a,#0x0C
   083F C2 49 08           3502 	jp	nz,00115$
   0842 78                 3503 	ld	a,b
   0843 B7                 3504 	or	a,a
   0844 C2 52 08           3505 	jp	nz,00106$
   0847 18 03              3506 	jr	00116$
   0849                    3507 00115$:
   0849 C3 52 08           3508 	jp	00106$
   084C                    3509 00116$:
                           3510 ;	game.c 569
                           3511 ;	genLabel
   084C                    3512 00104$:
                           3513 ;	genRet
   084C 11 01 00           3514 	ld	de,#0x0001
   084F C3 55 08           3515 	jp	00107$
                           3516 ;	game.c 570
                           3517 ;	genLabel
   0852                    3518 00106$:
                           3519 ;	game.c 571
                           3520 ;	genRet
   0852 11 00 00           3521 	ld	de,#0x0000
                           3522 ;	genLabel
   0855                    3523 00107$:
                           3524 ;	genEndFunction
   0855 E8 03              3525 	lda	sp,3(sp)
   0857 C9                 3526 	ret
   0858                    3527 ___is_ded_end:
                           3528 ;	game.c 592
                           3529 ;	genLabel
                           3530 ;	genFunction
                           3531 ;	---------------------------------
                           3532 ; Function dog1_power
                           3533 ; ---------------------------------
   0858                    3534 ___dog1_power_start:
   0858                    3535 _dog1_power:
   0858 E8 F8              3536 	lda	sp,-8(sp)
                           3537 ;	game.c 596
                           3538 ;	genAssign
                           3539 ;	AOP_HL for _player
   085A 21 B3 1A           3540 	ld	hl,#_player
   085D 4E                 3541 	ld	c,(hl)
   085E 23                 3542 	inc	hl
   085F 46                 3543 	ld	b,(hl)
                           3544 ;	genPlus
                           3545 ;	genPlusIncr
   0860 03                 3546 	inc	bc
   0861 03                 3547 	inc	bc
   0862 03                 3548 	inc	bc
   0863 03                 3549 	inc	bc
                           3550 ;	genPointerGet
   0864 0A                 3551 	ld	a,(bc)
   0865 4F                 3552 	ld	c,a
                           3553 ;	genAssign
                           3554 ;	AOP_HL for _player
                           3555 ;	AOP_STK for _dog1_power_sloc0_1_0
   0866 2B                 3556 	dec	hl
   0867 2A                 3557 	ld	a,(hl+)
   0868 5E                 3558 	ld	e,(hl)
   0869 F8 02              3559 	lda	hl,2(sp)
   086B 22                 3560 	ld	(hl+),a
   086C 73                 3561 	ld	(hl),e
                           3562 ;	genPlus
                           3563 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3564 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3565 ;	genPlusIncr
                           3566 ;	Can't optimise plus by inc, falling back to the normal way
   086D 2B                 3567 	dec	hl
   086E 5E                 3568 	ld	e,(hl)
   086F 23                 3569 	inc	hl
   0870 56                 3570 	ld	d,(hl)
   0871 21 0B 00           3571 	ld	hl,#0x000B
   0874 19                 3572 	add	hl,de
   0875 7D                 3573 	ld	a,l
   0876 54                 3574 	ld	d,h
   0877 F8 00              3575 	lda	hl,0(sp)
                           3576 ;	genPointerGet
                           3577 ;	AOP_STK for _dog1_power_sloc1_1_0
   0879 22                 3578 	ld	(hl+),a
   087A 72                 3579 	ld	(hl),d
   087B 5F                 3580 	ld	e,a
   087C 1A                 3581 	ld	a,(de)
   087D 47                 3582 	ld	b,a
                           3583 ;	genIpush
                           3584 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   087E 79                 3585 	ld	a,c
   087F F5                 3586 	push	af
   0880 33                 3587 	inc	sp
                           3588 ;	genIpush
   0881 78                 3589 	ld	a,b
   0882 F5                 3590 	push	af
   0883 33                 3591 	inc	sp
                           3592 ;	genCall
   0884 CD 00 00           3593 	call	_set_sprite_tile
   0887 E8 02              3594 	lda	sp,2(sp)
                           3595 ;	game.c 598
                           3596 ;	genAssign
                           3597 ;	AOP_HL for _player
   0889 21 B3 1A           3598 	ld	hl,#_player
   088C 4E                 3599 	ld	c,(hl)
   088D 23                 3600 	inc	hl
   088E 46                 3601 	ld	b,(hl)
                           3602 ;	genPlus
                           3603 ;	genPlusIncr
   088F 03                 3604 	inc	bc
                           3605 ;	genPointerGet
   0890 0A                 3606 	ld	a,(bc)
   0891 4F                 3607 	ld	c,a
                           3608 ;	genAssign
                           3609 ;	AOP_HL for _player
                           3610 ;	AOP_STK for _dog1_power_sloc1_1_0
   0892 2B                 3611 	dec	hl
   0893 2A                 3612 	ld	a,(hl+)
   0894 5E                 3613 	ld	e,(hl)
   0895 F8 00              3614 	lda	hl,0(sp)
   0897 22                 3615 	ld	(hl+),a
   0898 73                 3616 	ld	(hl),e
                           3617 ;	genPointerGet
                           3618 ;	AOP_STK for _dog1_power_sloc1_1_0
   0899 2B                 3619 	dec	hl
   089A 5E                 3620 	ld	e,(hl)
   089B 23                 3621 	inc	hl
   089C 56                 3622 	ld	d,(hl)
   089D 1A                 3623 	ld	a,(de)
   089E 47                 3624 	ld	b,a
                           3625 ;	genIpush
                           3626 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   089F 79                 3627 	ld	a,c
   08A0 F5                 3628 	push	af
   08A1 33                 3629 	inc	sp
                           3630 ;	genIpush
   08A2 78                 3631 	ld	a,b
   08A3 F5                 3632 	push	af
   08A4 33                 3633 	inc	sp
                           3634 ;	genCall
   08A5 CD 61 0D           3635 	call	__get_map_position_from_xy
   08A8 42                 3636 	ld	b,d
   08A9 4B                 3637 	ld	c,e
   08AA E8 02              3638 	lda	sp,2(sp)
                           3639 ;	genAssign
                           3640 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08AC F8 06              3641 	lda	hl,6(sp)
   08AE 71                 3642 	ld	(hl),c
   08AF 23                 3643 	inc	hl
   08B0 70                 3644 	ld	(hl),b
                           3645 ;	game.c 600
                           3646 ;	genAssign
                           3647 ;	AOP_HL for _player
   08B1 21 B3 1A           3648 	ld	hl,#_player
   08B4 4E                 3649 	ld	c,(hl)
   08B5 23                 3650 	inc	hl
   08B6 46                 3651 	ld	b,(hl)
                           3652 ;	genPlus
                           3653 ;	genPlusIncr
                           3654 ;	Can't optimise plus by inc, falling back to the normal way
   08B7 79                 3655 	ld	a,c
   08B8 C6 08              3656 	add	a,#0x08
   08BA 4F                 3657 	ld	c,a
   08BB 78                 3658 	ld	a,b
   08BC CE 00              3659 	adc	a,#0x00
   08BE 47                 3660 	ld	b,a
                           3661 ;	genPointerGet
   08BF 0A                 3662 	ld	a,(bc)
                           3663 ;	genIpush
                           3664 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08C0 4F                 3665 	ld	c,a
   08C1 F5                 3666 	push	af
   08C2 33                 3667 	inc	sp
                           3668 ;	genIpush
                           3669 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08C3 F8 07              3670 	lda	hl,7(sp)
   08C5 2A                 3671 	ld	a,(hl+)
   08C6 66                 3672 	ld	h,(hl)
   08C7 6F                 3673 	ld	l,a
   08C8 E5                 3674 	push	hl
                           3675 ;	genCall
   08C9 CD EF 0A           3676 	call	__get_next_map_position
   08CC 42                 3677 	ld	b,d
   08CD 4B                 3678 	ld	c,e
   08CE E8 03              3679 	lda	sp,3(sp)
                           3680 ;	genAssign
                           3681 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08D0 F8 06              3682 	lda	hl,6(sp)
   08D2 71                 3683 	ld	(hl),c
   08D3 23                 3684 	inc	hl
   08D4 70                 3685 	ld	(hl),b
                           3686 ;	game.c 601
                           3687 ;	genAssign
                           3688 ;	AOP_HL for _player
   08D5 21 B3 1A           3689 	ld	hl,#_player
   08D8 4E                 3690 	ld	c,(hl)
   08D9 23                 3691 	inc	hl
   08DA 46                 3692 	ld	b,(hl)
                           3693 ;	genPlus
                           3694 ;	genPlusIncr
                           3695 ;	Can't optimise plus by inc, falling back to the normal way
   08DB 79                 3696 	ld	a,c
   08DC C6 08              3697 	add	a,#0x08
   08DE 4F                 3698 	ld	c,a
   08DF 78                 3699 	ld	a,b
   08E0 CE 00              3700 	adc	a,#0x00
   08E2 47                 3701 	ld	b,a
                           3702 ;	genPointerGet
   08E3 0A                 3703 	ld	a,(bc)
                           3704 ;	genIpush
                           3705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08E4 4F                 3706 	ld	c,a
   08E5 F5                 3707 	push	af
   08E6 33                 3708 	inc	sp
                           3709 ;	genIpush
                           3710 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08E7 F8 07              3711 	lda	hl,7(sp)
   08E9 2A                 3712 	ld	a,(hl+)
   08EA 66                 3713 	ld	h,(hl)
   08EB 6F                 3714 	ld	l,a
   08EC E5                 3715 	push	hl
                           3716 ;	genCall
   08ED CD EF 0A           3717 	call	__get_next_map_position
   08F0 42                 3718 	ld	b,d
   08F1 4B                 3719 	ld	c,e
   08F2 E8 03              3720 	lda	sp,3(sp)
                           3721 ;	genAssign
                           3722 ;	AOP_STK for _dog1_power_map_position_next_1_1
   08F4 F8 04              3723 	lda	hl,4(sp)
   08F6 71                 3724 	ld	(hl),c
   08F7 23                 3725 	inc	hl
   08F8 70                 3726 	ld	(hl),b
                           3727 ;	game.c 604
                           3728 ;	genPlus
                           3729 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3730 ;	Can't optimise plus by inc, falling back to the normal way
   08F9 11 05 19           3731 	ld	de,#_map
   08FC 23                 3732 	inc	hl
   08FD 2A                 3733 	ld	a,(hl+)
   08FE 66                 3734 	ld	h,(hl)
   08FF 6F                 3735 	ld	l,a
   0900 19                 3736 	add	hl,de
   0901 4D                 3737 	ld	c,l
   0902 44                 3738 	ld	b,h
                           3739 ;	genPointerGet
   0903 0A                 3740 	ld	a,(bc)
   0904 4F                 3741 	ld	c,a
                           3742 ;	genCast
                           3743 ; Removed redundent load
   0905 06 00              3744 	ld	b,#0x00
                           3745 ;	genCmpEq
                           3746 ; genCmpEq: left 2, right 2, result 0
   0907 79                 3747 	ld	a,c
   0908 FE 0F              3748 	cp	a,#0x0F
   090A C2 12 09           3749 	jp	nz,00137$
   090D 78                 3750 	ld	a,b
   090E B7                 3751 	or	a,a
   090F CA 2D 09           3752 	jp	z,00103$
   0912                    3753 00137$:
                           3754 ;	genCmpEq
                           3755 ; genCmpEq: left 2, right 2, result 0
   0912 79                 3756 	ld	a,c
   0913 FE 10              3757 	cp	a,#0x10
   0915 C2 1D 09           3758 	jp	nz,00138$
   0918 78                 3759 	ld	a,b
   0919 B7                 3760 	or	a,a
   091A CA 2D 09           3761 	jp	z,00103$
   091D                    3762 00138$:
                           3763 ;	genCmpEq
                           3764 ; genCmpEq: left 2, right 2, result 0
   091D 79                 3765 	ld	a,c
   091E FE 2D              3766 	cp	a,#0x2D
   0920 C2 2A 09           3767 	jp	nz,00139$
   0923 78                 3768 	ld	a,b
   0924 B7                 3769 	or	a,a
   0925 C2 BF 0A           3770 	jp	nz,00122$
   0928 18 03              3771 	jr	00140$
   092A                    3772 00139$:
   092A C3 BF 0A           3773 	jp	00122$
   092D                    3774 00140$:
                           3775 ;	game.c 619
                           3776 ;	genLabel
   092D                    3777 00103$:
                           3778 ;	game.c 611
                           3779 ;	genIpush
                           3780 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3781 ;	AOP_STK for _dog1_power_map_position_next_1_1
   092D F8 04              3782 	lda	hl,4(sp)
   092F 2A                 3783 	ld	a,(hl+)
   0930 66                 3784 	ld	h,(hl)
   0931 6F                 3785 	ld	l,a
   0932 E5                 3786 	push	hl
                           3787 ;	genCall
   0933 CD 01 0F           3788 	call	_can_move_to_map_pos
   0936 42                 3789 	ld	b,d
   0937 4B                 3790 	ld	c,e
   0938 E8 02              3791 	lda	sp,2(sp)
                           3792 ;	genCmpEq
                           3793 ; genCmpEq: left 2, right 2, result 0
   093A 79                 3794 	ld	a,c
   093B B0                 3795 	or	a,b
   093C CA BF 0A           3796 	jp	z,00122$
   093F                    3797 00141$:
                           3798 ;	game.c 619
                           3799 ;	genPlus
                           3800 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3801 ;	Can't optimise plus by inc, falling back to the normal way
   093F 11 05 19           3802 	ld	de,#_map
   0942 F8 04              3803 	lda	hl,4(sp)
   0944 2A                 3804 	ld	a,(hl+)
   0945 66                 3805 	ld	h,(hl)
   0946 6F                 3806 	ld	l,a
   0947 19                 3807 	add	hl,de
   0948 4D                 3808 	ld	c,l
   0949 44                 3809 	ld	b,h
                           3810 ;	genPointerGet
   094A 0A                 3811 	ld	a,(bc)
   094B 4F                 3812 	ld	c,a
                           3813 ;	genCast
                           3814 ; Removed redundent load
   094C 06 00              3815 	ld	b,#0x00
                           3816 ;	genCmpLt
   094E 79                 3817 	ld	a,c
   094F D6 0D              3818 	sub	a,#0x0D
   0951 78                 3819 	ld	a,b
   0952 DE 00              3820 	sbc	a,#0x00
   0954 DA 7D 09           3821 	jp	c,00106$
                           3822 ;	game.c 620
                           3823 ;	genCmpEq
                           3824 ; genCmpEq: left 2, right 2, result 0
   0957 79                 3825 	ld	a,c
   0958 FE 2F              3826 	cp	a,#0x2F
   095A C2 62 09           3827 	jp	nz,00142$
   095D 78                 3828 	ld	a,b
   095E B7                 3829 	or	a,a
   095F CA 7D 09           3830 	jp	z,00106$
   0962                    3831 00142$:
                           3832 ;	game.c 621
                           3833 ;	genCmpEq
                           3834 ; genCmpEq: left 2, right 2, result 0
   0962 79                 3835 	ld	a,c
   0963 FE 30              3836 	cp	a,#0x30
   0965 C2 6D 09           3837 	jp	nz,00143$
   0968 78                 3838 	ld	a,b
   0969 B7                 3839 	or	a,a
   096A CA 7D 09           3840 	jp	z,00106$
   096D                    3841 00143$:
                           3842 ;	game.c 622
                           3843 ;	genCmpEq
                           3844 ; genCmpEq: left 2, right 2, result 0
   096D 79                 3845 	ld	a,c
   096E FE 2A              3846 	cp	a,#0x2A
   0970 C2 7A 09           3847 	jp	nz,00144$
   0973 78                 3848 	ld	a,b
   0974 B7                 3849 	or	a,a
   0975 C2 B1 09           3850 	jp	nz,00107$
   0978 18 03              3851 	jr	00145$
   097A                    3852 00144$:
   097A C3 B1 09           3853 	jp	00107$
   097D                    3854 00145$:
                           3855 ;	genLabel
   097D                    3856 00106$:
                           3857 ;	game.c 624
                           3858 ;	genAssign
                           3859 ;	AOP_HL for _player
                           3860 ;	AOP_STK for _dog1_power_sloc1_1_0
   097D 21 B3 1A           3861 	ld	hl,#_player
   0980 2A                 3862 	ld	a,(hl+)
   0981 5E                 3863 	ld	e,(hl)
   0982 F8 00              3864 	lda	hl,0(sp)
   0984 22                 3865 	ld	(hl+),a
   0985 73                 3866 	ld	(hl),e
                           3867 ;	genPlus
                           3868 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3869 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3870 ;	genPlusIncr
                           3871 ;	Can't optimise plus by inc, falling back to the normal way
   0986 2B                 3872 	dec	hl
   0987 5E                 3873 	ld	e,(hl)
   0988 23                 3874 	inc	hl
   0989 56                 3875 	ld	d,(hl)
   098A 21 08 00           3876 	ld	hl,#0x0008
   098D 19                 3877 	add	hl,de
   098E 7D                 3878 	ld	a,l
   098F 54                 3879 	ld	d,h
   0990 F8 02              3880 	lda	hl,2(sp)
                           3881 ;	genPointerGet
                           3882 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3883 ;	AOP_STK for _dog1_power_sloc1_1_0
   0992 22                 3884 	ld	(hl+),a
   0993 72                 3885 	ld	(hl),d
   0994 5F                 3886 	ld	e,a
   0995 1A                 3887 	ld	a,(de)
   0996 F8 00              3888 	lda	hl,0(sp)
   0998 77                 3889 	ld	(hl),a
                           3890 ;	genIpush
                           3891 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0999 C5                 3892 	push	bc
                           3893 ;	AOP_STK for _dog1_power_map_position_next_1_1
   099A F8 06              3894 	lda	hl,6(sp)
   099C 2A                 3895 	ld	a,(hl+)
   099D 66                 3896 	ld	h,(hl)
   099E 6F                 3897 	ld	l,a
   099F E5                 3898 	push	hl
                           3899 ;	genIpush
                           3900 ;	AOP_STK for _dog1_power_sloc1_1_0
   09A0 F8 04              3901 	lda	hl,4(sp)
   09A2 7E                 3902 	ld	a,(hl)
   09A3 F5                 3903 	push	af
   09A4 33                 3904 	inc	sp
                           3905 ;	genIpush
                           3906 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09A5 F8 0B              3907 	lda	hl,11(sp)
   09A7 2A                 3908 	ld	a,(hl+)
   09A8 66                 3909 	ld	h,(hl)
   09A9 6F                 3910 	ld	l,a
   09AA E5                 3911 	push	hl
                           3912 ;	genCall
   09AB CD A3 0B           3913 	call	_dog1_power_apply
   09AE E8 05              3914 	lda	sp,5(sp)
   09B0 C1                 3915 	pop	bc
                           3916 ;	genLabel
   09B1                    3917 00107$:
                           3918 ;	game.c 628
                           3919 ;	genCmpEq
                           3920 ; genCmpEq: left 2, right 2, result 0
   09B1 79                 3921 	ld	a,c
   09B2 FE 0D              3922 	cp	a,#0x0D
   09B4 C2 BC 09           3923 	jp	nz,00146$
   09B7 78                 3924 	ld	a,b
   09B8 B7                 3925 	or	a,a
   09B9 CA CC 09           3926 	jp	z,00119$
   09BC                    3927 00146$:
                           3928 ;	genCmpEq
                           3929 ; genCmpEq: left 2, right 2, result 0
   09BC 79                 3930 	ld	a,c
   09BD FE 0E              3931 	cp	a,#0x0E
   09BF C2 C9 09           3932 	jp	nz,00147$
   09C2 78                 3933 	ld	a,b
   09C3 B7                 3934 	or	a,a
   09C4 C2 BF 0A           3935 	jp	nz,00122$
   09C7 18 03              3936 	jr	00148$
   09C9                    3937 00147$:
   09C9 C3 BF 0A           3938 	jp	00122$
   09CC                    3939 00148$:
                           3940 ;	genLabel
   09CC                    3941 00119$:
                           3942 ;	game.c 630
                           3943 ;	genAssign
                           3944 ;	AOP_HL for _player
   09CC 21 B3 1A           3945 	ld	hl,#_player
   09CF 4E                 3946 	ld	c,(hl)
   09D0 23                 3947 	inc	hl
   09D1 46                 3948 	ld	b,(hl)
                           3949 ;	genPlus
                           3950 ;	genPlusIncr
                           3951 ;	Can't optimise plus by inc, falling back to the normal way
   09D2 79                 3952 	ld	a,c
   09D3 C6 08              3953 	add	a,#0x08
   09D5 4F                 3954 	ld	c,a
   09D6 78                 3955 	ld	a,b
   09D7 CE 00              3956 	adc	a,#0x00
   09D9 47                 3957 	ld	b,a
                           3958 ;	genPointerGet
   09DA 0A                 3959 	ld	a,(bc)
   09DB 4F                 3960 	ld	c,a
                           3961 ;	genIpush
                           3962 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3963 ;	AOP_STK for _dog1_power_map_position_next_1_1
   09DC F8 04              3964 	lda	hl,4(sp)
   09DE 2A                 3965 	ld	a,(hl+)
   09DF 66                 3966 	ld	h,(hl)
   09E0 6F                 3967 	ld	l,a
   09E1 E5                 3968 	push	hl
                           3969 ;	genIpush
   09E2 79                 3970 	ld	a,c
   09E3 F5                 3971 	push	af
   09E4 33                 3972 	inc	sp
                           3973 ;	genIpush
                           3974 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09E5 F8 09              3975 	lda	hl,9(sp)
   09E7 2A                 3976 	ld	a,(hl+)
   09E8 66                 3977 	ld	h,(hl)
   09E9 6F                 3978 	ld	l,a
   09EA E5                 3979 	push	hl
                           3980 ;	genCall
   09EB CD A3 0B           3981 	call	_dog1_power_apply
   09EE E8 05              3982 	lda	sp,5(sp)
                           3983 ;	game.c 631
                           3984 ;	genAssign
                           3985 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3986 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09F0 F8 04              3987 	lda	hl,4(sp)
   09F2 2A                 3988 	ld	a,(hl+)
   09F3 5E                 3989 	ld	e,(hl)
   09F4 23                 3990 	inc	hl
   09F5 22                 3991 	ld	(hl+),a
   09F6 73                 3992 	ld	(hl),e
                           3993 ;	game.c 632
                           3994 ;	genAssign
                           3995 ;	AOP_HL for _player
   09F7 21 B3 1A           3996 	ld	hl,#_player
   09FA 4E                 3997 	ld	c,(hl)
   09FB 23                 3998 	inc	hl
   09FC 46                 3999 	ld	b,(hl)
                           4000 ;	genPlus
                           4001 ;	genPlusIncr
                           4002 ;	Can't optimise plus by inc, falling back to the normal way
   09FD 79                 4003 	ld	a,c
   09FE C6 08              4004 	add	a,#0x08
   0A00 4F                 4005 	ld	c,a
   0A01 78                 4006 	ld	a,b
   0A02 CE 00              4007 	adc	a,#0x00
   0A04 47                 4008 	ld	b,a
                           4009 ;	genPointerGet
   0A05 0A                 4010 	ld	a,(bc)
                           4011 ;	genIpush
                           4012 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A06 4F                 4013 	ld	c,a
   0A07 F5                 4014 	push	af
   0A08 33                 4015 	inc	sp
                           4016 ;	genIpush
                           4017 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A09 F8 05              4018 	lda	hl,5(sp)
   0A0B 2A                 4019 	ld	a,(hl+)
   0A0C 66                 4020 	ld	h,(hl)
   0A0D 6F                 4021 	ld	l,a
   0A0E E5                 4022 	push	hl
                           4023 ;	genCall
   0A0F CD EF 0A           4024 	call	__get_next_map_position
   0A12 42                 4025 	ld	b,d
   0A13 4B                 4026 	ld	c,e
   0A14 E8 03              4027 	lda	sp,3(sp)
                           4028 ;	genAssign
                           4029 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A16 F8 04              4030 	lda	hl,4(sp)
   0A18 71                 4031 	ld	(hl),c
   0A19 23                 4032 	inc	hl
   0A1A 70                 4033 	ld	(hl),b
                           4034 ;	game.c 634
                           4035 ;	genLabel
   0A1B                    4036 00116$:
                           4037 ;	genPlus
                           4038 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           4039 ;	Can't optimise plus by inc, falling back to the normal way
   0A1B 11 05 19           4040 	ld	de,#_map
   0A1E F8 06              4041 	lda	hl,6(sp)
   0A20 2A                 4042 	ld	a,(hl+)
   0A21 66                 4043 	ld	h,(hl)
   0A22 6F                 4044 	ld	l,a
   0A23 19                 4045 	add	hl,de
   0A24 4D                 4046 	ld	c,l
   0A25 44                 4047 	ld	b,h
                           4048 ;	genPointerGet
   0A26 0A                 4049 	ld	a,(bc)
   0A27 4F                 4050 	ld	c,a
                           4051 ;	genCast
                           4052 ; Removed redundent load
   0A28 06 00              4053 	ld	b,#0x00
                           4054 ;	genCmpEq
                           4055 ; genCmpEq: left 2, right 2, result 0
   0A2A 79                 4056 	ld	a,c
   0A2B FE 0D              4057 	cp	a,#0x0D
   0A2D C2 35 0A           4058 	jp	nz,00149$
   0A30 78                 4059 	ld	a,b
   0A31 B7                 4060 	or	a,a
   0A32 CA 5B 0A           4061 	jp	z,00117$
   0A35                    4062 00149$:
                           4063 ;	game.c 635
                           4064 ;	genCmpEq
                           4065 ; genCmpEq: left 2, right 2, result 0
   0A35 79                 4066 	ld	a,c
   0A36 FE 0E              4067 	cp	a,#0x0E
   0A38 C2 40 0A           4068 	jp	nz,00150$
   0A3B 78                 4069 	ld	a,b
   0A3C B7                 4070 	or	a,a
   0A3D CA 5B 0A           4071 	jp	z,00117$
   0A40                    4072 00150$:
                           4073 ;	game.c 636
                           4074 ;	genCmpEq
                           4075 ; genCmpEq: left 2, right 2, result 0
   0A40 79                 4076 	ld	a,c
   0A41 FE 0F              4077 	cp	a,#0x0F
   0A43 C2 4B 0A           4078 	jp	nz,00151$
   0A46 78                 4079 	ld	a,b
   0A47 B7                 4080 	or	a,a
   0A48 CA 5B 0A           4081 	jp	z,00117$
   0A4B                    4082 00151$:
                           4083 ;	game.c 637
                           4084 ;	genCmpEq
                           4085 ; genCmpEq: left 2, right 2, result 0
   0A4B 79                 4086 	ld	a,c
   0A4C FE 10              4087 	cp	a,#0x10
   0A4E C2 58 0A           4088 	jp	nz,00152$
   0A51 78                 4089 	ld	a,b
   0A52 B7                 4090 	or	a,a
   0A53 C2 BF 0A           4091 	jp	nz,00122$
   0A56 18 03              4092 	jr	00153$
   0A58                    4093 00152$:
   0A58 C3 BF 0A           4094 	jp	00122$
   0A5B                    4095 00153$:
                           4096 ;	genLabel
   0A5B                    4097 00117$:
                           4098 ;	game.c 639
                           4099 ;	genIpush
                           4100 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4101 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A5B F8 04              4102 	lda	hl,4(sp)
   0A5D 2A                 4103 	ld	a,(hl+)
   0A5E 66                 4104 	ld	h,(hl)
   0A5F 6F                 4105 	ld	l,a
   0A60 E5                 4106 	push	hl
                           4107 ;	genCall
   0A61 CD 01 0F           4108 	call	_can_move_to_map_pos
   0A64 42                 4109 	ld	b,d
   0A65 4B                 4110 	ld	c,e
   0A66 E8 02              4111 	lda	sp,2(sp)
                           4112 ;	genCmpEq
                           4113 ; genCmpEq: left 2, right 2, result 0
   0A68 79                 4114 	ld	a,c
   0A69 B0                 4115 	or	a,b
   0A6A CA BF 0A           4116 	jp	z,00122$
   0A6D                    4117 00154$:
                           4118 ;	game.c 642
                           4119 ;	genAssign
                           4120 ;	AOP_HL for _player
   0A6D 21 B3 1A           4121 	ld	hl,#_player
   0A70 4E                 4122 	ld	c,(hl)
   0A71 23                 4123 	inc	hl
   0A72 46                 4124 	ld	b,(hl)
                           4125 ;	genPlus
                           4126 ;	genPlusIncr
                           4127 ;	Can't optimise plus by inc, falling back to the normal way
   0A73 79                 4128 	ld	a,c
   0A74 C6 08              4129 	add	a,#0x08
   0A76 4F                 4130 	ld	c,a
   0A77 78                 4131 	ld	a,b
   0A78 CE 00              4132 	adc	a,#0x00
   0A7A 47                 4133 	ld	b,a
                           4134 ;	genPointerGet
   0A7B 0A                 4135 	ld	a,(bc)
   0A7C 4F                 4136 	ld	c,a
                           4137 ;	genIpush
                           4138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4139 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A7D F8 04              4140 	lda	hl,4(sp)
   0A7F 2A                 4141 	ld	a,(hl+)
   0A80 66                 4142 	ld	h,(hl)
   0A81 6F                 4143 	ld	l,a
   0A82 E5                 4144 	push	hl
                           4145 ;	genIpush
   0A83 79                 4146 	ld	a,c
   0A84 F5                 4147 	push	af
   0A85 33                 4148 	inc	sp
                           4149 ;	genIpush
                           4150 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A86 F8 09              4151 	lda	hl,9(sp)
   0A88 2A                 4152 	ld	a,(hl+)
   0A89 66                 4153 	ld	h,(hl)
   0A8A 6F                 4154 	ld	l,a
   0A8B E5                 4155 	push	hl
                           4156 ;	genCall
   0A8C CD A3 0B           4157 	call	_dog1_power_apply
   0A8F E8 05              4158 	lda	sp,5(sp)
                           4159 ;	game.c 643
                           4160 ;	genAssign
                           4161 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           4162 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A91 F8 04              4163 	lda	hl,4(sp)
   0A93 2A                 4164 	ld	a,(hl+)
   0A94 5E                 4165 	ld	e,(hl)
   0A95 23                 4166 	inc	hl
   0A96 22                 4167 	ld	(hl+),a
   0A97 73                 4168 	ld	(hl),e
                           4169 ;	game.c 644
                           4170 ;	genAssign
                           4171 ;	AOP_HL for _player
   0A98 21 B3 1A           4172 	ld	hl,#_player
   0A9B 4E                 4173 	ld	c,(hl)
   0A9C 23                 4174 	inc	hl
   0A9D 46                 4175 	ld	b,(hl)
                           4176 ;	genPlus
                           4177 ;	genPlusIncr
                           4178 ;	Can't optimise plus by inc, falling back to the normal way
   0A9E 79                 4179 	ld	a,c
   0A9F C6 08              4180 	add	a,#0x08
   0AA1 4F                 4181 	ld	c,a
   0AA2 78                 4182 	ld	a,b
   0AA3 CE 00              4183 	adc	a,#0x00
   0AA5 47                 4184 	ld	b,a
                           4185 ;	genPointerGet
   0AA6 0A                 4186 	ld	a,(bc)
                           4187 ;	genIpush
                           4188 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AA7 4F                 4189 	ld	c,a
   0AA8 F5                 4190 	push	af
   0AA9 33                 4191 	inc	sp
                           4192 ;	genIpush
                           4193 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AAA F8 05              4194 	lda	hl,5(sp)
   0AAC 2A                 4195 	ld	a,(hl+)
   0AAD 66                 4196 	ld	h,(hl)
   0AAE 6F                 4197 	ld	l,a
   0AAF E5                 4198 	push	hl
                           4199 ;	genCall
   0AB0 CD EF 0A           4200 	call	__get_next_map_position
   0AB3 42                 4201 	ld	b,d
   0AB4 4B                 4202 	ld	c,e
   0AB5 E8 03              4203 	lda	sp,3(sp)
                           4204 ;	genAssign
                           4205 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AB7 F8 04              4206 	lda	hl,4(sp)
   0AB9 71                 4207 	ld	(hl),c
   0ABA 23                 4208 	inc	hl
   0ABB 70                 4209 	ld	(hl),b
                           4210 ;	genGoto
   0ABC C3 1B 0A           4211 	jp	00116$
                           4212 ;	game.c 654
                           4213 ;	genLabel
   0ABF                    4214 00122$:
                           4215 ;	game.c 659
                           4216 ;	genAssign
                           4217 ;	AOP_HL for _player
   0ABF 21 B3 1A           4218 	ld	hl,#_player
   0AC2 4E                 4219 	ld	c,(hl)
   0AC3 23                 4220 	inc	hl
   0AC4 46                 4221 	ld	b,(hl)
                           4222 ;	genPlus
                           4223 ;	genPlusIncr
   0AC5 03                 4224 	inc	bc
   0AC6 03                 4225 	inc	bc
                           4226 ;	genPointerGet
   0AC7 0A                 4227 	ld	a,(bc)
   0AC8 4F                 4228 	ld	c,a
                           4229 ;	genAssign
                           4230 ;	AOP_HL for _player
                           4231 ;	AOP_STK for _dog1_power_sloc1_1_0
   0AC9 2B                 4232 	dec	hl
   0ACA 2A                 4233 	ld	a,(hl+)
   0ACB 5E                 4234 	ld	e,(hl)
   0ACC F8 00              4235 	lda	hl,0(sp)
   0ACE 22                 4236 	ld	(hl+),a
   0ACF 73                 4237 	ld	(hl),e
                           4238 ;	genPlus
                           4239 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4240 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4241 ;	genPlusIncr
                           4242 ;	Can't optimise plus by inc, falling back to the normal way
   0AD0 2B                 4243 	dec	hl
   0AD1 5E                 4244 	ld	e,(hl)
   0AD2 23                 4245 	inc	hl
   0AD3 56                 4246 	ld	d,(hl)
   0AD4 21 0B 00           4247 	ld	hl,#0x000B
   0AD7 19                 4248 	add	hl,de
   0AD8 7D                 4249 	ld	a,l
   0AD9 54                 4250 	ld	d,h
   0ADA F8 02              4251 	lda	hl,2(sp)
                           4252 ;	genPointerGet
                           4253 ;	AOP_STK for _dog1_power_sloc0_1_0
   0ADC 22                 4254 	ld	(hl+),a
   0ADD 72                 4255 	ld	(hl),d
   0ADE 5F                 4256 	ld	e,a
   0ADF 1A                 4257 	ld	a,(de)
   0AE0 47                 4258 	ld	b,a
                           4259 ;	genIpush
                           4260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AE1 79                 4261 	ld	a,c
   0AE2 F5                 4262 	push	af
   0AE3 33                 4263 	inc	sp
                           4264 ;	genIpush
   0AE4 78                 4265 	ld	a,b
   0AE5 F5                 4266 	push	af
   0AE6 33                 4267 	inc	sp
                           4268 ;	genCall
   0AE7 CD 00 00           4269 	call	_set_sprite_tile
   0AEA E8 02              4270 	lda	sp,2(sp)
                           4271 ;	genLabel
   0AEC                    4272 00123$:
                           4273 ;	genEndFunction
   0AEC E8 08              4274 	lda	sp,8(sp)
   0AEE C9                 4275 	ret
   0AEF                    4276 ___dog1_power_end:
                           4277 ;	game.c 662
                           4278 ;	genLabel
                           4279 ;	genFunction
                           4280 ;	---------------------------------
                           4281 ; Function _get_next_map_position
                           4282 ; ---------------------------------
   0AEF                    4283 ____get_next_map_position_start:
   0AEF                    4284 __get_next_map_position:
   0AEF E8 FE              4285 	lda	sp,-2(sp)
                           4286 ;	game.c 663
                           4287 ;	genCmpLt
                           4288 ;	AOP_STK for 
   0AF1 F8 06              4289 	lda	hl,6(sp)
   0AF3 7E                 4290 	ld	a,(hl)
   0AF4 FE 01              4291 	cp	#0x01
   0AF6 DA 9B 0B           4292 	jp	c,00113$
                           4293 ;	genCmpGt
                           4294 ;	AOP_STK for 
   0AF9 3E 04              4295 	ld	a,#0x04
   0AFB 96                 4296 	sub	a,(hl)
   0AFC DA 9B 0B           4297 	jp	c,00113$
                           4298 ;	genMinus
                           4299 ;	AOP_STK for 
   0AFF 7E                 4300 	ld	a,(hl)
   0B00 C6 FF              4301 	add	a,#0xFF
   0B02 4F                 4302 	ld	c,a
                           4303 ;	genJumpTab
   0B03 59                 4304 	ld	e,c
   0B04 16 00              4305 	ld	d,#0x00
   0B06 21 0D 0B           4306 	ld	hl,#00122$
   0B09 19                 4307 	add	hl,de
   0B0A 19                 4308 	add	hl,de
   0B0B 19                 4309 	add	hl,de
   0B0C E9                 4310 	jp	(hl)
   0B0D                    4311 00122$:
   0B0D C3 19 0B           4312 	jp	00103$
   0B10 C3 38 0B           4313 	jp	00106$
   0B13 C3 5E 0B           4314 	jp	00109$
   0B16 C3 7B 0B           4315 	jp	00112$
                           4316 ;	game.c 668
                           4317 ;	genLabel
   0B19                    4318 00103$:
                           4319 ;	game.c 665
                           4320 ;	genCmpGt
                           4321 ;	AOP_STK for 
   0B19 3E 14              4322 	ld	a,#0x14
   0B1B F8 04              4323 	lda	hl,4(sp)
   0B1D 96                 4324 	sub	a,(hl)
   0B1E 3E 00              4325 	ld	a,#0x00
   0B20 23                 4326 	inc	hl
   0B21 9E                 4327 	sbc	a,(hl)
   0B22 D2 9B 0B           4328 	jp	nc,00113$
                           4329 ;	game.c 666
                           4330 ;	genMinus
                           4331 ;	AOP_STK for 
   0B25 2B                 4332 	dec	hl
   0B26 5E                 4333 	ld	e,(hl)
   0B27 23                 4334 	inc	hl
   0B28 56                 4335 	ld	d,(hl)
   0B29 21 14 00           4336 	ld	hl,#0x0014
   0B2C 7B                 4337 	ld	a,e
   0B2D 95                 4338 	sub	a,l
   0B2E 5F                 4339 	ld	e,a
   0B2F 7A                 4340 	ld	a,d
   0B30 9C                 4341 	sbc	a,h
   0B31 F8 05              4342 	lda	hl,5(sp)
   0B33 32                 4343 	ld      (hl-),a
   0B34 73                 4344 	ld	(hl),e
                           4345 ;	game.c 668
                           4346 ;	genGoto
   0B35 C3 9B 0B           4347 	jp	00113$
                           4348 ;	game.c 673
                           4349 ;	genLabel
   0B38                    4350 00106$:
                           4351 ;	game.c 670
                           4352 ;	genPlus
                           4353 ;	AOP_STK for 
                           4354 ;	genPlusIncr
   0B38 F8 04              4355 	lda	hl,4(sp)
   0B3A 4E                 4356 	ld	c,(hl)
   0B3B 23                 4357 	inc	hl
   0B3C 46                 4358 	ld	b,(hl)
   0B3D 03                 4359 	inc	bc
                           4360 ;	genIpush
                           4361 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B3E C5                 4362 	push	bc
   0B3F 21 14 00           4363 	ld	hl,#0x0014
   0B42 E5                 4364 	push	hl
                           4365 ;	genIpush
   0B43 C5                 4366 	push	bc
                           4367 ;	genCall
   0B44 CD 00 00           4368 	call	__moduint_rrx_s
                           4369 ;	AOP_STK for __get_next_map_position_sloc0_1_0
   0B47 F8 07              4370 	lda	hl,7(sp)
   0B49 72                 4371 	ld	(hl),d
   0B4A 2B                 4372 	dec	hl
   0B4B 73                 4373 	ld	(hl),e
   0B4C E8 04              4374 	lda	sp,4(sp)
   0B4E C1                 4375 	pop	bc
                           4376 ;	genCmpEq
                           4377 ;	AOP_STK for __get_next_map_position_sloc0_1_0
                           4378 ; genCmpEq: left 2, right 2, result 0
   0B4F F8 00              4379 	lda	hl,0(sp)
   0B51 2A                 4380 	ld	a,(hl+)
   0B52 B6                 4381 	or	a,(hl)
   0B53 CA 9B 0B           4382 	jp	z,00113$
   0B56                    4383 00123$:
                           4384 ;	game.c 671
                           4385 ;	genAssign
                           4386 ;	(registers are the same)
                           4387 ;	genAssign
                           4388 ;	AOP_STK for 
   0B56 F8 04              4389 	lda	hl,4(sp)
   0B58 71                 4390 	ld	(hl),c
   0B59 23                 4391 	inc	hl
   0B5A 70                 4392 	ld	(hl),b
                           4393 ;	game.c 673
                           4394 ;	genGoto
   0B5B C3 9B 0B           4395 	jp	00113$
                           4396 ;	game.c 678
                           4397 ;	genLabel
   0B5E                    4398 00109$:
                           4399 ;	game.c 675
                           4400 ;	genCmpLt
                           4401 ;	AOP_STK for 
   0B5E F8 04              4402 	lda	hl,4(sp)
   0B60 7E                 4403 	ld	a,(hl)
   0B61 D6 54              4404 	sub	a,#0x54
   0B63 23                 4405 	inc	hl
   0B64 7E                 4406 	ld	a,(hl)
   0B65 DE 01              4407 	sbc	a,#0x01
   0B67 D2 9B 0B           4408 	jp	nc,00113$
                           4409 ;	game.c 676
                           4410 ;	genPlus
                           4411 ;	AOP_STK for 
                           4412 ;	genPlusIncr
                           4413 ;	Can't optimise plus by inc, falling back to the normal way
   0B6A 2B                 4414 	dec	hl
   0B6B 5E                 4415 	ld	e,(hl)
   0B6C 23                 4416 	inc	hl
   0B6D 56                 4417 	ld	d,(hl)
   0B6E 21 14 00           4418 	ld	hl,#0x0014
   0B71 19                 4419 	add	hl,de
   0B72 7D                 4420 	ld	a,l
   0B73 54                 4421 	ld	d,h
   0B74 F8 04              4422 	lda	hl,4(sp)
   0B76 22                 4423 	ld	(hl+),a
   0B77 72                 4424 	ld	(hl),d
                           4425 ;	game.c 678
                           4426 ;	genGoto
   0B78 C3 9B 0B           4427 	jp	00113$
                           4428 ;	game.c 684
                           4429 ;	genLabel
   0B7B                    4430 00112$:
                           4431 ;	game.c 680
                           4432 ;	genIpush
                           4433 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B7B 21 14 00           4434 	ld	hl,#0x0014
   0B7E E5                 4435 	push	hl
                           4436 ;	genIpush
                           4437 ;	AOP_STK for 
   0B7F F8 06              4438 	lda	hl,6(sp)
   0B81 2A                 4439 	ld	a,(hl+)
   0B82 66                 4440 	ld	h,(hl)
   0B83 6F                 4441 	ld	l,a
   0B84 E5                 4442 	push	hl
                           4443 ;	genCall
   0B85 CD 00 00           4444 	call	__moduint_rrx_s
   0B88 42                 4445 	ld	b,d
   0B89 4B                 4446 	ld	c,e
   0B8A E8 04              4447 	lda	sp,4(sp)
                           4448 ;	genCmpEq
                           4449 ; genCmpEq: left 2, right 2, result 0
   0B8C 79                 4450 	ld	a,c
   0B8D B0                 4451 	or	a,b
   0B8E CA 9B 0B           4452 	jp	z,00113$
   0B91                    4453 00124$:
                           4454 ;	game.c 681
                           4455 ;	genMinus
                           4456 ;	AOP_STK for 
   0B91 F8 04              4457 	lda	hl,4(sp)
   0B93 5E                 4458 	ld	e,(hl)
   0B94 23                 4459 	inc	hl
   0B95 56                 4460 	ld	d,(hl)
   0B96 1B                 4461 	dec	de
   0B97 2B                 4462 	dec	hl
   0B98 73                 4463 	ld	(hl),e
   0B99 23                 4464 	inc	hl
   0B9A 72                 4465 	ld	(hl),d
                           4466 ;	game.c 685
                           4467 ;	genLabel
   0B9B                    4468 00113$:
                           4469 ;	game.c 686
                           4470 ;	genRet
                           4471 ;	AOP_STK for 
   0B9B F8 04              4472 	lda	hl,4(sp)
   0B9D 5E                 4473 	ld	e,(hl)
   0B9E 23                 4474 	inc	hl
   0B9F 56                 4475 	ld	d,(hl)
                           4476 ;	genLabel
   0BA0                    4477 00114$:
                           4478 ;	genEndFunction
   0BA0 E8 02              4479 	lda	sp,2(sp)
   0BA2 C9                 4480 	ret
   0BA3                    4481 ____get_next_map_position_end:
                           4482 ;	game.c 689
                           4483 ;	genLabel
                           4484 ;	genFunction
                           4485 ;	---------------------------------
                           4486 ; Function dog1_power_apply
                           4487 ; ---------------------------------
   0BA3                    4488 ___dog1_power_apply_start:
   0BA3                    4489 _dog1_power_apply:
   0BA3 E8 F9              4490 	lda	sp,-7(sp)
                           4491 ;	game.c 695
                           4492 ;	genPlus
                           4493 ;	AOP_STK for 
                           4494 ;	Can't optimise plus by inc, falling back to the normal way
   0BA5 11 05 19           4495 	ld	de,#_map
   0BA8 F8 09              4496 	lda	hl,9(sp)
   0BAA 2A                 4497 	ld	a,(hl+)
   0BAB 66                 4498 	ld	h,(hl)
   0BAC 6F                 4499 	ld	l,a
   0BAD 19                 4500 	add	hl,de
   0BAE 4D                 4501 	ld	c,l
   0BAF 44                 4502 	ld	b,h
                           4503 ;	genPointerGet
                           4504 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0BB0 0A                 4505 	ld	a,(bc)
   0BB1 F8 04              4506 	lda	hl,4(sp)
                           4507 ;	genCast
                           4508 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4509 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4510 ; Removed redundent load
   0BB3 32                 4511 	ld      (hl-),a
   0BB4 2B                 4512 	dec	hl
   0BB5 22                 4513 	ld	(hl+),a
   0BB6 36 00              4514 	ld	(hl),#0x00
                           4515 ;	genCmpEq
                           4516 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4517 ; genCmpEq: left 2, right 2, result 0
   0BB8 2B                 4518 	dec	hl
   0BB9 7E                 4519 	ld	a,(hl)
   0BBA FE 2D              4520 	cp	a,#0x2D
   0BBC C2 C7 0B           4521 	jp	nz,00132$
   0BBF 23                 4522 	inc	hl
   0BC0 7E                 4523 	ld	a,(hl)
   0BC1 B7                 4524 	or	a,a
   0BC2 C2 CD 0B           4525 	jp	nz,00102$
   0BC5 18 03              4526 	jr	00133$
   0BC7                    4527 00132$:
   0BC7 C3 CD 0B           4528 	jp	00102$
   0BCA                    4529 00133$:
                           4530 ;	game.c 696
                           4531 ;	genAssign (pointer)
   0BCA 3E 2F              4532 	ld	a,#0x2F
   0BCC 02                 4533 	ld	(bc),a
                           4534 ;	genLabel
   0BCD                    4535 00102$:
                           4536 ;	game.c 698
                           4537 ;	genPointerGet
                           4538 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0BCD 0A                 4539 	ld	a,(bc)
   0BCE F8 02              4540 	lda	hl,2(sp)
                           4541 ;	genCast
                           4542 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4543 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4544 ; Removed redundent load
   0BD0 32                 4545 	ld      (hl-),a
   0BD1 2B                 4546 	dec	hl
   0BD2 22                 4547 	ld	(hl+),a
   0BD3 36 00              4548 	ld	(hl),#0x00
                           4549 ;	genCmpEq
                           4550 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4551 ; genCmpEq: left 2, right 2, result 0
   0BD5 2B                 4552 	dec	hl
   0BD6 7E                 4553 	ld	a,(hl)
   0BD7 FE 0F              4554 	cp	a,#0x0F
   0BD9 C2 E4 0B           4555 	jp	nz,00134$
   0BDC 23                 4556 	inc	hl
   0BDD 7E                 4557 	ld	a,(hl)
   0BDE B7                 4558 	or	a,a
   0BDF C2 EA 0B           4559 	jp	nz,00104$
   0BE2 18 03              4560 	jr	00135$
   0BE4                    4561 00134$:
   0BE4 C3 EA 0B           4562 	jp	00104$
   0BE7                    4563 00135$:
                           4564 ;	game.c 699
                           4565 ;	genAssign (pointer)
   0BE7 3E 0D              4566 	ld	a,#0x0D
   0BE9 02                 4567 	ld	(bc),a
                           4568 ;	genLabel
   0BEA                    4569 00104$:
                           4570 ;	game.c 701
                           4571 ;	genPointerGet
                           4572 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0BEA 0A                 4573 	ld	a,(bc)
   0BEB F8 00              4574 	lda	hl,0(sp)
   0BED 77                 4575 	ld	(hl),a
                           4576 ;	genCast
                           4577 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4578 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0BEE 2A                 4579 	ld	a,(hl+)
   0BEF 23                 4580 	inc	hl
   0BF0 22                 4581 	ld	(hl+),a
   0BF1 36 00              4582 	ld	(hl),#0x00
                           4583 ;	genCmpEq
                           4584 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4585 ; genCmpEq: left 2, right 2, result 0
   0BF3 2B                 4586 	dec	hl
   0BF4 7E                 4587 	ld	a,(hl)
   0BF5 FE 10              4588 	cp	a,#0x10
   0BF7 C2 02 0C           4589 	jp	nz,00136$
   0BFA 23                 4590 	inc	hl
   0BFB 7E                 4591 	ld	a,(hl)
   0BFC B7                 4592 	or	a,a
   0BFD C2 08 0C           4593 	jp	nz,00106$
   0C00 18 03              4594 	jr	00137$
   0C02                    4595 00136$:
   0C02 C3 08 0C           4596 	jp	00106$
   0C05                    4597 00137$:
                           4598 ;	game.c 702
                           4599 ;	genAssign (pointer)
   0C05 3E 0C              4600 	ld	a,#0x0C
   0C07 02                 4601 	ld	(bc),a
                           4602 ;	genLabel
   0C08                    4603 00106$:
                           4604 ;	game.c 704
                           4605 ;	genIpush
                           4606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C08 21 05 19           4607 	ld	hl,#_map
   0C0B E5                 4608 	push	hl
                           4609 ;	genIpush
   0C0C 21 14 12           4610 	ld	hl,#0x1214
   0C0F E5                 4611 	push	hl
                           4612 ;	genIpush
   0C10 21 00 00           4613 	ld	hl,#0x0000
   0C13 E5                 4614 	push	hl
                           4615 ;	genCall
   0C14 CD 00 00           4616 	call	_set_bkg_tiles
   0C17 E8 06              4617 	lda	sp,6(sp)
                           4618 ;	game.c 707
                           4619 ;	genIpush
                           4620 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C19 21 14 00           4621 	ld	hl,#0x0014
   0C1C E5                 4622 	push	hl
                           4623 ;	genIpush
                           4624 ;	AOP_STK for 
   0C1D F8 0B              4625 	lda	hl,11(sp)
   0C1F 2A                 4626 	ld	a,(hl+)
   0C20 66                 4627 	ld	h,(hl)
   0C21 6F                 4628 	ld	l,a
   0C22 E5                 4629 	push	hl
                           4630 ;	genCall
   0C23 CD 00 00           4631 	call	__divuint_rrx_s
   0C26 42                 4632 	ld	b,d
   0C27 4B                 4633 	ld	c,e
   0C28 E8 04              4634 	lda	sp,4(sp)
                           4635 ;	genLeftShift
   0C2A 3E 04              4636 	ld	a,#0x03+1
   0C2C 18 04              4637 	jr	00139$
   0C2E                    4638 00138$:
   0C2E CB 21              4639 	sla	c
   0C30 CB 10              4640 	rl	b
   0C32                    4641 00139$:
   0C32 3D                 4642 	dec	a
   0C33 20 F9              4643 	jr	nz,00138$
                           4644 ;	genPlus
                           4645 ;	genPlusIncr
                           4646 ;	Can't optimise plus by inc, falling back to the normal way
   0C35 79                 4647 	ld	a,c
   0C36 C6 10              4648 	add	a,#0x10
   0C38 4F                 4649 	ld	c,a
   0C39 78                 4650 	ld	a,b
   0C3A CE 00              4651 	adc	a,#0x00
   0C3C 47                 4652 	ld	b,a
                           4653 ;	genCast
                           4654 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C3D F8 06              4655 	lda	hl,6(sp)
   0C3F 71                 4656 	ld	(hl),c
                           4657 ;	game.c 708
                           4658 ;	genIpush
                           4659 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C40 21 14 00           4660 	ld	hl,#0x0014
   0C43 E5                 4661 	push	hl
                           4662 ;	genIpush
                           4663 ;	AOP_STK for 
   0C44 F8 0B              4664 	lda	hl,11(sp)
   0C46 2A                 4665 	ld	a,(hl+)
   0C47 66                 4666 	ld	h,(hl)
   0C48 6F                 4667 	ld	l,a
   0C49 E5                 4668 	push	hl
                           4669 ;	genCall
   0C4A CD 00 00           4670 	call	__moduint_rrx_s
   0C4D 4A                 4671 	ld	c,d
   0C4E 43                 4672 	ld	b,e
   0C4F E8 04              4673 	lda	sp,4(sp)
                           4674 ;	genLeftShift
   0C51 3E 04              4675 	ld	a,#0x03+1
   0C53 18 04              4676 	jr	00141$
   0C55                    4677 00140$:
   0C55 CB 20              4678 	sla	b
   0C57 CB 11              4679 	rl	c
   0C59                    4680 00141$:
   0C59 3D                 4681 	dec	a
   0C5A 20 F9              4682 	jr	nz,00140$
                           4683 ;	genPlus
                           4684 ;	genPlusIncr
                           4685 ;	Can't optimise plus by inc, falling back to the normal way
   0C5C 78                 4686 	ld	a,b
   0C5D C6 08              4687 	add	a,#0x08
   0C5F 47                 4688 	ld	b,a
   0C60 79                 4689 	ld	a,c
   0C61 CE 00              4690 	adc	a,#0x00
   0C63 4F                 4691 	ld	c,a
                           4692 ;	genCast
   0C64 48                 4693 	ld	c,b
                           4694 ;	game.c 709
                           4695 ;	genIpush
                           4696 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C65 C5                 4697 	push	bc
   0C66 21 05 0F           4698 	ld	hl,#0x0F05
   0C69 E5                 4699 	push	hl
                           4700 ;	genCall
   0C6A CD 00 00           4701 	call	_set_sprite_tile
   0C6D E8 02              4702 	lda	sp,2(sp)
   0C6F E1                 4703 	pop	hl
   0C70 4D                 4704 	ld	c,l
                           4705 ;	game.c 712
                           4706 ;	genAssign
                           4707 ;	AOP_STK for _dog1_power_apply_i_1_1
   0C71 F8 05              4708 	lda	hl,5(sp)
   0C73 36 04              4709 	ld	(hl),#0x04
                           4710 ;	game.c 713
                           4711 ;	genIpush
                           4712 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C75 C5                 4713 	push	bc
                           4714 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C76 23                 4715 	inc	hl
   0C77 7E                 4716 	ld	a,(hl)
   0C78 F5                 4717 	push	af
   0C79 33                 4718 	inc	sp
                           4719 ;	genIpush
   0C7A 79                 4720 	ld	a,c
   0C7B F5                 4721 	push	af
   0C7C 33                 4722 	inc	sp
                           4723 ;	genIpush
   0C7D 3E 05              4724 	ld	a,#0x05
   0C7F F5                 4725 	push	af
   0C80 33                 4726 	inc	sp
                           4727 ;	genCall
   0C81 CD 00 00           4728 	call	_move_sprite
   0C84 E8 03              4729 	lda	sp,3(sp)
   0C86 E1                 4730 	pop	hl
   0C87 4D                 4731 	ld	c,l
                           4732 ;	game.c 715
                           4733 ;	genLabel
   0C88                    4734 00112$:
                           4735 ;	genCmpEq
                           4736 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4737 ; genCmpEq: left 1, right 1, result 0
   0C88 F8 05              4738 	lda	hl,5(sp)
   0C8A 7E                 4739 	ld	a,(hl)
   0C8B B7                 4740 	or	a,a
   0C8C CA F2 0C           4741 	jp	z,00114$
   0C8F                    4742 00142$:
                           4743 ;	game.c 716
                           4744 ;	genCmpLt
                           4745 ;	AOP_STK for 
   0C8F F8 0B              4746 	lda	hl,11(sp)
   0C91 7E                 4747 	ld	a,(hl)
   0C92 FE 01              4748 	cp	#0x01
   0C94 DA CC 0C           4749 	jp	c,00111$
                           4750 ;	genCmpGt
                           4751 ;	AOP_STK for 
   0C97 3E 04              4752 	ld	a,#0x04
   0C99 96                 4753 	sub	a,(hl)
   0C9A DA CC 0C           4754 	jp	c,00111$
                           4755 ;	genMinus
                           4756 ;	AOP_STK for 
   0C9D 7E                 4757 	ld	a,(hl)
   0C9E C6 FF              4758 	add	a,#0xFF
   0CA0 47                 4759 	ld	b,a
                           4760 ;	genJumpTab
   0CA1 58                 4761 	ld	e,b
   0CA2 16 00              4762 	ld	d,#0x00
   0CA4 21 AB 0C           4763 	ld	hl,#00143$
   0CA7 19                 4764 	add	hl,de
   0CA8 19                 4765 	add	hl,de
   0CA9 19                 4766 	add	hl,de
   0CAA E9                 4767 	jp	(hl)
   0CAB                    4768 00143$:
   0CAB C3 B7 0C           4769 	jp	00107$
   0CAE C3 BE 0C           4770 	jp	00108$
   0CB1 C3 C3 0C           4771 	jp	00109$
   0CB4 C3 CA 0C           4772 	jp	00110$
                           4773 ;	game.c 718
                           4774 ;	genLabel
   0CB7                    4775 00107$:
                           4776 ;	genMinus
                           4777 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CB7 F8 06              4778 	lda	hl,6(sp)
   0CB9 35                 4779 	dec	(hl)
   0CBA 35                 4780 	dec	(hl)
                           4781 ;	game.c 719
                           4782 ;	genGoto
   0CBB C3 CC 0C           4783 	jp	00111$
                           4784 ;	game.c 721
                           4785 ;	genLabel
   0CBE                    4786 00108$:
                           4787 ;	genPlus
                           4788 ;	genPlusIncr
                           4789 ; Removed redundent load
   0CBE 0C                 4790 	inc	c
   0CBF 0C                 4791 	inc	c
                           4792 ;	game.c 722
                           4793 ;	genGoto
   0CC0 C3 CC 0C           4794 	jp	00111$
                           4795 ;	game.c 724
                           4796 ;	genLabel
   0CC3                    4797 00109$:
                           4798 ;	genPlus
                           4799 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4800 ;	genPlusIncr
   0CC3 F8 06              4801 	lda	hl,6(sp)
   0CC5 34                 4802 	inc	(hl)
   0CC6 34                 4803 	inc	(hl)
                           4804 ;	game.c 725
                           4805 ;	genGoto
   0CC7 C3 CC 0C           4806 	jp	00111$
                           4807 ;	game.c 727
                           4808 ;	genLabel
   0CCA                    4809 00110$:
                           4810 ;	genMinus
   0CCA 0D                 4811 	dec	c
   0CCB 0D                 4812 	dec	c
                           4813 ;	game.c 729
                           4814 ;	genLabel
   0CCC                    4815 00111$:
                           4816 ;	game.c 730
                           4817 ;	genIpush
                           4818 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CCC C5                 4819 	push	bc
   0CCD 3E 02              4820 	ld	a,#0x02
   0CCF F5                 4821 	push	af
   0CD0 33                 4822 	inc	sp
                           4823 ;	genCall
   0CD1 CD 00 00           4824 	call	_performantDelay
   0CD4 E8 01              4825 	lda	sp,1(sp)
   0CD6 E1                 4826 	pop	hl
   0CD7 4D                 4827 	ld	c,l
                           4828 ;	game.c 731
                           4829 ;	genIpush
                           4830 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CD8 C5                 4831 	push	bc
                           4832 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CD9 F8 08              4833 	lda	hl,8(sp)
   0CDB 7E                 4834 	ld	a,(hl)
   0CDC F5                 4835 	push	af
   0CDD 33                 4836 	inc	sp
                           4837 ;	genIpush
   0CDE 79                 4838 	ld	a,c
   0CDF F5                 4839 	push	af
   0CE0 33                 4840 	inc	sp
                           4841 ;	genIpush
   0CE1 3E 05              4842 	ld	a,#0x05
   0CE3 F5                 4843 	push	af
   0CE4 33                 4844 	inc	sp
                           4845 ;	genCall
   0CE5 CD 00 00           4846 	call	_move_sprite
   0CE8 E8 03              4847 	lda	sp,3(sp)
   0CEA E1                 4848 	pop	hl
   0CEB 4D                 4849 	ld	c,l
                           4850 ;	game.c 732
                           4851 ;	genMinus
                           4852 ;	AOP_STK for _dog1_power_apply_i_1_1
   0CEC F8 05              4853 	lda	hl,5(sp)
   0CEE 35                 4854 	dec	(hl)
                           4855 ;	genGoto
   0CEF C3 88 0C           4856 	jp	00112$
                           4857 ;	genLabel
   0CF2                    4858 00114$:
                           4859 ;	game.c 737
                           4860 ;	genPlus
                           4861 ;	AOP_STK for 
                           4862 ;	Can't optimise plus by inc, falling back to the normal way
   0CF2 11 05 19           4863 	ld	de,#_map
   0CF5 F8 0C              4864 	lda	hl,12(sp)
   0CF7 2A                 4865 	ld	a,(hl+)
   0CF8 66                 4866 	ld	h,(hl)
   0CF9 6F                 4867 	ld	l,a
   0CFA 19                 4868 	add	hl,de
   0CFB 4D                 4869 	ld	c,l
   0CFC 44                 4870 	ld	b,h
                           4871 ;	genPointerGet
                           4872 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0CFD 0A                 4873 	ld	a,(bc)
   0CFE F8 00              4874 	lda	hl,0(sp)
                           4875 ;	genCmpLt
                           4876 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0D00 77                 4877 	ld      (hl),a
                           4878 ; Removed redundent load
   0D01 FE 0B              4879 	cp	#0x0B
   0D03 DA 3D 0D           4880 	jp	c,00119$
                           4881 ;	genCmpGt
                           4882 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0D06 3E 0E              4883 	ld	a,#0x0E
   0D08 96                 4884 	sub	a,(hl)
   0D09 DA 3D 0D           4885 	jp	c,00119$
                           4886 ;	genMinus
                           4887 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4888 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0D0C 7E                 4889 	ld	a,(hl)
   0D0D C6 F5              4890 	add	a,#0xF5
   0D0F 23                 4891 	inc	hl
   0D10 23                 4892 	inc	hl
                           4893 ;	genJumpTab
                           4894 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0D11 77                 4895 	ld      (hl),a
   0D12 5F                 4896 	ld      e,a
   0D13 16 00              4897 	ld	d,#0x00
   0D15 21 1C 0D           4898 	ld	hl,#00144$
   0D18 19                 4899 	add	hl,de
   0D19 19                 4900 	add	hl,de
   0D1A 19                 4901 	add	hl,de
   0D1B E9                 4902 	jp	(hl)
   0D1C                    4903 00144$:
   0D1C C3 28 0D           4904 	jp	00115$
   0D1F C3 2E 0D           4905 	jp	00116$
   0D22 C3 31 0D           4906 	jp	00117$
   0D25 C3 37 0D           4907 	jp	00118$
                           4908 ;	game.c 739
                           4909 ;	genLabel
   0D28                    4910 00115$:
                           4911 ;	genAssign (pointer)
   0D28 3E 30              4912 	ld	a,#0x30
   0D2A 02                 4913 	ld	(bc),a
                           4914 ;	game.c 740
                           4915 ;	genGoto
   0D2B C3 40 0D           4916 	jp	00120$
                           4917 ;	game.c 742
                           4918 ;	genLabel
   0D2E                    4919 00116$:
                           4920 ;	genGoto
   0D2E C3 40 0D           4921 	jp	00120$
                           4922 ;	game.c 744
                           4923 ;	genLabel
   0D31                    4924 00117$:
                           4925 ;	genAssign (pointer)
   0D31 3E 0F              4926 	ld	a,#0x0F
   0D33 02                 4927 	ld	(bc),a
                           4928 ;	game.c 745
                           4929 ;	genGoto
   0D34 C3 40 0D           4930 	jp	00120$
                           4931 ;	game.c 747
                           4932 ;	genLabel
   0D37                    4933 00118$:
                           4934 ;	genAssign (pointer)
   0D37 3E 10              4935 	ld	a,#0x10
   0D39 02                 4936 	ld	(bc),a
                           4937 ;	game.c 748
                           4938 ;	genGoto
   0D3A C3 40 0D           4939 	jp	00120$
                           4940 ;	game.c 750
                           4941 ;	genLabel
   0D3D                    4942 00119$:
                           4943 ;	genAssign (pointer)
   0D3D 3E 2D              4944 	ld	a,#0x2D
   0D3F 02                 4945 	ld	(bc),a
                           4946 ;	game.c 752
                           4947 ;	genLabel
   0D40                    4948 00120$:
                           4949 ;	game.c 753
                           4950 ;	genIpush
                           4951 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D40 21 05 19           4952 	ld	hl,#_map
   0D43 E5                 4953 	push	hl
                           4954 ;	genIpush
   0D44 21 14 12           4955 	ld	hl,#0x1214
   0D47 E5                 4956 	push	hl
                           4957 ;	genIpush
   0D48 21 00 00           4958 	ld	hl,#0x0000
   0D4B E5                 4959 	push	hl
                           4960 ;	genCall
   0D4C CD 00 00           4961 	call	_set_bkg_tiles
   0D4F E8 06              4962 	lda	sp,6(sp)
                           4963 ;	game.c 754
                           4964 ;	genIpush
                           4965 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D51 21 00 00           4966 	ld	hl,#0x0000
   0D54 E5                 4967 	push	hl
                           4968 ;	genIpush
   0D55 3E 05              4969 	ld	a,#0x05
   0D57 F5                 4970 	push	af
   0D58 33                 4971 	inc	sp
                           4972 ;	genCall
   0D59 CD 00 00           4973 	call	_move_sprite
   0D5C E8 03              4974 	lda	sp,3(sp)
                           4975 ;	genLabel
   0D5E                    4976 00121$:
                           4977 ;	genEndFunction
   0D5E E8 07              4978 	lda	sp,7(sp)
   0D60 C9                 4979 	ret
   0D61                    4980 ___dog1_power_apply_end:
                           4981 ;	game.c 759
                           4982 ;	genLabel
                           4983 ;	genFunction
                           4984 ;	---------------------------------
                           4985 ; Function _get_map_position_from_xy
                           4986 ; ---------------------------------
   0D61                    4987 ____get_map_position_from_xy_start:
   0D61                    4988 __get_map_position_from_xy:
   0D61 E8 FC              4989 	lda	sp,-4(sp)
                           4990 ;	game.c 767
                           4991 ;	genCast
                           4992 ;	AOP_STK for 
   0D63 F8 06              4993 	lda	hl,6(sp)
   0D65 4E                 4994 	ld	c,(hl)
   0D66 06 00              4995 	ld	b,#0x00
                           4996 ;	genRightShift
   0D68 CB 38              4997 	srl	b
   0D6A CB 19              4998 	rr	c
   0D6C CB 38              4999 	srl	b
   0D6E CB 19              5000 	rr	c
   0D70 CB 38              5001 	srl	b
   0D72 CB 19              5002 	rr	c
                           5003 ;	genMinus
   0D74 0B                 5004 	dec	bc
                           5005 ;	genCast
                           5006 ;	AOP_STK for __get_map_position_from_xy__x_1_1
   0D75 F8 03              5007 	lda	hl,3(sp)
   0D77 71                 5008 	ld	(hl),c
                           5009 ;	game.c 768
                           5010 ;	genCast
                           5011 ;	AOP_STK for 
   0D78 F8 07              5012 	lda	hl,7(sp)
   0D7A 46                 5013 	ld	b,(hl)
   0D7B 0E 00              5014 	ld	c,#0x00
                           5015 ;	genRightShift
   0D7D CB 39              5016 	srl	c
   0D7F CB 18              5017 	rr	b
   0D81 CB 39              5018 	srl	c
   0D83 CB 18              5019 	rr	b
   0D85 CB 39              5020 	srl	c
   0D87 CB 18              5021 	rr	b
                           5022 ;	genMinus
   0D89 58                 5023 	ld	e,b
   0D8A 51                 5024 	ld	d,c
   0D8B 1B                 5025 	dec	de
   0D8C 1B                 5026 	dec	de
   0D8D 43                 5027 	ld	b,e
   0D8E 4A                 5028 	ld	c,d
                           5029 ;	genCast
                           5030 ;	AOP_STK for __get_map_position_from_xy__y_1_1
   0D8F F8 02              5031 	lda	hl,2(sp)
   0D91 70                 5032 	ld	(hl),b
                           5033 ;	game.c 772
                           5034 ;	genCast
                           5035 ;	AOP_STK for __get_map_position_from_xy__x_1_1
                           5036 ;	AOP_STK for __get_map_position_from_xy_map_position_1_1
   0D92 23                 5037 	inc	hl
   0D93 7E                 5038 	ld	a,(hl)
   0D94 F8 00              5039 	lda	hl,0(sp)
   0D96 22                 5040 	ld	(hl+),a
   0D97 36 00              5041 	ld	(hl),#0x00
                           5042 ;	game.c 773
                           5043 ;	genCast
                           5044 ;	AOP_STK for __get_map_position_from_xy__y_1_1
   0D99 23                 5045 	inc	hl
   0D9A 4E                 5046 	ld	c,(hl)
   0D9B 06 00              5047 	ld	b,#0x00
                           5048 ;	genMult
   0D9D 59                 5049 	ld	e,c
   0D9E 50                 5050 	ld	d,b
   0D9F 6B                 5051 	ld	l,e
   0DA0 62                 5052 	ld	h,d
   0DA1 29                 5053 	add	hl,hl
   0DA2 29                 5054 	add	hl,hl
   0DA3 19                 5055 	add	hl,de
   0DA4 29                 5056 	add	hl,hl
   0DA5 29                 5057 	add	hl,hl
   0DA6 4D                 5058 	ld	c,l
   0DA7 44                 5059 	ld	b,h
                           5060 ;	genPlus
                           5061 ;	AOP_STK for __get_map_position_from_xy_map_position_1_1
                           5062 ;	Can't optimise plus by inc, falling back to the normal way
   0DA8 F8 00              5063 	lda	hl,0(sp)
   0DAA 2A                 5064 	ld	a,(hl+)
   0DAB 66                 5065 	ld	h,(hl)
   0DAC 6F                 5066 	ld	l,a
   0DAD 09                 5067 	add	hl,bc
   0DAE 7D                 5068 	ld	a,l
   0DAF 54                 5069 	ld	d,h
   0DB0 F8 00              5070 	lda	hl,0(sp)
   0DB2 22                 5071 	ld	(hl+),a
   0DB3 72                 5072 	ld	(hl),d
                           5073 ;	game.c 775
                           5074 ;	genRet
                           5075 ;	AOP_STK for __get_map_position_from_xy_map_position_1_1
   0DB4 2B                 5076 	dec	hl
   0DB5 5E                 5077 	ld	e,(hl)
   0DB6 23                 5078 	inc	hl
   0DB7 56                 5079 	ld	d,(hl)
                           5080 ;	genLabel
   0DB8                    5081 00101$:
                           5082 ;	genEndFunction
   0DB8 E8 04              5083 	lda	sp,4(sp)
   0DBA C9                 5084 	ret
   0DBB                    5085 ____get_map_position_from_xy_end:
                           5086 ;	game.c 778
                           5087 ;	genLabel
                           5088 ;	genFunction
                           5089 ;	---------------------------------
                           5090 ; Function player_input
                           5091 ; ---------------------------------
   0DBB                    5092 ___player_input_start:
   0DBB                    5093 _player_input:
   0DBB E8 FB              5094 	lda	sp,-5(sp)
                           5095 ;	game.c 781
                           5096 ;	genAssign
                           5097 ;	AOP_STK for 
   0DBD F8 07              5098 	lda	hl,7(sp)
   0DBF 4E                 5099 	ld	c,(hl)
   0DC0 23                 5100 	inc	hl
   0DC1 46                 5101 	ld	b,(hl)
                           5102 ;	genPointerGet
                           5103 ;	AOP_STK for _player_input_sloc0_1_0
   0DC2 59                 5104 	ld	e,c
   0DC3 50                 5105 	ld	d,b
   0DC4 1A                 5106 	ld	a,(de)
   0DC5 F8 03              5107 	lda	hl,3(sp)
   0DC7 77                 5108 	ld	(hl),a
   0DC8 13                 5109 	inc	de
   0DC9 1A                 5110 	ld	a,(de)
   0DCA 23                 5111 	inc	hl
                           5112 ;	genPlus
                           5113 ;	AOP_STK for _player_input_sloc0_1_0
                           5114 ;	AOP_STK for _player_input_sloc1_1_0
                           5115 ;	genPlusIncr
                           5116 ;	Can't optimise plus by inc, falling back to the normal way
   0DCB 32                 5117 	ld      (hl-),a
   0DCC 5E                 5118 	ld	e,(hl)
   0DCD 23                 5119 	inc	hl
   0DCE 56                 5120 	ld	d,(hl)
   0DCF 21 0A 00           5121 	ld	hl,#0x000A
   0DD2 19                 5122 	add	hl,de
   0DD3 7D                 5123 	ld	a,l
   0DD4 54                 5124 	ld	d,h
   0DD5 F8 01              5125 	lda	hl,1(sp)
                           5126 ;	genPointerGet
                           5127 ;	AOP_STK for _player_input_sloc1_1_0
                           5128 ;	AOP_STK for _player_input_sloc0_1_0
   0DD7 22                 5129 	ld	(hl+),a
   0DD8 72                 5130 	ld	(hl),d
   0DD9 5F                 5131 	ld	e,a
   0DDA 1A                 5132 	ld	a,(de)
   0DDB 23                 5133 	inc	hl
                           5134 ;	genCmpEq
                           5135 ;	AOP_STK for _player_input_sloc0_1_0
                           5136 ; genCmpEq: left 1, right 1, result 0
   0DDC 77                 5137 	ld      (hl),a
                           5138 ; Removed redundent load
   0DDD B7                 5139 	or	a,a
   0DDE C2 FE 0E           5140 	jp	nz,00115$
   0DE1 18 03              5141 	jr	00128$
   0DE3                    5142 00127$:
   0DE3 C3 FE 0E           5143 	jp	00115$
   0DE6                    5144 00128$:
                           5145 ;	genCmpEq
                           5146 ;	AOP_HL for _input_timer
                           5147 ; genCmpEq: left 1, right 1, result 0
   0DE6 21 03 19           5148 	ld	hl,#_input_timer
   0DE9 7E                 5149 	ld	a,(hl)
   0DEA B7                 5150 	or	a,a
   0DEB C2 FE 0E           5151 	jp	nz,00115$
   0DEE 18 03              5152 	jr	00130$
   0DF0                    5153 00129$:
   0DF0 C3 FE 0E           5154 	jp	00115$
   0DF3                    5155 00130$:
                           5156 ;	game.c 783
                           5157 ;	genCall
                           5158 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0DF3 C5                 5159 	push	bc
   0DF4 CD 00 00           5160 	call	_joypad
                           5161 ;	AOP_STK for _player_input_sloc1_1_0
   0DF7 F8 03              5162 	lda	hl,3(sp)
   0DF9 73                 5163 	ld	(hl),e
   0DFA C1                 5164 	pop	bc
                           5165 ;	genCmpEq
                           5166 ;	AOP_STK for _player_input_sloc1_1_0
                           5167 ; genCmpEq: left 1, right 1, result 0
   0DFB F8 01              5168 	lda	hl,1(sp)
   0DFD 7E                 5169 	ld	a,(hl)
   0DFE FE 01              5170 	cp	a,#0x01
   0E00 CA AE 0E           5171 	jp	z,00108$
   0E03                    5172 00131$:
                           5173 ;	genCmpEq
                           5174 ;	AOP_STK for _player_input_sloc1_1_0
                           5175 ; genCmpEq: left 1, right 1, result 0
   0E03 F8 01              5176 	lda	hl,1(sp)
   0E05 7E                 5177 	ld	a,(hl)
   0E06 FE 02              5178 	cp	a,#0x02
   0E08 CA 8F 0E           5179 	jp	z,00107$
   0E0B                    5180 00132$:
                           5181 ;	genCmpEq
                           5182 ;	AOP_STK for _player_input_sloc1_1_0
                           5183 ; genCmpEq: left 1, right 1, result 0
   0E0B F8 01              5184 	lda	hl,1(sp)
   0E0D 7E                 5185 	ld	a,(hl)
   0E0E FE 04              5186 	cp	a,#0x04
   0E10 CA CD 0E           5187 	jp	z,00109$
   0E13                    5188 00133$:
                           5189 ;	genCmpEq
                           5190 ;	AOP_STK for _player_input_sloc1_1_0
                           5191 ; genCmpEq: left 1, right 1, result 0
   0E13 F8 01              5192 	lda	hl,1(sp)
   0E15 7E                 5193 	ld	a,(hl)
   0E16 FE 08              5194 	cp	a,#0x08
   0E18 CA EC 0E           5195 	jp	z,00110$
   0E1B                    5196 00134$:
                           5197 ;	genCmpEq
                           5198 ;	AOP_STK for _player_input_sloc1_1_0
                           5199 ; genCmpEq: left 1, right 1, result 0
   0E1B F8 01              5200 	lda	hl,1(sp)
   0E1D 7E                 5201 	ld	a,(hl)
   0E1E FE 10              5202 	cp	a,#0x10
   0E20 CA 2E 0E           5203 	jp	z,00103$
   0E23                    5204 00135$:
                           5205 ;	genCmpEq
                           5206 ;	AOP_STK for _player_input_sloc1_1_0
                           5207 ; genCmpEq: left 1, right 1, result 0
   0E23 F8 01              5208 	lda	hl,1(sp)
   0E25 7E                 5209 	ld	a,(hl)
   0E26 FE 20              5210 	cp	a,#0x20
   0E28 CA 87 0E           5211 	jp	z,00106$
   0E2B                    5212 00136$:
                           5213 ;	genGoto
   0E2B C3 FE 0E           5214 	jp	00115$
                           5215 ;	game.c 789
                           5216 ;	genLabel
   0E2E                    5217 00103$:
                           5218 ;	game.c 785
                           5219 ;	genPointerGet
                           5220 ;	AOP_STK for _player_input_sloc1_1_0
   0E2E 59                 5221 	ld	e,c
   0E2F 50                 5222 	ld	d,b
   0E30 1A                 5223 	ld	a,(de)
   0E31 F8 01              5224 	lda	hl,1(sp)
   0E33 77                 5225 	ld	(hl),a
   0E34 13                 5226 	inc	de
   0E35 1A                 5227 	ld	a,(de)
   0E36 23                 5228 	inc	hl
                           5229 ;	genPlus
                           5230 ;	AOP_STK for _player_input_sloc1_1_0
                           5231 ;	AOP_STK for _player_input_sloc0_1_0
                           5232 ;	genPlusIncr
                           5233 ;	Can't optimise plus by inc, falling back to the normal way
   0E37 32                 5234 	ld      (hl-),a
   0E38 5E                 5235 	ld	e,(hl)
   0E39 23                 5236 	inc	hl
   0E3A 56                 5237 	ld	d,(hl)
   0E3B 21 0B 00           5238 	ld	hl,#0x000B
   0E3E 19                 5239 	add	hl,de
   0E3F 7D                 5240 	ld	a,l
   0E40 54                 5241 	ld	d,h
   0E41 F8 03              5242 	lda	hl,3(sp)
                           5243 ;	genPointerGet
                           5244 ;	AOP_STK for _player_input_sloc0_1_0
                           5245 ;	AOP_STK for _player_input_sloc2_1_0
   0E43 22                 5246 	ld	(hl+),a
   0E44 72                 5247 	ld	(hl),d
   0E45 5F                 5248 	ld	e,a
   0E46 1A                 5249 	ld	a,(de)
   0E47 F8 00              5250 	lda	hl,0(sp)
                           5251 ;	genCmpEq
                           5252 ;	AOP_STK for _player_input_sloc2_1_0
                           5253 ; genCmpEq: left 1, right 1, result 0
   0E49 77                 5254 	ld      (hl),a
                           5255 ; Removed redundent load
   0E4A FE 01              5256 	cp	a,#0x01
   0E4C C2 72 0E           5257 	jp	nz,00102$
   0E4F 18 03              5258 	jr	00138$
   0E51                    5259 00137$:
   0E51 C3 72 0E           5260 	jp	00102$
   0E54                    5261 00138$:
                           5262 ;	game.c 786
                           5263 ;	genPlus
                           5264 ;	AOP_STK for _player_input_sloc1_1_0
                           5265 ;	genPlusIncr
                           5266 ;	Can't optimise plus by inc, falling back to the normal way
   0E54 F8 01              5267 	lda	hl,1(sp)
   0E56 5E                 5268 	ld	e,(hl)
   0E57 23                 5269 	inc	hl
   0E58 56                 5270 	ld	d,(hl)
   0E59 21 0A 00           5271 	ld	hl,#0x000A
   0E5C 19                 5272 	add	hl,de
   0E5D 7D                 5273 	ld	a,l
   0E5E 54                 5274 	ld	d,h
   0E5F 6F                 5275 	ld	l,a
   0E60 62                 5276 	ld	h,d
                           5277 ;	genAssign (pointer)
   0E61 36 10              5278 	ld	(hl),#0x10
                           5279 ;	game.c 787
                           5280 ;	genPlus
                           5281 ;	AOP_STK for _player_input_sloc1_1_0
                           5282 ;	genPlusIncr
                           5283 ;	Can't optimise plus by inc, falling back to the normal way
   0E63 F8 01              5284 	lda	hl,1(sp)
   0E65 5E                 5285 	ld	e,(hl)
   0E66 23                 5286 	inc	hl
   0E67 56                 5287 	ld	d,(hl)
   0E68 21 09 00           5288 	ld	hl,#0x0009
   0E6B 19                 5289 	add	hl,de
   0E6C 7D                 5290 	ld	a,l
   0E6D 54                 5291 	ld	d,h
   0E6E 6F                 5292 	ld	l,a
   0E6F 62                 5293 	ld	h,d
                           5294 ;	genAssign (pointer)
   0E70 36 01              5295 	ld	(hl),#0x01
                           5296 ;	genLabel
   0E72                    5297 00102$:
                           5298 ;	game.c 789
                           5299 ;	genCmpEq
                           5300 ;	AOP_STK for _player_input_sloc2_1_0
                           5301 ; genCmpEq: left 1, right 1, result 0
   0E72 F8 00              5302 	lda	hl,0(sp)
   0E74 7E                 5303 	ld	a,(hl)
   0E75 FE 02              5304 	cp	a,#0x02
   0E77 C2 FE 0E           5305 	jp	nz,00115$
   0E7A 18 03              5306 	jr	00140$
   0E7C                    5307 00139$:
   0E7C C3 FE 0E           5308 	jp	00115$
   0E7F                    5309 00140$:
                           5310 ;	game.c 790
                           5311 ;	genCall
                           5312 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E7F C5                 5313 	push	bc
   0E80 CD 58 08           5314 	call	_dog1_power
   0E83 C1                 5315 	pop	bc
                           5316 ;	game.c 794
                           5317 ;	genGoto
   0E84 C3 FE 0E           5318 	jp	00115$
                           5319 ;	game.c 798
                           5320 ;	genLabel
   0E87                    5321 00106$:
                           5322 ;	genCall
                           5323 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E87 C5                 5324 	push	bc
   0E88 CD CA 01           5325 	call	_change_char
   0E8B C1                 5326 	pop	bc
                           5327 ;	game.c 799
                           5328 ;	genGoto
   0E8C C3 FE 0E           5329 	jp	00115$
                           5330 ;	game.c 802
                           5331 ;	genLabel
   0E8F                    5332 00107$:
                           5333 ;	genAssign
                           5334 ;	AOP_HL for _input_timer
   0E8F 21 03 19           5335 	ld	hl,#_input_timer
   0E92 36 04              5336 	ld	(hl),#0x04
                           5337 ;	game.c 803
                           5338 ;	genPointerGet
                           5339 ;	AOP_STK for _player_input_sloc1_1_0
   0E94 59                 5340 	ld	e,c
   0E95 50                 5341 	ld	d,b
   0E96 1A                 5342 	ld	a,(de)
   0E97 F8 01              5343 	lda	hl,1(sp)
   0E99 77                 5344 	ld	(hl),a
   0E9A 13                 5345 	inc	de
   0E9B 1A                 5346 	ld	a,(de)
   0E9C 23                 5347 	inc	hl
                           5348 ;	genPlus
                           5349 ;	AOP_STK for _player_input_sloc1_1_0
                           5350 ;	genPlusIncr
                           5351 ;	Can't optimise plus by inc, falling back to the normal way
   0E9D 32                 5352 	ld      (hl-),a
   0E9E 5E                 5353 	ld	e,(hl)
   0E9F 23                 5354 	inc	hl
   0EA0 56                 5355 	ld	d,(hl)
   0EA1 21 08 00           5356 	ld	hl,#0x0008
   0EA4 19                 5357 	add	hl,de
   0EA5 7D                 5358 	ld	a,l
   0EA6 54                 5359 	ld	d,h
   0EA7 6F                 5360 	ld	l,a
   0EA8 62                 5361 	ld	h,d
                           5362 ;	genAssign (pointer)
   0EA9 36 04              5363 	ld	(hl),#0x04
                           5364 ;	game.c 804
                           5365 ;	genGoto
   0EAB C3 FE 0E           5366 	jp	00115$
                           5367 ;	game.c 806
                           5368 ;	genLabel
   0EAE                    5369 00108$:
                           5370 ;	genAssign
                           5371 ;	AOP_HL for _input_timer
   0EAE 21 03 19           5372 	ld	hl,#_input_timer
   0EB1 36 04              5373 	ld	(hl),#0x04
                           5374 ;	game.c 807
                           5375 ;	genPointerGet
                           5376 ;	AOP_STK for _player_input_sloc1_1_0
   0EB3 59                 5377 	ld	e,c
   0EB4 50                 5378 	ld	d,b
   0EB5 1A                 5379 	ld	a,(de)
   0EB6 F8 01              5380 	lda	hl,1(sp)
   0EB8 77                 5381 	ld	(hl),a
   0EB9 13                 5382 	inc	de
   0EBA 1A                 5383 	ld	a,(de)
   0EBB 23                 5384 	inc	hl
                           5385 ;	genPlus
                           5386 ;	AOP_STK for _player_input_sloc1_1_0
                           5387 ;	genPlusIncr
                           5388 ;	Can't optimise plus by inc, falling back to the normal way
   0EBC 32                 5389 	ld      (hl-),a
   0EBD 5E                 5390 	ld	e,(hl)
   0EBE 23                 5391 	inc	hl
   0EBF 56                 5392 	ld	d,(hl)
   0EC0 21 08 00           5393 	ld	hl,#0x0008
   0EC3 19                 5394 	add	hl,de
   0EC4 7D                 5395 	ld	a,l
   0EC5 54                 5396 	ld	d,h
   0EC6 6F                 5397 	ld	l,a
   0EC7 62                 5398 	ld	h,d
                           5399 ;	genAssign (pointer)
   0EC8 36 02              5400 	ld	(hl),#0x02
                           5401 ;	game.c 808
                           5402 ;	genGoto
   0ECA C3 FE 0E           5403 	jp	00115$
                           5404 ;	game.c 810
                           5405 ;	genLabel
   0ECD                    5406 00109$:
                           5407 ;	genAssign
                           5408 ;	AOP_HL for _input_timer
   0ECD 21 03 19           5409 	ld	hl,#_input_timer
   0ED0 36 04              5410 	ld	(hl),#0x04
                           5411 ;	game.c 811
                           5412 ;	genPointerGet
                           5413 ;	AOP_STK for _player_input_sloc1_1_0
   0ED2 59                 5414 	ld	e,c
   0ED3 50                 5415 	ld	d,b
   0ED4 1A                 5416 	ld	a,(de)
   0ED5 F8 01              5417 	lda	hl,1(sp)
   0ED7 77                 5418 	ld	(hl),a
   0ED8 13                 5419 	inc	de
   0ED9 1A                 5420 	ld	a,(de)
   0EDA 23                 5421 	inc	hl
                           5422 ;	genPlus
                           5423 ;	AOP_STK for _player_input_sloc1_1_0
                           5424 ;	genPlusIncr
                           5425 ;	Can't optimise plus by inc, falling back to the normal way
   0EDB 32                 5426 	ld      (hl-),a
   0EDC 5E                 5427 	ld	e,(hl)
   0EDD 23                 5428 	inc	hl
   0EDE 56                 5429 	ld	d,(hl)
   0EDF 21 08 00           5430 	ld	hl,#0x0008
   0EE2 19                 5431 	add	hl,de
   0EE3 7D                 5432 	ld	a,l
   0EE4 54                 5433 	ld	d,h
   0EE5 6F                 5434 	ld	l,a
   0EE6 62                 5435 	ld	h,d
                           5436 ;	genAssign (pointer)
   0EE7 36 01              5437 	ld	(hl),#0x01
                           5438 ;	game.c 812
                           5439 ;	genGoto
   0EE9 C3 FE 0E           5440 	jp	00115$
                           5441 ;	game.c 814
                           5442 ;	genLabel
   0EEC                    5443 00110$:
                           5444 ;	genPointerGet
   0EEC 59                 5445 	ld	e,c
   0EED 50                 5446 	ld	d,b
   0EEE 1A                 5447 	ld	a,(de)
   0EEF 4F                 5448 	ld	c,a
   0EF0 13                 5449 	inc	de
   0EF1 1A                 5450 	ld	a,(de)
   0EF2 47                 5451 	ld	b,a
                           5452 ;	genPlus
                           5453 ;	genPlusIncr
   0EF3 21 08 00           5454 	ld	hl,#0x0008
   0EF6 09                 5455 	add	hl,bc
                           5456 ;	genAssign (pointer)
   0EF7 36 03              5457 	ld	(hl),#0x03
                           5458 ;	game.c 815
                           5459 ;	genAssign
                           5460 ;	AOP_HL for _input_timer
   0EF9 21 03 19           5461 	ld	hl,#_input_timer
   0EFC 36 04              5462 	ld	(hl),#0x04
                           5463 ;	game.c 819
                           5464 ;	genLabel
   0EFE                    5465 00115$:
                           5466 ;	genEndFunction
   0EFE E8 05              5467 	lda	sp,5(sp)
   0F00 C9                 5468 	ret
   0F01                    5469 ___player_input_end:
                           5470 ;	game.c 828
                           5471 ;	genLabel
                           5472 ;	genFunction
                           5473 ;	---------------------------------
                           5474 ; Function can_move_to_map_pos
                           5475 ; ---------------------------------
   0F01                    5476 ___can_move_to_map_pos_start:
   0F01                    5477 _can_move_to_map_pos:
                           5478 	
                           5479 ;	game.c 830
                           5480 ;	genPlus
                           5481 ;	AOP_STK for 
                           5482 ;	Can't optimise plus by inc, falling back to the normal way
   0F01 11 05 19           5483 	ld	de,#_map
   0F04 F8 02              5484 	lda	hl,2(sp)
   0F06 2A                 5485 	ld	a,(hl+)
   0F07 66                 5486 	ld	h,(hl)
   0F08 6F                 5487 	ld	l,a
   0F09 19                 5488 	add	hl,de
   0F0A 4D                 5489 	ld	c,l
   0F0B 44                 5490 	ld	b,h
                           5491 ;	genPointerGet
   0F0C 0A                 5492 	ld	a,(bc)
   0F0D 4F                 5493 	ld	c,a
                           5494 ;	genCast
                           5495 ; Removed redundent load
   0F0E 06 00              5496 	ld	b,#0x00
                           5497 ;	genCmpGt
   0F10 3E 14              5498 	ld	a,#0x14
   0F12 91                 5499 	sub	a,c
   0F13 3E 00              5500 	ld	a,#0x00
   0F15 98                 5501 	sbc	a,b
   0F16 D2 28 0F           5502 	jp	nc,00102$
                           5503 ;	game.c 831
                           5504 ;	genCmpLt
   0F19 79                 5505 	ld	a,c
   0F1A D6 29              5506 	sub	a,#0x29
   0F1C 78                 5507 	ld	a,b
   0F1D DE 00              5508 	sbc	a,#0x00
   0F1F D2 28 0F           5509 	jp	nc,00102$
                           5510 ;	game.c 833
                           5511 ;	genRet
   0F22 11 00 00           5512 	ld	de,#0x0000
   0F25 C3 C9 0F           5513 	jp	00114$
                           5514 ;	genLabel
   0F28                    5515 00102$:
                           5516 ;	game.c 837
                           5517 ;	genCmpEq
                           5518 ; genCmpEq: left 2, right 2, result 0
   0F28 79                 5519 	ld	a,c
   0F29 FE 0F              5520 	cp	a,#0x0F
   0F2B C2 33 0F           5521 	jp	nz,00124$
   0F2E 78                 5522 	ld	a,b
   0F2F B7                 5523 	or	a,a
   0F30 CA 59 0F           5524 	jp	z,00104$
   0F33                    5525 00124$:
                           5526 ;	genCmpEq
                           5527 ; genCmpEq: left 2, right 2, result 0
   0F33 79                 5528 	ld	a,c
   0F34 FE 10              5529 	cp	a,#0x10
   0F36 C2 3E 0F           5530 	jp	nz,00125$
   0F39 78                 5531 	ld	a,b
   0F3A B7                 5532 	or	a,a
   0F3B CA 59 0F           5533 	jp	z,00104$
   0F3E                    5534 00125$:
                           5535 ;	genCmpEq
                           5536 ; genCmpEq: left 2, right 2, result 0
   0F3E 79                 5537 	ld	a,c
   0F3F FE 29              5538 	cp	a,#0x29
   0F41 C2 49 0F           5539 	jp	nz,00126$
   0F44 78                 5540 	ld	a,b
   0F45 B7                 5541 	or	a,a
   0F46 CA 59 0F           5542 	jp	z,00104$
   0F49                    5543 00126$:
                           5544 ;	genCmpEq
                           5545 ; genCmpEq: left 2, right 2, result 0
   0F49 79                 5546 	ld	a,c
   0F4A FE 2D              5547 	cp	a,#0x2D
   0F4C C2 56 0F           5548 	jp	nz,00127$
   0F4F 78                 5549 	ld	a,b
   0F50 B7                 5550 	or	a,a
   0F51 C2 5F 0F           5551 	jp	nz,00108$
   0F54 18 03              5552 	jr	00128$
   0F56                    5553 00127$:
   0F56 C3 5F 0F           5554 	jp	00108$
   0F59                    5555 00128$:
                           5556 ;	game.c 845
                           5557 ;	genLabel
   0F59                    5558 00104$:
                           5559 ;	genRet
   0F59 11 00 00           5560 	ld	de,#0x0000
   0F5C C3 C9 0F           5561 	jp	00114$
                           5562 ;	game.c 847
                           5563 ;	genLabel
   0F5F                    5564 00108$:
                           5565 ;	game.c 849
                           5566 ;	genPlus
                           5567 ;	genPlusIncr
   0F5F 01 79 1A           5568 	ld	bc,#_bunny + 12
                           5569 ;	genPointerGet
   0F62 59                 5570 	ld	e,c
   0F63 50                 5571 	ld	d,b
   0F64 1A                 5572 	ld	a,(de)
   0F65 4F                 5573 	ld	c,a
   0F66 13                 5574 	inc	de
   0F67 1A                 5575 	ld	a,(de)
   0F68 47                 5576 	ld	b,a
                           5577 ;	genCmpEq
                           5578 ;	AOP_STK for 
                           5579 ; genCmpEq: left 2, right 2, result 0
   0F69 F8 02              5580 	lda	hl,2(sp)
   0F6B 7E                 5581 	ld	a,(hl)
   0F6C B9                 5582 	cp	c
   0F6D C2 76 0F           5583 	jp	nz,00129$
   0F70 23                 5584 	inc	hl
   0F71 7E                 5585 	ld	a,(hl)
   0F72 B8                 5586 	cp	b
   0F73 CA C0 0F           5587 	jp	z,00109$
   0F76                    5588 00129$:
                           5589 ;	game.c 850
                           5590 ;	genPlus
                           5591 ;	genPlusIncr
   0F76 01 87 1A           5592 	ld	bc,#_dog1 + 12
                           5593 ;	genPointerGet
   0F79 59                 5594 	ld	e,c
   0F7A 50                 5595 	ld	d,b
   0F7B 1A                 5596 	ld	a,(de)
   0F7C 4F                 5597 	ld	c,a
   0F7D 13                 5598 	inc	de
   0F7E 1A                 5599 	ld	a,(de)
   0F7F 47                 5600 	ld	b,a
                           5601 ;	genCmpEq
                           5602 ;	AOP_STK for 
                           5603 ; genCmpEq: left 2, right 2, result 0
   0F80 F8 02              5604 	lda	hl,2(sp)
   0F82 7E                 5605 	ld	a,(hl)
   0F83 B9                 5606 	cp	c
   0F84 C2 8D 0F           5607 	jp	nz,00130$
   0F87 23                 5608 	inc	hl
   0F88 7E                 5609 	ld	a,(hl)
   0F89 B8                 5610 	cp	b
   0F8A CA C0 0F           5611 	jp	z,00109$
   0F8D                    5612 00130$:
                           5613 ;	game.c 851
                           5614 ;	genPlus
                           5615 ;	genPlusIncr
   0F8D 01 95 1A           5616 	ld	bc,#_dog2 + 12
                           5617 ;	genPointerGet
   0F90 59                 5618 	ld	e,c
   0F91 50                 5619 	ld	d,b
   0F92 1A                 5620 	ld	a,(de)
   0F93 4F                 5621 	ld	c,a
   0F94 13                 5622 	inc	de
   0F95 1A                 5623 	ld	a,(de)
   0F96 47                 5624 	ld	b,a
                           5625 ;	genCmpEq
                           5626 ;	AOP_STK for 
                           5627 ; genCmpEq: left 2, right 2, result 0
   0F97 F8 02              5628 	lda	hl,2(sp)
   0F99 7E                 5629 	ld	a,(hl)
   0F9A B9                 5630 	cp	c
   0F9B C2 A4 0F           5631 	jp	nz,00131$
   0F9E 23                 5632 	inc	hl
   0F9F 7E                 5633 	ld	a,(hl)
   0FA0 B8                 5634 	cp	b
   0FA1 CA C0 0F           5635 	jp	z,00109$
   0FA4                    5636 00131$:
                           5637 ;	game.c 852
                           5638 ;	genPlus
                           5639 ;	genPlusIncr
   0FA4 01 A3 1A           5640 	ld	bc,#_cat + 12
                           5641 ;	genPointerGet
   0FA7 59                 5642 	ld	e,c
   0FA8 50                 5643 	ld	d,b
   0FA9 1A                 5644 	ld	a,(de)
   0FAA 4F                 5645 	ld	c,a
   0FAB 13                 5646 	inc	de
   0FAC 1A                 5647 	ld	a,(de)
   0FAD 47                 5648 	ld	b,a
                           5649 ;	genCmpEq
                           5650 ;	AOP_STK for 
                           5651 ; genCmpEq: left 2, right 2, result 0
   0FAE F8 02              5652 	lda	hl,2(sp)
   0FB0 7E                 5653 	ld	a,(hl)
   0FB1 B9                 5654 	cp	c
   0FB2 C2 BD 0F           5655 	jp	nz,00132$
   0FB5 23                 5656 	inc	hl
   0FB6 7E                 5657 	ld	a,(hl)
   0FB7 B8                 5658 	cp	b
   0FB8 C2 C6 0F           5659 	jp	nz,00110$
   0FBB 18 03              5660 	jr	00133$
   0FBD                    5661 00132$:
   0FBD C3 C6 0F           5662 	jp	00110$
   0FC0                    5663 00133$:
                           5664 ;	genLabel
   0FC0                    5665 00109$:
                           5666 ;	game.c 854
                           5667 ;	genRet
   0FC0 11 00 00           5668 	ld	de,#0x0000
   0FC3 C3 C9 0F           5669 	jp	00114$
                           5670 ;	genLabel
   0FC6                    5671 00110$:
                           5672 ;	game.c 857
                           5673 ;	genRet
   0FC6 11 01 00           5674 	ld	de,#0x0001
                           5675 ;	genLabel
   0FC9                    5676 00114$:
                           5677 ;	genEndFunction
                           5678 	
   0FC9 C9                 5679 	ret
   0FCA                    5680 ___can_move_to_map_pos_end:
                           5681 ;	game.c 860
                           5682 ;	genLabel
                           5683 ;	genFunction
                           5684 ;	---------------------------------
                           5685 ; Function can_move
                           5686 ; ---------------------------------
   0FCA                    5687 ___can_move_start:
   0FCA                    5688 _can_move:
   0FCA E8 FA              5689 	lda	sp,-6(sp)
                           5690 ;	game.c 871
                           5691 ;	genCmpGt
                           5692 ;	AOP_STK for 
   0FCC 3E 04              5693 	ld	a,#0x04
   0FCE F8 0A              5694 	lda	hl,10(sp)
   0FD0 96                 5695 	sub	a,(hl)
   0FD1 DA 17 10           5696 	jp	c,00106$
                           5697 ;	genJumpTab
                           5698 ;	AOP_STK for 
   0FD4 5E                 5699 	ld	e,(hl)
   0FD5 16 00              5700 	ld	d,#0x00
   0FD7 21 DE 0F           5701 	ld	hl,#00121$
   0FDA 19                 5702 	add	hl,de
   0FDB 19                 5703 	add	hl,de
   0FDC 19                 5704 	add	hl,de
   0FDD E9                 5705 	jp	(hl)
   0FDE                    5706 00121$:
   0FDE C3 11 10           5707 	jp	00105$
   0FE1 C3 FF 0F           5708 	jp	00103$
   0FE4 C3 F6 0F           5709 	jp	00102$
   0FE7 C3 08 10           5710 	jp	00104$
   0FEA C3 ED 0F           5711 	jp	00101$
                           5712 ;	game.c 873
                           5713 ;	genLabel
   0FED                    5714 00101$:
                           5715 ;	genMinus
                           5716 ;	AOP_STK for 
   0FED F8 08              5717 	lda	hl,8(sp)
   0FEF 7E                 5718 	ld	a,(hl)
   0FF0 C6 F8              5719 	add	a,#0xF8
   0FF2 77                 5720 	ld	(hl),a
                           5721 ;	game.c 874
                           5722 ;	genGoto
   0FF3 C3 17 10           5723 	jp	00106$
                           5724 ;	game.c 876
                           5725 ;	genLabel
   0FF6                    5726 00102$:
                           5727 ;	genPlus
                           5728 ;	AOP_STK for 
                           5729 ;	genPlusIncr
                           5730 ;	Can't optimise plus by inc, falling back to the normal way
   0FF6 F8 08              5731 	lda	hl,8(sp)
   0FF8 7E                 5732 	ld	a,(hl)
   0FF9 C6 08              5733 	add	a,#0x08
   0FFB 77                 5734 	ld	(hl),a
                           5735 ;	game.c 877
                           5736 ;	genGoto
   0FFC C3 17 10           5737 	jp	00106$
                           5738 ;	game.c 879
                           5739 ;	genLabel
   0FFF                    5740 00103$:
                           5741 ;	genMinus
                           5742 ;	AOP_STK for 
   0FFF F8 09              5743 	lda	hl,9(sp)
   1001 7E                 5744 	ld	a,(hl)
   1002 C6 F8              5745 	add	a,#0xF8
   1004 77                 5746 	ld	(hl),a
                           5747 ;	game.c 880
                           5748 ;	genGoto
   1005 C3 17 10           5749 	jp	00106$
                           5750 ;	game.c 882
                           5751 ;	genLabel
   1008                    5752 00104$:
                           5753 ;	genPlus
                           5754 ;	AOP_STK for 
                           5755 ;	genPlusIncr
                           5756 ;	Can't optimise plus by inc, falling back to the normal way
   1008 F8 09              5757 	lda	hl,9(sp)
   100A 7E                 5758 	ld	a,(hl)
   100B C6 08              5759 	add	a,#0x08
   100D 77                 5760 	ld	(hl),a
                           5761 ;	game.c 883
                           5762 ;	genGoto
   100E C3 17 10           5763 	jp	00106$
                           5764 ;	game.c 885
                           5765 ;	genLabel
   1011                    5766 00105$:
                           5767 ;	genRet
   1011 11 00 00           5768 	ld	de,#0x0000
   1014 C3 B0 10           5769 	jp	00114$
                           5770 ;	game.c 886
                           5771 ;	genLabel
   1017                    5772 00106$:
                           5773 ;	game.c 888
                           5774 ;	genCast
                           5775 ;	AOP_STK for 
   1017 F8 08              5776 	lda	hl,8(sp)
   1019 4E                 5777 	ld	c,(hl)
   101A 06 00              5778 	ld	b,#0x00
                           5779 ;	genRightShift
   101C CB 38              5780 	srl	b
   101E CB 19              5781 	rr	c
   1020 CB 38              5782 	srl	b
   1022 CB 19              5783 	rr	c
   1024 CB 38              5784 	srl	b
   1026 CB 19              5785 	rr	c
                           5786 ;	genMinus
   1028 0B                 5787 	dec	bc
                           5788 ;	genCast
                           5789 ;	AOP_STK for _can_move__x_1_1
   1029 F8 05              5790 	lda	hl,5(sp)
   102B 71                 5791 	ld	(hl),c
                           5792 ;	game.c 889
                           5793 ;	genCast
                           5794 ;	AOP_STK for 
   102C F8 09              5795 	lda	hl,9(sp)
   102E 46                 5796 	ld	b,(hl)
   102F 0E 00              5797 	ld	c,#0x00
                           5798 ;	genRightShift
   1031 CB 39              5799 	srl	c
   1033 CB 18              5800 	rr	b
   1035 CB 39              5801 	srl	c
   1037 CB 18              5802 	rr	b
   1039 CB 39              5803 	srl	c
   103B CB 18              5804 	rr	b
                           5805 ;	genMinus
   103D 58                 5806 	ld	e,b
   103E 51                 5807 	ld	d,c
   103F 1B                 5808 	dec	de
   1040 1B                 5809 	dec	de
   1041 43                 5810 	ld	b,e
   1042 4A                 5811 	ld	c,d
                           5812 ;	genCast
                           5813 ;	AOP_STK for _can_move__y_1_1
   1043 F8 04              5814 	lda	hl,4(sp)
   1045 70                 5815 	ld	(hl),b
                           5816 ;	game.c 896
                           5817 ;	genCmpLt
                           5818 ;	AOP_STK for _can_move__x_1_1
   1046 23                 5819 	inc	hl
   1047 7E                 5820 	ld	a,(hl)
   1048 FE 00              5821 	cp	#0x00
   104A DA 71 10           5822 	jp	c,00107$
                           5823 ;	genCast
                           5824 ;	AOP_STK for _can_move__x_1_1
   104D 46                 5825 	ld	b,(hl)
   104E 0E 00              5826 	ld	c,#0x00
                           5827 ;	genCmpGt
   1050 3E 13              5828 	ld	a,#0x13
   1052 90                 5829 	sub	a,b
   1053 3E 00              5830 	ld	a,#0x00
   1055 99                 5831 	sbc	a,c
   1056 DA 71 10           5832 	jp	c,00107$
                           5833 ;	genCmpLt
                           5834 ;	AOP_STK for _can_move__y_1_1
   1059 2B                 5835 	dec	hl
   105A 7E                 5836 	ld	a,(hl)
   105B FE 00              5837 	cp	#0x00
   105D DA 71 10           5838 	jp	c,00107$
                           5839 ;	genCast
                           5840 ;	AOP_STK for _can_move__y_1_1
                           5841 ;	AOP_STK for _can_move_sloc0_1_0
   1060 7E                 5842 	ld	a,(hl)
   1061 F8 00              5843 	lda	hl,0(sp)
   1063 22                 5844 	ld	(hl+),a
   1064 36 00              5845 	ld	(hl),#0x00
                           5846 ;	genCmpGt
                           5847 ;	AOP_STK for _can_move_sloc0_1_0
   1066 3E 11              5848 	ld	a,#0x11
   1068 2B                 5849 	dec	hl
   1069 96                 5850 	sub	a,(hl)
   106A 3E 00              5851 	ld	a,#0x00
   106C 23                 5852 	inc	hl
   106D 9E                 5853 	sbc	a,(hl)
   106E D2 77 10           5854 	jp	nc,00108$
                           5855 ;	genLabel
   1071                    5856 00107$:
                           5857 ;	game.c 898
                           5858 ;	genRet
   1071 11 00 00           5859 	ld	de,#0x0000
   1074 C3 B0 10           5860 	jp	00114$
                           5861 ;	genLabel
   1077                    5862 00108$:
                           5863 ;	game.c 905
                           5864 ;	genAssign
                           5865 ;	(registers are the same)
                           5866 ;	genAssign
                           5867 ;	AOP_STK for _can_move_map_position_1_1
   1077 F8 02              5868 	lda	hl,2(sp)
   1079 70                 5869 	ld	(hl),b
   107A 23                 5870 	inc	hl
   107B 71                 5871 	ld	(hl),c
                           5872 ;	game.c 906
                           5873 ;	genMult
                           5874 ;	AOP_STK for _can_move_sloc0_1_0
   107C F8 00              5875 	lda	hl,0(sp)
   107E 5E                 5876 	ld	e,(hl)
   107F 23                 5877 	inc	hl
   1080 56                 5878 	ld	d,(hl)
   1081 6B                 5879 	ld	l,e
   1082 62                 5880 	ld	h,d
   1083 29                 5881 	add	hl,hl
   1084 29                 5882 	add	hl,hl
   1085 19                 5883 	add	hl,de
   1086 29                 5884 	add	hl,hl
   1087 29                 5885 	add	hl,hl
   1088 4D                 5886 	ld	c,l
   1089 44                 5887 	ld	b,h
                           5888 ;	genPlus
                           5889 ;	AOP_STK for _can_move_map_position_1_1
                           5890 ;	Can't optimise plus by inc, falling back to the normal way
   108A F8 02              5891 	lda	hl,2(sp)
   108C 2A                 5892 	ld	a,(hl+)
   108D 66                 5893 	ld	h,(hl)
   108E 6F                 5894 	ld	l,a
   108F 09                 5895 	add	hl,bc
   1090 7D                 5896 	ld	a,l
   1091 54                 5897 	ld	d,h
   1092 F8 02              5898 	lda	hl,2(sp)
   1094 22                 5899 	ld	(hl+),a
   1095 72                 5900 	ld	(hl),d
                           5901 ;	game.c 908
                           5902 ;	genIpush
                           5903 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5904 ;	AOP_STK for _can_move_map_position_1_1
   1096 2B                 5905 	dec	hl
   1097 2A                 5906 	ld	a,(hl+)
   1098 66                 5907 	ld	h,(hl)
   1099 6F                 5908 	ld	l,a
   109A E5                 5909 	push	hl
                           5910 ;	genCall
   109B CD 01 0F           5911 	call	_can_move_to_map_pos
   109E 42                 5912 	ld	b,d
   109F 4B                 5913 	ld	c,e
   10A0 E8 02              5914 	lda	sp,2(sp)
                           5915 ;	genIfx
   10A2 79                 5916 	ld	a,c
   10A3 B0                 5917 	or	a,b
   10A4 CA AD 10           5918 	jp	z,00113$
                           5919 ;	game.c 909
                           5920 ;	genRet
   10A7 11 01 00           5921 	ld	de,#0x0001
   10AA C3 B0 10           5922 	jp	00114$
                           5923 ;	genLabel
   10AD                    5924 00113$:
                           5925 ;	game.c 912
                           5926 ;	genRet
   10AD 11 00 00           5927 	ld	de,#0x0000
                           5928 ;	genLabel
   10B0                    5929 00114$:
                           5930 ;	genEndFunction
   10B0 E8 06              5931 	lda	sp,6(sp)
   10B2 C9                 5932 	ret
   10B3                    5933 ___can_move_end:
                           5934 ;	game.c 915
                           5935 ;	genLabel
                           5936 ;	genFunction
                           5937 ;	---------------------------------
                           5938 ; Function rotate_player
                           5939 ; ---------------------------------
   10B3                    5940 ___rotate_player_start:
   10B3                    5941 _rotate_player:
   10B3 E8 FC              5942 	lda	sp,-4(sp)
                           5943 ;	game.c 916
                           5944 ;	genAssign
                           5945 ;	AOP_HL for _player
   10B5 21 B3 1A           5946 	ld	hl,#_player
   10B8 4E                 5947 	ld	c,(hl)
   10B9 23                 5948 	inc	hl
   10BA 46                 5949 	ld	b,(hl)
                           5950 ;	genPlus
                           5951 ;	genPlusIncr
                           5952 ;	Can't optimise plus by inc, falling back to the normal way
   10BB 79                 5953 	ld	a,c
   10BC C6 07              5954 	add	a,#0x07
   10BE 4F                 5955 	ld	c,a
   10BF 78                 5956 	ld	a,b
   10C0 CE 00              5957 	adc	a,#0x00
   10C2 47                 5958 	ld	b,a
                           5959 ;	genPointerGet
   10C3 0A                 5960 	ld	a,(bc)
   10C4 4F                 5961 	ld	c,a
                           5962 ;	genAssign
                           5963 ;	AOP_HL for _player
                           5964 ;	AOP_STK for _rotate_player_sloc0_1_0
   10C5 2B                 5965 	dec	hl
   10C6 2A                 5966 	ld	a,(hl+)
   10C7 5E                 5967 	ld	e,(hl)
   10C8 F8 02              5968 	lda	hl,2(sp)
   10CA 22                 5969 	ld	(hl+),a
   10CB 73                 5970 	ld	(hl),e
                           5971 ;	genPlus
                           5972 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5973 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5974 ;	genPlusIncr
                           5975 ;	Can't optimise plus by inc, falling back to the normal way
   10CC 2B                 5976 	dec	hl
   10CD 5E                 5977 	ld	e,(hl)
   10CE 23                 5978 	inc	hl
   10CF 56                 5979 	ld	d,(hl)
   10D0 21 0B 00           5980 	ld	hl,#0x000B
   10D3 19                 5981 	add	hl,de
   10D4 7D                 5982 	ld	a,l
   10D5 54                 5983 	ld	d,h
   10D6 F8 00              5984 	lda	hl,0(sp)
                           5985 ;	genPointerGet
                           5986 ;	AOP_STK for _rotate_player_sloc1_1_0
   10D8 22                 5987 	ld	(hl+),a
   10D9 72                 5988 	ld	(hl),d
   10DA 5F                 5989 	ld	e,a
   10DB 1A                 5990 	ld	a,(de)
   10DC 47                 5991 	ld	b,a
                           5992 ;	genIpush
                           5993 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10DD 79                 5994 	ld	a,c
   10DE F5                 5995 	push	af
   10DF 33                 5996 	inc	sp
                           5997 ;	genIpush
   10E0 78                 5998 	ld	a,b
   10E1 F5                 5999 	push	af
   10E2 33                 6000 	inc	sp
                           6001 ;	genCall
   10E3 CD 00 00           6002 	call	_set_sprite_tile
   10E6 E8 02              6003 	lda	sp,2(sp)
                           6004 ;	game.c 917
                           6005 ;	genAssign
                           6006 ;	AOP_HL for _player
   10E8 21 B3 1A           6007 	ld	hl,#_player
   10EB 4E                 6008 	ld	c,(hl)
   10EC 23                 6009 	inc	hl
   10ED 46                 6010 	ld	b,(hl)
                           6011 ;	genPlus
                           6012 ;	genPlusIncr
                           6013 ;	Can't optimise plus by inc, falling back to the normal way
   10EE 79                 6014 	ld	a,c
   10EF C6 0B              6015 	add	a,#0x0B
   10F1 4F                 6016 	ld	c,a
   10F2 78                 6017 	ld	a,b
   10F3 CE 00              6018 	adc	a,#0x00
   10F5 47                 6019 	ld	b,a
                           6020 ;	genPointerGet
   10F6 0A                 6021 	ld	a,(bc)
   10F7 4F                 6022 	ld	c,a
                           6023 ;	genIpush
                           6024 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10F8 3E 20              6025 	ld	a,#0x20
   10FA F5                 6026 	push	af
   10FB 33                 6027 	inc	sp
                           6028 ;	genIpush
   10FC 79                 6029 	ld	a,c
   10FD F5                 6030 	push	af
   10FE 33                 6031 	inc	sp
                           6032 ;	genCall
   10FF CD 00 00           6033 	call	_set_sprite_prop
   1102 E8 02              6034 	lda	sp,2(sp)
                           6035 ;	game.c 918
                           6036 ;	genIpush
                           6037 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1104 3E 05              6038 	ld	a,#0x05
   1106 F5                 6039 	push	af
   1107 33                 6040 	inc	sp
                           6041 ;	genCall
   1108 CD 00 00           6042 	call	_performantDelay
   110B E8 01              6043 	lda	sp,1(sp)
                           6044 ;	game.c 919
                           6045 ;	genAssign
                           6046 ;	AOP_HL for _player
   110D 21 B3 1A           6047 	ld	hl,#_player
   1110 4E                 6048 	ld	c,(hl)
   1111 23                 6049 	inc	hl
   1112 46                 6050 	ld	b,(hl)
                           6051 ;	genPlus
                           6052 ;	genPlusIncr
   1113 03                 6053 	inc	bc
   1114 03                 6054 	inc	bc
   1115 03                 6055 	inc	bc
   1116 03                 6056 	inc	bc
                           6057 ;	genPointerGet
   1117 0A                 6058 	ld	a,(bc)
   1118 4F                 6059 	ld	c,a
                           6060 ;	genAssign
                           6061 ;	AOP_HL for _player
                           6062 ;	AOP_STK for _rotate_player_sloc1_1_0
   1119 2B                 6063 	dec	hl
   111A 2A                 6064 	ld	a,(hl+)
   111B 5E                 6065 	ld	e,(hl)
   111C F8 00              6066 	lda	hl,0(sp)
   111E 22                 6067 	ld	(hl+),a
   111F 73                 6068 	ld	(hl),e
                           6069 ;	genPlus
                           6070 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6071 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6072 ;	genPlusIncr
                           6073 ;	Can't optimise plus by inc, falling back to the normal way
   1120 2B                 6074 	dec	hl
   1121 5E                 6075 	ld	e,(hl)
   1122 23                 6076 	inc	hl
   1123 56                 6077 	ld	d,(hl)
   1124 21 0B 00           6078 	ld	hl,#0x000B
   1127 19                 6079 	add	hl,de
   1128 7D                 6080 	ld	a,l
   1129 54                 6081 	ld	d,h
   112A F8 02              6082 	lda	hl,2(sp)
                           6083 ;	genPointerGet
                           6084 ;	AOP_STK for _rotate_player_sloc0_1_0
   112C 22                 6085 	ld	(hl+),a
   112D 72                 6086 	ld	(hl),d
   112E 5F                 6087 	ld	e,a
   112F 1A                 6088 	ld	a,(de)
   1130 47                 6089 	ld	b,a
                           6090 ;	genIpush
                           6091 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1131 79                 6092 	ld	a,c
   1132 F5                 6093 	push	af
   1133 33                 6094 	inc	sp
                           6095 ;	genIpush
   1134 78                 6096 	ld	a,b
   1135 F5                 6097 	push	af
   1136 33                 6098 	inc	sp
                           6099 ;	genCall
   1137 CD 00 00           6100 	call	_set_sprite_tile
   113A E8 02              6101 	lda	sp,2(sp)
                           6102 ;	game.c 920
                           6103 ;	genAssign
                           6104 ;	AOP_HL for _player
   113C 21 B3 1A           6105 	ld	hl,#_player
   113F 4E                 6106 	ld	c,(hl)
   1140 23                 6107 	inc	hl
   1141 46                 6108 	ld	b,(hl)
                           6109 ;	genPlus
                           6110 ;	genPlusIncr
                           6111 ;	Can't optimise plus by inc, falling back to the normal way
   1142 79                 6112 	ld	a,c
   1143 C6 0B              6113 	add	a,#0x0B
   1145 4F                 6114 	ld	c,a
   1146 78                 6115 	ld	a,b
   1147 CE 00              6116 	adc	a,#0x00
   1149 47                 6117 	ld	b,a
                           6118 ;	genPointerGet
   114A 0A                 6119 	ld	a,(bc)
   114B 4F                 6120 	ld	c,a
                           6121 ;	genIpush
                           6122 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   114C 3E 60              6123 	ld	a,#0x60
   114E F5                 6124 	push	af
   114F 33                 6125 	inc	sp
                           6126 ;	genIpush
   1150 79                 6127 	ld	a,c
   1151 F5                 6128 	push	af
   1152 33                 6129 	inc	sp
                           6130 ;	genCall
   1153 CD 00 00           6131 	call	_set_sprite_prop
   1156 E8 02              6132 	lda	sp,2(sp)
                           6133 ;	game.c 921
                           6134 ;	genIpush
                           6135 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1158 3E 05              6136 	ld	a,#0x05
   115A F5                 6137 	push	af
   115B 33                 6138 	inc	sp
                           6139 ;	genCall
   115C CD 00 00           6140 	call	_performantDelay
   115F E8 01              6141 	lda	sp,1(sp)
                           6142 ;	game.c 922
                           6143 ;	genAssign
                           6144 ;	AOP_HL for _player
   1161 21 B3 1A           6145 	ld	hl,#_player
   1164 4E                 6146 	ld	c,(hl)
   1165 23                 6147 	inc	hl
   1166 46                 6148 	ld	b,(hl)
                           6149 ;	genPlus
                           6150 ;	genPlusIncr
                           6151 ;	Can't optimise plus by inc, falling back to the normal way
   1167 79                 6152 	ld	a,c
   1168 C6 07              6153 	add	a,#0x07
   116A 4F                 6154 	ld	c,a
   116B 78                 6155 	ld	a,b
   116C CE 00              6156 	adc	a,#0x00
   116E 47                 6157 	ld	b,a
                           6158 ;	genPointerGet
   116F 0A                 6159 	ld	a,(bc)
   1170 4F                 6160 	ld	c,a
                           6161 ;	genAssign
                           6162 ;	AOP_HL for _player
                           6163 ;	AOP_STK for _rotate_player_sloc1_1_0
   1171 2B                 6164 	dec	hl
   1172 2A                 6165 	ld	a,(hl+)
   1173 5E                 6166 	ld	e,(hl)
   1174 F8 00              6167 	lda	hl,0(sp)
   1176 22                 6168 	ld	(hl+),a
   1177 73                 6169 	ld	(hl),e
                           6170 ;	genPlus
                           6171 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6172 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6173 ;	genPlusIncr
                           6174 ;	Can't optimise plus by inc, falling back to the normal way
   1178 2B                 6175 	dec	hl
   1179 5E                 6176 	ld	e,(hl)
   117A 23                 6177 	inc	hl
   117B 56                 6178 	ld	d,(hl)
   117C 21 0B 00           6179 	ld	hl,#0x000B
   117F 19                 6180 	add	hl,de
   1180 7D                 6181 	ld	a,l
   1181 54                 6182 	ld	d,h
   1182 F8 02              6183 	lda	hl,2(sp)
                           6184 ;	genPointerGet
                           6185 ;	AOP_STK for _rotate_player_sloc0_1_0
   1184 22                 6186 	ld	(hl+),a
   1185 72                 6187 	ld	(hl),d
   1186 5F                 6188 	ld	e,a
   1187 1A                 6189 	ld	a,(de)
   1188 47                 6190 	ld	b,a
                           6191 ;	genIpush
                           6192 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1189 79                 6193 	ld	a,c
   118A F5                 6194 	push	af
   118B 33                 6195 	inc	sp
                           6196 ;	genIpush
   118C 78                 6197 	ld	a,b
   118D F5                 6198 	push	af
   118E 33                 6199 	inc	sp
                           6200 ;	genCall
   118F CD 00 00           6201 	call	_set_sprite_tile
   1192 E8 02              6202 	lda	sp,2(sp)
                           6203 ;	game.c 923
                           6204 ;	genAssign
                           6205 ;	AOP_HL for _player
   1194 21 B3 1A           6206 	ld	hl,#_player
   1197 4E                 6207 	ld	c,(hl)
   1198 23                 6208 	inc	hl
   1199 46                 6209 	ld	b,(hl)
                           6210 ;	genPlus
                           6211 ;	genPlusIncr
                           6212 ;	Can't optimise plus by inc, falling back to the normal way
   119A 79                 6213 	ld	a,c
   119B C6 0B              6214 	add	a,#0x0B
   119D 4F                 6215 	ld	c,a
   119E 78                 6216 	ld	a,b
   119F CE 00              6217 	adc	a,#0x00
   11A1 47                 6218 	ld	b,a
                           6219 ;	genPointerGet
   11A2 0A                 6220 	ld	a,(bc)
   11A3 4F                 6221 	ld	c,a
                           6222 ;	genIpush
                           6223 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11A4 3E 40              6224 	ld	a,#0x40
   11A6 F5                 6225 	push	af
   11A7 33                 6226 	inc	sp
                           6227 ;	genIpush
   11A8 79                 6228 	ld	a,c
   11A9 F5                 6229 	push	af
   11AA 33                 6230 	inc	sp
                           6231 ;	genCall
   11AB CD 00 00           6232 	call	_set_sprite_prop
   11AE E8 02              6233 	lda	sp,2(sp)
                           6234 ;	game.c 924
                           6235 ;	genIpush
                           6236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11B0 3E 05              6237 	ld	a,#0x05
   11B2 F5                 6238 	push	af
   11B3 33                 6239 	inc	sp
                           6240 ;	genCall
   11B4 CD 00 00           6241 	call	_performantDelay
   11B7 E8 01              6242 	lda	sp,1(sp)
                           6243 ;	game.c 925
                           6244 ;	genAssign
                           6245 ;	AOP_HL for _player
   11B9 21 B3 1A           6246 	ld	hl,#_player
   11BC 4E                 6247 	ld	c,(hl)
   11BD 23                 6248 	inc	hl
   11BE 46                 6249 	ld	b,(hl)
                           6250 ;	genPlus
                           6251 ;	genPlusIncr
   11BF 03                 6252 	inc	bc
   11C0 03                 6253 	inc	bc
   11C1 03                 6254 	inc	bc
   11C2 03                 6255 	inc	bc
                           6256 ;	genPointerGet
   11C3 0A                 6257 	ld	a,(bc)
   11C4 4F                 6258 	ld	c,a
                           6259 ;	genAssign
                           6260 ;	AOP_HL for _player
                           6261 ;	AOP_STK for _rotate_player_sloc1_1_0
   11C5 2B                 6262 	dec	hl
   11C6 2A                 6263 	ld	a,(hl+)
   11C7 5E                 6264 	ld	e,(hl)
   11C8 F8 00              6265 	lda	hl,0(sp)
   11CA 22                 6266 	ld	(hl+),a
   11CB 73                 6267 	ld	(hl),e
                           6268 ;	genPlus
                           6269 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6270 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6271 ;	genPlusIncr
                           6272 ;	Can't optimise plus by inc, falling back to the normal way
   11CC 2B                 6273 	dec	hl
   11CD 5E                 6274 	ld	e,(hl)
   11CE 23                 6275 	inc	hl
   11CF 56                 6276 	ld	d,(hl)
   11D0 21 0B 00           6277 	ld	hl,#0x000B
   11D3 19                 6278 	add	hl,de
   11D4 7D                 6279 	ld	a,l
   11D5 54                 6280 	ld	d,h
   11D6 F8 02              6281 	lda	hl,2(sp)
                           6282 ;	genPointerGet
                           6283 ;	AOP_STK for _rotate_player_sloc0_1_0
   11D8 22                 6284 	ld	(hl+),a
   11D9 72                 6285 	ld	(hl),d
   11DA 5F                 6286 	ld	e,a
   11DB 1A                 6287 	ld	a,(de)
   11DC 47                 6288 	ld	b,a
                           6289 ;	genIpush
                           6290 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11DD 79                 6291 	ld	a,c
   11DE F5                 6292 	push	af
   11DF 33                 6293 	inc	sp
                           6294 ;	genIpush
   11E0 78                 6295 	ld	a,b
   11E1 F5                 6296 	push	af
   11E2 33                 6297 	inc	sp
                           6298 ;	genCall
   11E3 CD 00 00           6299 	call	_set_sprite_tile
   11E6 E8 02              6300 	lda	sp,2(sp)
                           6301 ;	game.c 926
                           6302 ;	genAssign
                           6303 ;	AOP_HL for _player
   11E8 21 B3 1A           6304 	ld	hl,#_player
   11EB 4E                 6305 	ld	c,(hl)
   11EC 23                 6306 	inc	hl
   11ED 46                 6307 	ld	b,(hl)
                           6308 ;	genPlus
                           6309 ;	genPlusIncr
                           6310 ;	Can't optimise plus by inc, falling back to the normal way
   11EE 79                 6311 	ld	a,c
   11EF C6 0B              6312 	add	a,#0x0B
   11F1 4F                 6313 	ld	c,a
   11F2 78                 6314 	ld	a,b
   11F3 CE 00              6315 	adc	a,#0x00
   11F5 47                 6316 	ld	b,a
                           6317 ;	genPointerGet
   11F6 0A                 6318 	ld	a,(bc)
   11F7 4F                 6319 	ld	c,a
                           6320 ;	genIpush
                           6321 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11F8 3E 00              6322 	ld	a,#0x00
   11FA F5                 6323 	push	af
   11FB 33                 6324 	inc	sp
                           6325 ;	genIpush
   11FC 79                 6326 	ld	a,c
   11FD F5                 6327 	push	af
   11FE 33                 6328 	inc	sp
                           6329 ;	genCall
   11FF CD 00 00           6330 	call	_set_sprite_prop
   1202 E8 02              6331 	lda	sp,2(sp)
                           6332 ;	game.c 927
                           6333 ;	genIpush
                           6334 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1204 3E 05              6335 	ld	a,#0x05
   1206 F5                 6336 	push	af
   1207 33                 6337 	inc	sp
                           6338 ;	genCall
   1208 CD 00 00           6339 	call	_performantDelay
   120B E8 01              6340 	lda	sp,1(sp)
                           6341 ;	game.c 928
                           6342 ;	genAssign
                           6343 ;	AOP_HL for _player
   120D 21 B3 1A           6344 	ld	hl,#_player
   1210 4E                 6345 	ld	c,(hl)
   1211 23                 6346 	inc	hl
   1212 46                 6347 	ld	b,(hl)
                           6348 ;	genPlus
                           6349 ;	genPlusIncr
   1213 03                 6350 	inc	bc
   1214 03                 6351 	inc	bc
                           6352 ;	genPointerGet
   1215 0A                 6353 	ld	a,(bc)
   1216 4F                 6354 	ld	c,a
                           6355 ;	genAssign
                           6356 ;	AOP_HL for _player
                           6357 ;	AOP_STK for _rotate_player_sloc1_1_0
   1217 2B                 6358 	dec	hl
   1218 2A                 6359 	ld	a,(hl+)
   1219 5E                 6360 	ld	e,(hl)
   121A F8 00              6361 	lda	hl,0(sp)
   121C 22                 6362 	ld	(hl+),a
   121D 73                 6363 	ld	(hl),e
                           6364 ;	genPlus
                           6365 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6366 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6367 ;	genPlusIncr
                           6368 ;	Can't optimise plus by inc, falling back to the normal way
   121E 2B                 6369 	dec	hl
   121F 5E                 6370 	ld	e,(hl)
   1220 23                 6371 	inc	hl
   1221 56                 6372 	ld	d,(hl)
   1222 21 0B 00           6373 	ld	hl,#0x000B
   1225 19                 6374 	add	hl,de
   1226 7D                 6375 	ld	a,l
   1227 54                 6376 	ld	d,h
   1228 F8 02              6377 	lda	hl,2(sp)
                           6378 ;	genPointerGet
                           6379 ;	AOP_STK for _rotate_player_sloc0_1_0
   122A 22                 6380 	ld	(hl+),a
   122B 72                 6381 	ld	(hl),d
   122C 5F                 6382 	ld	e,a
   122D 1A                 6383 	ld	a,(de)
   122E 47                 6384 	ld	b,a
                           6385 ;	genIpush
                           6386 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   122F 79                 6387 	ld	a,c
   1230 F5                 6388 	push	af
   1231 33                 6389 	inc	sp
                           6390 ;	genIpush
   1232 78                 6391 	ld	a,b
   1233 F5                 6392 	push	af
   1234 33                 6393 	inc	sp
                           6394 ;	genCall
   1235 CD 00 00           6395 	call	_set_sprite_tile
   1238 E8 02              6396 	lda	sp,2(sp)
                           6397 ;	game.c 929
                           6398 ;	genAssign
                           6399 ;	AOP_HL for _player
   123A 21 B3 1A           6400 	ld	hl,#_player
   123D 4E                 6401 	ld	c,(hl)
   123E 23                 6402 	inc	hl
   123F 46                 6403 	ld	b,(hl)
                           6404 ;	genPlus
                           6405 ;	genPlusIncr
                           6406 ;	Can't optimise plus by inc, falling back to the normal way
   1240 79                 6407 	ld	a,c
   1241 C6 0B              6408 	add	a,#0x0B
   1243 4F                 6409 	ld	c,a
   1244 78                 6410 	ld	a,b
   1245 CE 00              6411 	adc	a,#0x00
   1247 47                 6412 	ld	b,a
                           6413 ;	genPointerGet
   1248 0A                 6414 	ld	a,(bc)
   1249 4F                 6415 	ld	c,a
                           6416 ;	genIpush
                           6417 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   124A 3E 00              6418 	ld	a,#0x00
   124C F5                 6419 	push	af
   124D 33                 6420 	inc	sp
                           6421 ;	genIpush
   124E 79                 6422 	ld	a,c
   124F F5                 6423 	push	af
   1250 33                 6424 	inc	sp
                           6425 ;	genCall
   1251 CD 00 00           6426 	call	_set_sprite_prop
   1254 E8 02              6427 	lda	sp,2(sp)
                           6428 ;	genLabel
   1256                    6429 00101$:
                           6430 ;	genEndFunction
   1256 E8 04              6431 	lda	sp,4(sp)
   1258 C9                 6432 	ret
   1259                    6433 ___rotate_player_end:
                           6434 ;	game.c 932
                           6435 ;	genLabel
                           6436 ;	genFunction
                           6437 ;	---------------------------------
                           6438 ; Function move_character
                           6439 ; ---------------------------------
   1259                    6440 ___move_character_start:
   1259                    6441 _move_character:
   1259 E8 F1              6442 	lda	sp,-15(sp)
                           6443 ;	game.c 935
                           6444 ;	genAssign
                           6445 ;	AOP_HL for _player
   125B 21 B3 1A           6446 	ld	hl,#_player
   125E 4E                 6447 	ld	c,(hl)
   125F 23                 6448 	inc	hl
   1260 46                 6449 	ld	b,(hl)
                           6450 ;	genPlus
                           6451 ;	genPlusIncr
                           6452 ;	Can't optimise plus by inc, falling back to the normal way
   1261 79                 6453 	ld	a,c
   1262 C6 0B              6454 	add	a,#0x0B
   1264 4F                 6455 	ld	c,a
   1265 78                 6456 	ld	a,b
   1266 CE 00              6457 	adc	a,#0x00
   1268 47                 6458 	ld	b,a
                           6459 ;	genPointerGet
   1269 0A                 6460 	ld	a,(bc)
   126A 4F                 6461 	ld	c,a
                           6462 ;	genAssign
                           6463 ;	AOP_STK for 
                           6464 ;	AOP_STK for _move_character_sloc0_1_0
   126B F8 11              6465 	lda	hl,17(sp)
   126D 2A                 6466 	ld	a,(hl+)
   126E 5E                 6467 	ld	e,(hl)
   126F F8 0D              6468 	lda	hl,13(sp)
   1271 22                 6469 	ld	(hl+),a
   1272 73                 6470 	ld	(hl),e
                           6471 ;	genPlus
                           6472 ;	AOP_STK for _move_character_sloc0_1_0
                           6473 ;	AOP_STK for _move_character_sloc1_1_0
                           6474 ;	genPlusIncr
                           6475 ;	Can't optimise plus by inc, falling back to the normal way
   1273 2B                 6476 	dec	hl
   1274 5E                 6477 	ld	e,(hl)
   1275 23                 6478 	inc	hl
   1276 56                 6479 	ld	d,(hl)
   1277 21 0B 00           6480 	ld	hl,#0x000B
   127A 19                 6481 	add	hl,de
   127B 7D                 6482 	ld	a,l
   127C 54                 6483 	ld	d,h
   127D F8 0B              6484 	lda	hl,11(sp)
                           6485 ;	genPointerGet
                           6486 ;	AOP_STK for _move_character_sloc1_1_0
   127F 22                 6487 	ld	(hl+),a
   1280 72                 6488 	ld	(hl),d
   1281 5F                 6489 	ld	e,a
   1282 1A                 6490 	ld	a,(de)
   1283 47                 6491 	ld	b,a
                           6492 ;	genCmpEq
                           6493 ; genCmpEq: left 1, right 1, result 0
   1284 79                 6494 	ld	a,c
   1285 B8                 6495 	cp	b
                           6496 ;	game.c 936
                           6497 ;	genRet
                           6498 ;	genLabel
   1286 CA 8C 12           6499 	jp	z,00102$
   1289                    6500 00197$:
   1289 C3 B6 1A           6501 	jp	00166$
   128C                    6502 00102$:
                           6503 ;	game.c 939
                           6504 ;	genPlus
                           6505 ;	AOP_STK for _move_character_sloc0_1_0
                           6506 ;	AOP_STK for _move_character_sloc2_1_0
                           6507 ;	genPlusIncr
                           6508 ;	Can't optimise plus by inc, falling back to the normal way
   128C F8 0D              6509 	lda	hl,13(sp)
   128E 5E                 6510 	ld	e,(hl)
   128F 23                 6511 	inc	hl
   1290 56                 6512 	ld	d,(hl)
   1291 21 09 00           6513 	ld	hl,#0x0009
   1294 19                 6514 	add	hl,de
   1295 7D                 6515 	ld	a,l
   1296 54                 6516 	ld	d,h
   1297 F8 09              6517 	lda	hl,9(sp)
                           6518 ;	genPointerGet
                           6519 ;	AOP_STK for _move_character_sloc2_1_0
   1299 22                 6520 	ld	(hl+),a
   129A 72                 6521 	ld	(hl),d
   129B 5F                 6522 	ld	e,a
   129C 1A                 6523 	ld	a,(de)
                           6524 ;	genCmpEq
                           6525 ; genCmpEq: left 1, right 1, result 0
   129D 4F                 6526 	ld	c,a
   129E B7                 6527 	or	a,a
   129F CA 9D 16           6528 	jp	z,00164$
   12A2                    6529 00198$:
                           6530 ;	game.c 942
                           6531 ;	genCmpEq
                           6532 ; genCmpEq: left 1, right 1, result 0
   12A2 78                 6533 	ld	a,b
   12A3 FE 01              6534 	cp	a,#0x01
   12A5 C2 F3 15           6535 	jp	nz,00124$
   12A8 18 03              6536 	jr	00200$
   12AA                    6537 00199$:
   12AA C3 F3 15           6538 	jp	00124$
   12AD                    6539 00200$:
                           6540 ;	game.c 944
                           6541 ;	genAssign
   12AD 0E 02              6542 	ld	c,#0x02
                           6543 ;	game.c 947
                           6544 ;	genPlus
                           6545 ;	AOP_STK for _move_character_sloc0_1_0
                           6546 ;	AOP_STK for _move_character_sloc3_1_0
                           6547 ;	genPlusIncr
                           6548 ;	Can't optimise plus by inc, falling back to the normal way
   12AF F8 0D              6549 	lda	hl,13(sp)
   12B1 5E                 6550 	ld	e,(hl)
   12B2 23                 6551 	inc	hl
   12B3 56                 6552 	ld	d,(hl)
   12B4 21 0A 00           6553 	ld	hl,#0x000A
   12B7 19                 6554 	add	hl,de
   12B8 7D                 6555 	ld	a,l
   12B9 54                 6556 	ld	d,h
   12BA F8 07              6557 	lda	hl,7(sp)
                           6558 ;	genPointerGet
                           6559 ;	AOP_STK for _move_character_sloc3_1_0
                           6560 ;	AOP_STK for _move_character_sloc4_1_0
   12BC 22                 6561 	ld	(hl+),a
   12BD 72                 6562 	ld	(hl),d
   12BE 5F                 6563 	ld	e,a
   12BF 1A                 6564 	ld	a,(de)
   12C0 2B                 6565 	dec	hl
   12C1 2B                 6566 	dec	hl
                           6567 ;	genCmpEq
                           6568 ;	AOP_STK for _move_character_sloc4_1_0
                           6569 ; genCmpEq: left 1, right 1, result 0
   12C2 77                 6570 	ld      (hl),a
                           6571 ; Removed redundent load
   12C3 FE 04              6572 	cp	a,#0x04
   12C5 CA E5 12           6573 	jp	z,00105$
   12C8                    6574 00201$:
                           6575 ;	game.c 948
                           6576 ;	genCmpEq
                           6577 ;	AOP_STK for _move_character_sloc4_1_0
                           6578 ; genCmpEq: left 1, right 1, result 0
   12C8 F8 06              6579 	lda	hl,6(sp)
   12CA 7E                 6580 	ld	a,(hl)
   12CB FE 08              6581 	cp	a,#0x08
   12CD CA E5 12           6582 	jp	z,00105$
   12D0                    6583 00202$:
                           6584 ;	game.c 949
                           6585 ;	genCmpEq
                           6586 ;	AOP_STK for _move_character_sloc4_1_0
                           6587 ; genCmpEq: left 1, right 1, result 0
   12D0 F8 06              6588 	lda	hl,6(sp)
   12D2 7E                 6589 	ld	a,(hl)
   12D3 FE 0C              6590 	cp	a,#0x0C
   12D5 CA E5 12           6591 	jp	z,00105$
   12D8                    6592 00203$:
                           6593 ;	game.c 950
                           6594 ;	genCmpEq
                           6595 ;	AOP_STK for _move_character_sloc4_1_0
                           6596 ; genCmpEq: left 1, right 1, result 0
   12D8 F8 06              6597 	lda	hl,6(sp)
   12DA 7E                 6598 	ld	a,(hl)
   12DB FE 10              6599 	cp	a,#0x10
   12DD C2 40 13           6600 	jp	nz,00106$
   12E0 18 03              6601 	jr	00205$
   12E2                    6602 00204$:
   12E2 C3 40 13           6603 	jp	00106$
   12E5                    6604 00205$:
                           6605 ;	genLabel
   12E5                    6606 00105$:
                           6607 ;	game.c 952
                           6608 ;	genPlus
                           6609 ;	AOP_STK for _move_character_sloc0_1_0
                           6610 ;	AOP_STK for _move_character_sloc5_1_0
                           6611 ;	genPlusIncr
                           6612 ;	Can't optimise plus by inc, falling back to the normal way
   12E5 F8 0D              6613 	lda	hl,13(sp)
   12E7 5E                 6614 	ld	e,(hl)
   12E8 23                 6615 	inc	hl
   12E9 56                 6616 	ld	d,(hl)
   12EA 21 08 00           6617 	ld	hl,#0x0008
   12ED 19                 6618 	add	hl,de
   12EE 7D                 6619 	ld	a,l
   12EF 54                 6620 	ld	d,h
   12F0 F8 04              6621 	lda	hl,4(sp)
                           6622 ;	genPointerGet
                           6623 ;	AOP_STK for _move_character_sloc5_1_0
                           6624 ;	AOP_STK for _move_character_sloc4_1_0
   12F2 22                 6625 	ld	(hl+),a
   12F3 72                 6626 	ld	(hl),d
   12F4 5F                 6627 	ld	e,a
   12F5 1A                 6628 	ld	a,(de)
   12F6 23                 6629 	inc	hl
   12F7 77                 6630 	ld	(hl),a
                           6631 ;	genPlus
                           6632 ;	AOP_STK for _move_character_sloc0_1_0
                           6633 ;	AOP_STK for _move_character_sloc5_1_0
                           6634 ;	genPlusIncr
                           6635 ;	Can't optimise plus by inc, falling back to the normal way
   12F8 F8 0D              6636 	lda	hl,13(sp)
   12FA 5E                 6637 	ld	e,(hl)
   12FB 23                 6638 	inc	hl
   12FC 56                 6639 	ld	d,(hl)
   12FD 21 01 00           6640 	ld	hl,#0x0001
   1300 19                 6641 	add	hl,de
   1301 7D                 6642 	ld	a,l
   1302 54                 6643 	ld	d,h
   1303 F8 04              6644 	lda	hl,4(sp)
                           6645 ;	genPointerGet
                           6646 ;	AOP_STK for _move_character_sloc5_1_0
                           6647 ;	AOP_STK for _move_character_sloc6_1_0
   1305 22                 6648 	ld	(hl+),a
   1306 72                 6649 	ld	(hl),d
   1307 5F                 6650 	ld	e,a
   1308 1A                 6651 	ld	a,(de)
   1309 2B                 6652 	dec	hl
   130A 2B                 6653 	dec	hl
   130B 77                 6654 	ld	(hl),a
                           6655 ;	genPointerGet
                           6656 ;	AOP_STK for _move_character_sloc0_1_0
                           6657 ;	AOP_STK for _move_character_sloc5_1_0
   130C F8 0D              6658 	lda	hl,13(sp)
   130E 5E                 6659 	ld	e,(hl)
   130F 23                 6660 	inc	hl
   1310 56                 6661 	ld	d,(hl)
   1311 1A                 6662 	ld	a,(de)
   1312 F8 04              6663 	lda	hl,4(sp)
   1314 77                 6664 	ld	(hl),a
                           6665 ;	genIpush
                           6666 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1315 C5                 6667 	push	bc
                           6668 ;	AOP_STK for _move_character_sloc4_1_0
   1316 23                 6669 	inc	hl
   1317 23                 6670 	inc	hl
   1318 7E                 6671 	ld	a,(hl)
   1319 F5                 6672 	push	af
   131A 33                 6673 	inc	sp
                           6674 ;	genIpush
                           6675 ;	AOP_STK for _move_character_sloc6_1_0
   131B F8 06              6676 	lda	hl,6(sp)
   131D 7E                 6677 	ld	a,(hl)
   131E F5                 6678 	push	af
   131F 33                 6679 	inc	sp
                           6680 ;	genIpush
                           6681 ;	AOP_STK for _move_character_sloc5_1_0
   1320 23                 6682 	inc	hl
   1321 7E                 6683 	ld	a,(hl)
   1322 F5                 6684 	push	af
   1323 33                 6685 	inc	sp
                           6686 ;	genCall
   1324 CD CA 0F           6687 	call	_can_move
                           6688 ;	AOP_STK for _move_character_sloc5_1_0
   1327 F8 0A              6689 	lda	hl,10(sp)
   1329 72                 6690 	ld	(hl),d
   132A 2B                 6691 	dec	hl
   132B 73                 6692 	ld	(hl),e
   132C E8 03              6693 	lda	sp,3(sp)
   132E C1                 6694 	pop	bc
                           6695 ;	genIfx
                           6696 ;	AOP_STK for _move_character_sloc5_1_0
   132F F8 04              6697 	lda	hl,4(sp)
   1331 2A                 6698 	ld	a,(hl+)
   1332 B6                 6699 	or	a,(hl)
   1333 C2 40 13           6700 	jp	nz,00106$
                           6701 ;	game.c 953
                           6702 ;	genAssign (pointer)
                           6703 ;	AOP_STK for _move_character_sloc3_1_0
   1336 23                 6704 	inc	hl
   1337 23                 6705 	inc	hl
   1338 5E                 6706 	ld	e,(hl)
   1339 23                 6707 	inc	hl
   133A 56                 6708 	ld	d,(hl)
   133B 3E 01              6709 	ld	a,#0x01
   133D 12                 6710 	ld	(de),a
                           6711 ;	game.c 955
                           6712 ;	genAssign
   133E 0E 00              6713 	ld	c,#0x00
                           6714 ;	genLabel
   1340                    6715 00106$:
                           6716 ;	game.c 960
                           6717 ;	genPlus
                           6718 ;	AOP_STK for _move_character_sloc0_1_0
                           6719 ;	AOP_STK for _move_character_sloc5_1_0
                           6720 ;	genPlusIncr
                           6721 ;	Can't optimise plus by inc, falling back to the normal way
   1340 F8 0D              6722 	lda	hl,13(sp)
   1342 5E                 6723 	ld	e,(hl)
   1343 23                 6724 	inc	hl
   1344 56                 6725 	ld	d,(hl)
   1345 21 08 00           6726 	ld	hl,#0x0008
   1348 19                 6727 	add	hl,de
   1349 7D                 6728 	ld	a,l
   134A 54                 6729 	ld	d,h
   134B F8 04              6730 	lda	hl,4(sp)
                           6731 ;	genPointerGet
                           6732 ;	AOP_STK for _move_character_sloc5_1_0
                           6733 ;	AOP_STK for _move_character_sloc6_1_0
   134D 22                 6734 	ld	(hl+),a
   134E 72                 6735 	ld	(hl),d
   134F 5F                 6736 	ld	e,a
   1350 1A                 6737 	ld	a,(de)
   1351 2B                 6738 	dec	hl
   1352 2B                 6739 	dec	hl
   1353 77                 6740 	ld	(hl),a
                           6741 ;	genCmpGt
                           6742 ;	AOP_STK for _move_character_sloc6_1_0
                           6743 ;	AOP_STK for _move_character_sloc5_1_0
   1354 3E 04              6744 	ld	a,#0x04
   1356 96                 6745 	sub	a,(hl)
   1357 3E 00              6746 	ld	a,#0x00
   1359 17                 6747 	rla
   135A 23                 6748 	inc	hl
   135B 77                 6749 	ld	(hl),a
                           6750 ;	genIfx
                           6751 ;	AOP_STK for _move_character_sloc5_1_0
   135C AF                 6752 	xor	a,a
   135D B6                 6753 	or	a,(hl)
   135E C2 C9 14           6754 	jp	nz,00115$
                           6755 ;	genJumpTab
                           6756 ;	AOP_STK for _move_character_sloc6_1_0
   1361 2B                 6757 	dec	hl
   1362 5E                 6758 	ld	e,(hl)
   1363 16 00              6759 	ld	d,#0x00
   1365 21 6C 13           6760 	ld	hl,#00206$
   1368 19                 6761 	add	hl,de
   1369 19                 6762 	add	hl,de
   136A 19                 6763 	add	hl,de
   136B E9                 6764 	jp	(hl)
   136C                    6765 00206$:
   136C C3 C3 14           6766 	jp	00114$
   136F C3 15 14           6767 	jp	00112$
   1372 C3 CB 13           6768 	jp	00111$
   1375 C3 6F 14           6769 	jp	00113$
   1378 C3 7B 13           6770 	jp	00110$
                           6771 ;	game.c 962
                           6772 ;	genLabel
   137B                    6773 00110$:
                           6774 ;	genPointerGet
                           6775 ;	AOP_STK for _move_character_sloc0_1_0
                           6776 ;	AOP_STK for _move_character_sloc4_1_0
   137B F8 0D              6777 	lda	hl,13(sp)
   137D 5E                 6778 	ld	e,(hl)
   137E 23                 6779 	inc	hl
   137F 56                 6780 	ld	d,(hl)
   1380 1A                 6781 	ld	a,(de)
   1381 F8 06              6782 	lda	hl,6(sp)
                           6783 ;	genMinus
                           6784 ;	AOP_STK for _move_character_sloc4_1_0
                           6785 ;	AOP_STK for _move_character_sloc7_1_0
   1383 77                 6786 	ld      (hl),a
                           6787 ; Removed redundent load
   1384 91                 6788 	sub	a,c
   1385 F8 02              6789 	lda	hl,2(sp)
   1387 77                 6790 	ld	(hl),a
                           6791 ;	genAssign (pointer)
                           6792 ;	AOP_STK for _move_character_sloc0_1_0
                           6793 ;	AOP_STK for _move_character_sloc7_1_0
   1388 F8 0D              6794 	lda	hl,13(sp)
   138A 5E                 6795 	ld	e,(hl)
   138B 23                 6796 	inc	hl
   138C 56                 6797 	ld	d,(hl)
   138D F8 02              6798 	lda	hl,2(sp)
   138F 7E                 6799 	ld	a,(hl)
   1390 12                 6800 	ld	(de),a
                           6801 ;	game.c 963
                           6802 ;	genPlus
                           6803 ;	AOP_STK for _move_character_sloc0_1_0
                           6804 ;	AOP_STK for _move_character_sloc8_1_0
                           6805 ;	genPlusIncr
                           6806 ;	Can't optimise plus by inc, falling back to the normal way
   1391 F8 0D              6807 	lda	hl,13(sp)
   1393 5E                 6808 	ld	e,(hl)
   1394 23                 6809 	inc	hl
   1395 56                 6810 	ld	d,(hl)
   1396 21 04 00           6811 	ld	hl,#0x0004
   1399 19                 6812 	add	hl,de
   139A 7D                 6813 	ld	a,l
   139B 54                 6814 	ld	d,h
   139C F8 00              6815 	lda	hl,0(sp)
                           6816 ;	genPointerGet
                           6817 ;	AOP_STK for _move_character_sloc8_1_0
                           6818 ;	AOP_STK for _move_character_sloc7_1_0
   139E 22                 6819 	ld	(hl+),a
   139F 72                 6820 	ld	(hl),d
   13A0 5F                 6821 	ld	e,a
   13A1 1A                 6822 	ld	a,(de)
   13A2 23                 6823 	inc	hl
   13A3 77                 6824 	ld	(hl),a
                           6825 ;	genIpush
                           6826 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13A4 C5                 6827 	push	bc
                           6828 ;	AOP_STK for _move_character_sloc7_1_0
   13A5 7E                 6829 	ld	a,(hl)
   13A6 F5                 6830 	push	af
   13A7 33                 6831 	inc	sp
                           6832 ;	genIpush
   13A8 78                 6833 	ld	a,b
   13A9 F5                 6834 	push	af
   13AA 33                 6835 	inc	sp
                           6836 ;	genCall
   13AB CD 00 00           6837 	call	_set_sprite_tile
   13AE E8 02              6838 	lda	sp,2(sp)
   13B0 C1                 6839 	pop	bc
                           6840 ;	game.c 964
                           6841 ;	genPointerGet
                           6842 ;	AOP_STK for _move_character_sloc1_1_0
                           6843 ;	AOP_STK for _move_character_sloc8_1_0
   13B1 F8 0B              6844 	lda	hl,11(sp)
   13B3 5E                 6845 	ld	e,(hl)
   13B4 23                 6846 	inc	hl
   13B5 56                 6847 	ld	d,(hl)
   13B6 1A                 6848 	ld	a,(de)
   13B7 F8 00              6849 	lda	hl,0(sp)
   13B9 77                 6850 	ld	(hl),a
                           6851 ;	genIpush
                           6852 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13BA C5                 6853 	push	bc
   13BB 3E 20              6854 	ld	a,#0x20
   13BD F5                 6855 	push	af
   13BE 33                 6856 	inc	sp
                           6857 ;	genIpush
                           6858 ;	AOP_STK for _move_character_sloc8_1_0
   13BF 7E                 6859 	ld	a,(hl)
   13C0 F5                 6860 	push	af
   13C1 33                 6861 	inc	sp
                           6862 ;	genCall
   13C2 CD 00 00           6863 	call	_set_sprite_prop
   13C5 E8 02              6864 	lda	sp,2(sp)
   13C7 C1                 6865 	pop	bc
                           6866 ;	game.c 965
                           6867 ;	genGoto
   13C8 C3 C9 14           6868 	jp	00115$
                           6869 ;	game.c 967
                           6870 ;	genLabel
   13CB                    6871 00111$:
                           6872 ;	genPlus
                           6873 ;	AOP_STK for _move_character_sloc0_1_0
                           6874 ;	AOP_STK for _move_character_sloc8_1_0
                           6875 ;	genPlusIncr
                           6876 ;	Can't optimise plus by inc, falling back to the normal way
   13CB F8 0D              6877 	lda	hl,13(sp)
   13CD 5E                 6878 	ld	e,(hl)
   13CE 23                 6879 	inc	hl
   13CF 56                 6880 	ld	d,(hl)
   13D0 21 04 00           6881 	ld	hl,#0x0004
   13D3 19                 6882 	add	hl,de
   13D4 7D                 6883 	ld	a,l
   13D5 54                 6884 	ld	d,h
   13D6 F8 00              6885 	lda	hl,0(sp)
                           6886 ;	genPointerGet
                           6887 ;	AOP_STK for _move_character_sloc8_1_0
                           6888 ;	AOP_STK for _move_character_sloc7_1_0
   13D8 22                 6889 	ld	(hl+),a
   13D9 72                 6890 	ld	(hl),d
   13DA 5F                 6891 	ld	e,a
   13DB 1A                 6892 	ld	a,(de)
   13DC 23                 6893 	inc	hl
   13DD 77                 6894 	ld	(hl),a
                           6895 ;	genIpush
                           6896 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13DE C5                 6897 	push	bc
                           6898 ;	AOP_STK for _move_character_sloc7_1_0
   13DF 7E                 6899 	ld	a,(hl)
   13E0 F5                 6900 	push	af
   13E1 33                 6901 	inc	sp
                           6902 ;	genIpush
   13E2 78                 6903 	ld	a,b
   13E3 F5                 6904 	push	af
   13E4 33                 6905 	inc	sp
                           6906 ;	genCall
   13E5 CD 00 00           6907 	call	_set_sprite_tile
   13E8 E8 02              6908 	lda	sp,2(sp)
   13EA C1                 6909 	pop	bc
                           6910 ;	game.c 968
                           6911 ;	genPointerGet
                           6912 ;	AOP_STK for _move_character_sloc1_1_0
                           6913 ;	AOP_STK for _move_character_sloc8_1_0
   13EB F8 0B              6914 	lda	hl,11(sp)
   13ED 5E                 6915 	ld	e,(hl)
   13EE 23                 6916 	inc	hl
   13EF 56                 6917 	ld	d,(hl)
   13F0 1A                 6918 	ld	a,(de)
   13F1 F8 00              6919 	lda	hl,0(sp)
   13F3 77                 6920 	ld	(hl),a
                           6921 ;	genIpush
                           6922 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13F4 C5                 6923 	push	bc
   13F5 3E 00              6924 	ld	a,#0x00
   13F7 F5                 6925 	push	af
   13F8 33                 6926 	inc	sp
                           6927 ;	genIpush
                           6928 ;	AOP_STK for _move_character_sloc8_1_0
   13F9 7E                 6929 	ld	a,(hl)
   13FA F5                 6930 	push	af
   13FB 33                 6931 	inc	sp
                           6932 ;	genCall
   13FC CD 00 00           6933 	call	_set_sprite_prop
   13FF E8 02              6934 	lda	sp,2(sp)
   1401 C1                 6935 	pop	bc
                           6936 ;	game.c 969
                           6937 ;	genPointerGet
                           6938 ;	AOP_STK for _move_character_sloc0_1_0
                           6939 ;	AOP_STK for _move_character_sloc8_1_0
   1402 F8 0D              6940 	lda	hl,13(sp)
   1404 5E                 6941 	ld	e,(hl)
   1405 23                 6942 	inc	hl
   1406 56                 6943 	ld	d,(hl)
   1407 1A                 6944 	ld	a,(de)
   1408 F8 00              6945 	lda	hl,0(sp)
                           6946 ;	genPlus
                           6947 ;	AOP_STK for _move_character_sloc8_1_0
                           6948 ;	Can't optimise plus by inc, falling back to the normal way
   140A 77                 6949 	ld      (hl),a
                           6950 ; Removed redundent load
   140B 81                 6951 	add	a,c
                           6952 ;	genAssign (pointer)
                           6953 ;	AOP_STK for _move_character_sloc0_1_0
   140C F8 0D              6954 	lda	hl,13(sp)
   140E 5E                 6955 	ld	e,(hl)
   140F 23                 6956 	inc	hl
   1410 56                 6957 	ld	d,(hl)
   1411 12                 6958 	ld	(de),a
                           6959 ;	game.c 970
                           6960 ;	genGoto
   1412 C3 C9 14           6961 	jp	00115$
                           6962 ;	game.c 972
                           6963 ;	genLabel
   1415                    6964 00112$:
                           6965 ;	genPlus
                           6966 ;	AOP_STK for _move_character_sloc0_1_0
                           6967 ;	AOP_STK for _move_character_sloc8_1_0
                           6968 ;	genPlusIncr
                           6969 ;	Can't optimise plus by inc, falling back to the normal way
   1415 F8 0D              6970 	lda	hl,13(sp)
   1417 5E                 6971 	ld	e,(hl)
   1418 23                 6972 	inc	hl
   1419 56                 6973 	ld	d,(hl)
   141A 21 07 00           6974 	ld	hl,#0x0007
   141D 19                 6975 	add	hl,de
   141E 7D                 6976 	ld	a,l
   141F 54                 6977 	ld	d,h
   1420 F8 00              6978 	lda	hl,0(sp)
                           6979 ;	genPointerGet
                           6980 ;	AOP_STK for _move_character_sloc8_1_0
                           6981 ;	AOP_STK for _move_character_sloc7_1_0
   1422 22                 6982 	ld	(hl+),a
   1423 72                 6983 	ld	(hl),d
   1424 5F                 6984 	ld	e,a
   1425 1A                 6985 	ld	a,(de)
   1426 23                 6986 	inc	hl
   1427 77                 6987 	ld	(hl),a
                           6988 ;	genIpush
                           6989 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1428 C5                 6990 	push	bc
                           6991 ;	AOP_STK for _move_character_sloc7_1_0
   1429 7E                 6992 	ld	a,(hl)
   142A F5                 6993 	push	af
   142B 33                 6994 	inc	sp
                           6995 ;	genIpush
   142C 78                 6996 	ld	a,b
   142D F5                 6997 	push	af
   142E 33                 6998 	inc	sp
                           6999 ;	genCall
   142F CD 00 00           7000 	call	_set_sprite_tile
   1432 E8 02              7001 	lda	sp,2(sp)
   1434 C1                 7002 	pop	bc
                           7003 ;	game.c 973
                           7004 ;	genPointerGet
                           7005 ;	AOP_STK for _move_character_sloc1_1_0
                           7006 ;	AOP_STK for _move_character_sloc8_1_0
   1435 F8 0B              7007 	lda	hl,11(sp)
   1437 5E                 7008 	ld	e,(hl)
   1438 23                 7009 	inc	hl
   1439 56                 7010 	ld	d,(hl)
   143A 1A                 7011 	ld	a,(de)
   143B F8 00              7012 	lda	hl,0(sp)
   143D 77                 7013 	ld	(hl),a
                           7014 ;	genIpush
                           7015 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   143E C5                 7016 	push	bc
   143F 3E 20              7017 	ld	a,#0x20
   1441 F5                 7018 	push	af
   1442 33                 7019 	inc	sp
                           7020 ;	genIpush
                           7021 ;	AOP_STK for _move_character_sloc8_1_0
   1443 7E                 7022 	ld	a,(hl)
   1444 F5                 7023 	push	af
   1445 33                 7024 	inc	sp
                           7025 ;	genCall
   1446 CD 00 00           7026 	call	_set_sprite_prop
   1449 E8 02              7027 	lda	sp,2(sp)
   144B C1                 7028 	pop	bc
                           7029 ;	game.c 974
                           7030 ;	genPlus
                           7031 ;	AOP_STK for _move_character_sloc0_1_0
                           7032 ;	AOP_STK for _move_character_sloc8_1_0
                           7033 ;	genPlusIncr
                           7034 ;	Can't optimise plus by inc, falling back to the normal way
   144C F8 0D              7035 	lda	hl,13(sp)
   144E 5E                 7036 	ld	e,(hl)
   144F 23                 7037 	inc	hl
   1450 56                 7038 	ld	d,(hl)
   1451 21 01 00           7039 	ld	hl,#0x0001
   1454 19                 7040 	add	hl,de
   1455 7D                 7041 	ld	a,l
   1456 54                 7042 	ld	d,h
   1457 F8 00              7043 	lda	hl,0(sp)
                           7044 ;	genPointerGet
                           7045 ;	AOP_STK for _move_character_sloc8_1_0
                           7046 ;	AOP_STK for _move_character_sloc7_1_0
   1459 22                 7047 	ld	(hl+),a
   145A 72                 7048 	ld	(hl),d
   145B 5F                 7049 	ld	e,a
   145C 1A                 7050 	ld	a,(de)
   145D 23                 7051 	inc	hl
                           7052 ;	genMinus
                           7053 ;	AOP_STK for _move_character_sloc7_1_0
                           7054 ;	AOP_STK for _move_character_sloc4_1_0
   145E 77                 7055 	ld      (hl),a
                           7056 ; Removed redundent load
   145F 91                 7057 	sub	a,c
   1460 F8 06              7058 	lda	hl,6(sp)
   1462 77                 7059 	ld	(hl),a
                           7060 ;	genAssign (pointer)
                           7061 ;	AOP_STK for _move_character_sloc8_1_0
                           7062 ;	AOP_STK for _move_character_sloc4_1_0
   1463 F8 00              7063 	lda	hl,0(sp)
   1465 5E                 7064 	ld	e,(hl)
   1466 23                 7065 	inc	hl
   1467 56                 7066 	ld	d,(hl)
   1468 F8 06              7067 	lda	hl,6(sp)
   146A 7E                 7068 	ld	a,(hl)
   146B 12                 7069 	ld	(de),a
                           7070 ;	game.c 975
                           7071 ;	genGoto
   146C C3 C9 14           7072 	jp	00115$
                           7073 ;	game.c 977
                           7074 ;	genLabel
   146F                    7075 00113$:
                           7076 ;	genPlus
                           7077 ;	AOP_STK for _move_character_sloc0_1_0
                           7078 ;	AOP_STK for _move_character_sloc8_1_0
                           7079 ;	genPlusIncr
                           7080 ;	Can't optimise plus by inc, falling back to the normal way
   146F F8 0D              7081 	lda	hl,13(sp)
   1471 5E                 7082 	ld	e,(hl)
   1472 23                 7083 	inc	hl
   1473 56                 7084 	ld	d,(hl)
   1474 21 07 00           7085 	ld	hl,#0x0007
   1477 19                 7086 	add	hl,de
   1478 7D                 7087 	ld	a,l
   1479 54                 7088 	ld	d,h
   147A F8 00              7089 	lda	hl,0(sp)
                           7090 ;	genPointerGet
                           7091 ;	AOP_STK for _move_character_sloc8_1_0
                           7092 ;	AOP_STK for _move_character_sloc7_1_0
   147C 22                 7093 	ld	(hl+),a
   147D 72                 7094 	ld	(hl),d
   147E 5F                 7095 	ld	e,a
   147F 1A                 7096 	ld	a,(de)
   1480 23                 7097 	inc	hl
   1481 77                 7098 	ld	(hl),a
                           7099 ;	genIpush
                           7100 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1482 C5                 7101 	push	bc
                           7102 ;	AOP_STK for _move_character_sloc7_1_0
   1483 7E                 7103 	ld	a,(hl)
   1484 F5                 7104 	push	af
   1485 33                 7105 	inc	sp
                           7106 ;	genIpush
   1486 78                 7107 	ld	a,b
   1487 F5                 7108 	push	af
   1488 33                 7109 	inc	sp
                           7110 ;	genCall
   1489 CD 00 00           7111 	call	_set_sprite_tile
   148C E8 02              7112 	lda	sp,2(sp)
   148E C1                 7113 	pop	bc
                           7114 ;	game.c 978
                           7115 ;	genPointerGet
                           7116 ;	AOP_STK for _move_character_sloc1_1_0
                           7117 ;	AOP_STK for _move_character_sloc8_1_0
   148F F8 0B              7118 	lda	hl,11(sp)
   1491 5E                 7119 	ld	e,(hl)
   1492 23                 7120 	inc	hl
   1493 56                 7121 	ld	d,(hl)
   1494 1A                 7122 	ld	a,(de)
   1495 F8 00              7123 	lda	hl,0(sp)
   1497 77                 7124 	ld	(hl),a
                           7125 ;	genIpush
                           7126 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1498 C5                 7127 	push	bc
   1499 3E 40              7128 	ld	a,#0x40
   149B F5                 7129 	push	af
   149C 33                 7130 	inc	sp
                           7131 ;	genIpush
                           7132 ;	AOP_STK for _move_character_sloc8_1_0
   149D 7E                 7133 	ld	a,(hl)
   149E F5                 7134 	push	af
   149F 33                 7135 	inc	sp
                           7136 ;	genCall
   14A0 CD 00 00           7137 	call	_set_sprite_prop
   14A3 E8 02              7138 	lda	sp,2(sp)
   14A5 C1                 7139 	pop	bc
                           7140 ;	game.c 979
                           7141 ;	genPlus
                           7142 ;	AOP_STK for _move_character_sloc0_1_0
                           7143 ;	AOP_STK for _move_character_sloc8_1_0
                           7144 ;	genPlusIncr
                           7145 ;	Can't optimise plus by inc, falling back to the normal way
   14A6 F8 0D              7146 	lda	hl,13(sp)
   14A8 5E                 7147 	ld	e,(hl)
   14A9 23                 7148 	inc	hl
   14AA 56                 7149 	ld	d,(hl)
   14AB 21 01 00           7150 	ld	hl,#0x0001
   14AE 19                 7151 	add	hl,de
   14AF 7D                 7152 	ld	a,l
   14B0 54                 7153 	ld	d,h
   14B1 F8 00              7154 	lda	hl,0(sp)
                           7155 ;	genPointerGet
                           7156 ;	AOP_STK for _move_character_sloc8_1_0
                           7157 ;	AOP_STK for _move_character_sloc7_1_0
   14B3 22                 7158 	ld	(hl+),a
   14B4 72                 7159 	ld	(hl),d
   14B5 5F                 7160 	ld	e,a
   14B6 1A                 7161 	ld	a,(de)
   14B7 23                 7162 	inc	hl
                           7163 ;	genPlus
                           7164 ;	AOP_STK for _move_character_sloc7_1_0
                           7165 ;	Can't optimise plus by inc, falling back to the normal way
   14B8 77                 7166 	ld      (hl),a
                           7167 ; Removed redundent load
   14B9 81                 7168 	add	a,c
                           7169 ;	genAssign (pointer)
                           7170 ;	AOP_STK for _move_character_sloc8_1_0
   14BA 2B                 7171 	dec	hl
   14BB 2B                 7172 	dec	hl
   14BC 5E                 7173 	ld	e,(hl)
   14BD 23                 7174 	inc	hl
   14BE 56                 7175 	ld	d,(hl)
   14BF 12                 7176 	ld	(de),a
                           7177 ;	game.c 980
                           7178 ;	genGoto
   14C0 C3 C9 14           7179 	jp	00115$
                           7180 ;	game.c 982
                           7181 ;	genLabel
   14C3                    7182 00114$:
                           7183 ;	genCall
                           7184 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14C3 C5                 7185 	push	bc
   14C4 CD B3 10           7186 	call	_rotate_player
   14C7 E1                 7187 	pop	hl
   14C8 44                 7188 	ld	b,h
                           7189 ;	game.c 984
                           7190 ;	genLabel
   14C9                    7191 00115$:
                           7192 ;	game.c 986
                           7193 ;	genPointerGet
                           7194 ;	AOP_STK for _move_character_sloc3_1_0
   14C9 F8 07              7195 	lda	hl,7(sp)
   14CB 5E                 7196 	ld	e,(hl)
   14CC 23                 7197 	inc	hl
   14CD 56                 7198 	ld	d,(hl)
   14CE 1A                 7199 	ld	a,(de)
   14CF 4F                 7200 	ld	c,a
                           7201 ;	genMinus
   14D0 0D                 7202 	dec	c
                           7203 ;	genAssign (pointer)
                           7204 ;	AOP_STK for _move_character_sloc3_1_0
   14D1 2B                 7205 	dec	hl
   14D2 5E                 7206 	ld	e,(hl)
   14D3 23                 7207 	inc	hl
   14D4 56                 7208 	ld	d,(hl)
   14D5 79                 7209 	ld	a,c
   14D6 12                 7210 	ld	(de),a
                           7211 ;	game.c 987
                           7212 ;	genCmpEq
                           7213 ; genCmpEq: left 1, right 1, result 0
   14D7 79                 7214 	ld	a,c
   14D8 B7                 7215 	or	a,a
   14D9 C2 F3 15           7216 	jp	nz,00124$
   14DC 18 03              7217 	jr	00208$
   14DE                    7218 00207$:
   14DE C3 F3 15           7219 	jp	00124$
   14E1                    7220 00208$:
                           7221 ;	game.c 988
                           7222 ;	genAssign (pointer)
                           7223 ;	AOP_STK for _move_character_sloc2_1_0
   14E1 F8 09              7224 	lda	hl,9(sp)
   14E3 5E                 7225 	ld	e,(hl)
   14E4 23                 7226 	inc	hl
   14E5 56                 7227 	ld	d,(hl)
   14E6 3E 00              7228 	ld	a,#0x00
   14E8 12                 7229 	ld	(de),a
                           7230 ;	game.c 989
                           7231 ;	genCmpLt
                           7232 ;	AOP_STK for _move_character_sloc6_1_0
   14E9 F8 03              7233 	lda	hl,3(sp)
   14EB 7E                 7234 	ld	a,(hl)
   14EC FE 01              7235 	cp	#0x01
   14EE DA F3 15           7236 	jp	c,00124$
                           7237 ;	genIfx
                           7238 ;	AOP_STK for _move_character_sloc5_1_0
   14F1 AF                 7239 	xor	a,a
   14F2 23                 7240 	inc	hl
   14F3 B6                 7241 	or	a,(hl)
   14F4 C2 F3 15           7242 	jp	nz,00124$
                           7243 ;	genMinus
                           7244 ;	AOP_STK for _move_character_sloc6_1_0
   14F7 2B                 7245 	dec	hl
   14F8 7E                 7246 	ld	a,(hl)
   14F9 C6 FF              7247 	add	a,#0xFF
   14FB 4F                 7248 	ld	c,a
                           7249 ;	genJumpTab
   14FC 59                 7250 	ld	e,c
   14FD 16 00              7251 	ld	d,#0x00
   14FF 21 06 15           7252 	ld	hl,#00209$
   1502 19                 7253 	add	hl,de
   1503 19                 7254 	add	hl,de
   1504 19                 7255 	add	hl,de
   1505 E9                 7256 	jp	(hl)
   1506                    7257 00209$:
   1506 C3 84 15           7258 	jp	00118$
   1509 C3 4B 15           7259 	jp	00117$
   150C C3 BD 15           7260 	jp	00119$
   150F C3 12 15           7261 	jp	00116$
                           7262 ;	game.c 992
                           7263 ;	genLabel
   1512                    7264 00116$:
                           7265 ;	genPlus
                           7266 ;	AOP_STK for _move_character_sloc0_1_0
                           7267 ;	AOP_STK for _move_character_sloc8_1_0
                           7268 ;	genPlusIncr
                           7269 ;	Can't optimise plus by inc, falling back to the normal way
   1512 F8 0D              7270 	lda	hl,13(sp)
   1514 5E                 7271 	ld	e,(hl)
   1515 23                 7272 	inc	hl
   1516 56                 7273 	ld	d,(hl)
   1517 21 02 00           7274 	ld	hl,#0x0002
   151A 19                 7275 	add	hl,de
   151B 7D                 7276 	ld	a,l
   151C 54                 7277 	ld	d,h
   151D F8 00              7278 	lda	hl,0(sp)
                           7279 ;	genPointerGet
                           7280 ;	AOP_STK for _move_character_sloc8_1_0
   151F 22                 7281 	ld	(hl+),a
   1520 72                 7282 	ld	(hl),d
   1521 5F                 7283 	ld	e,a
   1522 1A                 7284 	ld	a,(de)
   1523 4F                 7285 	ld	c,a
                           7286 ;	genIpush
                           7287 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1524 C5                 7288 	push	bc
   1525 79                 7289 	ld	a,c
   1526 F5                 7290 	push	af
   1527 33                 7291 	inc	sp
                           7292 ;	genIpush
   1528 78                 7293 	ld	a,b
   1529 F5                 7294 	push	af
   152A 33                 7295 	inc	sp
                           7296 ;	genCall
   152B CD 00 00           7297 	call	_set_sprite_tile
   152E E8 02              7298 	lda	sp,2(sp)
   1530 E1                 7299 	pop	hl
   1531 44                 7300 	ld	b,h
                           7301 ;	game.c 993
                           7302 ;	genPointerGet
                           7303 ;	AOP_STK for _move_character_sloc1_1_0
   1532 F8 0B              7304 	lda	hl,11(sp)
   1534 5E                 7305 	ld	e,(hl)
   1535 23                 7306 	inc	hl
   1536 56                 7307 	ld	d,(hl)
   1537 1A                 7308 	ld	a,(de)
   1538 4F                 7309 	ld	c,a
                           7310 ;	genIpush
                           7311 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1539 C5                 7312 	push	bc
   153A 3E 20              7313 	ld	a,#0x20
   153C F5                 7314 	push	af
   153D 33                 7315 	inc	sp
                           7316 ;	genIpush
   153E 79                 7317 	ld	a,c
   153F F5                 7318 	push	af
   1540 33                 7319 	inc	sp
                           7320 ;	genCall
   1541 CD 00 00           7321 	call	_set_sprite_prop
   1544 E8 02              7322 	lda	sp,2(sp)
   1546 E1                 7323 	pop	hl
   1547 44                 7324 	ld	b,h
                           7325 ;	game.c 994
                           7326 ;	genGoto
   1548 C3 F3 15           7327 	jp	00124$
                           7328 ;	game.c 997
                           7329 ;	genLabel
   154B                    7330 00117$:
                           7331 ;	genPlus
                           7332 ;	AOP_STK for _move_character_sloc0_1_0
                           7333 ;	AOP_STK for _move_character_sloc8_1_0
                           7334 ;	genPlusIncr
                           7335 ;	Can't optimise plus by inc, falling back to the normal way
   154B F8 0D              7336 	lda	hl,13(sp)
   154D 5E                 7337 	ld	e,(hl)
   154E 23                 7338 	inc	hl
   154F 56                 7339 	ld	d,(hl)
   1550 21 02 00           7340 	ld	hl,#0x0002
   1553 19                 7341 	add	hl,de
   1554 7D                 7342 	ld	a,l
   1555 54                 7343 	ld	d,h
   1556 F8 00              7344 	lda	hl,0(sp)
                           7345 ;	genPointerGet
                           7346 ;	AOP_STK for _move_character_sloc8_1_0
   1558 22                 7347 	ld	(hl+),a
   1559 72                 7348 	ld	(hl),d
   155A 5F                 7349 	ld	e,a
   155B 1A                 7350 	ld	a,(de)
   155C 4F                 7351 	ld	c,a
                           7352 ;	genIpush
                           7353 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   155D C5                 7354 	push	bc
   155E 79                 7355 	ld	a,c
   155F F5                 7356 	push	af
   1560 33                 7357 	inc	sp
                           7358 ;	genIpush
   1561 78                 7359 	ld	a,b
   1562 F5                 7360 	push	af
   1563 33                 7361 	inc	sp
                           7362 ;	genCall
   1564 CD 00 00           7363 	call	_set_sprite_tile
   1567 E8 02              7364 	lda	sp,2(sp)
   1569 E1                 7365 	pop	hl
   156A 44                 7366 	ld	b,h
                           7367 ;	game.c 998
                           7368 ;	genPointerGet
                           7369 ;	AOP_STK for _move_character_sloc1_1_0
   156B F8 0B              7370 	lda	hl,11(sp)
   156D 5E                 7371 	ld	e,(hl)
   156E 23                 7372 	inc	hl
   156F 56                 7373 	ld	d,(hl)
   1570 1A                 7374 	ld	a,(de)
   1571 4F                 7375 	ld	c,a
                           7376 ;	genIpush
                           7377 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1572 C5                 7378 	push	bc
   1573 3E 00              7379 	ld	a,#0x00
   1575 F5                 7380 	push	af
   1576 33                 7381 	inc	sp
                           7382 ;	genIpush
   1577 79                 7383 	ld	a,c
   1578 F5                 7384 	push	af
   1579 33                 7385 	inc	sp
                           7386 ;	genCall
   157A CD 00 00           7387 	call	_set_sprite_prop
   157D E8 02              7388 	lda	sp,2(sp)
   157F E1                 7389 	pop	hl
   1580 44                 7390 	ld	b,h
                           7391 ;	game.c 999
                           7392 ;	genGoto
   1581 C3 F3 15           7393 	jp	00124$
                           7394 ;	game.c 1001
                           7395 ;	genLabel
   1584                    7396 00118$:
                           7397 ;	genPlus
                           7398 ;	AOP_STK for _move_character_sloc0_1_0
                           7399 ;	AOP_STK for _move_character_sloc8_1_0
                           7400 ;	genPlusIncr
                           7401 ;	Can't optimise plus by inc, falling back to the normal way
   1584 F8 0D              7402 	lda	hl,13(sp)
   1586 5E                 7403 	ld	e,(hl)
   1587 23                 7404 	inc	hl
   1588 56                 7405 	ld	d,(hl)
   1589 21 05 00           7406 	ld	hl,#0x0005
   158C 19                 7407 	add	hl,de
   158D 7D                 7408 	ld	a,l
   158E 54                 7409 	ld	d,h
   158F F8 00              7410 	lda	hl,0(sp)
                           7411 ;	genPointerGet
                           7412 ;	AOP_STK for _move_character_sloc8_1_0
   1591 22                 7413 	ld	(hl+),a
   1592 72                 7414 	ld	(hl),d
   1593 5F                 7415 	ld	e,a
   1594 1A                 7416 	ld	a,(de)
   1595 4F                 7417 	ld	c,a
                           7418 ;	genIpush
                           7419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1596 C5                 7420 	push	bc
   1597 79                 7421 	ld	a,c
   1598 F5                 7422 	push	af
   1599 33                 7423 	inc	sp
                           7424 ;	genIpush
   159A 78                 7425 	ld	a,b
   159B F5                 7426 	push	af
   159C 33                 7427 	inc	sp
                           7428 ;	genCall
   159D CD 00 00           7429 	call	_set_sprite_tile
   15A0 E8 02              7430 	lda	sp,2(sp)
   15A2 E1                 7431 	pop	hl
   15A3 44                 7432 	ld	b,h
                           7433 ;	game.c 1002
                           7434 ;	genPointerGet
                           7435 ;	AOP_STK for _move_character_sloc1_1_0
   15A4 F8 0B              7436 	lda	hl,11(sp)
   15A6 5E                 7437 	ld	e,(hl)
   15A7 23                 7438 	inc	hl
   15A8 56                 7439 	ld	d,(hl)
   15A9 1A                 7440 	ld	a,(de)
   15AA 4F                 7441 	ld	c,a
                           7442 ;	genIpush
                           7443 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15AB C5                 7444 	push	bc
   15AC 3E 20              7445 	ld	a,#0x20
   15AE F5                 7446 	push	af
   15AF 33                 7447 	inc	sp
                           7448 ;	genIpush
   15B0 79                 7449 	ld	a,c
   15B1 F5                 7450 	push	af
   15B2 33                 7451 	inc	sp
                           7452 ;	genCall
   15B3 CD 00 00           7453 	call	_set_sprite_prop
   15B6 E8 02              7454 	lda	sp,2(sp)
   15B8 E1                 7455 	pop	hl
   15B9 44                 7456 	ld	b,h
                           7457 ;	game.c 1003
                           7458 ;	genGoto
   15BA C3 F3 15           7459 	jp	00124$
                           7460 ;	game.c 1005
                           7461 ;	genLabel
   15BD                    7462 00119$:
                           7463 ;	genPlus
                           7464 ;	AOP_STK for _move_character_sloc0_1_0
                           7465 ;	AOP_STK for _move_character_sloc8_1_0
                           7466 ;	genPlusIncr
                           7467 ;	Can't optimise plus by inc, falling back to the normal way
   15BD F8 0D              7468 	lda	hl,13(sp)
   15BF 5E                 7469 	ld	e,(hl)
   15C0 23                 7470 	inc	hl
   15C1 56                 7471 	ld	d,(hl)
   15C2 21 05 00           7472 	ld	hl,#0x0005
   15C5 19                 7473 	add	hl,de
   15C6 7D                 7474 	ld	a,l
   15C7 54                 7475 	ld	d,h
   15C8 F8 00              7476 	lda	hl,0(sp)
                           7477 ;	genPointerGet
                           7478 ;	AOP_STK for _move_character_sloc8_1_0
   15CA 22                 7479 	ld	(hl+),a
   15CB 72                 7480 	ld	(hl),d
   15CC 5F                 7481 	ld	e,a
   15CD 1A                 7482 	ld	a,(de)
   15CE 4F                 7483 	ld	c,a
                           7484 ;	genIpush
                           7485 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15CF C5                 7486 	push	bc
   15D0 79                 7487 	ld	a,c
   15D1 F5                 7488 	push	af
   15D2 33                 7489 	inc	sp
                           7490 ;	genIpush
   15D3 78                 7491 	ld	a,b
   15D4 F5                 7492 	push	af
   15D5 33                 7493 	inc	sp
                           7494 ;	genCall
   15D6 CD 00 00           7495 	call	_set_sprite_tile
   15D9 E8 02              7496 	lda	sp,2(sp)
   15DB E1                 7497 	pop	hl
   15DC 44                 7498 	ld	b,h
                           7499 ;	game.c 1006
                           7500 ;	genPointerGet
                           7501 ;	AOP_STK for _move_character_sloc1_1_0
   15DD F8 0B              7502 	lda	hl,11(sp)
   15DF 5E                 7503 	ld	e,(hl)
   15E0 23                 7504 	inc	hl
   15E1 56                 7505 	ld	d,(hl)
   15E2 1A                 7506 	ld	a,(de)
   15E3 4F                 7507 	ld	c,a
                           7508 ;	genIpush
                           7509 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15E4 C5                 7510 	push	bc
   15E5 3E 40              7511 	ld	a,#0x40
   15E7 F5                 7512 	push	af
   15E8 33                 7513 	inc	sp
                           7514 ;	genIpush
   15E9 79                 7515 	ld	a,c
   15EA F5                 7516 	push	af
   15EB 33                 7517 	inc	sp
                           7518 ;	genCall
   15EC CD 00 00           7519 	call	_set_sprite_prop
   15EF E8 02              7520 	lda	sp,2(sp)
   15F1 E1                 7521 	pop	hl
   15F2 44                 7522 	ld	b,h
                           7523 ;	game.c 1008
                           7524 ;	genLabel
   15F3                    7525 00124$:
                           7526 ;	game.c 1014
                           7527 ;	genCmpEq
                           7528 ; genCmpEq: left 1, right 1, result 0
   15F3 78                 7529 	ld	a,b
   15F4 FE 02              7530 	cp	a,#0x02
   15F6 C2 51 1A           7531 	jp	nz,00165$
   15F9 18 03              7532 	jr	00211$
   15FB                    7533 00210$:
   15FB C3 51 1A           7534 	jp	00165$
   15FE                    7535 00211$:
                           7536 ;	game.c 1015
                           7537 ;	genPlus
                           7538 ;	AOP_STK for _move_character_sloc0_1_0
                           7539 ;	AOP_STK for _move_character_sloc8_1_0
                           7540 ;	genPlusIncr
                           7541 ;	Can't optimise plus by inc, falling back to the normal way
   15FE F8 0D              7542 	lda	hl,13(sp)
   1600 5E                 7543 	ld	e,(hl)
   1601 23                 7544 	inc	hl
   1602 56                 7545 	ld	d,(hl)
   1603 21 04 00           7546 	ld	hl,#0x0004
   1606 19                 7547 	add	hl,de
   1607 7D                 7548 	ld	a,l
   1608 54                 7549 	ld	d,h
   1609 F8 00              7550 	lda	hl,0(sp)
                           7551 ;	genPointerGet
                           7552 ;	AOP_STK for _move_character_sloc8_1_0
   160B 22                 7553 	ld	(hl+),a
   160C 72                 7554 	ld	(hl),d
   160D 5F                 7555 	ld	e,a
   160E 1A                 7556 	ld	a,(de)
   160F 4F                 7557 	ld	c,a
                           7558 ;	genIpush
                           7559 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1610 C5                 7560 	push	bc
   1611 79                 7561 	ld	a,c
   1612 F5                 7562 	push	af
   1613 33                 7563 	inc	sp
                           7564 ;	genIpush
   1614 78                 7565 	ld	a,b
   1615 F5                 7566 	push	af
   1616 33                 7567 	inc	sp
                           7568 ;	genCall
   1617 CD 00 00           7569 	call	_set_sprite_tile
   161A E8 02              7570 	lda	sp,2(sp)
   161C E1                 7571 	pop	hl
   161D 44                 7572 	ld	b,h
                           7573 ;	game.c 1017
                           7574 ;	genPointerGet
                           7575 ;	AOP_STK for _move_character_sloc2_1_0
   161E F8 09              7576 	lda	hl,9(sp)
   1620 5E                 7577 	ld	e,(hl)
   1621 23                 7578 	inc	hl
   1622 56                 7579 	ld	d,(hl)
   1623 1A                 7580 	ld	a,(de)
                           7581 ;	genCmpEq
                           7582 ; genCmpEq: left 1, right 1, result 0
   1624 4F                 7583 	ld	c,a
   1625 FE 01              7584 	cp	a,#0x01
   1627 C2 46 16           7585 	jp	nz,00126$
   162A 18 03              7586 	jr	00213$
   162C                    7587 00212$:
   162C C3 46 16           7588 	jp	00126$
   162F                    7589 00213$:
                           7590 ;	game.c 1019
                           7591 ;	genAssign (pointer)
                           7592 ;	AOP_STK for _move_character_sloc2_1_0
   162F F8 09              7593 	lda	hl,9(sp)
   1631 5E                 7594 	ld	e,(hl)
   1632 23                 7595 	inc	hl
   1633 56                 7596 	ld	d,(hl)
   1634 3E 02              7597 	ld	a,#0x02
   1636 12                 7598 	ld	(de),a
                           7599 ;	game.c 1020
                           7600 ;	genPlus
                           7601 ;	AOP_STK for _move_character_sloc0_1_0
                           7602 ;	genPlusIncr
                           7603 ;	Can't optimise plus by inc, falling back to the normal way
   1637 F8 0D              7604 	lda	hl,13(sp)
   1639 5E                 7605 	ld	e,(hl)
   163A 23                 7606 	inc	hl
   163B 56                 7607 	ld	d,(hl)
   163C 21 0A 00           7608 	ld	hl,#0x000A
   163F 19                 7609 	add	hl,de
   1640 7D                 7610 	ld	a,l
   1641 54                 7611 	ld	d,h
   1642 6F                 7612 	ld	l,a
   1643 62                 7613 	ld	h,d
                           7614 ;	genAssign (pointer)
   1644 36 10              7615 	ld	(hl),#0x10
                           7616 ;	genLabel
   1646                    7617 00126$:
                           7618 ;	game.c 1022
                           7619 ;	genPlus
                           7620 ;	AOP_STK for _move_character_sloc0_1_0
                           7621 ;	AOP_STK for _move_character_sloc8_1_0
                           7622 ;	genPlusIncr
                           7623 ;	Can't optimise plus by inc, falling back to the normal way
   1646 F8 0D              7624 	lda	hl,13(sp)
   1648 5E                 7625 	ld	e,(hl)
   1649 23                 7626 	inc	hl
   164A 56                 7627 	ld	d,(hl)
   164B 21 0A 00           7628 	ld	hl,#0x000A
   164E 19                 7629 	add	hl,de
   164F 7D                 7630 	ld	a,l
   1650 54                 7631 	ld	d,h
   1651 F8 00              7632 	lda	hl,0(sp)
                           7633 ;	genPointerGet
                           7634 ;	AOP_STK for _move_character_sloc8_1_0
   1653 22                 7635 	ld	(hl+),a
   1654 72                 7636 	ld	(hl),d
   1655 5F                 7637 	ld	e,a
   1656 1A                 7638 	ld	a,(de)
   1657 4F                 7639 	ld	c,a
                           7640 ;	genMinus
   1658 0D                 7641 	dec	c
                           7642 ;	genAssign (pointer)
                           7643 ;	AOP_STK for _move_character_sloc8_1_0
   1659 2B                 7644 	dec	hl
   165A 5E                 7645 	ld	e,(hl)
   165B 23                 7646 	inc	hl
   165C 56                 7647 	ld	d,(hl)
   165D 79                 7648 	ld	a,c
   165E 12                 7649 	ld	(de),a
                           7650 ;	game.c 1024
                           7651 ;	genCmpEq
                           7652 ; genCmpEq: left 1, right 1, result 0
   165F 79                 7653 	ld	a,c
   1660 B7                 7654 	or	a,a
   1661 C2 51 1A           7655 	jp	nz,00165$
   1664 18 03              7656 	jr	00215$
   1666                    7657 00214$:
   1666 C3 51 1A           7658 	jp	00165$
   1669                    7659 00215$:
                           7660 ;	game.c 1025
                           7661 ;	genAssign (pointer)
                           7662 ;	AOP_STK for _move_character_sloc2_1_0
   1669 F8 09              7663 	lda	hl,9(sp)
   166B 5E                 7664 	ld	e,(hl)
   166C 23                 7665 	inc	hl
   166D 56                 7666 	ld	d,(hl)
   166E 3E 00              7667 	ld	a,#0x00
   1670 12                 7668 	ld	(de),a
                           7669 ;	game.c 1026
                           7670 ;	genPlus
                           7671 ;	AOP_STK for _move_character_sloc0_1_0
                           7672 ;	AOP_STK for _move_character_sloc8_1_0
                           7673 ;	genPlusIncr
                           7674 ;	Can't optimise plus by inc, falling back to the normal way
   1671 F8 0D              7675 	lda	hl,13(sp)
   1673 5E                 7676 	ld	e,(hl)
   1674 23                 7677 	inc	hl
   1675 56                 7678 	ld	d,(hl)
   1676 21 02 00           7679 	ld	hl,#0x0002
   1679 19                 7680 	add	hl,de
   167A 7D                 7681 	ld	a,l
   167B 54                 7682 	ld	d,h
   167C F8 00              7683 	lda	hl,0(sp)
                           7684 ;	genPointerGet
                           7685 ;	AOP_STK for _move_character_sloc8_1_0
   167E 22                 7686 	ld	(hl+),a
   167F 72                 7687 	ld	(hl),d
   1680 5F                 7688 	ld	e,a
   1681 1A                 7689 	ld	a,(de)
   1682 4F                 7690 	ld	c,a
                           7691 ;	genPointerGet
                           7692 ;	AOP_STK for _move_character_sloc1_1_0
                           7693 ;	AOP_STK for _move_character_sloc8_1_0
   1683 F8 0B              7694 	lda	hl,11(sp)
   1685 5E                 7695 	ld	e,(hl)
   1686 23                 7696 	inc	hl
   1687 56                 7697 	ld	d,(hl)
   1688 1A                 7698 	ld	a,(de)
   1689 F8 00              7699 	lda	hl,0(sp)
   168B 77                 7700 	ld	(hl),a
                           7701 ;	genIpush
                           7702 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   168C C5                 7703 	push	bc
   168D 79                 7704 	ld	a,c
   168E F5                 7705 	push	af
   168F 33                 7706 	inc	sp
                           7707 ;	genIpush
                           7708 ;	AOP_STK for _move_character_sloc8_1_0
   1690 7E                 7709 	ld	a,(hl)
   1691 F5                 7710 	push	af
   1692 33                 7711 	inc	sp
                           7712 ;	genCall
   1693 CD 00 00           7713 	call	_set_sprite_tile
   1696 E8 02              7714 	lda	sp,2(sp)
   1698 E1                 7715 	pop	hl
   1699 44                 7716 	ld	b,h
                           7717 ;	genGoto
   169A C3 51 1A           7718 	jp	00165$
                           7719 ;	genLabel
   169D                    7720 00164$:
                           7721 ;	game.c 1035
                           7722 ;	genCmpEq
                           7723 ;	AOP_HL for _input_timer
                           7724 ; genCmpEq: left 1, right 1, result 0
   169D 21 03 19           7725 	ld	hl,#_input_timer
   16A0 7E                 7726 	ld	a,(hl)
   16A1 FE 04              7727 	cp	a,#0x04
   16A3 C2 FF 16           7728 	jp	nz,00134$
   16A6 18 03              7729 	jr	00217$
   16A8                    7730 00216$:
   16A8 C3 FF 16           7731 	jp	00134$
   16AB                    7732 00217$:
                           7733 ;	game.c 1036
                           7734 ;	genPlus
                           7735 ;	AOP_STK for _move_character_sloc0_1_0
                           7736 ;	AOP_STK for _move_character_sloc8_1_0
                           7737 ;	genPlusIncr
                           7738 ;	Can't optimise plus by inc, falling back to the normal way
   16AB F8 0D              7739 	lda	hl,13(sp)
   16AD 5E                 7740 	ld	e,(hl)
   16AE 23                 7741 	inc	hl
   16AF 56                 7742 	ld	d,(hl)
   16B0 21 08 00           7743 	ld	hl,#0x0008
   16B3 19                 7744 	add	hl,de
   16B4 7D                 7745 	ld	a,l
   16B5 54                 7746 	ld	d,h
   16B6 F8 00              7747 	lda	hl,0(sp)
                           7748 ;	genPointerGet
                           7749 ;	AOP_STK for _move_character_sloc8_1_0
   16B8 22                 7750 	ld	(hl+),a
   16B9 72                 7751 	ld	(hl),d
   16BA 5F                 7752 	ld	e,a
   16BB 1A                 7753 	ld	a,(de)
   16BC 4F                 7754 	ld	c,a
                           7755 ;	genPlus
                           7756 ;	AOP_STK for _move_character_sloc0_1_0
                           7757 ;	AOP_STK for _move_character_sloc8_1_0
                           7758 ;	genPlusIncr
                           7759 ;	Can't optimise plus by inc, falling back to the normal way
   16BD F8 0D              7760 	lda	hl,13(sp)
   16BF 5E                 7761 	ld	e,(hl)
   16C0 23                 7762 	inc	hl
   16C1 56                 7763 	ld	d,(hl)
   16C2 21 01 00           7764 	ld	hl,#0x0001
   16C5 19                 7765 	add	hl,de
   16C6 7D                 7766 	ld	a,l
   16C7 54                 7767 	ld	d,h
   16C8 F8 00              7768 	lda	hl,0(sp)
                           7769 ;	genPointerGet
                           7770 ;	AOP_STK for _move_character_sloc8_1_0
                           7771 ;	AOP_STK for _move_character_sloc7_1_0
   16CA 22                 7772 	ld	(hl+),a
   16CB 72                 7773 	ld	(hl),d
   16CC 5F                 7774 	ld	e,a
   16CD 1A                 7775 	ld	a,(de)
   16CE 23                 7776 	inc	hl
   16CF 77                 7777 	ld	(hl),a
                           7778 ;	genPointerGet
                           7779 ;	AOP_STK for _move_character_sloc0_1_0
                           7780 ;	AOP_STK for _move_character_sloc8_1_0
   16D0 F8 0D              7781 	lda	hl,13(sp)
   16D2 5E                 7782 	ld	e,(hl)
   16D3 23                 7783 	inc	hl
   16D4 56                 7784 	ld	d,(hl)
   16D5 1A                 7785 	ld	a,(de)
   16D6 F8 00              7786 	lda	hl,0(sp)
   16D8 77                 7787 	ld	(hl),a
                           7788 ;	genIpush
                           7789 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16D9 C5                 7790 	push	bc
   16DA 79                 7791 	ld	a,c
   16DB F5                 7792 	push	af
   16DC 33                 7793 	inc	sp
                           7794 ;	genIpush
                           7795 ;	AOP_STK for _move_character_sloc7_1_0
   16DD 23                 7796 	inc	hl
   16DE 23                 7797 	inc	hl
   16DF 7E                 7798 	ld	a,(hl)
   16E0 F5                 7799 	push	af
   16E1 33                 7800 	inc	sp
                           7801 ;	genIpush
                           7802 ;	AOP_STK for _move_character_sloc8_1_0
   16E2 2B                 7803 	dec	hl
   16E3 2B                 7804 	dec	hl
   16E4 7E                 7805 	ld	a,(hl)
   16E5 F5                 7806 	push	af
   16E6 33                 7807 	inc	sp
                           7808 ;	genCall
   16E7 CD CA 0F           7809 	call	_can_move
                           7810 ;	AOP_STK for _move_character_sloc8_1_0
   16EA F8 06              7811 	lda	hl,6(sp)
   16EC 72                 7812 	ld	(hl),d
   16ED 2B                 7813 	dec	hl
   16EE 73                 7814 	ld	(hl),e
   16EF E8 03              7815 	lda	sp,3(sp)
   16F1 E1                 7816 	pop	hl
   16F2 44                 7817 	ld	b,h
                           7818 ;	genIfx
                           7819 ;	AOP_STK for _move_character_sloc8_1_0
   16F3 F8 00              7820 	lda	hl,0(sp)
   16F5 2A                 7821 	ld	a,(hl+)
   16F6 B6                 7822 	or	a,(hl)
   16F7 C2 FF 16           7823 	jp	nz,00134$
                           7824 ;	game.c 1037
                           7825 ;	genAssign
                           7826 ;	AOP_HL for _input_timer
   16FA 21 03 19           7827 	ld	hl,#_input_timer
   16FD 36 00              7828 	ld	(hl),#0x00
                           7829 ;	genLabel
   16FF                    7830 00134$:
                           7831 ;	game.c 1045
                           7832 ;	genPlus
                           7833 ;	AOP_STK for _move_character_sloc0_1_0
                           7834 ;	AOP_STK for _move_character_sloc8_1_0
                           7835 ;	genPlusIncr
                           7836 ;	Can't optimise plus by inc, falling back to the normal way
   16FF F8 0D              7837 	lda	hl,13(sp)
   1701 5E                 7838 	ld	e,(hl)
   1702 23                 7839 	inc	hl
   1703 56                 7840 	ld	d,(hl)
   1704 21 08 00           7841 	ld	hl,#0x0008
   1707 19                 7842 	add	hl,de
   1708 7D                 7843 	ld	a,l
   1709 54                 7844 	ld	d,h
   170A F8 00              7845 	lda	hl,0(sp)
                           7846 ;	genPointerGet
                           7847 ;	AOP_STK for _move_character_sloc8_1_0
   170C 22                 7848 	ld	(hl+),a
   170D 72                 7849 	ld	(hl),d
   170E 5F                 7850 	ld	e,a
   170F 1A                 7851 	ld	a,(de)
                           7852 ;	genCmpLt
                           7853 ;	AOP_STK for _move_character_sloc8_1_0
   1710 4F                 7854 	ld	c,a
   1711 FE 01              7855 	cp	#0x01
   1713 3E 00              7856 	ld	a,#0x00
   1715 17                 7857 	rla
   1716 2B                 7858 	dec	hl
   1717 77                 7859 	ld	(hl),a
                           7860 ;	genIfx
                           7861 ;	AOP_STK for _move_character_sloc8_1_0
   1718 AF                 7862 	xor	a,a
   1719 B6                 7863 	or	a,(hl)
   171A C2 CC 19           7864 	jp	nz,00155$
                           7865 ;	genCmpGt
   171D 3E 04              7866 	ld	a,#0x04
   171F 91                 7867 	sub	a,c
   1720 DA CC 19           7868 	jp	c,00155$
                           7869 ;	genMinus
                           7870 ;	AOP_STK for _move_character_sloc7_1_0
   1723 79                 7871 	ld	a,c
   1724 C6 FF              7872 	add	a,#0xFF
   1726 23                 7873 	inc	hl
   1727 23                 7874 	inc	hl
                           7875 ;	genJumpTab
                           7876 ;	AOP_STK for _move_character_sloc7_1_0
   1728 77                 7877 	ld      (hl),a
   1729 5F                 7878 	ld      e,a
   172A 16 00              7879 	ld	d,#0x00
   172C 21 33 17           7880 	ld	hl,#00218$
   172F 19                 7881 	add	hl,de
   1730 19                 7882 	add	hl,de
   1731 19                 7883 	add	hl,de
   1732 E9                 7884 	jp	(hl)
   1733                    7885 00218$:
   1733 C3 87 18           7886 	jp	00145$
   1736 C3 E3 17           7887 	jp	00140$
   1739 C3 2B 19           7888 	jp	00150$
   173C C3 3F 17           7889 	jp	00135$
                           7890 ;	game.c 1048
                           7891 ;	genLabel
   173F                    7892 00135$:
                           7893 ;	genPlus
                           7894 ;	AOP_STK for _move_character_sloc0_1_0
                           7895 ;	AOP_STK for _move_character_sloc5_1_0
                           7896 ;	genPlusIncr
                           7897 ;	Can't optimise plus by inc, falling back to the normal way
   173F F8 0D              7898 	lda	hl,13(sp)
   1741 5E                 7899 	ld	e,(hl)
   1742 23                 7900 	inc	hl
   1743 56                 7901 	ld	d,(hl)
   1744 21 02 00           7902 	ld	hl,#0x0002
   1747 19                 7903 	add	hl,de
   1748 7D                 7904 	ld	a,l
   1749 54                 7905 	ld	d,h
   174A F8 04              7906 	lda	hl,4(sp)
                           7907 ;	genPointerGet
                           7908 ;	AOP_STK for _move_character_sloc5_1_0
                           7909 ;	AOP_STK for _move_character_sloc7_1_0
   174C 22                 7910 	ld	(hl+),a
   174D 72                 7911 	ld	(hl),d
   174E 5F                 7912 	ld	e,a
   174F 1A                 7913 	ld	a,(de)
   1750 F8 02              7914 	lda	hl,2(sp)
   1752 77                 7915 	ld	(hl),a
                           7916 ;	genIpush
                           7917 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1753 C5                 7918 	push	bc
                           7919 ;	AOP_STK for _move_character_sloc7_1_0
   1754 7E                 7920 	ld	a,(hl)
   1755 F5                 7921 	push	af
   1756 33                 7922 	inc	sp
                           7923 ;	genIpush
   1757 78                 7924 	ld	a,b
   1758 F5                 7925 	push	af
   1759 33                 7926 	inc	sp
                           7927 ;	genCall
   175A CD 00 00           7928 	call	_set_sprite_tile
   175D E8 02              7929 	lda	sp,2(sp)
   175F C1                 7930 	pop	bc
                           7931 ;	game.c 1049
                           7932 ;	genCmpEq
                           7933 ;	AOP_HL for _input_timer
                           7934 ; genCmpEq: left 1, right 1, result 0
   1760 21 03 19           7935 	ld	hl,#_input_timer
   1763 7E                 7936 	ld	a,(hl)
   1764 FE 04              7937 	cp	a,#0x04
   1766 C2 9A 17           7938 	jp	nz,00137$
   1769 18 03              7939 	jr	00220$
   176B                    7940 00219$:
   176B C3 9A 17           7941 	jp	00137$
   176E                    7942 00220$:
                           7943 ;	game.c 1050
                           7944 ;	genPlus
                           7945 ;	AOP_STK for _move_character_sloc0_1_0
                           7946 ;	AOP_STK for _move_character_sloc3_1_0
                           7947 ;	genPlusIncr
                           7948 ;	Can't optimise plus by inc, falling back to the normal way
   176E F8 0D              7949 	lda	hl,13(sp)
   1770 5E                 7950 	ld	e,(hl)
   1771 23                 7951 	inc	hl
   1772 56                 7952 	ld	d,(hl)
   1773 21 03 00           7953 	ld	hl,#0x0003
   1776 19                 7954 	add	hl,de
   1777 7D                 7955 	ld	a,l
   1778 54                 7956 	ld	d,h
   1779 F8 07              7957 	lda	hl,7(sp)
                           7958 ;	genPointerGet
                           7959 ;	AOP_STK for _move_character_sloc3_1_0
                           7960 ;	AOP_STK for _move_character_sloc7_1_0
   177B 22                 7961 	ld	(hl+),a
   177C 72                 7962 	ld	(hl),d
   177D 5F                 7963 	ld	e,a
   177E 1A                 7964 	ld	a,(de)
   177F F8 02              7965 	lda	hl,2(sp)
   1781 77                 7966 	ld	(hl),a
                           7967 ;	genPointerGet
                           7968 ;	AOP_STK for _move_character_sloc1_1_0
                           7969 ;	AOP_STK for _move_character_sloc6_1_0
   1782 F8 0B              7970 	lda	hl,11(sp)
   1784 5E                 7971 	ld	e,(hl)
   1785 23                 7972 	inc	hl
   1786 56                 7973 	ld	d,(hl)
   1787 1A                 7974 	ld	a,(de)
   1788 F8 03              7975 	lda	hl,3(sp)
   178A 77                 7976 	ld	(hl),a
                           7977 ;	genIpush
                           7978 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   178B C5                 7979 	push	bc
                           7980 ;	AOP_STK for _move_character_sloc7_1_0
   178C 2B                 7981 	dec	hl
   178D 7E                 7982 	ld	a,(hl)
   178E F5                 7983 	push	af
   178F 33                 7984 	inc	sp
                           7985 ;	genIpush
                           7986 ;	AOP_STK for _move_character_sloc6_1_0
   1790 23                 7987 	inc	hl
   1791 7E                 7988 	ld	a,(hl)
   1792 F5                 7989 	push	af
   1793 33                 7990 	inc	sp
                           7991 ;	genCall
   1794 CD 00 00           7992 	call	_set_sprite_tile
   1797 E8 02              7993 	lda	sp,2(sp)
   1799 C1                 7994 	pop	bc
                           7995 ;	genLabel
   179A                    7996 00137$:
                           7997 ;	game.c 1052
                           7998 ;	genCmpEq
                           7999 ;	AOP_HL for _input_timer
                           8000 ; genCmpEq: left 1, right 1, result 0
   179A 21 03 19           8001 	ld	hl,#_input_timer
   179D 7E                 8002 	ld	a,(hl)
   179E FE 02              8003 	cp	a,#0x02
   17A0 C2 C9 17           8004 	jp	nz,00139$
   17A3 18 03              8005 	jr	00222$
   17A5                    8006 00221$:
   17A5 C3 C9 17           8007 	jp	00139$
   17A8                    8008 00222$:
                           8009 ;	game.c 1053
                           8010 ;	genPointerGet
                           8011 ;	AOP_STK for _move_character_sloc5_1_0
                           8012 ;	AOP_STK for _move_character_sloc7_1_0
   17A8 F8 04              8013 	lda	hl,4(sp)
   17AA 5E                 8014 	ld	e,(hl)
   17AB 23                 8015 	inc	hl
   17AC 56                 8016 	ld	d,(hl)
   17AD 1A                 8017 	ld	a,(de)
   17AE F8 02              8018 	lda	hl,2(sp)
   17B0 77                 8019 	ld	(hl),a
                           8020 ;	genPointerGet
                           8021 ;	AOP_STK for _move_character_sloc1_1_0
                           8022 ;	AOP_STK for _move_character_sloc6_1_0
   17B1 F8 0B              8023 	lda	hl,11(sp)
   17B3 5E                 8024 	ld	e,(hl)
   17B4 23                 8025 	inc	hl
   17B5 56                 8026 	ld	d,(hl)
   17B6 1A                 8027 	ld	a,(de)
   17B7 F8 03              8028 	lda	hl,3(sp)
   17B9 77                 8029 	ld	(hl),a
                           8030 ;	genIpush
                           8031 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17BA C5                 8032 	push	bc
                           8033 ;	AOP_STK for _move_character_sloc7_1_0
   17BB 2B                 8034 	dec	hl
   17BC 7E                 8035 	ld	a,(hl)
   17BD F5                 8036 	push	af
   17BE 33                 8037 	inc	sp
                           8038 ;	genIpush
                           8039 ;	AOP_STK for _move_character_sloc6_1_0
   17BF 23                 8040 	inc	hl
   17C0 7E                 8041 	ld	a,(hl)
   17C1 F5                 8042 	push	af
   17C2 33                 8043 	inc	sp
                           8044 ;	genCall
   17C3 CD 00 00           8045 	call	_set_sprite_tile
   17C6 E8 02              8046 	lda	sp,2(sp)
   17C8 C1                 8047 	pop	bc
                           8048 ;	genLabel
   17C9                    8049 00139$:
                           8050 ;	game.c 1055
                           8051 ;	genPointerGet
                           8052 ;	AOP_STK for _move_character_sloc1_1_0
                           8053 ;	AOP_STK for _move_character_sloc7_1_0
   17C9 F8 0B              8054 	lda	hl,11(sp)
   17CB 5E                 8055 	ld	e,(hl)
   17CC 23                 8056 	inc	hl
   17CD 56                 8057 	ld	d,(hl)
   17CE 1A                 8058 	ld	a,(de)
   17CF F8 02              8059 	lda	hl,2(sp)
   17D1 77                 8060 	ld	(hl),a
                           8061 ;	genIpush
                           8062 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17D2 C5                 8063 	push	bc
   17D3 3E 20              8064 	ld	a,#0x20
   17D5 F5                 8065 	push	af
   17D6 33                 8066 	inc	sp
                           8067 ;	genIpush
                           8068 ;	AOP_STK for _move_character_sloc7_1_0
   17D7 7E                 8069 	ld	a,(hl)
   17D8 F5                 8070 	push	af
   17D9 33                 8071 	inc	sp
                           8072 ;	genCall
   17DA CD 00 00           8073 	call	_set_sprite_prop
   17DD E8 02              8074 	lda	sp,2(sp)
   17DF C1                 8075 	pop	bc
                           8076 ;	game.c 1056
                           8077 ;	genGoto
   17E0 C3 CC 19           8078 	jp	00155$
                           8079 ;	game.c 1059
                           8080 ;	genLabel
   17E3                    8081 00140$:
                           8082 ;	genPlus
                           8083 ;	AOP_STK for _move_character_sloc0_1_0
                           8084 ;	AOP_STK for _move_character_sloc5_1_0
                           8085 ;	genPlusIncr
                           8086 ;	Can't optimise plus by inc, falling back to the normal way
   17E3 F8 0D              8087 	lda	hl,13(sp)
   17E5 5E                 8088 	ld	e,(hl)
   17E6 23                 8089 	inc	hl
   17E7 56                 8090 	ld	d,(hl)
   17E8 21 02 00           8091 	ld	hl,#0x0002
   17EB 19                 8092 	add	hl,de
   17EC 7D                 8093 	ld	a,l
   17ED 54                 8094 	ld	d,h
   17EE F8 04              8095 	lda	hl,4(sp)
                           8096 ;	genPointerGet
                           8097 ;	AOP_STK for _move_character_sloc5_1_0
                           8098 ;	AOP_STK for _move_character_sloc7_1_0
   17F0 22                 8099 	ld	(hl+),a
   17F1 72                 8100 	ld	(hl),d
   17F2 5F                 8101 	ld	e,a
   17F3 1A                 8102 	ld	a,(de)
   17F4 F8 02              8103 	lda	hl,2(sp)
   17F6 77                 8104 	ld	(hl),a
                           8105 ;	genIpush
                           8106 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17F7 C5                 8107 	push	bc
                           8108 ;	AOP_STK for _move_character_sloc7_1_0
   17F8 7E                 8109 	ld	a,(hl)
   17F9 F5                 8110 	push	af
   17FA 33                 8111 	inc	sp
                           8112 ;	genIpush
   17FB 78                 8113 	ld	a,b
   17FC F5                 8114 	push	af
   17FD 33                 8115 	inc	sp
                           8116 ;	genCall
   17FE CD 00 00           8117 	call	_set_sprite_tile
   1801 E8 02              8118 	lda	sp,2(sp)
   1803 C1                 8119 	pop	bc
                           8120 ;	game.c 1060
                           8121 ;	genCmpEq
                           8122 ;	AOP_HL for _input_timer
                           8123 ; genCmpEq: left 1, right 1, result 0
   1804 21 03 19           8124 	ld	hl,#_input_timer
   1807 7E                 8125 	ld	a,(hl)
   1808 FE 04              8126 	cp	a,#0x04
   180A C2 3E 18           8127 	jp	nz,00142$
   180D 18 03              8128 	jr	00224$
   180F                    8129 00223$:
   180F C3 3E 18           8130 	jp	00142$
   1812                    8131 00224$:
                           8132 ;	game.c 1061
                           8133 ;	genPlus
                           8134 ;	AOP_STK for _move_character_sloc0_1_0
                           8135 ;	AOP_STK for _move_character_sloc3_1_0
                           8136 ;	genPlusIncr
                           8137 ;	Can't optimise plus by inc, falling back to the normal way
   1812 F8 0D              8138 	lda	hl,13(sp)
   1814 5E                 8139 	ld	e,(hl)
   1815 23                 8140 	inc	hl
   1816 56                 8141 	ld	d,(hl)
   1817 21 03 00           8142 	ld	hl,#0x0003
   181A 19                 8143 	add	hl,de
   181B 7D                 8144 	ld	a,l
   181C 54                 8145 	ld	d,h
   181D F8 07              8146 	lda	hl,7(sp)
                           8147 ;	genPointerGet
                           8148 ;	AOP_STK for _move_character_sloc3_1_0
                           8149 ;	AOP_STK for _move_character_sloc7_1_0
   181F 22                 8150 	ld	(hl+),a
   1820 72                 8151 	ld	(hl),d
   1821 5F                 8152 	ld	e,a
   1822 1A                 8153 	ld	a,(de)
   1823 F8 02              8154 	lda	hl,2(sp)
   1825 77                 8155 	ld	(hl),a
                           8156 ;	genPointerGet
                           8157 ;	AOP_STK for _move_character_sloc1_1_0
                           8158 ;	AOP_STK for _move_character_sloc6_1_0
   1826 F8 0B              8159 	lda	hl,11(sp)
   1828 5E                 8160 	ld	e,(hl)
   1829 23                 8161 	inc	hl
   182A 56                 8162 	ld	d,(hl)
   182B 1A                 8163 	ld	a,(de)
   182C F8 03              8164 	lda	hl,3(sp)
   182E 77                 8165 	ld	(hl),a
                           8166 ;	genIpush
                           8167 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   182F C5                 8168 	push	bc
                           8169 ;	AOP_STK for _move_character_sloc7_1_0
   1830 2B                 8170 	dec	hl
   1831 7E                 8171 	ld	a,(hl)
   1832 F5                 8172 	push	af
   1833 33                 8173 	inc	sp
                           8174 ;	genIpush
                           8175 ;	AOP_STK for _move_character_sloc6_1_0
   1834 23                 8176 	inc	hl
   1835 7E                 8177 	ld	a,(hl)
   1836 F5                 8178 	push	af
   1837 33                 8179 	inc	sp
                           8180 ;	genCall
   1838 CD 00 00           8181 	call	_set_sprite_tile
   183B E8 02              8182 	lda	sp,2(sp)
   183D C1                 8183 	pop	bc
                           8184 ;	genLabel
   183E                    8185 00142$:
                           8186 ;	game.c 1063
                           8187 ;	genCmpEq
                           8188 ;	AOP_HL for _input_timer
                           8189 ; genCmpEq: left 1, right 1, result 0
   183E 21 03 19           8190 	ld	hl,#_input_timer
   1841 7E                 8191 	ld	a,(hl)
   1842 FE 02              8192 	cp	a,#0x02
   1844 C2 6D 18           8193 	jp	nz,00144$
   1847 18 03              8194 	jr	00226$
   1849                    8195 00225$:
   1849 C3 6D 18           8196 	jp	00144$
   184C                    8197 00226$:
                           8198 ;	game.c 1064
                           8199 ;	genPointerGet
                           8200 ;	AOP_STK for _move_character_sloc5_1_0
                           8201 ;	AOP_STK for _move_character_sloc7_1_0
   184C F8 04              8202 	lda	hl,4(sp)
   184E 5E                 8203 	ld	e,(hl)
   184F 23                 8204 	inc	hl
   1850 56                 8205 	ld	d,(hl)
   1851 1A                 8206 	ld	a,(de)
   1852 F8 02              8207 	lda	hl,2(sp)
   1854 77                 8208 	ld	(hl),a
                           8209 ;	genPointerGet
                           8210 ;	AOP_STK for _move_character_sloc1_1_0
                           8211 ;	AOP_STK for _move_character_sloc6_1_0
   1855 F8 0B              8212 	lda	hl,11(sp)
   1857 5E                 8213 	ld	e,(hl)
   1858 23                 8214 	inc	hl
   1859 56                 8215 	ld	d,(hl)
   185A 1A                 8216 	ld	a,(de)
   185B F8 03              8217 	lda	hl,3(sp)
   185D 77                 8218 	ld	(hl),a
                           8219 ;	genIpush
                           8220 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   185E C5                 8221 	push	bc
                           8222 ;	AOP_STK for _move_character_sloc7_1_0
   185F 2B                 8223 	dec	hl
   1860 7E                 8224 	ld	a,(hl)
   1861 F5                 8225 	push	af
   1862 33                 8226 	inc	sp
                           8227 ;	genIpush
                           8228 ;	AOP_STK for _move_character_sloc6_1_0
   1863 23                 8229 	inc	hl
   1864 7E                 8230 	ld	a,(hl)
   1865 F5                 8231 	push	af
   1866 33                 8232 	inc	sp
                           8233 ;	genCall
   1867 CD 00 00           8234 	call	_set_sprite_tile
   186A E8 02              8235 	lda	sp,2(sp)
   186C C1                 8236 	pop	bc
                           8237 ;	genLabel
   186D                    8238 00144$:
                           8239 ;	game.c 1067
                           8240 ;	genPointerGet
                           8241 ;	AOP_STK for _move_character_sloc1_1_0
                           8242 ;	AOP_STK for _move_character_sloc7_1_0
   186D F8 0B              8243 	lda	hl,11(sp)
   186F 5E                 8244 	ld	e,(hl)
   1870 23                 8245 	inc	hl
   1871 56                 8246 	ld	d,(hl)
   1872 1A                 8247 	ld	a,(de)
   1873 F8 02              8248 	lda	hl,2(sp)
   1875 77                 8249 	ld	(hl),a
                           8250 ;	genIpush
                           8251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1876 C5                 8252 	push	bc
   1877 3E 00              8253 	ld	a,#0x00
   1879 F5                 8254 	push	af
   187A 33                 8255 	inc	sp
                           8256 ;	genIpush
                           8257 ;	AOP_STK for _move_character_sloc7_1_0
   187B 7E                 8258 	ld	a,(hl)
   187C F5                 8259 	push	af
   187D 33                 8260 	inc	sp
                           8261 ;	genCall
   187E CD 00 00           8262 	call	_set_sprite_prop
   1881 E8 02              8263 	lda	sp,2(sp)
   1883 C1                 8264 	pop	bc
                           8265 ;	game.c 1068
                           8266 ;	genGoto
   1884 C3 CC 19           8267 	jp	00155$
                           8268 ;	game.c 1070
                           8269 ;	genLabel
   1887                    8270 00145$:
                           8271 ;	genPlus
                           8272 ;	AOP_STK for _move_character_sloc0_1_0
                           8273 ;	AOP_STK for _move_character_sloc5_1_0
                           8274 ;	genPlusIncr
                           8275 ;	Can't optimise plus by inc, falling back to the normal way
   1887 F8 0D              8276 	lda	hl,13(sp)
   1889 5E                 8277 	ld	e,(hl)
   188A 23                 8278 	inc	hl
   188B 56                 8279 	ld	d,(hl)
   188C 21 05 00           8280 	ld	hl,#0x0005
   188F 19                 8281 	add	hl,de
   1890 7D                 8282 	ld	a,l
   1891 54                 8283 	ld	d,h
   1892 F8 04              8284 	lda	hl,4(sp)
                           8285 ;	genPointerGet
                           8286 ;	AOP_STK for _move_character_sloc5_1_0
                           8287 ;	AOP_STK for _move_character_sloc7_1_0
   1894 22                 8288 	ld	(hl+),a
   1895 72                 8289 	ld	(hl),d
   1896 5F                 8290 	ld	e,a
   1897 1A                 8291 	ld	a,(de)
   1898 F8 02              8292 	lda	hl,2(sp)
   189A 77                 8293 	ld	(hl),a
                           8294 ;	genIpush
                           8295 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   189B C5                 8296 	push	bc
                           8297 ;	AOP_STK for _move_character_sloc7_1_0
   189C 7E                 8298 	ld	a,(hl)
   189D F5                 8299 	push	af
   189E 33                 8300 	inc	sp
                           8301 ;	genIpush
   189F 78                 8302 	ld	a,b
   18A0 F5                 8303 	push	af
   18A1 33                 8304 	inc	sp
                           8305 ;	genCall
   18A2 CD 00 00           8306 	call	_set_sprite_tile
   18A5 E8 02              8307 	lda	sp,2(sp)
   18A7 C1                 8308 	pop	bc
                           8309 ;	game.c 1072
                           8310 ;	genCmpEq
                           8311 ;	AOP_HL for _input_timer
                           8312 ; genCmpEq: left 1, right 1, result 0
   18A8 21 03 19           8313 	ld	hl,#_input_timer
   18AB 7E                 8314 	ld	a,(hl)
   18AC FE 04              8315 	cp	a,#0x04
   18AE C2 E2 18           8316 	jp	nz,00147$
   18B1 18 03              8317 	jr	00228$
   18B3                    8318 00227$:
   18B3 C3 E2 18           8319 	jp	00147$
   18B6                    8320 00228$:
                           8321 ;	game.c 1073
                           8322 ;	genPlus
                           8323 ;	AOP_STK for _move_character_sloc0_1_0
                           8324 ;	AOP_STK for _move_character_sloc3_1_0
                           8325 ;	genPlusIncr
                           8326 ;	Can't optimise plus by inc, falling back to the normal way
   18B6 F8 0D              8327 	lda	hl,13(sp)
   18B8 5E                 8328 	ld	e,(hl)
   18B9 23                 8329 	inc	hl
   18BA 56                 8330 	ld	d,(hl)
   18BB 21 06 00           8331 	ld	hl,#0x0006
   18BE 19                 8332 	add	hl,de
   18BF 7D                 8333 	ld	a,l
   18C0 54                 8334 	ld	d,h
   18C1 F8 07              8335 	lda	hl,7(sp)
                           8336 ;	genPointerGet
                           8337 ;	AOP_STK for _move_character_sloc3_1_0
                           8338 ;	AOP_STK for _move_character_sloc7_1_0
   18C3 22                 8339 	ld	(hl+),a
   18C4 72                 8340 	ld	(hl),d
   18C5 5F                 8341 	ld	e,a
   18C6 1A                 8342 	ld	a,(de)
   18C7 F8 02              8343 	lda	hl,2(sp)
   18C9 77                 8344 	ld	(hl),a
                           8345 ;	genPointerGet
                           8346 ;	AOP_STK for _move_character_sloc1_1_0
                           8347 ;	AOP_STK for _move_character_sloc6_1_0
   18CA F8 0B              8348 	lda	hl,11(sp)
   18CC 5E                 8349 	ld	e,(hl)
   18CD 23                 8350 	inc	hl
   18CE 56                 8351 	ld	d,(hl)
   18CF 1A                 8352 	ld	a,(de)
   18D0 F8 03              8353 	lda	hl,3(sp)
   18D2 77                 8354 	ld	(hl),a
                           8355 ;	genIpush
                           8356 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18D3 C5                 8357 	push	bc
                           8358 ;	AOP_STK for _move_character_sloc7_1_0
   18D4 2B                 8359 	dec	hl
   18D5 7E                 8360 	ld	a,(hl)
   18D6 F5                 8361 	push	af
   18D7 33                 8362 	inc	sp
                           8363 ;	genIpush
                           8364 ;	AOP_STK for _move_character_sloc6_1_0
   18D8 23                 8365 	inc	hl
   18D9 7E                 8366 	ld	a,(hl)
   18DA F5                 8367 	push	af
   18DB 33                 8368 	inc	sp
                           8369 ;	genCall
   18DC CD 00 00           8370 	call	_set_sprite_tile
   18DF E8 02              8371 	lda	sp,2(sp)
   18E1 C1                 8372 	pop	bc
                           8373 ;	genLabel
   18E2                    8374 00147$:
                           8375 ;	game.c 1075
                           8376 ;	genCmpEq
                           8377 ;	AOP_HL for _input_timer
                           8378 ; genCmpEq: left 1, right 1, result 0
   18E2 21 03 19           8379 	ld	hl,#_input_timer
   18E5 7E                 8380 	ld	a,(hl)
   18E6 FE 02              8381 	cp	a,#0x02
   18E8 C2 11 19           8382 	jp	nz,00149$
   18EB 18 03              8383 	jr	00230$
   18ED                    8384 00229$:
   18ED C3 11 19           8385 	jp	00149$
   18F0                    8386 00230$:
                           8387 ;	game.c 1076
                           8388 ;	genPointerGet
                           8389 ;	AOP_STK for _move_character_sloc5_1_0
                           8390 ;	AOP_STK for _move_character_sloc7_1_0
   18F0 F8 04              8391 	lda	hl,4(sp)
   18F2 5E                 8392 	ld	e,(hl)
   18F3 23                 8393 	inc	hl
   18F4 56                 8394 	ld	d,(hl)
   18F5 1A                 8395 	ld	a,(de)
   18F6 F8 02              8396 	lda	hl,2(sp)
   18F8 77                 8397 	ld	(hl),a
                           8398 ;	genPointerGet
                           8399 ;	AOP_STK for _move_character_sloc1_1_0
                           8400 ;	AOP_STK for _move_character_sloc6_1_0
   18F9 F8 0B              8401 	lda	hl,11(sp)
   18FB 5E                 8402 	ld	e,(hl)
   18FC 23                 8403 	inc	hl
   18FD 56                 8404 	ld	d,(hl)
   18FE 1A                 8405 	ld	a,(de)
   18FF F8 03              8406 	lda	hl,3(sp)
   1901 77                 8407 	ld	(hl),a
                           8408 ;	genIpush
                           8409 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1902 C5                 8410 	push	bc
                           8411 ;	AOP_STK for _move_character_sloc7_1_0
   1903 2B                 8412 	dec	hl
   1904 7E                 8413 	ld	a,(hl)
   1905 F5                 8414 	push	af
   1906 33                 8415 	inc	sp
                           8416 ;	genIpush
                           8417 ;	AOP_STK for _move_character_sloc6_1_0
   1907 23                 8418 	inc	hl
   1908 7E                 8419 	ld	a,(hl)
   1909 F5                 8420 	push	af
   190A 33                 8421 	inc	sp
                           8422 ;	genCall
   190B CD 00 00           8423 	call	_set_sprite_tile
   190E E8 02              8424 	lda	sp,2(sp)
   1910 C1                 8425 	pop	bc
                           8426 ;	genLabel
   1911                    8427 00149$:
                           8428 ;	game.c 1079
                           8429 ;	genPointerGet
                           8430 ;	AOP_STK for _move_character_sloc1_1_0
                           8431 ;	AOP_STK for _move_character_sloc7_1_0
   1911 F8 0B              8432 	lda	hl,11(sp)
   1913 5E                 8433 	ld	e,(hl)
   1914 23                 8434 	inc	hl
   1915 56                 8435 	ld	d,(hl)
   1916 1A                 8436 	ld	a,(de)
   1917 F8 02              8437 	lda	hl,2(sp)
   1919 77                 8438 	ld	(hl),a
                           8439 ;	genIpush
                           8440 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   191A C5                 8441 	push	bc
   191B 3E 20              8442 	ld	a,#0x20
   191D F5                 8443 	push	af
   191E 33                 8444 	inc	sp
                           8445 ;	genIpush
                           8446 ;	AOP_STK for _move_character_sloc7_1_0
   191F 7E                 8447 	ld	a,(hl)
   1920 F5                 8448 	push	af
   1921 33                 8449 	inc	sp
                           8450 ;	genCall
   1922 CD 00 00           8451 	call	_set_sprite_prop
   1925 E8 02              8452 	lda	sp,2(sp)
   1927 C1                 8453 	pop	bc
                           8454 ;	game.c 1080
                           8455 ;	genGoto
   1928 C3 CC 19           8456 	jp	00155$
                           8457 ;	game.c 1082
                           8458 ;	genLabel
   192B                    8459 00150$:
                           8460 ;	genPlus
                           8461 ;	AOP_STK for _move_character_sloc0_1_0
                           8462 ;	AOP_STK for _move_character_sloc5_1_0
                           8463 ;	genPlusIncr
                           8464 ;	Can't optimise plus by inc, falling back to the normal way
   192B F8 0D              8465 	lda	hl,13(sp)
   192D 5E                 8466 	ld	e,(hl)
   192E 23                 8467 	inc	hl
   192F 56                 8468 	ld	d,(hl)
   1930 21 05 00           8469 	ld	hl,#0x0005
   1933 19                 8470 	add	hl,de
   1934 7D                 8471 	ld	a,l
   1935 54                 8472 	ld	d,h
   1936 F8 04              8473 	lda	hl,4(sp)
                           8474 ;	genPointerGet
                           8475 ;	AOP_STK for _move_character_sloc5_1_0
                           8476 ;	AOP_STK for _move_character_sloc7_1_0
   1938 22                 8477 	ld	(hl+),a
   1939 72                 8478 	ld	(hl),d
   193A 5F                 8479 	ld	e,a
   193B 1A                 8480 	ld	a,(de)
   193C F8 02              8481 	lda	hl,2(sp)
   193E 77                 8482 	ld	(hl),a
                           8483 ;	genIpush
                           8484 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   193F C5                 8485 	push	bc
                           8486 ;	AOP_STK for _move_character_sloc7_1_0
   1940 7E                 8487 	ld	a,(hl)
   1941 F5                 8488 	push	af
   1942 33                 8489 	inc	sp
                           8490 ;	genIpush
   1943 78                 8491 	ld	a,b
   1944 F5                 8492 	push	af
   1945 33                 8493 	inc	sp
                           8494 ;	genCall
   1946 CD 00 00           8495 	call	_set_sprite_tile
   1949 E8 02              8496 	lda	sp,2(sp)
   194B C1                 8497 	pop	bc
                           8498 ;	game.c 1084
                           8499 ;	genCmpEq
                           8500 ;	AOP_HL for _input_timer
                           8501 ; genCmpEq: left 1, right 1, result 0
   194C 21 03 19           8502 	ld	hl,#_input_timer
   194F 7E                 8503 	ld	a,(hl)
   1950 FE 04              8504 	cp	a,#0x04
   1952 C2 86 19           8505 	jp	nz,00152$
   1955 18 03              8506 	jr	00232$
   1957                    8507 00231$:
   1957 C3 86 19           8508 	jp	00152$
   195A                    8509 00232$:
                           8510 ;	game.c 1085
                           8511 ;	genPlus
                           8512 ;	AOP_STK for _move_character_sloc0_1_0
                           8513 ;	AOP_STK for _move_character_sloc3_1_0
                           8514 ;	genPlusIncr
                           8515 ;	Can't optimise plus by inc, falling back to the normal way
   195A F8 0D              8516 	lda	hl,13(sp)
   195C 5E                 8517 	ld	e,(hl)
   195D 23                 8518 	inc	hl
   195E 56                 8519 	ld	d,(hl)
   195F 21 06 00           8520 	ld	hl,#0x0006
   1962 19                 8521 	add	hl,de
   1963 7D                 8522 	ld	a,l
   1964 54                 8523 	ld	d,h
   1965 F8 07              8524 	lda	hl,7(sp)
                           8525 ;	genPointerGet
                           8526 ;	AOP_STK for _move_character_sloc3_1_0
                           8527 ;	AOP_STK for _move_character_sloc7_1_0
   1967 22                 8528 	ld	(hl+),a
   1968 72                 8529 	ld	(hl),d
   1969 5F                 8530 	ld	e,a
   196A 1A                 8531 	ld	a,(de)
   196B F8 02              8532 	lda	hl,2(sp)
   196D 77                 8533 	ld	(hl),a
                           8534 ;	genPointerGet
                           8535 ;	AOP_STK for _move_character_sloc1_1_0
                           8536 ;	AOP_STK for _move_character_sloc6_1_0
   196E F8 0B              8537 	lda	hl,11(sp)
   1970 5E                 8538 	ld	e,(hl)
   1971 23                 8539 	inc	hl
   1972 56                 8540 	ld	d,(hl)
   1973 1A                 8541 	ld	a,(de)
   1974 F8 03              8542 	lda	hl,3(sp)
   1976 77                 8543 	ld	(hl),a
                           8544 ;	genIpush
                           8545 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1977 C5                 8546 	push	bc
                           8547 ;	AOP_STK for _move_character_sloc7_1_0
   1978 2B                 8548 	dec	hl
   1979 7E                 8549 	ld	a,(hl)
   197A F5                 8550 	push	af
   197B 33                 8551 	inc	sp
                           8552 ;	genIpush
                           8553 ;	AOP_STK for _move_character_sloc6_1_0
   197C 23                 8554 	inc	hl
   197D 7E                 8555 	ld	a,(hl)
   197E F5                 8556 	push	af
   197F 33                 8557 	inc	sp
                           8558 ;	genCall
   1980 CD 00 00           8559 	call	_set_sprite_tile
   1983 E8 02              8560 	lda	sp,2(sp)
   1985 C1                 8561 	pop	bc
                           8562 ;	genLabel
   1986                    8563 00152$:
                           8564 ;	game.c 1087
                           8565 ;	genCmpEq
                           8566 ;	AOP_HL for _input_timer
                           8567 ; genCmpEq: left 1, right 1, result 0
   1986 21 03 19           8568 	ld	hl,#_input_timer
   1989 7E                 8569 	ld	a,(hl)
   198A FE 02              8570 	cp	a,#0x02
   198C C2 B5 19           8571 	jp	nz,00154$
   198F 18 03              8572 	jr	00234$
   1991                    8573 00233$:
   1991 C3 B5 19           8574 	jp	00154$
   1994                    8575 00234$:
                           8576 ;	game.c 1088
                           8577 ;	genPointerGet
                           8578 ;	AOP_STK for _move_character_sloc5_1_0
                           8579 ;	AOP_STK for _move_character_sloc7_1_0
   1994 F8 04              8580 	lda	hl,4(sp)
   1996 5E                 8581 	ld	e,(hl)
   1997 23                 8582 	inc	hl
   1998 56                 8583 	ld	d,(hl)
   1999 1A                 8584 	ld	a,(de)
   199A F8 02              8585 	lda	hl,2(sp)
   199C 77                 8586 	ld	(hl),a
                           8587 ;	genPointerGet
                           8588 ;	AOP_STK for _move_character_sloc1_1_0
                           8589 ;	AOP_STK for _move_character_sloc6_1_0
   199D F8 0B              8590 	lda	hl,11(sp)
   199F 5E                 8591 	ld	e,(hl)
   19A0 23                 8592 	inc	hl
   19A1 56                 8593 	ld	d,(hl)
   19A2 1A                 8594 	ld	a,(de)
   19A3 F8 03              8595 	lda	hl,3(sp)
   19A5 77                 8596 	ld	(hl),a
                           8597 ;	genIpush
                           8598 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19A6 C5                 8599 	push	bc
                           8600 ;	AOP_STK for _move_character_sloc7_1_0
   19A7 2B                 8601 	dec	hl
   19A8 7E                 8602 	ld	a,(hl)
   19A9 F5                 8603 	push	af
   19AA 33                 8604 	inc	sp
                           8605 ;	genIpush
                           8606 ;	AOP_STK for _move_character_sloc6_1_0
   19AB 23                 8607 	inc	hl
   19AC 7E                 8608 	ld	a,(hl)
   19AD F5                 8609 	push	af
   19AE 33                 8610 	inc	sp
                           8611 ;	genCall
   19AF CD 00 00           8612 	call	_set_sprite_tile
   19B2 E8 02              8613 	lda	sp,2(sp)
   19B4 C1                 8614 	pop	bc
                           8615 ;	genLabel
   19B5                    8616 00154$:
                           8617 ;	game.c 1090
                           8618 ;	genPointerGet
                           8619 ;	AOP_STK for _move_character_sloc1_1_0
                           8620 ;	AOP_STK for _move_character_sloc7_1_0
   19B5 F8 0B              8621 	lda	hl,11(sp)
   19B7 5E                 8622 	ld	e,(hl)
   19B8 23                 8623 	inc	hl
   19B9 56                 8624 	ld	d,(hl)
   19BA 1A                 8625 	ld	a,(de)
   19BB F8 02              8626 	lda	hl,2(sp)
   19BD 77                 8627 	ld	(hl),a
                           8628 ;	genIpush
                           8629 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19BE C5                 8630 	push	bc
   19BF 3E 40              8631 	ld	a,#0x40
   19C1 F5                 8632 	push	af
   19C2 33                 8633 	inc	sp
                           8634 ;	genIpush
                           8635 ;	AOP_STK for _move_character_sloc7_1_0
   19C3 7E                 8636 	ld	a,(hl)
   19C4 F5                 8637 	push	af
   19C5 33                 8638 	inc	sp
                           8639 ;	genCall
   19C6 CD 00 00           8640 	call	_set_sprite_prop
   19C9 E8 02              8641 	lda	sp,2(sp)
   19CB C1                 8642 	pop	bc
                           8643 ;	game.c 1092
                           8644 ;	genLabel
   19CC                    8645 00155$:
                           8646 ;	game.c 1095
                           8647 ;	genCmpEq
                           8648 ;	AOP_HL for _input_timer
                           8649 ; genCmpEq: left 1, right 1, result 0
   19CC 21 03 19           8650 	ld	hl,#_input_timer
   19CF 7E                 8651 	ld	a,(hl)
   19D0 B7                 8652 	or	a,a
   19D1 CA 51 1A           8653 	jp	z,00165$
   19D4                    8654 00235$:
                           8655 ;	game.c 1097
                           8656 ;	genIfx
                           8657 ;	AOP_STK for _move_character_sloc8_1_0
   19D4 AF                 8658 	xor	a,a
   19D5 F8 00              8659 	lda	hl,0(sp)
   19D7 B6                 8660 	or	a,(hl)
   19D8 C2 51 1A           8661 	jp	nz,00165$
                           8662 ;	genCmpGt
   19DB 3E 04              8663 	ld	a,#0x04
   19DD 91                 8664 	sub	a,c
   19DE DA 51 1A           8665 	jp	c,00165$
                           8666 ;	genMinus
   19E1 0D                 8667 	dec	c
                           8668 ;	genJumpTab
   19E2 59                 8669 	ld	e,c
   19E3 16 00              8670 	ld	d,#0x00
   19E5 21 EC 19           8671 	ld	hl,#00236$
   19E8 19                 8672 	add	hl,de
   19E9 19                 8673 	add	hl,de
   19EA 19                 8674 	add	hl,de
   19EB E9                 8675 	jp	(hl)
   19EC                    8676 00236$:
   19EC C3 1B 1A           8677 	jp	00158$
   19EF C3 0A 1A           8678 	jp	00157$
   19F2 C3 38 1A           8679 	jp	00159$
   19F5 C3 F8 19           8680 	jp	00156$
                           8681 ;	game.c 1099
                           8682 ;	genLabel
   19F8                    8683 00156$:
                           8684 ;	genPointerGet
                           8685 ;	AOP_STK for _move_character_sloc0_1_0
   19F8 F8 0D              8686 	lda	hl,13(sp)
   19FA 5E                 8687 	ld	e,(hl)
   19FB 23                 8688 	inc	hl
   19FC 56                 8689 	ld	d,(hl)
   19FD 1A                 8690 	ld	a,(de)
   19FE 4F                 8691 	ld	c,a
                           8692 ;	genMinus
   19FF 0D                 8693 	dec	c
   1A00 0D                 8694 	dec	c
                           8695 ;	genAssign (pointer)
                           8696 ;	AOP_STK for _move_character_sloc0_1_0
   1A01 2B                 8697 	dec	hl
   1A02 5E                 8698 	ld	e,(hl)
   1A03 23                 8699 	inc	hl
   1A04 56                 8700 	ld	d,(hl)
   1A05 79                 8701 	ld	a,c
   1A06 12                 8702 	ld	(de),a
                           8703 ;	game.c 1100
                           8704 ;	genGoto
   1A07 C3 51 1A           8705 	jp	00165$
                           8706 ;	game.c 1102
                           8707 ;	genLabel
   1A0A                    8708 00157$:
                           8709 ;	genPointerGet
                           8710 ;	AOP_STK for _move_character_sloc0_1_0
   1A0A F8 0D              8711 	lda	hl,13(sp)
   1A0C 5E                 8712 	ld	e,(hl)
   1A0D 23                 8713 	inc	hl
   1A0E 56                 8714 	ld	d,(hl)
   1A0F 1A                 8715 	ld	a,(de)
                           8716 ;	genPlus
                           8717 ;	genPlusIncr
                           8718 ;	Can't optimise plus by inc, falling back to the normal way
   1A10 4F                 8719 	ld	c,a
   1A11 C6 02              8720 	add	a,#0x02
                           8721 ;	genAssign (pointer)
                           8722 ;	AOP_STK for _move_character_sloc0_1_0
   1A13 2B                 8723 	dec	hl
   1A14 5E                 8724 	ld	e,(hl)
   1A15 23                 8725 	inc	hl
   1A16 56                 8726 	ld	d,(hl)
   1A17 12                 8727 	ld	(de),a
                           8728 ;	game.c 1103
                           8729 ;	genGoto
   1A18 C3 51 1A           8730 	jp	00165$
                           8731 ;	game.c 1105
                           8732 ;	genLabel
   1A1B                    8733 00158$:
                           8734 ;	genPlus
                           8735 ;	AOP_STK for _move_character_sloc0_1_0
                           8736 ;	AOP_STK for _move_character_sloc8_1_0
                           8737 ;	genPlusIncr
                           8738 ;	Can't optimise plus by inc, falling back to the normal way
   1A1B F8 0D              8739 	lda	hl,13(sp)
   1A1D 5E                 8740 	ld	e,(hl)
   1A1E 23                 8741 	inc	hl
   1A1F 56                 8742 	ld	d,(hl)
   1A20 21 01 00           8743 	ld	hl,#0x0001
   1A23 19                 8744 	add	hl,de
   1A24 7D                 8745 	ld	a,l
   1A25 54                 8746 	ld	d,h
   1A26 F8 00              8747 	lda	hl,0(sp)
                           8748 ;	genPointerGet
                           8749 ;	AOP_STK for _move_character_sloc8_1_0
   1A28 22                 8750 	ld	(hl+),a
   1A29 72                 8751 	ld	(hl),d
   1A2A 5F                 8752 	ld	e,a
   1A2B 1A                 8753 	ld	a,(de)
   1A2C 4F                 8754 	ld	c,a
                           8755 ;	genMinus
   1A2D 0D                 8756 	dec	c
   1A2E 0D                 8757 	dec	c
                           8758 ;	genAssign (pointer)
                           8759 ;	AOP_STK for _move_character_sloc8_1_0
   1A2F 2B                 8760 	dec	hl
   1A30 5E                 8761 	ld	e,(hl)
   1A31 23                 8762 	inc	hl
   1A32 56                 8763 	ld	d,(hl)
   1A33 79                 8764 	ld	a,c
   1A34 12                 8765 	ld	(de),a
                           8766 ;	game.c 1106
                           8767 ;	genGoto
   1A35 C3 51 1A           8768 	jp	00165$
                           8769 ;	game.c 1108
                           8770 ;	genLabel
   1A38                    8771 00159$:
                           8772 ;	genPlus
                           8773 ;	AOP_STK for _move_character_sloc0_1_0
                           8774 ;	AOP_STK for _move_character_sloc8_1_0
                           8775 ;	genPlusIncr
                           8776 ;	Can't optimise plus by inc, falling back to the normal way
   1A38 F8 0D              8777 	lda	hl,13(sp)
   1A3A 5E                 8778 	ld	e,(hl)
   1A3B 23                 8779 	inc	hl
   1A3C 56                 8780 	ld	d,(hl)
   1A3D 21 01 00           8781 	ld	hl,#0x0001
   1A40 19                 8782 	add	hl,de
   1A41 7D                 8783 	ld	a,l
   1A42 54                 8784 	ld	d,h
   1A43 F8 00              8785 	lda	hl,0(sp)
                           8786 ;	genPointerGet
                           8787 ;	AOP_STK for _move_character_sloc8_1_0
   1A45 22                 8788 	ld	(hl+),a
   1A46 72                 8789 	ld	(hl),d
   1A47 5F                 8790 	ld	e,a
   1A48 1A                 8791 	ld	a,(de)
                           8792 ;	genPlus
                           8793 ;	genPlusIncr
                           8794 ;	Can't optimise plus by inc, falling back to the normal way
   1A49 4F                 8795 	ld	c,a
   1A4A C6 02              8796 	add	a,#0x02
                           8797 ;	genAssign (pointer)
                           8798 ;	AOP_STK for _move_character_sloc8_1_0
   1A4C 2B                 8799 	dec	hl
   1A4D 5E                 8800 	ld	e,(hl)
   1A4E 23                 8801 	inc	hl
   1A4F 56                 8802 	ld	d,(hl)
   1A50 12                 8803 	ld	(de),a
                           8804 ;	game.c 1110
                           8805 ;	genLabel
   1A51                    8806 00165$:
                           8807 ;	game.c 1115
                           8808 ;	genPlus
                           8809 ;	AOP_STK for _move_character_sloc0_1_0
                           8810 ;	AOP_STK for _move_character_sloc8_1_0
                           8811 ;	genPlusIncr
                           8812 ;	Can't optimise plus by inc, falling back to the normal way
   1A51 F8 0D              8813 	lda	hl,13(sp)
   1A53 5E                 8814 	ld	e,(hl)
   1A54 23                 8815 	inc	hl
   1A55 56                 8816 	ld	d,(hl)
   1A56 21 01 00           8817 	ld	hl,#0x0001
   1A59 19                 8818 	add	hl,de
   1A5A 7D                 8819 	ld	a,l
   1A5B 54                 8820 	ld	d,h
   1A5C F8 00              8821 	lda	hl,0(sp)
                           8822 ;	genPointerGet
                           8823 ;	AOP_STK for _move_character_sloc8_1_0
   1A5E 22                 8824 	ld	(hl+),a
   1A5F 72                 8825 	ld	(hl),d
   1A60 5F                 8826 	ld	e,a
   1A61 1A                 8827 	ld	a,(de)
   1A62 4F                 8828 	ld	c,a
                           8829 ;	genPointerGet
                           8830 ;	AOP_STK for _move_character_sloc0_1_0
                           8831 ;	AOP_STK for _move_character_sloc7_1_0
   1A63 F8 0D              8832 	lda	hl,13(sp)
   1A65 5E                 8833 	ld	e,(hl)
   1A66 23                 8834 	inc	hl
   1A67 56                 8835 	ld	d,(hl)
   1A68 1A                 8836 	ld	a,(de)
   1A69 F8 02              8837 	lda	hl,2(sp)
   1A6B 77                 8838 	ld	(hl),a
                           8839 ;	genIpush
                           8840 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A6C 79                 8841 	ld	a,c
   1A6D F5                 8842 	push	af
   1A6E 33                 8843 	inc	sp
                           8844 ;	genIpush
                           8845 ;	AOP_STK for _move_character_sloc7_1_0
   1A6F 7E                 8846 	ld	a,(hl)
   1A70 F5                 8847 	push	af
   1A71 33                 8848 	inc	sp
                           8849 ;	genIpush
   1A72 78                 8850 	ld	a,b
   1A73 F5                 8851 	push	af
   1A74 33                 8852 	inc	sp
                           8853 ;	genCall
   1A75 CD 00 00           8854 	call	_move_sprite
   1A78 E8 03              8855 	lda	sp,3(sp)
                           8856 ;	game.c 1116
                           8857 ;	genPlus
                           8858 ;	AOP_STK for _move_character_sloc0_1_0
                           8859 ;	genPlusIncr
                           8860 ;	Can't optimise plus by inc, falling back to the normal way
   1A7A F8 0D              8861 	lda	hl,13(sp)
   1A7C 5E                 8862 	ld	e,(hl)
   1A7D 23                 8863 	inc	hl
   1A7E 56                 8864 	ld	d,(hl)
   1A7F 21 0C 00           8865 	ld	hl,#0x000C
   1A82 19                 8866 	add	hl,de
   1A83 4D                 8867 	ld	c,l
   1A84 44                 8868 	ld	b,h
                           8869 ;	genPointerGet
                           8870 ;	AOP_STK for _move_character_sloc8_1_0
                           8871 ;	AOP_STK for _move_character_sloc7_1_0
   1A85 F8 00              8872 	lda	hl,0(sp)
   1A87 5E                 8873 	ld	e,(hl)
   1A88 23                 8874 	inc	hl
   1A89 56                 8875 	ld	d,(hl)
   1A8A 1A                 8876 	ld	a,(de)
   1A8B 23                 8877 	inc	hl
   1A8C 77                 8878 	ld	(hl),a
                           8879 ;	genPointerGet
                           8880 ;	AOP_STK for _move_character_sloc0_1_0
                           8881 ;	AOP_STK for _move_character_sloc8_1_0
   1A8D F8 0D              8882 	lda	hl,13(sp)
   1A8F 5E                 8883 	ld	e,(hl)
   1A90 23                 8884 	inc	hl
   1A91 56                 8885 	ld	d,(hl)
   1A92 1A                 8886 	ld	a,(de)
   1A93 F8 00              8887 	lda	hl,0(sp)
   1A95 77                 8888 	ld	(hl),a
                           8889 ;	genIpush
                           8890 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1A96 C5                 8891 	push	bc
                           8892 ;	AOP_STK for _move_character_sloc7_1_0
   1A97 23                 8893 	inc	hl
   1A98 23                 8894 	inc	hl
   1A99 7E                 8895 	ld	a,(hl)
   1A9A F5                 8896 	push	af
   1A9B 33                 8897 	inc	sp
                           8898 ;	genIpush
                           8899 ;	AOP_STK for _move_character_sloc8_1_0
   1A9C 2B                 8900 	dec	hl
   1A9D 2B                 8901 	dec	hl
   1A9E 7E                 8902 	ld	a,(hl)
   1A9F F5                 8903 	push	af
   1AA0 33                 8904 	inc	sp
                           8905 ;	genCall
   1AA1 CD 61 0D           8906 	call	__get_map_position_from_xy
                           8907 ;	AOP_STK for _move_character_sloc8_1_0
   1AA4 F8 05              8908 	lda	hl,5(sp)
   1AA6 72                 8909 	ld	(hl),d
   1AA7 2B                 8910 	dec	hl
   1AA8 73                 8911 	ld	(hl),e
   1AA9 E8 02              8912 	lda	sp,2(sp)
   1AAB C1                 8913 	pop	bc
                           8914 ;	genAssign (pointer)
                           8915 ;	AOP_STK for _move_character_sloc8_1_0
   1AAC 59                 8916 	ld	e,c
   1AAD 50                 8917 	ld	d,b
   1AAE F8 00              8918 	lda	hl,0(sp)
   1AB0 7E                 8919 	ld	a,(hl)
   1AB1 12                 8920 	ld	(de),a
   1AB2 13                 8921 	inc	de
   1AB3 23                 8922 	inc	hl
   1AB4 7E                 8923 	ld	a,(hl)
   1AB5 12                 8924 	ld	(de),a
                           8925 ;	genLabel
   1AB6                    8926 00166$:
                           8927 ;	genEndFunction
   1AB6 E8 0F              8928 	lda	sp,15(sp)
   1AB8 C9                 8929 	ret
   1AB9                    8930 ___move_character_end:
                           8931 ;	game.c 1119
                           8932 ;	genLabel
                           8933 ;	genFunction
                           8934 ;	---------------------------------
                           8935 ; Function set_character_sprite
                           8936 ; ---------------------------------
   1AB9                    8937 ___set_character_sprite_start:
   1AB9                    8938 _set_character_sprite:
   1AB9 E8 F9              8939 	lda	sp,-7(sp)
                           8940 ;	game.c 1120
                           8941 ;	genAssign
                           8942 ;	AOP_STK for 
   1ABB F8 09              8943 	lda	hl,9(sp)
   1ABD 4E                 8944 	ld	c,(hl)
   1ABE 23                 8945 	inc	hl
   1ABF 46                 8946 	ld	b,(hl)
                           8947 ;	genPlus
                           8948 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8949 ;	genPlusIncr
                           8950 ;	Can't optimise plus by inc, falling back to the normal way
   1AC0 21 0B 00           8951 	ld	hl,#0x000B
   1AC3 09                 8952 	add	hl,bc
   1AC4 7D                 8953 	ld	a,l
   1AC5 54                 8954 	ld	d,h
   1AC6 F8 05              8955 	lda	hl,5(sp)
                           8956 ;	genPointerGet
                           8957 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8958 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1AC8 22                 8959 	ld	(hl+),a
   1AC9 72                 8960 	ld	(hl),d
   1ACA 5F                 8961 	ld	e,a
   1ACB 1A                 8962 	ld	a,(de)
   1ACC 2B                 8963 	dec	hl
   1ACD 2B                 8964 	dec	hl
   1ACE 77                 8965 	ld	(hl),a
                           8966 ;	genCmpGt
                           8967 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           8968 ;	AOP_HL for _characters_available
   1ACF 21 02 19           8969 	ld	hl,#_characters_available
   1AD2 7E                 8970 	ld	a,(hl)
   1AD3 F8 04              8971 	lda	hl,4(sp)
   1AD5 96                 8972 	sub	a,(hl)
   1AD6 DA 52 1B           8973 	jp	c,00103$
                           8974 ;	game.c 1121
                           8975 ;	genPlus
                           8976 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8977 ;	genPlusIncr
                           8978 ;	Can't optimise plus by inc, falling back to the normal way
   1AD9 21 02 00           8979 	ld	hl,#0x0002
   1ADC 09                 8980 	add	hl,bc
   1ADD 7D                 8981 	ld	a,l
   1ADE 54                 8982 	ld	d,h
   1ADF F8 02              8983 	lda	hl,2(sp)
                           8984 ;	genPointerGet
                           8985 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8986 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1AE1 22                 8987 	ld	(hl+),a
   1AE2 72                 8988 	ld	(hl),d
   1AE3 5F                 8989 	ld	e,a
   1AE4 1A                 8990 	ld	a,(de)
   1AE5 2B                 8991 	dec	hl
   1AE6 2B                 8992 	dec	hl
   1AE7 77                 8993 	ld	(hl),a
                           8994 ;	genIpush
                           8995 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1AE8 C5                 8996 	push	bc
                           8997 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1AE9 7E                 8998 	ld	a,(hl)
   1AEA F5                 8999 	push	af
   1AEB 33                 9000 	inc	sp
                           9001 ;	genIpush
                           9002 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1AEC F8 07              9003 	lda	hl,7(sp)
   1AEE 7E                 9004 	ld	a,(hl)
   1AEF F5                 9005 	push	af
   1AF0 33                 9006 	inc	sp
                           9007 ;	genCall
   1AF1 CD 00 00           9008 	call	_set_sprite_tile
   1AF4 E8 02              9009 	lda	sp,2(sp)
   1AF6 C1                 9010 	pop	bc
                           9011 ;	game.c 1122
                           9012 ;	genPlus
                           9013 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9014 ;	genPlusIncr
                           9015 ;	Can't optimise plus by inc, falling back to the normal way
   1AF7 21 01 00           9016 	ld	hl,#0x0001
   1AFA 09                 9017 	add	hl,bc
   1AFB 7D                 9018 	ld	a,l
   1AFC 54                 9019 	ld	d,h
   1AFD F8 02              9020 	lda	hl,2(sp)
                           9021 ;	genPointerGet
                           9022 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9023 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1AFF 22                 9024 	ld	(hl+),a
   1B00 72                 9025 	ld	(hl),d
   1B01 5F                 9026 	ld	e,a
   1B02 1A                 9027 	ld	a,(de)
   1B03 2B                 9028 	dec	hl
   1B04 2B                 9029 	dec	hl
   1B05 77                 9030 	ld	(hl),a
                           9031 ;	genPointerGet
                           9032 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B06 0A                 9033 	ld	a,(bc)
   1B07 F8 04              9034 	lda	hl,4(sp)
                           9035 ;	genPointerGet
                           9036 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9037 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B09 22                 9038 	ld	(hl+),a
   1B0A 5E                 9039 	ld	e,(hl)
   1B0B 23                 9040 	inc	hl
   1B0C 56                 9041 	ld	d,(hl)
   1B0D 1A                 9042 	ld	a,(de)
   1B0E F8 00              9043 	lda	hl,0(sp)
   1B10 77                 9044 	ld	(hl),a
                           9045 ;	genIpush
                           9046 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1B11 C5                 9047 	push	bc
                           9048 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B12 23                 9049 	inc	hl
   1B13 7E                 9050 	ld	a,(hl)
   1B14 F5                 9051 	push	af
   1B15 33                 9052 	inc	sp
                           9053 ;	genIpush
                           9054 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B16 F8 07              9055 	lda	hl,7(sp)
   1B18 7E                 9056 	ld	a,(hl)
   1B19 F5                 9057 	push	af
   1B1A 33                 9058 	inc	sp
                           9059 ;	genIpush
                           9060 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B1B F8 04              9061 	lda	hl,4(sp)
   1B1D 7E                 9062 	ld	a,(hl)
   1B1E F5                 9063 	push	af
   1B1F 33                 9064 	inc	sp
                           9065 ;	genCall
   1B20 CD 00 00           9066 	call	_move_sprite
   1B23 E8 03              9067 	lda	sp,3(sp)
   1B25 C1                 9068 	pop	bc
                           9069 ;	game.c 1123
                           9070 ;	genPlus
                           9071 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9072 ;	genPlusIncr
                           9073 ;	Can't optimise plus by inc, falling back to the normal way
   1B26 21 0C 00           9074 	ld	hl,#0x000C
   1B29 09                 9075 	add	hl,bc
   1B2A 7D                 9076 	ld	a,l
   1B2B 54                 9077 	ld	d,h
   1B2C F8 05              9078 	lda	hl,5(sp)
   1B2E 22                 9079 	ld	(hl+),a
   1B2F 72                 9080 	ld	(hl),d
                           9081 ;	genPointerGet
                           9082 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9083 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B30 F8 02              9084 	lda	hl,2(sp)
   1B32 5E                 9085 	ld	e,(hl)
   1B33 23                 9086 	inc	hl
   1B34 56                 9087 	ld	d,(hl)
   1B35 1A                 9088 	ld	a,(de)
   1B36 F8 00              9089 	lda	hl,0(sp)
   1B38 77                 9090 	ld	(hl),a
                           9091 ;	genPointerGet
   1B39 0A                 9092 	ld	a,(bc)
   1B3A 4F                 9093 	ld	c,a
                           9094 ;	genIpush
                           9095 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           9096 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B3B 7E                 9097 	ld	a,(hl)
   1B3C F5                 9098 	push	af
   1B3D 33                 9099 	inc	sp
                           9100 ;	genIpush
   1B3E 79                 9101 	ld	a,c
   1B3F F5                 9102 	push	af
   1B40 33                 9103 	inc	sp
                           9104 ;	genCall
   1B41 CD 61 0D           9105 	call	__get_map_position_from_xy
   1B44 42                 9106 	ld	b,d
   1B45 4B                 9107 	ld	c,e
   1B46 E8 02              9108 	lda	sp,2(sp)
                           9109 ;	genAssign (pointer)
                           9110 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   1B48 F8 05              9111 	lda	hl,5(sp)
   1B4A 5E                 9112 	ld	e,(hl)
   1B4B 23                 9113 	inc	hl
   1B4C 56                 9114 	ld	d,(hl)
   1B4D 79                 9115 	ld	a,c
   1B4E 12                 9116 	ld	(de),a
   1B4F 13                 9117 	inc	de
   1B50 78                 9118 	ld	a,b
   1B51 12                 9119 	ld	(de),a
                           9120 ;	genLabel
   1B52                    9121 00103$:
                           9122 ;	genEndFunction
   1B52 E8 07              9123 	lda	sp,7(sp)
   1B54 C9                 9124 	ret
   1B55                    9125 ___set_character_sprite_end:
                           9126 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_map_position_from_xy_end   0DBB R
  0 ____get_map_position_from_xy_sta   0D61 R
  0 ____get_next_map_position_end      0BA3 R
  0 ____get_next_map_position_start    0AEF R
  0 ___can_move_end                    10B3 R
  0 ___can_move_start                  0FCA R
  0 ___can_move_to_map_pos_end         0FCA R
  0 ___can_move_to_map_pos_start       0F01 R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0D61 R
  0 ___dog1_power_apply_start          0BA3 R
  0 ___dog1_power_end                  0AEF R
  0 ___dog1_power_start                0858 R
  0 ___got_door_end                    07CC R
  0 ___got_door_start                  05E2 R
  0 ___got_key_end                     05E2 R
  0 ___got_key_start                   0535 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0535 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      0858 R
  0 ___is_ded_start                    07CC R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              1AB9 R
  0 ___move_character_start            1259 R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0F01 R
  0 ___player_input_start              0DBB R
  0 ___rotate_player_end               1259 R
  0 ___rotate_player_start             10B3 R
  0 ___set_character_sprite_end        1B55 R
  0 ___set_character_sprite_start      1AB9 R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_map_position_from_xy         0D61 GR
  0 __get_next_map_position            0AEF GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          0FCA GR
  0 _can_move_to_map_pos               0F01 GR
  1 _cat                               1A97 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7B GR
  0 _dog1_power                        0858 GR
  0 _dog1_power_apply                  0BA3 GR
  1 _dog2                              1A89 GR
  0 _got_door                          05E2 GR
  0 _got_key                           0535 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA5 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07CC GR
  1 _item1                             1ABB GR
  1 _item2                             1AC1 GR
  1 _item3                             1AC7 GR
    _joypad                            **** GX
  1 _key                               1AB5 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    1259 GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AB3 GR
  0 _player_input                      0DBB GR
    _printf                            **** GX
  0 _rotate_player                     10B3 GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              1AB9 GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1B55   flags 0
   1 _DATA                              size 1ACD   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 1039   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
