                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Thu Feb 27 16:10:20 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc148120
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _ice_should_slide
                             14 	.globl _instanciate_chars
                             15 	.globl _copy_map
                             16 	.globl _helper_copy_map
                             17 	.globl _change_char
                             18 	.globl _map_water
                             19 	.globl _init
                             20 	.globl _main
                             21 	.globl _timers
                             22 	.globl _performantDelay
                             23 	.globl _item3
                             24 	.globl _item2
                             25 	.globl _item1
                             26 	.globl _key
                             27 	.globl _player
                             28 	.globl _horse
                             29 	.globl _cat
                             30 	.globl _dog2
                             31 	.globl _dog1
                             32 	.globl _bunny
                             33 	.globl _map
                             34 	.globl _current_map
                             35 	.globl _input_timer
                             36 	.globl _characters_available
                             37 	.globl _timer
                             38 	.globl _running
                             39 	.globl _spritePalette
                             40 	.globl _sprites_park
                             41 	.globl _MapTest
                             42 	.globl _Map10
                             43 	.globl _Map9
                             44 	.globl _Map8
                             45 	.globl _Map7
                             46 	.globl _Map6
                             47 	.globl _Map5
                             48 	.globl _Map4
                             49 	.globl _Map3
                             50 	.globl _Map2
                             51 	.globl _Map1
                             52 	.globl _Characters
                             53 	.globl _map_loop
                             54 	.globl _map_init
                             55 	.globl _got_key
                             56 	.globl _got_door
                             57 	.globl _is_ded
                             58 	.globl __get_next_map_position
                             59 	.globl _dog1_power_apply
                             60 	.globl _get_player_map_position
                             61 	.globl _player_input
                             62 	.globl _can_move_to_map_pos
                             63 	.globl _can_move
                             64 	.globl _move_character
                             65 	.globl _set_character_sprite
                             66 ;--------------------------------------------------------
                             67 ; special function registers
                             68 ;--------------------------------------------------------
                             69 ;--------------------------------------------------------
                             70 ; special function bits 
                             71 ;--------------------------------------------------------
                             72 ;--------------------------------------------------------
                             73 ; internal ram data
                             74 ;--------------------------------------------------------
                             75 	.area _DATA
   0000                      76 _Characters::
   0000                      77 	.ds 496
   01F0                      78 _Map1::
   01F0                      79 	.ds 360
   0358                      80 _Map2::
   0358                      81 	.ds 360
   04C0                      82 _Map3::
   04C0                      83 	.ds 360
   0628                      84 _Map4::
   0628                      85 	.ds 360
   0790                      86 _Map5::
   0790                      87 	.ds 360
   08F8                      88 _Map6::
   08F8                      89 	.ds 360
   0A60                      90 _Map7::
   0A60                      91 	.ds 360
   0BC8                      92 _Map8::
   0BC8                      93 	.ds 360
   0D30                      94 _Map9::
   0D30                      95 	.ds 360
   0E98                      96 _Map10::
   0E98                      97 	.ds 360
   1000                      98 _MapTest::
   1000                      99 	.ds 360
   1168                     100 _sprites_park::
   1168                     101 	.ds 1936
   18F8                     102 _spritePalette::
   18F8                     103 	.ds 8
   1900                     104 _running::
   1900                     105 	.ds 1
   1901                     106 _timer::
   1901                     107 	.ds 1
   1902                     108 _characters_available::
   1902                     109 	.ds 1
   1903                     110 _input_timer::
   1903                     111 	.ds 1
   1904                     112 _current_map::
   1904                     113 	.ds 1
   1905                     114 _map::
   1905                     115 	.ds 360
   1A6D                     116 _bunny::
   1A6D                     117 	.ds 14
   1A7B                     118 _dog1::
   1A7B                     119 	.ds 14
   1A89                     120 _dog2::
   1A89                     121 	.ds 14
   1A97                     122 _cat::
   1A97                     123 	.ds 14
   1AA5                     124 _horse::
   1AA5                     125 	.ds 14
   1AB3                     126 _player::
   1AB3                     127 	.ds 2
   1AB5                     128 _key::
   1AB5                     129 	.ds 6
   1ABB                     130 _item1::
   1ABB                     131 	.ds 6
   1AC1                     132 _item2::
   1AC1                     133 	.ds 6
   1AC7                     134 _item3::
   1AC7                     135 	.ds 6
                            136 ;--------------------------------------------------------
                            137 ; overlayable items in internal ram 
                            138 ;--------------------------------------------------------
                            139 	.area _OVERLAY
                            140 ;--------------------------------------------------------
                            141 ; indirectly addressable internal ram data
                            142 ;--------------------------------------------------------
                            143 	.area _ISEG
                            144 ;--------------------------------------------------------
                            145 ; bit data
                            146 ;--------------------------------------------------------
                            147 	.area _BSEG
                            148 ;--------------------------------------------------------
                            149 ; external ram data
                            150 ;--------------------------------------------------------
                            151 	.area _XSEG
                            152 ;--------------------------------------------------------
                            153 ; global & static initialisations
                            154 ;--------------------------------------------------------
                            155 	.area _GSINIT
                            156 	.area _GSFINAL
                            157 	.area _GSINIT
                            158 ;	game.c 26
                            159 ;	game.c 1096
                            160 ;	genArrayInit
                            161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            162 	ld	hl,#_Characters
   0003 CD 00 00            163 	call	__initrleblock
   0006 2C                  164 	.db	44
   0007 09 00 00 09 00 09   165 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   166 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   167 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   168 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   169 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         170 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               171 	.db	-5,0x00
   0035 7F                  172 	.db	127
   0036 13 00 1E 0A 9E 00   173 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   174 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   175 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   176 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   177 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   178 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   179 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   180 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   181 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   182 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   183 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   184 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   185 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   186 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   187 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   188 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  189 	.db	127
   00B6 00 00 04 70 04 40   190 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   191 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   192 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   193 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   194 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   195 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   196 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   197 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   198 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   199 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   200 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   201 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   202 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   203 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   204 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   205 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  206 	.db	62
   0136 00 00 39 14 FF 00   207 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   208 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   209 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   210 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   211 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   212 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   213 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   214 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               215 	.db	-127,0x00
   0176 04                  216 	.db	4
   0177 00 00 00 00         217 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  218 	.db	0
                            219 ;	game.c 25
                            220 ;	game.c 1096
                            221 ;	genArrayInit
                            222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            223 	ld	hl,#_Map1
   017F CD 00 00            224 	call	__initrleblock
   0182 04                  225 	.db	4
   0183 01 01 01 01         226 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               227 	.db	-16,0x16
   0189 04                  228 	.db	4
   018A 01 0A 02 01         229 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               230 	.db	-15,0x09
   0190 0C                  231 	.db	12
   0191 16 01 01 02 15 15   232 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         233 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               234 	.db	-6,0x15
   019F 09                  235 	.db	9
   01A0 02 09 16 02 01 02   236 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  237 	.db	0x17
   01A9 FA 15               238 	.db	-6,0x15
   01AB 20                  239 	.db	32
   01AC 17 15 15 15 17 15   240 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   241 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   242 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   243 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               244 	.db	-5,0x02
   01CE 06                  245 	.db	6
   01CF 01 15 01 01 01 17   246 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               247 	.db	-5,0x0B
   01D7 3E                  248 	.db	62
   01D8 01 01 01 15 02 02   249 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   250 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   251 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   252 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   253 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   254 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   255 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   256 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               257 	.db	-6,0x15
   0218 0C                  258 	.db	12
   0219 02 02 15 02 02 02   259 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         260 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               261 	.db	-8,0x15
   0227 3C                  262 	.db	60
   0228 17 17 17 15 15 15   263 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   264 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   265 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   266 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   267 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   268 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   269 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         270 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               271 	.db	-7,0x15
   0266 07                  272 	.db	7
   0267 17 17 15 15 15 01   273 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               274 	.db	-10,0x15
   0270 28                  275 	.db	40
   0271 17 15 15 15 15 17   276 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   277 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   278 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   279 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   280 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               281 	.db	-5,0x0B
   029B 0F                  282 	.db	15
   029C 04 2E 00 02 01 02   283 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   284 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               285 	.db	-5,0x0B
   02AD 03                  286 	.db	3
   02AE 04 00 00            287 	.db	0x04, 0x00, 0x00
   02B1 00                  288 	.db	0
                            289 ;	game.c 25
                            290 ;	game.c 1096
                            291 ;	genArrayInit
                            292 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            293 	ld	hl,#_Map2
   02B5 CD 00 00            294 	call	__initrleblock
   02B8 FB 00               295 	.db	-5,0x00
   02BA 01                  296 	.db	1
   02BB 2D                  297 	.db	0x2D
   02BC F9 00               298 	.db	-7,0x00
   02BE 04                  299 	.db	4
   02BF 2D 00 15 15         300 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               301 	.db	-6,0x00
   02C5 7F                  302 	.db	127
   02C6 0B 0B 00 0B 0B 0B   303 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   304 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   305 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   306 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   307 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   308 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   309 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   310 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   311 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   312 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   313 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   314 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   315 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   316 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   317 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   318 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  319 	.db	53
   0346 00 00 2D 00 00 00   320 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   321 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   322 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   323 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   324 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   325 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      326 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               327 	.db	-5,0x0B
   037D 03                  328 	.db	3
   037E 15 00 15            329 	.db	0x15, 0x00, 0x15
   0381 FB 0B               330 	.db	-5,0x0B
   0383 37                  331 	.db	55
   0384 15 15 0B 15 15 00   332 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   333 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   334 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   335 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   336 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   337 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   338 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               339 	.db	-5,0x0B
   03BD 09                  340 	.db	9
   03BE 15 15 0B 15 15 00   341 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  342 	.db	0x15
   03C7 F6 0B               343 	.db	-10,0x0B
   03C9 07                  344 	.db	7
   03CA 15 15 15 0B 15 15   345 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               346 	.db	-16,0x15
   03D3 09                  347 	.db	9
   03D4 00 15 15 00 00 00   348 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  349 	.db	0x15
   03DD F9 00               350 	.db	-7,0x00
   03DF 09                  351 	.db	9
   03E0 15 15 15 00 00 15   352 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  353 	.db	0x15
   03E9 FB 00               354 	.db	-5,0x00
   03EB FB 15               355 	.db	-5,0x15
   03ED FB 00               356 	.db	-5,0x00
   03EF 02                  357 	.db	2
   03F0 15 15               358 	.db	0x15, 0x15
   03F2 00                  359 	.db	0
                            360 ;	game.c 25
                            361 ;	game.c 1096
                            362 ;	genArrayInit
                            363 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            364 	ld	hl,#_Map3
   03F6 CD 00 00            365 	call	__initrleblock
   03F9 F2 01               366 	.db	-14,0x01
   03FB 03                  367 	.db	3
   03FC 2D 0B 0B            368 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               369 	.db	-5,0x01
   0401 02                  370 	.db	2
   0402 17 17               371 	.db	0x17, 0x17
   0404 FA 15               372 	.db	-6,0x15
   0406 0E                  373 	.db	14
   0407 17 17 15 15 0B 15   374 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   375 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               376 	.db	-5,0x01
   0417 08                  377 	.db	8
   0418 29 01 01 01 2D 01   378 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               379 	.db	-5,0x01
   0422 7F                  380 	.db	127
   0423 15 15 2D 15 15 15   381 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   382 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   383 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   384 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   385 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   386 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   387 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   388 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   389 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   390 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   391 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   392 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   393 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   394 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   395 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   396 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  397 	.db	61
   04A3 01 15 17 15 15 01   398 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   399 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   400 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   401 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   402 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   403 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   404 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      405 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               406 	.db	-5,0x01
   04E2 0B                  407 	.db	11
   04E3 15 15 01 15 2D 01   408 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            409 	.db	0x15, 0x15, 0x0B
   04EE FB 15               410 	.db	-5,0x15
   04F0 59                  411 	.db	89
   04F1 17 15 15 17 15 15   412 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   413 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   414 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   415 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   416 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   417 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   418 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   419 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   420 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   421 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   422 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  423 	.db	0x17
   054A 00                  424 	.db	0
                            425 ;	game.c 25
                            426 ;	game.c 1096
                            427 ;	genArrayInit
                            428 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            429 	ld	hl,#_Map4
   054E CD 00 00            430 	call	__initrleblock
   0551 06                  431 	.db	6
   0552 00 00 0A 0A 15 15   432 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               433 	.db	-5,0x0B
   055A 01                  434 	.db	1
   055B 15                  435 	.db	0x15
   055C FA 0B               436 	.db	-6,0x0B
   055E 25                  437 	.db	37
   055F 15 15 00 0A 2D 06   438 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   439 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   440 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   441 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      442 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               443 	.db	-5,0x0B
   0586 08                  444 	.db	8
   0587 0A 07 0B 0B 15 0B   445 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               446 	.db	-5,0x0B
   0591 01                  447 	.db	1
   0592 15                  448 	.db	0x15
   0593 F6 0B               449 	.db	-10,0x0B
   0595 42                  450 	.db	66
   0596 00 2D 0B 01 00 0B   451 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   452 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   453 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   454 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   455 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   456 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   457 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   458 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               459 	.db	0x15, 0x00
   05D8 F9 0B               460 	.db	-7,0x0B
   05DA 43                  461 	.db	67
   05DB 15 0B 0B 00 0B 15   462 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   463 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   464 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   465 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   466 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   467 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   468 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   469 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            470 	.db	0x15, 0x0B, 0x15
   061E F9 0B               471 	.db	-7,0x0B
   0620 16                  472 	.db	22
   0621 15 15 0B 0B 0B 0B   473 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   474 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   475 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               476 	.db	-5,0x0B
   0639 66                  477 	.db	102
   063A 15 0A 07 15 00 02   478 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   479 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   480 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   481 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   482 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   483 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   484 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   485 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   486 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   487 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   488 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   489 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   490 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  491 	.db	0
                            492 ;	game.c 25
                            493 ;	game.c 1096
                            494 ;	genArrayInit
                            495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            496 	ld	hl,#_Map5
   06A4 CD 00 00            497 	call	__initrleblock
   06A7 F2 01               498 	.db	-14,0x01
   06A9 03                  499 	.db	3
   06AA 2D 0B 0B            500 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               501 	.db	-5,0x01
   06AF 02                  502 	.db	2
   06B0 17 17               503 	.db	0x17, 0x17
   06B2 FA 15               504 	.db	-6,0x15
   06B4 07                  505 	.db	7
   06B5 17 17 15 15 0B 15   506 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               507 	.db	-5,0x01
   06BE 02                  508 	.db	2
   06BF 17 15               509 	.db	0x17, 0x15
   06C1 FB 01               510 	.db	-5,0x01
   06C3 7F                  511 	.db	127
   06C4 29 01 01 01 2D 01   512 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   513 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   514 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   515 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   516 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   517 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   518 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   519 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   520 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   521 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   522 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   523 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   524 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   525 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   526 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   527 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  528 	.db	74
   0744 01 2D 01 01 01 15   529 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   530 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   531 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   532 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   533 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   534 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   535 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   536 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   537 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               538 	.db	0x01, 0x29
   078E FB 01               539 	.db	-5,0x01
   0790 0B                  540 	.db	11
   0791 15 15 01 15 2D 01   541 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            542 	.db	0x15, 0x15, 0x0B
   079C FB 15               543 	.db	-5,0x15
   079E 59                  544 	.db	89
   079F 17 15 15 17 15 15   545 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   546 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   547 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   548 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   549 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   550 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   551 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   552 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   553 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   554 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   555 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  556 	.db	0x17
   07F8 00                  557 	.db	0
                            558 ;	game.c 25
                            559 ;	game.c 1096
                            560 ;	genArrayInit
                            561 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            562 	ld	hl,#_Map6
   07FC CD 00 00            563 	call	__initrleblock
   07FF BF 00               564 	.db	-65,0x00
   0801 02                  565 	.db	2
   0802 0C 0C               566 	.db	0x0C, 0x0C
   0804 EE 00               567 	.db	-18,0x00
   0806 02                  568 	.db	2
   0807 0C 0C               569 	.db	0x0C, 0x0C
   0809 81 00               570 	.db	-127,0x00
   080B 81 00               571 	.db	-127,0x00
   080D ED 00               572 	.db	-19,0x00
   080F 00                  573 	.db	0
                            574 ;	game.c 25
                            575 ;	game.c 1096
                            576 ;	genArrayInit
                            577 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            578 	ld	hl,#_Map7
   0813 CD 00 00            579 	call	__initrleblock
   0816 BF 00               580 	.db	-65,0x00
   0818 02                  581 	.db	2
   0819 0C 0C               582 	.db	0x0C, 0x0C
   081B EE 00               583 	.db	-18,0x00
   081D 02                  584 	.db	2
   081E 0C 0C               585 	.db	0x0C, 0x0C
   0820 81 00               586 	.db	-127,0x00
   0822 81 00               587 	.db	-127,0x00
   0824 ED 00               588 	.db	-19,0x00
   0826 00                  589 	.db	0
                            590 ;	game.c 25
                            591 ;	game.c 1096
                            592 ;	genArrayInit
                            593 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            594 	ld	hl,#_Map8
   082A CD 00 00            595 	call	__initrleblock
   082D BF 00               596 	.db	-65,0x00
   082F 02                  597 	.db	2
   0830 0C 0C               598 	.db	0x0C, 0x0C
   0832 EE 00               599 	.db	-18,0x00
   0834 02                  600 	.db	2
   0835 0C 0C               601 	.db	0x0C, 0x0C
   0837 81 00               602 	.db	-127,0x00
   0839 81 00               603 	.db	-127,0x00
   083B ED 00               604 	.db	-19,0x00
   083D 00                  605 	.db	0
                            606 ;	game.c 25
                            607 ;	game.c 1096
                            608 ;	genArrayInit
                            609 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            610 	ld	hl,#_Map9
   0841 CD 00 00            611 	call	__initrleblock
   0844 BF 00               612 	.db	-65,0x00
   0846 02                  613 	.db	2
   0847 0C 0C               614 	.db	0x0C, 0x0C
   0849 EE 00               615 	.db	-18,0x00
   084B 02                  616 	.db	2
   084C 0C 0C               617 	.db	0x0C, 0x0C
   084E 81 00               618 	.db	-127,0x00
   0850 81 00               619 	.db	-127,0x00
   0852 ED 00               620 	.db	-19,0x00
   0854 00                  621 	.db	0
                            622 ;	game.c 25
                            623 ;	game.c 1096
                            624 ;	genArrayInit
                            625 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            626 	ld	hl,#_Map10
   0858 CD 00 00            627 	call	__initrleblock
   085B BF 00               628 	.db	-65,0x00
   085D 02                  629 	.db	2
   085E 0C 0C               630 	.db	0x0C, 0x0C
   0860 EE 00               631 	.db	-18,0x00
   0862 02                  632 	.db	2
   0863 0C 0C               633 	.db	0x0C, 0x0C
   0865 81 00               634 	.db	-127,0x00
   0867 81 00               635 	.db	-127,0x00
   0869 ED 00               636 	.db	-19,0x00
   086B 00                  637 	.db	0
                            638 ;	game.c 25
                            639 ;	game.c 1096
                            640 ;	genArrayInit
                            641 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            642 	ld	hl,#_MapTest
   086F CD 00 00            643 	call	__initrleblock
   0872 E8 00               644 	.db	-24,0x00
   0874 06                  645 	.db	6
   0875 47 4A 59 46 00 5F   646 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087B D9 00               647 	.db	-39,0x00
   087D 0A                  648 	.db	10
   087E 4B 46 58 4A 00 5F   649 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62
        00 62
   0886 00 65               650 	.db	0x00, 0x65
   0888 F6 00               651 	.db	-10,0x00
   088A 0A                  652 	.db	10
   088B 4B 46 58 4A 00 60   653 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x60, 0x00, 0x62
        00 62
   0893 00 66               654 	.db	0x00, 0x66
   0895 F6 00               655 	.db	-10,0x00
   0897 0A                  656 	.db	10
   0898 4B 46 58 4A 00 5C   657 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62
        00 62
   08A0 00 67               658 	.db	0x00, 0x67
   08A2 ED 00               659 	.db	-19,0x00
   08A4 01                  660 	.db	1
   08A5 68                  661 	.db	0x68
   08A6 EB 00               662 	.db	-21,0x00
   08A8 0A                  663 	.db	10
   08A9 46 62 55 54 49 4A   664 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08B1 49 54               665 	.db	0x49, 0x54
   08B3 F4 00               666 	.db	-12,0x00
   08B5 0A                  667 	.db	10
   08B6 55 4A 57 58 54 53   668 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08BE 4A 52               669 	.db	0x4A, 0x52
   08C0 FB 00               670 	.db	-5,0x00
   08C2 01                  671 	.db	1
   08C3 2E                  672 	.db	0x2E
   08C4 EF 00               673 	.db	-17,0x00
   08C6 0C                  674 	.db	12
   08C7 2D 00 00 00 00 47   675 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08CF 57 54 48 46         676 	.db	0x57, 0x54, 0x48, 0x46
   08D3 F8 00               677 	.db	-8,0x00
   08D5 18                  678 	.db	24
   08D6 2D 00 0B 0B 00 00   679 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08DE 4A 57 58 54 53 46   680 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   08E6 52 00 00 00 2D 00   681 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   08EE F0 00               682 	.db	-16,0x00
   08F0 0B                  683 	.db	11
   08F1 2D 00 0D 0D 00 32   684 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   08F9 5A 51 46            685 	.db	0x5A, 0x51, 0x46
   08FC F7 00               686 	.db	-9,0x00
   08FE 0E                  687 	.db	14
   08FF 2D 00 0E 0E 00 33   688 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   0907 52 55 5A 57 57 46   689 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   090D FA 00               690 	.db	-6,0x00
   090F 0D                  691 	.db	13
   0910 2D 00 29 29 00 00   692 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   0918 51 54 48 54 58      693 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   091D E0 00               694 	.db	-32,0x00
   091F 00                  695 	.db	0
                            696 ;	game.c 26
                            697 ;	game.c 1096
                            698 ;	genArrayInit
                            699 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0920 21 68 11            700 	ld	hl,#_sprites_park
   0923 CD 00 00            701 	call	__initrleblock
   0926 EC 00               702 	.db	-20,0x00
   0928 09                  703 	.db	9
   0929 10 00 00 00 02 00   704 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   0931 20                  705 	.db	0x20
   0932 F7 00               706 	.db	-9,0x00
   0934 01                  707 	.db	1
   0935 10                  708 	.db	0x10
   0936 F7 00               709 	.db	-9,0x00
   0938 21                  710 	.db	33
   0939 94 08 00 00 42 00   711 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   0941 00 80 25 00 50 00   712 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   0949 00 00 90 00 00 00   713 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   0951 80 00 00 10 80 00   714 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   0959 5A                  715 	.db	0x5A
   095A FB 00               716 	.db	-5,0x00
   095C 05                  717 	.db	5
   095D 02 20 00 00 08      718 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0962 F9 00               719 	.db	-7,0x00
   0964 0B                  720 	.db	11
   0965 01 00 00 08 01 00   721 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   096D 00 00 09            722 	.db	0x00, 0x00, 0x09
   0970 F9 00               723 	.db	-7,0x00
   0972 7F                  724 	.db	127
   0973 10 08 00 00 40 04   725 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   097B 00 00 5A 00 7F 00   726 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   0983 80 00 80 00 80 00   727 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   098B 80 00 80 00 7E 00   728 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   0993 81 00 81 00 81 00   729 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   099B 81 00 7E 00 00 00   730 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09A3 50 00 20 00 00 00   731 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09AB 0A 00 04 00 FF 00   732 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09B3 AA 00 FF 00 FF 00   733 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09BB 55 00 FF 00 FE FF   734 	.db	0x55, 0x00, 0xFF, 0x00, 0xFE, 0xFF, 0xEF, 0xFF
        EF FF
   09C3 BB FF FF FF EF FF   735 	.db	0xBB, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFB, 0xFF
        FB FF
   09CB BF FF FF FF FF 00   736 	.db	0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF9, 0x00
        F9 00
   09D3 2F 00 FF 00 D8 00   737 	.db	0x2F, 0x00, 0xFF, 0x00, 0xD8, 0x00, 0xFF, 0x00
        FF 00
   09DB A5 00 FF 00 AD 00   738 	.db	0xA5, 0x00, 0xFF, 0x00, 0xAD, 0x00, 0x5C, 0x00
        5C 00
   09E3 DB 00 29 00 F6 00   739 	.db	0xDB, 0x00, 0x29, 0x00, 0xF6, 0x00, 0x49, 0x00
        49 00
   09EB BA 00 D6 00 00 00   740 	.db	0xBA, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x42
        42
   09F2 0A                  741 	.db	10
   09F3 00 24 00 18 00 18   742 	.db	0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00, 0x24
        00 24
   09FB 00 42               743 	.db	0x00, 0x42
   09FD FB 00               744 	.db	-5,0x00
   09FF 0B                  745 	.db	11
   0A00 42 00 24 00 18 00   746 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A08 24 00 42            747 	.db	0x24, 0x00, 0x42
   0A0B FB 00               748 	.db	-5,0x00
   0A0D 0B                  749 	.db	11
   0A0E 42 00 24 00 18 00   750 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A16 24 00 42            751 	.db	0x24, 0x00, 0x42
   0A19 FB 00               752 	.db	-5,0x00
   0A1B 0B                  753 	.db	11
   0A1C 42 00 24 00 18 00   754 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A24 24 00 42            755 	.db	0x24, 0x00, 0x42
   0A27 EB 00               756 	.db	-21,0x00
   0A29 4B                  757 	.db	75
   0A2A 42 00 24 00 18 00   758 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A32 24 00 42 00 00 00   759 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A3A 6E 10 FF 00 BF 40   760 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A42 76 08 00 3C 00 3C   761 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A4A 80 7F 80 7F 80 7F   762 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A52 80 7F 80 7F 00 FF   763 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A5A 7E 00 DF 20 FF 00   764 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A62 7E 00 18 24 00 3C   765 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A6A 42 00 24 00 18 00   766 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A72 24 00 42            767 	.db	0x24, 0x00, 0x42
   0A75 FB 00               768 	.db	-5,0x00
   0A77 0B                  769 	.db	11
   0A78 42 00 24 00 18 00   770 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A80 24 00 42            771 	.db	0x24, 0x00, 0x42
   0A83 FB 00               772 	.db	-5,0x00
   0A85 0B                  773 	.db	11
   0A86 42 00 24 00 18 00   774 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A8E 24 00 42            775 	.db	0x24, 0x00, 0x42
   0A91 FB 00               776 	.db	-5,0x00
   0A93 0B                  777 	.db	11
   0A94 42 00 24 00 18 00   778 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A9C 24 00 42            779 	.db	0x24, 0x00, 0x42
   0A9F FB 00               780 	.db	-5,0x00
   0AA1 0B                  781 	.db	11
   0AA2 42 00 24 00 18 00   782 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AAA 24 00 42            783 	.db	0x24, 0x00, 0x42
   0AAD FB 00               784 	.db	-5,0x00
   0AAF 0B                  785 	.db	11
   0AB0 42 00 24 00 18 00   786 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AB8 24 00 42            787 	.db	0x24, 0x00, 0x42
   0ABB FB 00               788 	.db	-5,0x00
   0ABD 0B                  789 	.db	11
   0ABE 42 00 24 00 18 00   790 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AC6 24 00 42            791 	.db	0x24, 0x00, 0x42
   0AC9 FB 00               792 	.db	-5,0x00
   0ACB 0B                  793 	.db	11
   0ACC 42 00 24 00 18 00   794 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD4 24 00 42            795 	.db	0x24, 0x00, 0x42
   0AD7 FB 00               796 	.db	-5,0x00
   0AD9 0B                  797 	.db	11
   0ADA 42 00 24 00 18 00   798 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AE2 24 00 42            799 	.db	0x24, 0x00, 0x42
   0AE5 EB 00               800 	.db	-21,0x00
   0AE7 0B                  801 	.db	11
   0AE8 42 00 24 00 18 00   802 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AF0 24 00 42            803 	.db	0x24, 0x00, 0x42
   0AF3 FB 00               804 	.db	-5,0x00
   0AF5 0B                  805 	.db	11
   0AF6 42 00 24 00 18 00   806 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AFE 24 00 42            807 	.db	0x24, 0x00, 0x42
   0B01 FB 00               808 	.db	-5,0x00
   0B03 0B                  809 	.db	11
   0B04 42 00 24 00 18 00   810 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B0C 24 00 42            811 	.db	0x24, 0x00, 0x42
   0B0F FB 00               812 	.db	-5,0x00
   0B11 0B                  813 	.db	11
   0B12 42 00 24 00 18 00   814 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B1A 24 00 42            815 	.db	0x24, 0x00, 0x42
   0B1D FB 00               816 	.db	-5,0x00
   0B1F 0B                  817 	.db	11
   0B20 42 00 24 00 18 00   818 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B28 24 00 42            819 	.db	0x24, 0x00, 0x42
   0B2B FB 00               820 	.db	-5,0x00
   0B2D 0B                  821 	.db	11
   0B2E 42 00 24 00 18 00   822 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B36 24 00 42            823 	.db	0x24, 0x00, 0x42
   0B39 FB 00               824 	.db	-5,0x00
   0B3B 7F                  825 	.db	127
   0B3C 42 00 24 00 18 00   826 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B44 24 00 42 00 00 00   827 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B4C C7 C7 BB BB BB BB   828 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B54 D7 D7 DB DB 42 C3   829 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B5C FF 00 C7 00 C7 00   830 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B64 EF 00 E7 00 FF 00   831 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B6C 76 00 FF 00 BF 00   832 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B74 7E 00 00 3C 00 3C   833 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B7C 42 7E 81 FF 81 FF   834 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B84 81 FF 81 FF 81 FF   835 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B8C F3 8D C1 BF C1 BF   836 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0B94 81 FF 81 FF 7E 7E   837 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0B9C 04 02 01 09 09 F9   838 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0BA4 06 06 00 00 00 00   839 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BAC AA 00 55 00 AA 00   840 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BB4 AA 00 55 00 AA 00   841 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BBB 6C                  842 	.db	108
   0BBC AA AA 55 55 AA AA   843 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BC4 AA AA 55 55 AA AA   844 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x00
        55 00
   0BCC 00 42 00 24 00 18   845 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0BD4 00 24 00 42 00 00   846 	.db	0x00, 0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x09
        00 09
   0BDC 00 00 09 00 09 0F   847 	.db	0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00, 0xCA
        00 CA
   0BE4 05 FF 00 3F 00 00   848 	.db	0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45, 0x00
        45 00
   0BEC 13 00 1E 0A 9E 00   849 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   0BF4 FF 00 FF 00 7E 00   850 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x94
        4A 94
   0BFC 00 9C 00 9E 0A FF   851 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   0C04 00 7C 00 4A 00 49   852 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x89
        00 89
   0C0C 89 4F 4F 4F 4A 8F   853 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   0C14 9F 7F 7F 7F 7F 45   854 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x00
        45 00
   0C1C 00 42 00 24 00 18   855 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0C24 00 24 00 42         856 	.db	0x00, 0x24, 0x00, 0x42
   0C28 FB 00               857 	.db	-5,0x00
   0C2A 0B                  858 	.db	11
   0C2B 42 00 24 00 18 00   859 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C33 24 00 42            860 	.db	0x24, 0x00, 0x42
   0C36 FB 00               861 	.db	-5,0x00
   0C38 0B                  862 	.db	11
   0C39 42 00 24 00 18 00   863 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C41 24 00 42            864 	.db	0x24, 0x00, 0x42
   0C44 FB 00               865 	.db	-5,0x00
   0C46 0B                  866 	.db	11
   0C47 42 00 24 00 18 00   867 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C4F 24 00 42            868 	.db	0x24, 0x00, 0x42
   0C52 FB 00               869 	.db	-5,0x00
   0C54 0B                  870 	.db	11
   0C55 42 00 24 00 18 00   871 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C5D 24 00 42            872 	.db	0x24, 0x00, 0x42
   0C60 FB 00               873 	.db	-5,0x00
   0C62 0B                  874 	.db	11
   0C63 42 00 24 00 18 00   875 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C6B 24 00 42            876 	.db	0x24, 0x00, 0x42
   0C6E FB 00               877 	.db	-5,0x00
   0C70 0B                  878 	.db	11
   0C71 42 00 24 00 18 00   879 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C79 24 00 42            880 	.db	0x24, 0x00, 0x42
   0C7C FB 00               881 	.db	-5,0x00
   0C7E 0B                  882 	.db	11
   0C7F 42 00 24 00 18 00   883 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C87 24 00 42            884 	.db	0x24, 0x00, 0x42
   0C8A FB 00               885 	.db	-5,0x00
   0C8C 0B                  886 	.db	11
   0C8D 42 00 24 00 18 00   887 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C95 24 00 42            888 	.db	0x24, 0x00, 0x42
   0C98 FB 00               889 	.db	-5,0x00
   0C9A 0B                  890 	.db	11
   0C9B 42 00 24 00 18 00   891 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA3 24 00 42            892 	.db	0x24, 0x00, 0x42
   0CA6 EB 00               893 	.db	-21,0x00
   0CA8 0B                  894 	.db	11
   0CA9 42 00 24 00 18 00   895 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CB1 24 00 42            896 	.db	0x24, 0x00, 0x42
   0CB4 FB 00               897 	.db	-5,0x00
   0CB6 0B                  898 	.db	11
   0CB7 42 00 24 00 18 00   899 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CBF 24 00 42            900 	.db	0x24, 0x00, 0x42
   0CC2 FB 00               901 	.db	-5,0x00
   0CC4 0B                  902 	.db	11
   0CC5 42 00 24 00 18 00   903 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CCD 24 00 42            904 	.db	0x24, 0x00, 0x42
   0CD0 FB 00               905 	.db	-5,0x00
   0CD2 0B                  906 	.db	11
   0CD3 42 00 24 00 18 00   907 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CDB 24 00 42            908 	.db	0x24, 0x00, 0x42
   0CDE FB 00               909 	.db	-5,0x00
   0CE0 0B                  910 	.db	11
   0CE1 42 00 24 00 18 00   911 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CE9 24 00 42            912 	.db	0x24, 0x00, 0x42
   0CEC FA 00               913 	.db	-6,0x00
   0CEE 7F                  914 	.db	127
   0CEF 38 00 44 00 44 00   915 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CF7 44 00 44 00 44 00   916 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0CFF 78 00 44 00 44 00   917 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0D07 44 00 44 00 78 00   918 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D0F 1C 00 20 00 40 00   919 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0D17 40 00 20 00 1C 00   920 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D1F 78 00 44 00 44 00   921 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D27 44 00 44 00 78 00   922 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D2F 7C 00 40 00 40 00   923 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D37 40 00 40 00 7C 00   924 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D3F 7C 00 40 00 40 00   925 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D47 40 00 40 00 40 00   926 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D4F 18 00 20 00 40 00   927 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D57 42 00 24 00 18 00   928 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D5F 44 00 44 00 44 00   929 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D67 44 00 44 00 44 00   930 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D6E 7F                  931 	.db	127
   0D6F 00 10 00 00 00 10   932 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D77 00 10 00 10 00 10   933 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D7F 00 3E 00 08 00 08   934 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D87 00 08 00 48 00 30   935 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D8F 00 44 00 48 00 50   936 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D97 00 50 00 48 00 44   937 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0D9F 00 40 00 40 00 40   938 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0DA7 00 40 00 40 00 78   939 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0DAF 00 44 00 6C 00 54   940 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0DB7 00 44 00 44 00 44   941 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DBF 00 44 00 64 00 64   942 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DC7 00 54 00 4C 00 4C   943 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DCF 00 38 00 44 00 44   944 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DD7 00 44 00 44 00 38   945 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DDF 00 78 00 44 00 44   946 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DE7 00 40 00 40 00 40   947 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DEE 7F                  948 	.db	127
   0DEF 00 00 38 00 44 00   949 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DF7 44 00 54 00 38 00   950 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0DFF 00 00 78 00 44 00   951 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E07 78 00 50 00 48 00   952 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0E0F 00 00 38 00 40 00   953 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0E17 38 00 04 00 04 00   954 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E1F 00 00 7C 00 10 00   955 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E27 10 00 10 00 10 00   956 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E2F 00 00 44 00 44 00   957 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E37 44 00 44 00 44 00   958 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E3F 00 00 41 00 41 00   959 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E47 49 00 2A 00 2A 00   960 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E4F 00 00 44 00 44 00   961 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E57 10 00 28 00 44 00   962 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E5F 00 00 44 00 28 00   963 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E67 10 00 10 00 10 00   964 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E6E 7F                  965 	.db	127
   0E6F 00 00 00 7C 00 04   966 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E77 00 10 00 20 00 40   967 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E7F 00 08 00 18 00 28   968 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E87 00 08 00 08 00 08   969 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E8F 00 00 00 38 00 44   970 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E97 00 08 00 10 00 20   971 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0E9F 00 00 00 70 00 08   972 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0EA7 00 30 00 08 00 08   973 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0EAF 00 00 00 10 00 08   974 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0EB7 00 7E 00 04 00 08   975 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EBF 00 00 00 44 00 44   976 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0EC7 00 28 00 10 00 10   977 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0ECF 3C 3C 42 7E 81 FF   978 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0ED7 A1 FF 81 FF 81 FF   979 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EDF 3C 3C 42 7E 81 FF   980 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EE7 A1 FF 81 FF 81 FF   981 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0EEE 7F                  982 	.db	127
   0EEF FF 3C 3C 42 7E 81   983 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EF7 FF A1 FF 81 FF 81   984 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0EFF FF 3C 3C 42 7E 81   985 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F07 FF A1 FF 81 FF 81   986 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F0F FF 3C 3C 42 7E 81   987 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F17 FF A1 FF 81 FF 81   988 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F1F FF 3C 3C 42 7E 81   989 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F27 FF A1 FF 81 FF 81   990 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F2F FF 3C 3C 42 7E 81   991 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F37 FF A1 FF 81 FF 81   992 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F3F FF 3C 3C 42 7E 81   993 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F47 FF A1 FF 81 FF 81   994 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F4F FF 3C 3C 42 7E 81   995 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F57 FF A1 FF 81 FF 81   996 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F5F FF 3C 3C 42 7E 81   997 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F67 FF A1 FF 81 FF 81   998 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F6E 7F                  999 	.db	127
   0F6F 81 FF 3C 3C 42 7E  1000 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F77 81 FF A1 FF 81 FF  1001 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F7F 81 FF 3C 3C 42 7E  1002 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F87 81 FF A1 FF 81 FF  1003 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F8F 81 FF 3C 3C 42 7E  1004 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F97 81 FF A1 FF 81 FF  1005 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F9F 81 FF 3C 3C 42 7E  1006 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FA7 81 FF A1 FF 81 FF  1007 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FAF 81 FF 3C 3C 42 7E  1008 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FB7 81 FF A1 FF 81 FF  1009 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FBF 81 FF 3C 3C 42 7E  1010 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FC7 81 FF A1 FF 81 FF  1011 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FCF 81 FF 3C 3C 42 7E  1012 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FD7 81 FF A1 FF 81 FF  1013 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FDF 81 FF 3C 3C 42 7E  1014 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FE7 81 FF A1 FF 81 FF  1015 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FEE 33                 1016 	.db	51
   0FEF FF 81 FF 3C 3C 42  1017 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FF7 FF 81 FF A1 FF 81  1018 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0FFF FF 81 FF 3C 3C 42  1019 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1007 FF 81 FF A1 FF 81  1020 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   100F FF 81 FF 3C 3C 42  1021 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   1017 FF 81 FF A1 FF 81  1022 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   101F FF 81 FF           1023 	.db	0xFF, 0x81, 0xFF
   1022 00                 1024 	.db	0
                           1025 ;	game.c 44
                           1026 ;	game.c 1096
                           1027 ;	genArrayInit
                           1028 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1023 21 F8 18           1029 	ld	hl,#_spritePalette
   1026 CD 00 00           1030 	call	__initrleblock
   1029 08                 1031 	.db	8
   102A DC 6B D2 3A 87 29  1032 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   1032 00                 1033 	.db	0
                           1034 ;--------------------------------------------------------
                           1035 ; Home
                           1036 ;--------------------------------------------------------
                           1037 	.area _HOME
                           1038 	.area _CODE
                           1039 ;--------------------------------------------------------
                           1040 ; code
                           1041 ;--------------------------------------------------------
                           1042 	.area _CODE
                           1043 ;	game.c 70
                           1044 ;	genLabel
                           1045 ;	genFunction
                           1046 ;	---------------------------------
                           1047 ; Function performantDelay
                           1048 ; ---------------------------------
   0000                    1049 ___performantDelay_start:
   0000                    1050 _performantDelay:
                           1051 	
                           1052 ;	game.c 72
                           1053 ;	genAssign
   0000 0E 00              1054 	ld	c,#0x00
                           1055 ;	genLabel
   0002                    1056 00101$:
                           1057 ;	genCmpEq
                           1058 ;	AOP_STK for 
                           1059 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1060 	lda	hl,2(sp)
   0004 7E                 1061 	ld	a,(hl)
   0005 B9                 1062 	cp	c
   0006 20 03              1063 	jr	nz,00109$
   0008 C3 15 00           1064 	jp	00105$
   000B                    1065 00109$:
                           1066 ;	game.c 73
                           1067 ;	genCall
                           1068 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1069 	push	bc
   000C CD 00 00           1070 	call	_wait_vbl_done
   000F E1                 1071 	pop	hl
   0010 4D                 1072 	ld	c,l
                           1073 ;	game.c 72
                           1074 ;	genPlus
                           1075 ;	genPlusIncr
                           1076 ; Removed redundent load
   0011 0C                 1077 	inc	c
                           1078 ;	genGoto
   0012 C3 02 00           1079 	jp	00101$
                           1080 ;	genLabel
   0015                    1081 00105$:
                           1082 ;	genEndFunction
                           1083 	
   0015 C9                 1084 	ret
   0016                    1085 ___performantDelay_end:
                           1086 ;	game.c 107
                           1087 ;	genLabel
                           1088 ;	genFunction
                           1089 ;	---------------------------------
                           1090 ; Function timers
                           1091 ; ---------------------------------
   0016                    1092 ___timers_start:
   0016                    1093 _timers:
                           1094 	
                           1095 ;	game.c 109
                           1096 ;	genCmpEq
                           1097 ;	AOP_HL for _input_timer
                           1098 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1099 	ld	hl,#_input_timer
   0019 7E                 1100 	ld	a,(hl)
   001A B7                 1101 	or	a,a
   001B CA 22 00           1102 	jp	z,00102$
   001E                    1103 00106$:
                           1104 ;	game.c 110
                           1105 ;	genMinus
                           1106 ;	AOP_HL for _input_timer
   001E 21 03 19           1107 	ld	hl,#_input_timer
   0021 35                 1108 	dec	(hl)
                           1109 ;	genLabel
   0022                    1110 00102$:
                           1111 ;	game.c 112
                           1112 ;	genPlus
                           1113 ;	AOP_HL for _timer
                           1114 ;	genPlusIncr
   0022 21 01 19           1115 	ld	hl,#_timer
   0025 34                 1116 	inc	(hl)
                           1117 ;	genLabel
   0026                    1118 00103$:
                           1119 ;	genEndFunction
                           1120 	
   0026 C9                 1121 	ret
   0027                    1122 ___timers_end:
                           1123 ;	game.c 116
                           1124 ;	genLabel
                           1125 ;	genFunction
                           1126 ;	---------------------------------
                           1127 ; Function main
                           1128 ; ---------------------------------
   0027                    1129 ___main_start:
   0027                    1130 _main:
                           1131 	
                           1132 ;	game.c 118
                           1133 ;	genCall
                           1134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1135 	call	_init
                           1136 ;	game.c 119
                           1137 ;	genCall
                           1138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1139 	call	_map_init
                           1140 ;	game.c 121
                           1141 ;	genLabel
   002D                    1142 00101$:
                           1143 ;	genIfx
                           1144 ;	AOP_HL for _running
   002D AF                 1145 	xor	a,a
   002E 21 00 19           1146 	ld	hl,#_running
   0031 B6                 1147 	or	a,(hl)
   0032 CA 47 00           1148 	jp	z,00103$
                           1149 ;	game.c 123
                           1150 ;	genCall
                           1151 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1152 	call	_timers
                           1153 ;	game.c 124
                           1154 ;	genCall
                           1155 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1156 	call	_map_loop
                           1157 ;	game.c 125
                           1158 ;	genIpush
                           1159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1160 	ld	a,#0x02
   003D F5                 1161 	push	af
   003E 33                 1162 	inc	sp
                           1163 ;	genCall
   003F CD 00 00           1164 	call	_performantDelay
   0042 E8 01              1165 	lda	sp,1(sp)
                           1166 ;	genGoto
   0044 C3 2D 00           1167 	jp	00101$
                           1168 ;	genLabel
   0047                    1169 00103$:
                           1170 ;	game.c 129
                           1171 ;	genIpush
                           1172 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1173 	ld	hl,#__str_0
   004A E5                 1174 	push	hl
                           1175 ;	genCall
   004B CD 00 00           1176 	call	_printf
   004E E8 02              1177 	lda	sp,2(sp)
                           1178 ;	game.c 130
                           1179 ;	genLabel
   0050                    1180 00105$:
                           1181 ;	genGoto
   0050 C3 50 00           1182 	jp	00105$
                           1183 ;	genLabel
   0053                    1184 00107$:
                           1185 ;	genEndFunction
                           1186 	
   0053 C9                 1187 	ret
   0054                    1188 ___main_end:
   0054                    1189 __str_0:
   0054 54 68 65 20 65 6E  1190 	.ascii "The end"
        64
   005B 0A                 1191 	.db 0x0A
   005C 00                 1192 	.db 0x00
                           1193 ;	game.c 135
                           1194 ;	genLabel
                           1195 ;	genFunction
                           1196 ;	---------------------------------
                           1197 ; Function init
                           1198 ; ---------------------------------
   005D                    1199 ___init_start:
   005D                    1200 _init:
   005D E8 FD              1201 	lda	sp,-3(sp)
                           1202 ;	game.c 136
                           1203 ;	genAssign
                           1204 ;	AOP_HL for _current_map
   005F 21 04 19           1205 	ld	hl,#_current_map
   0062 36 C8              1206 	ld	(hl),#0xC8
                           1207 ;	game.c 137
                           1208 ;	genAssign
                           1209 ;	AOP_HL for _characters_available
   0064 21 02 19           1210 	ld	hl,#_characters_available
   0067 36 02              1211 	ld	(hl),#0x02
                           1212 ;	game.c 139
                           1213 ;	genCall
                           1214 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1215 	call	_copy_map
                           1216 ;	game.c 140
                           1217 ;	genIpush
                           1218 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1219 	ld	hl,#_sprites_park
   006F E5                 1220 	push	hl
                           1221 ;	genIpush
   0070 21 00 78           1222 	ld	hl,#0x7800
   0073 E5                 1223 	push	hl
                           1224 ;	genCall
   0074 CD 00 00           1225 	call	_set_bkg_data
   0077 E8 04              1226 	lda	sp,4(sp)
                           1227 ;	game.c 141
                           1228 ;	genIpush
                           1229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1230 	ld	hl,#_map
   007C E5                 1231 	push	hl
                           1232 ;	genIpush
   007D 21 14 12           1233 	ld	hl,#0x1214
   0080 E5                 1234 	push	hl
                           1235 ;	genIpush
   0081 21 00 00           1236 	ld	hl,#0x0000
   0084 E5                 1237 	push	hl
                           1238 ;	genCall
   0085 CD 00 00           1239 	call	_set_bkg_tiles
   0088 E8 06              1240 	lda	sp,6(sp)
                           1241 ;	game.c 143
                           1242 ;	genIpush
                           1243 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1244 	ld	hl,#_Characters
   008D E5                 1245 	push	hl
                           1246 ;	genIpush
   008E 21 00 1E           1247 	ld	hl,#0x1E00
   0091 E5                 1248 	push	hl
                           1249 ;	genCall
   0092 CD 00 00           1250 	call	_set_sprite_data
   0095 E8 04              1251 	lda	sp,4(sp)
                           1252 ;	game.c 144
                           1253 ;	genIpush
                           1254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1255 	ld	hl,#_spritePalette
   009A E5                 1256 	push	hl
                           1257 ;	genIpush
   009B 21 00 04           1258 	ld	hl,#0x0400
   009E E5                 1259 	push	hl
                           1260 ;	genCall
   009F CD 00 00           1261 	call	_set_sprite_palette
   00A2 E8 04              1262 	lda	sp,4(sp)
                           1263 ;	game.c 148
                           1264 ;	genIpush
                           1265 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1266 	ld	hl,#_spritePalette
   00A7 E5                 1267 	push	hl
                           1268 ;	genIpush
   00A8 21 00 03           1269 	ld	hl,#0x0300
   00AB E5                 1270 	push	hl
                           1271 ;	genCall
   00AC CD 00 00           1272 	call	_set_bkg_palette
   00AF E8 04              1273 	lda	sp,4(sp)
                           1274 ;	game.c 149
                           1275 ;	genIpush
                           1276 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1277 	ld	hl,#0x0000
   00B4 E5                 1278 	push	hl
                           1279 ;	genCall
   00B5 CD 00 00           1280 	call	_set_sprite_prop
   00B8 E8 02              1281 	lda	sp,2(sp)
                           1282 ;	game.c 154
                           1283 ;	genAssign
   00BA 01 47 FF           1284 	ld	bc,#0xFF47
                           1285 ;	genAssign (pointer)
   00BD 3E E4              1286 	ld	a,#0xE4
   00BF 02                 1287 	ld	(bc),a
                           1288 ;	game.c 156
                           1289 ;	genAssign
   00C0 01 40 FF           1290 	ld	bc,#0xFF40
                           1291 ;	genAssign
                           1292 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1293 	lda	hl,1(sp)
   00C5 36 40              1294 	ld	(hl),#0x40
   00C7 23                 1295 	inc	hl
   00C8 36 FF              1296 	ld	(hl),#0xFF
                           1297 ;	genPointerGet
                           1298 ;	AOP_STK for _init_sloc0_1_0
                           1299 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1300 	dec	hl
   00CB 5E                 1301 	ld	e,(hl)
   00CC 23                 1302 	inc	hl
   00CD 56                 1303 	ld	d,(hl)
   00CE 1A                 1304 	ld	a,(de)
   00CF 2B                 1305 	dec	hl
   00D0 2B                 1306 	dec	hl
                           1307 ;	genOr
                           1308 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1309 	ld      (hl),a
   00D2 7F                 1310 	ld      a,a
   00D3 F6 80              1311 	or	a,#0x80
                           1312 ;	genAssign (pointer)
   00D5 02                 1313 	ld	(bc),a
                           1314 ;	game.c 158
                           1315 ;	genAssign
   00D6 01 40 FF           1316 	ld	bc,#0xFF40
                           1317 ;	genAssign
                           1318 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1319 	inc	hl
   00DA 36 40              1320 	ld	(hl),#0x40
   00DC 23                 1321 	inc	hl
   00DD 36 FF              1322 	ld	(hl),#0xFF
                           1323 ;	genPointerGet
                           1324 ;	AOP_STK for _init_sloc0_1_0
                           1325 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1326 	dec	hl
   00E0 5E                 1327 	ld	e,(hl)
   00E1 23                 1328 	inc	hl
   00E2 56                 1329 	ld	d,(hl)
   00E3 1A                 1330 	ld	a,(de)
   00E4 2B                 1331 	dec	hl
   00E5 2B                 1332 	dec	hl
                           1333 ;	genOr
                           1334 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1335 	ld      (hl),a
   00E7 7F                 1336 	ld      a,a
   00E8 F6 01              1337 	or	a,#0x01
                           1338 ;	genAssign (pointer)
   00EA 02                 1339 	ld	(bc),a
                           1340 ;	game.c 160
                           1341 ;	genAssign
   00EB 01 40 FF           1342 	ld	bc,#0xFF40
                           1343 ;	genAssign
                           1344 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1345 	inc	hl
   00EF 36 40              1346 	ld	(hl),#0x40
   00F1 23                 1347 	inc	hl
   00F2 36 FF              1348 	ld	(hl),#0xFF
                           1349 ;	genPointerGet
                           1350 ;	AOP_STK for _init_sloc0_1_0
                           1351 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1352 	dec	hl
   00F5 5E                 1353 	ld	e,(hl)
   00F6 23                 1354 	inc	hl
   00F7 56                 1355 	ld	d,(hl)
   00F8 1A                 1356 	ld	a,(de)
   00F9 2B                 1357 	dec	hl
   00FA 2B                 1358 	dec	hl
                           1359 ;	genOr
                           1360 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1361 	ld      (hl),a
   00FC 7F                 1362 	ld      a,a
   00FD F6 02              1363 	or	a,#0x02
                           1364 ;	genAssign (pointer)
   00FF 02                 1365 	ld	(bc),a
                           1366 ;	game.c 162
                           1367 ;	genAssign
                           1368 ;	AOP_HL for _input_timer
   0100 21 03 19           1369 	ld	hl,#_input_timer
   0103 36 00              1370 	ld	(hl),#0x00
                           1371 ;	game.c 163
                           1372 ;	genAssign
                           1373 ;	AOP_HL for _running
   0105 21 00 19           1374 	ld	hl,#_running
   0108 36 01              1375 	ld	(hl),#0x01
                           1376 ;	game.c 164
                           1377 ;	genAssign
                           1378 ;	AOP_HL for _timer
   010A 21 01 19           1379 	ld	hl,#_timer
   010D 36 01              1380 	ld	(hl),#0x01
                           1381 ;	game.c 165
                           1382 ;	genAddrOf
                           1383 ;	AOP_HL for _player
   010F 11 6D 1A           1384 	ld	de,#_bunny
   0112 21 B3 1A           1385 	ld	hl,#_player
   0115 73                 1386 	ld	(hl),e
   0116 23                 1387 	inc	hl
   0117 72                 1388 	ld	(hl),d
                           1389 ;	genLabel
   0118                    1390 00101$:
                           1391 ;	genEndFunction
   0118 E8 03              1392 	lda	sp,3(sp)
   011A C9                 1393 	ret
   011B                    1394 ___init_end:
                           1395 ;	game.c 169
                           1396 ;	genLabel
                           1397 ;	genFunction
                           1398 ;	---------------------------------
                           1399 ; Function map_water
                           1400 ; ---------------------------------
   011B                    1401 ___map_water_start:
   011B                    1402 _map_water:
   011B E8 DC              1403 	lda	sp,-36(sp)
                           1404 ;	game.c 170
                           1405 ;	genAddrOf
   011D F8 14              1406 	lda	hl,20(sp)
   011F 4D                 1407 	ld	c,l
   0120 44                 1408 	ld	b,h
                           1409 ;	genAssign
                           1410 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1411 	lda	hl,2(sp)
   0123 71                 1412 	ld	(hl),c
   0124 23                 1413 	inc	hl
   0125 70                 1414 	ld	(hl),b
                           1415 ;	genArrayInit
                           1416 ;	AOP_STK for _map_water_sloc0_1_0
                           1417 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1418 	push	bc
   0127 2B                 1419 	dec	hl
   0128 2A                 1420 	ld	a,(hl+)
   0129 66                 1421 	ld	h,(hl)
   012A 6F                 1422 	ld	l,a
   012B CD 00 00           1423 	call	__initrleblock
   012E 10                 1424 	.db	16
   012F FF 00 DD 00 AA 00  1425 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1426 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1427 	.db	0
   0140 C1                 1428 	pop	bc
                           1429 ;	game.c 176
                           1430 ;	genAddrOf
                           1431 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1432 	lda	hl,4(sp)
   0143 7D                 1433 	ld	a,l
   0144 54                 1434 	ld	d,h
   0145 F8 02              1435 	lda	hl,2(sp)
   0147 22                 1436 	ld	(hl+),a
   0148 72                 1437 	ld	(hl),d
                           1438 ;	genAssign
                           1439 ;	AOP_STK for _map_water_sloc0_1_0
                           1440 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1441 	dec	hl
   014A 2A                 1442 	ld	a,(hl+)
   014B 5E                 1443 	ld	e,(hl)
   014C F8 00              1444 	lda	hl,0(sp)
   014E 22                 1445 	ld	(hl+),a
   014F 73                 1446 	ld	(hl),e
                           1447 ;	genArrayInit
                           1448 ;	AOP_STK for _map_water_sloc1_1_0
                           1449 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1450 	push	bc
   0151 2B                 1451 	dec	hl
   0152 2A                 1452 	ld	a,(hl+)
   0153 66                 1453 	ld	h,(hl)
   0154 6F                 1454 	ld	l,a
   0155 CD 00 00           1455 	call	__initrleblock
   0158 10                 1456 	.db	16
   0159 FF 00 BB 00 55 00  1457 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1458 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1459 	.db	0
   016A C1                 1460 	pop	bc
                           1461 ;	game.c 182
                           1462 ;	genIpush
                           1463 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1464 	push	bc
   016C 3E 20              1465 	ld	a,#0x20
   016E F5                 1466 	push	af
   016F 33                 1467 	inc	sp
                           1468 ;	genIpush
                           1469 ;	AOP_HL for _timer
   0170 21 01 19           1470 	ld	hl,#_timer
   0173 7E                 1471 	ld	a,(hl)
   0174 F5                 1472 	push	af
   0175 33                 1473 	inc	sp
                           1474 ;	genCall
   0176 CD 00 00           1475 	call	__moduchar_rrx_s
                           1476 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1477 	lda	hl,4(sp)
   017B 73                 1478 	ld	(hl),e
   017C E8 02              1479 	lda	sp,2(sp)
   017E C1                 1480 	pop	bc
                           1481 ;	genCmpEq
                           1482 ;	AOP_STK for _map_water_sloc1_1_0
                           1483 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1484 	lda	hl,0(sp)
   0181 7E                 1485 	ld	a,(hl)
   0182 B7                 1486 	or	a,a
   0183 C2 C7 01           1487 	jp	nz,00106$
   0186 18 03              1488 	jr	00111$
   0188                    1489 00110$:
   0188 C3 C7 01           1490 	jp	00106$
   018B                    1491 00111$:
                           1492 ;	game.c 183
                           1493 ;	genIpush
                           1494 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1495 	push	bc
   018C 3E 40              1496 	ld	a,#0x40
   018E F5                 1497 	push	af
   018F 33                 1498 	inc	sp
                           1499 ;	genIpush
                           1500 ;	AOP_HL for _timer
   0190 21 01 19           1501 	ld	hl,#_timer
   0193 7E                 1502 	ld	a,(hl)
   0194 F5                 1503 	push	af
   0195 33                 1504 	inc	sp
                           1505 ;	genCall
   0196 CD 00 00           1506 	call	__moduchar_rrx_s
                           1507 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1508 	lda	hl,4(sp)
   019B 73                 1509 	ld	(hl),e
   019C E8 02              1510 	lda	sp,2(sp)
   019E C1                 1511 	pop	bc
                           1512 ;	genCmpEq
                           1513 ;	AOP_STK for _map_water_sloc1_1_0
                           1514 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1515 	lda	hl,0(sp)
   01A1 7E                 1516 	ld	a,(hl)
   01A2 B7                 1517 	or	a,a
   01A3 C2 B8 01           1518 	jp	nz,00102$
   01A6 18 03              1519 	jr	00113$
   01A8                    1520 00112$:
   01A8 C3 B8 01           1521 	jp	00102$
   01AB                    1522 00113$:
                           1523 ;	game.c 184
                           1524 ;	genIpush
                           1525 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1526 	push	bc
                           1527 ;	genIpush
   01AC 21 0B 01           1528 	ld	hl,#0x010B
   01AF E5                 1529 	push	hl
                           1530 ;	genCall
   01B0 CD 00 00           1531 	call	_set_bkg_data
   01B3 E8 04              1532 	lda	sp,4(sp)
                           1533 ;	genGoto
   01B5 C3 C7 01           1534 	jp	00106$
                           1535 ;	genLabel
   01B8                    1536 00102$:
                           1537 ;	game.c 188
                           1538 ;	genIpush
                           1539 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1540 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1541 	lda	hl,2(sp)
   01BA 2A                 1542 	ld	a,(hl+)
   01BB 66                 1543 	ld	h,(hl)
   01BC 6F                 1544 	ld	l,a
   01BD E5                 1545 	push	hl
                           1546 ;	genIpush
   01BE 21 0B 01           1547 	ld	hl,#0x010B
   01C1 E5                 1548 	push	hl
                           1549 ;	genCall
   01C2 CD 00 00           1550 	call	_set_bkg_data
   01C5 E8 04              1551 	lda	sp,4(sp)
                           1552 ;	genLabel
   01C7                    1553 00106$:
                           1554 ;	genEndFunction
   01C7 E8 24              1555 	lda	sp,36(sp)
   01C9 C9                 1556 	ret
   01CA                    1557 ___map_water_end:
                           1558 ;	game.c 233
                           1559 ;	genLabel
                           1560 ;	genFunction
                           1561 ;	---------------------------------
                           1562 ; Function change_char
                           1563 ; ---------------------------------
   01CA                    1564 ___change_char_start:
   01CA                    1565 _change_char:
                           1566 	
                           1567 ;	game.c 235
                           1568 ;	genCmpEq
                           1569 ;	AOP_HL for _characters_available
                           1570 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1571 	ld	hl,#_characters_available
   01CD 7E                 1572 	ld	a,(hl)
   01CE FE 01              1573 	cp	a,#0x01
   01D0 C2 DE 01           1574 	jp	nz,00102$
   01D3 18 03              1575 	jr	00135$
   01D5                    1576 00134$:
   01D5 C3 DE 01           1577 	jp	00102$
   01D8                    1578 00135$:
                           1579 ;	game.c 236
                           1580 ;	genRet
   01D8 11 00 00           1581 	ld	de,#0x0000
   01DB C3 EE 02           1582 	jp	00121$
                           1583 ;	genLabel
   01DE                    1584 00102$:
                           1585 ;	game.c 239
                           1586 ;	genAssign
                           1587 ;	AOP_HL for _player
   01DE 21 B3 1A           1588 	ld	hl,#_player
   01E1 4E                 1589 	ld	c,(hl)
   01E2 23                 1590 	inc	hl
   01E3 46                 1591 	ld	b,(hl)
                           1592 ;	genPlus
                           1593 ;	genPlusIncr
   01E4 21 08 00           1594 	ld	hl,#0x0008
   01E7 09                 1595 	add	hl,bc
                           1596 ;	genAssign (pointer)
   01E8 36 00              1597 	ld	(hl),#0x00
                           1598 ;	game.c 241
                           1599 ;	genCmpEq
                           1600 ;	AOP_HL for _characters_available
                           1601 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1602 	ld	hl,#_characters_available
   01ED 7E                 1603 	ld	a,(hl)
   01EE FE 02              1604 	cp	a,#0x02
   01F0 C2 2B 02           1605 	jp	nz,00107$
   01F3 18 03              1606 	jr	00137$
   01F5                    1607 00136$:
   01F5 C3 2B 02           1608 	jp	00107$
   01F8                    1609 00137$:
                           1610 ;	game.c 242
                           1611 ;	genAssign
                           1612 ;	AOP_HL for _player
   01F8 21 B3 1A           1613 	ld	hl,#_player
   01FB 4E                 1614 	ld	c,(hl)
   01FC 23                 1615 	inc	hl
   01FD 46                 1616 	ld	b,(hl)
                           1617 ;	genPlus
                           1618 ;	genPlusIncr
                           1619 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1620 	ld	a,c
   01FF C6 0B              1621 	add	a,#0x0B
   0201 4F                 1622 	ld	c,a
   0202 78                 1623 	ld	a,b
   0203 CE 00              1624 	adc	a,#0x00
   0205 47                 1625 	ld	b,a
                           1626 ;	genPointerGet
   0206 0A                 1627 	ld	a,(bc)
                           1628 ;	genCmpEq
                           1629 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1630 	ld	c,a
   0208 FE 01              1631 	cp	a,#0x01
   020A CA 16 02           1632 	jp	z,00103$
   020D                    1633 00138$:
                           1634 ;	genCmpEq
                           1635 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1636 	ld	a,c
   020E FE 02              1637 	cp	a,#0x02
   0210 CA 22 02           1638 	jp	z,00104$
   0213                    1639 00139$:
                           1640 ;	genGoto
   0213 C3 2B 02           1641 	jp	00107$
                           1642 ;	game.c 244
                           1643 ;	genLabel
   0216                    1644 00103$:
                           1645 ;	genAddrOf
                           1646 ;	AOP_HL for _player
   0216 11 7B 1A           1647 	ld	de,#_dog1
   0219 21 B3 1A           1648 	ld	hl,#_player
   021C 73                 1649 	ld	(hl),e
   021D 23                 1650 	inc	hl
   021E 72                 1651 	ld	(hl),d
                           1652 ;	game.c 245
                           1653 ;	genGoto
   021F C3 2B 02           1654 	jp	00107$
                           1655 ;	game.c 247
                           1656 ;	genLabel
   0222                    1657 00104$:
                           1658 ;	genAddrOf
                           1659 ;	AOP_HL for _player
   0222 11 6D 1A           1660 	ld	de,#_bunny
   0225 21 B3 1A           1661 	ld	hl,#_player
   0228 73                 1662 	ld	(hl),e
   0229 23                 1663 	inc	hl
   022A 72                 1664 	ld	(hl),d
                           1665 ;	game.c 249
                           1666 ;	genLabel
   022B                    1667 00107$:
                           1668 ;	game.c 251
                           1669 ;	genCmpEq
                           1670 ;	AOP_HL for _characters_available
                           1671 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1672 	ld	hl,#_characters_available
   022E 7E                 1673 	ld	a,(hl)
   022F FE 03              1674 	cp	a,#0x03
   0231 C2 7E 02           1675 	jp	nz,00113$
   0234 18 03              1676 	jr	00141$
   0236                    1677 00140$:
   0236 C3 7E 02           1678 	jp	00113$
   0239                    1679 00141$:
                           1680 ;	game.c 252
                           1681 ;	genAssign
                           1682 ;	AOP_HL for _player
   0239 21 B3 1A           1683 	ld	hl,#_player
   023C 4E                 1684 	ld	c,(hl)
   023D 23                 1685 	inc	hl
   023E 46                 1686 	ld	b,(hl)
                           1687 ;	genPlus
                           1688 ;	genPlusIncr
                           1689 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1690 	ld	a,c
   0240 C6 0B              1691 	add	a,#0x0B
   0242 4F                 1692 	ld	c,a
   0243 78                 1693 	ld	a,b
   0244 CE 00              1694 	adc	a,#0x00
   0246 47                 1695 	ld	b,a
                           1696 ;	genPointerGet
   0247 0A                 1697 	ld	a,(bc)
                           1698 ;	genCmpEq
                           1699 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1700 	ld	c,a
   0249 FE 01              1701 	cp	a,#0x01
   024B CA 5D 02           1702 	jp	z,00108$
   024E                    1703 00142$:
                           1704 ;	genCmpEq
                           1705 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1706 	ld	a,c
   024F FE 02              1707 	cp	a,#0x02
   0251 CA 69 02           1708 	jp	z,00109$
   0254                    1709 00143$:
                           1710 ;	genCmpEq
                           1711 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1712 	ld	a,c
   0255 FE 03              1713 	cp	a,#0x03
   0257 CA 75 02           1714 	jp	z,00110$
   025A                    1715 00144$:
                           1716 ;	genGoto
   025A C3 7E 02           1717 	jp	00113$
                           1718 ;	game.c 254
                           1719 ;	genLabel
   025D                    1720 00108$:
                           1721 ;	genAddrOf
                           1722 ;	AOP_HL for _player
   025D 11 7B 1A           1723 	ld	de,#_dog1
   0260 21 B3 1A           1724 	ld	hl,#_player
   0263 73                 1725 	ld	(hl),e
   0264 23                 1726 	inc	hl
   0265 72                 1727 	ld	(hl),d
                           1728 ;	game.c 255
                           1729 ;	genGoto
   0266 C3 7E 02           1730 	jp	00113$
                           1731 ;	game.c 257
                           1732 ;	genLabel
   0269                    1733 00109$:
                           1734 ;	genAddrOf
                           1735 ;	AOP_HL for _player
   0269 11 89 1A           1736 	ld	de,#_dog2
   026C 21 B3 1A           1737 	ld	hl,#_player
   026F 73                 1738 	ld	(hl),e
   0270 23                 1739 	inc	hl
   0271 72                 1740 	ld	(hl),d
                           1741 ;	game.c 258
                           1742 ;	genGoto
   0272 C3 7E 02           1743 	jp	00113$
                           1744 ;	game.c 260
                           1745 ;	genLabel
   0275                    1746 00110$:
                           1747 ;	genAddrOf
                           1748 ;	AOP_HL for _player
   0275 11 6D 1A           1749 	ld	de,#_bunny
   0278 21 B3 1A           1750 	ld	hl,#_player
   027B 73                 1751 	ld	(hl),e
   027C 23                 1752 	inc	hl
   027D 72                 1753 	ld	(hl),d
                           1754 ;	game.c 262
                           1755 ;	genLabel
   027E                    1756 00113$:
                           1757 ;	game.c 264
                           1758 ;	genCmpEq
                           1759 ;	AOP_HL for _characters_available
                           1760 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1761 	ld	hl,#_characters_available
   0281 7E                 1762 	ld	a,(hl)
   0282 FE 04              1763 	cp	a,#0x04
   0284 C2 EB 02           1764 	jp	nz,00120$
   0287 18 03              1765 	jr	00146$
   0289                    1766 00145$:
   0289 C3 EB 02           1767 	jp	00120$
   028C                    1768 00146$:
                           1769 ;	game.c 265
                           1770 ;	genAssign
                           1771 ;	AOP_HL for _player
   028C 21 B3 1A           1772 	ld	hl,#_player
   028F 4E                 1773 	ld	c,(hl)
   0290 23                 1774 	inc	hl
   0291 46                 1775 	ld	b,(hl)
                           1776 ;	genPlus
                           1777 ;	genPlusIncr
                           1778 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1779 	ld	a,c
   0293 C6 0B              1780 	add	a,#0x0B
   0295 4F                 1781 	ld	c,a
   0296 78                 1782 	ld	a,b
   0297 CE 00              1783 	adc	a,#0x00
   0299 47                 1784 	ld	b,a
                           1785 ;	genPointerGet
   029A 0A                 1786 	ld	a,(bc)
                           1787 ;	genCmpLt
   029B 4F                 1788 	ld	c,a
   029C FE 01              1789 	cp	#0x01
   029E DA EB 02           1790 	jp	c,00120$
                           1791 ;	genCmpGt
   02A1 3E 04              1792 	ld	a,#0x04
   02A3 91                 1793 	sub	a,c
   02A4 DA EB 02           1794 	jp	c,00120$
                           1795 ;	genMinus
   02A7 0D                 1796 	dec	c
                           1797 ;	genJumpTab
   02A8 59                 1798 	ld	e,c
   02A9 16 00              1799 	ld	d,#0x00
   02AB 21 B2 02           1800 	ld	hl,#00147$
   02AE 19                 1801 	add	hl,de
   02AF 19                 1802 	add	hl,de
   02B0 19                 1803 	add	hl,de
   02B1 E9                 1804 	jp	(hl)
   02B2                    1805 00147$:
   02B2 C3 BE 02           1806 	jp	00114$
   02B5 C3 CA 02           1807 	jp	00115$
   02B8 C3 D6 02           1808 	jp	00116$
   02BB C3 E2 02           1809 	jp	00117$
                           1810 ;	game.c 267
                           1811 ;	genLabel
   02BE                    1812 00114$:
                           1813 ;	genAddrOf
                           1814 ;	AOP_HL for _player
   02BE 11 7B 1A           1815 	ld	de,#_dog1
   02C1 21 B3 1A           1816 	ld	hl,#_player
   02C4 73                 1817 	ld	(hl),e
   02C5 23                 1818 	inc	hl
   02C6 72                 1819 	ld	(hl),d
                           1820 ;	game.c 268
                           1821 ;	genGoto
   02C7 C3 EB 02           1822 	jp	00120$
                           1823 ;	game.c 270
                           1824 ;	genLabel
   02CA                    1825 00115$:
                           1826 ;	genAddrOf
                           1827 ;	AOP_HL for _player
   02CA 11 89 1A           1828 	ld	de,#_dog2
   02CD 21 B3 1A           1829 	ld	hl,#_player
   02D0 73                 1830 	ld	(hl),e
   02D1 23                 1831 	inc	hl
   02D2 72                 1832 	ld	(hl),d
                           1833 ;	game.c 271
                           1834 ;	genGoto
   02D3 C3 EB 02           1835 	jp	00120$
                           1836 ;	game.c 273
                           1837 ;	genLabel
   02D6                    1838 00116$:
                           1839 ;	genAddrOf
                           1840 ;	AOP_HL for _player
   02D6 11 97 1A           1841 	ld	de,#_cat
   02D9 21 B3 1A           1842 	ld	hl,#_player
   02DC 73                 1843 	ld	(hl),e
   02DD 23                 1844 	inc	hl
   02DE 72                 1845 	ld	(hl),d
                           1846 ;	game.c 274
                           1847 ;	genGoto
   02DF C3 EB 02           1848 	jp	00120$
                           1849 ;	game.c 276
                           1850 ;	genLabel
   02E2                    1851 00117$:
                           1852 ;	genAddrOf
                           1853 ;	AOP_HL for _player
   02E2 11 6D 1A           1854 	ld	de,#_bunny
   02E5 21 B3 1A           1855 	ld	hl,#_player
   02E8 73                 1856 	ld	(hl),e
   02E9 23                 1857 	inc	hl
   02EA 72                 1858 	ld	(hl),d
                           1859 ;	game.c 278
                           1860 ;	genLabel
   02EB                    1861 00120$:
                           1862 ;	game.c 283
                           1863 ;	genCall
                           1864 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD AA 0F           1865 	call	_rotate_player
                           1866 ;	genLabel
   02EE                    1867 00121$:
                           1868 ;	genEndFunction
                           1869 	
   02EE C9                 1870 	ret
   02EF                    1871 ___change_char_end:
                           1872 ;	game.c 287
                           1873 ;	genLabel
                           1874 ;	genFunction
                           1875 ;	---------------------------------
                           1876 ; Function map_loop
                           1877 ; ---------------------------------
   02EF                    1878 ___map_loop_start:
   02EF                    1879 _map_loop:
                           1880 	
                           1881 ;	game.c 289
                           1882 ;	genIpush
                           1883 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 B3 1A           1884 	ld	hl,#_player
   02F2 E5                 1885 	push	hl
                           1886 ;	genCall
   02F3 CD CC 07           1887 	call	_is_ded
   02F6 42                 1888 	ld	b,d
   02F7 4B                 1889 	ld	c,e
   02F8 E8 02              1890 	lda	sp,2(sp)
                           1891 ;	genIfx
   02FA 79                 1892 	ld	a,c
   02FB B0                 1893 	or	a,b
   02FC CA 02 03           1894 	jp	z,00102$
                           1895 ;	game.c 290
                           1896 ;	genCall
                           1897 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1898 	call	_map_init
                           1899 ;	genLabel
   0302                    1900 00102$:
                           1901 ;	game.c 292
                           1902 ;	genIpush
                           1903 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 B3 1A           1904 	ld	hl,#_player
   0305 E5                 1905 	push	hl
                           1906 ;	genCall
   0306 CD E2 05           1907 	call	_got_door
   0309 E8 02              1908 	lda	sp,2(sp)
                           1909 ;	game.c 294
                           1910 ;	genIpush
                           1911 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 B3 1A           1912 	ld	hl,#_player
   030E E5                 1913 	push	hl
                           1914 ;	genCall
   030F CD 35 05           1915 	call	_got_key
   0312 E8 02              1916 	lda	sp,2(sp)
                           1917 ;	game.c 295
                           1918 ;	genCall
                           1919 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1920 	call	_map_water
                           1921 ;	game.c 298
                           1922 ;	genIpush
                           1923 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 B3 1A           1924 	ld	hl,#_player
   031A E5                 1925 	push	hl
                           1926 ;	genCall
   031B CD C8 0C           1927 	call	_player_input
   031E E8 02              1928 	lda	sp,2(sp)
                           1929 ;	game.c 301
                           1930 ;	genIpush
                           1931 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1932 	ld	hl,#_bunny
   0323 E5                 1933 	push	hl
                           1934 ;	genCall
   0324 CD 50 11           1935 	call	_move_character
   0327 E8 02              1936 	lda	sp,2(sp)
                           1937 ;	game.c 302
                           1938 ;	genIpush
                           1939 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7B 1A           1940 	ld	hl,#_dog1
   032C E5                 1941 	push	hl
                           1942 ;	genCall
   032D CD 50 11           1943 	call	_move_character
   0330 E8 02              1944 	lda	sp,2(sp)
                           1945 ;	game.c 303
                           1946 ;	genIpush
                           1947 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 89 1A           1948 	ld	hl,#_dog2
   0335 E5                 1949 	push	hl
                           1950 ;	genCall
   0336 CD 50 11           1951 	call	_move_character
   0339 E8 02              1952 	lda	sp,2(sp)
                           1953 ;	game.c 304
                           1954 ;	genIpush
                           1955 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 97 1A           1956 	ld	hl,#_cat
   033E E5                 1957 	push	hl
                           1958 ;	genCall
   033F CD 50 11           1959 	call	_move_character
   0342 E8 02              1960 	lda	sp,2(sp)
                           1961 ;	genLabel
   0344                    1962 00103$:
                           1963 ;	genEndFunction
                           1964 	
   0344 C9                 1965 	ret
   0345                    1966 ___map_loop_end:
                           1967 ;	game.c 309
                           1968 ;	genLabel
                           1969 ;	genFunction
                           1970 ;	---------------------------------
                           1971 ; Function helper_copy_map
                           1972 ; ---------------------------------
   0345                    1973 ___helper_copy_map_start:
   0345                    1974 _helper_copy_map:
   0345 E8 FC              1975 	lda	sp,-4(sp)
                           1976 ;	game.c 311
                           1977 ;	genAssign
   0347 01 00 00           1978 	ld	bc,#0x0000
                           1979 ;	genLabel
   034A                    1980 00101$:
                           1981 ;	genCmpLt
   034A 79                 1982 	ld	a,c
   034B D6 68              1983 	sub	a,#0x68
   034D 78                 1984 	ld	a,b
   034E DE 01              1985 	sbc	a,#0x01
   0350 D2 74 03           1986 	jp	nc,00105$
                           1987 ;	game.c 312
                           1988 ;	genPlus
                           1989 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1990 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1991 	ld	hl,#_map
   0356 09                 1992 	add	hl,bc
   0357 7D                 1993 	ld	a,l
   0358 54                 1994 	ld	d,h
   0359 F8 02              1995 	lda	hl,2(sp)
   035B 22                 1996 	ld	(hl+),a
   035C 72                 1997 	ld	(hl),d
                           1998 ;	genPlus
                           1999 ;	AOP_STK for 
                           2000 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           2001 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              2002 	lda	hl,6(sp)
   035F 2A                 2003 	ld	a,(hl+)
   0360 66                 2004 	ld	h,(hl)
   0361 6F                 2005 	ld	l,a
   0362 09                 2006 	add	hl,bc
   0363 7D                 2007 	ld	a,l
   0364 54                 2008 	ld	d,h
   0365 F8 00              2009 	lda	hl,0(sp)
                           2010 ;	genPointerGet
                           2011 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2012 	ld	(hl+),a
   0368 72                 2013 	ld	(hl),d
   0369 5F                 2014 	ld	e,a
   036A 1A                 2015 	ld	a,(de)
                           2016 ;	genAssign (pointer)
                           2017 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2018 	inc	hl
   036C 5E                 2019 	ld	e,(hl)
   036D 23                 2020 	inc	hl
   036E 56                 2021 	ld	d,(hl)
   036F 12                 2022 	ld	(de),a
                           2023 ;	game.c 311
                           2024 ;	genPlus
                           2025 ;	genPlusIncr
   0370 03                 2026 	inc	bc
                           2027 ;	genGoto
   0371 C3 4A 03           2028 	jp	00101$
                           2029 ;	genLabel
   0374                    2030 00105$:
                           2031 ;	genEndFunction
   0374 E8 04              2032 	lda	sp,4(sp)
   0376 C9                 2033 	ret
   0377                    2034 ___helper_copy_map_end:
                           2035 ;	game.c 316
                           2036 ;	genLabel
                           2037 ;	genFunction
                           2038 ;	---------------------------------
                           2039 ; Function copy_map
                           2040 ; ---------------------------------
   0377                    2041 ___copy_map_start:
   0377                    2042 _copy_map:
                           2043 	
                           2044 ;	game.c 317
                           2045 ;	genCmpLt
                           2046 ;	AOP_HL for _current_map
   0377 21 04 19           2047 	ld	hl,#_current_map
   037A 7E                 2048 	ld	a,(hl)
   037B FE 01              2049 	cp	#0x01
   037D DA 2A 04           2050 	jp	c,00111$
                           2051 ;	genCmpGt
                           2052 ;	AOP_HL for _current_map
   0380 3E 0A              2053 	ld	a,#0x0A
   0382 96                 2054 	sub	a,(hl)
   0383 DA 2A 04           2055 	jp	c,00111$
                           2056 ;	genMinus
                           2057 ;	AOP_HL for _current_map
   0386 7E                 2058 	ld	a,(hl)
   0387 C6 FF              2059 	add	a,#0xFF
   0389 4F                 2060 	ld	c,a
                           2061 ;	genJumpTab
   038A 59                 2062 	ld	e,c
   038B 16 00              2063 	ld	d,#0x00
   038D 21 94 03           2064 	ld	hl,#00117$
   0390 19                 2065 	add	hl,de
   0391 19                 2066 	add	hl,de
   0392 19                 2067 	add	hl,de
   0393 E9                 2068 	jp	(hl)
   0394                    2069 00117$:
   0394 C3 B2 03           2070 	jp	00101$
   0397 C3 BE 03           2071 	jp	00102$
   039A C3 CA 03           2072 	jp	00103$
   039D C3 D6 03           2073 	jp	00104$
   03A0 C3 E2 03           2074 	jp	00105$
   03A3 C3 EE 03           2075 	jp	00106$
   03A6 C3 FA 03           2076 	jp	00107$
   03A9 C3 06 04           2077 	jp	00108$
   03AC C3 12 04           2078 	jp	00109$
   03AF C3 1E 04           2079 	jp	00110$
                           2080 ;	game.c 319
                           2081 ;	genLabel
   03B2                    2082 00101$:
                           2083 ;	genIpush
                           2084 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2085 	ld	hl,#_Map1
   03B5 E5                 2086 	push	hl
                           2087 ;	genCall
   03B6 CD 45 03           2088 	call	_helper_copy_map
   03B9 E8 02              2089 	lda	sp,2(sp)
                           2090 ;	game.c 320
                           2091 ;	genGoto
   03BB C3 33 04           2092 	jp	00113$
                           2093 ;	game.c 322
                           2094 ;	genLabel
   03BE                    2095 00102$:
                           2096 ;	genIpush
                           2097 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2098 	ld	hl,#_Map2
   03C1 E5                 2099 	push	hl
                           2100 ;	genCall
   03C2 CD 45 03           2101 	call	_helper_copy_map
   03C5 E8 02              2102 	lda	sp,2(sp)
                           2103 ;	game.c 323
                           2104 ;	genGoto
   03C7 C3 33 04           2105 	jp	00113$
                           2106 ;	game.c 325
                           2107 ;	genLabel
   03CA                    2108 00103$:
                           2109 ;	genIpush
                           2110 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2111 	ld	hl,#_Map3
   03CD E5                 2112 	push	hl
                           2113 ;	genCall
   03CE CD 45 03           2114 	call	_helper_copy_map
   03D1 E8 02              2115 	lda	sp,2(sp)
                           2116 ;	game.c 326
                           2117 ;	genGoto
   03D3 C3 33 04           2118 	jp	00113$
                           2119 ;	game.c 328
                           2120 ;	genLabel
   03D6                    2121 00104$:
                           2122 ;	genIpush
                           2123 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2124 	ld	hl,#_Map4
   03D9 E5                 2125 	push	hl
                           2126 ;	genCall
   03DA CD 45 03           2127 	call	_helper_copy_map
   03DD E8 02              2128 	lda	sp,2(sp)
                           2129 ;	game.c 329
                           2130 ;	genGoto
   03DF C3 33 04           2131 	jp	00113$
                           2132 ;	game.c 331
                           2133 ;	genLabel
   03E2                    2134 00105$:
                           2135 ;	genIpush
                           2136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2137 	ld	hl,#_MapTest
   03E5 E5                 2138 	push	hl
                           2139 ;	genCall
   03E6 CD 45 03           2140 	call	_helper_copy_map
   03E9 E8 02              2141 	lda	sp,2(sp)
                           2142 ;	game.c 332
                           2143 ;	genGoto
   03EB C3 33 04           2144 	jp	00113$
                           2145 ;	game.c 334
                           2146 ;	genLabel
   03EE                    2147 00106$:
                           2148 ;	genIpush
                           2149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2150 	ld	hl,#_MapTest
   03F1 E5                 2151 	push	hl
                           2152 ;	genCall
   03F2 CD 45 03           2153 	call	_helper_copy_map
   03F5 E8 02              2154 	lda	sp,2(sp)
                           2155 ;	game.c 335
                           2156 ;	genGoto
   03F7 C3 33 04           2157 	jp	00113$
                           2158 ;	game.c 337
                           2159 ;	genLabel
   03FA                    2160 00107$:
                           2161 ;	genIpush
                           2162 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2163 	ld	hl,#_MapTest
   03FD E5                 2164 	push	hl
                           2165 ;	genCall
   03FE CD 45 03           2166 	call	_helper_copy_map
   0401 E8 02              2167 	lda	sp,2(sp)
                           2168 ;	game.c 338
                           2169 ;	genGoto
   0403 C3 33 04           2170 	jp	00113$
                           2171 ;	game.c 340
                           2172 ;	genLabel
   0406                    2173 00108$:
                           2174 ;	genIpush
                           2175 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2176 	ld	hl,#_MapTest
   0409 E5                 2177 	push	hl
                           2178 ;	genCall
   040A CD 45 03           2179 	call	_helper_copy_map
   040D E8 02              2180 	lda	sp,2(sp)
                           2181 ;	game.c 341
                           2182 ;	genGoto
   040F C3 33 04           2183 	jp	00113$
                           2184 ;	game.c 343
                           2185 ;	genLabel
   0412                    2186 00109$:
                           2187 ;	genIpush
                           2188 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2189 	ld	hl,#_MapTest
   0415 E5                 2190 	push	hl
                           2191 ;	genCall
   0416 CD 45 03           2192 	call	_helper_copy_map
   0419 E8 02              2193 	lda	sp,2(sp)
                           2194 ;	game.c 344
                           2195 ;	genGoto
   041B C3 33 04           2196 	jp	00113$
                           2197 ;	game.c 346
                           2198 ;	genLabel
   041E                    2199 00110$:
                           2200 ;	genIpush
                           2201 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2202 	ld	hl,#_MapTest
   0421 E5                 2203 	push	hl
                           2204 ;	genCall
   0422 CD 45 03           2205 	call	_helper_copy_map
   0425 E8 02              2206 	lda	sp,2(sp)
                           2207 ;	game.c 347
                           2208 ;	genGoto
   0427 C3 33 04           2209 	jp	00113$
                           2210 ;	game.c 349
                           2211 ;	genLabel
   042A                    2212 00111$:
                           2213 ;	genIpush
                           2214 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2215 	ld	hl,#_MapTest
   042D E5                 2216 	push	hl
                           2217 ;	genCall
   042E CD 45 03           2218 	call	_helper_copy_map
   0431 E8 02              2219 	lda	sp,2(sp)
                           2220 ;	game.c 352
                           2221 ;	genLabel
   0433                    2222 00113$:
                           2223 ;	genEndFunction
                           2224 	
   0433 C9                 2225 	ret
   0434                    2226 ___copy_map_end:
                           2227 ;	game.c 356
                           2228 ;	genLabel
                           2229 ;	genFunction
                           2230 ;	---------------------------------
                           2231 ; Function map_init
                           2232 ; ---------------------------------
   0434                    2233 ___map_init_start:
   0434                    2234 _map_init:
                           2235 	
                           2236 ;	game.c 357
                           2237 ;	genCall
                           2238 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2239 	call	_copy_map
                           2240 ;	game.c 358
                           2241 ;	genIpush
                           2242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2243 	ld	hl,#_map
   043A E5                 2244 	push	hl
                           2245 ;	genIpush
   043B 21 14 12           2246 	ld	hl,#0x1214
   043E E5                 2247 	push	hl
                           2248 ;	genIpush
   043F 21 00 00           2249 	ld	hl,#0x0000
   0442 E5                 2250 	push	hl
                           2251 ;	genCall
   0443 CD 00 00           2252 	call	_set_bkg_tiles
   0446 E8 06              2253 	lda	sp,6(sp)
                           2254 ;	game.c 359
                           2255 ;	genCall
                           2256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2257 	call	_instanciate_chars
                           2258 ;	genLabel
   044B                    2259 00101$:
                           2260 ;	genEndFunction
                           2261 	
   044B C9                 2262 	ret
   044C                    2263 ___map_init_end:
                           2264 ;	game.c 374
                           2265 ;	genLabel
                           2266 ;	genFunction
                           2267 ;	---------------------------------
                           2268 ; Function instanciate_chars
                           2269 ; ---------------------------------
   044C                    2270 ___instanciate_chars_start:
   044C                    2271 _instanciate_chars:
                           2272 	
                           2273 ;	game.c 376
                           2274 ;	genAssign (pointer)
   044C 11 6D 1A           2275 	ld	de,#_bunny
   044F 3E 08              2276 	ld	a,#0x08
   0451 12                 2277 	ld	(de),a
                           2278 ;	game.c 377
                           2279 ;	genPlus
                           2280 ;	genPlusIncr
   0452 21 6E 1A           2281 	ld	hl,#_bunny + 1
                           2282 ;	genAssign (pointer)
   0455 36 10              2283 	ld	(hl),#0x10
                           2284 ;	game.c 378
                           2285 ;	genPlus
                           2286 ;	genPlusIncr
   0457 23                 2287 	inc	hl
                           2288 ;	genAssign (pointer)
   0458 36 00              2289 	ld	(hl),#0x00
                           2290 ;	game.c 379
                           2291 ;	genPlus
                           2292 ;	genPlusIncr
   045A 23                 2293 	inc	hl
                           2294 ;	genAssign (pointer)
   045B 36 01              2295 	ld	(hl),#0x01
                           2296 ;	game.c 380
                           2297 ;	genPlus
                           2298 ;	genPlusIncr
   045D 23                 2299 	inc	hl
                           2300 ;	genAssign (pointer)
   045E 36 02              2301 	ld	(hl),#0x02
                           2302 ;	game.c 381
                           2303 ;	genPlus
                           2304 ;	genPlusIncr
   0460 23                 2305 	inc	hl
                           2306 ;	genAssign (pointer)
   0461 36 10              2307 	ld	(hl),#0x10
                           2308 ;	game.c 382
                           2309 ;	genPlus
                           2310 ;	genPlusIncr
   0463 23                 2311 	inc	hl
                           2312 ;	genAssign (pointer)
   0464 36 11              2313 	ld	(hl),#0x11
                           2314 ;	game.c 383
                           2315 ;	genPlus
                           2316 ;	genPlusIncr
   0466 23                 2317 	inc	hl
                           2318 ;	genAssign (pointer)
   0467 36 12              2319 	ld	(hl),#0x12
                           2320 ;	game.c 384
                           2321 ;	genPlus
                           2322 ;	genPlusIncr
   0469 23                 2323 	inc	hl
                           2324 ;	genAssign (pointer)
   046A 36 00              2325 	ld	(hl),#0x00
                           2326 ;	game.c 385
                           2327 ;	genPlus
                           2328 ;	genPlusIncr
   046C 23                 2329 	inc	hl
                           2330 ;	genAssign (pointer)
   046D 36 00              2331 	ld	(hl),#0x00
                           2332 ;	game.c 386
                           2333 ;	genPlus
                           2334 ;	genPlusIncr
   046F 23                 2335 	inc	hl
   0470 23                 2336 	inc	hl
                           2337 ;	genAssign (pointer)
   0471 36 01              2338 	ld	(hl),#0x01
                           2339 ;	game.c 387
                           2340 ;	genPlus
                           2341 ;	genPlusIncr
   0473 23                 2342 	inc	hl
                           2343 ;	genAssign (pointer)
   0474 5D                 2344 	ld	e,l
   0475 54                 2345 	ld	d,h
   0476 3E 90              2346 	ld	a,#0x90
   0478 12                 2347 	ld	(de),a
   0479 13                 2348 	inc	de
   047A 3E 01              2349 	ld	a,#0x01
   047C 12                 2350 	ld	(de),a
                           2351 ;	game.c 389
                           2352 ;	genAssign (pointer)
   047D 11 7B 1A           2353 	ld	de,#_dog1
   0480 3E 10              2354 	ld	a,#0x10
   0482 12                 2355 	ld	(de),a
                           2356 ;	game.c 390
                           2357 ;	genPlus
                           2358 ;	genPlusIncr
   0483 21 7C 1A           2359 	ld	hl,#_dog1 + 1
                           2360 ;	genAssign (pointer)
   0486 36 10              2361 	ld	(hl),#0x10
                           2362 ;	game.c 391
                           2363 ;	genPlus
                           2364 ;	genPlusIncr
   0488 23                 2365 	inc	hl
                           2366 ;	genAssign (pointer)
   0489 36 03              2367 	ld	(hl),#0x03
                           2368 ;	game.c 392
                           2369 ;	genPlus
                           2370 ;	genPlusIncr
   048B 23                 2371 	inc	hl
                           2372 ;	genAssign (pointer)
   048C 36 04              2373 	ld	(hl),#0x04
                           2374 ;	game.c 393
                           2375 ;	genPlus
                           2376 ;	genPlusIncr
   048E 23                 2377 	inc	hl
                           2378 ;	genAssign (pointer)
   048F 36 05              2379 	ld	(hl),#0x05
                           2380 ;	game.c 394
                           2381 ;	genPlus
                           2382 ;	genPlusIncr
   0491 23                 2383 	inc	hl
                           2384 ;	genAssign (pointer)
   0492 36 13              2385 	ld	(hl),#0x13
                           2386 ;	game.c 395
                           2387 ;	genPlus
                           2388 ;	genPlusIncr
   0494 23                 2389 	inc	hl
                           2390 ;	genAssign (pointer)
   0495 36 14              2391 	ld	(hl),#0x14
                           2392 ;	game.c 396
                           2393 ;	genPlus
                           2394 ;	genPlusIncr
   0497 23                 2395 	inc	hl
                           2396 ;	genAssign (pointer)
   0498 36 15              2397 	ld	(hl),#0x15
                           2398 ;	game.c 397
                           2399 ;	genPlus
                           2400 ;	genPlusIncr
   049A 23                 2401 	inc	hl
                           2402 ;	genAssign (pointer)
   049B 36 00              2403 	ld	(hl),#0x00
                           2404 ;	game.c 398
                           2405 ;	genPlus
                           2406 ;	genPlusIncr
   049D 23                 2407 	inc	hl
                           2408 ;	genAssign (pointer)
   049E 36 00              2409 	ld	(hl),#0x00
                           2410 ;	game.c 399
                           2411 ;	genPlus
                           2412 ;	genPlusIncr
   04A0 23                 2413 	inc	hl
   04A1 23                 2414 	inc	hl
                           2415 ;	genAssign (pointer)
   04A2 36 02              2416 	ld	(hl),#0x02
                           2417 ;	game.c 400
                           2418 ;	genPlus
                           2419 ;	genPlusIncr
   04A4 23                 2420 	inc	hl
                           2421 ;	genAssign (pointer)
   04A5 5D                 2422 	ld	e,l
   04A6 54                 2423 	ld	d,h
   04A7 3E 90              2424 	ld	a,#0x90
   04A9 12                 2425 	ld	(de),a
   04AA 13                 2426 	inc	de
   04AB 3E 01              2427 	ld	a,#0x01
   04AD 12                 2428 	ld	(de),a
                           2429 ;	game.c 402
                           2430 ;	genAssign (pointer)
   04AE 11 89 1A           2431 	ld	de,#_dog2
   04B1 3E 08              2432 	ld	a,#0x08
   04B3 12                 2433 	ld	(de),a
                           2434 ;	game.c 403
                           2435 ;	genPlus
                           2436 ;	genPlusIncr
   04B4 21 8A 1A           2437 	ld	hl,#_dog2 + 1
                           2438 ;	genAssign (pointer)
   04B7 36 18              2439 	ld	(hl),#0x18
                           2440 ;	game.c 404
                           2441 ;	genPlus
                           2442 ;	genPlusIncr
   04B9 23                 2443 	inc	hl
                           2444 ;	genAssign (pointer)
   04BA 36 06              2445 	ld	(hl),#0x06
                           2446 ;	game.c 405
                           2447 ;	genPlus
                           2448 ;	genPlusIncr
   04BC 23                 2449 	inc	hl
                           2450 ;	genAssign (pointer)
   04BD 36 07              2451 	ld	(hl),#0x07
                           2452 ;	game.c 406
                           2453 ;	genPlus
                           2454 ;	genPlusIncr
   04BF 23                 2455 	inc	hl
                           2456 ;	genAssign (pointer)
   04C0 36 08              2457 	ld	(hl),#0x08
                           2458 ;	game.c 407
                           2459 ;	genPlus
                           2460 ;	genPlusIncr
   04C2 23                 2461 	inc	hl
                           2462 ;	genAssign (pointer)
   04C3 36 13              2463 	ld	(hl),#0x13
                           2464 ;	game.c 408
                           2465 ;	genPlus
                           2466 ;	genPlusIncr
   04C5 23                 2467 	inc	hl
                           2468 ;	genAssign (pointer)
   04C6 36 14              2469 	ld	(hl),#0x14
                           2470 ;	game.c 409
                           2471 ;	genPlus
                           2472 ;	genPlusIncr
   04C8 23                 2473 	inc	hl
                           2474 ;	genAssign (pointer)
   04C9 36 15              2475 	ld	(hl),#0x15
                           2476 ;	game.c 410
                           2477 ;	genPlus
                           2478 ;	genPlusIncr
   04CB 23                 2479 	inc	hl
                           2480 ;	genAssign (pointer)
   04CC 36 00              2481 	ld	(hl),#0x00
                           2482 ;	game.c 411
                           2483 ;	genPlus
                           2484 ;	genPlusIncr
   04CE 23                 2485 	inc	hl
                           2486 ;	genAssign (pointer)
   04CF 36 00              2487 	ld	(hl),#0x00
                           2488 ;	game.c 412
                           2489 ;	genPlus
                           2490 ;	genPlusIncr
   04D1 23                 2491 	inc	hl
   04D2 23                 2492 	inc	hl
                           2493 ;	genAssign (pointer)
   04D3 36 03              2494 	ld	(hl),#0x03
                           2495 ;	game.c 413
                           2496 ;	genPlus
                           2497 ;	genPlusIncr
   04D5 23                 2498 	inc	hl
                           2499 ;	genAssign (pointer)
   04D6 5D                 2500 	ld	e,l
   04D7 54                 2501 	ld	d,h
   04D8 3E 90              2502 	ld	a,#0x90
   04DA 12                 2503 	ld	(de),a
   04DB 13                 2504 	inc	de
   04DC 3E 01              2505 	ld	a,#0x01
   04DE 12                 2506 	ld	(de),a
                           2507 ;	game.c 415
                           2508 ;	genAssign (pointer)
   04DF 11 97 1A           2509 	ld	de,#_cat
   04E2 3E 10              2510 	ld	a,#0x10
   04E4 12                 2511 	ld	(de),a
                           2512 ;	game.c 416
                           2513 ;	genPlus
                           2514 ;	genPlusIncr
   04E5 21 98 1A           2515 	ld	hl,#_cat + 1
                           2516 ;	genAssign (pointer)
   04E8 36 18              2517 	ld	(hl),#0x18
                           2518 ;	game.c 417
                           2519 ;	genPlus
                           2520 ;	genPlusIncr
   04EA 23                 2521 	inc	hl
                           2522 ;	genAssign (pointer)
   04EB 36 09              2523 	ld	(hl),#0x09
                           2524 ;	game.c 418
                           2525 ;	genPlus
                           2526 ;	genPlusIncr
   04ED 23                 2527 	inc	hl
                           2528 ;	genAssign (pointer)
   04EE 36 0A              2529 	ld	(hl),#0x0A
                           2530 ;	game.c 419
                           2531 ;	genPlus
                           2532 ;	genPlusIncr
   04F0 23                 2533 	inc	hl
                           2534 ;	genAssign (pointer)
   04F1 36 05              2535 	ld	(hl),#0x05
                           2536 ;	game.c 420
                           2537 ;	genPlus
                           2538 ;	genPlusIncr
   04F3 23                 2539 	inc	hl
                           2540 ;	genAssign (pointer)
   04F4 36 13              2541 	ld	(hl),#0x13
                           2542 ;	game.c 421
                           2543 ;	genPlus
                           2544 ;	genPlusIncr
   04F6 23                 2545 	inc	hl
                           2546 ;	genAssign (pointer)
   04F7 36 14              2547 	ld	(hl),#0x14
                           2548 ;	game.c 422
                           2549 ;	genPlus
                           2550 ;	genPlusIncr
   04F9 23                 2551 	inc	hl
                           2552 ;	genAssign (pointer)
   04FA 36 15              2553 	ld	(hl),#0x15
                           2554 ;	game.c 423
                           2555 ;	genPlus
                           2556 ;	genPlusIncr
   04FC 23                 2557 	inc	hl
                           2558 ;	genAssign (pointer)
   04FD 36 00              2559 	ld	(hl),#0x00
                           2560 ;	game.c 424
                           2561 ;	genPlus
                           2562 ;	genPlusIncr
   04FF 23                 2563 	inc	hl
                           2564 ;	genAssign (pointer)
   0500 36 00              2565 	ld	(hl),#0x00
                           2566 ;	game.c 425
                           2567 ;	genPlus
                           2568 ;	genPlusIncr
   0502 23                 2569 	inc	hl
   0503 23                 2570 	inc	hl
                           2571 ;	genAssign (pointer)
   0504 36 04              2572 	ld	(hl),#0x04
                           2573 ;	game.c 426
                           2574 ;	genPlus
                           2575 ;	genPlusIncr
   0506 23                 2576 	inc	hl
                           2577 ;	genAssign (pointer)
   0507 5D                 2578 	ld	e,l
   0508 54                 2579 	ld	d,h
   0509 3E 90              2580 	ld	a,#0x90
   050B 12                 2581 	ld	(de),a
   050C 13                 2582 	inc	de
   050D 3E 01              2583 	ld	a,#0x01
   050F 12                 2584 	ld	(de),a
                           2585 ;	game.c 429
                           2586 ;	genIpush
                           2587 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0510 21 6D 1A           2588 	ld	hl,#_bunny
   0513 E5                 2589 	push	hl
                           2590 ;	genCall
   0514 CD B0 19           2591 	call	_set_character_sprite
   0517 E8 02              2592 	lda	sp,2(sp)
                           2593 ;	game.c 430
                           2594 ;	genIpush
                           2595 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0519 21 7B 1A           2596 	ld	hl,#_dog1
   051C E5                 2597 	push	hl
                           2598 ;	genCall
   051D CD B0 19           2599 	call	_set_character_sprite
   0520 E8 02              2600 	lda	sp,2(sp)
                           2601 ;	game.c 431
                           2602 ;	genIpush
                           2603 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0522 21 89 1A           2604 	ld	hl,#_dog2
   0525 E5                 2605 	push	hl
                           2606 ;	genCall
   0526 CD B0 19           2607 	call	_set_character_sprite
   0529 E8 02              2608 	lda	sp,2(sp)
                           2609 ;	game.c 432
                           2610 ;	genIpush
                           2611 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   052B 21 97 1A           2612 	ld	hl,#_cat
   052E E5                 2613 	push	hl
                           2614 ;	genCall
   052F CD B0 19           2615 	call	_set_character_sprite
   0532 E8 02              2616 	lda	sp,2(sp)
                           2617 ;	genLabel
   0534                    2618 00101$:
                           2619 ;	genEndFunction
                           2620 	
   0534 C9                 2621 	ret
   0535                    2622 ___instanciate_chars_end:
                           2623 ;	game.c 436
                           2624 ;	genLabel
                           2625 ;	genFunction
                           2626 ;	---------------------------------
                           2627 ; Function got_key
                           2628 ; ---------------------------------
   0535                    2629 ___got_key_start:
   0535                    2630 _got_key:
   0535 E8 FC              2631 	lda	sp,-4(sp)
                           2632 ;	game.c 437
                           2633 ;	genAssign
                           2634 ;	AOP_HL for _player
   0537 21 B3 1A           2635 	ld	hl,#_player
   053A 4E                 2636 	ld	c,(hl)
   053B 23                 2637 	inc	hl
   053C 46                 2638 	ld	b,(hl)
                           2639 ;	genPlus
                           2640 ;	genPlusIncr
   053D 03                 2641 	inc	bc
                           2642 ;	genPointerGet
   053E 0A                 2643 	ld	a,(bc)
   053F 4F                 2644 	ld	c,a
                           2645 ;	genAssign
                           2646 ;	AOP_HL for _player
                           2647 ;	AOP_STK for _got_key_sloc0_1_0
   0540 2B                 2648 	dec	hl
   0541 2A                 2649 	ld	a,(hl+)
   0542 5E                 2650 	ld	e,(hl)
   0543 F8 00              2651 	lda	hl,0(sp)
   0545 22                 2652 	ld	(hl+),a
   0546 73                 2653 	ld	(hl),e
                           2654 ;	genPointerGet
                           2655 ;	AOP_STK for _got_key_sloc0_1_0
   0547 2B                 2656 	dec	hl
   0548 5E                 2657 	ld	e,(hl)
   0549 23                 2658 	inc	hl
   054A 56                 2659 	ld	d,(hl)
   054B 1A                 2660 	ld	a,(de)
   054C 47                 2661 	ld	b,a
                           2662 ;	genIpush
                           2663 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054D 79                 2664 	ld	a,c
   054E F5                 2665 	push	af
   054F 33                 2666 	inc	sp
                           2667 ;	genIpush
   0550 78                 2668 	ld	a,b
   0551 F5                 2669 	push	af
   0552 33                 2670 	inc	sp
                           2671 ;	genCall
   0553 CD 6E 0C           2672 	call	_get_player_map_position
   0556 42                 2673 	ld	b,d
   0557 4B                 2674 	ld	c,e
   0558 E8 02              2675 	lda	sp,2(sp)
                           2676 ;	genAssign
                           2677 ;	(registers are the same)
                           2678 ;	game.c 440
                           2679 ;	genPlus
                           2680 ;	Can't optimise plus by inc, falling back to the normal way
   055A 21 05 19           2681 	ld	hl,#_map
   055D 09                 2682 	add	hl,bc
   055E 4D                 2683 	ld	c,l
   055F 44                 2684 	ld	b,h
                           2685 ;	genPointerGet
   0560 0A                 2686 	ld	a,(bc)
   0561 4F                 2687 	ld	c,a
                           2688 ;	genCast
                           2689 ; Removed redundent load
   0562 06 00              2690 	ld	b,#0x00
                           2691 ;	genCmpEq
                           2692 ; genCmpEq: left 2, right 2, result 0
   0564 79                 2693 	ld	a,c
   0565 FE 2E              2694 	cp	a,#0x2E
   0567 C2 71 05           2695 	jp	nz,00116$
   056A 78                 2696 	ld	a,b
   056B B7                 2697 	or	a,a
   056C C2 DF 05           2698 	jp	nz,00109$
   056F 18 03              2699 	jr	00117$
   0571                    2700 00116$:
   0571 C3 DF 05           2701 	jp	00109$
   0574                    2702 00117$:
                           2703 ;	game.c 445
                           2704 ;	genAssign
                           2705 ;	AOP_STK for _got_key_map_position_2_2
   0574 F8 02              2706 	lda	hl,2(sp)
   0576 36 68              2707 	ld	(hl),#0x68
   0578 23                 2708 	inc	hl
   0579 36 01              2709 	ld	(hl),#0x01
                           2710 ;	game.c 446
                           2711 ;	genLabel
   057B                    2712 00104$:
                           2713 ;	genCmpEq
                           2714 ;	AOP_STK for _got_key_map_position_2_2
                           2715 ; genCmpEq: left 2, right 2, result 0
   057B F8 02              2716 	lda	hl,2(sp)
   057D 2A                 2717 	ld	a,(hl+)
   057E B6                 2718 	or	a,(hl)
   057F CA CE 05           2719 	jp	z,00106$
   0582                    2720 00118$:
                           2721 ;	game.c 447
                           2722 ;	genMinus
                           2723 ;	AOP_STK for _got_key_map_position_2_2
   0582 F8 02              2724 	lda	hl,2(sp)
   0584 5E                 2725 	ld	e,(hl)
   0585 23                 2726 	inc	hl
   0586 56                 2727 	ld	d,(hl)
   0587 1B                 2728 	dec	de
   0588 2B                 2729 	dec	hl
   0589 73                 2730 	ld	(hl),e
   058A 23                 2731 	inc	hl
   058B 72                 2732 	ld	(hl),d
                           2733 ;	game.c 449
                           2734 ;	genPlus
                           2735 ;	AOP_STK for _got_key_map_position_2_2
                           2736 ;	AOP_STK for _got_key_sloc0_1_0
                           2737 ;	Can't optimise plus by inc, falling back to the normal way
   058C 11 05 19           2738 	ld	de,#_map
   058F 2B                 2739 	dec	hl
   0590 2A                 2740 	ld	a,(hl+)
   0591 66                 2741 	ld	h,(hl)
   0592 6F                 2742 	ld	l,a
   0593 19                 2743 	add	hl,de
   0594 7D                 2744 	ld	a,l
   0595 54                 2745 	ld	d,h
   0596 F8 00              2746 	lda	hl,0(sp)
                           2747 ;	genPointerGet
                           2748 ;	AOP_STK for _got_key_sloc0_1_0
   0598 22                 2749 	ld	(hl+),a
   0599 72                 2750 	ld	(hl),d
   059A 5F                 2751 	ld	e,a
   059B 1A                 2752 	ld	a,(de)
   059C 4F                 2753 	ld	c,a
                           2754 ;	genCast
                           2755 ; Removed redundent load
   059D 06 00              2756 	ld	b,#0x00
                           2757 ;	genCmpEq
                           2758 ; genCmpEq: left 2, right 2, result 0
   059F 79                 2759 	ld	a,c
   05A0 FE 29              2760 	cp	a,#0x29
   05A2 C2 AA 05           2761 	jp	nz,00119$
   05A5 78                 2762 	ld	a,b
   05A6 B7                 2763 	or	a,a
   05A7 CA B8 05           2764 	jp	z,00101$
   05AA                    2765 00119$:
                           2766 ;	genCmpEq
                           2767 ; genCmpEq: left 2, right 2, result 0
   05AA 79                 2768 	ld	a,c
   05AB FE 2E              2769 	cp	a,#0x2E
   05AD C2 B5 05           2770 	jp	nz,00120$
   05B0 78                 2771 	ld	a,b
   05B1 B7                 2772 	or	a,a
   05B2 CA C3 05           2773 	jp	z,00102$
   05B5                    2774 00120$:
                           2775 ;	genGoto
   05B5 C3 7B 05           2776 	jp	00104$
                           2777 ;	game.c 451
                           2778 ;	genLabel
   05B8                    2779 00101$:
                           2780 ;	genAssign (pointer)
                           2781 ;	AOP_STK for _got_key_sloc0_1_0
   05B8 F8 00              2782 	lda	hl,0(sp)
   05BA 5E                 2783 	ld	e,(hl)
   05BB 23                 2784 	inc	hl
   05BC 56                 2785 	ld	d,(hl)
   05BD 3E 2A              2786 	ld	a,#0x2A
   05BF 12                 2787 	ld	(de),a
                           2788 ;	game.c 452
                           2789 ;	genGoto
   05C0 C3 7B 05           2790 	jp	00104$
                           2791 ;	game.c 454
                           2792 ;	genLabel
   05C3                    2793 00102$:
                           2794 ;	genAssign (pointer)
                           2795 ;	AOP_STK for _got_key_sloc0_1_0
   05C3 F8 00              2796 	lda	hl,0(sp)
   05C5 5E                 2797 	ld	e,(hl)
   05C6 23                 2798 	inc	hl
   05C7 56                 2799 	ld	d,(hl)
   05C8 3E 09              2800 	ld	a,#0x09
   05CA 12                 2801 	ld	(de),a
                           2802 ;	game.c 457
                           2803 ;	genGoto
   05CB C3 7B 05           2804 	jp	00104$
                           2805 ;	genLabel
   05CE                    2806 00106$:
                           2807 ;	game.c 459
                           2808 ;	genIpush
                           2809 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05CE 21 05 19           2810 	ld	hl,#_map
   05D1 E5                 2811 	push	hl
                           2812 ;	genIpush
   05D2 21 14 12           2813 	ld	hl,#0x1214
   05D5 E5                 2814 	push	hl
                           2815 ;	genIpush
   05D6 21 00 00           2816 	ld	hl,#0x0000
   05D9 E5                 2817 	push	hl
                           2818 ;	genCall
   05DA CD 00 00           2819 	call	_set_bkg_tiles
   05DD E8 06              2820 	lda	sp,6(sp)
                           2821 ;	genLabel
   05DF                    2822 00109$:
                           2823 ;	genEndFunction
   05DF E8 04              2824 	lda	sp,4(sp)
   05E1 C9                 2825 	ret
   05E2                    2826 ___got_key_end:
                           2827 ;	game.c 463
                           2828 ;	genLabel
                           2829 ;	genFunction
                           2830 ;	---------------------------------
                           2831 ; Function got_door
                           2832 ; ---------------------------------
   05E2                    2833 ___got_door_start:
   05E2                    2834 _got_door:
   05E2 E8 FE              2835 	lda	sp,-2(sp)
                           2836 ;	game.c 464
                           2837 ;	genAssign
                           2838 ;	AOP_HL for _player
   05E4 21 B3 1A           2839 	ld	hl,#_player
   05E7 4E                 2840 	ld	c,(hl)
   05E8 23                 2841 	inc	hl
   05E9 46                 2842 	ld	b,(hl)
                           2843 ;	genPlus
                           2844 ;	genPlusIncr
   05EA 03                 2845 	inc	bc
                           2846 ;	genPointerGet
   05EB 0A                 2847 	ld	a,(bc)
   05EC 4F                 2848 	ld	c,a
                           2849 ;	genAssign
                           2850 ;	AOP_HL for _player
                           2851 ;	AOP_STK for _got_door_sloc0_1_0
   05ED 2B                 2852 	dec	hl
   05EE 2A                 2853 	ld	a,(hl+)
   05EF 5E                 2854 	ld	e,(hl)
   05F0 F8 00              2855 	lda	hl,0(sp)
   05F2 22                 2856 	ld	(hl+),a
   05F3 73                 2857 	ld	(hl),e
                           2858 ;	genPointerGet
                           2859 ;	AOP_STK for _got_door_sloc0_1_0
   05F4 2B                 2860 	dec	hl
   05F5 5E                 2861 	ld	e,(hl)
   05F6 23                 2862 	inc	hl
   05F7 56                 2863 	ld	d,(hl)
   05F8 1A                 2864 	ld	a,(de)
   05F9 47                 2865 	ld	b,a
                           2866 ;	genIpush
                           2867 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05FA 79                 2868 	ld	a,c
   05FB F5                 2869 	push	af
   05FC 33                 2870 	inc	sp
                           2871 ;	genIpush
   05FD 78                 2872 	ld	a,b
   05FE F5                 2873 	push	af
   05FF 33                 2874 	inc	sp
                           2875 ;	genCall
   0600 CD 6E 0C           2876 	call	_get_player_map_position
   0603 42                 2877 	ld	b,d
   0604 4B                 2878 	ld	c,e
   0605 E8 02              2879 	lda	sp,2(sp)
                           2880 ;	genAssign
                           2881 ;	(registers are the same)
                           2882 ;	game.c 466
                           2883 ;	genPlus
                           2884 ;	Can't optimise plus by inc, falling back to the normal way
   0607 21 05 19           2885 	ld	hl,#_map
   060A 09                 2886 	add	hl,bc
   060B 4D                 2887 	ld	c,l
   060C 44                 2888 	ld	b,h
                           2889 ;	genPointerGet
   060D 0A                 2890 	ld	a,(bc)
   060E 4F                 2891 	ld	c,a
                           2892 ;	genCast
                           2893 ; Removed redundent load
   060F 06 00              2894 	ld	b,#0x00
                           2895 ;	genCmpEq
                           2896 ; genCmpEq: left 2, right 2, result 0
   0611 79                 2897 	ld	a,c
   0612 FE 65              2898 	cp	a,#0x65
   0614 C2 1C 06           2899 	jp	nz,00144$
   0617 78                 2900 	ld	a,b
   0618 B7                 2901 	or	a,a
   0619 CA F0 06           2902 	jp	z,00101$
   061C                    2903 00144$:
                           2904 ;	genCmpEq
                           2905 ; genCmpEq: left 2, right 2, result 0
   061C 79                 2906 	ld	a,c
   061D FE 66              2907 	cp	a,#0x66
   061F C2 27 06           2908 	jp	nz,00145$
   0622 78                 2909 	ld	a,b
   0623 B7                 2910 	or	a,a
   0624 CA FB 06           2911 	jp	z,00102$
   0627                    2912 00145$:
                           2913 ;	genCmpEq
                           2914 ; genCmpEq: left 2, right 2, result 0
   0627 79                 2915 	ld	a,c
   0628 FE 67              2916 	cp	a,#0x67
   062A C2 32 06           2917 	jp	nz,00146$
   062D 78                 2918 	ld	a,b
   062E B7                 2919 	or	a,a
   062F CA 06 07           2920 	jp	z,00103$
   0632                    2921 00146$:
                           2922 ;	genCmpEq
                           2923 ; genCmpEq: left 2, right 2, result 0
   0632 79                 2924 	ld	a,c
   0633 FE 68              2925 	cp	a,#0x68
   0635 C2 3D 06           2926 	jp	nz,00147$
   0638 78                 2927 	ld	a,b
   0639 B7                 2928 	or	a,a
   063A CA 11 07           2929 	jp	z,00104$
   063D                    2930 00147$:
                           2931 ;	genCmpEq
                           2932 ; genCmpEq: left 2, right 2, result 0
   063D 79                 2933 	ld	a,c
   063E FE 69              2934 	cp	a,#0x69
   0640 C2 48 06           2935 	jp	nz,00148$
   0643 78                 2936 	ld	a,b
   0644 B7                 2937 	or	a,a
   0645 CA 1C 07           2938 	jp	z,00105$
   0648                    2939 00148$:
                           2940 ;	genCmpEq
                           2941 ; genCmpEq: left 2, right 2, result 0
   0648 79                 2942 	ld	a,c
   0649 FE 6A              2943 	cp	a,#0x6A
   064B C2 53 06           2944 	jp	nz,00149$
   064E 78                 2945 	ld	a,b
   064F B7                 2946 	or	a,a
   0650 CA 27 07           2947 	jp	z,00106$
   0653                    2948 00149$:
                           2949 ;	genCmpEq
                           2950 ; genCmpEq: left 2, right 2, result 0
   0653 79                 2951 	ld	a,c
   0654 FE 6B              2952 	cp	a,#0x6B
   0656 C2 5E 06           2953 	jp	nz,00150$
   0659 78                 2954 	ld	a,b
   065A B7                 2955 	or	a,a
   065B CA 32 07           2956 	jp	z,00107$
   065E                    2957 00150$:
                           2958 ;	genCmpEq
                           2959 ; genCmpEq: left 2, right 2, result 0
   065E 79                 2960 	ld	a,c
   065F FE 6C              2961 	cp	a,#0x6C
   0661 C2 69 06           2962 	jp	nz,00151$
   0664 78                 2963 	ld	a,b
   0665 B7                 2964 	or	a,a
   0666 CA 3D 07           2965 	jp	z,00108$
   0669                    2966 00151$:
                           2967 ;	genCmpEq
                           2968 ; genCmpEq: left 2, right 2, result 0
   0669 79                 2969 	ld	a,c
   066A FE 6D              2970 	cp	a,#0x6D
   066C C2 74 06           2971 	jp	nz,00152$
   066F 78                 2972 	ld	a,b
   0670 B7                 2973 	or	a,a
   0671 CA 48 07           2974 	jp	z,00109$
   0674                    2975 00152$:
                           2976 ;	genCmpEq
                           2977 ; genCmpEq: left 2, right 2, result 0
   0674 79                 2978 	ld	a,c
   0675 FE 6E              2979 	cp	a,#0x6E
   0677 C2 7F 06           2980 	jp	nz,00153$
   067A 78                 2981 	ld	a,b
   067B B7                 2982 	or	a,a
   067C CA 53 07           2983 	jp	z,00110$
   067F                    2984 00153$:
                           2985 ;	genCmpEq
                           2986 ; genCmpEq: left 2, right 2, result 0
   067F 79                 2987 	ld	a,c
   0680 FE 6F              2988 	cp	a,#0x6F
   0682 C2 8A 06           2989 	jp	nz,00154$
   0685 78                 2990 	ld	a,b
   0686 B7                 2991 	or	a,a
   0687 CA 5E 07           2992 	jp	z,00111$
   068A                    2993 00154$:
                           2994 ;	genCmpEq
                           2995 ; genCmpEq: left 2, right 2, result 0
   068A 79                 2996 	ld	a,c
   068B FE 70              2997 	cp	a,#0x70
   068D C2 95 06           2998 	jp	nz,00155$
   0690 78                 2999 	ld	a,b
   0691 B7                 3000 	or	a,a
   0692 CA 69 07           3001 	jp	z,00112$
   0695                    3002 00155$:
                           3003 ;	genCmpEq
                           3004 ; genCmpEq: left 2, right 2, result 0
   0695 79                 3005 	ld	a,c
   0696 FE 71              3006 	cp	a,#0x71
   0698 C2 A0 06           3007 	jp	nz,00156$
   069B 78                 3008 	ld	a,b
   069C B7                 3009 	or	a,a
   069D CA 74 07           3010 	jp	z,00113$
   06A0                    3011 00156$:
                           3012 ;	genCmpEq
                           3013 ; genCmpEq: left 2, right 2, result 0
   06A0 79                 3014 	ld	a,c
   06A1 FE 72              3015 	cp	a,#0x72
   06A3 C2 AB 06           3016 	jp	nz,00157$
   06A6 78                 3017 	ld	a,b
   06A7 B7                 3018 	or	a,a
   06A8 CA 7F 07           3019 	jp	z,00114$
   06AB                    3020 00157$:
                           3021 ;	genCmpEq
                           3022 ; genCmpEq: left 2, right 2, result 0
   06AB 79                 3023 	ld	a,c
   06AC FE 73              3024 	cp	a,#0x73
   06AE C2 B6 06           3025 	jp	nz,00158$
   06B1 78                 3026 	ld	a,b
   06B2 B7                 3027 	or	a,a
   06B3 CA 8A 07           3028 	jp	z,00115$
   06B6                    3029 00158$:
                           3030 ;	genCmpEq
                           3031 ; genCmpEq: left 2, right 2, result 0
   06B6 79                 3032 	ld	a,c
   06B7 FE 74              3033 	cp	a,#0x74
   06B9 C2 C1 06           3034 	jp	nz,00159$
   06BC 78                 3035 	ld	a,b
   06BD B7                 3036 	or	a,a
   06BE CA 95 07           3037 	jp	z,00116$
   06C1                    3038 00159$:
                           3039 ;	genCmpEq
                           3040 ; genCmpEq: left 2, right 2, result 0
   06C1 79                 3041 	ld	a,c
   06C2 FE 75              3042 	cp	a,#0x75
   06C4 C2 CC 06           3043 	jp	nz,00160$
   06C7 78                 3044 	ld	a,b
   06C8 B7                 3045 	or	a,a
   06C9 CA A0 07           3046 	jp	z,00117$
   06CC                    3047 00160$:
                           3048 ;	genCmpEq
                           3049 ; genCmpEq: left 2, right 2, result 0
   06CC 79                 3050 	ld	a,c
   06CD FE 76              3051 	cp	a,#0x76
   06CF C2 D7 06           3052 	jp	nz,00161$
   06D2 78                 3053 	ld	a,b
   06D3 B7                 3054 	or	a,a
   06D4 CA AB 07           3055 	jp	z,00118$
   06D7                    3056 00161$:
                           3057 ;	genCmpEq
                           3058 ; genCmpEq: left 2, right 2, result 0
   06D7 79                 3059 	ld	a,c
   06D8 FE 77              3060 	cp	a,#0x77
   06DA C2 E2 06           3061 	jp	nz,00162$
   06DD 78                 3062 	ld	a,b
   06DE B7                 3063 	or	a,a
   06DF CA B6 07           3064 	jp	z,00119$
   06E2                    3065 00162$:
                           3066 ;	genCmpEq
                           3067 ; genCmpEq: left 2, right 2, result 0
   06E2 79                 3068 	ld	a,c
   06E3 FE 78              3069 	cp	a,#0x78
   06E5 C2 ED 06           3070 	jp	nz,00163$
   06E8 78                 3071 	ld	a,b
   06E9 B7                 3072 	or	a,a
   06EA CA C1 07           3073 	jp	z,00120$
   06ED                    3074 00163$:
                           3075 ;	genGoto
   06ED C3 C9 07           3076 	jp	00122$
                           3077 ;	game.c 468
                           3078 ;	genLabel
   06F0                    3079 00101$:
                           3080 ;	genAssign
                           3081 ;	AOP_HL for _current_map
   06F0 21 04 19           3082 	ld	hl,#_current_map
   06F3 36 01              3083 	ld	(hl),#0x01
                           3084 ;	game.c 469
                           3085 ;	genCall
                           3086 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 CD 34 04           3087 	call	_map_init
                           3088 ;	game.c 470
                           3089 ;	genGoto
   06F8 C3 C9 07           3090 	jp	00122$
                           3091 ;	game.c 472
                           3092 ;	genLabel
   06FB                    3093 00102$:
                           3094 ;	genAssign
                           3095 ;	AOP_HL for _current_map
   06FB 21 04 19           3096 	ld	hl,#_current_map
   06FE 36 02              3097 	ld	(hl),#0x02
                           3098 ;	game.c 473
                           3099 ;	genCall
                           3100 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0700 CD 34 04           3101 	call	_map_init
                           3102 ;	game.c 474
                           3103 ;	genGoto
   0703 C3 C9 07           3104 	jp	00122$
                           3105 ;	game.c 476
                           3106 ;	genLabel
   0706                    3107 00103$:
                           3108 ;	genAssign
                           3109 ;	AOP_HL for _current_map
   0706 21 04 19           3110 	ld	hl,#_current_map
   0709 36 03              3111 	ld	(hl),#0x03
                           3112 ;	game.c 477
                           3113 ;	genCall
                           3114 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   070B CD 34 04           3115 	call	_map_init
                           3116 ;	game.c 478
                           3117 ;	genGoto
   070E C3 C9 07           3118 	jp	00122$
                           3119 ;	game.c 480
                           3120 ;	genLabel
   0711                    3121 00104$:
                           3122 ;	genAssign
                           3123 ;	AOP_HL for _current_map
   0711 21 04 19           3124 	ld	hl,#_current_map
   0714 36 04              3125 	ld	(hl),#0x04
                           3126 ;	game.c 481
                           3127 ;	genCall
                           3128 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0716 CD 34 04           3129 	call	_map_init
                           3130 ;	game.c 482
                           3131 ;	genGoto
   0719 C3 C9 07           3132 	jp	00122$
                           3133 ;	game.c 484
                           3134 ;	genLabel
   071C                    3135 00105$:
                           3136 ;	genAssign
                           3137 ;	AOP_HL for _current_map
   071C 21 04 19           3138 	ld	hl,#_current_map
   071F 36 05              3139 	ld	(hl),#0x05
                           3140 ;	game.c 485
                           3141 ;	genCall
                           3142 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0721 CD 34 04           3143 	call	_map_init
                           3144 ;	game.c 486
                           3145 ;	genGoto
   0724 C3 C9 07           3146 	jp	00122$
                           3147 ;	game.c 488
                           3148 ;	genLabel
   0727                    3149 00106$:
                           3150 ;	genAssign
                           3151 ;	AOP_HL for _current_map
   0727 21 04 19           3152 	ld	hl,#_current_map
   072A 36 06              3153 	ld	(hl),#0x06
                           3154 ;	game.c 489
                           3155 ;	genCall
                           3156 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   072C CD 34 04           3157 	call	_map_init
                           3158 ;	game.c 490
                           3159 ;	genGoto
   072F C3 C9 07           3160 	jp	00122$
                           3161 ;	game.c 492
                           3162 ;	genLabel
   0732                    3163 00107$:
                           3164 ;	genAssign
                           3165 ;	AOP_HL for _current_map
   0732 21 04 19           3166 	ld	hl,#_current_map
   0735 36 07              3167 	ld	(hl),#0x07
                           3168 ;	game.c 493
                           3169 ;	genCall
                           3170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0737 CD 34 04           3171 	call	_map_init
                           3172 ;	game.c 494
                           3173 ;	genGoto
   073A C3 C9 07           3174 	jp	00122$
                           3175 ;	game.c 496
                           3176 ;	genLabel
   073D                    3177 00108$:
                           3178 ;	genAssign
                           3179 ;	AOP_HL for _current_map
   073D 21 04 19           3180 	ld	hl,#_current_map
   0740 36 08              3181 	ld	(hl),#0x08
                           3182 ;	game.c 497
                           3183 ;	genCall
                           3184 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0742 CD 34 04           3185 	call	_map_init
                           3186 ;	game.c 498
                           3187 ;	genGoto
   0745 C3 C9 07           3188 	jp	00122$
                           3189 ;	game.c 500
                           3190 ;	genLabel
   0748                    3191 00109$:
                           3192 ;	genAssign
                           3193 ;	AOP_HL for _current_map
   0748 21 04 19           3194 	ld	hl,#_current_map
   074B 36 09              3195 	ld	(hl),#0x09
                           3196 ;	game.c 501
                           3197 ;	genCall
                           3198 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   074D CD 34 04           3199 	call	_map_init
                           3200 ;	game.c 502
                           3201 ;	genGoto
   0750 C3 C9 07           3202 	jp	00122$
                           3203 ;	game.c 504
                           3204 ;	genLabel
   0753                    3205 00110$:
                           3206 ;	genAssign
                           3207 ;	AOP_HL for _current_map
   0753 21 04 19           3208 	ld	hl,#_current_map
   0756 36 0A              3209 	ld	(hl),#0x0A
                           3210 ;	game.c 505
                           3211 ;	genCall
                           3212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0758 CD 34 04           3213 	call	_map_init
                           3214 ;	game.c 506
                           3215 ;	genGoto
   075B C3 C9 07           3216 	jp	00122$
                           3217 ;	game.c 508
                           3218 ;	genLabel
   075E                    3219 00111$:
                           3220 ;	genAssign
                           3221 ;	AOP_HL for _current_map
   075E 21 04 19           3222 	ld	hl,#_current_map
   0761 36 0B              3223 	ld	(hl),#0x0B
                           3224 ;	game.c 509
                           3225 ;	genCall
                           3226 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0763 CD 34 04           3227 	call	_map_init
                           3228 ;	game.c 510
                           3229 ;	genGoto
   0766 C3 C9 07           3230 	jp	00122$
                           3231 ;	game.c 512
                           3232 ;	genLabel
   0769                    3233 00112$:
                           3234 ;	genAssign
                           3235 ;	AOP_HL for _current_map
   0769 21 04 19           3236 	ld	hl,#_current_map
   076C 36 0C              3237 	ld	(hl),#0x0C
                           3238 ;	game.c 513
                           3239 ;	genCall
                           3240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076E CD 34 04           3241 	call	_map_init
                           3242 ;	game.c 514
                           3243 ;	genGoto
   0771 C3 C9 07           3244 	jp	00122$
                           3245 ;	game.c 516
                           3246 ;	genLabel
   0774                    3247 00113$:
                           3248 ;	genAssign
                           3249 ;	AOP_HL for _current_map
   0774 21 04 19           3250 	ld	hl,#_current_map
   0777 36 0D              3251 	ld	(hl),#0x0D
                           3252 ;	game.c 517
                           3253 ;	genCall
                           3254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0779 CD 34 04           3255 	call	_map_init
                           3256 ;	game.c 518
                           3257 ;	genGoto
   077C C3 C9 07           3258 	jp	00122$
                           3259 ;	game.c 520
                           3260 ;	genLabel
   077F                    3261 00114$:
                           3262 ;	genAssign
                           3263 ;	AOP_HL for _current_map
   077F 21 04 19           3264 	ld	hl,#_current_map
   0782 36 0E              3265 	ld	(hl),#0x0E
                           3266 ;	game.c 521
                           3267 ;	genCall
                           3268 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0784 CD 34 04           3269 	call	_map_init
                           3270 ;	game.c 522
                           3271 ;	genGoto
   0787 C3 C9 07           3272 	jp	00122$
                           3273 ;	game.c 524
                           3274 ;	genLabel
   078A                    3275 00115$:
                           3276 ;	genAssign
                           3277 ;	AOP_HL for _current_map
   078A 21 04 19           3278 	ld	hl,#_current_map
   078D 36 0F              3279 	ld	(hl),#0x0F
                           3280 ;	game.c 525
                           3281 ;	genCall
                           3282 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078F CD 34 04           3283 	call	_map_init
                           3284 ;	game.c 526
                           3285 ;	genGoto
   0792 C3 C9 07           3286 	jp	00122$
                           3287 ;	game.c 528
                           3288 ;	genLabel
   0795                    3289 00116$:
                           3290 ;	genAssign
                           3291 ;	AOP_HL for _current_map
   0795 21 04 19           3292 	ld	hl,#_current_map
   0798 36 10              3293 	ld	(hl),#0x10
                           3294 ;	game.c 529
                           3295 ;	genCall
                           3296 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079A CD 34 04           3297 	call	_map_init
                           3298 ;	game.c 530
                           3299 ;	genGoto
   079D C3 C9 07           3300 	jp	00122$
                           3301 ;	game.c 532
                           3302 ;	genLabel
   07A0                    3303 00117$:
                           3304 ;	genAssign
                           3305 ;	AOP_HL for _current_map
   07A0 21 04 19           3306 	ld	hl,#_current_map
   07A3 36 11              3307 	ld	(hl),#0x11
                           3308 ;	game.c 533
                           3309 ;	genCall
                           3310 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07A5 CD 34 04           3311 	call	_map_init
                           3312 ;	game.c 534
                           3313 ;	genGoto
   07A8 C3 C9 07           3314 	jp	00122$
                           3315 ;	game.c 536
                           3316 ;	genLabel
   07AB                    3317 00118$:
                           3318 ;	genAssign
                           3319 ;	AOP_HL for _current_map
   07AB 21 04 19           3320 	ld	hl,#_current_map
   07AE 36 12              3321 	ld	(hl),#0x12
                           3322 ;	game.c 537
                           3323 ;	genCall
                           3324 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B0 CD 34 04           3325 	call	_map_init
                           3326 ;	game.c 538
                           3327 ;	genGoto
   07B3 C3 C9 07           3328 	jp	00122$
                           3329 ;	game.c 540
                           3330 ;	genLabel
   07B6                    3331 00119$:
                           3332 ;	genAssign
                           3333 ;	AOP_HL for _current_map
   07B6 21 04 19           3334 	ld	hl,#_current_map
   07B9 36 13              3335 	ld	(hl),#0x13
                           3336 ;	game.c 541
                           3337 ;	genCall
                           3338 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BB CD 34 04           3339 	call	_map_init
                           3340 ;	game.c 542
                           3341 ;	genGoto
   07BE C3 C9 07           3342 	jp	00122$
                           3343 ;	game.c 544
                           3344 ;	genLabel
   07C1                    3345 00120$:
                           3346 ;	genAssign
                           3347 ;	AOP_HL for _current_map
   07C1 21 04 19           3348 	ld	hl,#_current_map
   07C4 36 14              3349 	ld	(hl),#0x14
                           3350 ;	game.c 545
                           3351 ;	genCall
                           3352 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C6 CD 34 04           3353 	call	_map_init
                           3354 ;	game.c 547
                           3355 ;	genLabel
   07C9                    3356 00122$:
                           3357 ;	genEndFunction
   07C9 E8 02              3358 	lda	sp,2(sp)
   07CB C9                 3359 	ret
   07CC                    3360 ___got_door_end:
                           3361 ;	game.c 552
                           3362 ;	genLabel
                           3363 ;	genFunction
                           3364 ;	---------------------------------
                           3365 ; Function is_ded
                           3366 ; ---------------------------------
   07CC                    3367 ___is_ded_start:
   07CC                    3368 _is_ded:
   07CC E8 F7              3369 	lda	sp,-9(sp)
                           3370 ;	game.c 558
                           3371 ;	genAssign
                           3372 ;	AOP_STK for 
   07CE F8 0B              3373 	lda	hl,11(sp)
   07D0 4E                 3374 	ld	c,(hl)
   07D1 23                 3375 	inc	hl
   07D2 46                 3376 	ld	b,(hl)
                           3377 ;	genPointerGet
   07D3 59                 3378 	ld	e,c
   07D4 50                 3379 	ld	d,b
   07D5 1A                 3380 	ld	a,(de)
   07D6 4F                 3381 	ld	c,a
   07D7 13                 3382 	inc	de
   07D8 1A                 3383 	ld	a,(de)
   07D9 47                 3384 	ld	b,a
                           3385 ;	genPlus
                           3386 ;	AOP_STK for _is_ded_sloc0_1_0
                           3387 ;	genPlusIncr
                           3388 ;	Can't optimise plus by inc, falling back to the normal way
   07DA 21 09 00           3389 	ld	hl,#0x0009
   07DD 09                 3390 	add	hl,bc
   07DE 7D                 3391 	ld	a,l
   07DF 54                 3392 	ld	d,h
   07E0 F8 03              3393 	lda	hl,3(sp)
                           3394 ;	genPointerGet
                           3395 ;	AOP_STK for _is_ded_sloc0_1_0
   07E2 22                 3396 	ld	(hl+),a
   07E3 72                 3397 	ld	(hl),d
   07E4 5F                 3398 	ld	e,a
   07E5 1A                 3399 	ld	a,(de)
                           3400 ;	genIfx
   07E6 B7                 3401 	or	a,a
   07E7 CA 09 08           3402 	jp	z,00102$
                           3403 ;	genPlus
                           3404 ;	AOP_STK for _is_ded_sloc0_1_0
                           3405 ;	genPlusIncr
                           3406 ;	Can't optimise plus by inc, falling back to the normal way
   07EA 21 0B 00           3407 	ld	hl,#0x000B
   07ED 09                 3408 	add	hl,bc
   07EE 7D                 3409 	ld	a,l
   07EF 54                 3410 	ld	d,h
   07F0 F8 03              3411 	lda	hl,3(sp)
                           3412 ;	genPointerGet
                           3413 ;	AOP_STK for _is_ded_sloc0_1_0
                           3414 ;	AOP_STK for _is_ded_sloc1_1_0
   07F2 22                 3415 	ld	(hl+),a
   07F3 72                 3416 	ld	(hl),d
   07F4 5F                 3417 	ld	e,a
   07F5 1A                 3418 	ld	a,(de)
   07F6 2B                 3419 	dec	hl
   07F7 2B                 3420 	dec	hl
                           3421 ;	genCmpEq
                           3422 ;	AOP_STK for _is_ded_sloc1_1_0
                           3423 ; genCmpEq: left 1, right 1, result 0
   07F8 77                 3424 	ld      (hl),a
                           3425 ; Removed redundent load
   07F9 FE 01              3426 	cp	a,#0x01
   07FB C2 09 08           3427 	jp	nz,00102$
   07FE 18 03              3428 	jr	00112$
   0800                    3429 00111$:
   0800 C3 09 08           3430 	jp	00102$
   0803                    3431 00112$:
                           3432 ;	game.c 559
                           3433 ;	genRet
   0803 11 00 00           3434 	ld	de,#0x0000
   0806 C3 9E 08           3435 	jp	00106$
                           3436 ;	genLabel
   0809                    3437 00102$:
                           3438 ;	game.c 564
                           3439 ;	genPointerGet
                           3440 ;	AOP_STK for _is_ded_sloc1_1_0
   0809 0A                 3441 	ld	a,(bc)
   080A F8 02              3442 	lda	hl,2(sp)
   080C 77                 3443 	ld	(hl),a
                           3444 ;	genCast
                           3445 ;	AOP_STK for _is_ded_sloc1_1_0
                           3446 ;	AOP_STK for _is_ded_sloc0_1_0
   080D 2A                 3447 	ld	a,(hl+)
   080E 22                 3448 	ld	(hl+),a
   080F 36 00              3449 	ld	(hl),#0x00
                           3450 ;	genRightShift
                           3451 ;	AOP_STK for _is_ded_sloc0_1_0
                           3452 ;	AOP_STK for _is_ded_sloc2_1_0
   0811 2B                 3453 	dec	hl
   0812 7E                 3454 	ld	a,(hl)
   0813 F8 00              3455 	lda	hl,0(sp)
   0815 77                 3456 	ld	(hl),a
   0816 F8 04              3457 	lda	hl,4(sp)
   0818 7E                 3458 	ld	a,(hl)
   0819 F8 01              3459 	lda	hl,1(sp)
   081B 77                 3460 	ld	(hl),a
   081C CB 3E              3461 	srl	(hl)
   081E 2B                 3462 	dec	hl
   081F CB 1E              3463 	rr	(hl)
   0821 23                 3464 	inc	hl
   0822 CB 3E              3465 	srl	(hl)
   0824 2B                 3466 	dec	hl
   0825 CB 1E              3467 	rr	(hl)
   0827 23                 3468 	inc	hl
   0828 CB 3E              3469 	srl	(hl)
   082A 2B                 3470 	dec	hl
   082B CB 1E              3471 	rr	(hl)
                           3472 ;	genMinus
                           3473 ;	AOP_STK for _is_ded_sloc2_1_0
                           3474 ;	AOP_STK for _is_ded_sloc0_1_0
   082D 5E                 3475 	ld	e,(hl)
   082E 23                 3476 	inc	hl
   082F 56                 3477 	ld	d,(hl)
   0830 21 01 00           3478 	ld	hl,#0x0001
   0833 7B                 3479 	ld	a,e
   0834 95                 3480 	sub	a,l
   0835 5F                 3481 	ld	e,a
   0836 7A                 3482 	ld	a,d
   0837 9C                 3483 	sbc	a,h
   0838 F8 04              3484 	lda	hl,4(sp)
   083A 32                 3485 	ld      (hl-),a
   083B 73                 3486 	ld	(hl),e
                           3487 ;	genCast
                           3488 ;	AOP_STK for _is_ded_sloc0_1_0
                           3489 ;	AOP_STK for _is_ded__x_1_1
   083C 7E                 3490 	ld	a,(hl)
   083D F8 08              3491 	lda	hl,8(sp)
   083F 77                 3492 	ld	(hl),a
                           3493 ;	game.c 565
                           3494 ;	genPlus
                           3495 ;	genPlusIncr
   0840 03                 3496 	inc	bc
                           3497 ;	genPointerGet
   0841 0A                 3498 	ld	a,(bc)
   0842 4F                 3499 	ld	c,a
                           3500 ;	genCast
                           3501 ; Removed redundent load
   0843 06 00              3502 	ld	b,#0x00
                           3503 ;	genRightShift
   0845 CB 38              3504 	srl	b
   0847 CB 19              3505 	rr	c
   0849 CB 38              3506 	srl	b
   084B CB 19              3507 	rr	c
   084D CB 38              3508 	srl	b
   084F CB 19              3509 	rr	c
                           3510 ;	genMinus
   0851 0B                 3511 	dec	bc
   0852 0B                 3512 	dec	bc
                           3513 ;	genCast
                           3514 ;	AOP_STK for _is_ded__y_1_1
   0853 2B                 3515 	dec	hl
   0854 71                 3516 	ld	(hl),c
                           3517 ;	game.c 570
                           3518 ;	genCast
                           3519 ;	AOP_STK for _is_ded__x_1_1
                           3520 ;	AOP_STK for _is_ded_map_position_1_1
   0855 23                 3521 	inc	hl
   0856 7E                 3522 	ld	a,(hl)
   0857 F8 05              3523 	lda	hl,5(sp)
   0859 22                 3524 	ld	(hl+),a
   085A 36 00              3525 	ld	(hl),#0x00
                           3526 ;	game.c 571
                           3527 ;	genCast
                           3528 ;	AOP_STK for _is_ded__y_1_1
   085C 23                 3529 	inc	hl
   085D 4E                 3530 	ld	c,(hl)
   085E 06 00              3531 	ld	b,#0x00
                           3532 ;	genMult
   0860 59                 3533 	ld	e,c
   0861 50                 3534 	ld	d,b
   0862 6B                 3535 	ld	l,e
   0863 62                 3536 	ld	h,d
   0864 29                 3537 	add	hl,hl
   0865 29                 3538 	add	hl,hl
   0866 19                 3539 	add	hl,de
   0867 29                 3540 	add	hl,hl
   0868 29                 3541 	add	hl,hl
   0869 4D                 3542 	ld	c,l
   086A 44                 3543 	ld	b,h
                           3544 ;	genPlus
                           3545 ;	AOP_STK for _is_ded_map_position_1_1
                           3546 ;	Can't optimise plus by inc, falling back to the normal way
   086B F8 05              3547 	lda	hl,5(sp)
   086D 2A                 3548 	ld	a,(hl+)
   086E 66                 3549 	ld	h,(hl)
   086F 6F                 3550 	ld	l,a
   0870 09                 3551 	add	hl,bc
   0871 7D                 3552 	ld	a,l
   0872 54                 3553 	ld	d,h
   0873 F8 05              3554 	lda	hl,5(sp)
   0875 22                 3555 	ld	(hl+),a
   0876 72                 3556 	ld	(hl),d
                           3557 ;	game.c 573
                           3558 ;	genPlus
                           3559 ;	AOP_STK for _is_ded_map_position_1_1
                           3560 ;	Can't optimise plus by inc, falling back to the normal way
   0877 11 05 19           3561 	ld	de,#_map
   087A 2B                 3562 	dec	hl
   087B 2A                 3563 	ld	a,(hl+)
   087C 66                 3564 	ld	h,(hl)
   087D 6F                 3565 	ld	l,a
   087E 19                 3566 	add	hl,de
   087F 4D                 3567 	ld	c,l
   0880 44                 3568 	ld	b,h
                           3569 ;	genPointerGet
   0881 0A                 3570 	ld	a,(bc)
   0882 4F                 3571 	ld	c,a
                           3572 ;	genCast
                           3573 ; Removed redundent load
   0883 06 00              3574 	ld	b,#0x00
                           3575 ;	genCmpEq
                           3576 ; genCmpEq: left 2, right 2, result 0
   0885 79                 3577 	ld	a,c
   0886 FE 0B              3578 	cp	a,#0x0B
   0888 C2 92 08           3579 	jp	nz,00117$
   088B 78                 3580 	ld	a,b
   088C B7                 3581 	or	a,a
   088D C2 9B 08           3582 	jp	nz,00105$
   0890 18 03              3583 	jr	00118$
   0892                    3584 00117$:
   0892 C3 9B 08           3585 	jp	00105$
   0895                    3586 00118$:
                           3587 ;	game.c 577
                           3588 ;	genRet
   0895 11 01 00           3589 	ld	de,#0x0001
   0898 C3 9E 08           3590 	jp	00106$
                           3591 ;	game.c 578
                           3592 ;	genLabel
   089B                    3593 00105$:
                           3594 ;	game.c 579
                           3595 ;	genRet
   089B 11 00 00           3596 	ld	de,#0x0000
                           3597 ;	genLabel
   089E                    3598 00106$:
                           3599 ;	genEndFunction
   089E E8 09              3600 	lda	sp,9(sp)
   08A0 C9                 3601 	ret
   08A1                    3602 ___is_ded_end:
                           3603 ;	game.c 584
                           3604 ;	genLabel
                           3605 ;	genFunction
                           3606 ;	---------------------------------
                           3607 ; Function ice_should_slide
                           3608 ; ---------------------------------
   08A1                    3609 ___ice_should_slide_start:
   08A1                    3610 _ice_should_slide:
                           3611 	
                           3612 ;	game.c 588
                           3613 ;	genPlus
                           3614 ;	AOP_STK for 
                           3615 ;	Can't optimise plus by inc, falling back to the normal way
   08A1 11 05 19           3616 	ld	de,#_map
   08A4 F8 02              3617 	lda	hl,2(sp)
   08A6 2A                 3618 	ld	a,(hl+)
   08A7 66                 3619 	ld	h,(hl)
   08A8 6F                 3620 	ld	l,a
   08A9 19                 3621 	add	hl,de
   08AA 4D                 3622 	ld	c,l
   08AB 44                 3623 	ld	b,h
                           3624 ;	genPointerGet
   08AC 0A                 3625 	ld	a,(bc)
   08AD 4F                 3626 	ld	c,a
                           3627 ;	genCast
                           3628 ; Removed redundent load
   08AE 06 00              3629 	ld	b,#0x00
                           3630 ;	genCmpEq
                           3631 ; genCmpEq: left 2, right 2, result 0
   08B0 79                 3632 	ld	a,c
   08B1 FE 0D              3633 	cp	a,#0x0D
   08B3 C2 BB 08           3634 	jp	nz,00110$
   08B6 78                 3635 	ld	a,b
   08B7 B7                 3636 	or	a,a
   08B8 CA CB 08           3637 	jp	z,00103$
   08BB                    3638 00110$:
                           3639 ;	genCmpEq
                           3640 ; genCmpEq: left 2, right 2, result 0
   08BB 79                 3641 	ld	a,c
   08BC FE 0E              3642 	cp	a,#0x0E
   08BE C2 C8 08           3643 	jp	nz,00111$
   08C1 78                 3644 	ld	a,b
   08C2 B7                 3645 	or	a,a
   08C3 C2 FB 08           3646 	jp	nz,00104$
   08C6 18 03              3647 	jr	00112$
   08C8                    3648 00111$:
   08C8 C3 FB 08           3649 	jp	00104$
   08CB                    3650 00112$:
                           3651 ;	genLabel
   08CB                    3652 00103$:
                           3653 ;	game.c 589
                           3654 ;	genIpush
                           3655 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3656 ;	AOP_STK for 
   08CB F8 04              3657 	lda	hl,4(sp)
   08CD 7E                 3658 	ld	a,(hl)
   08CE F5                 3659 	push	af
   08CF 33                 3660 	inc	sp
                           3661 ;	genIpush
                           3662 ;	AOP_STK for 
   08D0 2B                 3663 	dec	hl
   08D1 2B                 3664 	dec	hl
   08D2 2A                 3665 	ld	a,(hl+)
   08D3 66                 3666 	ld	h,(hl)
   08D4 6F                 3667 	ld	l,a
   08D5 E5                 3668 	push	hl
                           3669 ;	genCall
   08D6 CD 96 0A           3670 	call	__get_next_map_position
   08D9 42                 3671 	ld	b,d
   08DA 4B                 3672 	ld	c,e
   08DB E8 03              3673 	lda	sp,3(sp)
                           3674 ;	genAssign
                           3675 ;	(registers are the same)
                           3676 ;	game.c 590
                           3677 ;	genCmpEq
                           3678 ;	AOP_STK for 
                           3679 ; genCmpEq: left 2, right 2, result 0
   08DD F8 02              3680 	lda	hl,2(sp)
   08DF 7E                 3681 	ld	a,(hl)
   08E0 B9                 3682 	cp	c
   08E1 C2 EC 08           3683 	jp	nz,00113$
   08E4 23                 3684 	inc	hl
   08E5 7E                 3685 	ld	a,(hl)
   08E6 B8                 3686 	cp	b
   08E7 C2 F5 08           3687 	jp	nz,00102$
   08EA 18 03              3688 	jr	00114$
   08EC                    3689 00113$:
   08EC C3 F5 08           3690 	jp	00102$
   08EF                    3691 00114$:
                           3692 ;	game.c 591
                           3693 ;	genRet
   08EF 11 00 00           3694 	ld	de,#0x0000
   08F2 C3 FE 08           3695 	jp	00106$
                           3696 ;	genLabel
   08F5                    3697 00102$:
                           3698 ;	game.c 593
                           3699 ;	genRet
   08F5 11 01 00           3700 	ld	de,#0x0001
   08F8 C3 FE 08           3701 	jp	00106$
                           3702 ;	genLabel
   08FB                    3703 00104$:
                           3704 ;	game.c 597
                           3705 ;	genRet
   08FB 11 00 00           3706 	ld	de,#0x0000
                           3707 ;	genLabel
   08FE                    3708 00106$:
                           3709 ;	genEndFunction
                           3710 	
   08FE C9                 3711 	ret
   08FF                    3712 ___ice_should_slide_end:
                           3713 ;	game.c 600
                           3714 ;	genLabel
                           3715 ;	genFunction
                           3716 ;	---------------------------------
                           3717 ; Function dog1_power
                           3718 ; ---------------------------------
   08FF                    3719 ___dog1_power_start:
   08FF                    3720 _dog1_power:
   08FF E8 F8              3721 	lda	sp,-8(sp)
                           3722 ;	game.c 604
                           3723 ;	genAssign
                           3724 ;	AOP_HL for _player
   0901 21 B3 1A           3725 	ld	hl,#_player
   0904 4E                 3726 	ld	c,(hl)
   0905 23                 3727 	inc	hl
   0906 46                 3728 	ld	b,(hl)
                           3729 ;	genPlus
                           3730 ;	genPlusIncr
   0907 03                 3731 	inc	bc
   0908 03                 3732 	inc	bc
   0909 03                 3733 	inc	bc
   090A 03                 3734 	inc	bc
                           3735 ;	genPointerGet
   090B 0A                 3736 	ld	a,(bc)
   090C 4F                 3737 	ld	c,a
                           3738 ;	genAssign
                           3739 ;	AOP_HL for _player
                           3740 ;	AOP_STK for _dog1_power_sloc0_1_0
   090D 2B                 3741 	dec	hl
   090E 2A                 3742 	ld	a,(hl+)
   090F 5E                 3743 	ld	e,(hl)
   0910 F8 02              3744 	lda	hl,2(sp)
   0912 22                 3745 	ld	(hl+),a
   0913 73                 3746 	ld	(hl),e
                           3747 ;	genPlus
                           3748 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3749 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3750 ;	genPlusIncr
                           3751 ;	Can't optimise plus by inc, falling back to the normal way
   0914 2B                 3752 	dec	hl
   0915 5E                 3753 	ld	e,(hl)
   0916 23                 3754 	inc	hl
   0917 56                 3755 	ld	d,(hl)
   0918 21 0B 00           3756 	ld	hl,#0x000B
   091B 19                 3757 	add	hl,de
   091C 7D                 3758 	ld	a,l
   091D 54                 3759 	ld	d,h
   091E F8 00              3760 	lda	hl,0(sp)
                           3761 ;	genPointerGet
                           3762 ;	AOP_STK for _dog1_power_sloc1_1_0
   0920 22                 3763 	ld	(hl+),a
   0921 72                 3764 	ld	(hl),d
   0922 5F                 3765 	ld	e,a
   0923 1A                 3766 	ld	a,(de)
   0924 47                 3767 	ld	b,a
                           3768 ;	genIpush
                           3769 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0925 79                 3770 	ld	a,c
   0926 F5                 3771 	push	af
   0927 33                 3772 	inc	sp
                           3773 ;	genIpush
   0928 78                 3774 	ld	a,b
   0929 F5                 3775 	push	af
   092A 33                 3776 	inc	sp
                           3777 ;	genCall
   092B CD 00 00           3778 	call	_set_sprite_tile
   092E E8 02              3779 	lda	sp,2(sp)
                           3780 ;	game.c 606
                           3781 ;	genAssign
                           3782 ;	AOP_HL for _player
   0930 21 B3 1A           3783 	ld	hl,#_player
   0933 4E                 3784 	ld	c,(hl)
   0934 23                 3785 	inc	hl
   0935 46                 3786 	ld	b,(hl)
                           3787 ;	genPlus
                           3788 ;	genPlusIncr
   0936 03                 3789 	inc	bc
                           3790 ;	genPointerGet
   0937 0A                 3791 	ld	a,(bc)
   0938 4F                 3792 	ld	c,a
                           3793 ;	genAssign
                           3794 ;	AOP_HL for _player
                           3795 ;	AOP_STK for _dog1_power_sloc1_1_0
   0939 2B                 3796 	dec	hl
   093A 2A                 3797 	ld	a,(hl+)
   093B 5E                 3798 	ld	e,(hl)
   093C F8 00              3799 	lda	hl,0(sp)
   093E 22                 3800 	ld	(hl+),a
   093F 73                 3801 	ld	(hl),e
                           3802 ;	genPointerGet
                           3803 ;	AOP_STK for _dog1_power_sloc1_1_0
   0940 2B                 3804 	dec	hl
   0941 5E                 3805 	ld	e,(hl)
   0942 23                 3806 	inc	hl
   0943 56                 3807 	ld	d,(hl)
   0944 1A                 3808 	ld	a,(de)
   0945 47                 3809 	ld	b,a
                           3810 ;	genIpush
                           3811 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0946 79                 3812 	ld	a,c
   0947 F5                 3813 	push	af
   0948 33                 3814 	inc	sp
                           3815 ;	genIpush
   0949 78                 3816 	ld	a,b
   094A F5                 3817 	push	af
   094B 33                 3818 	inc	sp
                           3819 ;	genCall
   094C CD 6E 0C           3820 	call	_get_player_map_position
   094F 42                 3821 	ld	b,d
   0950 4B                 3822 	ld	c,e
   0951 E8 02              3823 	lda	sp,2(sp)
                           3824 ;	genAssign
                           3825 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0953 F8 06              3826 	lda	hl,6(sp)
   0955 71                 3827 	ld	(hl),c
   0956 23                 3828 	inc	hl
   0957 70                 3829 	ld	(hl),b
                           3830 ;	game.c 608
                           3831 ;	genAssign
                           3832 ;	AOP_HL for _player
   0958 21 B3 1A           3833 	ld	hl,#_player
   095B 4E                 3834 	ld	c,(hl)
   095C 23                 3835 	inc	hl
   095D 46                 3836 	ld	b,(hl)
                           3837 ;	genPlus
                           3838 ;	genPlusIncr
                           3839 ;	Can't optimise plus by inc, falling back to the normal way
   095E 79                 3840 	ld	a,c
   095F C6 08              3841 	add	a,#0x08
   0961 4F                 3842 	ld	c,a
   0962 78                 3843 	ld	a,b
   0963 CE 00              3844 	adc	a,#0x00
   0965 47                 3845 	ld	b,a
                           3846 ;	genPointerGet
   0966 0A                 3847 	ld	a,(bc)
                           3848 ;	genIpush
                           3849 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0967 4F                 3850 	ld	c,a
   0968 F5                 3851 	push	af
   0969 33                 3852 	inc	sp
                           3853 ;	genIpush
                           3854 ;	AOP_STK for _dog1_power_map_position_block_1_1
   096A F8 07              3855 	lda	hl,7(sp)
   096C 2A                 3856 	ld	a,(hl+)
   096D 66                 3857 	ld	h,(hl)
   096E 6F                 3858 	ld	l,a
   096F E5                 3859 	push	hl
                           3860 ;	genCall
   0970 CD 96 0A           3861 	call	__get_next_map_position
   0973 42                 3862 	ld	b,d
   0974 4B                 3863 	ld	c,e
   0975 E8 03              3864 	lda	sp,3(sp)
                           3865 ;	genAssign
                           3866 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0977 F8 06              3867 	lda	hl,6(sp)
   0979 71                 3868 	ld	(hl),c
   097A 23                 3869 	inc	hl
   097B 70                 3870 	ld	(hl),b
                           3871 ;	game.c 609
                           3872 ;	genAssign
                           3873 ;	AOP_HL for _player
   097C 21 B3 1A           3874 	ld	hl,#_player
   097F 4E                 3875 	ld	c,(hl)
   0980 23                 3876 	inc	hl
   0981 46                 3877 	ld	b,(hl)
                           3878 ;	genPlus
                           3879 ;	genPlusIncr
                           3880 ;	Can't optimise plus by inc, falling back to the normal way
   0982 79                 3881 	ld	a,c
   0983 C6 08              3882 	add	a,#0x08
   0985 4F                 3883 	ld	c,a
   0986 78                 3884 	ld	a,b
   0987 CE 00              3885 	adc	a,#0x00
   0989 47                 3886 	ld	b,a
                           3887 ;	genPointerGet
   098A 0A                 3888 	ld	a,(bc)
                           3889 ;	genIpush
                           3890 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   098B 4F                 3891 	ld	c,a
   098C F5                 3892 	push	af
   098D 33                 3893 	inc	sp
                           3894 ;	genIpush
                           3895 ;	AOP_STK for _dog1_power_map_position_block_1_1
   098E F8 07              3896 	lda	hl,7(sp)
   0990 2A                 3897 	ld	a,(hl+)
   0991 66                 3898 	ld	h,(hl)
   0992 6F                 3899 	ld	l,a
   0993 E5                 3900 	push	hl
                           3901 ;	genCall
   0994 CD 96 0A           3902 	call	__get_next_map_position
   0997 42                 3903 	ld	b,d
   0998 4B                 3904 	ld	c,e
   0999 E8 03              3905 	lda	sp,3(sp)
                           3906 ;	genAssign
                           3907 ;	AOP_STK for _dog1_power_map_position_next_1_1
   099B F8 04              3908 	lda	hl,4(sp)
   099D 71                 3909 	ld	(hl),c
   099E 23                 3910 	inc	hl
   099F 70                 3911 	ld	(hl),b
                           3912 ;	game.c 612
                           3913 ;	genPlus
                           3914 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3915 ;	Can't optimise plus by inc, falling back to the normal way
   09A0 11 05 19           3916 	ld	de,#_map
   09A3 23                 3917 	inc	hl
   09A4 2A                 3918 	ld	a,(hl+)
   09A5 66                 3919 	ld	h,(hl)
   09A6 6F                 3920 	ld	l,a
   09A7 19                 3921 	add	hl,de
   09A8 4D                 3922 	ld	c,l
   09A9 44                 3923 	ld	b,h
                           3924 ;	genPointerGet
                           3925 ;	AOP_STK for _dog1_power_sloc1_1_0
   09AA 0A                 3926 	ld	a,(bc)
   09AB F8 00              3927 	lda	hl,0(sp)
   09AD 77                 3928 	ld	(hl),a
                           3929 ;	genCast
                           3930 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3931 ;	AOP_STK for _dog1_power_sloc0_1_0
   09AE 2A                 3932 	ld	a,(hl+)
   09AF 23                 3933 	inc	hl
   09B0 22                 3934 	ld	(hl+),a
   09B1 36 00              3935 	ld	(hl),#0x00
                           3936 ;	genCmpEq
                           3937 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3938 ; genCmpEq: left 2, right 2, result 0
   09B3 2B                 3939 	dec	hl
   09B4 7E                 3940 	ld	a,(hl)
   09B5 FE 2D              3941 	cp	a,#0x2D
   09B7 C2 C2 09           3942 	jp	nz,00117$
   09BA 23                 3943 	inc	hl
   09BB 7E                 3944 	ld	a,(hl)
   09BC B7                 3945 	or	a,a
   09BD C2 66 0A           3946 	jp	nz,00109$
   09C0 18 03              3947 	jr	00118$
   09C2                    3948 00117$:
   09C2 C3 66 0A           3949 	jp	00109$
   09C5                    3950 00118$:
                           3951 ;	game.c 617
                           3952 ;	genIpush
                           3953 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09C5 C5                 3954 	push	bc
                           3955 ;	AOP_STK for _dog1_power_map_position_next_1_1
   09C6 F8 06              3956 	lda	hl,6(sp)
   09C8 2A                 3957 	ld	a,(hl+)
   09C9 66                 3958 	ld	h,(hl)
   09CA 6F                 3959 	ld	l,a
   09CB E5                 3960 	push	hl
                           3961 ;	genCall
   09CC CD 0E 0E           3962 	call	_can_move_to_map_pos
                           3963 ;	AOP_STK for _dog1_power_sloc1_1_0
   09CF F8 05              3964 	lda	hl,5(sp)
   09D1 72                 3965 	ld	(hl),d
   09D2 2B                 3966 	dec	hl
   09D3 73                 3967 	ld	(hl),e
   09D4 E8 02              3968 	lda	sp,2(sp)
   09D6 C1                 3969 	pop	bc
                           3970 ;	genCmpEq
                           3971 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3972 ; genCmpEq: left 2, right 2, result 0
   09D7 F8 00              3973 	lda	hl,0(sp)
   09D9 2A                 3974 	ld	a,(hl+)
   09DA B6                 3975 	or	a,(hl)
   09DB CA 66 0A           3976 	jp	z,00109$
   09DE                    3977 00119$:
                           3978 ;	game.c 623
                           3979 ;	genPlus
                           3980 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3981 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3982 ;	Can't optimise plus by inc, falling back to the normal way
   09DE 11 05 19           3983 	ld	de,#_map
   09E1 F8 04              3984 	lda	hl,4(sp)
   09E3 2A                 3985 	ld	a,(hl+)
   09E4 66                 3986 	ld	h,(hl)
   09E5 6F                 3987 	ld	l,a
   09E6 19                 3988 	add	hl,de
   09E7 7D                 3989 	ld	a,l
   09E8 54                 3990 	ld	d,h
   09E9 F8 00              3991 	lda	hl,0(sp)
                           3992 ;	genPointerGet
                           3993 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3994 ;	AOP_STK for _dog1_power_sloc0_1_0
   09EB 22                 3995 	ld	(hl+),a
   09EC 72                 3996 	ld	(hl),d
   09ED 5F                 3997 	ld	e,a
   09EE 1A                 3998 	ld	a,(de)
   09EF 23                 3999 	inc	hl
                           4000 ;	genCast
                           4001 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4002 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4003 ; Removed redundent load
   09F0 32                 4004 	ld      (hl-),a
   09F1 2B                 4005 	dec	hl
   09F2 22                 4006 	ld	(hl+),a
   09F3 36 00              4007 	ld	(hl),#0x00
                           4008 ;	genCmpLt
                           4009 ;	AOP_STK for _dog1_power_sloc1_1_0
   09F5 2B                 4010 	dec	hl
   09F6 7E                 4011 	ld	a,(hl)
   09F7 D6 0F              4012 	sub	a,#0x0F
   09F9 23                 4013 	inc	hl
   09FA 7E                 4014 	ld	a,(hl)
   09FB DE 00              4015 	sbc	a,#0x00
   09FD DA 2E 0A           4016 	jp	c,00104$
                           4017 ;	game.c 624
                           4018 ;	genCmpEq
                           4019 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4020 ; genCmpEq: left 2, right 2, result 0
   0A00 2B                 4021 	dec	hl
   0A01 7E                 4022 	ld	a,(hl)
   0A02 FE 2F              4023 	cp	a,#0x2F
   0A04 C2 0D 0A           4024 	jp	nz,00120$
   0A07 23                 4025 	inc	hl
   0A08 7E                 4026 	ld	a,(hl)
   0A09 B7                 4027 	or	a,a
   0A0A CA 2E 0A           4028 	jp	z,00104$
   0A0D                    4029 00120$:
                           4030 ;	game.c 625
                           4031 ;	genCmpEq
                           4032 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4033 ; genCmpEq: left 2, right 2, result 0
   0A0D F8 00              4034 	lda	hl,0(sp)
   0A0F 7E                 4035 	ld	a,(hl)
   0A10 FE 30              4036 	cp	a,#0x30
   0A12 C2 1B 0A           4037 	jp	nz,00121$
   0A15 23                 4038 	inc	hl
   0A16 7E                 4039 	ld	a,(hl)
   0A17 B7                 4040 	or	a,a
   0A18 CA 2E 0A           4041 	jp	z,00104$
   0A1B                    4042 00121$:
                           4043 ;	game.c 626
                           4044 ;	genCmpEq
                           4045 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4046 ; genCmpEq: left 2, right 2, result 0
   0A1B F8 00              4047 	lda	hl,0(sp)
   0A1D 7E                 4048 	ld	a,(hl)
   0A1E FE 2A              4049 	cp	a,#0x2A
   0A20 C2 2B 0A           4050 	jp	nz,00122$
   0A23 23                 4051 	inc	hl
   0A24 7E                 4052 	ld	a,(hl)
   0A25 B7                 4053 	or	a,a
   0A26 C2 66 0A           4054 	jp	nz,00109$
   0A29 18 03              4055 	jr	00123$
   0A2B                    4056 00122$:
   0A2B C3 66 0A           4057 	jp	00109$
   0A2E                    4058 00123$:
                           4059 ;	genLabel
   0A2E                    4060 00104$:
                           4061 ;	game.c 627
                           4062 ;	genAssign (pointer)
   0A2E 3E 2F              4063 	ld	a,#0x2F
   0A30 02                 4064 	ld	(bc),a
                           4065 ;	game.c 628
                           4066 ;	genIpush
                           4067 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A31 21 05 19           4068 	ld	hl,#_map
   0A34 E5                 4069 	push	hl
                           4070 ;	genIpush
   0A35 21 14 12           4071 	ld	hl,#0x1214
   0A38 E5                 4072 	push	hl
                           4073 ;	genIpush
   0A39 21 00 00           4074 	ld	hl,#0x0000
   0A3C E5                 4075 	push	hl
                           4076 ;	genCall
   0A3D CD 00 00           4077 	call	_set_bkg_tiles
   0A40 E8 06              4078 	lda	sp,6(sp)
                           4079 ;	game.c 629
                           4080 ;	genAssign
                           4081 ;	AOP_HL for _player
   0A42 21 B3 1A           4082 	ld	hl,#_player
   0A45 4E                 4083 	ld	c,(hl)
   0A46 23                 4084 	inc	hl
   0A47 46                 4085 	ld	b,(hl)
                           4086 ;	genPlus
                           4087 ;	genPlusIncr
                           4088 ;	Can't optimise plus by inc, falling back to the normal way
   0A48 79                 4089 	ld	a,c
   0A49 C6 08              4090 	add	a,#0x08
   0A4B 4F                 4091 	ld	c,a
   0A4C 78                 4092 	ld	a,b
   0A4D CE 00              4093 	adc	a,#0x00
   0A4F 47                 4094 	ld	b,a
                           4095 ;	genPointerGet
   0A50 0A                 4096 	ld	a,(bc)
   0A51 4F                 4097 	ld	c,a
                           4098 ;	genIpush
                           4099 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4100 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A52 F8 04              4101 	lda	hl,4(sp)
   0A54 2A                 4102 	ld	a,(hl+)
   0A55 66                 4103 	ld	h,(hl)
   0A56 6F                 4104 	ld	l,a
   0A57 E5                 4105 	push	hl
                           4106 ;	genIpush
   0A58 79                 4107 	ld	a,c
   0A59 F5                 4108 	push	af
   0A5A 33                 4109 	inc	sp
                           4110 ;	genIpush
                           4111 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A5B F8 09              4112 	lda	hl,9(sp)
   0A5D 2A                 4113 	ld	a,(hl+)
   0A5E 66                 4114 	ld	h,(hl)
   0A5F 6F                 4115 	ld	l,a
   0A60 E5                 4116 	push	hl
                           4117 ;	genCall
   0A61 CD 4A 0B           4118 	call	_dog1_power_apply
   0A64 E8 05              4119 	lda	sp,5(sp)
                           4120 ;	game.c 640
                           4121 ;	genLabel
   0A66                    4122 00109$:
                           4123 ;	game.c 645
                           4124 ;	genAssign
                           4125 ;	AOP_HL for _player
   0A66 21 B3 1A           4126 	ld	hl,#_player
   0A69 4E                 4127 	ld	c,(hl)
   0A6A 23                 4128 	inc	hl
   0A6B 46                 4129 	ld	b,(hl)
                           4130 ;	genPlus
                           4131 ;	genPlusIncr
   0A6C 03                 4132 	inc	bc
   0A6D 03                 4133 	inc	bc
                           4134 ;	genPointerGet
   0A6E 0A                 4135 	ld	a,(bc)
   0A6F 4F                 4136 	ld	c,a
                           4137 ;	genAssign
                           4138 ;	AOP_HL for _player
                           4139 ;	AOP_STK for _dog1_power_sloc1_1_0
   0A70 2B                 4140 	dec	hl
   0A71 2A                 4141 	ld	a,(hl+)
   0A72 5E                 4142 	ld	e,(hl)
   0A73 F8 00              4143 	lda	hl,0(sp)
   0A75 22                 4144 	ld	(hl+),a
   0A76 73                 4145 	ld	(hl),e
                           4146 ;	genPlus
                           4147 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4148 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4149 ;	genPlusIncr
                           4150 ;	Can't optimise plus by inc, falling back to the normal way
   0A77 2B                 4151 	dec	hl
   0A78 5E                 4152 	ld	e,(hl)
   0A79 23                 4153 	inc	hl
   0A7A 56                 4154 	ld	d,(hl)
   0A7B 21 0B 00           4155 	ld	hl,#0x000B
   0A7E 19                 4156 	add	hl,de
   0A7F 7D                 4157 	ld	a,l
   0A80 54                 4158 	ld	d,h
   0A81 F8 02              4159 	lda	hl,2(sp)
                           4160 ;	genPointerGet
                           4161 ;	AOP_STK for _dog1_power_sloc0_1_0
   0A83 22                 4162 	ld	(hl+),a
   0A84 72                 4163 	ld	(hl),d
   0A85 5F                 4164 	ld	e,a
   0A86 1A                 4165 	ld	a,(de)
   0A87 47                 4166 	ld	b,a
                           4167 ;	genIpush
                           4168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A88 79                 4169 	ld	a,c
   0A89 F5                 4170 	push	af
   0A8A 33                 4171 	inc	sp
                           4172 ;	genIpush
   0A8B 78                 4173 	ld	a,b
   0A8C F5                 4174 	push	af
   0A8D 33                 4175 	inc	sp
                           4176 ;	genCall
   0A8E CD 00 00           4177 	call	_set_sprite_tile
   0A91 E8 02              4178 	lda	sp,2(sp)
                           4179 ;	genLabel
   0A93                    4180 00110$:
                           4181 ;	genEndFunction
   0A93 E8 08              4182 	lda	sp,8(sp)
   0A95 C9                 4183 	ret
   0A96                    4184 ___dog1_power_end:
                           4185 ;	game.c 648
                           4186 ;	genLabel
                           4187 ;	genFunction
                           4188 ;	---------------------------------
                           4189 ; Function _get_next_map_position
                           4190 ; ---------------------------------
   0A96                    4191 ____get_next_map_position_start:
   0A96                    4192 __get_next_map_position:
   0A96 E8 FE              4193 	lda	sp,-2(sp)
                           4194 ;	game.c 649
                           4195 ;	genCmpLt
                           4196 ;	AOP_STK for 
   0A98 F8 06              4197 	lda	hl,6(sp)
   0A9A 7E                 4198 	ld	a,(hl)
   0A9B FE 01              4199 	cp	#0x01
   0A9D DA 42 0B           4200 	jp	c,00113$
                           4201 ;	genCmpGt
                           4202 ;	AOP_STK for 
   0AA0 3E 04              4203 	ld	a,#0x04
   0AA2 96                 4204 	sub	a,(hl)
   0AA3 DA 42 0B           4205 	jp	c,00113$
                           4206 ;	genMinus
                           4207 ;	AOP_STK for 
   0AA6 7E                 4208 	ld	a,(hl)
   0AA7 C6 FF              4209 	add	a,#0xFF
   0AA9 4F                 4210 	ld	c,a
                           4211 ;	genJumpTab
   0AAA 59                 4212 	ld	e,c
   0AAB 16 00              4213 	ld	d,#0x00
   0AAD 21 B4 0A           4214 	ld	hl,#00122$
   0AB0 19                 4215 	add	hl,de
   0AB1 19                 4216 	add	hl,de
   0AB2 19                 4217 	add	hl,de
   0AB3 E9                 4218 	jp	(hl)
   0AB4                    4219 00122$:
   0AB4 C3 C0 0A           4220 	jp	00103$
   0AB7 C3 DF 0A           4221 	jp	00106$
   0ABA C3 05 0B           4222 	jp	00109$
   0ABD C3 22 0B           4223 	jp	00112$
                           4224 ;	game.c 654
                           4225 ;	genLabel
   0AC0                    4226 00103$:
                           4227 ;	game.c 651
                           4228 ;	genCmpGt
                           4229 ;	AOP_STK for 
   0AC0 3E 14              4230 	ld	a,#0x14
   0AC2 F8 04              4231 	lda	hl,4(sp)
   0AC4 96                 4232 	sub	a,(hl)
   0AC5 3E 00              4233 	ld	a,#0x00
   0AC7 23                 4234 	inc	hl
   0AC8 9E                 4235 	sbc	a,(hl)
   0AC9 D2 42 0B           4236 	jp	nc,00113$
                           4237 ;	game.c 652
                           4238 ;	genMinus
                           4239 ;	AOP_STK for 
   0ACC 2B                 4240 	dec	hl
   0ACD 5E                 4241 	ld	e,(hl)
   0ACE 23                 4242 	inc	hl
   0ACF 56                 4243 	ld	d,(hl)
   0AD0 21 14 00           4244 	ld	hl,#0x0014
   0AD3 7B                 4245 	ld	a,e
   0AD4 95                 4246 	sub	a,l
   0AD5 5F                 4247 	ld	e,a
   0AD6 7A                 4248 	ld	a,d
   0AD7 9C                 4249 	sbc	a,h
   0AD8 F8 05              4250 	lda	hl,5(sp)
   0ADA 32                 4251 	ld      (hl-),a
   0ADB 73                 4252 	ld	(hl),e
                           4253 ;	game.c 654
                           4254 ;	genGoto
   0ADC C3 42 0B           4255 	jp	00113$
                           4256 ;	game.c 659
                           4257 ;	genLabel
   0ADF                    4258 00106$:
                           4259 ;	game.c 656
                           4260 ;	genPlus
                           4261 ;	AOP_STK for 
                           4262 ;	genPlusIncr
   0ADF F8 04              4263 	lda	hl,4(sp)
   0AE1 4E                 4264 	ld	c,(hl)
   0AE2 23                 4265 	inc	hl
   0AE3 46                 4266 	ld	b,(hl)
   0AE4 03                 4267 	inc	bc
                           4268 ;	genIpush
                           4269 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AE5 C5                 4270 	push	bc
   0AE6 21 14 00           4271 	ld	hl,#0x0014
   0AE9 E5                 4272 	push	hl
                           4273 ;	genIpush
   0AEA C5                 4274 	push	bc
                           4275 ;	genCall
   0AEB CD 00 00           4276 	call	__moduint_rrx_s
                           4277 ;	AOP_STK for __get_next_map_position_sloc0_1_0
   0AEE F8 07              4278 	lda	hl,7(sp)
   0AF0 72                 4279 	ld	(hl),d
   0AF1 2B                 4280 	dec	hl
   0AF2 73                 4281 	ld	(hl),e
   0AF3 E8 04              4282 	lda	sp,4(sp)
   0AF5 C1                 4283 	pop	bc
                           4284 ;	genCmpEq
                           4285 ;	AOP_STK for __get_next_map_position_sloc0_1_0
                           4286 ; genCmpEq: left 2, right 2, result 0
   0AF6 F8 00              4287 	lda	hl,0(sp)
   0AF8 2A                 4288 	ld	a,(hl+)
   0AF9 B6                 4289 	or	a,(hl)
   0AFA CA 42 0B           4290 	jp	z,00113$
   0AFD                    4291 00123$:
                           4292 ;	game.c 657
                           4293 ;	genAssign
                           4294 ;	(registers are the same)
                           4295 ;	genAssign
                           4296 ;	AOP_STK for 
   0AFD F8 04              4297 	lda	hl,4(sp)
   0AFF 71                 4298 	ld	(hl),c
   0B00 23                 4299 	inc	hl
   0B01 70                 4300 	ld	(hl),b
                           4301 ;	game.c 659
                           4302 ;	genGoto
   0B02 C3 42 0B           4303 	jp	00113$
                           4304 ;	game.c 664
                           4305 ;	genLabel
   0B05                    4306 00109$:
                           4307 ;	game.c 661
                           4308 ;	genCmpLt
                           4309 ;	AOP_STK for 
   0B05 F8 04              4310 	lda	hl,4(sp)
   0B07 7E                 4311 	ld	a,(hl)
   0B08 D6 54              4312 	sub	a,#0x54
   0B0A 23                 4313 	inc	hl
   0B0B 7E                 4314 	ld	a,(hl)
   0B0C DE 01              4315 	sbc	a,#0x01
   0B0E D2 42 0B           4316 	jp	nc,00113$
                           4317 ;	game.c 662
                           4318 ;	genPlus
                           4319 ;	AOP_STK for 
                           4320 ;	genPlusIncr
                           4321 ;	Can't optimise plus by inc, falling back to the normal way
   0B11 2B                 4322 	dec	hl
   0B12 5E                 4323 	ld	e,(hl)
   0B13 23                 4324 	inc	hl
   0B14 56                 4325 	ld	d,(hl)
   0B15 21 14 00           4326 	ld	hl,#0x0014
   0B18 19                 4327 	add	hl,de
   0B19 7D                 4328 	ld	a,l
   0B1A 54                 4329 	ld	d,h
   0B1B F8 04              4330 	lda	hl,4(sp)
   0B1D 22                 4331 	ld	(hl+),a
   0B1E 72                 4332 	ld	(hl),d
                           4333 ;	game.c 664
                           4334 ;	genGoto
   0B1F C3 42 0B           4335 	jp	00113$
                           4336 ;	game.c 670
                           4337 ;	genLabel
   0B22                    4338 00112$:
                           4339 ;	game.c 666
                           4340 ;	genIpush
                           4341 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B22 21 14 00           4342 	ld	hl,#0x0014
   0B25 E5                 4343 	push	hl
                           4344 ;	genIpush
                           4345 ;	AOP_STK for 
   0B26 F8 06              4346 	lda	hl,6(sp)
   0B28 2A                 4347 	ld	a,(hl+)
   0B29 66                 4348 	ld	h,(hl)
   0B2A 6F                 4349 	ld	l,a
   0B2B E5                 4350 	push	hl
                           4351 ;	genCall
   0B2C CD 00 00           4352 	call	__moduint_rrx_s
   0B2F 42                 4353 	ld	b,d
   0B30 4B                 4354 	ld	c,e
   0B31 E8 04              4355 	lda	sp,4(sp)
                           4356 ;	genCmpEq
                           4357 ; genCmpEq: left 2, right 2, result 0
   0B33 79                 4358 	ld	a,c
   0B34 B0                 4359 	or	a,b
   0B35 CA 42 0B           4360 	jp	z,00113$
   0B38                    4361 00124$:
                           4362 ;	game.c 667
                           4363 ;	genMinus
                           4364 ;	AOP_STK for 
   0B38 F8 04              4365 	lda	hl,4(sp)
   0B3A 5E                 4366 	ld	e,(hl)
   0B3B 23                 4367 	inc	hl
   0B3C 56                 4368 	ld	d,(hl)
   0B3D 1B                 4369 	dec	de
   0B3E 2B                 4370 	dec	hl
   0B3F 73                 4371 	ld	(hl),e
   0B40 23                 4372 	inc	hl
   0B41 72                 4373 	ld	(hl),d
                           4374 ;	game.c 671
                           4375 ;	genLabel
   0B42                    4376 00113$:
                           4377 ;	game.c 672
                           4378 ;	genRet
                           4379 ;	AOP_STK for 
   0B42 F8 04              4380 	lda	hl,4(sp)
   0B44 5E                 4381 	ld	e,(hl)
   0B45 23                 4382 	inc	hl
   0B46 56                 4383 	ld	d,(hl)
                           4384 ;	genLabel
   0B47                    4385 00114$:
                           4386 ;	genEndFunction
   0B47 E8 02              4387 	lda	sp,2(sp)
   0B49 C9                 4388 	ret
   0B4A                    4389 ____get_next_map_position_end:
                           4390 ;	game.c 675
                           4391 ;	genLabel
                           4392 ;	genFunction
                           4393 ;	---------------------------------
                           4394 ; Function dog1_power_apply
                           4395 ; ---------------------------------
   0B4A                    4396 ___dog1_power_apply_start:
   0B4A                    4397 _dog1_power_apply:
   0B4A E8 FD              4398 	lda	sp,-3(sp)
                           4399 ;	game.c 681
                           4400 ;	genIpush
                           4401 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B4C 21 14 00           4402 	ld	hl,#0x0014
   0B4F E5                 4403 	push	hl
                           4404 ;	genIpush
                           4405 ;	AOP_STK for 
   0B50 F8 07              4406 	lda	hl,7(sp)
   0B52 2A                 4407 	ld	a,(hl+)
   0B53 66                 4408 	ld	h,(hl)
   0B54 6F                 4409 	ld	l,a
   0B55 E5                 4410 	push	hl
                           4411 ;	genCall
   0B56 CD 00 00           4412 	call	__divuint_rrx_s
   0B59 42                 4413 	ld	b,d
   0B5A 4B                 4414 	ld	c,e
   0B5B E8 04              4415 	lda	sp,4(sp)
                           4416 ;	genLeftShift
   0B5D 3E 04              4417 	ld	a,#0x03+1
   0B5F 18 04              4418 	jr	00122$
   0B61                    4419 00121$:
   0B61 CB 21              4420 	sla	c
   0B63 CB 10              4421 	rl	b
   0B65                    4422 00122$:
   0B65 3D                 4423 	dec	a
   0B66 20 F9              4424 	jr	nz,00121$
                           4425 ;	genPlus
                           4426 ;	genPlusIncr
                           4427 ;	Can't optimise plus by inc, falling back to the normal way
   0B68 79                 4428 	ld	a,c
   0B69 C6 10              4429 	add	a,#0x10
   0B6B 4F                 4430 	ld	c,a
   0B6C 78                 4431 	ld	a,b
   0B6D CE 00              4432 	adc	a,#0x00
   0B6F 47                 4433 	ld	b,a
                           4434 ;	genCast
                           4435 ;	AOP_STK for _dog1_power_apply_y_1_1
   0B70 F8 02              4436 	lda	hl,2(sp)
   0B72 71                 4437 	ld	(hl),c
                           4438 ;	game.c 682
                           4439 ;	genIpush
                           4440 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B73 21 14 00           4441 	ld	hl,#0x0014
   0B76 E5                 4442 	push	hl
                           4443 ;	genIpush
                           4444 ;	AOP_STK for 
   0B77 F8 07              4445 	lda	hl,7(sp)
   0B79 2A                 4446 	ld	a,(hl+)
   0B7A 66                 4447 	ld	h,(hl)
   0B7B 6F                 4448 	ld	l,a
   0B7C E5                 4449 	push	hl
                           4450 ;	genCall
   0B7D CD 00 00           4451 	call	__moduint_rrx_s
   0B80 4A                 4452 	ld	c,d
   0B81 43                 4453 	ld	b,e
   0B82 E8 04              4454 	lda	sp,4(sp)
                           4455 ;	genLeftShift
   0B84 3E 04              4456 	ld	a,#0x03+1
   0B86 18 04              4457 	jr	00124$
   0B88                    4458 00123$:
   0B88 CB 20              4459 	sla	b
   0B8A CB 11              4460 	rl	c
   0B8C                    4461 00124$:
   0B8C 3D                 4462 	dec	a
   0B8D 20 F9              4463 	jr	nz,00123$
                           4464 ;	genPlus
                           4465 ;	genPlusIncr
                           4466 ;	Can't optimise plus by inc, falling back to the normal way
   0B8F 78                 4467 	ld	a,b
   0B90 C6 08              4468 	add	a,#0x08
   0B92 47                 4469 	ld	b,a
   0B93 79                 4470 	ld	a,c
   0B94 CE 00              4471 	adc	a,#0x00
   0B96 4F                 4472 	ld	c,a
                           4473 ;	genCast
   0B97 48                 4474 	ld	c,b
                           4475 ;	game.c 683
                           4476 ;	genIpush
                           4477 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B98 C5                 4478 	push	bc
   0B99 21 05 0F           4479 	ld	hl,#0x0F05
   0B9C E5                 4480 	push	hl
                           4481 ;	genCall
   0B9D CD 00 00           4482 	call	_set_sprite_tile
   0BA0 E8 02              4483 	lda	sp,2(sp)
   0BA2 E1                 4484 	pop	hl
   0BA3 4D                 4485 	ld	c,l
                           4486 ;	game.c 686
                           4487 ;	genAssign
                           4488 ;	AOP_STK for _dog1_power_apply_i_1_1
   0BA4 F8 01              4489 	lda	hl,1(sp)
   0BA6 36 04              4490 	ld	(hl),#0x04
                           4491 ;	game.c 687
                           4492 ;	genIpush
                           4493 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BA8 C5                 4494 	push	bc
                           4495 ;	AOP_STK for _dog1_power_apply_y_1_1
   0BA9 23                 4496 	inc	hl
   0BAA 7E                 4497 	ld	a,(hl)
   0BAB F5                 4498 	push	af
   0BAC 33                 4499 	inc	sp
                           4500 ;	genIpush
   0BAD 79                 4501 	ld	a,c
   0BAE F5                 4502 	push	af
   0BAF 33                 4503 	inc	sp
                           4504 ;	genIpush
   0BB0 3E 05              4505 	ld	a,#0x05
   0BB2 F5                 4506 	push	af
   0BB3 33                 4507 	inc	sp
                           4508 ;	genCall
   0BB4 CD 00 00           4509 	call	_move_sprite
   0BB7 E8 03              4510 	lda	sp,3(sp)
   0BB9 E1                 4511 	pop	hl
   0BBA 4D                 4512 	ld	c,l
                           4513 ;	game.c 689
                           4514 ;	genLabel
   0BBB                    4515 00106$:
                           4516 ;	genCmpEq
                           4517 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4518 ; genCmpEq: left 1, right 1, result 0
   0BBB F8 01              4519 	lda	hl,1(sp)
   0BBD 7E                 4520 	ld	a,(hl)
   0BBE B7                 4521 	or	a,a
   0BBF CA 25 0C           4522 	jp	z,00108$
   0BC2                    4523 00125$:
                           4524 ;	game.c 690
                           4525 ;	genCmpLt
                           4526 ;	AOP_STK for 
   0BC2 F8 07              4527 	lda	hl,7(sp)
   0BC4 7E                 4528 	ld	a,(hl)
   0BC5 FE 01              4529 	cp	#0x01
   0BC7 DA FF 0B           4530 	jp	c,00105$
                           4531 ;	genCmpGt
                           4532 ;	AOP_STK for 
   0BCA 3E 04              4533 	ld	a,#0x04
   0BCC 96                 4534 	sub	a,(hl)
   0BCD DA FF 0B           4535 	jp	c,00105$
                           4536 ;	genMinus
                           4537 ;	AOP_STK for 
   0BD0 7E                 4538 	ld	a,(hl)
   0BD1 C6 FF              4539 	add	a,#0xFF
   0BD3 47                 4540 	ld	b,a
                           4541 ;	genJumpTab
   0BD4 58                 4542 	ld	e,b
   0BD5 16 00              4543 	ld	d,#0x00
   0BD7 21 DE 0B           4544 	ld	hl,#00126$
   0BDA 19                 4545 	add	hl,de
   0BDB 19                 4546 	add	hl,de
   0BDC 19                 4547 	add	hl,de
   0BDD E9                 4548 	jp	(hl)
   0BDE                    4549 00126$:
   0BDE C3 EA 0B           4550 	jp	00101$
   0BE1 C3 F1 0B           4551 	jp	00102$
   0BE4 C3 F6 0B           4552 	jp	00103$
   0BE7 C3 FD 0B           4553 	jp	00104$
                           4554 ;	game.c 692
                           4555 ;	genLabel
   0BEA                    4556 00101$:
                           4557 ;	genMinus
                           4558 ;	AOP_STK for _dog1_power_apply_y_1_1
   0BEA F8 02              4559 	lda	hl,2(sp)
   0BEC 35                 4560 	dec	(hl)
   0BED 35                 4561 	dec	(hl)
                           4562 ;	game.c 693
                           4563 ;	genGoto
   0BEE C3 FF 0B           4564 	jp	00105$
                           4565 ;	game.c 695
                           4566 ;	genLabel
   0BF1                    4567 00102$:
                           4568 ;	genPlus
                           4569 ;	genPlusIncr
                           4570 ; Removed redundent load
   0BF1 0C                 4571 	inc	c
   0BF2 0C                 4572 	inc	c
                           4573 ;	game.c 696
                           4574 ;	genGoto
   0BF3 C3 FF 0B           4575 	jp	00105$
                           4576 ;	game.c 698
                           4577 ;	genLabel
   0BF6                    4578 00103$:
                           4579 ;	genPlus
                           4580 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4581 ;	genPlusIncr
   0BF6 F8 02              4582 	lda	hl,2(sp)
   0BF8 34                 4583 	inc	(hl)
   0BF9 34                 4584 	inc	(hl)
                           4585 ;	game.c 699
                           4586 ;	genGoto
   0BFA C3 FF 0B           4587 	jp	00105$
                           4588 ;	game.c 701
                           4589 ;	genLabel
   0BFD                    4590 00104$:
                           4591 ;	genMinus
   0BFD 0D                 4592 	dec	c
   0BFE 0D                 4593 	dec	c
                           4594 ;	game.c 703
                           4595 ;	genLabel
   0BFF                    4596 00105$:
                           4597 ;	game.c 704
                           4598 ;	genIpush
                           4599 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BFF C5                 4600 	push	bc
   0C00 3E 02              4601 	ld	a,#0x02
   0C02 F5                 4602 	push	af
   0C03 33                 4603 	inc	sp
                           4604 ;	genCall
   0C04 CD 00 00           4605 	call	_performantDelay
   0C07 E8 01              4606 	lda	sp,1(sp)
   0C09 E1                 4607 	pop	hl
   0C0A 4D                 4608 	ld	c,l
                           4609 ;	game.c 705
                           4610 ;	genIpush
                           4611 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C0B C5                 4612 	push	bc
                           4613 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C0C F8 04              4614 	lda	hl,4(sp)
   0C0E 7E                 4615 	ld	a,(hl)
   0C0F F5                 4616 	push	af
   0C10 33                 4617 	inc	sp
                           4618 ;	genIpush
   0C11 79                 4619 	ld	a,c
   0C12 F5                 4620 	push	af
   0C13 33                 4621 	inc	sp
                           4622 ;	genIpush
   0C14 3E 05              4623 	ld	a,#0x05
   0C16 F5                 4624 	push	af
   0C17 33                 4625 	inc	sp
                           4626 ;	genCall
   0C18 CD 00 00           4627 	call	_move_sprite
   0C1B E8 03              4628 	lda	sp,3(sp)
   0C1D E1                 4629 	pop	hl
   0C1E 4D                 4630 	ld	c,l
                           4631 ;	game.c 706
                           4632 ;	genMinus
                           4633 ;	AOP_STK for _dog1_power_apply_i_1_1
   0C1F F8 01              4634 	lda	hl,1(sp)
   0C21 35                 4635 	dec	(hl)
                           4636 ;	genGoto
   0C22 C3 BB 0B           4637 	jp	00106$
                           4638 ;	genLabel
   0C25                    4639 00108$:
                           4640 ;	game.c 708
                           4641 ;	genPlus
                           4642 ;	AOP_STK for 
                           4643 ;	Can't optimise plus by inc, falling back to the normal way
   0C25 11 05 19           4644 	ld	de,#_map
   0C28 F8 08              4645 	lda	hl,8(sp)
   0C2A 2A                 4646 	ld	a,(hl+)
   0C2B 66                 4647 	ld	h,(hl)
   0C2C 6F                 4648 	ld	l,a
   0C2D 19                 4649 	add	hl,de
   0C2E 4D                 4650 	ld	c,l
   0C2F 44                 4651 	ld	b,h
                           4652 ;	genPointerGet
                           4653 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0C30 0A                 4654 	ld	a,(bc)
   0C31 F8 00              4655 	lda	hl,0(sp)
                           4656 ;	genCmpEq
                           4657 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4658 ; genCmpEq: left 1, right 1, result 0
   0C33 77                 4659 	ld      (hl),a
                           4660 ; Removed redundent load
   0C34 FE 0B              4661 	cp	a,#0x0B
   0C36 CA 44 0C           4662 	jp	z,00109$
   0C39                    4663 00127$:
                           4664 ;	genCmpEq
                           4665 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4666 ; genCmpEq: left 1, right 1, result 0
   0C39 F8 00              4667 	lda	hl,0(sp)
   0C3B 7E                 4668 	ld	a,(hl)
   0C3C FE 0C              4669 	cp	a,#0x0C
   0C3E CA 4D 0C           4670 	jp	z,00112$
   0C41                    4671 00128$:
                           4672 ;	genGoto
   0C41 C3 4A 0C           4673 	jp	00111$
                           4674 ;	game.c 710
                           4675 ;	genLabel
   0C44                    4676 00109$:
                           4677 ;	genAssign (pointer)
   0C44 3E 30              4678 	ld	a,#0x30
   0C46 02                 4679 	ld	(bc),a
                           4680 ;	game.c 711
                           4681 ;	genGoto
   0C47 C3 4D 0C           4682 	jp	00112$
                           4683 ;	game.c 715
                           4684 ;	genLabel
   0C4A                    4685 00111$:
                           4686 ;	genAssign (pointer)
   0C4A 3E 2D              4687 	ld	a,#0x2D
   0C4C 02                 4688 	ld	(bc),a
                           4689 ;	game.c 717
                           4690 ;	genLabel
   0C4D                    4691 00112$:
                           4692 ;	game.c 718
                           4693 ;	genIpush
                           4694 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C4D 21 05 19           4695 	ld	hl,#_map
   0C50 E5                 4696 	push	hl
                           4697 ;	genIpush
   0C51 21 14 12           4698 	ld	hl,#0x1214
   0C54 E5                 4699 	push	hl
                           4700 ;	genIpush
   0C55 21 00 00           4701 	ld	hl,#0x0000
   0C58 E5                 4702 	push	hl
                           4703 ;	genCall
   0C59 CD 00 00           4704 	call	_set_bkg_tiles
   0C5C E8 06              4705 	lda	sp,6(sp)
                           4706 ;	game.c 719
                           4707 ;	genIpush
                           4708 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C5E 21 00 00           4709 	ld	hl,#0x0000
   0C61 E5                 4710 	push	hl
                           4711 ;	genIpush
   0C62 3E 05              4712 	ld	a,#0x05
   0C64 F5                 4713 	push	af
   0C65 33                 4714 	inc	sp
                           4715 ;	genCall
   0C66 CD 00 00           4716 	call	_move_sprite
   0C69 E8 03              4717 	lda	sp,3(sp)
                           4718 ;	genLabel
   0C6B                    4719 00113$:
                           4720 ;	genEndFunction
   0C6B E8 03              4721 	lda	sp,3(sp)
   0C6D C9                 4722 	ret
   0C6E                    4723 ___dog1_power_apply_end:
                           4724 ;	game.c 725
                           4725 ;	genLabel
                           4726 ;	genFunction
                           4727 ;	---------------------------------
                           4728 ; Function get_player_map_position
                           4729 ; ---------------------------------
   0C6E                    4730 ___get_player_map_position_start:
   0C6E                    4731 _get_player_map_position:
   0C6E E8 FC              4732 	lda	sp,-4(sp)
                           4733 ;	game.c 733
                           4734 ;	genCast
                           4735 ;	AOP_STK for 
   0C70 F8 06              4736 	lda	hl,6(sp)
   0C72 4E                 4737 	ld	c,(hl)
   0C73 06 00              4738 	ld	b,#0x00
                           4739 ;	genRightShift
   0C75 CB 38              4740 	srl	b
   0C77 CB 19              4741 	rr	c
   0C79 CB 38              4742 	srl	b
   0C7B CB 19              4743 	rr	c
   0C7D CB 38              4744 	srl	b
   0C7F CB 19              4745 	rr	c
                           4746 ;	genMinus
   0C81 0B                 4747 	dec	bc
                           4748 ;	genCast
                           4749 ;	AOP_STK for _get_player_map_position__x_1_1
   0C82 F8 03              4750 	lda	hl,3(sp)
   0C84 71                 4751 	ld	(hl),c
                           4752 ;	game.c 734
                           4753 ;	genCast
                           4754 ;	AOP_STK for 
   0C85 F8 07              4755 	lda	hl,7(sp)
   0C87 46                 4756 	ld	b,(hl)
   0C88 0E 00              4757 	ld	c,#0x00
                           4758 ;	genRightShift
   0C8A CB 39              4759 	srl	c
   0C8C CB 18              4760 	rr	b
   0C8E CB 39              4761 	srl	c
   0C90 CB 18              4762 	rr	b
   0C92 CB 39              4763 	srl	c
   0C94 CB 18              4764 	rr	b
                           4765 ;	genMinus
   0C96 58                 4766 	ld	e,b
   0C97 51                 4767 	ld	d,c
   0C98 1B                 4768 	dec	de
   0C99 1B                 4769 	dec	de
   0C9A 43                 4770 	ld	b,e
   0C9B 4A                 4771 	ld	c,d
                           4772 ;	genCast
                           4773 ;	AOP_STK for _get_player_map_position__y_1_1
   0C9C F8 02              4774 	lda	hl,2(sp)
   0C9E 70                 4775 	ld	(hl),b
                           4776 ;	game.c 738
                           4777 ;	genCast
                           4778 ;	AOP_STK for _get_player_map_position__x_1_1
                           4779 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0C9F 23                 4780 	inc	hl
   0CA0 7E                 4781 	ld	a,(hl)
   0CA1 F8 00              4782 	lda	hl,0(sp)
   0CA3 22                 4783 	ld	(hl+),a
   0CA4 36 00              4784 	ld	(hl),#0x00
                           4785 ;	game.c 739
                           4786 ;	genCast
                           4787 ;	AOP_STK for _get_player_map_position__y_1_1
   0CA6 23                 4788 	inc	hl
   0CA7 4E                 4789 	ld	c,(hl)
   0CA8 06 00              4790 	ld	b,#0x00
                           4791 ;	genMult
   0CAA 59                 4792 	ld	e,c
   0CAB 50                 4793 	ld	d,b
   0CAC 6B                 4794 	ld	l,e
   0CAD 62                 4795 	ld	h,d
   0CAE 29                 4796 	add	hl,hl
   0CAF 29                 4797 	add	hl,hl
   0CB0 19                 4798 	add	hl,de
   0CB1 29                 4799 	add	hl,hl
   0CB2 29                 4800 	add	hl,hl
   0CB3 4D                 4801 	ld	c,l
   0CB4 44                 4802 	ld	b,h
                           4803 ;	genPlus
                           4804 ;	AOP_STK for _get_player_map_position_map_position_1_1
                           4805 ;	Can't optimise plus by inc, falling back to the normal way
   0CB5 F8 00              4806 	lda	hl,0(sp)
   0CB7 2A                 4807 	ld	a,(hl+)
   0CB8 66                 4808 	ld	h,(hl)
   0CB9 6F                 4809 	ld	l,a
   0CBA 09                 4810 	add	hl,bc
   0CBB 7D                 4811 	ld	a,l
   0CBC 54                 4812 	ld	d,h
   0CBD F8 00              4813 	lda	hl,0(sp)
   0CBF 22                 4814 	ld	(hl+),a
   0CC0 72                 4815 	ld	(hl),d
                           4816 ;	game.c 741
                           4817 ;	genRet
                           4818 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0CC1 2B                 4819 	dec	hl
   0CC2 5E                 4820 	ld	e,(hl)
   0CC3 23                 4821 	inc	hl
   0CC4 56                 4822 	ld	d,(hl)
                           4823 ;	genLabel
   0CC5                    4824 00101$:
                           4825 ;	genEndFunction
   0CC5 E8 04              4826 	lda	sp,4(sp)
   0CC7 C9                 4827 	ret
   0CC8                    4828 ___get_player_map_position_end:
                           4829 ;	game.c 744
                           4830 ;	genLabel
                           4831 ;	genFunction
                           4832 ;	---------------------------------
                           4833 ; Function player_input
                           4834 ; ---------------------------------
   0CC8                    4835 ___player_input_start:
   0CC8                    4836 _player_input:
   0CC8 E8 FB              4837 	lda	sp,-5(sp)
                           4838 ;	game.c 747
                           4839 ;	genAssign
                           4840 ;	AOP_STK for 
   0CCA F8 07              4841 	lda	hl,7(sp)
   0CCC 4E                 4842 	ld	c,(hl)
   0CCD 23                 4843 	inc	hl
   0CCE 46                 4844 	ld	b,(hl)
                           4845 ;	genPointerGet
                           4846 ;	AOP_STK for _player_input_sloc0_1_0
   0CCF 59                 4847 	ld	e,c
   0CD0 50                 4848 	ld	d,b
   0CD1 1A                 4849 	ld	a,(de)
   0CD2 F8 03              4850 	lda	hl,3(sp)
   0CD4 77                 4851 	ld	(hl),a
   0CD5 13                 4852 	inc	de
   0CD6 1A                 4853 	ld	a,(de)
   0CD7 23                 4854 	inc	hl
                           4855 ;	genPlus
                           4856 ;	AOP_STK for _player_input_sloc0_1_0
                           4857 ;	AOP_STK for _player_input_sloc1_1_0
                           4858 ;	genPlusIncr
                           4859 ;	Can't optimise plus by inc, falling back to the normal way
   0CD8 32                 4860 	ld      (hl-),a
   0CD9 5E                 4861 	ld	e,(hl)
   0CDA 23                 4862 	inc	hl
   0CDB 56                 4863 	ld	d,(hl)
   0CDC 21 0A 00           4864 	ld	hl,#0x000A
   0CDF 19                 4865 	add	hl,de
   0CE0 7D                 4866 	ld	a,l
   0CE1 54                 4867 	ld	d,h
   0CE2 F8 01              4868 	lda	hl,1(sp)
                           4869 ;	genPointerGet
                           4870 ;	AOP_STK for _player_input_sloc1_1_0
                           4871 ;	AOP_STK for _player_input_sloc0_1_0
   0CE4 22                 4872 	ld	(hl+),a
   0CE5 72                 4873 	ld	(hl),d
   0CE6 5F                 4874 	ld	e,a
   0CE7 1A                 4875 	ld	a,(de)
   0CE8 23                 4876 	inc	hl
                           4877 ;	genCmpEq
                           4878 ;	AOP_STK for _player_input_sloc0_1_0
                           4879 ; genCmpEq: left 1, right 1, result 0
   0CE9 77                 4880 	ld      (hl),a
                           4881 ; Removed redundent load
   0CEA B7                 4882 	or	a,a
   0CEB C2 0B 0E           4883 	jp	nz,00115$
   0CEE 18 03              4884 	jr	00128$
   0CF0                    4885 00127$:
   0CF0 C3 0B 0E           4886 	jp	00115$
   0CF3                    4887 00128$:
                           4888 ;	genCmpEq
                           4889 ;	AOP_HL for _input_timer
                           4890 ; genCmpEq: left 1, right 1, result 0
   0CF3 21 03 19           4891 	ld	hl,#_input_timer
   0CF6 7E                 4892 	ld	a,(hl)
   0CF7 B7                 4893 	or	a,a
   0CF8 C2 0B 0E           4894 	jp	nz,00115$
   0CFB 18 03              4895 	jr	00130$
   0CFD                    4896 00129$:
   0CFD C3 0B 0E           4897 	jp	00115$
   0D00                    4898 00130$:
                           4899 ;	game.c 749
                           4900 ;	genCall
                           4901 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D00 C5                 4902 	push	bc
   0D01 CD 00 00           4903 	call	_joypad
                           4904 ;	AOP_STK for _player_input_sloc1_1_0
   0D04 F8 03              4905 	lda	hl,3(sp)
   0D06 73                 4906 	ld	(hl),e
   0D07 C1                 4907 	pop	bc
                           4908 ;	genCmpEq
                           4909 ;	AOP_STK for _player_input_sloc1_1_0
                           4910 ; genCmpEq: left 1, right 1, result 0
   0D08 F8 01              4911 	lda	hl,1(sp)
   0D0A 7E                 4912 	ld	a,(hl)
   0D0B FE 01              4913 	cp	a,#0x01
   0D0D CA BB 0D           4914 	jp	z,00108$
   0D10                    4915 00131$:
                           4916 ;	genCmpEq
                           4917 ;	AOP_STK for _player_input_sloc1_1_0
                           4918 ; genCmpEq: left 1, right 1, result 0
   0D10 F8 01              4919 	lda	hl,1(sp)
   0D12 7E                 4920 	ld	a,(hl)
   0D13 FE 02              4921 	cp	a,#0x02
   0D15 CA 9C 0D           4922 	jp	z,00107$
   0D18                    4923 00132$:
                           4924 ;	genCmpEq
                           4925 ;	AOP_STK for _player_input_sloc1_1_0
                           4926 ; genCmpEq: left 1, right 1, result 0
   0D18 F8 01              4927 	lda	hl,1(sp)
   0D1A 7E                 4928 	ld	a,(hl)
   0D1B FE 04              4929 	cp	a,#0x04
   0D1D CA DA 0D           4930 	jp	z,00109$
   0D20                    4931 00133$:
                           4932 ;	genCmpEq
                           4933 ;	AOP_STK for _player_input_sloc1_1_0
                           4934 ; genCmpEq: left 1, right 1, result 0
   0D20 F8 01              4935 	lda	hl,1(sp)
   0D22 7E                 4936 	ld	a,(hl)
   0D23 FE 08              4937 	cp	a,#0x08
   0D25 CA F9 0D           4938 	jp	z,00110$
   0D28                    4939 00134$:
                           4940 ;	genCmpEq
                           4941 ;	AOP_STK for _player_input_sloc1_1_0
                           4942 ; genCmpEq: left 1, right 1, result 0
   0D28 F8 01              4943 	lda	hl,1(sp)
   0D2A 7E                 4944 	ld	a,(hl)
   0D2B FE 10              4945 	cp	a,#0x10
   0D2D CA 3B 0D           4946 	jp	z,00103$
   0D30                    4947 00135$:
                           4948 ;	genCmpEq
                           4949 ;	AOP_STK for _player_input_sloc1_1_0
                           4950 ; genCmpEq: left 1, right 1, result 0
   0D30 F8 01              4951 	lda	hl,1(sp)
   0D32 7E                 4952 	ld	a,(hl)
   0D33 FE 20              4953 	cp	a,#0x20
   0D35 CA 94 0D           4954 	jp	z,00106$
   0D38                    4955 00136$:
                           4956 ;	genGoto
   0D38 C3 0B 0E           4957 	jp	00115$
                           4958 ;	game.c 755
                           4959 ;	genLabel
   0D3B                    4960 00103$:
                           4961 ;	game.c 751
                           4962 ;	genPointerGet
                           4963 ;	AOP_STK for _player_input_sloc1_1_0
   0D3B 59                 4964 	ld	e,c
   0D3C 50                 4965 	ld	d,b
   0D3D 1A                 4966 	ld	a,(de)
   0D3E F8 01              4967 	lda	hl,1(sp)
   0D40 77                 4968 	ld	(hl),a
   0D41 13                 4969 	inc	de
   0D42 1A                 4970 	ld	a,(de)
   0D43 23                 4971 	inc	hl
                           4972 ;	genPlus
                           4973 ;	AOP_STK for _player_input_sloc1_1_0
                           4974 ;	AOP_STK for _player_input_sloc0_1_0
                           4975 ;	genPlusIncr
                           4976 ;	Can't optimise plus by inc, falling back to the normal way
   0D44 32                 4977 	ld      (hl-),a
   0D45 5E                 4978 	ld	e,(hl)
   0D46 23                 4979 	inc	hl
   0D47 56                 4980 	ld	d,(hl)
   0D48 21 0B 00           4981 	ld	hl,#0x000B
   0D4B 19                 4982 	add	hl,de
   0D4C 7D                 4983 	ld	a,l
   0D4D 54                 4984 	ld	d,h
   0D4E F8 03              4985 	lda	hl,3(sp)
                           4986 ;	genPointerGet
                           4987 ;	AOP_STK for _player_input_sloc0_1_0
                           4988 ;	AOP_STK for _player_input_sloc2_1_0
   0D50 22                 4989 	ld	(hl+),a
   0D51 72                 4990 	ld	(hl),d
   0D52 5F                 4991 	ld	e,a
   0D53 1A                 4992 	ld	a,(de)
   0D54 F8 00              4993 	lda	hl,0(sp)
                           4994 ;	genCmpEq
                           4995 ;	AOP_STK for _player_input_sloc2_1_0
                           4996 ; genCmpEq: left 1, right 1, result 0
   0D56 77                 4997 	ld      (hl),a
                           4998 ; Removed redundent load
   0D57 FE 01              4999 	cp	a,#0x01
   0D59 C2 7F 0D           5000 	jp	nz,00102$
   0D5C 18 03              5001 	jr	00138$
   0D5E                    5002 00137$:
   0D5E C3 7F 0D           5003 	jp	00102$
   0D61                    5004 00138$:
                           5005 ;	game.c 752
                           5006 ;	genPlus
                           5007 ;	AOP_STK for _player_input_sloc1_1_0
                           5008 ;	genPlusIncr
                           5009 ;	Can't optimise plus by inc, falling back to the normal way
   0D61 F8 01              5010 	lda	hl,1(sp)
   0D63 5E                 5011 	ld	e,(hl)
   0D64 23                 5012 	inc	hl
   0D65 56                 5013 	ld	d,(hl)
   0D66 21 0A 00           5014 	ld	hl,#0x000A
   0D69 19                 5015 	add	hl,de
   0D6A 7D                 5016 	ld	a,l
   0D6B 54                 5017 	ld	d,h
   0D6C 6F                 5018 	ld	l,a
   0D6D 62                 5019 	ld	h,d
                           5020 ;	genAssign (pointer)
   0D6E 36 10              5021 	ld	(hl),#0x10
                           5022 ;	game.c 753
                           5023 ;	genPlus
                           5024 ;	AOP_STK for _player_input_sloc1_1_0
                           5025 ;	genPlusIncr
                           5026 ;	Can't optimise plus by inc, falling back to the normal way
   0D70 F8 01              5027 	lda	hl,1(sp)
   0D72 5E                 5028 	ld	e,(hl)
   0D73 23                 5029 	inc	hl
   0D74 56                 5030 	ld	d,(hl)
   0D75 21 09 00           5031 	ld	hl,#0x0009
   0D78 19                 5032 	add	hl,de
   0D79 7D                 5033 	ld	a,l
   0D7A 54                 5034 	ld	d,h
   0D7B 6F                 5035 	ld	l,a
   0D7C 62                 5036 	ld	h,d
                           5037 ;	genAssign (pointer)
   0D7D 36 01              5038 	ld	(hl),#0x01
                           5039 ;	genLabel
   0D7F                    5040 00102$:
                           5041 ;	game.c 755
                           5042 ;	genCmpEq
                           5043 ;	AOP_STK for _player_input_sloc2_1_0
                           5044 ; genCmpEq: left 1, right 1, result 0
   0D7F F8 00              5045 	lda	hl,0(sp)
   0D81 7E                 5046 	ld	a,(hl)
   0D82 FE 02              5047 	cp	a,#0x02
   0D84 C2 0B 0E           5048 	jp	nz,00115$
   0D87 18 03              5049 	jr	00140$
   0D89                    5050 00139$:
   0D89 C3 0B 0E           5051 	jp	00115$
   0D8C                    5052 00140$:
                           5053 ;	game.c 756
                           5054 ;	genCall
                           5055 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D8C C5                 5056 	push	bc
   0D8D CD FF 08           5057 	call	_dog1_power
   0D90 C1                 5058 	pop	bc
                           5059 ;	game.c 760
                           5060 ;	genGoto
   0D91 C3 0B 0E           5061 	jp	00115$
                           5062 ;	game.c 764
                           5063 ;	genLabel
   0D94                    5064 00106$:
                           5065 ;	genCall
                           5066 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D94 C5                 5067 	push	bc
   0D95 CD CA 01           5068 	call	_change_char
   0D98 C1                 5069 	pop	bc
                           5070 ;	game.c 765
                           5071 ;	genGoto
   0D99 C3 0B 0E           5072 	jp	00115$
                           5073 ;	game.c 768
                           5074 ;	genLabel
   0D9C                    5075 00107$:
                           5076 ;	genAssign
                           5077 ;	AOP_HL for _input_timer
   0D9C 21 03 19           5078 	ld	hl,#_input_timer
   0D9F 36 04              5079 	ld	(hl),#0x04
                           5080 ;	game.c 769
                           5081 ;	genPointerGet
                           5082 ;	AOP_STK for _player_input_sloc1_1_0
   0DA1 59                 5083 	ld	e,c
   0DA2 50                 5084 	ld	d,b
   0DA3 1A                 5085 	ld	a,(de)
   0DA4 F8 01              5086 	lda	hl,1(sp)
   0DA6 77                 5087 	ld	(hl),a
   0DA7 13                 5088 	inc	de
   0DA8 1A                 5089 	ld	a,(de)
   0DA9 23                 5090 	inc	hl
                           5091 ;	genPlus
                           5092 ;	AOP_STK for _player_input_sloc1_1_0
                           5093 ;	genPlusIncr
                           5094 ;	Can't optimise plus by inc, falling back to the normal way
   0DAA 32                 5095 	ld      (hl-),a
   0DAB 5E                 5096 	ld	e,(hl)
   0DAC 23                 5097 	inc	hl
   0DAD 56                 5098 	ld	d,(hl)
   0DAE 21 08 00           5099 	ld	hl,#0x0008
   0DB1 19                 5100 	add	hl,de
   0DB2 7D                 5101 	ld	a,l
   0DB3 54                 5102 	ld	d,h
   0DB4 6F                 5103 	ld	l,a
   0DB5 62                 5104 	ld	h,d
                           5105 ;	genAssign (pointer)
   0DB6 36 04              5106 	ld	(hl),#0x04
                           5107 ;	game.c 770
                           5108 ;	genGoto
   0DB8 C3 0B 0E           5109 	jp	00115$
                           5110 ;	game.c 772
                           5111 ;	genLabel
   0DBB                    5112 00108$:
                           5113 ;	genAssign
                           5114 ;	AOP_HL for _input_timer
   0DBB 21 03 19           5115 	ld	hl,#_input_timer
   0DBE 36 04              5116 	ld	(hl),#0x04
                           5117 ;	game.c 773
                           5118 ;	genPointerGet
                           5119 ;	AOP_STK for _player_input_sloc1_1_0
   0DC0 59                 5120 	ld	e,c
   0DC1 50                 5121 	ld	d,b
   0DC2 1A                 5122 	ld	a,(de)
   0DC3 F8 01              5123 	lda	hl,1(sp)
   0DC5 77                 5124 	ld	(hl),a
   0DC6 13                 5125 	inc	de
   0DC7 1A                 5126 	ld	a,(de)
   0DC8 23                 5127 	inc	hl
                           5128 ;	genPlus
                           5129 ;	AOP_STK for _player_input_sloc1_1_0
                           5130 ;	genPlusIncr
                           5131 ;	Can't optimise plus by inc, falling back to the normal way
   0DC9 32                 5132 	ld      (hl-),a
   0DCA 5E                 5133 	ld	e,(hl)
   0DCB 23                 5134 	inc	hl
   0DCC 56                 5135 	ld	d,(hl)
   0DCD 21 08 00           5136 	ld	hl,#0x0008
   0DD0 19                 5137 	add	hl,de
   0DD1 7D                 5138 	ld	a,l
   0DD2 54                 5139 	ld	d,h
   0DD3 6F                 5140 	ld	l,a
   0DD4 62                 5141 	ld	h,d
                           5142 ;	genAssign (pointer)
   0DD5 36 02              5143 	ld	(hl),#0x02
                           5144 ;	game.c 774
                           5145 ;	genGoto
   0DD7 C3 0B 0E           5146 	jp	00115$
                           5147 ;	game.c 776
                           5148 ;	genLabel
   0DDA                    5149 00109$:
                           5150 ;	genAssign
                           5151 ;	AOP_HL for _input_timer
   0DDA 21 03 19           5152 	ld	hl,#_input_timer
   0DDD 36 04              5153 	ld	(hl),#0x04
                           5154 ;	game.c 777
                           5155 ;	genPointerGet
                           5156 ;	AOP_STK for _player_input_sloc1_1_0
   0DDF 59                 5157 	ld	e,c
   0DE0 50                 5158 	ld	d,b
   0DE1 1A                 5159 	ld	a,(de)
   0DE2 F8 01              5160 	lda	hl,1(sp)
   0DE4 77                 5161 	ld	(hl),a
   0DE5 13                 5162 	inc	de
   0DE6 1A                 5163 	ld	a,(de)
   0DE7 23                 5164 	inc	hl
                           5165 ;	genPlus
                           5166 ;	AOP_STK for _player_input_sloc1_1_0
                           5167 ;	genPlusIncr
                           5168 ;	Can't optimise plus by inc, falling back to the normal way
   0DE8 32                 5169 	ld      (hl-),a
   0DE9 5E                 5170 	ld	e,(hl)
   0DEA 23                 5171 	inc	hl
   0DEB 56                 5172 	ld	d,(hl)
   0DEC 21 08 00           5173 	ld	hl,#0x0008
   0DEF 19                 5174 	add	hl,de
   0DF0 7D                 5175 	ld	a,l
   0DF1 54                 5176 	ld	d,h
   0DF2 6F                 5177 	ld	l,a
   0DF3 62                 5178 	ld	h,d
                           5179 ;	genAssign (pointer)
   0DF4 36 01              5180 	ld	(hl),#0x01
                           5181 ;	game.c 778
                           5182 ;	genGoto
   0DF6 C3 0B 0E           5183 	jp	00115$
                           5184 ;	game.c 780
                           5185 ;	genLabel
   0DF9                    5186 00110$:
                           5187 ;	genPointerGet
   0DF9 59                 5188 	ld	e,c
   0DFA 50                 5189 	ld	d,b
   0DFB 1A                 5190 	ld	a,(de)
   0DFC 4F                 5191 	ld	c,a
   0DFD 13                 5192 	inc	de
   0DFE 1A                 5193 	ld	a,(de)
   0DFF 47                 5194 	ld	b,a
                           5195 ;	genPlus
                           5196 ;	genPlusIncr
   0E00 21 08 00           5197 	ld	hl,#0x0008
   0E03 09                 5198 	add	hl,bc
                           5199 ;	genAssign (pointer)
   0E04 36 03              5200 	ld	(hl),#0x03
                           5201 ;	game.c 781
                           5202 ;	genAssign
                           5203 ;	AOP_HL for _input_timer
   0E06 21 03 19           5204 	ld	hl,#_input_timer
   0E09 36 04              5205 	ld	(hl),#0x04
                           5206 ;	game.c 785
                           5207 ;	genLabel
   0E0B                    5208 00115$:
                           5209 ;	genEndFunction
   0E0B E8 05              5210 	lda	sp,5(sp)
   0E0D C9                 5211 	ret
   0E0E                    5212 ___player_input_end:
                           5213 ;	game.c 794
                           5214 ;	genLabel
                           5215 ;	genFunction
                           5216 ;	---------------------------------
                           5217 ; Function can_move_to_map_pos
                           5218 ; ---------------------------------
   0E0E                    5219 ___can_move_to_map_pos_start:
   0E0E                    5220 _can_move_to_map_pos:
                           5221 	
                           5222 ;	game.c 796
                           5223 ;	genPlus
                           5224 ;	AOP_STK for 
                           5225 ;	Can't optimise plus by inc, falling back to the normal way
   0E0E 11 05 19           5226 	ld	de,#_map
   0E11 F8 02              5227 	lda	hl,2(sp)
   0E13 2A                 5228 	ld	a,(hl+)
   0E14 66                 5229 	ld	h,(hl)
   0E15 6F                 5230 	ld	l,a
   0E16 19                 5231 	add	hl,de
   0E17 4D                 5232 	ld	c,l
   0E18 44                 5233 	ld	b,h
                           5234 ;	genPointerGet
   0E19 0A                 5235 	ld	a,(bc)
   0E1A 4F                 5236 	ld	c,a
                           5237 ;	genCast
                           5238 ; Removed redundent load
   0E1B 06 00              5239 	ld	b,#0x00
                           5240 ;	genCmpGt
   0E1D 3E 14              5241 	ld	a,#0x14
   0E1F 91                 5242 	sub	a,c
   0E20 3E 00              5243 	ld	a,#0x00
   0E22 98                 5244 	sbc	a,b
   0E23 D2 35 0E           5245 	jp	nc,00102$
                           5246 ;	game.c 797
                           5247 ;	genCmpLt
   0E26 79                 5248 	ld	a,c
   0E27 D6 29              5249 	sub	a,#0x29
   0E29 78                 5250 	ld	a,b
   0E2A DE 00              5251 	sbc	a,#0x00
   0E2C D2 35 0E           5252 	jp	nc,00102$
                           5253 ;	game.c 799
                           5254 ;	genRet
   0E2F 11 00 00           5255 	ld	de,#0x0000
   0E32 C3 C0 0E           5256 	jp	00112$
                           5257 ;	genLabel
   0E35                    5258 00102$:
                           5259 ;	game.c 803
                           5260 ;	genCmpEq
                           5261 ; genCmpEq: left 2, right 2, result 0
   0E35 79                 5262 	ld	a,c
   0E36 FE 29              5263 	cp	a,#0x29
   0E38 C2 40 0E           5264 	jp	nz,00120$
   0E3B 78                 5265 	ld	a,b
   0E3C B7                 5266 	or	a,a
   0E3D CA 50 0E           5267 	jp	z,00104$
   0E40                    5268 00120$:
                           5269 ;	genCmpEq
                           5270 ; genCmpEq: left 2, right 2, result 0
   0E40 79                 5271 	ld	a,c
   0E41 FE 2D              5272 	cp	a,#0x2D
   0E43 C2 4D 0E           5273 	jp	nz,00121$
   0E46 78                 5274 	ld	a,b
   0E47 B7                 5275 	or	a,a
   0E48 C2 56 0E           5276 	jp	nz,00106$
   0E4B 18 03              5277 	jr	00122$
   0E4D                    5278 00121$:
   0E4D C3 56 0E           5279 	jp	00106$
   0E50                    5280 00122$:
                           5281 ;	game.c 815
                           5282 ;	genLabel
   0E50                    5283 00104$:
                           5284 ;	genRet
   0E50 11 00 00           5285 	ld	de,#0x0000
   0E53 C3 C0 0E           5286 	jp	00112$
                           5287 ;	game.c 817
                           5288 ;	genLabel
   0E56                    5289 00106$:
                           5290 ;	game.c 819
                           5291 ;	genPlus
                           5292 ;	genPlusIncr
   0E56 01 79 1A           5293 	ld	bc,#_bunny + 12
                           5294 ;	genPointerGet
   0E59 59                 5295 	ld	e,c
   0E5A 50                 5296 	ld	d,b
   0E5B 1A                 5297 	ld	a,(de)
   0E5C 4F                 5298 	ld	c,a
   0E5D 13                 5299 	inc	de
   0E5E 1A                 5300 	ld	a,(de)
   0E5F 47                 5301 	ld	b,a
                           5302 ;	genCmpEq
                           5303 ;	AOP_STK for 
                           5304 ; genCmpEq: left 2, right 2, result 0
   0E60 F8 02              5305 	lda	hl,2(sp)
   0E62 7E                 5306 	ld	a,(hl)
   0E63 B9                 5307 	cp	c
   0E64 C2 6D 0E           5308 	jp	nz,00123$
   0E67 23                 5309 	inc	hl
   0E68 7E                 5310 	ld	a,(hl)
   0E69 B8                 5311 	cp	b
   0E6A CA B7 0E           5312 	jp	z,00107$
   0E6D                    5313 00123$:
                           5314 ;	game.c 820
                           5315 ;	genPlus
                           5316 ;	genPlusIncr
   0E6D 01 87 1A           5317 	ld	bc,#_dog1 + 12
                           5318 ;	genPointerGet
   0E70 59                 5319 	ld	e,c
   0E71 50                 5320 	ld	d,b
   0E72 1A                 5321 	ld	a,(de)
   0E73 4F                 5322 	ld	c,a
   0E74 13                 5323 	inc	de
   0E75 1A                 5324 	ld	a,(de)
   0E76 47                 5325 	ld	b,a
                           5326 ;	genCmpEq
                           5327 ;	AOP_STK for 
                           5328 ; genCmpEq: left 2, right 2, result 0
   0E77 F8 02              5329 	lda	hl,2(sp)
   0E79 7E                 5330 	ld	a,(hl)
   0E7A B9                 5331 	cp	c
   0E7B C2 84 0E           5332 	jp	nz,00124$
   0E7E 23                 5333 	inc	hl
   0E7F 7E                 5334 	ld	a,(hl)
   0E80 B8                 5335 	cp	b
   0E81 CA B7 0E           5336 	jp	z,00107$
   0E84                    5337 00124$:
                           5338 ;	game.c 821
                           5339 ;	genPlus
                           5340 ;	genPlusIncr
   0E84 01 95 1A           5341 	ld	bc,#_dog2 + 12
                           5342 ;	genPointerGet
   0E87 59                 5343 	ld	e,c
   0E88 50                 5344 	ld	d,b
   0E89 1A                 5345 	ld	a,(de)
   0E8A 4F                 5346 	ld	c,a
   0E8B 13                 5347 	inc	de
   0E8C 1A                 5348 	ld	a,(de)
   0E8D 47                 5349 	ld	b,a
                           5350 ;	genCmpEq
                           5351 ;	AOP_STK for 
                           5352 ; genCmpEq: left 2, right 2, result 0
   0E8E F8 02              5353 	lda	hl,2(sp)
   0E90 7E                 5354 	ld	a,(hl)
   0E91 B9                 5355 	cp	c
   0E92 C2 9B 0E           5356 	jp	nz,00125$
   0E95 23                 5357 	inc	hl
   0E96 7E                 5358 	ld	a,(hl)
   0E97 B8                 5359 	cp	b
   0E98 CA B7 0E           5360 	jp	z,00107$
   0E9B                    5361 00125$:
                           5362 ;	game.c 822
                           5363 ;	genPlus
                           5364 ;	genPlusIncr
   0E9B 01 A3 1A           5365 	ld	bc,#_cat + 12
                           5366 ;	genPointerGet
   0E9E 59                 5367 	ld	e,c
   0E9F 50                 5368 	ld	d,b
   0EA0 1A                 5369 	ld	a,(de)
   0EA1 4F                 5370 	ld	c,a
   0EA2 13                 5371 	inc	de
   0EA3 1A                 5372 	ld	a,(de)
   0EA4 47                 5373 	ld	b,a
                           5374 ;	genCmpEq
                           5375 ;	AOP_STK for 
                           5376 ; genCmpEq: left 2, right 2, result 0
   0EA5 F8 02              5377 	lda	hl,2(sp)
   0EA7 7E                 5378 	ld	a,(hl)
   0EA8 B9                 5379 	cp	c
   0EA9 C2 B4 0E           5380 	jp	nz,00126$
   0EAC 23                 5381 	inc	hl
   0EAD 7E                 5382 	ld	a,(hl)
   0EAE B8                 5383 	cp	b
   0EAF C2 BD 0E           5384 	jp	nz,00108$
   0EB2 18 03              5385 	jr	00127$
   0EB4                    5386 00126$:
   0EB4 C3 BD 0E           5387 	jp	00108$
   0EB7                    5388 00127$:
                           5389 ;	genLabel
   0EB7                    5390 00107$:
                           5391 ;	game.c 824
                           5392 ;	genRet
   0EB7 11 00 00           5393 	ld	de,#0x0000
   0EBA C3 C0 0E           5394 	jp	00112$
                           5395 ;	genLabel
   0EBD                    5396 00108$:
                           5397 ;	game.c 827
                           5398 ;	genRet
   0EBD 11 01 00           5399 	ld	de,#0x0001
                           5400 ;	genLabel
   0EC0                    5401 00112$:
                           5402 ;	genEndFunction
                           5403 	
   0EC0 C9                 5404 	ret
   0EC1                    5405 ___can_move_to_map_pos_end:
                           5406 ;	game.c 830
                           5407 ;	genLabel
                           5408 ;	genFunction
                           5409 ;	---------------------------------
                           5410 ; Function can_move
                           5411 ; ---------------------------------
   0EC1                    5412 ___can_move_start:
   0EC1                    5413 _can_move:
   0EC1 E8 FA              5414 	lda	sp,-6(sp)
                           5415 ;	game.c 841
                           5416 ;	genCmpGt
                           5417 ;	AOP_STK for 
   0EC3 3E 04              5418 	ld	a,#0x04
   0EC5 F8 0A              5419 	lda	hl,10(sp)
   0EC7 96                 5420 	sub	a,(hl)
   0EC8 DA 0E 0F           5421 	jp	c,00106$
                           5422 ;	genJumpTab
                           5423 ;	AOP_STK for 
   0ECB 5E                 5424 	ld	e,(hl)
   0ECC 16 00              5425 	ld	d,#0x00
   0ECE 21 D5 0E           5426 	ld	hl,#00121$
   0ED1 19                 5427 	add	hl,de
   0ED2 19                 5428 	add	hl,de
   0ED3 19                 5429 	add	hl,de
   0ED4 E9                 5430 	jp	(hl)
   0ED5                    5431 00121$:
   0ED5 C3 08 0F           5432 	jp	00105$
   0ED8 C3 F6 0E           5433 	jp	00103$
   0EDB C3 ED 0E           5434 	jp	00102$
   0EDE C3 FF 0E           5435 	jp	00104$
   0EE1 C3 E4 0E           5436 	jp	00101$
                           5437 ;	game.c 843
                           5438 ;	genLabel
   0EE4                    5439 00101$:
                           5440 ;	genMinus
                           5441 ;	AOP_STK for 
   0EE4 F8 08              5442 	lda	hl,8(sp)
   0EE6 7E                 5443 	ld	a,(hl)
   0EE7 C6 F8              5444 	add	a,#0xF8
   0EE9 77                 5445 	ld	(hl),a
                           5446 ;	game.c 844
                           5447 ;	genGoto
   0EEA C3 0E 0F           5448 	jp	00106$
                           5449 ;	game.c 846
                           5450 ;	genLabel
   0EED                    5451 00102$:
                           5452 ;	genPlus
                           5453 ;	AOP_STK for 
                           5454 ;	genPlusIncr
                           5455 ;	Can't optimise plus by inc, falling back to the normal way
   0EED F8 08              5456 	lda	hl,8(sp)
   0EEF 7E                 5457 	ld	a,(hl)
   0EF0 C6 08              5458 	add	a,#0x08
   0EF2 77                 5459 	ld	(hl),a
                           5460 ;	game.c 847
                           5461 ;	genGoto
   0EF3 C3 0E 0F           5462 	jp	00106$
                           5463 ;	game.c 849
                           5464 ;	genLabel
   0EF6                    5465 00103$:
                           5466 ;	genMinus
                           5467 ;	AOP_STK for 
   0EF6 F8 09              5468 	lda	hl,9(sp)
   0EF8 7E                 5469 	ld	a,(hl)
   0EF9 C6 F8              5470 	add	a,#0xF8
   0EFB 77                 5471 	ld	(hl),a
                           5472 ;	game.c 850
                           5473 ;	genGoto
   0EFC C3 0E 0F           5474 	jp	00106$
                           5475 ;	game.c 852
                           5476 ;	genLabel
   0EFF                    5477 00104$:
                           5478 ;	genPlus
                           5479 ;	AOP_STK for 
                           5480 ;	genPlusIncr
                           5481 ;	Can't optimise plus by inc, falling back to the normal way
   0EFF F8 09              5482 	lda	hl,9(sp)
   0F01 7E                 5483 	ld	a,(hl)
   0F02 C6 08              5484 	add	a,#0x08
   0F04 77                 5485 	ld	(hl),a
                           5486 ;	game.c 853
                           5487 ;	genGoto
   0F05 C3 0E 0F           5488 	jp	00106$
                           5489 ;	game.c 855
                           5490 ;	genLabel
   0F08                    5491 00105$:
                           5492 ;	genRet
   0F08 11 00 00           5493 	ld	de,#0x0000
   0F0B C3 A7 0F           5494 	jp	00114$
                           5495 ;	game.c 856
                           5496 ;	genLabel
   0F0E                    5497 00106$:
                           5498 ;	game.c 858
                           5499 ;	genCast
                           5500 ;	AOP_STK for 
   0F0E F8 08              5501 	lda	hl,8(sp)
   0F10 4E                 5502 	ld	c,(hl)
   0F11 06 00              5503 	ld	b,#0x00
                           5504 ;	genRightShift
   0F13 CB 38              5505 	srl	b
   0F15 CB 19              5506 	rr	c
   0F17 CB 38              5507 	srl	b
   0F19 CB 19              5508 	rr	c
   0F1B CB 38              5509 	srl	b
   0F1D CB 19              5510 	rr	c
                           5511 ;	genMinus
   0F1F 0B                 5512 	dec	bc
                           5513 ;	genCast
                           5514 ;	AOP_STK for _can_move__x_1_1
   0F20 F8 05              5515 	lda	hl,5(sp)
   0F22 71                 5516 	ld	(hl),c
                           5517 ;	game.c 859
                           5518 ;	genCast
                           5519 ;	AOP_STK for 
   0F23 F8 09              5520 	lda	hl,9(sp)
   0F25 46                 5521 	ld	b,(hl)
   0F26 0E 00              5522 	ld	c,#0x00
                           5523 ;	genRightShift
   0F28 CB 39              5524 	srl	c
   0F2A CB 18              5525 	rr	b
   0F2C CB 39              5526 	srl	c
   0F2E CB 18              5527 	rr	b
   0F30 CB 39              5528 	srl	c
   0F32 CB 18              5529 	rr	b
                           5530 ;	genMinus
   0F34 58                 5531 	ld	e,b
   0F35 51                 5532 	ld	d,c
   0F36 1B                 5533 	dec	de
   0F37 1B                 5534 	dec	de
   0F38 43                 5535 	ld	b,e
   0F39 4A                 5536 	ld	c,d
                           5537 ;	genCast
                           5538 ;	AOP_STK for _can_move__y_1_1
   0F3A F8 04              5539 	lda	hl,4(sp)
   0F3C 70                 5540 	ld	(hl),b
                           5541 ;	game.c 866
                           5542 ;	genCmpLt
                           5543 ;	AOP_STK for _can_move__x_1_1
   0F3D 23                 5544 	inc	hl
   0F3E 7E                 5545 	ld	a,(hl)
   0F3F FE 00              5546 	cp	#0x00
   0F41 DA 68 0F           5547 	jp	c,00107$
                           5548 ;	genCast
                           5549 ;	AOP_STK for _can_move__x_1_1
   0F44 46                 5550 	ld	b,(hl)
   0F45 0E 00              5551 	ld	c,#0x00
                           5552 ;	genCmpGt
   0F47 3E 13              5553 	ld	a,#0x13
   0F49 90                 5554 	sub	a,b
   0F4A 3E 00              5555 	ld	a,#0x00
   0F4C 99                 5556 	sbc	a,c
   0F4D DA 68 0F           5557 	jp	c,00107$
                           5558 ;	genCmpLt
                           5559 ;	AOP_STK for _can_move__y_1_1
   0F50 2B                 5560 	dec	hl
   0F51 7E                 5561 	ld	a,(hl)
   0F52 FE 00              5562 	cp	#0x00
   0F54 DA 68 0F           5563 	jp	c,00107$
                           5564 ;	genCast
                           5565 ;	AOP_STK for _can_move__y_1_1
                           5566 ;	AOP_STK for _can_move_sloc0_1_0
   0F57 7E                 5567 	ld	a,(hl)
   0F58 F8 00              5568 	lda	hl,0(sp)
   0F5A 22                 5569 	ld	(hl+),a
   0F5B 36 00              5570 	ld	(hl),#0x00
                           5571 ;	genCmpGt
                           5572 ;	AOP_STK for _can_move_sloc0_1_0
   0F5D 3E 11              5573 	ld	a,#0x11
   0F5F 2B                 5574 	dec	hl
   0F60 96                 5575 	sub	a,(hl)
   0F61 3E 00              5576 	ld	a,#0x00
   0F63 23                 5577 	inc	hl
   0F64 9E                 5578 	sbc	a,(hl)
   0F65 D2 6E 0F           5579 	jp	nc,00108$
                           5580 ;	genLabel
   0F68                    5581 00107$:
                           5582 ;	game.c 868
                           5583 ;	genRet
   0F68 11 00 00           5584 	ld	de,#0x0000
   0F6B C3 A7 0F           5585 	jp	00114$
                           5586 ;	genLabel
   0F6E                    5587 00108$:
                           5588 ;	game.c 875
                           5589 ;	genAssign
                           5590 ;	(registers are the same)
                           5591 ;	genAssign
                           5592 ;	AOP_STK for _can_move_map_position_1_1
   0F6E F8 02              5593 	lda	hl,2(sp)
   0F70 70                 5594 	ld	(hl),b
   0F71 23                 5595 	inc	hl
   0F72 71                 5596 	ld	(hl),c
                           5597 ;	game.c 876
                           5598 ;	genMult
                           5599 ;	AOP_STK for _can_move_sloc0_1_0
   0F73 F8 00              5600 	lda	hl,0(sp)
   0F75 5E                 5601 	ld	e,(hl)
   0F76 23                 5602 	inc	hl
   0F77 56                 5603 	ld	d,(hl)
   0F78 6B                 5604 	ld	l,e
   0F79 62                 5605 	ld	h,d
   0F7A 29                 5606 	add	hl,hl
   0F7B 29                 5607 	add	hl,hl
   0F7C 19                 5608 	add	hl,de
   0F7D 29                 5609 	add	hl,hl
   0F7E 29                 5610 	add	hl,hl
   0F7F 4D                 5611 	ld	c,l
   0F80 44                 5612 	ld	b,h
                           5613 ;	genPlus
                           5614 ;	AOP_STK for _can_move_map_position_1_1
                           5615 ;	Can't optimise plus by inc, falling back to the normal way
   0F81 F8 02              5616 	lda	hl,2(sp)
   0F83 2A                 5617 	ld	a,(hl+)
   0F84 66                 5618 	ld	h,(hl)
   0F85 6F                 5619 	ld	l,a
   0F86 09                 5620 	add	hl,bc
   0F87 7D                 5621 	ld	a,l
   0F88 54                 5622 	ld	d,h
   0F89 F8 02              5623 	lda	hl,2(sp)
   0F8B 22                 5624 	ld	(hl+),a
   0F8C 72                 5625 	ld	(hl),d
                           5626 ;	game.c 878
                           5627 ;	genIpush
                           5628 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5629 ;	AOP_STK for _can_move_map_position_1_1
   0F8D 2B                 5630 	dec	hl
   0F8E 2A                 5631 	ld	a,(hl+)
   0F8F 66                 5632 	ld	h,(hl)
   0F90 6F                 5633 	ld	l,a
   0F91 E5                 5634 	push	hl
                           5635 ;	genCall
   0F92 CD 0E 0E           5636 	call	_can_move_to_map_pos
   0F95 42                 5637 	ld	b,d
   0F96 4B                 5638 	ld	c,e
   0F97 E8 02              5639 	lda	sp,2(sp)
                           5640 ;	genIfx
   0F99 79                 5641 	ld	a,c
   0F9A B0                 5642 	or	a,b
   0F9B CA A4 0F           5643 	jp	z,00113$
                           5644 ;	game.c 879
                           5645 ;	genRet
   0F9E 11 01 00           5646 	ld	de,#0x0001
   0FA1 C3 A7 0F           5647 	jp	00114$
                           5648 ;	genLabel
   0FA4                    5649 00113$:
                           5650 ;	game.c 882
                           5651 ;	genRet
   0FA4 11 00 00           5652 	ld	de,#0x0000
                           5653 ;	genLabel
   0FA7                    5654 00114$:
                           5655 ;	genEndFunction
   0FA7 E8 06              5656 	lda	sp,6(sp)
   0FA9 C9                 5657 	ret
   0FAA                    5658 ___can_move_end:
                           5659 ;	game.c 885
                           5660 ;	genLabel
                           5661 ;	genFunction
                           5662 ;	---------------------------------
                           5663 ; Function rotate_player
                           5664 ; ---------------------------------
   0FAA                    5665 ___rotate_player_start:
   0FAA                    5666 _rotate_player:
   0FAA E8 FC              5667 	lda	sp,-4(sp)
                           5668 ;	game.c 886
                           5669 ;	genAssign
                           5670 ;	AOP_HL for _player
   0FAC 21 B3 1A           5671 	ld	hl,#_player
   0FAF 4E                 5672 	ld	c,(hl)
   0FB0 23                 5673 	inc	hl
   0FB1 46                 5674 	ld	b,(hl)
                           5675 ;	genPlus
                           5676 ;	genPlusIncr
                           5677 ;	Can't optimise plus by inc, falling back to the normal way
   0FB2 79                 5678 	ld	a,c
   0FB3 C6 07              5679 	add	a,#0x07
   0FB5 4F                 5680 	ld	c,a
   0FB6 78                 5681 	ld	a,b
   0FB7 CE 00              5682 	adc	a,#0x00
   0FB9 47                 5683 	ld	b,a
                           5684 ;	genPointerGet
   0FBA 0A                 5685 	ld	a,(bc)
   0FBB 4F                 5686 	ld	c,a
                           5687 ;	genAssign
                           5688 ;	AOP_HL for _player
                           5689 ;	AOP_STK for _rotate_player_sloc0_1_0
   0FBC 2B                 5690 	dec	hl
   0FBD 2A                 5691 	ld	a,(hl+)
   0FBE 5E                 5692 	ld	e,(hl)
   0FBF F8 02              5693 	lda	hl,2(sp)
   0FC1 22                 5694 	ld	(hl+),a
   0FC2 73                 5695 	ld	(hl),e
                           5696 ;	genPlus
                           5697 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5698 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5699 ;	genPlusIncr
                           5700 ;	Can't optimise plus by inc, falling back to the normal way
   0FC3 2B                 5701 	dec	hl
   0FC4 5E                 5702 	ld	e,(hl)
   0FC5 23                 5703 	inc	hl
   0FC6 56                 5704 	ld	d,(hl)
   0FC7 21 0B 00           5705 	ld	hl,#0x000B
   0FCA 19                 5706 	add	hl,de
   0FCB 7D                 5707 	ld	a,l
   0FCC 54                 5708 	ld	d,h
   0FCD F8 00              5709 	lda	hl,0(sp)
                           5710 ;	genPointerGet
                           5711 ;	AOP_STK for _rotate_player_sloc1_1_0
   0FCF 22                 5712 	ld	(hl+),a
   0FD0 72                 5713 	ld	(hl),d
   0FD1 5F                 5714 	ld	e,a
   0FD2 1A                 5715 	ld	a,(de)
   0FD3 47                 5716 	ld	b,a
                           5717 ;	genIpush
                           5718 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD4 79                 5719 	ld	a,c
   0FD5 F5                 5720 	push	af
   0FD6 33                 5721 	inc	sp
                           5722 ;	genIpush
   0FD7 78                 5723 	ld	a,b
   0FD8 F5                 5724 	push	af
   0FD9 33                 5725 	inc	sp
                           5726 ;	genCall
   0FDA CD 00 00           5727 	call	_set_sprite_tile
   0FDD E8 02              5728 	lda	sp,2(sp)
                           5729 ;	game.c 887
                           5730 ;	genAssign
                           5731 ;	AOP_HL for _player
   0FDF 21 B3 1A           5732 	ld	hl,#_player
   0FE2 4E                 5733 	ld	c,(hl)
   0FE3 23                 5734 	inc	hl
   0FE4 46                 5735 	ld	b,(hl)
                           5736 ;	genPlus
                           5737 ;	genPlusIncr
                           5738 ;	Can't optimise plus by inc, falling back to the normal way
   0FE5 79                 5739 	ld	a,c
   0FE6 C6 0B              5740 	add	a,#0x0B
   0FE8 4F                 5741 	ld	c,a
   0FE9 78                 5742 	ld	a,b
   0FEA CE 00              5743 	adc	a,#0x00
   0FEC 47                 5744 	ld	b,a
                           5745 ;	genPointerGet
   0FED 0A                 5746 	ld	a,(bc)
   0FEE 4F                 5747 	ld	c,a
                           5748 ;	genIpush
                           5749 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FEF 3E 20              5750 	ld	a,#0x20
   0FF1 F5                 5751 	push	af
   0FF2 33                 5752 	inc	sp
                           5753 ;	genIpush
   0FF3 79                 5754 	ld	a,c
   0FF4 F5                 5755 	push	af
   0FF5 33                 5756 	inc	sp
                           5757 ;	genCall
   0FF6 CD 00 00           5758 	call	_set_sprite_prop
   0FF9 E8 02              5759 	lda	sp,2(sp)
                           5760 ;	game.c 888
                           5761 ;	genIpush
                           5762 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FFB 3E 05              5763 	ld	a,#0x05
   0FFD F5                 5764 	push	af
   0FFE 33                 5765 	inc	sp
                           5766 ;	genCall
   0FFF CD 00 00           5767 	call	_performantDelay
   1002 E8 01              5768 	lda	sp,1(sp)
                           5769 ;	game.c 889
                           5770 ;	genAssign
                           5771 ;	AOP_HL for _player
   1004 21 B3 1A           5772 	ld	hl,#_player
   1007 4E                 5773 	ld	c,(hl)
   1008 23                 5774 	inc	hl
   1009 46                 5775 	ld	b,(hl)
                           5776 ;	genPlus
                           5777 ;	genPlusIncr
   100A 03                 5778 	inc	bc
   100B 03                 5779 	inc	bc
   100C 03                 5780 	inc	bc
   100D 03                 5781 	inc	bc
                           5782 ;	genPointerGet
   100E 0A                 5783 	ld	a,(bc)
   100F 4F                 5784 	ld	c,a
                           5785 ;	genAssign
                           5786 ;	AOP_HL for _player
                           5787 ;	AOP_STK for _rotate_player_sloc1_1_0
   1010 2B                 5788 	dec	hl
   1011 2A                 5789 	ld	a,(hl+)
   1012 5E                 5790 	ld	e,(hl)
   1013 F8 00              5791 	lda	hl,0(sp)
   1015 22                 5792 	ld	(hl+),a
   1016 73                 5793 	ld	(hl),e
                           5794 ;	genPlus
                           5795 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5796 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5797 ;	genPlusIncr
                           5798 ;	Can't optimise plus by inc, falling back to the normal way
   1017 2B                 5799 	dec	hl
   1018 5E                 5800 	ld	e,(hl)
   1019 23                 5801 	inc	hl
   101A 56                 5802 	ld	d,(hl)
   101B 21 0B 00           5803 	ld	hl,#0x000B
   101E 19                 5804 	add	hl,de
   101F 7D                 5805 	ld	a,l
   1020 54                 5806 	ld	d,h
   1021 F8 02              5807 	lda	hl,2(sp)
                           5808 ;	genPointerGet
                           5809 ;	AOP_STK for _rotate_player_sloc0_1_0
   1023 22                 5810 	ld	(hl+),a
   1024 72                 5811 	ld	(hl),d
   1025 5F                 5812 	ld	e,a
   1026 1A                 5813 	ld	a,(de)
   1027 47                 5814 	ld	b,a
                           5815 ;	genIpush
                           5816 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1028 79                 5817 	ld	a,c
   1029 F5                 5818 	push	af
   102A 33                 5819 	inc	sp
                           5820 ;	genIpush
   102B 78                 5821 	ld	a,b
   102C F5                 5822 	push	af
   102D 33                 5823 	inc	sp
                           5824 ;	genCall
   102E CD 00 00           5825 	call	_set_sprite_tile
   1031 E8 02              5826 	lda	sp,2(sp)
                           5827 ;	game.c 890
                           5828 ;	genAssign
                           5829 ;	AOP_HL for _player
   1033 21 B3 1A           5830 	ld	hl,#_player
   1036 4E                 5831 	ld	c,(hl)
   1037 23                 5832 	inc	hl
   1038 46                 5833 	ld	b,(hl)
                           5834 ;	genPlus
                           5835 ;	genPlusIncr
                           5836 ;	Can't optimise plus by inc, falling back to the normal way
   1039 79                 5837 	ld	a,c
   103A C6 0B              5838 	add	a,#0x0B
   103C 4F                 5839 	ld	c,a
   103D 78                 5840 	ld	a,b
   103E CE 00              5841 	adc	a,#0x00
   1040 47                 5842 	ld	b,a
                           5843 ;	genPointerGet
   1041 0A                 5844 	ld	a,(bc)
   1042 4F                 5845 	ld	c,a
                           5846 ;	genIpush
                           5847 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1043 3E 60              5848 	ld	a,#0x60
   1045 F5                 5849 	push	af
   1046 33                 5850 	inc	sp
                           5851 ;	genIpush
   1047 79                 5852 	ld	a,c
   1048 F5                 5853 	push	af
   1049 33                 5854 	inc	sp
                           5855 ;	genCall
   104A CD 00 00           5856 	call	_set_sprite_prop
   104D E8 02              5857 	lda	sp,2(sp)
                           5858 ;	game.c 891
                           5859 ;	genIpush
                           5860 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   104F 3E 05              5861 	ld	a,#0x05
   1051 F5                 5862 	push	af
   1052 33                 5863 	inc	sp
                           5864 ;	genCall
   1053 CD 00 00           5865 	call	_performantDelay
   1056 E8 01              5866 	lda	sp,1(sp)
                           5867 ;	game.c 892
                           5868 ;	genAssign
                           5869 ;	AOP_HL for _player
   1058 21 B3 1A           5870 	ld	hl,#_player
   105B 4E                 5871 	ld	c,(hl)
   105C 23                 5872 	inc	hl
   105D 46                 5873 	ld	b,(hl)
                           5874 ;	genPlus
                           5875 ;	genPlusIncr
                           5876 ;	Can't optimise plus by inc, falling back to the normal way
   105E 79                 5877 	ld	a,c
   105F C6 07              5878 	add	a,#0x07
   1061 4F                 5879 	ld	c,a
   1062 78                 5880 	ld	a,b
   1063 CE 00              5881 	adc	a,#0x00
   1065 47                 5882 	ld	b,a
                           5883 ;	genPointerGet
   1066 0A                 5884 	ld	a,(bc)
   1067 4F                 5885 	ld	c,a
                           5886 ;	genAssign
                           5887 ;	AOP_HL for _player
                           5888 ;	AOP_STK for _rotate_player_sloc1_1_0
   1068 2B                 5889 	dec	hl
   1069 2A                 5890 	ld	a,(hl+)
   106A 5E                 5891 	ld	e,(hl)
   106B F8 00              5892 	lda	hl,0(sp)
   106D 22                 5893 	ld	(hl+),a
   106E 73                 5894 	ld	(hl),e
                           5895 ;	genPlus
                           5896 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5897 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5898 ;	genPlusIncr
                           5899 ;	Can't optimise plus by inc, falling back to the normal way
   106F 2B                 5900 	dec	hl
   1070 5E                 5901 	ld	e,(hl)
   1071 23                 5902 	inc	hl
   1072 56                 5903 	ld	d,(hl)
   1073 21 0B 00           5904 	ld	hl,#0x000B
   1076 19                 5905 	add	hl,de
   1077 7D                 5906 	ld	a,l
   1078 54                 5907 	ld	d,h
   1079 F8 02              5908 	lda	hl,2(sp)
                           5909 ;	genPointerGet
                           5910 ;	AOP_STK for _rotate_player_sloc0_1_0
   107B 22                 5911 	ld	(hl+),a
   107C 72                 5912 	ld	(hl),d
   107D 5F                 5913 	ld	e,a
   107E 1A                 5914 	ld	a,(de)
   107F 47                 5915 	ld	b,a
                           5916 ;	genIpush
                           5917 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1080 79                 5918 	ld	a,c
   1081 F5                 5919 	push	af
   1082 33                 5920 	inc	sp
                           5921 ;	genIpush
   1083 78                 5922 	ld	a,b
   1084 F5                 5923 	push	af
   1085 33                 5924 	inc	sp
                           5925 ;	genCall
   1086 CD 00 00           5926 	call	_set_sprite_tile
   1089 E8 02              5927 	lda	sp,2(sp)
                           5928 ;	game.c 893
                           5929 ;	genAssign
                           5930 ;	AOP_HL for _player
   108B 21 B3 1A           5931 	ld	hl,#_player
   108E 4E                 5932 	ld	c,(hl)
   108F 23                 5933 	inc	hl
   1090 46                 5934 	ld	b,(hl)
                           5935 ;	genPlus
                           5936 ;	genPlusIncr
                           5937 ;	Can't optimise plus by inc, falling back to the normal way
   1091 79                 5938 	ld	a,c
   1092 C6 0B              5939 	add	a,#0x0B
   1094 4F                 5940 	ld	c,a
   1095 78                 5941 	ld	a,b
   1096 CE 00              5942 	adc	a,#0x00
   1098 47                 5943 	ld	b,a
                           5944 ;	genPointerGet
   1099 0A                 5945 	ld	a,(bc)
   109A 4F                 5946 	ld	c,a
                           5947 ;	genIpush
                           5948 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   109B 3E 40              5949 	ld	a,#0x40
   109D F5                 5950 	push	af
   109E 33                 5951 	inc	sp
                           5952 ;	genIpush
   109F 79                 5953 	ld	a,c
   10A0 F5                 5954 	push	af
   10A1 33                 5955 	inc	sp
                           5956 ;	genCall
   10A2 CD 00 00           5957 	call	_set_sprite_prop
   10A5 E8 02              5958 	lda	sp,2(sp)
                           5959 ;	game.c 894
                           5960 ;	genIpush
                           5961 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10A7 3E 05              5962 	ld	a,#0x05
   10A9 F5                 5963 	push	af
   10AA 33                 5964 	inc	sp
                           5965 ;	genCall
   10AB CD 00 00           5966 	call	_performantDelay
   10AE E8 01              5967 	lda	sp,1(sp)
                           5968 ;	game.c 895
                           5969 ;	genAssign
                           5970 ;	AOP_HL for _player
   10B0 21 B3 1A           5971 	ld	hl,#_player
   10B3 4E                 5972 	ld	c,(hl)
   10B4 23                 5973 	inc	hl
   10B5 46                 5974 	ld	b,(hl)
                           5975 ;	genPlus
                           5976 ;	genPlusIncr
   10B6 03                 5977 	inc	bc
   10B7 03                 5978 	inc	bc
   10B8 03                 5979 	inc	bc
   10B9 03                 5980 	inc	bc
                           5981 ;	genPointerGet
   10BA 0A                 5982 	ld	a,(bc)
   10BB 4F                 5983 	ld	c,a
                           5984 ;	genAssign
                           5985 ;	AOP_HL for _player
                           5986 ;	AOP_STK for _rotate_player_sloc1_1_0
   10BC 2B                 5987 	dec	hl
   10BD 2A                 5988 	ld	a,(hl+)
   10BE 5E                 5989 	ld	e,(hl)
   10BF F8 00              5990 	lda	hl,0(sp)
   10C1 22                 5991 	ld	(hl+),a
   10C2 73                 5992 	ld	(hl),e
                           5993 ;	genPlus
                           5994 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5995 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5996 ;	genPlusIncr
                           5997 ;	Can't optimise plus by inc, falling back to the normal way
   10C3 2B                 5998 	dec	hl
   10C4 5E                 5999 	ld	e,(hl)
   10C5 23                 6000 	inc	hl
   10C6 56                 6001 	ld	d,(hl)
   10C7 21 0B 00           6002 	ld	hl,#0x000B
   10CA 19                 6003 	add	hl,de
   10CB 7D                 6004 	ld	a,l
   10CC 54                 6005 	ld	d,h
   10CD F8 02              6006 	lda	hl,2(sp)
                           6007 ;	genPointerGet
                           6008 ;	AOP_STK for _rotate_player_sloc0_1_0
   10CF 22                 6009 	ld	(hl+),a
   10D0 72                 6010 	ld	(hl),d
   10D1 5F                 6011 	ld	e,a
   10D2 1A                 6012 	ld	a,(de)
   10D3 47                 6013 	ld	b,a
                           6014 ;	genIpush
                           6015 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10D4 79                 6016 	ld	a,c
   10D5 F5                 6017 	push	af
   10D6 33                 6018 	inc	sp
                           6019 ;	genIpush
   10D7 78                 6020 	ld	a,b
   10D8 F5                 6021 	push	af
   10D9 33                 6022 	inc	sp
                           6023 ;	genCall
   10DA CD 00 00           6024 	call	_set_sprite_tile
   10DD E8 02              6025 	lda	sp,2(sp)
                           6026 ;	game.c 896
                           6027 ;	genAssign
                           6028 ;	AOP_HL for _player
   10DF 21 B3 1A           6029 	ld	hl,#_player
   10E2 4E                 6030 	ld	c,(hl)
   10E3 23                 6031 	inc	hl
   10E4 46                 6032 	ld	b,(hl)
                           6033 ;	genPlus
                           6034 ;	genPlusIncr
                           6035 ;	Can't optimise plus by inc, falling back to the normal way
   10E5 79                 6036 	ld	a,c
   10E6 C6 0B              6037 	add	a,#0x0B
   10E8 4F                 6038 	ld	c,a
   10E9 78                 6039 	ld	a,b
   10EA CE 00              6040 	adc	a,#0x00
   10EC 47                 6041 	ld	b,a
                           6042 ;	genPointerGet
   10ED 0A                 6043 	ld	a,(bc)
   10EE 4F                 6044 	ld	c,a
                           6045 ;	genIpush
                           6046 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10EF 3E 00              6047 	ld	a,#0x00
   10F1 F5                 6048 	push	af
   10F2 33                 6049 	inc	sp
                           6050 ;	genIpush
   10F3 79                 6051 	ld	a,c
   10F4 F5                 6052 	push	af
   10F5 33                 6053 	inc	sp
                           6054 ;	genCall
   10F6 CD 00 00           6055 	call	_set_sprite_prop
   10F9 E8 02              6056 	lda	sp,2(sp)
                           6057 ;	game.c 897
                           6058 ;	genIpush
                           6059 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10FB 3E 05              6060 	ld	a,#0x05
   10FD F5                 6061 	push	af
   10FE 33                 6062 	inc	sp
                           6063 ;	genCall
   10FF CD 00 00           6064 	call	_performantDelay
   1102 E8 01              6065 	lda	sp,1(sp)
                           6066 ;	game.c 898
                           6067 ;	genAssign
                           6068 ;	AOP_HL for _player
   1104 21 B3 1A           6069 	ld	hl,#_player
   1107 4E                 6070 	ld	c,(hl)
   1108 23                 6071 	inc	hl
   1109 46                 6072 	ld	b,(hl)
                           6073 ;	genPlus
                           6074 ;	genPlusIncr
   110A 03                 6075 	inc	bc
   110B 03                 6076 	inc	bc
                           6077 ;	genPointerGet
   110C 0A                 6078 	ld	a,(bc)
   110D 4F                 6079 	ld	c,a
                           6080 ;	genAssign
                           6081 ;	AOP_HL for _player
                           6082 ;	AOP_STK for _rotate_player_sloc1_1_0
   110E 2B                 6083 	dec	hl
   110F 2A                 6084 	ld	a,(hl+)
   1110 5E                 6085 	ld	e,(hl)
   1111 F8 00              6086 	lda	hl,0(sp)
   1113 22                 6087 	ld	(hl+),a
   1114 73                 6088 	ld	(hl),e
                           6089 ;	genPlus
                           6090 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6091 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6092 ;	genPlusIncr
                           6093 ;	Can't optimise plus by inc, falling back to the normal way
   1115 2B                 6094 	dec	hl
   1116 5E                 6095 	ld	e,(hl)
   1117 23                 6096 	inc	hl
   1118 56                 6097 	ld	d,(hl)
   1119 21 0B 00           6098 	ld	hl,#0x000B
   111C 19                 6099 	add	hl,de
   111D 7D                 6100 	ld	a,l
   111E 54                 6101 	ld	d,h
   111F F8 02              6102 	lda	hl,2(sp)
                           6103 ;	genPointerGet
                           6104 ;	AOP_STK for _rotate_player_sloc0_1_0
   1121 22                 6105 	ld	(hl+),a
   1122 72                 6106 	ld	(hl),d
   1123 5F                 6107 	ld	e,a
   1124 1A                 6108 	ld	a,(de)
   1125 47                 6109 	ld	b,a
                           6110 ;	genIpush
                           6111 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1126 79                 6112 	ld	a,c
   1127 F5                 6113 	push	af
   1128 33                 6114 	inc	sp
                           6115 ;	genIpush
   1129 78                 6116 	ld	a,b
   112A F5                 6117 	push	af
   112B 33                 6118 	inc	sp
                           6119 ;	genCall
   112C CD 00 00           6120 	call	_set_sprite_tile
   112F E8 02              6121 	lda	sp,2(sp)
                           6122 ;	game.c 899
                           6123 ;	genAssign
                           6124 ;	AOP_HL for _player
   1131 21 B3 1A           6125 	ld	hl,#_player
   1134 4E                 6126 	ld	c,(hl)
   1135 23                 6127 	inc	hl
   1136 46                 6128 	ld	b,(hl)
                           6129 ;	genPlus
                           6130 ;	genPlusIncr
                           6131 ;	Can't optimise plus by inc, falling back to the normal way
   1137 79                 6132 	ld	a,c
   1138 C6 0B              6133 	add	a,#0x0B
   113A 4F                 6134 	ld	c,a
   113B 78                 6135 	ld	a,b
   113C CE 00              6136 	adc	a,#0x00
   113E 47                 6137 	ld	b,a
                           6138 ;	genPointerGet
   113F 0A                 6139 	ld	a,(bc)
   1140 4F                 6140 	ld	c,a
                           6141 ;	genIpush
                           6142 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1141 3E 00              6143 	ld	a,#0x00
   1143 F5                 6144 	push	af
   1144 33                 6145 	inc	sp
                           6146 ;	genIpush
   1145 79                 6147 	ld	a,c
   1146 F5                 6148 	push	af
   1147 33                 6149 	inc	sp
                           6150 ;	genCall
   1148 CD 00 00           6151 	call	_set_sprite_prop
   114B E8 02              6152 	lda	sp,2(sp)
                           6153 ;	genLabel
   114D                    6154 00101$:
                           6155 ;	genEndFunction
   114D E8 04              6156 	lda	sp,4(sp)
   114F C9                 6157 	ret
   1150                    6158 ___rotate_player_end:
                           6159 ;	game.c 902
                           6160 ;	genLabel
                           6161 ;	genFunction
                           6162 ;	---------------------------------
                           6163 ; Function move_character
                           6164 ; ---------------------------------
   1150                    6165 ___move_character_start:
   1150                    6166 _move_character:
   1150 E8 F1              6167 	lda	sp,-15(sp)
                           6168 ;	game.c 905
                           6169 ;	genAssign
                           6170 ;	AOP_HL for _player
   1152 21 B3 1A           6171 	ld	hl,#_player
   1155 4E                 6172 	ld	c,(hl)
   1156 23                 6173 	inc	hl
   1157 46                 6174 	ld	b,(hl)
                           6175 ;	genPlus
                           6176 ;	genPlusIncr
                           6177 ;	Can't optimise plus by inc, falling back to the normal way
   1158 79                 6178 	ld	a,c
   1159 C6 0B              6179 	add	a,#0x0B
   115B 4F                 6180 	ld	c,a
   115C 78                 6181 	ld	a,b
   115D CE 00              6182 	adc	a,#0x00
   115F 47                 6183 	ld	b,a
                           6184 ;	genPointerGet
   1160 0A                 6185 	ld	a,(bc)
   1161 4F                 6186 	ld	c,a
                           6187 ;	genAssign
                           6188 ;	AOP_STK for 
                           6189 ;	AOP_STK for _move_character_sloc0_1_0
   1162 F8 11              6190 	lda	hl,17(sp)
   1164 2A                 6191 	ld	a,(hl+)
   1165 5E                 6192 	ld	e,(hl)
   1166 F8 0D              6193 	lda	hl,13(sp)
   1168 22                 6194 	ld	(hl+),a
   1169 73                 6195 	ld	(hl),e
                           6196 ;	genPlus
                           6197 ;	AOP_STK for _move_character_sloc0_1_0
                           6198 ;	AOP_STK for _move_character_sloc1_1_0
                           6199 ;	genPlusIncr
                           6200 ;	Can't optimise plus by inc, falling back to the normal way
   116A 2B                 6201 	dec	hl
   116B 5E                 6202 	ld	e,(hl)
   116C 23                 6203 	inc	hl
   116D 56                 6204 	ld	d,(hl)
   116E 21 0B 00           6205 	ld	hl,#0x000B
   1171 19                 6206 	add	hl,de
   1172 7D                 6207 	ld	a,l
   1173 54                 6208 	ld	d,h
   1174 F8 0B              6209 	lda	hl,11(sp)
                           6210 ;	genPointerGet
                           6211 ;	AOP_STK for _move_character_sloc1_1_0
   1176 22                 6212 	ld	(hl+),a
   1177 72                 6213 	ld	(hl),d
   1178 5F                 6214 	ld	e,a
   1179 1A                 6215 	ld	a,(de)
   117A 47                 6216 	ld	b,a
                           6217 ;	genCmpEq
                           6218 ; genCmpEq: left 1, right 1, result 0
   117B 79                 6219 	ld	a,c
   117C B8                 6220 	cp	b
                           6221 ;	game.c 906
                           6222 ;	genRet
                           6223 ;	genLabel
   117D CA 83 11           6224 	jp	z,00102$
   1180                    6225 00197$:
   1180 C3 AD 19           6226 	jp	00166$
   1183                    6227 00102$:
                           6228 ;	game.c 909
                           6229 ;	genPlus
                           6230 ;	AOP_STK for _move_character_sloc0_1_0
                           6231 ;	AOP_STK for _move_character_sloc2_1_0
                           6232 ;	genPlusIncr
                           6233 ;	Can't optimise plus by inc, falling back to the normal way
   1183 F8 0D              6234 	lda	hl,13(sp)
   1185 5E                 6235 	ld	e,(hl)
   1186 23                 6236 	inc	hl
   1187 56                 6237 	ld	d,(hl)
   1188 21 09 00           6238 	ld	hl,#0x0009
   118B 19                 6239 	add	hl,de
   118C 7D                 6240 	ld	a,l
   118D 54                 6241 	ld	d,h
   118E F8 09              6242 	lda	hl,9(sp)
                           6243 ;	genPointerGet
                           6244 ;	AOP_STK for _move_character_sloc2_1_0
   1190 22                 6245 	ld	(hl+),a
   1191 72                 6246 	ld	(hl),d
   1192 5F                 6247 	ld	e,a
   1193 1A                 6248 	ld	a,(de)
                           6249 ;	genCmpEq
                           6250 ; genCmpEq: left 1, right 1, result 0
   1194 4F                 6251 	ld	c,a
   1195 B7                 6252 	or	a,a
   1196 CA 94 15           6253 	jp	z,00164$
   1199                    6254 00198$:
                           6255 ;	game.c 912
                           6256 ;	genCmpEq
                           6257 ; genCmpEq: left 1, right 1, result 0
   1199 78                 6258 	ld	a,b
   119A FE 01              6259 	cp	a,#0x01
   119C C2 EA 14           6260 	jp	nz,00124$
   119F 18 03              6261 	jr	00200$
   11A1                    6262 00199$:
   11A1 C3 EA 14           6263 	jp	00124$
   11A4                    6264 00200$:
                           6265 ;	game.c 914
                           6266 ;	genAssign
   11A4 0E 02              6267 	ld	c,#0x02
                           6268 ;	game.c 917
                           6269 ;	genPlus
                           6270 ;	AOP_STK for _move_character_sloc0_1_0
                           6271 ;	AOP_STK for _move_character_sloc3_1_0
                           6272 ;	genPlusIncr
                           6273 ;	Can't optimise plus by inc, falling back to the normal way
   11A6 F8 0D              6274 	lda	hl,13(sp)
   11A8 5E                 6275 	ld	e,(hl)
   11A9 23                 6276 	inc	hl
   11AA 56                 6277 	ld	d,(hl)
   11AB 21 0A 00           6278 	ld	hl,#0x000A
   11AE 19                 6279 	add	hl,de
   11AF 7D                 6280 	ld	a,l
   11B0 54                 6281 	ld	d,h
   11B1 F8 07              6282 	lda	hl,7(sp)
                           6283 ;	genPointerGet
                           6284 ;	AOP_STK for _move_character_sloc3_1_0
                           6285 ;	AOP_STK for _move_character_sloc4_1_0
   11B3 22                 6286 	ld	(hl+),a
   11B4 72                 6287 	ld	(hl),d
   11B5 5F                 6288 	ld	e,a
   11B6 1A                 6289 	ld	a,(de)
   11B7 2B                 6290 	dec	hl
   11B8 2B                 6291 	dec	hl
                           6292 ;	genCmpEq
                           6293 ;	AOP_STK for _move_character_sloc4_1_0
                           6294 ; genCmpEq: left 1, right 1, result 0
   11B9 77                 6295 	ld      (hl),a
                           6296 ; Removed redundent load
   11BA FE 04              6297 	cp	a,#0x04
   11BC CA DC 11           6298 	jp	z,00105$
   11BF                    6299 00201$:
                           6300 ;	game.c 918
                           6301 ;	genCmpEq
                           6302 ;	AOP_STK for _move_character_sloc4_1_0
                           6303 ; genCmpEq: left 1, right 1, result 0
   11BF F8 06              6304 	lda	hl,6(sp)
   11C1 7E                 6305 	ld	a,(hl)
   11C2 FE 08              6306 	cp	a,#0x08
   11C4 CA DC 11           6307 	jp	z,00105$
   11C7                    6308 00202$:
                           6309 ;	game.c 919
                           6310 ;	genCmpEq
                           6311 ;	AOP_STK for _move_character_sloc4_1_0
                           6312 ; genCmpEq: left 1, right 1, result 0
   11C7 F8 06              6313 	lda	hl,6(sp)
   11C9 7E                 6314 	ld	a,(hl)
   11CA FE 0C              6315 	cp	a,#0x0C
   11CC CA DC 11           6316 	jp	z,00105$
   11CF                    6317 00203$:
                           6318 ;	game.c 920
                           6319 ;	genCmpEq
                           6320 ;	AOP_STK for _move_character_sloc4_1_0
                           6321 ; genCmpEq: left 1, right 1, result 0
   11CF F8 06              6322 	lda	hl,6(sp)
   11D1 7E                 6323 	ld	a,(hl)
   11D2 FE 10              6324 	cp	a,#0x10
   11D4 C2 37 12           6325 	jp	nz,00106$
   11D7 18 03              6326 	jr	00205$
   11D9                    6327 00204$:
   11D9 C3 37 12           6328 	jp	00106$
   11DC                    6329 00205$:
                           6330 ;	genLabel
   11DC                    6331 00105$:
                           6332 ;	game.c 922
                           6333 ;	genPlus
                           6334 ;	AOP_STK for _move_character_sloc0_1_0
                           6335 ;	AOP_STK for _move_character_sloc5_1_0
                           6336 ;	genPlusIncr
                           6337 ;	Can't optimise plus by inc, falling back to the normal way
   11DC F8 0D              6338 	lda	hl,13(sp)
   11DE 5E                 6339 	ld	e,(hl)
   11DF 23                 6340 	inc	hl
   11E0 56                 6341 	ld	d,(hl)
   11E1 21 08 00           6342 	ld	hl,#0x0008
   11E4 19                 6343 	add	hl,de
   11E5 7D                 6344 	ld	a,l
   11E6 54                 6345 	ld	d,h
   11E7 F8 04              6346 	lda	hl,4(sp)
                           6347 ;	genPointerGet
                           6348 ;	AOP_STK for _move_character_sloc5_1_0
                           6349 ;	AOP_STK for _move_character_sloc4_1_0
   11E9 22                 6350 	ld	(hl+),a
   11EA 72                 6351 	ld	(hl),d
   11EB 5F                 6352 	ld	e,a
   11EC 1A                 6353 	ld	a,(de)
   11ED 23                 6354 	inc	hl
   11EE 77                 6355 	ld	(hl),a
                           6356 ;	genPlus
                           6357 ;	AOP_STK for _move_character_sloc0_1_0
                           6358 ;	AOP_STK for _move_character_sloc5_1_0
                           6359 ;	genPlusIncr
                           6360 ;	Can't optimise plus by inc, falling back to the normal way
   11EF F8 0D              6361 	lda	hl,13(sp)
   11F1 5E                 6362 	ld	e,(hl)
   11F2 23                 6363 	inc	hl
   11F3 56                 6364 	ld	d,(hl)
   11F4 21 01 00           6365 	ld	hl,#0x0001
   11F7 19                 6366 	add	hl,de
   11F8 7D                 6367 	ld	a,l
   11F9 54                 6368 	ld	d,h
   11FA F8 04              6369 	lda	hl,4(sp)
                           6370 ;	genPointerGet
                           6371 ;	AOP_STK for _move_character_sloc5_1_0
                           6372 ;	AOP_STK for _move_character_sloc6_1_0
   11FC 22                 6373 	ld	(hl+),a
   11FD 72                 6374 	ld	(hl),d
   11FE 5F                 6375 	ld	e,a
   11FF 1A                 6376 	ld	a,(de)
   1200 2B                 6377 	dec	hl
   1201 2B                 6378 	dec	hl
   1202 77                 6379 	ld	(hl),a
                           6380 ;	genPointerGet
                           6381 ;	AOP_STK for _move_character_sloc0_1_0
                           6382 ;	AOP_STK for _move_character_sloc5_1_0
   1203 F8 0D              6383 	lda	hl,13(sp)
   1205 5E                 6384 	ld	e,(hl)
   1206 23                 6385 	inc	hl
   1207 56                 6386 	ld	d,(hl)
   1208 1A                 6387 	ld	a,(de)
   1209 F8 04              6388 	lda	hl,4(sp)
   120B 77                 6389 	ld	(hl),a
                           6390 ;	genIpush
                           6391 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   120C C5                 6392 	push	bc
                           6393 ;	AOP_STK for _move_character_sloc4_1_0
   120D 23                 6394 	inc	hl
   120E 23                 6395 	inc	hl
   120F 7E                 6396 	ld	a,(hl)
   1210 F5                 6397 	push	af
   1211 33                 6398 	inc	sp
                           6399 ;	genIpush
                           6400 ;	AOP_STK for _move_character_sloc6_1_0
   1212 F8 06              6401 	lda	hl,6(sp)
   1214 7E                 6402 	ld	a,(hl)
   1215 F5                 6403 	push	af
   1216 33                 6404 	inc	sp
                           6405 ;	genIpush
                           6406 ;	AOP_STK for _move_character_sloc5_1_0
   1217 23                 6407 	inc	hl
   1218 7E                 6408 	ld	a,(hl)
   1219 F5                 6409 	push	af
   121A 33                 6410 	inc	sp
                           6411 ;	genCall
   121B CD C1 0E           6412 	call	_can_move
                           6413 ;	AOP_STK for _move_character_sloc5_1_0
   121E F8 0A              6414 	lda	hl,10(sp)
   1220 72                 6415 	ld	(hl),d
   1221 2B                 6416 	dec	hl
   1222 73                 6417 	ld	(hl),e
   1223 E8 03              6418 	lda	sp,3(sp)
   1225 C1                 6419 	pop	bc
                           6420 ;	genIfx
                           6421 ;	AOP_STK for _move_character_sloc5_1_0
   1226 F8 04              6422 	lda	hl,4(sp)
   1228 2A                 6423 	ld	a,(hl+)
   1229 B6                 6424 	or	a,(hl)
   122A C2 37 12           6425 	jp	nz,00106$
                           6426 ;	game.c 923
                           6427 ;	genAssign (pointer)
                           6428 ;	AOP_STK for _move_character_sloc3_1_0
   122D 23                 6429 	inc	hl
   122E 23                 6430 	inc	hl
   122F 5E                 6431 	ld	e,(hl)
   1230 23                 6432 	inc	hl
   1231 56                 6433 	ld	d,(hl)
   1232 3E 01              6434 	ld	a,#0x01
   1234 12                 6435 	ld	(de),a
                           6436 ;	game.c 925
                           6437 ;	genAssign
   1235 0E 00              6438 	ld	c,#0x00
                           6439 ;	genLabel
   1237                    6440 00106$:
                           6441 ;	game.c 930
                           6442 ;	genPlus
                           6443 ;	AOP_STK for _move_character_sloc0_1_0
                           6444 ;	AOP_STK for _move_character_sloc5_1_0
                           6445 ;	genPlusIncr
                           6446 ;	Can't optimise plus by inc, falling back to the normal way
   1237 F8 0D              6447 	lda	hl,13(sp)
   1239 5E                 6448 	ld	e,(hl)
   123A 23                 6449 	inc	hl
   123B 56                 6450 	ld	d,(hl)
   123C 21 08 00           6451 	ld	hl,#0x0008
   123F 19                 6452 	add	hl,de
   1240 7D                 6453 	ld	a,l
   1241 54                 6454 	ld	d,h
   1242 F8 04              6455 	lda	hl,4(sp)
                           6456 ;	genPointerGet
                           6457 ;	AOP_STK for _move_character_sloc5_1_0
                           6458 ;	AOP_STK for _move_character_sloc6_1_0
   1244 22                 6459 	ld	(hl+),a
   1245 72                 6460 	ld	(hl),d
   1246 5F                 6461 	ld	e,a
   1247 1A                 6462 	ld	a,(de)
   1248 2B                 6463 	dec	hl
   1249 2B                 6464 	dec	hl
   124A 77                 6465 	ld	(hl),a
                           6466 ;	genCmpGt
                           6467 ;	AOP_STK for _move_character_sloc6_1_0
                           6468 ;	AOP_STK for _move_character_sloc5_1_0
   124B 3E 04              6469 	ld	a,#0x04
   124D 96                 6470 	sub	a,(hl)
   124E 3E 00              6471 	ld	a,#0x00
   1250 17                 6472 	rla
   1251 23                 6473 	inc	hl
   1252 77                 6474 	ld	(hl),a
                           6475 ;	genIfx
                           6476 ;	AOP_STK for _move_character_sloc5_1_0
   1253 AF                 6477 	xor	a,a
   1254 B6                 6478 	or	a,(hl)
   1255 C2 C0 13           6479 	jp	nz,00115$
                           6480 ;	genJumpTab
                           6481 ;	AOP_STK for _move_character_sloc6_1_0
   1258 2B                 6482 	dec	hl
   1259 5E                 6483 	ld	e,(hl)
   125A 16 00              6484 	ld	d,#0x00
   125C 21 63 12           6485 	ld	hl,#00206$
   125F 19                 6486 	add	hl,de
   1260 19                 6487 	add	hl,de
   1261 19                 6488 	add	hl,de
   1262 E9                 6489 	jp	(hl)
   1263                    6490 00206$:
   1263 C3 BA 13           6491 	jp	00114$
   1266 C3 0C 13           6492 	jp	00112$
   1269 C3 C2 12           6493 	jp	00111$
   126C C3 66 13           6494 	jp	00113$
   126F C3 72 12           6495 	jp	00110$
                           6496 ;	game.c 932
                           6497 ;	genLabel
   1272                    6498 00110$:
                           6499 ;	genPointerGet
                           6500 ;	AOP_STK for _move_character_sloc0_1_0
                           6501 ;	AOP_STK for _move_character_sloc4_1_0
   1272 F8 0D              6502 	lda	hl,13(sp)
   1274 5E                 6503 	ld	e,(hl)
   1275 23                 6504 	inc	hl
   1276 56                 6505 	ld	d,(hl)
   1277 1A                 6506 	ld	a,(de)
   1278 F8 06              6507 	lda	hl,6(sp)
                           6508 ;	genMinus
                           6509 ;	AOP_STK for _move_character_sloc4_1_0
                           6510 ;	AOP_STK for _move_character_sloc7_1_0
   127A 77                 6511 	ld      (hl),a
                           6512 ; Removed redundent load
   127B 91                 6513 	sub	a,c
   127C F8 02              6514 	lda	hl,2(sp)
   127E 77                 6515 	ld	(hl),a
                           6516 ;	genAssign (pointer)
                           6517 ;	AOP_STK for _move_character_sloc0_1_0
                           6518 ;	AOP_STK for _move_character_sloc7_1_0
   127F F8 0D              6519 	lda	hl,13(sp)
   1281 5E                 6520 	ld	e,(hl)
   1282 23                 6521 	inc	hl
   1283 56                 6522 	ld	d,(hl)
   1284 F8 02              6523 	lda	hl,2(sp)
   1286 7E                 6524 	ld	a,(hl)
   1287 12                 6525 	ld	(de),a
                           6526 ;	game.c 933
                           6527 ;	genPlus
                           6528 ;	AOP_STK for _move_character_sloc0_1_0
                           6529 ;	AOP_STK for _move_character_sloc8_1_0
                           6530 ;	genPlusIncr
                           6531 ;	Can't optimise plus by inc, falling back to the normal way
   1288 F8 0D              6532 	lda	hl,13(sp)
   128A 5E                 6533 	ld	e,(hl)
   128B 23                 6534 	inc	hl
   128C 56                 6535 	ld	d,(hl)
   128D 21 04 00           6536 	ld	hl,#0x0004
   1290 19                 6537 	add	hl,de
   1291 7D                 6538 	ld	a,l
   1292 54                 6539 	ld	d,h
   1293 F8 00              6540 	lda	hl,0(sp)
                           6541 ;	genPointerGet
                           6542 ;	AOP_STK for _move_character_sloc8_1_0
                           6543 ;	AOP_STK for _move_character_sloc7_1_0
   1295 22                 6544 	ld	(hl+),a
   1296 72                 6545 	ld	(hl),d
   1297 5F                 6546 	ld	e,a
   1298 1A                 6547 	ld	a,(de)
   1299 23                 6548 	inc	hl
   129A 77                 6549 	ld	(hl),a
                           6550 ;	genIpush
                           6551 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   129B C5                 6552 	push	bc
                           6553 ;	AOP_STK for _move_character_sloc7_1_0
   129C 7E                 6554 	ld	a,(hl)
   129D F5                 6555 	push	af
   129E 33                 6556 	inc	sp
                           6557 ;	genIpush
   129F 78                 6558 	ld	a,b
   12A0 F5                 6559 	push	af
   12A1 33                 6560 	inc	sp
                           6561 ;	genCall
   12A2 CD 00 00           6562 	call	_set_sprite_tile
   12A5 E8 02              6563 	lda	sp,2(sp)
   12A7 C1                 6564 	pop	bc
                           6565 ;	game.c 934
                           6566 ;	genPointerGet
                           6567 ;	AOP_STK for _move_character_sloc1_1_0
                           6568 ;	AOP_STK for _move_character_sloc8_1_0
   12A8 F8 0B              6569 	lda	hl,11(sp)
   12AA 5E                 6570 	ld	e,(hl)
   12AB 23                 6571 	inc	hl
   12AC 56                 6572 	ld	d,(hl)
   12AD 1A                 6573 	ld	a,(de)
   12AE F8 00              6574 	lda	hl,0(sp)
   12B0 77                 6575 	ld	(hl),a
                           6576 ;	genIpush
                           6577 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12B1 C5                 6578 	push	bc
   12B2 3E 20              6579 	ld	a,#0x20
   12B4 F5                 6580 	push	af
   12B5 33                 6581 	inc	sp
                           6582 ;	genIpush
                           6583 ;	AOP_STK for _move_character_sloc8_1_0
   12B6 7E                 6584 	ld	a,(hl)
   12B7 F5                 6585 	push	af
   12B8 33                 6586 	inc	sp
                           6587 ;	genCall
   12B9 CD 00 00           6588 	call	_set_sprite_prop
   12BC E8 02              6589 	lda	sp,2(sp)
   12BE C1                 6590 	pop	bc
                           6591 ;	game.c 935
                           6592 ;	genGoto
   12BF C3 C0 13           6593 	jp	00115$
                           6594 ;	game.c 937
                           6595 ;	genLabel
   12C2                    6596 00111$:
                           6597 ;	genPlus
                           6598 ;	AOP_STK for _move_character_sloc0_1_0
                           6599 ;	AOP_STK for _move_character_sloc8_1_0
                           6600 ;	genPlusIncr
                           6601 ;	Can't optimise plus by inc, falling back to the normal way
   12C2 F8 0D              6602 	lda	hl,13(sp)
   12C4 5E                 6603 	ld	e,(hl)
   12C5 23                 6604 	inc	hl
   12C6 56                 6605 	ld	d,(hl)
   12C7 21 04 00           6606 	ld	hl,#0x0004
   12CA 19                 6607 	add	hl,de
   12CB 7D                 6608 	ld	a,l
   12CC 54                 6609 	ld	d,h
   12CD F8 00              6610 	lda	hl,0(sp)
                           6611 ;	genPointerGet
                           6612 ;	AOP_STK for _move_character_sloc8_1_0
                           6613 ;	AOP_STK for _move_character_sloc7_1_0
   12CF 22                 6614 	ld	(hl+),a
   12D0 72                 6615 	ld	(hl),d
   12D1 5F                 6616 	ld	e,a
   12D2 1A                 6617 	ld	a,(de)
   12D3 23                 6618 	inc	hl
   12D4 77                 6619 	ld	(hl),a
                           6620 ;	genIpush
                           6621 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12D5 C5                 6622 	push	bc
                           6623 ;	AOP_STK for _move_character_sloc7_1_0
   12D6 7E                 6624 	ld	a,(hl)
   12D7 F5                 6625 	push	af
   12D8 33                 6626 	inc	sp
                           6627 ;	genIpush
   12D9 78                 6628 	ld	a,b
   12DA F5                 6629 	push	af
   12DB 33                 6630 	inc	sp
                           6631 ;	genCall
   12DC CD 00 00           6632 	call	_set_sprite_tile
   12DF E8 02              6633 	lda	sp,2(sp)
   12E1 C1                 6634 	pop	bc
                           6635 ;	game.c 938
                           6636 ;	genPointerGet
                           6637 ;	AOP_STK for _move_character_sloc1_1_0
                           6638 ;	AOP_STK for _move_character_sloc8_1_0
   12E2 F8 0B              6639 	lda	hl,11(sp)
   12E4 5E                 6640 	ld	e,(hl)
   12E5 23                 6641 	inc	hl
   12E6 56                 6642 	ld	d,(hl)
   12E7 1A                 6643 	ld	a,(de)
   12E8 F8 00              6644 	lda	hl,0(sp)
   12EA 77                 6645 	ld	(hl),a
                           6646 ;	genIpush
                           6647 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12EB C5                 6648 	push	bc
   12EC 3E 00              6649 	ld	a,#0x00
   12EE F5                 6650 	push	af
   12EF 33                 6651 	inc	sp
                           6652 ;	genIpush
                           6653 ;	AOP_STK for _move_character_sloc8_1_0
   12F0 7E                 6654 	ld	a,(hl)
   12F1 F5                 6655 	push	af
   12F2 33                 6656 	inc	sp
                           6657 ;	genCall
   12F3 CD 00 00           6658 	call	_set_sprite_prop
   12F6 E8 02              6659 	lda	sp,2(sp)
   12F8 C1                 6660 	pop	bc
                           6661 ;	game.c 939
                           6662 ;	genPointerGet
                           6663 ;	AOP_STK for _move_character_sloc0_1_0
                           6664 ;	AOP_STK for _move_character_sloc8_1_0
   12F9 F8 0D              6665 	lda	hl,13(sp)
   12FB 5E                 6666 	ld	e,(hl)
   12FC 23                 6667 	inc	hl
   12FD 56                 6668 	ld	d,(hl)
   12FE 1A                 6669 	ld	a,(de)
   12FF F8 00              6670 	lda	hl,0(sp)
                           6671 ;	genPlus
                           6672 ;	AOP_STK for _move_character_sloc8_1_0
                           6673 ;	Can't optimise plus by inc, falling back to the normal way
   1301 77                 6674 	ld      (hl),a
                           6675 ; Removed redundent load
   1302 81                 6676 	add	a,c
                           6677 ;	genAssign (pointer)
                           6678 ;	AOP_STK for _move_character_sloc0_1_0
   1303 F8 0D              6679 	lda	hl,13(sp)
   1305 5E                 6680 	ld	e,(hl)
   1306 23                 6681 	inc	hl
   1307 56                 6682 	ld	d,(hl)
   1308 12                 6683 	ld	(de),a
                           6684 ;	game.c 940
                           6685 ;	genGoto
   1309 C3 C0 13           6686 	jp	00115$
                           6687 ;	game.c 942
                           6688 ;	genLabel
   130C                    6689 00112$:
                           6690 ;	genPlus
                           6691 ;	AOP_STK for _move_character_sloc0_1_0
                           6692 ;	AOP_STK for _move_character_sloc8_1_0
                           6693 ;	genPlusIncr
                           6694 ;	Can't optimise plus by inc, falling back to the normal way
   130C F8 0D              6695 	lda	hl,13(sp)
   130E 5E                 6696 	ld	e,(hl)
   130F 23                 6697 	inc	hl
   1310 56                 6698 	ld	d,(hl)
   1311 21 07 00           6699 	ld	hl,#0x0007
   1314 19                 6700 	add	hl,de
   1315 7D                 6701 	ld	a,l
   1316 54                 6702 	ld	d,h
   1317 F8 00              6703 	lda	hl,0(sp)
                           6704 ;	genPointerGet
                           6705 ;	AOP_STK for _move_character_sloc8_1_0
                           6706 ;	AOP_STK for _move_character_sloc7_1_0
   1319 22                 6707 	ld	(hl+),a
   131A 72                 6708 	ld	(hl),d
   131B 5F                 6709 	ld	e,a
   131C 1A                 6710 	ld	a,(de)
   131D 23                 6711 	inc	hl
   131E 77                 6712 	ld	(hl),a
                           6713 ;	genIpush
                           6714 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   131F C5                 6715 	push	bc
                           6716 ;	AOP_STK for _move_character_sloc7_1_0
   1320 7E                 6717 	ld	a,(hl)
   1321 F5                 6718 	push	af
   1322 33                 6719 	inc	sp
                           6720 ;	genIpush
   1323 78                 6721 	ld	a,b
   1324 F5                 6722 	push	af
   1325 33                 6723 	inc	sp
                           6724 ;	genCall
   1326 CD 00 00           6725 	call	_set_sprite_tile
   1329 E8 02              6726 	lda	sp,2(sp)
   132B C1                 6727 	pop	bc
                           6728 ;	game.c 943
                           6729 ;	genPointerGet
                           6730 ;	AOP_STK for _move_character_sloc1_1_0
                           6731 ;	AOP_STK for _move_character_sloc8_1_0
   132C F8 0B              6732 	lda	hl,11(sp)
   132E 5E                 6733 	ld	e,(hl)
   132F 23                 6734 	inc	hl
   1330 56                 6735 	ld	d,(hl)
   1331 1A                 6736 	ld	a,(de)
   1332 F8 00              6737 	lda	hl,0(sp)
   1334 77                 6738 	ld	(hl),a
                           6739 ;	genIpush
                           6740 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1335 C5                 6741 	push	bc
   1336 3E 20              6742 	ld	a,#0x20
   1338 F5                 6743 	push	af
   1339 33                 6744 	inc	sp
                           6745 ;	genIpush
                           6746 ;	AOP_STK for _move_character_sloc8_1_0
   133A 7E                 6747 	ld	a,(hl)
   133B F5                 6748 	push	af
   133C 33                 6749 	inc	sp
                           6750 ;	genCall
   133D CD 00 00           6751 	call	_set_sprite_prop
   1340 E8 02              6752 	lda	sp,2(sp)
   1342 C1                 6753 	pop	bc
                           6754 ;	game.c 944
                           6755 ;	genPlus
                           6756 ;	AOP_STK for _move_character_sloc0_1_0
                           6757 ;	AOP_STK for _move_character_sloc8_1_0
                           6758 ;	genPlusIncr
                           6759 ;	Can't optimise plus by inc, falling back to the normal way
   1343 F8 0D              6760 	lda	hl,13(sp)
   1345 5E                 6761 	ld	e,(hl)
   1346 23                 6762 	inc	hl
   1347 56                 6763 	ld	d,(hl)
   1348 21 01 00           6764 	ld	hl,#0x0001
   134B 19                 6765 	add	hl,de
   134C 7D                 6766 	ld	a,l
   134D 54                 6767 	ld	d,h
   134E F8 00              6768 	lda	hl,0(sp)
                           6769 ;	genPointerGet
                           6770 ;	AOP_STK for _move_character_sloc8_1_0
                           6771 ;	AOP_STK for _move_character_sloc7_1_0
   1350 22                 6772 	ld	(hl+),a
   1351 72                 6773 	ld	(hl),d
   1352 5F                 6774 	ld	e,a
   1353 1A                 6775 	ld	a,(de)
   1354 23                 6776 	inc	hl
                           6777 ;	genMinus
                           6778 ;	AOP_STK for _move_character_sloc7_1_0
                           6779 ;	AOP_STK for _move_character_sloc4_1_0
   1355 77                 6780 	ld      (hl),a
                           6781 ; Removed redundent load
   1356 91                 6782 	sub	a,c
   1357 F8 06              6783 	lda	hl,6(sp)
   1359 77                 6784 	ld	(hl),a
                           6785 ;	genAssign (pointer)
                           6786 ;	AOP_STK for _move_character_sloc8_1_0
                           6787 ;	AOP_STK for _move_character_sloc4_1_0
   135A F8 00              6788 	lda	hl,0(sp)
   135C 5E                 6789 	ld	e,(hl)
   135D 23                 6790 	inc	hl
   135E 56                 6791 	ld	d,(hl)
   135F F8 06              6792 	lda	hl,6(sp)
   1361 7E                 6793 	ld	a,(hl)
   1362 12                 6794 	ld	(de),a
                           6795 ;	game.c 945
                           6796 ;	genGoto
   1363 C3 C0 13           6797 	jp	00115$
                           6798 ;	game.c 947
                           6799 ;	genLabel
   1366                    6800 00113$:
                           6801 ;	genPlus
                           6802 ;	AOP_STK for _move_character_sloc0_1_0
                           6803 ;	AOP_STK for _move_character_sloc8_1_0
                           6804 ;	genPlusIncr
                           6805 ;	Can't optimise plus by inc, falling back to the normal way
   1366 F8 0D              6806 	lda	hl,13(sp)
   1368 5E                 6807 	ld	e,(hl)
   1369 23                 6808 	inc	hl
   136A 56                 6809 	ld	d,(hl)
   136B 21 07 00           6810 	ld	hl,#0x0007
   136E 19                 6811 	add	hl,de
   136F 7D                 6812 	ld	a,l
   1370 54                 6813 	ld	d,h
   1371 F8 00              6814 	lda	hl,0(sp)
                           6815 ;	genPointerGet
                           6816 ;	AOP_STK for _move_character_sloc8_1_0
                           6817 ;	AOP_STK for _move_character_sloc7_1_0
   1373 22                 6818 	ld	(hl+),a
   1374 72                 6819 	ld	(hl),d
   1375 5F                 6820 	ld	e,a
   1376 1A                 6821 	ld	a,(de)
   1377 23                 6822 	inc	hl
   1378 77                 6823 	ld	(hl),a
                           6824 ;	genIpush
                           6825 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1379 C5                 6826 	push	bc
                           6827 ;	AOP_STK for _move_character_sloc7_1_0
   137A 7E                 6828 	ld	a,(hl)
   137B F5                 6829 	push	af
   137C 33                 6830 	inc	sp
                           6831 ;	genIpush
   137D 78                 6832 	ld	a,b
   137E F5                 6833 	push	af
   137F 33                 6834 	inc	sp
                           6835 ;	genCall
   1380 CD 00 00           6836 	call	_set_sprite_tile
   1383 E8 02              6837 	lda	sp,2(sp)
   1385 C1                 6838 	pop	bc
                           6839 ;	game.c 948
                           6840 ;	genPointerGet
                           6841 ;	AOP_STK for _move_character_sloc1_1_0
                           6842 ;	AOP_STK for _move_character_sloc8_1_0
   1386 F8 0B              6843 	lda	hl,11(sp)
   1388 5E                 6844 	ld	e,(hl)
   1389 23                 6845 	inc	hl
   138A 56                 6846 	ld	d,(hl)
   138B 1A                 6847 	ld	a,(de)
   138C F8 00              6848 	lda	hl,0(sp)
   138E 77                 6849 	ld	(hl),a
                           6850 ;	genIpush
                           6851 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   138F C5                 6852 	push	bc
   1390 3E 40              6853 	ld	a,#0x40
   1392 F5                 6854 	push	af
   1393 33                 6855 	inc	sp
                           6856 ;	genIpush
                           6857 ;	AOP_STK for _move_character_sloc8_1_0
   1394 7E                 6858 	ld	a,(hl)
   1395 F5                 6859 	push	af
   1396 33                 6860 	inc	sp
                           6861 ;	genCall
   1397 CD 00 00           6862 	call	_set_sprite_prop
   139A E8 02              6863 	lda	sp,2(sp)
   139C C1                 6864 	pop	bc
                           6865 ;	game.c 949
                           6866 ;	genPlus
                           6867 ;	AOP_STK for _move_character_sloc0_1_0
                           6868 ;	AOP_STK for _move_character_sloc8_1_0
                           6869 ;	genPlusIncr
                           6870 ;	Can't optimise plus by inc, falling back to the normal way
   139D F8 0D              6871 	lda	hl,13(sp)
   139F 5E                 6872 	ld	e,(hl)
   13A0 23                 6873 	inc	hl
   13A1 56                 6874 	ld	d,(hl)
   13A2 21 01 00           6875 	ld	hl,#0x0001
   13A5 19                 6876 	add	hl,de
   13A6 7D                 6877 	ld	a,l
   13A7 54                 6878 	ld	d,h
   13A8 F8 00              6879 	lda	hl,0(sp)
                           6880 ;	genPointerGet
                           6881 ;	AOP_STK for _move_character_sloc8_1_0
                           6882 ;	AOP_STK for _move_character_sloc7_1_0
   13AA 22                 6883 	ld	(hl+),a
   13AB 72                 6884 	ld	(hl),d
   13AC 5F                 6885 	ld	e,a
   13AD 1A                 6886 	ld	a,(de)
   13AE 23                 6887 	inc	hl
                           6888 ;	genPlus
                           6889 ;	AOP_STK for _move_character_sloc7_1_0
                           6890 ;	Can't optimise plus by inc, falling back to the normal way
   13AF 77                 6891 	ld      (hl),a
                           6892 ; Removed redundent load
   13B0 81                 6893 	add	a,c
                           6894 ;	genAssign (pointer)
                           6895 ;	AOP_STK for _move_character_sloc8_1_0
   13B1 2B                 6896 	dec	hl
   13B2 2B                 6897 	dec	hl
   13B3 5E                 6898 	ld	e,(hl)
   13B4 23                 6899 	inc	hl
   13B5 56                 6900 	ld	d,(hl)
   13B6 12                 6901 	ld	(de),a
                           6902 ;	game.c 950
                           6903 ;	genGoto
   13B7 C3 C0 13           6904 	jp	00115$
                           6905 ;	game.c 952
                           6906 ;	genLabel
   13BA                    6907 00114$:
                           6908 ;	genCall
                           6909 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13BA C5                 6910 	push	bc
   13BB CD AA 0F           6911 	call	_rotate_player
   13BE E1                 6912 	pop	hl
   13BF 44                 6913 	ld	b,h
                           6914 ;	game.c 954
                           6915 ;	genLabel
   13C0                    6916 00115$:
                           6917 ;	game.c 956
                           6918 ;	genPointerGet
                           6919 ;	AOP_STK for _move_character_sloc3_1_0
   13C0 F8 07              6920 	lda	hl,7(sp)
   13C2 5E                 6921 	ld	e,(hl)
   13C3 23                 6922 	inc	hl
   13C4 56                 6923 	ld	d,(hl)
   13C5 1A                 6924 	ld	a,(de)
   13C6 4F                 6925 	ld	c,a
                           6926 ;	genMinus
   13C7 0D                 6927 	dec	c
                           6928 ;	genAssign (pointer)
                           6929 ;	AOP_STK for _move_character_sloc3_1_0
   13C8 2B                 6930 	dec	hl
   13C9 5E                 6931 	ld	e,(hl)
   13CA 23                 6932 	inc	hl
   13CB 56                 6933 	ld	d,(hl)
   13CC 79                 6934 	ld	a,c
   13CD 12                 6935 	ld	(de),a
                           6936 ;	game.c 957
                           6937 ;	genCmpEq
                           6938 ; genCmpEq: left 1, right 1, result 0
   13CE 79                 6939 	ld	a,c
   13CF B7                 6940 	or	a,a
   13D0 C2 EA 14           6941 	jp	nz,00124$
   13D3 18 03              6942 	jr	00208$
   13D5                    6943 00207$:
   13D5 C3 EA 14           6944 	jp	00124$
   13D8                    6945 00208$:
                           6946 ;	game.c 958
                           6947 ;	genAssign (pointer)
                           6948 ;	AOP_STK for _move_character_sloc2_1_0
   13D8 F8 09              6949 	lda	hl,9(sp)
   13DA 5E                 6950 	ld	e,(hl)
   13DB 23                 6951 	inc	hl
   13DC 56                 6952 	ld	d,(hl)
   13DD 3E 00              6953 	ld	a,#0x00
   13DF 12                 6954 	ld	(de),a
                           6955 ;	game.c 959
                           6956 ;	genCmpLt
                           6957 ;	AOP_STK for _move_character_sloc6_1_0
   13E0 F8 03              6958 	lda	hl,3(sp)
   13E2 7E                 6959 	ld	a,(hl)
   13E3 FE 01              6960 	cp	#0x01
   13E5 DA EA 14           6961 	jp	c,00124$
                           6962 ;	genIfx
                           6963 ;	AOP_STK for _move_character_sloc5_1_0
   13E8 AF                 6964 	xor	a,a
   13E9 23                 6965 	inc	hl
   13EA B6                 6966 	or	a,(hl)
   13EB C2 EA 14           6967 	jp	nz,00124$
                           6968 ;	genMinus
                           6969 ;	AOP_STK for _move_character_sloc6_1_0
   13EE 2B                 6970 	dec	hl
   13EF 7E                 6971 	ld	a,(hl)
   13F0 C6 FF              6972 	add	a,#0xFF
   13F2 4F                 6973 	ld	c,a
                           6974 ;	genJumpTab
   13F3 59                 6975 	ld	e,c
   13F4 16 00              6976 	ld	d,#0x00
   13F6 21 FD 13           6977 	ld	hl,#00209$
   13F9 19                 6978 	add	hl,de
   13FA 19                 6979 	add	hl,de
   13FB 19                 6980 	add	hl,de
   13FC E9                 6981 	jp	(hl)
   13FD                    6982 00209$:
   13FD C3 7B 14           6983 	jp	00118$
   1400 C3 42 14           6984 	jp	00117$
   1403 C3 B4 14           6985 	jp	00119$
   1406 C3 09 14           6986 	jp	00116$
                           6987 ;	game.c 962
                           6988 ;	genLabel
   1409                    6989 00116$:
                           6990 ;	genPlus
                           6991 ;	AOP_STK for _move_character_sloc0_1_0
                           6992 ;	AOP_STK for _move_character_sloc8_1_0
                           6993 ;	genPlusIncr
                           6994 ;	Can't optimise plus by inc, falling back to the normal way
   1409 F8 0D              6995 	lda	hl,13(sp)
   140B 5E                 6996 	ld	e,(hl)
   140C 23                 6997 	inc	hl
   140D 56                 6998 	ld	d,(hl)
   140E 21 02 00           6999 	ld	hl,#0x0002
   1411 19                 7000 	add	hl,de
   1412 7D                 7001 	ld	a,l
   1413 54                 7002 	ld	d,h
   1414 F8 00              7003 	lda	hl,0(sp)
                           7004 ;	genPointerGet
                           7005 ;	AOP_STK for _move_character_sloc8_1_0
   1416 22                 7006 	ld	(hl+),a
   1417 72                 7007 	ld	(hl),d
   1418 5F                 7008 	ld	e,a
   1419 1A                 7009 	ld	a,(de)
   141A 4F                 7010 	ld	c,a
                           7011 ;	genIpush
                           7012 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   141B C5                 7013 	push	bc
   141C 79                 7014 	ld	a,c
   141D F5                 7015 	push	af
   141E 33                 7016 	inc	sp
                           7017 ;	genIpush
   141F 78                 7018 	ld	a,b
   1420 F5                 7019 	push	af
   1421 33                 7020 	inc	sp
                           7021 ;	genCall
   1422 CD 00 00           7022 	call	_set_sprite_tile
   1425 E8 02              7023 	lda	sp,2(sp)
   1427 E1                 7024 	pop	hl
   1428 44                 7025 	ld	b,h
                           7026 ;	game.c 963
                           7027 ;	genPointerGet
                           7028 ;	AOP_STK for _move_character_sloc1_1_0
   1429 F8 0B              7029 	lda	hl,11(sp)
   142B 5E                 7030 	ld	e,(hl)
   142C 23                 7031 	inc	hl
   142D 56                 7032 	ld	d,(hl)
   142E 1A                 7033 	ld	a,(de)
   142F 4F                 7034 	ld	c,a
                           7035 ;	genIpush
                           7036 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1430 C5                 7037 	push	bc
   1431 3E 20              7038 	ld	a,#0x20
   1433 F5                 7039 	push	af
   1434 33                 7040 	inc	sp
                           7041 ;	genIpush
   1435 79                 7042 	ld	a,c
   1436 F5                 7043 	push	af
   1437 33                 7044 	inc	sp
                           7045 ;	genCall
   1438 CD 00 00           7046 	call	_set_sprite_prop
   143B E8 02              7047 	lda	sp,2(sp)
   143D E1                 7048 	pop	hl
   143E 44                 7049 	ld	b,h
                           7050 ;	game.c 964
                           7051 ;	genGoto
   143F C3 EA 14           7052 	jp	00124$
                           7053 ;	game.c 967
                           7054 ;	genLabel
   1442                    7055 00117$:
                           7056 ;	genPlus
                           7057 ;	AOP_STK for _move_character_sloc0_1_0
                           7058 ;	AOP_STK for _move_character_sloc8_1_0
                           7059 ;	genPlusIncr
                           7060 ;	Can't optimise plus by inc, falling back to the normal way
   1442 F8 0D              7061 	lda	hl,13(sp)
   1444 5E                 7062 	ld	e,(hl)
   1445 23                 7063 	inc	hl
   1446 56                 7064 	ld	d,(hl)
   1447 21 02 00           7065 	ld	hl,#0x0002
   144A 19                 7066 	add	hl,de
   144B 7D                 7067 	ld	a,l
   144C 54                 7068 	ld	d,h
   144D F8 00              7069 	lda	hl,0(sp)
                           7070 ;	genPointerGet
                           7071 ;	AOP_STK for _move_character_sloc8_1_0
   144F 22                 7072 	ld	(hl+),a
   1450 72                 7073 	ld	(hl),d
   1451 5F                 7074 	ld	e,a
   1452 1A                 7075 	ld	a,(de)
   1453 4F                 7076 	ld	c,a
                           7077 ;	genIpush
                           7078 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1454 C5                 7079 	push	bc
   1455 79                 7080 	ld	a,c
   1456 F5                 7081 	push	af
   1457 33                 7082 	inc	sp
                           7083 ;	genIpush
   1458 78                 7084 	ld	a,b
   1459 F5                 7085 	push	af
   145A 33                 7086 	inc	sp
                           7087 ;	genCall
   145B CD 00 00           7088 	call	_set_sprite_tile
   145E E8 02              7089 	lda	sp,2(sp)
   1460 E1                 7090 	pop	hl
   1461 44                 7091 	ld	b,h
                           7092 ;	game.c 968
                           7093 ;	genPointerGet
                           7094 ;	AOP_STK for _move_character_sloc1_1_0
   1462 F8 0B              7095 	lda	hl,11(sp)
   1464 5E                 7096 	ld	e,(hl)
   1465 23                 7097 	inc	hl
   1466 56                 7098 	ld	d,(hl)
   1467 1A                 7099 	ld	a,(de)
   1468 4F                 7100 	ld	c,a
                           7101 ;	genIpush
                           7102 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1469 C5                 7103 	push	bc
   146A 3E 00              7104 	ld	a,#0x00
   146C F5                 7105 	push	af
   146D 33                 7106 	inc	sp
                           7107 ;	genIpush
   146E 79                 7108 	ld	a,c
   146F F5                 7109 	push	af
   1470 33                 7110 	inc	sp
                           7111 ;	genCall
   1471 CD 00 00           7112 	call	_set_sprite_prop
   1474 E8 02              7113 	lda	sp,2(sp)
   1476 E1                 7114 	pop	hl
   1477 44                 7115 	ld	b,h
                           7116 ;	game.c 969
                           7117 ;	genGoto
   1478 C3 EA 14           7118 	jp	00124$
                           7119 ;	game.c 971
                           7120 ;	genLabel
   147B                    7121 00118$:
                           7122 ;	genPlus
                           7123 ;	AOP_STK for _move_character_sloc0_1_0
                           7124 ;	AOP_STK for _move_character_sloc8_1_0
                           7125 ;	genPlusIncr
                           7126 ;	Can't optimise plus by inc, falling back to the normal way
   147B F8 0D              7127 	lda	hl,13(sp)
   147D 5E                 7128 	ld	e,(hl)
   147E 23                 7129 	inc	hl
   147F 56                 7130 	ld	d,(hl)
   1480 21 05 00           7131 	ld	hl,#0x0005
   1483 19                 7132 	add	hl,de
   1484 7D                 7133 	ld	a,l
   1485 54                 7134 	ld	d,h
   1486 F8 00              7135 	lda	hl,0(sp)
                           7136 ;	genPointerGet
                           7137 ;	AOP_STK for _move_character_sloc8_1_0
   1488 22                 7138 	ld	(hl+),a
   1489 72                 7139 	ld	(hl),d
   148A 5F                 7140 	ld	e,a
   148B 1A                 7141 	ld	a,(de)
   148C 4F                 7142 	ld	c,a
                           7143 ;	genIpush
                           7144 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   148D C5                 7145 	push	bc
   148E 79                 7146 	ld	a,c
   148F F5                 7147 	push	af
   1490 33                 7148 	inc	sp
                           7149 ;	genIpush
   1491 78                 7150 	ld	a,b
   1492 F5                 7151 	push	af
   1493 33                 7152 	inc	sp
                           7153 ;	genCall
   1494 CD 00 00           7154 	call	_set_sprite_tile
   1497 E8 02              7155 	lda	sp,2(sp)
   1499 E1                 7156 	pop	hl
   149A 44                 7157 	ld	b,h
                           7158 ;	game.c 972
                           7159 ;	genPointerGet
                           7160 ;	AOP_STK for _move_character_sloc1_1_0
   149B F8 0B              7161 	lda	hl,11(sp)
   149D 5E                 7162 	ld	e,(hl)
   149E 23                 7163 	inc	hl
   149F 56                 7164 	ld	d,(hl)
   14A0 1A                 7165 	ld	a,(de)
   14A1 4F                 7166 	ld	c,a
                           7167 ;	genIpush
                           7168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14A2 C5                 7169 	push	bc
   14A3 3E 20              7170 	ld	a,#0x20
   14A5 F5                 7171 	push	af
   14A6 33                 7172 	inc	sp
                           7173 ;	genIpush
   14A7 79                 7174 	ld	a,c
   14A8 F5                 7175 	push	af
   14A9 33                 7176 	inc	sp
                           7177 ;	genCall
   14AA CD 00 00           7178 	call	_set_sprite_prop
   14AD E8 02              7179 	lda	sp,2(sp)
   14AF E1                 7180 	pop	hl
   14B0 44                 7181 	ld	b,h
                           7182 ;	game.c 973
                           7183 ;	genGoto
   14B1 C3 EA 14           7184 	jp	00124$
                           7185 ;	game.c 975
                           7186 ;	genLabel
   14B4                    7187 00119$:
                           7188 ;	genPlus
                           7189 ;	AOP_STK for _move_character_sloc0_1_0
                           7190 ;	AOP_STK for _move_character_sloc8_1_0
                           7191 ;	genPlusIncr
                           7192 ;	Can't optimise plus by inc, falling back to the normal way
   14B4 F8 0D              7193 	lda	hl,13(sp)
   14B6 5E                 7194 	ld	e,(hl)
   14B7 23                 7195 	inc	hl
   14B8 56                 7196 	ld	d,(hl)
   14B9 21 05 00           7197 	ld	hl,#0x0005
   14BC 19                 7198 	add	hl,de
   14BD 7D                 7199 	ld	a,l
   14BE 54                 7200 	ld	d,h
   14BF F8 00              7201 	lda	hl,0(sp)
                           7202 ;	genPointerGet
                           7203 ;	AOP_STK for _move_character_sloc8_1_0
   14C1 22                 7204 	ld	(hl+),a
   14C2 72                 7205 	ld	(hl),d
   14C3 5F                 7206 	ld	e,a
   14C4 1A                 7207 	ld	a,(de)
   14C5 4F                 7208 	ld	c,a
                           7209 ;	genIpush
                           7210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14C6 C5                 7211 	push	bc
   14C7 79                 7212 	ld	a,c
   14C8 F5                 7213 	push	af
   14C9 33                 7214 	inc	sp
                           7215 ;	genIpush
   14CA 78                 7216 	ld	a,b
   14CB F5                 7217 	push	af
   14CC 33                 7218 	inc	sp
                           7219 ;	genCall
   14CD CD 00 00           7220 	call	_set_sprite_tile
   14D0 E8 02              7221 	lda	sp,2(sp)
   14D2 E1                 7222 	pop	hl
   14D3 44                 7223 	ld	b,h
                           7224 ;	game.c 976
                           7225 ;	genPointerGet
                           7226 ;	AOP_STK for _move_character_sloc1_1_0
   14D4 F8 0B              7227 	lda	hl,11(sp)
   14D6 5E                 7228 	ld	e,(hl)
   14D7 23                 7229 	inc	hl
   14D8 56                 7230 	ld	d,(hl)
   14D9 1A                 7231 	ld	a,(de)
   14DA 4F                 7232 	ld	c,a
                           7233 ;	genIpush
                           7234 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14DB C5                 7235 	push	bc
   14DC 3E 40              7236 	ld	a,#0x40
   14DE F5                 7237 	push	af
   14DF 33                 7238 	inc	sp
                           7239 ;	genIpush
   14E0 79                 7240 	ld	a,c
   14E1 F5                 7241 	push	af
   14E2 33                 7242 	inc	sp
                           7243 ;	genCall
   14E3 CD 00 00           7244 	call	_set_sprite_prop
   14E6 E8 02              7245 	lda	sp,2(sp)
   14E8 E1                 7246 	pop	hl
   14E9 44                 7247 	ld	b,h
                           7248 ;	game.c 978
                           7249 ;	genLabel
   14EA                    7250 00124$:
                           7251 ;	game.c 984
                           7252 ;	genCmpEq
                           7253 ; genCmpEq: left 1, right 1, result 0
   14EA 78                 7254 	ld	a,b
   14EB FE 02              7255 	cp	a,#0x02
   14ED C2 48 19           7256 	jp	nz,00165$
   14F0 18 03              7257 	jr	00211$
   14F2                    7258 00210$:
   14F2 C3 48 19           7259 	jp	00165$
   14F5                    7260 00211$:
                           7261 ;	game.c 985
                           7262 ;	genPlus
                           7263 ;	AOP_STK for _move_character_sloc0_1_0
                           7264 ;	AOP_STK for _move_character_sloc8_1_0
                           7265 ;	genPlusIncr
                           7266 ;	Can't optimise plus by inc, falling back to the normal way
   14F5 F8 0D              7267 	lda	hl,13(sp)
   14F7 5E                 7268 	ld	e,(hl)
   14F8 23                 7269 	inc	hl
   14F9 56                 7270 	ld	d,(hl)
   14FA 21 04 00           7271 	ld	hl,#0x0004
   14FD 19                 7272 	add	hl,de
   14FE 7D                 7273 	ld	a,l
   14FF 54                 7274 	ld	d,h
   1500 F8 00              7275 	lda	hl,0(sp)
                           7276 ;	genPointerGet
                           7277 ;	AOP_STK for _move_character_sloc8_1_0
   1502 22                 7278 	ld	(hl+),a
   1503 72                 7279 	ld	(hl),d
   1504 5F                 7280 	ld	e,a
   1505 1A                 7281 	ld	a,(de)
   1506 4F                 7282 	ld	c,a
                           7283 ;	genIpush
                           7284 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1507 C5                 7285 	push	bc
   1508 79                 7286 	ld	a,c
   1509 F5                 7287 	push	af
   150A 33                 7288 	inc	sp
                           7289 ;	genIpush
   150B 78                 7290 	ld	a,b
   150C F5                 7291 	push	af
   150D 33                 7292 	inc	sp
                           7293 ;	genCall
   150E CD 00 00           7294 	call	_set_sprite_tile
   1511 E8 02              7295 	lda	sp,2(sp)
   1513 E1                 7296 	pop	hl
   1514 44                 7297 	ld	b,h
                           7298 ;	game.c 987
                           7299 ;	genPointerGet
                           7300 ;	AOP_STK for _move_character_sloc2_1_0
   1515 F8 09              7301 	lda	hl,9(sp)
   1517 5E                 7302 	ld	e,(hl)
   1518 23                 7303 	inc	hl
   1519 56                 7304 	ld	d,(hl)
   151A 1A                 7305 	ld	a,(de)
                           7306 ;	genCmpEq
                           7307 ; genCmpEq: left 1, right 1, result 0
   151B 4F                 7308 	ld	c,a
   151C FE 01              7309 	cp	a,#0x01
   151E C2 3D 15           7310 	jp	nz,00126$
   1521 18 03              7311 	jr	00213$
   1523                    7312 00212$:
   1523 C3 3D 15           7313 	jp	00126$
   1526                    7314 00213$:
                           7315 ;	game.c 989
                           7316 ;	genAssign (pointer)
                           7317 ;	AOP_STK for _move_character_sloc2_1_0
   1526 F8 09              7318 	lda	hl,9(sp)
   1528 5E                 7319 	ld	e,(hl)
   1529 23                 7320 	inc	hl
   152A 56                 7321 	ld	d,(hl)
   152B 3E 02              7322 	ld	a,#0x02
   152D 12                 7323 	ld	(de),a
                           7324 ;	game.c 990
                           7325 ;	genPlus
                           7326 ;	AOP_STK for _move_character_sloc0_1_0
                           7327 ;	genPlusIncr
                           7328 ;	Can't optimise plus by inc, falling back to the normal way
   152E F8 0D              7329 	lda	hl,13(sp)
   1530 5E                 7330 	ld	e,(hl)
   1531 23                 7331 	inc	hl
   1532 56                 7332 	ld	d,(hl)
   1533 21 0A 00           7333 	ld	hl,#0x000A
   1536 19                 7334 	add	hl,de
   1537 7D                 7335 	ld	a,l
   1538 54                 7336 	ld	d,h
   1539 6F                 7337 	ld	l,a
   153A 62                 7338 	ld	h,d
                           7339 ;	genAssign (pointer)
   153B 36 10              7340 	ld	(hl),#0x10
                           7341 ;	genLabel
   153D                    7342 00126$:
                           7343 ;	game.c 992
                           7344 ;	genPlus
                           7345 ;	AOP_STK for _move_character_sloc0_1_0
                           7346 ;	AOP_STK for _move_character_sloc8_1_0
                           7347 ;	genPlusIncr
                           7348 ;	Can't optimise plus by inc, falling back to the normal way
   153D F8 0D              7349 	lda	hl,13(sp)
   153F 5E                 7350 	ld	e,(hl)
   1540 23                 7351 	inc	hl
   1541 56                 7352 	ld	d,(hl)
   1542 21 0A 00           7353 	ld	hl,#0x000A
   1545 19                 7354 	add	hl,de
   1546 7D                 7355 	ld	a,l
   1547 54                 7356 	ld	d,h
   1548 F8 00              7357 	lda	hl,0(sp)
                           7358 ;	genPointerGet
                           7359 ;	AOP_STK for _move_character_sloc8_1_0
   154A 22                 7360 	ld	(hl+),a
   154B 72                 7361 	ld	(hl),d
   154C 5F                 7362 	ld	e,a
   154D 1A                 7363 	ld	a,(de)
   154E 4F                 7364 	ld	c,a
                           7365 ;	genMinus
   154F 0D                 7366 	dec	c
                           7367 ;	genAssign (pointer)
                           7368 ;	AOP_STK for _move_character_sloc8_1_0
   1550 2B                 7369 	dec	hl
   1551 5E                 7370 	ld	e,(hl)
   1552 23                 7371 	inc	hl
   1553 56                 7372 	ld	d,(hl)
   1554 79                 7373 	ld	a,c
   1555 12                 7374 	ld	(de),a
                           7375 ;	game.c 994
                           7376 ;	genCmpEq
                           7377 ; genCmpEq: left 1, right 1, result 0
   1556 79                 7378 	ld	a,c
   1557 B7                 7379 	or	a,a
   1558 C2 48 19           7380 	jp	nz,00165$
   155B 18 03              7381 	jr	00215$
   155D                    7382 00214$:
   155D C3 48 19           7383 	jp	00165$
   1560                    7384 00215$:
                           7385 ;	game.c 995
                           7386 ;	genAssign (pointer)
                           7387 ;	AOP_STK for _move_character_sloc2_1_0
   1560 F8 09              7388 	lda	hl,9(sp)
   1562 5E                 7389 	ld	e,(hl)
   1563 23                 7390 	inc	hl
   1564 56                 7391 	ld	d,(hl)
   1565 3E 00              7392 	ld	a,#0x00
   1567 12                 7393 	ld	(de),a
                           7394 ;	game.c 996
                           7395 ;	genPlus
                           7396 ;	AOP_STK for _move_character_sloc0_1_0
                           7397 ;	AOP_STK for _move_character_sloc8_1_0
                           7398 ;	genPlusIncr
                           7399 ;	Can't optimise plus by inc, falling back to the normal way
   1568 F8 0D              7400 	lda	hl,13(sp)
   156A 5E                 7401 	ld	e,(hl)
   156B 23                 7402 	inc	hl
   156C 56                 7403 	ld	d,(hl)
   156D 21 02 00           7404 	ld	hl,#0x0002
   1570 19                 7405 	add	hl,de
   1571 7D                 7406 	ld	a,l
   1572 54                 7407 	ld	d,h
   1573 F8 00              7408 	lda	hl,0(sp)
                           7409 ;	genPointerGet
                           7410 ;	AOP_STK for _move_character_sloc8_1_0
   1575 22                 7411 	ld	(hl+),a
   1576 72                 7412 	ld	(hl),d
   1577 5F                 7413 	ld	e,a
   1578 1A                 7414 	ld	a,(de)
   1579 4F                 7415 	ld	c,a
                           7416 ;	genPointerGet
                           7417 ;	AOP_STK for _move_character_sloc1_1_0
                           7418 ;	AOP_STK for _move_character_sloc8_1_0
   157A F8 0B              7419 	lda	hl,11(sp)
   157C 5E                 7420 	ld	e,(hl)
   157D 23                 7421 	inc	hl
   157E 56                 7422 	ld	d,(hl)
   157F 1A                 7423 	ld	a,(de)
   1580 F8 00              7424 	lda	hl,0(sp)
   1582 77                 7425 	ld	(hl),a
                           7426 ;	genIpush
                           7427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1583 C5                 7428 	push	bc
   1584 79                 7429 	ld	a,c
   1585 F5                 7430 	push	af
   1586 33                 7431 	inc	sp
                           7432 ;	genIpush
                           7433 ;	AOP_STK for _move_character_sloc8_1_0
   1587 7E                 7434 	ld	a,(hl)
   1588 F5                 7435 	push	af
   1589 33                 7436 	inc	sp
                           7437 ;	genCall
   158A CD 00 00           7438 	call	_set_sprite_tile
   158D E8 02              7439 	lda	sp,2(sp)
   158F E1                 7440 	pop	hl
   1590 44                 7441 	ld	b,h
                           7442 ;	genGoto
   1591 C3 48 19           7443 	jp	00165$
                           7444 ;	genLabel
   1594                    7445 00164$:
                           7446 ;	game.c 1005
                           7447 ;	genCmpEq
                           7448 ;	AOP_HL for _input_timer
                           7449 ; genCmpEq: left 1, right 1, result 0
   1594 21 03 19           7450 	ld	hl,#_input_timer
   1597 7E                 7451 	ld	a,(hl)
   1598 FE 04              7452 	cp	a,#0x04
   159A C2 F6 15           7453 	jp	nz,00134$
   159D 18 03              7454 	jr	00217$
   159F                    7455 00216$:
   159F C3 F6 15           7456 	jp	00134$
   15A2                    7457 00217$:
                           7458 ;	game.c 1006
                           7459 ;	genPlus
                           7460 ;	AOP_STK for _move_character_sloc0_1_0
                           7461 ;	AOP_STK for _move_character_sloc8_1_0
                           7462 ;	genPlusIncr
                           7463 ;	Can't optimise plus by inc, falling back to the normal way
   15A2 F8 0D              7464 	lda	hl,13(sp)
   15A4 5E                 7465 	ld	e,(hl)
   15A5 23                 7466 	inc	hl
   15A6 56                 7467 	ld	d,(hl)
   15A7 21 08 00           7468 	ld	hl,#0x0008
   15AA 19                 7469 	add	hl,de
   15AB 7D                 7470 	ld	a,l
   15AC 54                 7471 	ld	d,h
   15AD F8 00              7472 	lda	hl,0(sp)
                           7473 ;	genPointerGet
                           7474 ;	AOP_STK for _move_character_sloc8_1_0
   15AF 22                 7475 	ld	(hl+),a
   15B0 72                 7476 	ld	(hl),d
   15B1 5F                 7477 	ld	e,a
   15B2 1A                 7478 	ld	a,(de)
   15B3 4F                 7479 	ld	c,a
                           7480 ;	genPlus
                           7481 ;	AOP_STK for _move_character_sloc0_1_0
                           7482 ;	AOP_STK for _move_character_sloc8_1_0
                           7483 ;	genPlusIncr
                           7484 ;	Can't optimise plus by inc, falling back to the normal way
   15B4 F8 0D              7485 	lda	hl,13(sp)
   15B6 5E                 7486 	ld	e,(hl)
   15B7 23                 7487 	inc	hl
   15B8 56                 7488 	ld	d,(hl)
   15B9 21 01 00           7489 	ld	hl,#0x0001
   15BC 19                 7490 	add	hl,de
   15BD 7D                 7491 	ld	a,l
   15BE 54                 7492 	ld	d,h
   15BF F8 00              7493 	lda	hl,0(sp)
                           7494 ;	genPointerGet
                           7495 ;	AOP_STK for _move_character_sloc8_1_0
                           7496 ;	AOP_STK for _move_character_sloc7_1_0
   15C1 22                 7497 	ld	(hl+),a
   15C2 72                 7498 	ld	(hl),d
   15C3 5F                 7499 	ld	e,a
   15C4 1A                 7500 	ld	a,(de)
   15C5 23                 7501 	inc	hl
   15C6 77                 7502 	ld	(hl),a
                           7503 ;	genPointerGet
                           7504 ;	AOP_STK for _move_character_sloc0_1_0
                           7505 ;	AOP_STK for _move_character_sloc8_1_0
   15C7 F8 0D              7506 	lda	hl,13(sp)
   15C9 5E                 7507 	ld	e,(hl)
   15CA 23                 7508 	inc	hl
   15CB 56                 7509 	ld	d,(hl)
   15CC 1A                 7510 	ld	a,(de)
   15CD F8 00              7511 	lda	hl,0(sp)
   15CF 77                 7512 	ld	(hl),a
                           7513 ;	genIpush
                           7514 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15D0 C5                 7515 	push	bc
   15D1 79                 7516 	ld	a,c
   15D2 F5                 7517 	push	af
   15D3 33                 7518 	inc	sp
                           7519 ;	genIpush
                           7520 ;	AOP_STK for _move_character_sloc7_1_0
   15D4 23                 7521 	inc	hl
   15D5 23                 7522 	inc	hl
   15D6 7E                 7523 	ld	a,(hl)
   15D7 F5                 7524 	push	af
   15D8 33                 7525 	inc	sp
                           7526 ;	genIpush
                           7527 ;	AOP_STK for _move_character_sloc8_1_0
   15D9 2B                 7528 	dec	hl
   15DA 2B                 7529 	dec	hl
   15DB 7E                 7530 	ld	a,(hl)
   15DC F5                 7531 	push	af
   15DD 33                 7532 	inc	sp
                           7533 ;	genCall
   15DE CD C1 0E           7534 	call	_can_move
                           7535 ;	AOP_STK for _move_character_sloc8_1_0
   15E1 F8 06              7536 	lda	hl,6(sp)
   15E3 72                 7537 	ld	(hl),d
   15E4 2B                 7538 	dec	hl
   15E5 73                 7539 	ld	(hl),e
   15E6 E8 03              7540 	lda	sp,3(sp)
   15E8 E1                 7541 	pop	hl
   15E9 44                 7542 	ld	b,h
                           7543 ;	genIfx
                           7544 ;	AOP_STK for _move_character_sloc8_1_0
   15EA F8 00              7545 	lda	hl,0(sp)
   15EC 2A                 7546 	ld	a,(hl+)
   15ED B6                 7547 	or	a,(hl)
   15EE C2 F6 15           7548 	jp	nz,00134$
                           7549 ;	game.c 1007
                           7550 ;	genAssign
                           7551 ;	AOP_HL for _input_timer
   15F1 21 03 19           7552 	ld	hl,#_input_timer
   15F4 36 00              7553 	ld	(hl),#0x00
                           7554 ;	genLabel
   15F6                    7555 00134$:
                           7556 ;	game.c 1015
                           7557 ;	genPlus
                           7558 ;	AOP_STK for _move_character_sloc0_1_0
                           7559 ;	AOP_STK for _move_character_sloc8_1_0
                           7560 ;	genPlusIncr
                           7561 ;	Can't optimise plus by inc, falling back to the normal way
   15F6 F8 0D              7562 	lda	hl,13(sp)
   15F8 5E                 7563 	ld	e,(hl)
   15F9 23                 7564 	inc	hl
   15FA 56                 7565 	ld	d,(hl)
   15FB 21 08 00           7566 	ld	hl,#0x0008
   15FE 19                 7567 	add	hl,de
   15FF 7D                 7568 	ld	a,l
   1600 54                 7569 	ld	d,h
   1601 F8 00              7570 	lda	hl,0(sp)
                           7571 ;	genPointerGet
                           7572 ;	AOP_STK for _move_character_sloc8_1_0
   1603 22                 7573 	ld	(hl+),a
   1604 72                 7574 	ld	(hl),d
   1605 5F                 7575 	ld	e,a
   1606 1A                 7576 	ld	a,(de)
                           7577 ;	genCmpLt
                           7578 ;	AOP_STK for _move_character_sloc8_1_0
   1607 4F                 7579 	ld	c,a
   1608 FE 01              7580 	cp	#0x01
   160A 3E 00              7581 	ld	a,#0x00
   160C 17                 7582 	rla
   160D 2B                 7583 	dec	hl
   160E 77                 7584 	ld	(hl),a
                           7585 ;	genIfx
                           7586 ;	AOP_STK for _move_character_sloc8_1_0
   160F AF                 7587 	xor	a,a
   1610 B6                 7588 	or	a,(hl)
   1611 C2 C3 18           7589 	jp	nz,00155$
                           7590 ;	genCmpGt
   1614 3E 04              7591 	ld	a,#0x04
   1616 91                 7592 	sub	a,c
   1617 DA C3 18           7593 	jp	c,00155$
                           7594 ;	genMinus
                           7595 ;	AOP_STK for _move_character_sloc7_1_0
   161A 79                 7596 	ld	a,c
   161B C6 FF              7597 	add	a,#0xFF
   161D 23                 7598 	inc	hl
   161E 23                 7599 	inc	hl
                           7600 ;	genJumpTab
                           7601 ;	AOP_STK for _move_character_sloc7_1_0
   161F 77                 7602 	ld      (hl),a
   1620 5F                 7603 	ld      e,a
   1621 16 00              7604 	ld	d,#0x00
   1623 21 2A 16           7605 	ld	hl,#00218$
   1626 19                 7606 	add	hl,de
   1627 19                 7607 	add	hl,de
   1628 19                 7608 	add	hl,de
   1629 E9                 7609 	jp	(hl)
   162A                    7610 00218$:
   162A C3 7E 17           7611 	jp	00145$
   162D C3 DA 16           7612 	jp	00140$
   1630 C3 22 18           7613 	jp	00150$
   1633 C3 36 16           7614 	jp	00135$
                           7615 ;	game.c 1018
                           7616 ;	genLabel
   1636                    7617 00135$:
                           7618 ;	genPlus
                           7619 ;	AOP_STK for _move_character_sloc0_1_0
                           7620 ;	AOP_STK for _move_character_sloc5_1_0
                           7621 ;	genPlusIncr
                           7622 ;	Can't optimise plus by inc, falling back to the normal way
   1636 F8 0D              7623 	lda	hl,13(sp)
   1638 5E                 7624 	ld	e,(hl)
   1639 23                 7625 	inc	hl
   163A 56                 7626 	ld	d,(hl)
   163B 21 02 00           7627 	ld	hl,#0x0002
   163E 19                 7628 	add	hl,de
   163F 7D                 7629 	ld	a,l
   1640 54                 7630 	ld	d,h
   1641 F8 04              7631 	lda	hl,4(sp)
                           7632 ;	genPointerGet
                           7633 ;	AOP_STK for _move_character_sloc5_1_0
                           7634 ;	AOP_STK for _move_character_sloc7_1_0
   1643 22                 7635 	ld	(hl+),a
   1644 72                 7636 	ld	(hl),d
   1645 5F                 7637 	ld	e,a
   1646 1A                 7638 	ld	a,(de)
   1647 F8 02              7639 	lda	hl,2(sp)
   1649 77                 7640 	ld	(hl),a
                           7641 ;	genIpush
                           7642 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   164A C5                 7643 	push	bc
                           7644 ;	AOP_STK for _move_character_sloc7_1_0
   164B 7E                 7645 	ld	a,(hl)
   164C F5                 7646 	push	af
   164D 33                 7647 	inc	sp
                           7648 ;	genIpush
   164E 78                 7649 	ld	a,b
   164F F5                 7650 	push	af
   1650 33                 7651 	inc	sp
                           7652 ;	genCall
   1651 CD 00 00           7653 	call	_set_sprite_tile
   1654 E8 02              7654 	lda	sp,2(sp)
   1656 C1                 7655 	pop	bc
                           7656 ;	game.c 1019
                           7657 ;	genCmpEq
                           7658 ;	AOP_HL for _input_timer
                           7659 ; genCmpEq: left 1, right 1, result 0
   1657 21 03 19           7660 	ld	hl,#_input_timer
   165A 7E                 7661 	ld	a,(hl)
   165B FE 04              7662 	cp	a,#0x04
   165D C2 91 16           7663 	jp	nz,00137$
   1660 18 03              7664 	jr	00220$
   1662                    7665 00219$:
   1662 C3 91 16           7666 	jp	00137$
   1665                    7667 00220$:
                           7668 ;	game.c 1020
                           7669 ;	genPlus
                           7670 ;	AOP_STK for _move_character_sloc0_1_0
                           7671 ;	AOP_STK for _move_character_sloc3_1_0
                           7672 ;	genPlusIncr
                           7673 ;	Can't optimise plus by inc, falling back to the normal way
   1665 F8 0D              7674 	lda	hl,13(sp)
   1667 5E                 7675 	ld	e,(hl)
   1668 23                 7676 	inc	hl
   1669 56                 7677 	ld	d,(hl)
   166A 21 03 00           7678 	ld	hl,#0x0003
   166D 19                 7679 	add	hl,de
   166E 7D                 7680 	ld	a,l
   166F 54                 7681 	ld	d,h
   1670 F8 07              7682 	lda	hl,7(sp)
                           7683 ;	genPointerGet
                           7684 ;	AOP_STK for _move_character_sloc3_1_0
                           7685 ;	AOP_STK for _move_character_sloc7_1_0
   1672 22                 7686 	ld	(hl+),a
   1673 72                 7687 	ld	(hl),d
   1674 5F                 7688 	ld	e,a
   1675 1A                 7689 	ld	a,(de)
   1676 F8 02              7690 	lda	hl,2(sp)
   1678 77                 7691 	ld	(hl),a
                           7692 ;	genPointerGet
                           7693 ;	AOP_STK for _move_character_sloc1_1_0
                           7694 ;	AOP_STK for _move_character_sloc6_1_0
   1679 F8 0B              7695 	lda	hl,11(sp)
   167B 5E                 7696 	ld	e,(hl)
   167C 23                 7697 	inc	hl
   167D 56                 7698 	ld	d,(hl)
   167E 1A                 7699 	ld	a,(de)
   167F F8 03              7700 	lda	hl,3(sp)
   1681 77                 7701 	ld	(hl),a
                           7702 ;	genIpush
                           7703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1682 C5                 7704 	push	bc
                           7705 ;	AOP_STK for _move_character_sloc7_1_0
   1683 2B                 7706 	dec	hl
   1684 7E                 7707 	ld	a,(hl)
   1685 F5                 7708 	push	af
   1686 33                 7709 	inc	sp
                           7710 ;	genIpush
                           7711 ;	AOP_STK for _move_character_sloc6_1_0
   1687 23                 7712 	inc	hl
   1688 7E                 7713 	ld	a,(hl)
   1689 F5                 7714 	push	af
   168A 33                 7715 	inc	sp
                           7716 ;	genCall
   168B CD 00 00           7717 	call	_set_sprite_tile
   168E E8 02              7718 	lda	sp,2(sp)
   1690 C1                 7719 	pop	bc
                           7720 ;	genLabel
   1691                    7721 00137$:
                           7722 ;	game.c 1022
                           7723 ;	genCmpEq
                           7724 ;	AOP_HL for _input_timer
                           7725 ; genCmpEq: left 1, right 1, result 0
   1691 21 03 19           7726 	ld	hl,#_input_timer
   1694 7E                 7727 	ld	a,(hl)
   1695 FE 02              7728 	cp	a,#0x02
   1697 C2 C0 16           7729 	jp	nz,00139$
   169A 18 03              7730 	jr	00222$
   169C                    7731 00221$:
   169C C3 C0 16           7732 	jp	00139$
   169F                    7733 00222$:
                           7734 ;	game.c 1023
                           7735 ;	genPointerGet
                           7736 ;	AOP_STK for _move_character_sloc5_1_0
                           7737 ;	AOP_STK for _move_character_sloc7_1_0
   169F F8 04              7738 	lda	hl,4(sp)
   16A1 5E                 7739 	ld	e,(hl)
   16A2 23                 7740 	inc	hl
   16A3 56                 7741 	ld	d,(hl)
   16A4 1A                 7742 	ld	a,(de)
   16A5 F8 02              7743 	lda	hl,2(sp)
   16A7 77                 7744 	ld	(hl),a
                           7745 ;	genPointerGet
                           7746 ;	AOP_STK for _move_character_sloc1_1_0
                           7747 ;	AOP_STK for _move_character_sloc6_1_0
   16A8 F8 0B              7748 	lda	hl,11(sp)
   16AA 5E                 7749 	ld	e,(hl)
   16AB 23                 7750 	inc	hl
   16AC 56                 7751 	ld	d,(hl)
   16AD 1A                 7752 	ld	a,(de)
   16AE F8 03              7753 	lda	hl,3(sp)
   16B0 77                 7754 	ld	(hl),a
                           7755 ;	genIpush
                           7756 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16B1 C5                 7757 	push	bc
                           7758 ;	AOP_STK for _move_character_sloc7_1_0
   16B2 2B                 7759 	dec	hl
   16B3 7E                 7760 	ld	a,(hl)
   16B4 F5                 7761 	push	af
   16B5 33                 7762 	inc	sp
                           7763 ;	genIpush
                           7764 ;	AOP_STK for _move_character_sloc6_1_0
   16B6 23                 7765 	inc	hl
   16B7 7E                 7766 	ld	a,(hl)
   16B8 F5                 7767 	push	af
   16B9 33                 7768 	inc	sp
                           7769 ;	genCall
   16BA CD 00 00           7770 	call	_set_sprite_tile
   16BD E8 02              7771 	lda	sp,2(sp)
   16BF C1                 7772 	pop	bc
                           7773 ;	genLabel
   16C0                    7774 00139$:
                           7775 ;	game.c 1025
                           7776 ;	genPointerGet
                           7777 ;	AOP_STK for _move_character_sloc1_1_0
                           7778 ;	AOP_STK for _move_character_sloc7_1_0
   16C0 F8 0B              7779 	lda	hl,11(sp)
   16C2 5E                 7780 	ld	e,(hl)
   16C3 23                 7781 	inc	hl
   16C4 56                 7782 	ld	d,(hl)
   16C5 1A                 7783 	ld	a,(de)
   16C6 F8 02              7784 	lda	hl,2(sp)
   16C8 77                 7785 	ld	(hl),a
                           7786 ;	genIpush
                           7787 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16C9 C5                 7788 	push	bc
   16CA 3E 20              7789 	ld	a,#0x20
   16CC F5                 7790 	push	af
   16CD 33                 7791 	inc	sp
                           7792 ;	genIpush
                           7793 ;	AOP_STK for _move_character_sloc7_1_0
   16CE 7E                 7794 	ld	a,(hl)
   16CF F5                 7795 	push	af
   16D0 33                 7796 	inc	sp
                           7797 ;	genCall
   16D1 CD 00 00           7798 	call	_set_sprite_prop
   16D4 E8 02              7799 	lda	sp,2(sp)
   16D6 C1                 7800 	pop	bc
                           7801 ;	game.c 1026
                           7802 ;	genGoto
   16D7 C3 C3 18           7803 	jp	00155$
                           7804 ;	game.c 1029
                           7805 ;	genLabel
   16DA                    7806 00140$:
                           7807 ;	genPlus
                           7808 ;	AOP_STK for _move_character_sloc0_1_0
                           7809 ;	AOP_STK for _move_character_sloc5_1_0
                           7810 ;	genPlusIncr
                           7811 ;	Can't optimise plus by inc, falling back to the normal way
   16DA F8 0D              7812 	lda	hl,13(sp)
   16DC 5E                 7813 	ld	e,(hl)
   16DD 23                 7814 	inc	hl
   16DE 56                 7815 	ld	d,(hl)
   16DF 21 02 00           7816 	ld	hl,#0x0002
   16E2 19                 7817 	add	hl,de
   16E3 7D                 7818 	ld	a,l
   16E4 54                 7819 	ld	d,h
   16E5 F8 04              7820 	lda	hl,4(sp)
                           7821 ;	genPointerGet
                           7822 ;	AOP_STK for _move_character_sloc5_1_0
                           7823 ;	AOP_STK for _move_character_sloc7_1_0
   16E7 22                 7824 	ld	(hl+),a
   16E8 72                 7825 	ld	(hl),d
   16E9 5F                 7826 	ld	e,a
   16EA 1A                 7827 	ld	a,(de)
   16EB F8 02              7828 	lda	hl,2(sp)
   16ED 77                 7829 	ld	(hl),a
                           7830 ;	genIpush
                           7831 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16EE C5                 7832 	push	bc
                           7833 ;	AOP_STK for _move_character_sloc7_1_0
   16EF 7E                 7834 	ld	a,(hl)
   16F0 F5                 7835 	push	af
   16F1 33                 7836 	inc	sp
                           7837 ;	genIpush
   16F2 78                 7838 	ld	a,b
   16F3 F5                 7839 	push	af
   16F4 33                 7840 	inc	sp
                           7841 ;	genCall
   16F5 CD 00 00           7842 	call	_set_sprite_tile
   16F8 E8 02              7843 	lda	sp,2(sp)
   16FA C1                 7844 	pop	bc
                           7845 ;	game.c 1030
                           7846 ;	genCmpEq
                           7847 ;	AOP_HL for _input_timer
                           7848 ; genCmpEq: left 1, right 1, result 0
   16FB 21 03 19           7849 	ld	hl,#_input_timer
   16FE 7E                 7850 	ld	a,(hl)
   16FF FE 04              7851 	cp	a,#0x04
   1701 C2 35 17           7852 	jp	nz,00142$
   1704 18 03              7853 	jr	00224$
   1706                    7854 00223$:
   1706 C3 35 17           7855 	jp	00142$
   1709                    7856 00224$:
                           7857 ;	game.c 1031
                           7858 ;	genPlus
                           7859 ;	AOP_STK for _move_character_sloc0_1_0
                           7860 ;	AOP_STK for _move_character_sloc3_1_0
                           7861 ;	genPlusIncr
                           7862 ;	Can't optimise plus by inc, falling back to the normal way
   1709 F8 0D              7863 	lda	hl,13(sp)
   170B 5E                 7864 	ld	e,(hl)
   170C 23                 7865 	inc	hl
   170D 56                 7866 	ld	d,(hl)
   170E 21 03 00           7867 	ld	hl,#0x0003
   1711 19                 7868 	add	hl,de
   1712 7D                 7869 	ld	a,l
   1713 54                 7870 	ld	d,h
   1714 F8 07              7871 	lda	hl,7(sp)
                           7872 ;	genPointerGet
                           7873 ;	AOP_STK for _move_character_sloc3_1_0
                           7874 ;	AOP_STK for _move_character_sloc7_1_0
   1716 22                 7875 	ld	(hl+),a
   1717 72                 7876 	ld	(hl),d
   1718 5F                 7877 	ld	e,a
   1719 1A                 7878 	ld	a,(de)
   171A F8 02              7879 	lda	hl,2(sp)
   171C 77                 7880 	ld	(hl),a
                           7881 ;	genPointerGet
                           7882 ;	AOP_STK for _move_character_sloc1_1_0
                           7883 ;	AOP_STK for _move_character_sloc6_1_0
   171D F8 0B              7884 	lda	hl,11(sp)
   171F 5E                 7885 	ld	e,(hl)
   1720 23                 7886 	inc	hl
   1721 56                 7887 	ld	d,(hl)
   1722 1A                 7888 	ld	a,(de)
   1723 F8 03              7889 	lda	hl,3(sp)
   1725 77                 7890 	ld	(hl),a
                           7891 ;	genIpush
                           7892 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1726 C5                 7893 	push	bc
                           7894 ;	AOP_STK for _move_character_sloc7_1_0
   1727 2B                 7895 	dec	hl
   1728 7E                 7896 	ld	a,(hl)
   1729 F5                 7897 	push	af
   172A 33                 7898 	inc	sp
                           7899 ;	genIpush
                           7900 ;	AOP_STK for _move_character_sloc6_1_0
   172B 23                 7901 	inc	hl
   172C 7E                 7902 	ld	a,(hl)
   172D F5                 7903 	push	af
   172E 33                 7904 	inc	sp
                           7905 ;	genCall
   172F CD 00 00           7906 	call	_set_sprite_tile
   1732 E8 02              7907 	lda	sp,2(sp)
   1734 C1                 7908 	pop	bc
                           7909 ;	genLabel
   1735                    7910 00142$:
                           7911 ;	game.c 1033
                           7912 ;	genCmpEq
                           7913 ;	AOP_HL for _input_timer
                           7914 ; genCmpEq: left 1, right 1, result 0
   1735 21 03 19           7915 	ld	hl,#_input_timer
   1738 7E                 7916 	ld	a,(hl)
   1739 FE 02              7917 	cp	a,#0x02
   173B C2 64 17           7918 	jp	nz,00144$
   173E 18 03              7919 	jr	00226$
   1740                    7920 00225$:
   1740 C3 64 17           7921 	jp	00144$
   1743                    7922 00226$:
                           7923 ;	game.c 1034
                           7924 ;	genPointerGet
                           7925 ;	AOP_STK for _move_character_sloc5_1_0
                           7926 ;	AOP_STK for _move_character_sloc7_1_0
   1743 F8 04              7927 	lda	hl,4(sp)
   1745 5E                 7928 	ld	e,(hl)
   1746 23                 7929 	inc	hl
   1747 56                 7930 	ld	d,(hl)
   1748 1A                 7931 	ld	a,(de)
   1749 F8 02              7932 	lda	hl,2(sp)
   174B 77                 7933 	ld	(hl),a
                           7934 ;	genPointerGet
                           7935 ;	AOP_STK for _move_character_sloc1_1_0
                           7936 ;	AOP_STK for _move_character_sloc6_1_0
   174C F8 0B              7937 	lda	hl,11(sp)
   174E 5E                 7938 	ld	e,(hl)
   174F 23                 7939 	inc	hl
   1750 56                 7940 	ld	d,(hl)
   1751 1A                 7941 	ld	a,(de)
   1752 F8 03              7942 	lda	hl,3(sp)
   1754 77                 7943 	ld	(hl),a
                           7944 ;	genIpush
                           7945 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1755 C5                 7946 	push	bc
                           7947 ;	AOP_STK for _move_character_sloc7_1_0
   1756 2B                 7948 	dec	hl
   1757 7E                 7949 	ld	a,(hl)
   1758 F5                 7950 	push	af
   1759 33                 7951 	inc	sp
                           7952 ;	genIpush
                           7953 ;	AOP_STK for _move_character_sloc6_1_0
   175A 23                 7954 	inc	hl
   175B 7E                 7955 	ld	a,(hl)
   175C F5                 7956 	push	af
   175D 33                 7957 	inc	sp
                           7958 ;	genCall
   175E CD 00 00           7959 	call	_set_sprite_tile
   1761 E8 02              7960 	lda	sp,2(sp)
   1763 C1                 7961 	pop	bc
                           7962 ;	genLabel
   1764                    7963 00144$:
                           7964 ;	game.c 1037
                           7965 ;	genPointerGet
                           7966 ;	AOP_STK for _move_character_sloc1_1_0
                           7967 ;	AOP_STK for _move_character_sloc7_1_0
   1764 F8 0B              7968 	lda	hl,11(sp)
   1766 5E                 7969 	ld	e,(hl)
   1767 23                 7970 	inc	hl
   1768 56                 7971 	ld	d,(hl)
   1769 1A                 7972 	ld	a,(de)
   176A F8 02              7973 	lda	hl,2(sp)
   176C 77                 7974 	ld	(hl),a
                           7975 ;	genIpush
                           7976 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   176D C5                 7977 	push	bc
   176E 3E 00              7978 	ld	a,#0x00
   1770 F5                 7979 	push	af
   1771 33                 7980 	inc	sp
                           7981 ;	genIpush
                           7982 ;	AOP_STK for _move_character_sloc7_1_0
   1772 7E                 7983 	ld	a,(hl)
   1773 F5                 7984 	push	af
   1774 33                 7985 	inc	sp
                           7986 ;	genCall
   1775 CD 00 00           7987 	call	_set_sprite_prop
   1778 E8 02              7988 	lda	sp,2(sp)
   177A C1                 7989 	pop	bc
                           7990 ;	game.c 1038
                           7991 ;	genGoto
   177B C3 C3 18           7992 	jp	00155$
                           7993 ;	game.c 1040
                           7994 ;	genLabel
   177E                    7995 00145$:
                           7996 ;	genPlus
                           7997 ;	AOP_STK for _move_character_sloc0_1_0
                           7998 ;	AOP_STK for _move_character_sloc5_1_0
                           7999 ;	genPlusIncr
                           8000 ;	Can't optimise plus by inc, falling back to the normal way
   177E F8 0D              8001 	lda	hl,13(sp)
   1780 5E                 8002 	ld	e,(hl)
   1781 23                 8003 	inc	hl
   1782 56                 8004 	ld	d,(hl)
   1783 21 05 00           8005 	ld	hl,#0x0005
   1786 19                 8006 	add	hl,de
   1787 7D                 8007 	ld	a,l
   1788 54                 8008 	ld	d,h
   1789 F8 04              8009 	lda	hl,4(sp)
                           8010 ;	genPointerGet
                           8011 ;	AOP_STK for _move_character_sloc5_1_0
                           8012 ;	AOP_STK for _move_character_sloc7_1_0
   178B 22                 8013 	ld	(hl+),a
   178C 72                 8014 	ld	(hl),d
   178D 5F                 8015 	ld	e,a
   178E 1A                 8016 	ld	a,(de)
   178F F8 02              8017 	lda	hl,2(sp)
   1791 77                 8018 	ld	(hl),a
                           8019 ;	genIpush
                           8020 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1792 C5                 8021 	push	bc
                           8022 ;	AOP_STK for _move_character_sloc7_1_0
   1793 7E                 8023 	ld	a,(hl)
   1794 F5                 8024 	push	af
   1795 33                 8025 	inc	sp
                           8026 ;	genIpush
   1796 78                 8027 	ld	a,b
   1797 F5                 8028 	push	af
   1798 33                 8029 	inc	sp
                           8030 ;	genCall
   1799 CD 00 00           8031 	call	_set_sprite_tile
   179C E8 02              8032 	lda	sp,2(sp)
   179E C1                 8033 	pop	bc
                           8034 ;	game.c 1042
                           8035 ;	genCmpEq
                           8036 ;	AOP_HL for _input_timer
                           8037 ; genCmpEq: left 1, right 1, result 0
   179F 21 03 19           8038 	ld	hl,#_input_timer
   17A2 7E                 8039 	ld	a,(hl)
   17A3 FE 04              8040 	cp	a,#0x04
   17A5 C2 D9 17           8041 	jp	nz,00147$
   17A8 18 03              8042 	jr	00228$
   17AA                    8043 00227$:
   17AA C3 D9 17           8044 	jp	00147$
   17AD                    8045 00228$:
                           8046 ;	game.c 1043
                           8047 ;	genPlus
                           8048 ;	AOP_STK for _move_character_sloc0_1_0
                           8049 ;	AOP_STK for _move_character_sloc3_1_0
                           8050 ;	genPlusIncr
                           8051 ;	Can't optimise plus by inc, falling back to the normal way
   17AD F8 0D              8052 	lda	hl,13(sp)
   17AF 5E                 8053 	ld	e,(hl)
   17B0 23                 8054 	inc	hl
   17B1 56                 8055 	ld	d,(hl)
   17B2 21 06 00           8056 	ld	hl,#0x0006
   17B5 19                 8057 	add	hl,de
   17B6 7D                 8058 	ld	a,l
   17B7 54                 8059 	ld	d,h
   17B8 F8 07              8060 	lda	hl,7(sp)
                           8061 ;	genPointerGet
                           8062 ;	AOP_STK for _move_character_sloc3_1_0
                           8063 ;	AOP_STK for _move_character_sloc7_1_0
   17BA 22                 8064 	ld	(hl+),a
   17BB 72                 8065 	ld	(hl),d
   17BC 5F                 8066 	ld	e,a
   17BD 1A                 8067 	ld	a,(de)
   17BE F8 02              8068 	lda	hl,2(sp)
   17C0 77                 8069 	ld	(hl),a
                           8070 ;	genPointerGet
                           8071 ;	AOP_STK for _move_character_sloc1_1_0
                           8072 ;	AOP_STK for _move_character_sloc6_1_0
   17C1 F8 0B              8073 	lda	hl,11(sp)
   17C3 5E                 8074 	ld	e,(hl)
   17C4 23                 8075 	inc	hl
   17C5 56                 8076 	ld	d,(hl)
   17C6 1A                 8077 	ld	a,(de)
   17C7 F8 03              8078 	lda	hl,3(sp)
   17C9 77                 8079 	ld	(hl),a
                           8080 ;	genIpush
                           8081 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17CA C5                 8082 	push	bc
                           8083 ;	AOP_STK for _move_character_sloc7_1_0
   17CB 2B                 8084 	dec	hl
   17CC 7E                 8085 	ld	a,(hl)
   17CD F5                 8086 	push	af
   17CE 33                 8087 	inc	sp
                           8088 ;	genIpush
                           8089 ;	AOP_STK for _move_character_sloc6_1_0
   17CF 23                 8090 	inc	hl
   17D0 7E                 8091 	ld	a,(hl)
   17D1 F5                 8092 	push	af
   17D2 33                 8093 	inc	sp
                           8094 ;	genCall
   17D3 CD 00 00           8095 	call	_set_sprite_tile
   17D6 E8 02              8096 	lda	sp,2(sp)
   17D8 C1                 8097 	pop	bc
                           8098 ;	genLabel
   17D9                    8099 00147$:
                           8100 ;	game.c 1045
                           8101 ;	genCmpEq
                           8102 ;	AOP_HL for _input_timer
                           8103 ; genCmpEq: left 1, right 1, result 0
   17D9 21 03 19           8104 	ld	hl,#_input_timer
   17DC 7E                 8105 	ld	a,(hl)
   17DD FE 02              8106 	cp	a,#0x02
   17DF C2 08 18           8107 	jp	nz,00149$
   17E2 18 03              8108 	jr	00230$
   17E4                    8109 00229$:
   17E4 C3 08 18           8110 	jp	00149$
   17E7                    8111 00230$:
                           8112 ;	game.c 1046
                           8113 ;	genPointerGet
                           8114 ;	AOP_STK for _move_character_sloc5_1_0
                           8115 ;	AOP_STK for _move_character_sloc7_1_0
   17E7 F8 04              8116 	lda	hl,4(sp)
   17E9 5E                 8117 	ld	e,(hl)
   17EA 23                 8118 	inc	hl
   17EB 56                 8119 	ld	d,(hl)
   17EC 1A                 8120 	ld	a,(de)
   17ED F8 02              8121 	lda	hl,2(sp)
   17EF 77                 8122 	ld	(hl),a
                           8123 ;	genPointerGet
                           8124 ;	AOP_STK for _move_character_sloc1_1_0
                           8125 ;	AOP_STK for _move_character_sloc6_1_0
   17F0 F8 0B              8126 	lda	hl,11(sp)
   17F2 5E                 8127 	ld	e,(hl)
   17F3 23                 8128 	inc	hl
   17F4 56                 8129 	ld	d,(hl)
   17F5 1A                 8130 	ld	a,(de)
   17F6 F8 03              8131 	lda	hl,3(sp)
   17F8 77                 8132 	ld	(hl),a
                           8133 ;	genIpush
                           8134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17F9 C5                 8135 	push	bc
                           8136 ;	AOP_STK for _move_character_sloc7_1_0
   17FA 2B                 8137 	dec	hl
   17FB 7E                 8138 	ld	a,(hl)
   17FC F5                 8139 	push	af
   17FD 33                 8140 	inc	sp
                           8141 ;	genIpush
                           8142 ;	AOP_STK for _move_character_sloc6_1_0
   17FE 23                 8143 	inc	hl
   17FF 7E                 8144 	ld	a,(hl)
   1800 F5                 8145 	push	af
   1801 33                 8146 	inc	sp
                           8147 ;	genCall
   1802 CD 00 00           8148 	call	_set_sprite_tile
   1805 E8 02              8149 	lda	sp,2(sp)
   1807 C1                 8150 	pop	bc
                           8151 ;	genLabel
   1808                    8152 00149$:
                           8153 ;	game.c 1049
                           8154 ;	genPointerGet
                           8155 ;	AOP_STK for _move_character_sloc1_1_0
                           8156 ;	AOP_STK for _move_character_sloc7_1_0
   1808 F8 0B              8157 	lda	hl,11(sp)
   180A 5E                 8158 	ld	e,(hl)
   180B 23                 8159 	inc	hl
   180C 56                 8160 	ld	d,(hl)
   180D 1A                 8161 	ld	a,(de)
   180E F8 02              8162 	lda	hl,2(sp)
   1810 77                 8163 	ld	(hl),a
                           8164 ;	genIpush
                           8165 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1811 C5                 8166 	push	bc
   1812 3E 20              8167 	ld	a,#0x20
   1814 F5                 8168 	push	af
   1815 33                 8169 	inc	sp
                           8170 ;	genIpush
                           8171 ;	AOP_STK for _move_character_sloc7_1_0
   1816 7E                 8172 	ld	a,(hl)
   1817 F5                 8173 	push	af
   1818 33                 8174 	inc	sp
                           8175 ;	genCall
   1819 CD 00 00           8176 	call	_set_sprite_prop
   181C E8 02              8177 	lda	sp,2(sp)
   181E C1                 8178 	pop	bc
                           8179 ;	game.c 1050
                           8180 ;	genGoto
   181F C3 C3 18           8181 	jp	00155$
                           8182 ;	game.c 1052
                           8183 ;	genLabel
   1822                    8184 00150$:
                           8185 ;	genPlus
                           8186 ;	AOP_STK for _move_character_sloc0_1_0
                           8187 ;	AOP_STK for _move_character_sloc5_1_0
                           8188 ;	genPlusIncr
                           8189 ;	Can't optimise plus by inc, falling back to the normal way
   1822 F8 0D              8190 	lda	hl,13(sp)
   1824 5E                 8191 	ld	e,(hl)
   1825 23                 8192 	inc	hl
   1826 56                 8193 	ld	d,(hl)
   1827 21 05 00           8194 	ld	hl,#0x0005
   182A 19                 8195 	add	hl,de
   182B 7D                 8196 	ld	a,l
   182C 54                 8197 	ld	d,h
   182D F8 04              8198 	lda	hl,4(sp)
                           8199 ;	genPointerGet
                           8200 ;	AOP_STK for _move_character_sloc5_1_0
                           8201 ;	AOP_STK for _move_character_sloc7_1_0
   182F 22                 8202 	ld	(hl+),a
   1830 72                 8203 	ld	(hl),d
   1831 5F                 8204 	ld	e,a
   1832 1A                 8205 	ld	a,(de)
   1833 F8 02              8206 	lda	hl,2(sp)
   1835 77                 8207 	ld	(hl),a
                           8208 ;	genIpush
                           8209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1836 C5                 8210 	push	bc
                           8211 ;	AOP_STK for _move_character_sloc7_1_0
   1837 7E                 8212 	ld	a,(hl)
   1838 F5                 8213 	push	af
   1839 33                 8214 	inc	sp
                           8215 ;	genIpush
   183A 78                 8216 	ld	a,b
   183B F5                 8217 	push	af
   183C 33                 8218 	inc	sp
                           8219 ;	genCall
   183D CD 00 00           8220 	call	_set_sprite_tile
   1840 E8 02              8221 	lda	sp,2(sp)
   1842 C1                 8222 	pop	bc
                           8223 ;	game.c 1054
                           8224 ;	genCmpEq
                           8225 ;	AOP_HL for _input_timer
                           8226 ; genCmpEq: left 1, right 1, result 0
   1843 21 03 19           8227 	ld	hl,#_input_timer
   1846 7E                 8228 	ld	a,(hl)
   1847 FE 04              8229 	cp	a,#0x04
   1849 C2 7D 18           8230 	jp	nz,00152$
   184C 18 03              8231 	jr	00232$
   184E                    8232 00231$:
   184E C3 7D 18           8233 	jp	00152$
   1851                    8234 00232$:
                           8235 ;	game.c 1055
                           8236 ;	genPlus
                           8237 ;	AOP_STK for _move_character_sloc0_1_0
                           8238 ;	AOP_STK for _move_character_sloc3_1_0
                           8239 ;	genPlusIncr
                           8240 ;	Can't optimise plus by inc, falling back to the normal way
   1851 F8 0D              8241 	lda	hl,13(sp)
   1853 5E                 8242 	ld	e,(hl)
   1854 23                 8243 	inc	hl
   1855 56                 8244 	ld	d,(hl)
   1856 21 06 00           8245 	ld	hl,#0x0006
   1859 19                 8246 	add	hl,de
   185A 7D                 8247 	ld	a,l
   185B 54                 8248 	ld	d,h
   185C F8 07              8249 	lda	hl,7(sp)
                           8250 ;	genPointerGet
                           8251 ;	AOP_STK for _move_character_sloc3_1_0
                           8252 ;	AOP_STK for _move_character_sloc7_1_0
   185E 22                 8253 	ld	(hl+),a
   185F 72                 8254 	ld	(hl),d
   1860 5F                 8255 	ld	e,a
   1861 1A                 8256 	ld	a,(de)
   1862 F8 02              8257 	lda	hl,2(sp)
   1864 77                 8258 	ld	(hl),a
                           8259 ;	genPointerGet
                           8260 ;	AOP_STK for _move_character_sloc1_1_0
                           8261 ;	AOP_STK for _move_character_sloc6_1_0
   1865 F8 0B              8262 	lda	hl,11(sp)
   1867 5E                 8263 	ld	e,(hl)
   1868 23                 8264 	inc	hl
   1869 56                 8265 	ld	d,(hl)
   186A 1A                 8266 	ld	a,(de)
   186B F8 03              8267 	lda	hl,3(sp)
   186D 77                 8268 	ld	(hl),a
                           8269 ;	genIpush
                           8270 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   186E C5                 8271 	push	bc
                           8272 ;	AOP_STK for _move_character_sloc7_1_0
   186F 2B                 8273 	dec	hl
   1870 7E                 8274 	ld	a,(hl)
   1871 F5                 8275 	push	af
   1872 33                 8276 	inc	sp
                           8277 ;	genIpush
                           8278 ;	AOP_STK for _move_character_sloc6_1_0
   1873 23                 8279 	inc	hl
   1874 7E                 8280 	ld	a,(hl)
   1875 F5                 8281 	push	af
   1876 33                 8282 	inc	sp
                           8283 ;	genCall
   1877 CD 00 00           8284 	call	_set_sprite_tile
   187A E8 02              8285 	lda	sp,2(sp)
   187C C1                 8286 	pop	bc
                           8287 ;	genLabel
   187D                    8288 00152$:
                           8289 ;	game.c 1057
                           8290 ;	genCmpEq
                           8291 ;	AOP_HL for _input_timer
                           8292 ; genCmpEq: left 1, right 1, result 0
   187D 21 03 19           8293 	ld	hl,#_input_timer
   1880 7E                 8294 	ld	a,(hl)
   1881 FE 02              8295 	cp	a,#0x02
   1883 C2 AC 18           8296 	jp	nz,00154$
   1886 18 03              8297 	jr	00234$
   1888                    8298 00233$:
   1888 C3 AC 18           8299 	jp	00154$
   188B                    8300 00234$:
                           8301 ;	game.c 1058
                           8302 ;	genPointerGet
                           8303 ;	AOP_STK for _move_character_sloc5_1_0
                           8304 ;	AOP_STK for _move_character_sloc7_1_0
   188B F8 04              8305 	lda	hl,4(sp)
   188D 5E                 8306 	ld	e,(hl)
   188E 23                 8307 	inc	hl
   188F 56                 8308 	ld	d,(hl)
   1890 1A                 8309 	ld	a,(de)
   1891 F8 02              8310 	lda	hl,2(sp)
   1893 77                 8311 	ld	(hl),a
                           8312 ;	genPointerGet
                           8313 ;	AOP_STK for _move_character_sloc1_1_0
                           8314 ;	AOP_STK for _move_character_sloc6_1_0
   1894 F8 0B              8315 	lda	hl,11(sp)
   1896 5E                 8316 	ld	e,(hl)
   1897 23                 8317 	inc	hl
   1898 56                 8318 	ld	d,(hl)
   1899 1A                 8319 	ld	a,(de)
   189A F8 03              8320 	lda	hl,3(sp)
   189C 77                 8321 	ld	(hl),a
                           8322 ;	genIpush
                           8323 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   189D C5                 8324 	push	bc
                           8325 ;	AOP_STK for _move_character_sloc7_1_0
   189E 2B                 8326 	dec	hl
   189F 7E                 8327 	ld	a,(hl)
   18A0 F5                 8328 	push	af
   18A1 33                 8329 	inc	sp
                           8330 ;	genIpush
                           8331 ;	AOP_STK for _move_character_sloc6_1_0
   18A2 23                 8332 	inc	hl
   18A3 7E                 8333 	ld	a,(hl)
   18A4 F5                 8334 	push	af
   18A5 33                 8335 	inc	sp
                           8336 ;	genCall
   18A6 CD 00 00           8337 	call	_set_sprite_tile
   18A9 E8 02              8338 	lda	sp,2(sp)
   18AB C1                 8339 	pop	bc
                           8340 ;	genLabel
   18AC                    8341 00154$:
                           8342 ;	game.c 1060
                           8343 ;	genPointerGet
                           8344 ;	AOP_STK for _move_character_sloc1_1_0
                           8345 ;	AOP_STK for _move_character_sloc7_1_0
   18AC F8 0B              8346 	lda	hl,11(sp)
   18AE 5E                 8347 	ld	e,(hl)
   18AF 23                 8348 	inc	hl
   18B0 56                 8349 	ld	d,(hl)
   18B1 1A                 8350 	ld	a,(de)
   18B2 F8 02              8351 	lda	hl,2(sp)
   18B4 77                 8352 	ld	(hl),a
                           8353 ;	genIpush
                           8354 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18B5 C5                 8355 	push	bc
   18B6 3E 40              8356 	ld	a,#0x40
   18B8 F5                 8357 	push	af
   18B9 33                 8358 	inc	sp
                           8359 ;	genIpush
                           8360 ;	AOP_STK for _move_character_sloc7_1_0
   18BA 7E                 8361 	ld	a,(hl)
   18BB F5                 8362 	push	af
   18BC 33                 8363 	inc	sp
                           8364 ;	genCall
   18BD CD 00 00           8365 	call	_set_sprite_prop
   18C0 E8 02              8366 	lda	sp,2(sp)
   18C2 C1                 8367 	pop	bc
                           8368 ;	game.c 1062
                           8369 ;	genLabel
   18C3                    8370 00155$:
                           8371 ;	game.c 1065
                           8372 ;	genCmpEq
                           8373 ;	AOP_HL for _input_timer
                           8374 ; genCmpEq: left 1, right 1, result 0
   18C3 21 03 19           8375 	ld	hl,#_input_timer
   18C6 7E                 8376 	ld	a,(hl)
   18C7 B7                 8377 	or	a,a
   18C8 CA 48 19           8378 	jp	z,00165$
   18CB                    8379 00235$:
                           8380 ;	game.c 1067
                           8381 ;	genIfx
                           8382 ;	AOP_STK for _move_character_sloc8_1_0
   18CB AF                 8383 	xor	a,a
   18CC F8 00              8384 	lda	hl,0(sp)
   18CE B6                 8385 	or	a,(hl)
   18CF C2 48 19           8386 	jp	nz,00165$
                           8387 ;	genCmpGt
   18D2 3E 04              8388 	ld	a,#0x04
   18D4 91                 8389 	sub	a,c
   18D5 DA 48 19           8390 	jp	c,00165$
                           8391 ;	genMinus
   18D8 0D                 8392 	dec	c
                           8393 ;	genJumpTab
   18D9 59                 8394 	ld	e,c
   18DA 16 00              8395 	ld	d,#0x00
   18DC 21 E3 18           8396 	ld	hl,#00236$
   18DF 19                 8397 	add	hl,de
   18E0 19                 8398 	add	hl,de
   18E1 19                 8399 	add	hl,de
   18E2 E9                 8400 	jp	(hl)
   18E3                    8401 00236$:
   18E3 C3 12 19           8402 	jp	00158$
   18E6 C3 01 19           8403 	jp	00157$
   18E9 C3 2F 19           8404 	jp	00159$
   18EC C3 EF 18           8405 	jp	00156$
                           8406 ;	game.c 1069
                           8407 ;	genLabel
   18EF                    8408 00156$:
                           8409 ;	genPointerGet
                           8410 ;	AOP_STK for _move_character_sloc0_1_0
   18EF F8 0D              8411 	lda	hl,13(sp)
   18F1 5E                 8412 	ld	e,(hl)
   18F2 23                 8413 	inc	hl
   18F3 56                 8414 	ld	d,(hl)
   18F4 1A                 8415 	ld	a,(de)
   18F5 4F                 8416 	ld	c,a
                           8417 ;	genMinus
   18F6 0D                 8418 	dec	c
   18F7 0D                 8419 	dec	c
                           8420 ;	genAssign (pointer)
                           8421 ;	AOP_STK for _move_character_sloc0_1_0
   18F8 2B                 8422 	dec	hl
   18F9 5E                 8423 	ld	e,(hl)
   18FA 23                 8424 	inc	hl
   18FB 56                 8425 	ld	d,(hl)
   18FC 79                 8426 	ld	a,c
   18FD 12                 8427 	ld	(de),a
                           8428 ;	game.c 1070
                           8429 ;	genGoto
   18FE C3 48 19           8430 	jp	00165$
                           8431 ;	game.c 1072
                           8432 ;	genLabel
   1901                    8433 00157$:
                           8434 ;	genPointerGet
                           8435 ;	AOP_STK for _move_character_sloc0_1_0
   1901 F8 0D              8436 	lda	hl,13(sp)
   1903 5E                 8437 	ld	e,(hl)
   1904 23                 8438 	inc	hl
   1905 56                 8439 	ld	d,(hl)
   1906 1A                 8440 	ld	a,(de)
                           8441 ;	genPlus
                           8442 ;	genPlusIncr
                           8443 ;	Can't optimise plus by inc, falling back to the normal way
   1907 4F                 8444 	ld	c,a
   1908 C6 02              8445 	add	a,#0x02
                           8446 ;	genAssign (pointer)
                           8447 ;	AOP_STK for _move_character_sloc0_1_0
   190A 2B                 8448 	dec	hl
   190B 5E                 8449 	ld	e,(hl)
   190C 23                 8450 	inc	hl
   190D 56                 8451 	ld	d,(hl)
   190E 12                 8452 	ld	(de),a
                           8453 ;	game.c 1073
                           8454 ;	genGoto
   190F C3 48 19           8455 	jp	00165$
                           8456 ;	game.c 1075
                           8457 ;	genLabel
   1912                    8458 00158$:
                           8459 ;	genPlus
                           8460 ;	AOP_STK for _move_character_sloc0_1_0
                           8461 ;	AOP_STK for _move_character_sloc8_1_0
                           8462 ;	genPlusIncr
                           8463 ;	Can't optimise plus by inc, falling back to the normal way
   1912 F8 0D              8464 	lda	hl,13(sp)
   1914 5E                 8465 	ld	e,(hl)
   1915 23                 8466 	inc	hl
   1916 56                 8467 	ld	d,(hl)
   1917 21 01 00           8468 	ld	hl,#0x0001
   191A 19                 8469 	add	hl,de
   191B 7D                 8470 	ld	a,l
   191C 54                 8471 	ld	d,h
   191D F8 00              8472 	lda	hl,0(sp)
                           8473 ;	genPointerGet
                           8474 ;	AOP_STK for _move_character_sloc8_1_0
   191F 22                 8475 	ld	(hl+),a
   1920 72                 8476 	ld	(hl),d
   1921 5F                 8477 	ld	e,a
   1922 1A                 8478 	ld	a,(de)
   1923 4F                 8479 	ld	c,a
                           8480 ;	genMinus
   1924 0D                 8481 	dec	c
   1925 0D                 8482 	dec	c
                           8483 ;	genAssign (pointer)
                           8484 ;	AOP_STK for _move_character_sloc8_1_0
   1926 2B                 8485 	dec	hl
   1927 5E                 8486 	ld	e,(hl)
   1928 23                 8487 	inc	hl
   1929 56                 8488 	ld	d,(hl)
   192A 79                 8489 	ld	a,c
   192B 12                 8490 	ld	(de),a
                           8491 ;	game.c 1076
                           8492 ;	genGoto
   192C C3 48 19           8493 	jp	00165$
                           8494 ;	game.c 1078
                           8495 ;	genLabel
   192F                    8496 00159$:
                           8497 ;	genPlus
                           8498 ;	AOP_STK for _move_character_sloc0_1_0
                           8499 ;	AOP_STK for _move_character_sloc8_1_0
                           8500 ;	genPlusIncr
                           8501 ;	Can't optimise plus by inc, falling back to the normal way
   192F F8 0D              8502 	lda	hl,13(sp)
   1931 5E                 8503 	ld	e,(hl)
   1932 23                 8504 	inc	hl
   1933 56                 8505 	ld	d,(hl)
   1934 21 01 00           8506 	ld	hl,#0x0001
   1937 19                 8507 	add	hl,de
   1938 7D                 8508 	ld	a,l
   1939 54                 8509 	ld	d,h
   193A F8 00              8510 	lda	hl,0(sp)
                           8511 ;	genPointerGet
                           8512 ;	AOP_STK for _move_character_sloc8_1_0
   193C 22                 8513 	ld	(hl+),a
   193D 72                 8514 	ld	(hl),d
   193E 5F                 8515 	ld	e,a
   193F 1A                 8516 	ld	a,(de)
                           8517 ;	genPlus
                           8518 ;	genPlusIncr
                           8519 ;	Can't optimise plus by inc, falling back to the normal way
   1940 4F                 8520 	ld	c,a
   1941 C6 02              8521 	add	a,#0x02
                           8522 ;	genAssign (pointer)
                           8523 ;	AOP_STK for _move_character_sloc8_1_0
   1943 2B                 8524 	dec	hl
   1944 5E                 8525 	ld	e,(hl)
   1945 23                 8526 	inc	hl
   1946 56                 8527 	ld	d,(hl)
   1947 12                 8528 	ld	(de),a
                           8529 ;	game.c 1080
                           8530 ;	genLabel
   1948                    8531 00165$:
                           8532 ;	game.c 1085
                           8533 ;	genPlus
                           8534 ;	AOP_STK for _move_character_sloc0_1_0
                           8535 ;	AOP_STK for _move_character_sloc8_1_0
                           8536 ;	genPlusIncr
                           8537 ;	Can't optimise plus by inc, falling back to the normal way
   1948 F8 0D              8538 	lda	hl,13(sp)
   194A 5E                 8539 	ld	e,(hl)
   194B 23                 8540 	inc	hl
   194C 56                 8541 	ld	d,(hl)
   194D 21 01 00           8542 	ld	hl,#0x0001
   1950 19                 8543 	add	hl,de
   1951 7D                 8544 	ld	a,l
   1952 54                 8545 	ld	d,h
   1953 F8 00              8546 	lda	hl,0(sp)
                           8547 ;	genPointerGet
                           8548 ;	AOP_STK for _move_character_sloc8_1_0
   1955 22                 8549 	ld	(hl+),a
   1956 72                 8550 	ld	(hl),d
   1957 5F                 8551 	ld	e,a
   1958 1A                 8552 	ld	a,(de)
   1959 4F                 8553 	ld	c,a
                           8554 ;	genPointerGet
                           8555 ;	AOP_STK for _move_character_sloc0_1_0
                           8556 ;	AOP_STK for _move_character_sloc7_1_0
   195A F8 0D              8557 	lda	hl,13(sp)
   195C 5E                 8558 	ld	e,(hl)
   195D 23                 8559 	inc	hl
   195E 56                 8560 	ld	d,(hl)
   195F 1A                 8561 	ld	a,(de)
   1960 F8 02              8562 	lda	hl,2(sp)
   1962 77                 8563 	ld	(hl),a
                           8564 ;	genIpush
                           8565 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1963 79                 8566 	ld	a,c
   1964 F5                 8567 	push	af
   1965 33                 8568 	inc	sp
                           8569 ;	genIpush
                           8570 ;	AOP_STK for _move_character_sloc7_1_0
   1966 7E                 8571 	ld	a,(hl)
   1967 F5                 8572 	push	af
   1968 33                 8573 	inc	sp
                           8574 ;	genIpush
   1969 78                 8575 	ld	a,b
   196A F5                 8576 	push	af
   196B 33                 8577 	inc	sp
                           8578 ;	genCall
   196C CD 00 00           8579 	call	_move_sprite
   196F E8 03              8580 	lda	sp,3(sp)
                           8581 ;	game.c 1086
                           8582 ;	genPlus
                           8583 ;	AOP_STK for _move_character_sloc0_1_0
                           8584 ;	genPlusIncr
                           8585 ;	Can't optimise plus by inc, falling back to the normal way
   1971 F8 0D              8586 	lda	hl,13(sp)
   1973 5E                 8587 	ld	e,(hl)
   1974 23                 8588 	inc	hl
   1975 56                 8589 	ld	d,(hl)
   1976 21 0C 00           8590 	ld	hl,#0x000C
   1979 19                 8591 	add	hl,de
   197A 4D                 8592 	ld	c,l
   197B 44                 8593 	ld	b,h
                           8594 ;	genPointerGet
                           8595 ;	AOP_STK for _move_character_sloc8_1_0
                           8596 ;	AOP_STK for _move_character_sloc7_1_0
   197C F8 00              8597 	lda	hl,0(sp)
   197E 5E                 8598 	ld	e,(hl)
   197F 23                 8599 	inc	hl
   1980 56                 8600 	ld	d,(hl)
   1981 1A                 8601 	ld	a,(de)
   1982 23                 8602 	inc	hl
   1983 77                 8603 	ld	(hl),a
                           8604 ;	genPointerGet
                           8605 ;	AOP_STK for _move_character_sloc0_1_0
                           8606 ;	AOP_STK for _move_character_sloc8_1_0
   1984 F8 0D              8607 	lda	hl,13(sp)
   1986 5E                 8608 	ld	e,(hl)
   1987 23                 8609 	inc	hl
   1988 56                 8610 	ld	d,(hl)
   1989 1A                 8611 	ld	a,(de)
   198A F8 00              8612 	lda	hl,0(sp)
   198C 77                 8613 	ld	(hl),a
                           8614 ;	genIpush
                           8615 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   198D C5                 8616 	push	bc
                           8617 ;	AOP_STK for _move_character_sloc7_1_0
   198E 23                 8618 	inc	hl
   198F 23                 8619 	inc	hl
   1990 7E                 8620 	ld	a,(hl)
   1991 F5                 8621 	push	af
   1992 33                 8622 	inc	sp
                           8623 ;	genIpush
                           8624 ;	AOP_STK for _move_character_sloc8_1_0
   1993 2B                 8625 	dec	hl
   1994 2B                 8626 	dec	hl
   1995 7E                 8627 	ld	a,(hl)
   1996 F5                 8628 	push	af
   1997 33                 8629 	inc	sp
                           8630 ;	genCall
   1998 CD 6E 0C           8631 	call	_get_player_map_position
                           8632 ;	AOP_STK for _move_character_sloc8_1_0
   199B F8 05              8633 	lda	hl,5(sp)
   199D 72                 8634 	ld	(hl),d
   199E 2B                 8635 	dec	hl
   199F 73                 8636 	ld	(hl),e
   19A0 E8 02              8637 	lda	sp,2(sp)
   19A2 C1                 8638 	pop	bc
                           8639 ;	genAssign (pointer)
                           8640 ;	AOP_STK for _move_character_sloc8_1_0
   19A3 59                 8641 	ld	e,c
   19A4 50                 8642 	ld	d,b
   19A5 F8 00              8643 	lda	hl,0(sp)
   19A7 7E                 8644 	ld	a,(hl)
   19A8 12                 8645 	ld	(de),a
   19A9 13                 8646 	inc	de
   19AA 23                 8647 	inc	hl
   19AB 7E                 8648 	ld	a,(hl)
   19AC 12                 8649 	ld	(de),a
                           8650 ;	genLabel
   19AD                    8651 00166$:
                           8652 ;	genEndFunction
   19AD E8 0F              8653 	lda	sp,15(sp)
   19AF C9                 8654 	ret
   19B0                    8655 ___move_character_end:
                           8656 ;	game.c 1089
                           8657 ;	genLabel
                           8658 ;	genFunction
                           8659 ;	---------------------------------
                           8660 ; Function set_character_sprite
                           8661 ; ---------------------------------
   19B0                    8662 ___set_character_sprite_start:
   19B0                    8663 _set_character_sprite:
   19B0 E8 F9              8664 	lda	sp,-7(sp)
                           8665 ;	game.c 1090
                           8666 ;	genAssign
                           8667 ;	AOP_STK for 
   19B2 F8 09              8668 	lda	hl,9(sp)
   19B4 4E                 8669 	ld	c,(hl)
   19B5 23                 8670 	inc	hl
   19B6 46                 8671 	ld	b,(hl)
                           8672 ;	genPlus
                           8673 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8674 ;	genPlusIncr
                           8675 ;	Can't optimise plus by inc, falling back to the normal way
   19B7 21 0B 00           8676 	ld	hl,#0x000B
   19BA 09                 8677 	add	hl,bc
   19BB 7D                 8678 	ld	a,l
   19BC 54                 8679 	ld	d,h
   19BD F8 05              8680 	lda	hl,5(sp)
                           8681 ;	genPointerGet
                           8682 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8683 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   19BF 22                 8684 	ld	(hl+),a
   19C0 72                 8685 	ld	(hl),d
   19C1 5F                 8686 	ld	e,a
   19C2 1A                 8687 	ld	a,(de)
   19C3 2B                 8688 	dec	hl
   19C4 2B                 8689 	dec	hl
   19C5 77                 8690 	ld	(hl),a
                           8691 ;	genCmpGt
                           8692 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           8693 ;	AOP_HL for _characters_available
   19C6 21 02 19           8694 	ld	hl,#_characters_available
   19C9 7E                 8695 	ld	a,(hl)
   19CA F8 04              8696 	lda	hl,4(sp)
   19CC 96                 8697 	sub	a,(hl)
   19CD DA 49 1A           8698 	jp	c,00103$
                           8699 ;	game.c 1091
                           8700 ;	genPlus
                           8701 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8702 ;	genPlusIncr
                           8703 ;	Can't optimise plus by inc, falling back to the normal way
   19D0 21 02 00           8704 	ld	hl,#0x0002
   19D3 09                 8705 	add	hl,bc
   19D4 7D                 8706 	ld	a,l
   19D5 54                 8707 	ld	d,h
   19D6 F8 02              8708 	lda	hl,2(sp)
                           8709 ;	genPointerGet
                           8710 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8711 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   19D8 22                 8712 	ld	(hl+),a
   19D9 72                 8713 	ld	(hl),d
   19DA 5F                 8714 	ld	e,a
   19DB 1A                 8715 	ld	a,(de)
   19DC 2B                 8716 	dec	hl
   19DD 2B                 8717 	dec	hl
   19DE 77                 8718 	ld	(hl),a
                           8719 ;	genIpush
                           8720 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19DF C5                 8721 	push	bc
                           8722 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   19E0 7E                 8723 	ld	a,(hl)
   19E1 F5                 8724 	push	af
   19E2 33                 8725 	inc	sp
                           8726 ;	genIpush
                           8727 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   19E3 F8 07              8728 	lda	hl,7(sp)
   19E5 7E                 8729 	ld	a,(hl)
   19E6 F5                 8730 	push	af
   19E7 33                 8731 	inc	sp
                           8732 ;	genCall
   19E8 CD 00 00           8733 	call	_set_sprite_tile
   19EB E8 02              8734 	lda	sp,2(sp)
   19ED C1                 8735 	pop	bc
                           8736 ;	game.c 1092
                           8737 ;	genPlus
                           8738 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8739 ;	genPlusIncr
                           8740 ;	Can't optimise plus by inc, falling back to the normal way
   19EE 21 01 00           8741 	ld	hl,#0x0001
   19F1 09                 8742 	add	hl,bc
   19F2 7D                 8743 	ld	a,l
   19F3 54                 8744 	ld	d,h
   19F4 F8 02              8745 	lda	hl,2(sp)
                           8746 ;	genPointerGet
                           8747 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8748 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   19F6 22                 8749 	ld	(hl+),a
   19F7 72                 8750 	ld	(hl),d
   19F8 5F                 8751 	ld	e,a
   19F9 1A                 8752 	ld	a,(de)
   19FA 2B                 8753 	dec	hl
   19FB 2B                 8754 	dec	hl
   19FC 77                 8755 	ld	(hl),a
                           8756 ;	genPointerGet
                           8757 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   19FD 0A                 8758 	ld	a,(bc)
   19FE F8 04              8759 	lda	hl,4(sp)
                           8760 ;	genPointerGet
                           8761 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8762 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A00 22                 8763 	ld	(hl+),a
   1A01 5E                 8764 	ld	e,(hl)
   1A02 23                 8765 	inc	hl
   1A03 56                 8766 	ld	d,(hl)
   1A04 1A                 8767 	ld	a,(de)
   1A05 F8 00              8768 	lda	hl,0(sp)
   1A07 77                 8769 	ld	(hl),a
                           8770 ;	genIpush
                           8771 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1A08 C5                 8772 	push	bc
                           8773 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1A09 23                 8774 	inc	hl
   1A0A 7E                 8775 	ld	a,(hl)
   1A0B F5                 8776 	push	af
   1A0C 33                 8777 	inc	sp
                           8778 ;	genIpush
                           8779 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1A0D F8 07              8780 	lda	hl,7(sp)
   1A0F 7E                 8781 	ld	a,(hl)
   1A10 F5                 8782 	push	af
   1A11 33                 8783 	inc	sp
                           8784 ;	genIpush
                           8785 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A12 F8 04              8786 	lda	hl,4(sp)
   1A14 7E                 8787 	ld	a,(hl)
   1A15 F5                 8788 	push	af
   1A16 33                 8789 	inc	sp
                           8790 ;	genCall
   1A17 CD 00 00           8791 	call	_move_sprite
   1A1A E8 03              8792 	lda	sp,3(sp)
   1A1C C1                 8793 	pop	bc
                           8794 ;	game.c 1093
                           8795 ;	genPlus
                           8796 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8797 ;	genPlusIncr
                           8798 ;	Can't optimise plus by inc, falling back to the normal way
   1A1D 21 0C 00           8799 	ld	hl,#0x000C
   1A20 09                 8800 	add	hl,bc
   1A21 7D                 8801 	ld	a,l
   1A22 54                 8802 	ld	d,h
   1A23 F8 05              8803 	lda	hl,5(sp)
   1A25 22                 8804 	ld	(hl+),a
   1A26 72                 8805 	ld	(hl),d
                           8806 ;	genPointerGet
                           8807 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8808 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A27 F8 02              8809 	lda	hl,2(sp)
   1A29 5E                 8810 	ld	e,(hl)
   1A2A 23                 8811 	inc	hl
   1A2B 56                 8812 	ld	d,(hl)
   1A2C 1A                 8813 	ld	a,(de)
   1A2D F8 00              8814 	lda	hl,0(sp)
   1A2F 77                 8815 	ld	(hl),a
                           8816 ;	genPointerGet
   1A30 0A                 8817 	ld	a,(bc)
   1A31 4F                 8818 	ld	c,a
                           8819 ;	genIpush
                           8820 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8821 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A32 7E                 8822 	ld	a,(hl)
   1A33 F5                 8823 	push	af
   1A34 33                 8824 	inc	sp
                           8825 ;	genIpush
   1A35 79                 8826 	ld	a,c
   1A36 F5                 8827 	push	af
   1A37 33                 8828 	inc	sp
                           8829 ;	genCall
   1A38 CD 6E 0C           8830 	call	_get_player_map_position
   1A3B 42                 8831 	ld	b,d
   1A3C 4B                 8832 	ld	c,e
   1A3D E8 02              8833 	lda	sp,2(sp)
                           8834 ;	genAssign (pointer)
                           8835 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   1A3F F8 05              8836 	lda	hl,5(sp)
   1A41 5E                 8837 	ld	e,(hl)
   1A42 23                 8838 	inc	hl
   1A43 56                 8839 	ld	d,(hl)
   1A44 79                 8840 	ld	a,c
   1A45 12                 8841 	ld	(de),a
   1A46 13                 8842 	inc	de
   1A47 78                 8843 	ld	a,b
   1A48 12                 8844 	ld	(de),a
                           8845 ;	genLabel
   1A49                    8846 00103$:
                           8847 ;	genEndFunction
   1A49 E8 07              8848 	lda	sp,7(sp)
   1A4B C9                 8849 	ret
   1A4C                    8850 ___set_character_sprite_end:
                           8851 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_next_map_position_end      0B4A R
  0 ____get_next_map_position_start    0A96 R
  0 ___can_move_end                    0FAA R
  0 ___can_move_start                  0EC1 R
  0 ___can_move_to_map_pos_end         0EC1 R
  0 ___can_move_to_map_pos_start       0E0E R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0C6E R
  0 ___dog1_power_apply_start          0B4A R
  0 ___dog1_power_end                  0A96 R
  0 ___dog1_power_start                08FF R
  0 ___get_player_map_position_end     0CC8 R
  0 ___get_player_map_position_start   0C6E R
  0 ___got_door_end                    07CC R
  0 ___got_door_start                  05E2 R
  0 ___got_key_end                     05E2 R
  0 ___got_key_start                   0535 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___ice_should_slide_end            08FF R
  0 ___ice_should_slide_start          08A1 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0535 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      08A1 R
  0 ___is_ded_start                    07CC R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              19B0 R
  0 ___move_character_start            1150 R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0E0E R
  0 ___player_input_start              0CC8 R
  0 ___rotate_player_end               1150 R
  0 ___rotate_player_start             0FAA R
  0 ___set_character_sprite_end        1A4C R
  0 ___set_character_sprite_start      19B0 R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_next_map_position            0A96 GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          0EC1 GR
  0 _can_move_to_map_pos               0E0E GR
  1 _cat                               1A97 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7B GR
  0 _dog1_power                        08FF GR
  0 _dog1_power_apply                  0B4A GR
  1 _dog2                              1A89 GR
  0 _get_player_map_position           0C6E GR
  0 _got_door                          05E2 GR
  0 _got_key                           0535 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA5 GR
  0 _ice_should_slide                  08A1 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07CC GR
  1 _item1                             1ABB GR
  1 _item2                             1AC1 GR
  1 _item3                             1AC7 GR
    _joypad                            **** GX
  1 _key                               1AB5 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    1150 GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AB3 GR
  0 _player_input                      0CC8 GR
    _printf                            **** GX
  0 _rotate_player                     0FAA GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              19B0 GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1A4C   flags 0
   1 _DATA                              size 1ACD   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 1033   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
