                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Fri Feb 28 11:58:50 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc115210
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _instanciate_chars
                             14 	.globl _copy_map
                             15 	.globl _helper_copy_map
                             16 	.globl _change_char
                             17 	.globl _map_water
                             18 	.globl _init
                             19 	.globl _main
                             20 	.globl _timers
                             21 	.globl _performantDelay
                             22 	.globl _item3
                             23 	.globl _item2
                             24 	.globl _item1
                             25 	.globl _key
                             26 	.globl _player
                             27 	.globl _horse
                             28 	.globl _cat
                             29 	.globl _dog2
                             30 	.globl _dog1
                             31 	.globl _bunny
                             32 	.globl _map
                             33 	.globl _current_map
                             34 	.globl _input_timer
                             35 	.globl _characters_available
                             36 	.globl _timer
                             37 	.globl _running
                             38 	.globl _spritePalette
                             39 	.globl _sprites_park
                             40 	.globl _MapTest
                             41 	.globl _Map10
                             42 	.globl _Map9
                             43 	.globl _Map8
                             44 	.globl _Map7
                             45 	.globl _Map6
                             46 	.globl _Map5
                             47 	.globl _Map4
                             48 	.globl _Map3
                             49 	.globl _Map2
                             50 	.globl _Map1
                             51 	.globl _Characters
                             52 	.globl _map_loop
                             53 	.globl _map_init
                             54 	.globl _got_key
                             55 	.globl _got_door
                             56 	.globl _is_ded
                             57 	.globl __get_next_map_position
                             58 	.globl _dog1_power_apply
                             59 	.globl __get_map_position_from_xy
                             60 	.globl _player_input
                             61 	.globl _can_move_to_map_pos
                             62 	.globl _can_move
                             63 	.globl _move_character
                             64 	.globl _set_character_sprite
                             65 ;--------------------------------------------------------
                             66 ; special function registers
                             67 ;--------------------------------------------------------
                             68 ;--------------------------------------------------------
                             69 ; special function bits 
                             70 ;--------------------------------------------------------
                             71 ;--------------------------------------------------------
                             72 ; internal ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DATA
   0000                      75 _Characters::
   0000                      76 	.ds 496
   01F0                      77 _Map1::
   01F0                      78 	.ds 360
   0358                      79 _Map2::
   0358                      80 	.ds 360
   04C0                      81 _Map3::
   04C0                      82 	.ds 360
   0628                      83 _Map4::
   0628                      84 	.ds 360
   0790                      85 _Map5::
   0790                      86 	.ds 360
   08F8                      87 _Map6::
   08F8                      88 	.ds 360
   0A60                      89 _Map7::
   0A60                      90 	.ds 360
   0BC8                      91 _Map8::
   0BC8                      92 	.ds 360
   0D30                      93 _Map9::
   0D30                      94 	.ds 360
   0E98                      95 _Map10::
   0E98                      96 	.ds 360
   1000                      97 _MapTest::
   1000                      98 	.ds 360
   1168                      99 _sprites_park::
   1168                     100 	.ds 1936
   18F8                     101 _spritePalette::
   18F8                     102 	.ds 8
   1900                     103 _running::
   1900                     104 	.ds 1
   1901                     105 _timer::
   1901                     106 	.ds 1
   1902                     107 _characters_available::
   1902                     108 	.ds 1
   1903                     109 _input_timer::
   1903                     110 	.ds 1
   1904                     111 _current_map::
   1904                     112 	.ds 1
   1905                     113 _map::
   1905                     114 	.ds 360
   1A6D                     115 _bunny::
   1A6D                     116 	.ds 14
   1A7B                     117 _dog1::
   1A7B                     118 	.ds 14
   1A89                     119 _dog2::
   1A89                     120 	.ds 14
   1A97                     121 _cat::
   1A97                     122 	.ds 14
   1AA5                     123 _horse::
   1AA5                     124 	.ds 14
   1AB3                     125 _player::
   1AB3                     126 	.ds 2
   1AB5                     127 _key::
   1AB5                     128 	.ds 6
   1ABB                     129 _item1::
   1ABB                     130 	.ds 6
   1AC1                     131 _item2::
   1AC1                     132 	.ds 6
   1AC7                     133 _item3::
   1AC7                     134 	.ds 6
                            135 ;--------------------------------------------------------
                            136 ; overlayable items in internal ram 
                            137 ;--------------------------------------------------------
                            138 	.area _OVERLAY
                            139 ;--------------------------------------------------------
                            140 ; indirectly addressable internal ram data
                            141 ;--------------------------------------------------------
                            142 	.area _ISEG
                            143 ;--------------------------------------------------------
                            144 ; bit data
                            145 ;--------------------------------------------------------
                            146 	.area _BSEG
                            147 ;--------------------------------------------------------
                            148 ; external ram data
                            149 ;--------------------------------------------------------
                            150 	.area _XSEG
                            151 ;--------------------------------------------------------
                            152 ; global & static initialisations
                            153 ;--------------------------------------------------------
                            154 	.area _GSINIT
                            155 	.area _GSFINAL
                            156 	.area _GSINIT
                            157 ;	game.c 26
                            158 ;	game.c 1137
                            159 ;	genArrayInit
                            160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            161 	ld	hl,#_Characters
   0003 CD 00 00            162 	call	__initrleblock
   0006 2C                  163 	.db	44
   0007 09 00 00 09 00 09   164 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   165 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   166 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   167 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   168 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         169 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               170 	.db	-5,0x00
   0035 7F                  171 	.db	127
   0036 13 00 1E 0A 9E 00   172 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   173 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   174 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   175 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   176 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   177 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   178 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   179 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   180 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   181 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   182 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   183 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   184 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   185 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   186 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   187 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  188 	.db	127
   00B6 00 00 04 70 04 40   189 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   190 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   191 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   192 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   193 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   194 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   195 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   196 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   197 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   198 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   199 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   200 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   201 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   202 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   203 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   204 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  205 	.db	62
   0136 00 00 39 14 FF 00   206 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   207 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   208 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   209 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   210 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   211 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   212 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   213 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               214 	.db	-127,0x00
   0176 04                  215 	.db	4
   0177 00 00 00 00         216 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  217 	.db	0
                            218 ;	game.c 25
                            219 ;	game.c 1137
                            220 ;	genArrayInit
                            221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            222 	ld	hl,#_Map1
   017F CD 00 00            223 	call	__initrleblock
   0182 04                  224 	.db	4
   0183 01 01 01 01         225 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               226 	.db	-16,0x16
   0189 04                  227 	.db	4
   018A 01 0A 02 01         228 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               229 	.db	-15,0x09
   0190 0C                  230 	.db	12
   0191 16 01 01 02 15 15   231 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         232 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               233 	.db	-6,0x15
   019F 09                  234 	.db	9
   01A0 02 09 16 02 01 02   235 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  236 	.db	0x17
   01A9 FA 15               237 	.db	-6,0x15
   01AB 20                  238 	.db	32
   01AC 17 15 15 15 17 15   239 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   240 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   241 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   242 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               243 	.db	-5,0x02
   01CE 06                  244 	.db	6
   01CF 01 15 01 01 01 17   245 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               246 	.db	-5,0x0B
   01D7 3E                  247 	.db	62
   01D8 01 01 01 15 02 02   248 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   249 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   250 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   251 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   252 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   253 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   254 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   255 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               256 	.db	-6,0x15
   0218 0C                  257 	.db	12
   0219 02 02 15 02 02 02   258 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         259 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               260 	.db	-8,0x15
   0227 3C                  261 	.db	60
   0228 17 17 17 15 15 15   262 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   263 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   264 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   265 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   266 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   267 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   268 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         269 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               270 	.db	-7,0x15
   0266 07                  271 	.db	7
   0267 17 17 15 15 15 01   272 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               273 	.db	-10,0x15
   0270 28                  274 	.db	40
   0271 17 15 15 15 15 17   275 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   276 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   277 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   278 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   279 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               280 	.db	-5,0x0B
   029B 0F                  281 	.db	15
   029C 04 2E 00 02 01 02   282 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   283 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               284 	.db	-5,0x0B
   02AD 03                  285 	.db	3
   02AE 04 00 00            286 	.db	0x04, 0x00, 0x00
   02B1 00                  287 	.db	0
                            288 ;	game.c 25
                            289 ;	game.c 1137
                            290 ;	genArrayInit
                            291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            292 	ld	hl,#_Map2
   02B5 CD 00 00            293 	call	__initrleblock
   02B8 FB 00               294 	.db	-5,0x00
   02BA 01                  295 	.db	1
   02BB 2D                  296 	.db	0x2D
   02BC F9 00               297 	.db	-7,0x00
   02BE 04                  298 	.db	4
   02BF 2D 00 15 15         299 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               300 	.db	-6,0x00
   02C5 7F                  301 	.db	127
   02C6 0B 0B 00 0B 0B 0B   302 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   303 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   304 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   305 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   306 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   307 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   308 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   309 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   310 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   311 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   312 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   313 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   314 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   315 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   316 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   317 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  318 	.db	53
   0346 00 00 2D 00 00 00   319 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   320 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   321 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   322 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   323 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   324 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      325 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               326 	.db	-5,0x0B
   037D 03                  327 	.db	3
   037E 15 00 15            328 	.db	0x15, 0x00, 0x15
   0381 FB 0B               329 	.db	-5,0x0B
   0383 37                  330 	.db	55
   0384 15 15 0B 15 15 00   331 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   332 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   333 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   334 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   335 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   336 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   337 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               338 	.db	-5,0x0B
   03BD 09                  339 	.db	9
   03BE 15 15 0B 15 15 00   340 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  341 	.db	0x15
   03C7 F6 0B               342 	.db	-10,0x0B
   03C9 07                  343 	.db	7
   03CA 15 15 15 0B 15 15   344 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               345 	.db	-16,0x15
   03D3 09                  346 	.db	9
   03D4 00 15 15 00 00 00   347 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  348 	.db	0x15
   03DD F9 00               349 	.db	-7,0x00
   03DF 09                  350 	.db	9
   03E0 15 15 15 00 00 15   351 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  352 	.db	0x15
   03E9 FB 00               353 	.db	-5,0x00
   03EB FB 15               354 	.db	-5,0x15
   03ED FB 00               355 	.db	-5,0x00
   03EF 02                  356 	.db	2
   03F0 15 15               357 	.db	0x15, 0x15
   03F2 00                  358 	.db	0
                            359 ;	game.c 25
                            360 ;	game.c 1137
                            361 ;	genArrayInit
                            362 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            363 	ld	hl,#_Map3
   03F6 CD 00 00            364 	call	__initrleblock
   03F9 F2 01               365 	.db	-14,0x01
   03FB 03                  366 	.db	3
   03FC 2D 0B 0B            367 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               368 	.db	-5,0x01
   0401 02                  369 	.db	2
   0402 17 17               370 	.db	0x17, 0x17
   0404 FA 15               371 	.db	-6,0x15
   0406 0E                  372 	.db	14
   0407 17 17 15 15 0B 15   373 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   374 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               375 	.db	-5,0x01
   0417 08                  376 	.db	8
   0418 29 01 01 01 2D 01   377 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               378 	.db	-5,0x01
   0422 7F                  379 	.db	127
   0423 15 15 2D 15 15 15   380 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   381 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   382 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   383 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   384 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   385 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   386 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   387 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   388 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   389 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   390 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   391 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   392 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   393 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   394 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   395 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  396 	.db	61
   04A3 01 15 17 15 15 01   397 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   398 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   399 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   400 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   401 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   402 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   403 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      404 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               405 	.db	-5,0x01
   04E2 0B                  406 	.db	11
   04E3 15 15 01 15 2D 01   407 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            408 	.db	0x15, 0x15, 0x0B
   04EE FB 15               409 	.db	-5,0x15
   04F0 59                  410 	.db	89
   04F1 17 15 15 17 15 15   411 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   412 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   413 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   414 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   415 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   416 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   417 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   418 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   419 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   420 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   421 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  422 	.db	0x17
   054A 00                  423 	.db	0
                            424 ;	game.c 25
                            425 ;	game.c 1137
                            426 ;	genArrayInit
                            427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            428 	ld	hl,#_Map4
   054E CD 00 00            429 	call	__initrleblock
   0551 06                  430 	.db	6
   0552 00 00 0A 0A 15 15   431 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               432 	.db	-5,0x0B
   055A 01                  433 	.db	1
   055B 15                  434 	.db	0x15
   055C FA 0B               435 	.db	-6,0x0B
   055E 25                  436 	.db	37
   055F 15 15 00 0A 2D 06   437 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   438 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   439 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   440 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      441 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               442 	.db	-5,0x0B
   0586 08                  443 	.db	8
   0587 0A 07 0B 0B 15 0B   444 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               445 	.db	-5,0x0B
   0591 01                  446 	.db	1
   0592 15                  447 	.db	0x15
   0593 F6 0B               448 	.db	-10,0x0B
   0595 42                  449 	.db	66
   0596 00 2D 0B 01 00 0B   450 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   451 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   452 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   453 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   454 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   455 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   456 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   457 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               458 	.db	0x15, 0x00
   05D8 F9 0B               459 	.db	-7,0x0B
   05DA 43                  460 	.db	67
   05DB 15 0B 0B 00 0B 15   461 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   462 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   463 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   464 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   465 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   466 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   467 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   468 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            469 	.db	0x15, 0x0B, 0x15
   061E F9 0B               470 	.db	-7,0x0B
   0620 16                  471 	.db	22
   0621 15 15 0B 0B 0B 0B   472 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   473 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   474 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               475 	.db	-5,0x0B
   0639 66                  476 	.db	102
   063A 15 0A 07 15 00 02   477 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   478 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   479 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   480 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   481 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   482 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   483 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   484 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   485 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   486 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   487 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   488 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   489 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  490 	.db	0
                            491 ;	game.c 25
                            492 ;	game.c 1137
                            493 ;	genArrayInit
                            494 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            495 	ld	hl,#_Map5
   06A4 CD 00 00            496 	call	__initrleblock
   06A7 F2 01               497 	.db	-14,0x01
   06A9 03                  498 	.db	3
   06AA 2D 0B 0B            499 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               500 	.db	-5,0x01
   06AF 02                  501 	.db	2
   06B0 17 17               502 	.db	0x17, 0x17
   06B2 FA 15               503 	.db	-6,0x15
   06B4 07                  504 	.db	7
   06B5 17 17 15 15 0B 15   505 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               506 	.db	-5,0x01
   06BE 02                  507 	.db	2
   06BF 17 15               508 	.db	0x17, 0x15
   06C1 FB 01               509 	.db	-5,0x01
   06C3 7F                  510 	.db	127
   06C4 29 01 01 01 2D 01   511 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   512 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   513 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   514 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   515 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   516 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   517 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   518 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   519 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   520 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   521 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   522 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   523 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   524 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   525 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   526 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  527 	.db	74
   0744 01 2D 01 01 01 15   528 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   529 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   530 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   531 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   532 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   533 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   534 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   535 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   536 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               537 	.db	0x01, 0x29
   078E FB 01               538 	.db	-5,0x01
   0790 0B                  539 	.db	11
   0791 15 15 01 15 2D 01   540 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            541 	.db	0x15, 0x15, 0x0B
   079C FB 15               542 	.db	-5,0x15
   079E 59                  543 	.db	89
   079F 17 15 15 17 15 15   544 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   545 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   546 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   547 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   548 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   549 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   550 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   551 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   552 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   553 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   554 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  555 	.db	0x17
   07F8 00                  556 	.db	0
                            557 ;	game.c 25
                            558 ;	game.c 1137
                            559 ;	genArrayInit
                            560 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            561 	ld	hl,#_Map6
   07FC CD 00 00            562 	call	__initrleblock
   07FF BF 00               563 	.db	-65,0x00
   0801 02                  564 	.db	2
   0802 0C 0C               565 	.db	0x0C, 0x0C
   0804 EE 00               566 	.db	-18,0x00
   0806 02                  567 	.db	2
   0807 0C 0C               568 	.db	0x0C, 0x0C
   0809 81 00               569 	.db	-127,0x00
   080B 81 00               570 	.db	-127,0x00
   080D ED 00               571 	.db	-19,0x00
   080F 00                  572 	.db	0
                            573 ;	game.c 25
                            574 ;	game.c 1137
                            575 ;	genArrayInit
                            576 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            577 	ld	hl,#_Map7
   0813 CD 00 00            578 	call	__initrleblock
   0816 BF 00               579 	.db	-65,0x00
   0818 02                  580 	.db	2
   0819 0C 0C               581 	.db	0x0C, 0x0C
   081B EE 00               582 	.db	-18,0x00
   081D 02                  583 	.db	2
   081E 0C 0C               584 	.db	0x0C, 0x0C
   0820 81 00               585 	.db	-127,0x00
   0822 81 00               586 	.db	-127,0x00
   0824 ED 00               587 	.db	-19,0x00
   0826 00                  588 	.db	0
                            589 ;	game.c 25
                            590 ;	game.c 1137
                            591 ;	genArrayInit
                            592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            593 	ld	hl,#_Map8
   082A CD 00 00            594 	call	__initrleblock
   082D BF 00               595 	.db	-65,0x00
   082F 02                  596 	.db	2
   0830 0C 0C               597 	.db	0x0C, 0x0C
   0832 EE 00               598 	.db	-18,0x00
   0834 02                  599 	.db	2
   0835 0C 0C               600 	.db	0x0C, 0x0C
   0837 81 00               601 	.db	-127,0x00
   0839 81 00               602 	.db	-127,0x00
   083B ED 00               603 	.db	-19,0x00
   083D 00                  604 	.db	0
                            605 ;	game.c 25
                            606 ;	game.c 1137
                            607 ;	genArrayInit
                            608 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            609 	ld	hl,#_Map9
   0841 CD 00 00            610 	call	__initrleblock
   0844 BF 00               611 	.db	-65,0x00
   0846 02                  612 	.db	2
   0847 0C 0C               613 	.db	0x0C, 0x0C
   0849 EE 00               614 	.db	-18,0x00
   084B 02                  615 	.db	2
   084C 0C 0C               616 	.db	0x0C, 0x0C
   084E 81 00               617 	.db	-127,0x00
   0850 81 00               618 	.db	-127,0x00
   0852 ED 00               619 	.db	-19,0x00
   0854 00                  620 	.db	0
                            621 ;	game.c 25
                            622 ;	game.c 1137
                            623 ;	genArrayInit
                            624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            625 	ld	hl,#_Map10
   0858 CD 00 00            626 	call	__initrleblock
   085B BF 00               627 	.db	-65,0x00
   085D 02                  628 	.db	2
   085E 0C 0C               629 	.db	0x0C, 0x0C
   0860 EE 00               630 	.db	-18,0x00
   0862 02                  631 	.db	2
   0863 0C 0C               632 	.db	0x0C, 0x0C
   0865 81 00               633 	.db	-127,0x00
   0867 81 00               634 	.db	-127,0x00
   0869 ED 00               635 	.db	-19,0x00
   086B 00                  636 	.db	0
                            637 ;	game.c 25
                            638 ;	game.c 1137
                            639 ;	genArrayInit
                            640 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            641 	ld	hl,#_MapTest
   086F CD 00 00            642 	call	__initrleblock
   0872 E8 00               643 	.db	-24,0x00
   0874 06                  644 	.db	6
   0875 47 4A 59 46 00 5F   645 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087B F4 00               646 	.db	-12,0x00
   087D 02                  647 	.db	2
   087E 2D 2D               648 	.db	0x2D, 0x2D
   0880 EE 00               649 	.db	-18,0x00
   0882 39                  650 	.db	57
   0883 0D 0D 2D 00 00 00   651 	.db	0x0D, 0x0D, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x4B
        00 4B
   088B 46 58 4A 00 5F 00   652 	.db	0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62, 0x00
        62 00
   0893 65 00 00 00 0D 0E   653 	.db	0x65, 0x00, 0x00, 0x00, 0x0D, 0x0E, 0x0D, 0x0D
        0D 0D
   089B 0D 2D 00 4B 46 58   654 	.db	0x0D, 0x2D, 0x00, 0x4B, 0x46, 0x58, 0x4A, 0x00
        4A 00
   08A3 60 00 62 00 66 00   655 	.db	0x60, 0x00, 0x62, 0x00, 0x66, 0x00, 0x00, 0x00
        00 00
   08AB 0D 0D 00 00 0F 00   656 	.db	0x0D, 0x0D, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x4B
        00 4B
   08B3 46 58 4A 00 5C 00   657 	.db	0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62, 0x00
        62 00
   08BB 67                  658 	.db	0x67
   08BC F9 00               659 	.db	-7,0x00
   08BE 01                  660 	.db	1
   08BF 10                  661 	.db	0x10
   08C0 F5 00               662 	.db	-11,0x00
   08C2 01                  663 	.db	1
   08C3 68                  664 	.db	0x68
   08C4 EB 00               665 	.db	-21,0x00
   08C6 0A                  666 	.db	10
   08C7 46 62 55 54 49 4A   667 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08CF 49 54               668 	.db	0x49, 0x54
   08D1 F4 00               669 	.db	-12,0x00
   08D3 0A                  670 	.db	10
   08D4 55 4A 57 58 54 53   671 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08DC 4A 52               672 	.db	0x4A, 0x52
   08DE FB 00               673 	.db	-5,0x00
   08E0 01                  674 	.db	1
   08E1 2E                  675 	.db	0x2E
   08E2 EF 00               676 	.db	-17,0x00
   08E4 0C                  677 	.db	12
   08E5 2D 00 00 00 00 47   678 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08ED 57 54 48 46         679 	.db	0x57, 0x54, 0x48, 0x46
   08F1 F8 00               680 	.db	-8,0x00
   08F3 18                  681 	.db	24
   08F4 2D 00 0B 0B 00 00   682 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08FC 4A 57 58 54 53 46   683 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   0904 52 00 00 00 2D 00   684 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   090C F0 00               685 	.db	-16,0x00
   090E 0B                  686 	.db	11
   090F 2D 00 0D 0D 00 32   687 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   0917 5A 51 46            688 	.db	0x5A, 0x51, 0x46
   091A F7 00               689 	.db	-9,0x00
   091C 0E                  690 	.db	14
   091D 2D 00 0E 0E 00 33   691 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   0925 52 55 5A 57 57 46   692 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   092B FA 00               693 	.db	-6,0x00
   092D 0D                  694 	.db	13
   092E 2D 00 29 29 00 00   695 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   0936 51 54 48 54 58      696 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   093B E0 00               697 	.db	-32,0x00
   093D 00                  698 	.db	0
                            699 ;	game.c 26
                            700 ;	game.c 1137
                            701 ;	genArrayInit
                            702 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   093E 21 68 11            703 	ld	hl,#_sprites_park
   0941 CD 00 00            704 	call	__initrleblock
   0944 EC 00               705 	.db	-20,0x00
   0946 09                  706 	.db	9
   0947 10 00 00 00 02 00   707 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   094F 20                  708 	.db	0x20
   0950 F7 00               709 	.db	-9,0x00
   0952 01                  710 	.db	1
   0953 10                  711 	.db	0x10
   0954 F7 00               712 	.db	-9,0x00
   0956 21                  713 	.db	33
   0957 94 08 00 00 42 00   714 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   095F 00 80 25 00 50 00   715 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   0967 00 00 90 00 00 00   716 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   096F 80 00 00 10 80 00   717 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   0977 5A                  718 	.db	0x5A
   0978 FB 00               719 	.db	-5,0x00
   097A 05                  720 	.db	5
   097B 02 20 00 00 08      721 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0980 F9 00               722 	.db	-7,0x00
   0982 0B                  723 	.db	11
   0983 01 00 00 08 01 00   724 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   098B 00 00 09            725 	.db	0x00, 0x00, 0x09
   098E F9 00               726 	.db	-7,0x00
   0990 4C                  727 	.db	76
   0991 10 08 00 00 40 04   728 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   0999 00 00 5A 00 7F 00   729 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   09A1 80 00 80 00 80 00   730 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   09A9 80 00 80 00 7E 00   731 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   09B1 81 00 81 00 81 00   732 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   09B9 81 00 7E 00 00 00   733 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09C1 50 00 20 00 00 00   734 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09C9 0A 00 04 00 FF 00   735 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09D1 AA 00 FF 00 FF 00   736 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09D9 55 00 FF 00         737 	.db	0x55, 0x00, 0xFF, 0x00
   09DD EF FF               738 	.db	-17,0xFF
   09DF 4C                  739 	.db	76
   09E0 00 DD 00 BB 00 F7   740 	.db	0x00, 0xDD, 0x00, 0xBB, 0x00, 0xF7, 0x00, 0xFF
        00 FF
   09E8 00 EE 00 DD 00 FF   741 	.db	0x00, 0xEE, 0x00, 0xDD, 0x00, 0xFF, 0x00, 0xAD
        00 AD
   09F0 00 5C 00 DB 00 29   742 	.db	0x00, 0x5C, 0x00, 0xDB, 0x00, 0x29, 0x00, 0xF6
        00 F6
   09F8 00 49 00 BA 00 D6   743 	.db	0x00, 0x49, 0x00, 0xBA, 0x00, 0xD6, 0x00, 0xFF
        00 FF
   0A00 7E F3 8D C1 BF C1   744 	.db	0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81
        BF 81
   0A08 FF 81 FF 81 FF FF   745 	.db	0xFF, 0x81, 0xFF, 0x81, 0xFF, 0xFF, 0x7E, 0xFF
        7E FF
   0A10 7E F3 8D C1 BF C1   746 	.db	0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81
        BF 81
   0A18 FF 81 FF 81 FF FF   747 	.db	0xFF, 0x81, 0xFF, 0x81, 0xFF, 0xFF, 0x7E, 0x00
        7E 00
   0A20 00 42 00 24 00 18   748 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0A28 00 24 00 42         749 	.db	0x00, 0x24, 0x00, 0x42
   0A2C FB 00               750 	.db	-5,0x00
   0A2E 0B                  751 	.db	11
   0A2F 42 00 24 00 18 00   752 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A37 24 00 42            753 	.db	0x24, 0x00, 0x42
   0A3A EB 00               754 	.db	-21,0x00
   0A3C 4B                  755 	.db	75
   0A3D 42 00 24 00 18 00   756 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A45 24 00 42 00 00 00   757 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A4D 6E 10 FF 00 BF 40   758 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A55 76 08 00 3C 00 3C   759 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A5D 80 7F 80 7F 80 7F   760 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A65 80 7F 80 7F 00 FF   761 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A6D 7E 00 DF 20 FF 00   762 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A75 7E 00 18 24 00 3C   763 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A7D 42 00 24 00 18 00   764 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A85 24 00 42            765 	.db	0x24, 0x00, 0x42
   0A88 FB 00               766 	.db	-5,0x00
   0A8A 0B                  767 	.db	11
   0A8B 42 00 24 00 18 00   768 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A93 24 00 42            769 	.db	0x24, 0x00, 0x42
   0A96 FB 00               770 	.db	-5,0x00
   0A98 0B                  771 	.db	11
   0A99 42 00 24 00 18 00   772 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AA1 24 00 42            773 	.db	0x24, 0x00, 0x42
   0AA4 FB 00               774 	.db	-5,0x00
   0AA6 0B                  775 	.db	11
   0AA7 42 00 24 00 18 00   776 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AAF 24 00 42            777 	.db	0x24, 0x00, 0x42
   0AB2 FB 00               778 	.db	-5,0x00
   0AB4 0B                  779 	.db	11
   0AB5 42 00 24 00 18 00   780 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0ABD 24 00 42            781 	.db	0x24, 0x00, 0x42
   0AC0 FB 00               782 	.db	-5,0x00
   0AC2 0B                  783 	.db	11
   0AC3 42 00 24 00 18 00   784 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0ACB 24 00 42            785 	.db	0x24, 0x00, 0x42
   0ACE FB 00               786 	.db	-5,0x00
   0AD0 0B                  787 	.db	11
   0AD1 42 00 24 00 18 00   788 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD9 24 00 42            789 	.db	0x24, 0x00, 0x42
   0ADC FB 00               790 	.db	-5,0x00
   0ADE 0B                  791 	.db	11
   0ADF 42 00 24 00 18 00   792 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AE7 24 00 42            793 	.db	0x24, 0x00, 0x42
   0AEA FB 00               794 	.db	-5,0x00
   0AEC 0B                  795 	.db	11
   0AED 42 00 24 00 18 00   796 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AF5 24 00 42            797 	.db	0x24, 0x00, 0x42
   0AF8 EB 00               798 	.db	-21,0x00
   0AFA 0B                  799 	.db	11
   0AFB 42 00 24 00 18 00   800 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B03 24 00 42            801 	.db	0x24, 0x00, 0x42
   0B06 FB 00               802 	.db	-5,0x00
   0B08 0B                  803 	.db	11
   0B09 42 00 24 00 18 00   804 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B11 24 00 42            805 	.db	0x24, 0x00, 0x42
   0B14 FB 00               806 	.db	-5,0x00
   0B16 0B                  807 	.db	11
   0B17 42 00 24 00 18 00   808 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B1F 24 00 42            809 	.db	0x24, 0x00, 0x42
   0B22 FB 00               810 	.db	-5,0x00
   0B24 0B                  811 	.db	11
   0B25 42 00 24 00 18 00   812 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B2D 24 00 42            813 	.db	0x24, 0x00, 0x42
   0B30 FB 00               814 	.db	-5,0x00
   0B32 0B                  815 	.db	11
   0B33 42 00 24 00 18 00   816 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B3B 24 00 42            817 	.db	0x24, 0x00, 0x42
   0B3E FB 00               818 	.db	-5,0x00
   0B40 0B                  819 	.db	11
   0B41 42 00 24 00 18 00   820 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B49 24 00 42            821 	.db	0x24, 0x00, 0x42
   0B4C FB 00               822 	.db	-5,0x00
   0B4E 7F                  823 	.db	127
   0B4F 42 00 24 00 18 00   824 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B57 24 00 42 00 00 00   825 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B5F C7 C7 BB BB BB BB   826 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B67 D7 D7 DB DB 42 C3   827 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B6F FF 00 C7 00 C7 00   828 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B77 EF 00 E7 00 FF 00   829 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B7F 76 00 FF 00 BF 00   830 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B87 7E 00 00 3C 00 3C   831 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B8F 42 7E 81 FF 81 FF   832 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B97 81 FF 81 FF 81 FF   833 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B9F F3 8D C1 BF C1 BF   834 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0BA7 81 FF 81 FF 7E 7E   835 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0BAF 04 02 01 09 09 F9   836 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0BB7 06 06 00 00 00 00   837 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BBF AA 00 55 00 AA 00   838 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BC7 AA 00 55 00 AA 00   839 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BCE 0F                  840 	.db	15
   0BCF AA AA 55 55 AA AA   841 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BD7 AA AA 55 55 AA AA   842 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55
        55
   0BDE F0 00               843 	.db	-16,0x00
   0BE0 4D                  844 	.db	77
   0BE1 09 00 00 09 00 09   845 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   0BE9 CA 05 FF 00 3F 00   846 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0BF1 00 13 00 1E 0A 9E   847 	.db	0x00, 0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F
        00 9F
   0BF9 02 FF 00 FF 00 7E   848 	.db	0x02, 0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A
        00 4A
   0C01 94 00 9C 00 9E 0A   849 	.db	0x94, 0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01
        FF 01
   0C09 FE 00 7C 00 4A 00   850 	.db	0xFE, 0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00
        49 00
   0C11 89 89 4F 4F 4F 4A   851 	.db	0x89, 0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F
        8F 8F
   0C19 9F 9F 7F 7F 7F 7F   852 	.db	0x9F, 0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45
        45 45
   0C21 00 00 42 00 24 00   853 	.db	0x00, 0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00
        18 00
   0C29 18 00 24 00 42      854 	.db	0x18, 0x00, 0x24, 0x00, 0x42
   0C2E FB 00               855 	.db	-5,0x00
   0C30 0B                  856 	.db	11
   0C31 42 00 24 00 18 00   857 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C39 24 00 42            858 	.db	0x24, 0x00, 0x42
   0C3C FB 00               859 	.db	-5,0x00
   0C3E 0B                  860 	.db	11
   0C3F 42 00 24 00 18 00   861 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C47 24 00 42            862 	.db	0x24, 0x00, 0x42
   0C4A FB 00               863 	.db	-5,0x00
   0C4C 0B                  864 	.db	11
   0C4D 42 00 24 00 18 00   865 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C55 24 00 42            866 	.db	0x24, 0x00, 0x42
   0C58 FB 00               867 	.db	-5,0x00
   0C5A 0B                  868 	.db	11
   0C5B 42 00 24 00 18 00   869 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C63 24 00 42            870 	.db	0x24, 0x00, 0x42
   0C66 FB 00               871 	.db	-5,0x00
   0C68 0B                  872 	.db	11
   0C69 42 00 24 00 18 00   873 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C71 24 00 42            874 	.db	0x24, 0x00, 0x42
   0C74 FB 00               875 	.db	-5,0x00
   0C76 0B                  876 	.db	11
   0C77 42 00 24 00 18 00   877 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C7F 24 00 42            878 	.db	0x24, 0x00, 0x42
   0C82 FB 00               879 	.db	-5,0x00
   0C84 0B                  880 	.db	11
   0C85 42 00 24 00 18 00   881 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C8D 24 00 42            882 	.db	0x24, 0x00, 0x42
   0C90 FB 00               883 	.db	-5,0x00
   0C92 0B                  884 	.db	11
   0C93 42 00 24 00 18 00   885 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C9B 24 00 42            886 	.db	0x24, 0x00, 0x42
   0C9E FB 00               887 	.db	-5,0x00
   0CA0 0B                  888 	.db	11
   0CA1 42 00 24 00 18 00   889 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA9 24 00 42            890 	.db	0x24, 0x00, 0x42
   0CAC EB 00               891 	.db	-21,0x00
   0CAE 0B                  892 	.db	11
   0CAF 42 00 24 00 18 00   893 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CB7 24 00 42            894 	.db	0x24, 0x00, 0x42
   0CBA FB 00               895 	.db	-5,0x00
   0CBC 0B                  896 	.db	11
   0CBD 42 00 24 00 18 00   897 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CC5 24 00 42            898 	.db	0x24, 0x00, 0x42
   0CC8 FB 00               899 	.db	-5,0x00
   0CCA 0B                  900 	.db	11
   0CCB 42 00 24 00 18 00   901 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CD3 24 00 42            902 	.db	0x24, 0x00, 0x42
   0CD6 FB 00               903 	.db	-5,0x00
   0CD8 0B                  904 	.db	11
   0CD9 42 00 24 00 18 00   905 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CE1 24 00 42            906 	.db	0x24, 0x00, 0x42
   0CE4 FB 00               907 	.db	-5,0x00
   0CE6 0B                  908 	.db	11
   0CE7 42 00 24 00 18 00   909 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CEF 24 00 42            910 	.db	0x24, 0x00, 0x42
   0CF2 FA 00               911 	.db	-6,0x00
   0CF4 7F                  912 	.db	127
   0CF5 38 00 44 00 44 00   913 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CFD 44 00 44 00 44 00   914 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0D05 78 00 44 00 44 00   915 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0D0D 44 00 44 00 78 00   916 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D15 1C 00 20 00 40 00   917 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0D1D 40 00 20 00 1C 00   918 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D25 78 00 44 00 44 00   919 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D2D 44 00 44 00 78 00   920 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D35 7C 00 40 00 40 00   921 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D3D 40 00 40 00 7C 00   922 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D45 7C 00 40 00 40 00   923 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D4D 40 00 40 00 40 00   924 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D55 18 00 20 00 40 00   925 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D5D 42 00 24 00 18 00   926 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D65 44 00 44 00 44 00   927 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D6D 44 00 44 00 44 00   928 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D74 7F                  929 	.db	127
   0D75 00 10 00 00 00 10   930 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D7D 00 10 00 10 00 10   931 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D85 00 3E 00 08 00 08   932 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D8D 00 08 00 48 00 30   933 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D95 00 44 00 48 00 50   934 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D9D 00 50 00 48 00 44   935 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0DA5 00 40 00 40 00 40   936 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0DAD 00 40 00 40 00 78   937 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0DB5 00 44 00 6C 00 54   938 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0DBD 00 44 00 44 00 44   939 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DC5 00 44 00 64 00 64   940 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DCD 00 54 00 4C 00 4C   941 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DD5 00 38 00 44 00 44   942 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DDD 00 44 00 44 00 38   943 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DE5 00 78 00 44 00 44   944 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DED 00 40 00 40 00 40   945 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DF4 7F                  946 	.db	127
   0DF5 00 00 38 00 44 00   947 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DFD 44 00 54 00 38 00   948 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0E05 00 00 78 00 44 00   949 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E0D 78 00 50 00 48 00   950 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0E15 00 00 38 00 40 00   951 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0E1D 38 00 04 00 04 00   952 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E25 00 00 7C 00 10 00   953 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E2D 10 00 10 00 10 00   954 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E35 00 00 44 00 44 00   955 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E3D 44 00 44 00 44 00   956 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E45 00 00 41 00 41 00   957 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E4D 49 00 2A 00 2A 00   958 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E55 00 00 44 00 44 00   959 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E5D 10 00 28 00 44 00   960 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E65 00 00 44 00 28 00   961 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E6D 10 00 10 00 10 00   962 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E74 7F                  963 	.db	127
   0E75 00 00 00 7C 00 04   964 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E7D 00 10 00 20 00 40   965 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E85 00 08 00 18 00 28   966 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E8D 00 08 00 08 00 08   967 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E95 00 00 00 38 00 44   968 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E9D 00 08 00 10 00 20   969 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0EA5 00 00 00 70 00 08   970 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0EAD 00 30 00 08 00 08   971 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0EB5 00 00 00 10 00 08   972 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0EBD 00 7E 00 04 00 08   973 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EC5 00 00 00 44 00 44   974 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0ECD 00 28 00 10 00 10   975 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0ED5 3C 3C 42 7E 81 FF   976 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EDD A1 FF 81 FF 81 FF   977 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EE5 3C 3C 42 7E 81 FF   978 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EED A1 FF 81 FF 81 FF   979 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0EF4 7F                  980 	.db	127
   0EF5 FF 3C 3C 42 7E 81   981 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EFD FF A1 FF 81 FF 81   982 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F05 FF 3C 3C 42 7E 81   983 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F0D FF A1 FF 81 FF 81   984 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F15 FF 3C 3C 42 7E 81   985 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F1D FF A1 FF 81 FF 81   986 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F25 FF 3C 3C 42 7E 81   987 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F2D FF A1 FF 81 FF 81   988 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F35 FF 3C 3C 42 7E 81   989 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F3D FF A1 FF 81 FF 81   990 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F45 FF 3C 3C 42 7E 81   991 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F4D FF A1 FF 81 FF 81   992 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F55 FF 3C 3C 42 7E 81   993 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F5D FF A1 FF 81 FF 81   994 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F65 FF 3C 3C 42 7E 81   995 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F6D FF A1 FF 81 FF 81   996 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F74 7F                  997 	.db	127
   0F75 81 FF 3C 3C 42 7E   998 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F7D 81 FF A1 FF 81 FF   999 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F85 81 FF 3C 3C 42 7E  1000 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F8D 81 FF A1 FF 81 FF  1001 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F95 81 FF 3C 3C 42 7E  1002 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F9D 81 FF A1 FF 81 FF  1003 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FA5 81 FF 3C 3C 42 7E  1004 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FAD 81 FF A1 FF 81 FF  1005 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FB5 81 FF 3C 3C 42 7E  1006 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FBD 81 FF A1 FF 81 FF  1007 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FC5 81 FF 3C 3C 42 7E  1008 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FCD 81 FF A1 FF 81 FF  1009 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FD5 81 FF 3C 3C 42 7E  1010 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FDD 81 FF A1 FF 81 FF  1011 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FE5 81 FF 3C 3C 42 7E  1012 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FED 81 FF A1 FF 81 FF  1013 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FF4 33                 1014 	.db	51
   0FF5 FF 81 FF 3C 3C 42  1015 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FFD FF 81 FF A1 FF 81  1016 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1005 FF 81 FF 3C 3C 42  1017 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   100D FF 81 FF A1 FF 81  1018 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1015 FF 81 FF 3C 3C 42  1019 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   101D FF 81 FF A1 FF 81  1020 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1025 FF 81 FF           1021 	.db	0xFF, 0x81, 0xFF
   1028 00                 1022 	.db	0
                           1023 ;	game.c 44
                           1024 ;	game.c 1137
                           1025 ;	genArrayInit
                           1026 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1029 21 F8 18           1027 	ld	hl,#_spritePalette
   102C CD 00 00           1028 	call	__initrleblock
   102F 08                 1029 	.db	8
   1030 DC 6B D2 3A 87 29  1030 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   1038 00                 1031 	.db	0
                           1032 ;--------------------------------------------------------
                           1033 ; Home
                           1034 ;--------------------------------------------------------
                           1035 	.area _HOME
                           1036 	.area _CODE
                           1037 ;--------------------------------------------------------
                           1038 ; code
                           1039 ;--------------------------------------------------------
                           1040 	.area _CODE
                           1041 ;	game.c 70
                           1042 ;	genLabel
                           1043 ;	genFunction
                           1044 ;	---------------------------------
                           1045 ; Function performantDelay
                           1046 ; ---------------------------------
   0000                    1047 ___performantDelay_start:
   0000                    1048 _performantDelay:
                           1049 	
                           1050 ;	game.c 72
                           1051 ;	genAssign
   0000 0E 00              1052 	ld	c,#0x00
                           1053 ;	genLabel
   0002                    1054 00101$:
                           1055 ;	genCmpEq
                           1056 ;	AOP_STK for 
                           1057 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1058 	lda	hl,2(sp)
   0004 7E                 1059 	ld	a,(hl)
   0005 B9                 1060 	cp	c
   0006 20 03              1061 	jr	nz,00109$
   0008 C3 15 00           1062 	jp	00105$
   000B                    1063 00109$:
                           1064 ;	game.c 73
                           1065 ;	genCall
                           1066 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1067 	push	bc
   000C CD 00 00           1068 	call	_wait_vbl_done
   000F E1                 1069 	pop	hl
   0010 4D                 1070 	ld	c,l
                           1071 ;	game.c 72
                           1072 ;	genPlus
                           1073 ;	genPlusIncr
                           1074 ; Removed redundent load
   0011 0C                 1075 	inc	c
                           1076 ;	genGoto
   0012 C3 02 00           1077 	jp	00101$
                           1078 ;	genLabel
   0015                    1079 00105$:
                           1080 ;	genEndFunction
                           1081 	
   0015 C9                 1082 	ret
   0016                    1083 ___performantDelay_end:
                           1084 ;	game.c 107
                           1085 ;	genLabel
                           1086 ;	genFunction
                           1087 ;	---------------------------------
                           1088 ; Function timers
                           1089 ; ---------------------------------
   0016                    1090 ___timers_start:
   0016                    1091 _timers:
                           1092 	
                           1093 ;	game.c 109
                           1094 ;	genCmpEq
                           1095 ;	AOP_HL for _input_timer
                           1096 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1097 	ld	hl,#_input_timer
   0019 7E                 1098 	ld	a,(hl)
   001A B7                 1099 	or	a,a
   001B CA 22 00           1100 	jp	z,00102$
   001E                    1101 00106$:
                           1102 ;	game.c 110
                           1103 ;	genMinus
                           1104 ;	AOP_HL for _input_timer
   001E 21 03 19           1105 	ld	hl,#_input_timer
   0021 35                 1106 	dec	(hl)
                           1107 ;	genLabel
   0022                    1108 00102$:
                           1109 ;	game.c 112
                           1110 ;	genPlus
                           1111 ;	AOP_HL for _timer
                           1112 ;	genPlusIncr
   0022 21 01 19           1113 	ld	hl,#_timer
   0025 34                 1114 	inc	(hl)
                           1115 ;	genLabel
   0026                    1116 00103$:
                           1117 ;	genEndFunction
                           1118 	
   0026 C9                 1119 	ret
   0027                    1120 ___timers_end:
                           1121 ;	game.c 116
                           1122 ;	genLabel
                           1123 ;	genFunction
                           1124 ;	---------------------------------
                           1125 ; Function main
                           1126 ; ---------------------------------
   0027                    1127 ___main_start:
   0027                    1128 _main:
                           1129 	
                           1130 ;	game.c 118
                           1131 ;	genCall
                           1132 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1133 	call	_init
                           1134 ;	game.c 119
                           1135 ;	genCall
                           1136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1137 	call	_map_init
                           1138 ;	game.c 121
                           1139 ;	genLabel
   002D                    1140 00101$:
                           1141 ;	genIfx
                           1142 ;	AOP_HL for _running
   002D AF                 1143 	xor	a,a
   002E 21 00 19           1144 	ld	hl,#_running
   0031 B6                 1145 	or	a,(hl)
   0032 CA 47 00           1146 	jp	z,00103$
                           1147 ;	game.c 123
                           1148 ;	genCall
                           1149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1150 	call	_timers
                           1151 ;	game.c 124
                           1152 ;	genCall
                           1153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1154 	call	_map_loop
                           1155 ;	game.c 125
                           1156 ;	genIpush
                           1157 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1158 	ld	a,#0x02
   003D F5                 1159 	push	af
   003E 33                 1160 	inc	sp
                           1161 ;	genCall
   003F CD 00 00           1162 	call	_performantDelay
   0042 E8 01              1163 	lda	sp,1(sp)
                           1164 ;	genGoto
   0044 C3 2D 00           1165 	jp	00101$
                           1166 ;	genLabel
   0047                    1167 00103$:
                           1168 ;	game.c 129
                           1169 ;	genIpush
                           1170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1171 	ld	hl,#__str_0
   004A E5                 1172 	push	hl
                           1173 ;	genCall
   004B CD 00 00           1174 	call	_printf
   004E E8 02              1175 	lda	sp,2(sp)
                           1176 ;	game.c 130
                           1177 ;	genLabel
   0050                    1178 00105$:
                           1179 ;	genGoto
   0050 C3 50 00           1180 	jp	00105$
                           1181 ;	genLabel
   0053                    1182 00107$:
                           1183 ;	genEndFunction
                           1184 	
   0053 C9                 1185 	ret
   0054                    1186 ___main_end:
   0054                    1187 __str_0:
   0054 54 68 65 20 65 6E  1188 	.ascii "The end"
        64
   005B 0A                 1189 	.db 0x0A
   005C 00                 1190 	.db 0x00
                           1191 ;	game.c 135
                           1192 ;	genLabel
                           1193 ;	genFunction
                           1194 ;	---------------------------------
                           1195 ; Function init
                           1196 ; ---------------------------------
   005D                    1197 ___init_start:
   005D                    1198 _init:
   005D E8 FD              1199 	lda	sp,-3(sp)
                           1200 ;	game.c 136
                           1201 ;	genAssign
                           1202 ;	AOP_HL for _current_map
   005F 21 04 19           1203 	ld	hl,#_current_map
   0062 36 C8              1204 	ld	(hl),#0xC8
                           1205 ;	game.c 137
                           1206 ;	genAssign
                           1207 ;	AOP_HL for _characters_available
   0064 21 02 19           1208 	ld	hl,#_characters_available
   0067 36 02              1209 	ld	(hl),#0x02
                           1210 ;	game.c 139
                           1211 ;	genCall
                           1212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1213 	call	_copy_map
                           1214 ;	game.c 140
                           1215 ;	genIpush
                           1216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1217 	ld	hl,#_sprites_park
   006F E5                 1218 	push	hl
                           1219 ;	genIpush
   0070 21 00 78           1220 	ld	hl,#0x7800
   0073 E5                 1221 	push	hl
                           1222 ;	genCall
   0074 CD 00 00           1223 	call	_set_bkg_data
   0077 E8 04              1224 	lda	sp,4(sp)
                           1225 ;	game.c 141
                           1226 ;	genIpush
                           1227 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1228 	ld	hl,#_map
   007C E5                 1229 	push	hl
                           1230 ;	genIpush
   007D 21 14 12           1231 	ld	hl,#0x1214
   0080 E5                 1232 	push	hl
                           1233 ;	genIpush
   0081 21 00 00           1234 	ld	hl,#0x0000
   0084 E5                 1235 	push	hl
                           1236 ;	genCall
   0085 CD 00 00           1237 	call	_set_bkg_tiles
   0088 E8 06              1238 	lda	sp,6(sp)
                           1239 ;	game.c 143
                           1240 ;	genIpush
                           1241 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1242 	ld	hl,#_Characters
   008D E5                 1243 	push	hl
                           1244 ;	genIpush
   008E 21 00 1E           1245 	ld	hl,#0x1E00
   0091 E5                 1246 	push	hl
                           1247 ;	genCall
   0092 CD 00 00           1248 	call	_set_sprite_data
   0095 E8 04              1249 	lda	sp,4(sp)
                           1250 ;	game.c 144
                           1251 ;	genIpush
                           1252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1253 	ld	hl,#_spritePalette
   009A E5                 1254 	push	hl
                           1255 ;	genIpush
   009B 21 00 04           1256 	ld	hl,#0x0400
   009E E5                 1257 	push	hl
                           1258 ;	genCall
   009F CD 00 00           1259 	call	_set_sprite_palette
   00A2 E8 04              1260 	lda	sp,4(sp)
                           1261 ;	game.c 148
                           1262 ;	genIpush
                           1263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1264 	ld	hl,#_spritePalette
   00A7 E5                 1265 	push	hl
                           1266 ;	genIpush
   00A8 21 00 03           1267 	ld	hl,#0x0300
   00AB E5                 1268 	push	hl
                           1269 ;	genCall
   00AC CD 00 00           1270 	call	_set_bkg_palette
   00AF E8 04              1271 	lda	sp,4(sp)
                           1272 ;	game.c 149
                           1273 ;	genIpush
                           1274 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1275 	ld	hl,#0x0000
   00B4 E5                 1276 	push	hl
                           1277 ;	genCall
   00B5 CD 00 00           1278 	call	_set_sprite_prop
   00B8 E8 02              1279 	lda	sp,2(sp)
                           1280 ;	game.c 154
                           1281 ;	genAssign
   00BA 01 47 FF           1282 	ld	bc,#0xFF47
                           1283 ;	genAssign (pointer)
   00BD 3E E4              1284 	ld	a,#0xE4
   00BF 02                 1285 	ld	(bc),a
                           1286 ;	game.c 156
                           1287 ;	genAssign
   00C0 01 40 FF           1288 	ld	bc,#0xFF40
                           1289 ;	genAssign
                           1290 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1291 	lda	hl,1(sp)
   00C5 36 40              1292 	ld	(hl),#0x40
   00C7 23                 1293 	inc	hl
   00C8 36 FF              1294 	ld	(hl),#0xFF
                           1295 ;	genPointerGet
                           1296 ;	AOP_STK for _init_sloc0_1_0
                           1297 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1298 	dec	hl
   00CB 5E                 1299 	ld	e,(hl)
   00CC 23                 1300 	inc	hl
   00CD 56                 1301 	ld	d,(hl)
   00CE 1A                 1302 	ld	a,(de)
   00CF 2B                 1303 	dec	hl
   00D0 2B                 1304 	dec	hl
                           1305 ;	genOr
                           1306 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1307 	ld      (hl),a
   00D2 7F                 1308 	ld      a,a
   00D3 F6 80              1309 	or	a,#0x80
                           1310 ;	genAssign (pointer)
   00D5 02                 1311 	ld	(bc),a
                           1312 ;	game.c 158
                           1313 ;	genAssign
   00D6 01 40 FF           1314 	ld	bc,#0xFF40
                           1315 ;	genAssign
                           1316 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1317 	inc	hl
   00DA 36 40              1318 	ld	(hl),#0x40
   00DC 23                 1319 	inc	hl
   00DD 36 FF              1320 	ld	(hl),#0xFF
                           1321 ;	genPointerGet
                           1322 ;	AOP_STK for _init_sloc0_1_0
                           1323 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1324 	dec	hl
   00E0 5E                 1325 	ld	e,(hl)
   00E1 23                 1326 	inc	hl
   00E2 56                 1327 	ld	d,(hl)
   00E3 1A                 1328 	ld	a,(de)
   00E4 2B                 1329 	dec	hl
   00E5 2B                 1330 	dec	hl
                           1331 ;	genOr
                           1332 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1333 	ld      (hl),a
   00E7 7F                 1334 	ld      a,a
   00E8 F6 01              1335 	or	a,#0x01
                           1336 ;	genAssign (pointer)
   00EA 02                 1337 	ld	(bc),a
                           1338 ;	game.c 160
                           1339 ;	genAssign
   00EB 01 40 FF           1340 	ld	bc,#0xFF40
                           1341 ;	genAssign
                           1342 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1343 	inc	hl
   00EF 36 40              1344 	ld	(hl),#0x40
   00F1 23                 1345 	inc	hl
   00F2 36 FF              1346 	ld	(hl),#0xFF
                           1347 ;	genPointerGet
                           1348 ;	AOP_STK for _init_sloc0_1_0
                           1349 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1350 	dec	hl
   00F5 5E                 1351 	ld	e,(hl)
   00F6 23                 1352 	inc	hl
   00F7 56                 1353 	ld	d,(hl)
   00F8 1A                 1354 	ld	a,(de)
   00F9 2B                 1355 	dec	hl
   00FA 2B                 1356 	dec	hl
                           1357 ;	genOr
                           1358 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1359 	ld      (hl),a
   00FC 7F                 1360 	ld      a,a
   00FD F6 02              1361 	or	a,#0x02
                           1362 ;	genAssign (pointer)
   00FF 02                 1363 	ld	(bc),a
                           1364 ;	game.c 162
                           1365 ;	genAssign
                           1366 ;	AOP_HL for _input_timer
   0100 21 03 19           1367 	ld	hl,#_input_timer
   0103 36 00              1368 	ld	(hl),#0x00
                           1369 ;	game.c 163
                           1370 ;	genAssign
                           1371 ;	AOP_HL for _running
   0105 21 00 19           1372 	ld	hl,#_running
   0108 36 01              1373 	ld	(hl),#0x01
                           1374 ;	game.c 164
                           1375 ;	genAssign
                           1376 ;	AOP_HL for _timer
   010A 21 01 19           1377 	ld	hl,#_timer
   010D 36 01              1378 	ld	(hl),#0x01
                           1379 ;	game.c 165
                           1380 ;	genAddrOf
                           1381 ;	AOP_HL for _player
   010F 11 6D 1A           1382 	ld	de,#_bunny
   0112 21 B3 1A           1383 	ld	hl,#_player
   0115 73                 1384 	ld	(hl),e
   0116 23                 1385 	inc	hl
   0117 72                 1386 	ld	(hl),d
                           1387 ;	genLabel
   0118                    1388 00101$:
                           1389 ;	genEndFunction
   0118 E8 03              1390 	lda	sp,3(sp)
   011A C9                 1391 	ret
   011B                    1392 ___init_end:
                           1393 ;	game.c 169
                           1394 ;	genLabel
                           1395 ;	genFunction
                           1396 ;	---------------------------------
                           1397 ; Function map_water
                           1398 ; ---------------------------------
   011B                    1399 ___map_water_start:
   011B                    1400 _map_water:
   011B E8 DC              1401 	lda	sp,-36(sp)
                           1402 ;	game.c 170
                           1403 ;	genAddrOf
   011D F8 14              1404 	lda	hl,20(sp)
   011F 4D                 1405 	ld	c,l
   0120 44                 1406 	ld	b,h
                           1407 ;	genAssign
                           1408 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1409 	lda	hl,2(sp)
   0123 71                 1410 	ld	(hl),c
   0124 23                 1411 	inc	hl
   0125 70                 1412 	ld	(hl),b
                           1413 ;	genArrayInit
                           1414 ;	AOP_STK for _map_water_sloc0_1_0
                           1415 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1416 	push	bc
   0127 2B                 1417 	dec	hl
   0128 2A                 1418 	ld	a,(hl+)
   0129 66                 1419 	ld	h,(hl)
   012A 6F                 1420 	ld	l,a
   012B CD 00 00           1421 	call	__initrleblock
   012E 10                 1422 	.db	16
   012F FF 00 DD 00 AA 00  1423 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1424 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1425 	.db	0
   0140 C1                 1426 	pop	bc
                           1427 ;	game.c 176
                           1428 ;	genAddrOf
                           1429 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1430 	lda	hl,4(sp)
   0143 7D                 1431 	ld	a,l
   0144 54                 1432 	ld	d,h
   0145 F8 02              1433 	lda	hl,2(sp)
   0147 22                 1434 	ld	(hl+),a
   0148 72                 1435 	ld	(hl),d
                           1436 ;	genAssign
                           1437 ;	AOP_STK for _map_water_sloc0_1_0
                           1438 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1439 	dec	hl
   014A 2A                 1440 	ld	a,(hl+)
   014B 5E                 1441 	ld	e,(hl)
   014C F8 00              1442 	lda	hl,0(sp)
   014E 22                 1443 	ld	(hl+),a
   014F 73                 1444 	ld	(hl),e
                           1445 ;	genArrayInit
                           1446 ;	AOP_STK for _map_water_sloc1_1_0
                           1447 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1448 	push	bc
   0151 2B                 1449 	dec	hl
   0152 2A                 1450 	ld	a,(hl+)
   0153 66                 1451 	ld	h,(hl)
   0154 6F                 1452 	ld	l,a
   0155 CD 00 00           1453 	call	__initrleblock
   0158 10                 1454 	.db	16
   0159 FF 00 BB 00 55 00  1455 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1456 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1457 	.db	0
   016A C1                 1458 	pop	bc
                           1459 ;	game.c 182
                           1460 ;	genIpush
                           1461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1462 	push	bc
   016C 3E 20              1463 	ld	a,#0x20
   016E F5                 1464 	push	af
   016F 33                 1465 	inc	sp
                           1466 ;	genIpush
                           1467 ;	AOP_HL for _timer
   0170 21 01 19           1468 	ld	hl,#_timer
   0173 7E                 1469 	ld	a,(hl)
   0174 F5                 1470 	push	af
   0175 33                 1471 	inc	sp
                           1472 ;	genCall
   0176 CD 00 00           1473 	call	__moduchar_rrx_s
                           1474 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1475 	lda	hl,4(sp)
   017B 73                 1476 	ld	(hl),e
   017C E8 02              1477 	lda	sp,2(sp)
   017E C1                 1478 	pop	bc
                           1479 ;	genCmpEq
                           1480 ;	AOP_STK for _map_water_sloc1_1_0
                           1481 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1482 	lda	hl,0(sp)
   0181 7E                 1483 	ld	a,(hl)
   0182 B7                 1484 	or	a,a
   0183 C2 C7 01           1485 	jp	nz,00106$
   0186 18 03              1486 	jr	00111$
   0188                    1487 00110$:
   0188 C3 C7 01           1488 	jp	00106$
   018B                    1489 00111$:
                           1490 ;	game.c 183
                           1491 ;	genIpush
                           1492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1493 	push	bc
   018C 3E 40              1494 	ld	a,#0x40
   018E F5                 1495 	push	af
   018F 33                 1496 	inc	sp
                           1497 ;	genIpush
                           1498 ;	AOP_HL for _timer
   0190 21 01 19           1499 	ld	hl,#_timer
   0193 7E                 1500 	ld	a,(hl)
   0194 F5                 1501 	push	af
   0195 33                 1502 	inc	sp
                           1503 ;	genCall
   0196 CD 00 00           1504 	call	__moduchar_rrx_s
                           1505 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1506 	lda	hl,4(sp)
   019B 73                 1507 	ld	(hl),e
   019C E8 02              1508 	lda	sp,2(sp)
   019E C1                 1509 	pop	bc
                           1510 ;	genCmpEq
                           1511 ;	AOP_STK for _map_water_sloc1_1_0
                           1512 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1513 	lda	hl,0(sp)
   01A1 7E                 1514 	ld	a,(hl)
   01A2 B7                 1515 	or	a,a
   01A3 C2 B8 01           1516 	jp	nz,00102$
   01A6 18 03              1517 	jr	00113$
   01A8                    1518 00112$:
   01A8 C3 B8 01           1519 	jp	00102$
   01AB                    1520 00113$:
                           1521 ;	game.c 184
                           1522 ;	genIpush
                           1523 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1524 	push	bc
                           1525 ;	genIpush
   01AC 21 0B 01           1526 	ld	hl,#0x010B
   01AF E5                 1527 	push	hl
                           1528 ;	genCall
   01B0 CD 00 00           1529 	call	_set_bkg_data
   01B3 E8 04              1530 	lda	sp,4(sp)
                           1531 ;	genGoto
   01B5 C3 C7 01           1532 	jp	00106$
                           1533 ;	genLabel
   01B8                    1534 00102$:
                           1535 ;	game.c 188
                           1536 ;	genIpush
                           1537 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1538 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1539 	lda	hl,2(sp)
   01BA 2A                 1540 	ld	a,(hl+)
   01BB 66                 1541 	ld	h,(hl)
   01BC 6F                 1542 	ld	l,a
   01BD E5                 1543 	push	hl
                           1544 ;	genIpush
   01BE 21 0B 01           1545 	ld	hl,#0x010B
   01C1 E5                 1546 	push	hl
                           1547 ;	genCall
   01C2 CD 00 00           1548 	call	_set_bkg_data
   01C5 E8 04              1549 	lda	sp,4(sp)
                           1550 ;	genLabel
   01C7                    1551 00106$:
                           1552 ;	genEndFunction
   01C7 E8 24              1553 	lda	sp,36(sp)
   01C9 C9                 1554 	ret
   01CA                    1555 ___map_water_end:
                           1556 ;	game.c 233
                           1557 ;	genLabel
                           1558 ;	genFunction
                           1559 ;	---------------------------------
                           1560 ; Function change_char
                           1561 ; ---------------------------------
   01CA                    1562 ___change_char_start:
   01CA                    1563 _change_char:
                           1564 	
                           1565 ;	game.c 235
                           1566 ;	genCmpEq
                           1567 ;	AOP_HL for _characters_available
                           1568 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1569 	ld	hl,#_characters_available
   01CD 7E                 1570 	ld	a,(hl)
   01CE FE 01              1571 	cp	a,#0x01
   01D0 C2 DE 01           1572 	jp	nz,00102$
   01D3 18 03              1573 	jr	00135$
   01D5                    1574 00134$:
   01D5 C3 DE 01           1575 	jp	00102$
   01D8                    1576 00135$:
                           1577 ;	game.c 236
                           1578 ;	genRet
   01D8 11 00 00           1579 	ld	de,#0x0000
   01DB C3 EE 02           1580 	jp	00121$
                           1581 ;	genLabel
   01DE                    1582 00102$:
                           1583 ;	game.c 239
                           1584 ;	genAssign
                           1585 ;	AOP_HL for _player
   01DE 21 B3 1A           1586 	ld	hl,#_player
   01E1 4E                 1587 	ld	c,(hl)
   01E2 23                 1588 	inc	hl
   01E3 46                 1589 	ld	b,(hl)
                           1590 ;	genPlus
                           1591 ;	genPlusIncr
   01E4 21 08 00           1592 	ld	hl,#0x0008
   01E7 09                 1593 	add	hl,bc
                           1594 ;	genAssign (pointer)
   01E8 36 00              1595 	ld	(hl),#0x00
                           1596 ;	game.c 241
                           1597 ;	genCmpEq
                           1598 ;	AOP_HL for _characters_available
                           1599 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1600 	ld	hl,#_characters_available
   01ED 7E                 1601 	ld	a,(hl)
   01EE FE 02              1602 	cp	a,#0x02
   01F0 C2 2B 02           1603 	jp	nz,00107$
   01F3 18 03              1604 	jr	00137$
   01F5                    1605 00136$:
   01F5 C3 2B 02           1606 	jp	00107$
   01F8                    1607 00137$:
                           1608 ;	game.c 242
                           1609 ;	genAssign
                           1610 ;	AOP_HL for _player
   01F8 21 B3 1A           1611 	ld	hl,#_player
   01FB 4E                 1612 	ld	c,(hl)
   01FC 23                 1613 	inc	hl
   01FD 46                 1614 	ld	b,(hl)
                           1615 ;	genPlus
                           1616 ;	genPlusIncr
                           1617 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1618 	ld	a,c
   01FF C6 0B              1619 	add	a,#0x0B
   0201 4F                 1620 	ld	c,a
   0202 78                 1621 	ld	a,b
   0203 CE 00              1622 	adc	a,#0x00
   0205 47                 1623 	ld	b,a
                           1624 ;	genPointerGet
   0206 0A                 1625 	ld	a,(bc)
                           1626 ;	genCmpEq
                           1627 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1628 	ld	c,a
   0208 FE 01              1629 	cp	a,#0x01
   020A CA 16 02           1630 	jp	z,00103$
   020D                    1631 00138$:
                           1632 ;	genCmpEq
                           1633 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1634 	ld	a,c
   020E FE 02              1635 	cp	a,#0x02
   0210 CA 22 02           1636 	jp	z,00104$
   0213                    1637 00139$:
                           1638 ;	genGoto
   0213 C3 2B 02           1639 	jp	00107$
                           1640 ;	game.c 244
                           1641 ;	genLabel
   0216                    1642 00103$:
                           1643 ;	genAddrOf
                           1644 ;	AOP_HL for _player
   0216 11 7B 1A           1645 	ld	de,#_dog1
   0219 21 B3 1A           1646 	ld	hl,#_player
   021C 73                 1647 	ld	(hl),e
   021D 23                 1648 	inc	hl
   021E 72                 1649 	ld	(hl),d
                           1650 ;	game.c 245
                           1651 ;	genGoto
   021F C3 2B 02           1652 	jp	00107$
                           1653 ;	game.c 247
                           1654 ;	genLabel
   0222                    1655 00104$:
                           1656 ;	genAddrOf
                           1657 ;	AOP_HL for _player
   0222 11 6D 1A           1658 	ld	de,#_bunny
   0225 21 B3 1A           1659 	ld	hl,#_player
   0228 73                 1660 	ld	(hl),e
   0229 23                 1661 	inc	hl
   022A 72                 1662 	ld	(hl),d
                           1663 ;	game.c 249
                           1664 ;	genLabel
   022B                    1665 00107$:
                           1666 ;	game.c 251
                           1667 ;	genCmpEq
                           1668 ;	AOP_HL for _characters_available
                           1669 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1670 	ld	hl,#_characters_available
   022E 7E                 1671 	ld	a,(hl)
   022F FE 03              1672 	cp	a,#0x03
   0231 C2 7E 02           1673 	jp	nz,00113$
   0234 18 03              1674 	jr	00141$
   0236                    1675 00140$:
   0236 C3 7E 02           1676 	jp	00113$
   0239                    1677 00141$:
                           1678 ;	game.c 252
                           1679 ;	genAssign
                           1680 ;	AOP_HL for _player
   0239 21 B3 1A           1681 	ld	hl,#_player
   023C 4E                 1682 	ld	c,(hl)
   023D 23                 1683 	inc	hl
   023E 46                 1684 	ld	b,(hl)
                           1685 ;	genPlus
                           1686 ;	genPlusIncr
                           1687 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1688 	ld	a,c
   0240 C6 0B              1689 	add	a,#0x0B
   0242 4F                 1690 	ld	c,a
   0243 78                 1691 	ld	a,b
   0244 CE 00              1692 	adc	a,#0x00
   0246 47                 1693 	ld	b,a
                           1694 ;	genPointerGet
   0247 0A                 1695 	ld	a,(bc)
                           1696 ;	genCmpEq
                           1697 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1698 	ld	c,a
   0249 FE 01              1699 	cp	a,#0x01
   024B CA 5D 02           1700 	jp	z,00108$
   024E                    1701 00142$:
                           1702 ;	genCmpEq
                           1703 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1704 	ld	a,c
   024F FE 02              1705 	cp	a,#0x02
   0251 CA 69 02           1706 	jp	z,00109$
   0254                    1707 00143$:
                           1708 ;	genCmpEq
                           1709 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1710 	ld	a,c
   0255 FE 03              1711 	cp	a,#0x03
   0257 CA 75 02           1712 	jp	z,00110$
   025A                    1713 00144$:
                           1714 ;	genGoto
   025A C3 7E 02           1715 	jp	00113$
                           1716 ;	game.c 254
                           1717 ;	genLabel
   025D                    1718 00108$:
                           1719 ;	genAddrOf
                           1720 ;	AOP_HL for _player
   025D 11 7B 1A           1721 	ld	de,#_dog1
   0260 21 B3 1A           1722 	ld	hl,#_player
   0263 73                 1723 	ld	(hl),e
   0264 23                 1724 	inc	hl
   0265 72                 1725 	ld	(hl),d
                           1726 ;	game.c 255
                           1727 ;	genGoto
   0266 C3 7E 02           1728 	jp	00113$
                           1729 ;	game.c 257
                           1730 ;	genLabel
   0269                    1731 00109$:
                           1732 ;	genAddrOf
                           1733 ;	AOP_HL for _player
   0269 11 89 1A           1734 	ld	de,#_dog2
   026C 21 B3 1A           1735 	ld	hl,#_player
   026F 73                 1736 	ld	(hl),e
   0270 23                 1737 	inc	hl
   0271 72                 1738 	ld	(hl),d
                           1739 ;	game.c 258
                           1740 ;	genGoto
   0272 C3 7E 02           1741 	jp	00113$
                           1742 ;	game.c 260
                           1743 ;	genLabel
   0275                    1744 00110$:
                           1745 ;	genAddrOf
                           1746 ;	AOP_HL for _player
   0275 11 6D 1A           1747 	ld	de,#_bunny
   0278 21 B3 1A           1748 	ld	hl,#_player
   027B 73                 1749 	ld	(hl),e
   027C 23                 1750 	inc	hl
   027D 72                 1751 	ld	(hl),d
                           1752 ;	game.c 262
                           1753 ;	genLabel
   027E                    1754 00113$:
                           1755 ;	game.c 264
                           1756 ;	genCmpEq
                           1757 ;	AOP_HL for _characters_available
                           1758 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1759 	ld	hl,#_characters_available
   0281 7E                 1760 	ld	a,(hl)
   0282 FE 04              1761 	cp	a,#0x04
   0284 C2 EB 02           1762 	jp	nz,00120$
   0287 18 03              1763 	jr	00146$
   0289                    1764 00145$:
   0289 C3 EB 02           1765 	jp	00120$
   028C                    1766 00146$:
                           1767 ;	game.c 265
                           1768 ;	genAssign
                           1769 ;	AOP_HL for _player
   028C 21 B3 1A           1770 	ld	hl,#_player
   028F 4E                 1771 	ld	c,(hl)
   0290 23                 1772 	inc	hl
   0291 46                 1773 	ld	b,(hl)
                           1774 ;	genPlus
                           1775 ;	genPlusIncr
                           1776 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1777 	ld	a,c
   0293 C6 0B              1778 	add	a,#0x0B
   0295 4F                 1779 	ld	c,a
   0296 78                 1780 	ld	a,b
   0297 CE 00              1781 	adc	a,#0x00
   0299 47                 1782 	ld	b,a
                           1783 ;	genPointerGet
   029A 0A                 1784 	ld	a,(bc)
                           1785 ;	genCmpLt
   029B 4F                 1786 	ld	c,a
   029C FE 01              1787 	cp	#0x01
   029E DA EB 02           1788 	jp	c,00120$
                           1789 ;	genCmpGt
   02A1 3E 04              1790 	ld	a,#0x04
   02A3 91                 1791 	sub	a,c
   02A4 DA EB 02           1792 	jp	c,00120$
                           1793 ;	genMinus
   02A7 0D                 1794 	dec	c
                           1795 ;	genJumpTab
   02A8 59                 1796 	ld	e,c
   02A9 16 00              1797 	ld	d,#0x00
   02AB 21 B2 02           1798 	ld	hl,#00147$
   02AE 19                 1799 	add	hl,de
   02AF 19                 1800 	add	hl,de
   02B0 19                 1801 	add	hl,de
   02B1 E9                 1802 	jp	(hl)
   02B2                    1803 00147$:
   02B2 C3 BE 02           1804 	jp	00114$
   02B5 C3 CA 02           1805 	jp	00115$
   02B8 C3 D6 02           1806 	jp	00116$
   02BB C3 E2 02           1807 	jp	00117$
                           1808 ;	game.c 267
                           1809 ;	genLabel
   02BE                    1810 00114$:
                           1811 ;	genAddrOf
                           1812 ;	AOP_HL for _player
   02BE 11 7B 1A           1813 	ld	de,#_dog1
   02C1 21 B3 1A           1814 	ld	hl,#_player
   02C4 73                 1815 	ld	(hl),e
   02C5 23                 1816 	inc	hl
   02C6 72                 1817 	ld	(hl),d
                           1818 ;	game.c 268
                           1819 ;	genGoto
   02C7 C3 EB 02           1820 	jp	00120$
                           1821 ;	game.c 270
                           1822 ;	genLabel
   02CA                    1823 00115$:
                           1824 ;	genAddrOf
                           1825 ;	AOP_HL for _player
   02CA 11 89 1A           1826 	ld	de,#_dog2
   02CD 21 B3 1A           1827 	ld	hl,#_player
   02D0 73                 1828 	ld	(hl),e
   02D1 23                 1829 	inc	hl
   02D2 72                 1830 	ld	(hl),d
                           1831 ;	game.c 271
                           1832 ;	genGoto
   02D3 C3 EB 02           1833 	jp	00120$
                           1834 ;	game.c 273
                           1835 ;	genLabel
   02D6                    1836 00116$:
                           1837 ;	genAddrOf
                           1838 ;	AOP_HL for _player
   02D6 11 97 1A           1839 	ld	de,#_cat
   02D9 21 B3 1A           1840 	ld	hl,#_player
   02DC 73                 1841 	ld	(hl),e
   02DD 23                 1842 	inc	hl
   02DE 72                 1843 	ld	(hl),d
                           1844 ;	game.c 274
                           1845 ;	genGoto
   02DF C3 EB 02           1846 	jp	00120$
                           1847 ;	game.c 276
                           1848 ;	genLabel
   02E2                    1849 00117$:
                           1850 ;	genAddrOf
                           1851 ;	AOP_HL for _player
   02E2 11 6D 1A           1852 	ld	de,#_bunny
   02E5 21 B3 1A           1853 	ld	hl,#_player
   02E8 73                 1854 	ld	(hl),e
   02E9 23                 1855 	inc	hl
   02EA 72                 1856 	ld	(hl),d
                           1857 ;	game.c 278
                           1858 ;	genLabel
   02EB                    1859 00120$:
                           1860 ;	game.c 283
                           1861 ;	genCall
                           1862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD F2 10           1863 	call	_rotate_player
                           1864 ;	genLabel
   02EE                    1865 00121$:
                           1866 ;	genEndFunction
                           1867 	
   02EE C9                 1868 	ret
   02EF                    1869 ___change_char_end:
                           1870 ;	game.c 287
                           1871 ;	genLabel
                           1872 ;	genFunction
                           1873 ;	---------------------------------
                           1874 ; Function map_loop
                           1875 ; ---------------------------------
   02EF                    1876 ___map_loop_start:
   02EF                    1877 _map_loop:
                           1878 	
                           1879 ;	game.c 289
                           1880 ;	genIpush
                           1881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 B3 1A           1882 	ld	hl,#_player
   02F2 E5                 1883 	push	hl
                           1884 ;	genCall
   02F3 CD CC 07           1885 	call	_is_ded
   02F6 42                 1886 	ld	b,d
   02F7 4B                 1887 	ld	c,e
   02F8 E8 02              1888 	lda	sp,2(sp)
                           1889 ;	genIfx
   02FA 79                 1890 	ld	a,c
   02FB B0                 1891 	or	a,b
   02FC CA 02 03           1892 	jp	z,00102$
                           1893 ;	game.c 290
                           1894 ;	genCall
                           1895 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1896 	call	_map_init
                           1897 ;	genLabel
   0302                    1898 00102$:
                           1899 ;	game.c 292
                           1900 ;	genIpush
                           1901 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 B3 1A           1902 	ld	hl,#_player
   0305 E5                 1903 	push	hl
                           1904 ;	genCall
   0306 CD E2 05           1905 	call	_got_door
   0309 E8 02              1906 	lda	sp,2(sp)
                           1907 ;	game.c 294
                           1908 ;	genIpush
                           1909 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 B3 1A           1910 	ld	hl,#_player
   030E E5                 1911 	push	hl
                           1912 ;	genCall
   030F CD 35 05           1913 	call	_got_key
   0312 E8 02              1914 	lda	sp,2(sp)
                           1915 ;	game.c 295
                           1916 ;	genCall
                           1917 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1918 	call	_map_water
                           1919 ;	game.c 298
                           1920 ;	genIpush
                           1921 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 B3 1A           1922 	ld	hl,#_player
   031A E5                 1923 	push	hl
                           1924 ;	genCall
   031B CD AA 0D           1925 	call	_player_input
   031E E8 02              1926 	lda	sp,2(sp)
                           1927 ;	game.c 301
                           1928 ;	genIpush
                           1929 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1930 	ld	hl,#_bunny
   0323 E5                 1931 	push	hl
                           1932 ;	genCall
   0324 CD 98 12           1933 	call	_move_character
   0327 E8 02              1934 	lda	sp,2(sp)
                           1935 ;	game.c 302
                           1936 ;	genIpush
                           1937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7B 1A           1938 	ld	hl,#_dog1
   032C E5                 1939 	push	hl
                           1940 ;	genCall
   032D CD 98 12           1941 	call	_move_character
   0330 E8 02              1942 	lda	sp,2(sp)
                           1943 ;	game.c 303
                           1944 ;	genIpush
                           1945 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 89 1A           1946 	ld	hl,#_dog2
   0335 E5                 1947 	push	hl
                           1948 ;	genCall
   0336 CD 98 12           1949 	call	_move_character
   0339 E8 02              1950 	lda	sp,2(sp)
                           1951 ;	game.c 304
                           1952 ;	genIpush
                           1953 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 97 1A           1954 	ld	hl,#_cat
   033E E5                 1955 	push	hl
                           1956 ;	genCall
   033F CD 98 12           1957 	call	_move_character
   0342 E8 02              1958 	lda	sp,2(sp)
                           1959 ;	genLabel
   0344                    1960 00103$:
                           1961 ;	genEndFunction
                           1962 	
   0344 C9                 1963 	ret
   0345                    1964 ___map_loop_end:
                           1965 ;	game.c 309
                           1966 ;	genLabel
                           1967 ;	genFunction
                           1968 ;	---------------------------------
                           1969 ; Function helper_copy_map
                           1970 ; ---------------------------------
   0345                    1971 ___helper_copy_map_start:
   0345                    1972 _helper_copy_map:
   0345 E8 FC              1973 	lda	sp,-4(sp)
                           1974 ;	game.c 311
                           1975 ;	genAssign
   0347 01 00 00           1976 	ld	bc,#0x0000
                           1977 ;	genLabel
   034A                    1978 00101$:
                           1979 ;	genCmpLt
   034A 79                 1980 	ld	a,c
   034B D6 68              1981 	sub	a,#0x68
   034D 78                 1982 	ld	a,b
   034E DE 01              1983 	sbc	a,#0x01
   0350 D2 74 03           1984 	jp	nc,00105$
                           1985 ;	game.c 312
                           1986 ;	genPlus
                           1987 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1988 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1989 	ld	hl,#_map
   0356 09                 1990 	add	hl,bc
   0357 7D                 1991 	ld	a,l
   0358 54                 1992 	ld	d,h
   0359 F8 02              1993 	lda	hl,2(sp)
   035B 22                 1994 	ld	(hl+),a
   035C 72                 1995 	ld	(hl),d
                           1996 ;	genPlus
                           1997 ;	AOP_STK for 
                           1998 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           1999 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              2000 	lda	hl,6(sp)
   035F 2A                 2001 	ld	a,(hl+)
   0360 66                 2002 	ld	h,(hl)
   0361 6F                 2003 	ld	l,a
   0362 09                 2004 	add	hl,bc
   0363 7D                 2005 	ld	a,l
   0364 54                 2006 	ld	d,h
   0365 F8 00              2007 	lda	hl,0(sp)
                           2008 ;	genPointerGet
                           2009 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2010 	ld	(hl+),a
   0368 72                 2011 	ld	(hl),d
   0369 5F                 2012 	ld	e,a
   036A 1A                 2013 	ld	a,(de)
                           2014 ;	genAssign (pointer)
                           2015 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2016 	inc	hl
   036C 5E                 2017 	ld	e,(hl)
   036D 23                 2018 	inc	hl
   036E 56                 2019 	ld	d,(hl)
   036F 12                 2020 	ld	(de),a
                           2021 ;	game.c 311
                           2022 ;	genPlus
                           2023 ;	genPlusIncr
   0370 03                 2024 	inc	bc
                           2025 ;	genGoto
   0371 C3 4A 03           2026 	jp	00101$
                           2027 ;	genLabel
   0374                    2028 00105$:
                           2029 ;	genEndFunction
   0374 E8 04              2030 	lda	sp,4(sp)
   0376 C9                 2031 	ret
   0377                    2032 ___helper_copy_map_end:
                           2033 ;	game.c 316
                           2034 ;	genLabel
                           2035 ;	genFunction
                           2036 ;	---------------------------------
                           2037 ; Function copy_map
                           2038 ; ---------------------------------
   0377                    2039 ___copy_map_start:
   0377                    2040 _copy_map:
                           2041 	
                           2042 ;	game.c 317
                           2043 ;	genCmpLt
                           2044 ;	AOP_HL for _current_map
   0377 21 04 19           2045 	ld	hl,#_current_map
   037A 7E                 2046 	ld	a,(hl)
   037B FE 01              2047 	cp	#0x01
   037D DA 2A 04           2048 	jp	c,00111$
                           2049 ;	genCmpGt
                           2050 ;	AOP_HL for _current_map
   0380 3E 0A              2051 	ld	a,#0x0A
   0382 96                 2052 	sub	a,(hl)
   0383 DA 2A 04           2053 	jp	c,00111$
                           2054 ;	genMinus
                           2055 ;	AOP_HL for _current_map
   0386 7E                 2056 	ld	a,(hl)
   0387 C6 FF              2057 	add	a,#0xFF
   0389 4F                 2058 	ld	c,a
                           2059 ;	genJumpTab
   038A 59                 2060 	ld	e,c
   038B 16 00              2061 	ld	d,#0x00
   038D 21 94 03           2062 	ld	hl,#00117$
   0390 19                 2063 	add	hl,de
   0391 19                 2064 	add	hl,de
   0392 19                 2065 	add	hl,de
   0393 E9                 2066 	jp	(hl)
   0394                    2067 00117$:
   0394 C3 B2 03           2068 	jp	00101$
   0397 C3 BE 03           2069 	jp	00102$
   039A C3 CA 03           2070 	jp	00103$
   039D C3 D6 03           2071 	jp	00104$
   03A0 C3 E2 03           2072 	jp	00105$
   03A3 C3 EE 03           2073 	jp	00106$
   03A6 C3 FA 03           2074 	jp	00107$
   03A9 C3 06 04           2075 	jp	00108$
   03AC C3 12 04           2076 	jp	00109$
   03AF C3 1E 04           2077 	jp	00110$
                           2078 ;	game.c 319
                           2079 ;	genLabel
   03B2                    2080 00101$:
                           2081 ;	genIpush
                           2082 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2083 	ld	hl,#_Map1
   03B5 E5                 2084 	push	hl
                           2085 ;	genCall
   03B6 CD 45 03           2086 	call	_helper_copy_map
   03B9 E8 02              2087 	lda	sp,2(sp)
                           2088 ;	game.c 320
                           2089 ;	genGoto
   03BB C3 33 04           2090 	jp	00113$
                           2091 ;	game.c 322
                           2092 ;	genLabel
   03BE                    2093 00102$:
                           2094 ;	genIpush
                           2095 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2096 	ld	hl,#_Map2
   03C1 E5                 2097 	push	hl
                           2098 ;	genCall
   03C2 CD 45 03           2099 	call	_helper_copy_map
   03C5 E8 02              2100 	lda	sp,2(sp)
                           2101 ;	game.c 323
                           2102 ;	genGoto
   03C7 C3 33 04           2103 	jp	00113$
                           2104 ;	game.c 325
                           2105 ;	genLabel
   03CA                    2106 00103$:
                           2107 ;	genIpush
                           2108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2109 	ld	hl,#_Map3
   03CD E5                 2110 	push	hl
                           2111 ;	genCall
   03CE CD 45 03           2112 	call	_helper_copy_map
   03D1 E8 02              2113 	lda	sp,2(sp)
                           2114 ;	game.c 326
                           2115 ;	genGoto
   03D3 C3 33 04           2116 	jp	00113$
                           2117 ;	game.c 328
                           2118 ;	genLabel
   03D6                    2119 00104$:
                           2120 ;	genIpush
                           2121 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2122 	ld	hl,#_Map4
   03D9 E5                 2123 	push	hl
                           2124 ;	genCall
   03DA CD 45 03           2125 	call	_helper_copy_map
   03DD E8 02              2126 	lda	sp,2(sp)
                           2127 ;	game.c 329
                           2128 ;	genGoto
   03DF C3 33 04           2129 	jp	00113$
                           2130 ;	game.c 331
                           2131 ;	genLabel
   03E2                    2132 00105$:
                           2133 ;	genIpush
                           2134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2135 	ld	hl,#_MapTest
   03E5 E5                 2136 	push	hl
                           2137 ;	genCall
   03E6 CD 45 03           2138 	call	_helper_copy_map
   03E9 E8 02              2139 	lda	sp,2(sp)
                           2140 ;	game.c 332
                           2141 ;	genGoto
   03EB C3 33 04           2142 	jp	00113$
                           2143 ;	game.c 334
                           2144 ;	genLabel
   03EE                    2145 00106$:
                           2146 ;	genIpush
                           2147 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2148 	ld	hl,#_MapTest
   03F1 E5                 2149 	push	hl
                           2150 ;	genCall
   03F2 CD 45 03           2151 	call	_helper_copy_map
   03F5 E8 02              2152 	lda	sp,2(sp)
                           2153 ;	game.c 335
                           2154 ;	genGoto
   03F7 C3 33 04           2155 	jp	00113$
                           2156 ;	game.c 337
                           2157 ;	genLabel
   03FA                    2158 00107$:
                           2159 ;	genIpush
                           2160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2161 	ld	hl,#_MapTest
   03FD E5                 2162 	push	hl
                           2163 ;	genCall
   03FE CD 45 03           2164 	call	_helper_copy_map
   0401 E8 02              2165 	lda	sp,2(sp)
                           2166 ;	game.c 338
                           2167 ;	genGoto
   0403 C3 33 04           2168 	jp	00113$
                           2169 ;	game.c 340
                           2170 ;	genLabel
   0406                    2171 00108$:
                           2172 ;	genIpush
                           2173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2174 	ld	hl,#_MapTest
   0409 E5                 2175 	push	hl
                           2176 ;	genCall
   040A CD 45 03           2177 	call	_helper_copy_map
   040D E8 02              2178 	lda	sp,2(sp)
                           2179 ;	game.c 341
                           2180 ;	genGoto
   040F C3 33 04           2181 	jp	00113$
                           2182 ;	game.c 343
                           2183 ;	genLabel
   0412                    2184 00109$:
                           2185 ;	genIpush
                           2186 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2187 	ld	hl,#_MapTest
   0415 E5                 2188 	push	hl
                           2189 ;	genCall
   0416 CD 45 03           2190 	call	_helper_copy_map
   0419 E8 02              2191 	lda	sp,2(sp)
                           2192 ;	game.c 344
                           2193 ;	genGoto
   041B C3 33 04           2194 	jp	00113$
                           2195 ;	game.c 346
                           2196 ;	genLabel
   041E                    2197 00110$:
                           2198 ;	genIpush
                           2199 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2200 	ld	hl,#_MapTest
   0421 E5                 2201 	push	hl
                           2202 ;	genCall
   0422 CD 45 03           2203 	call	_helper_copy_map
   0425 E8 02              2204 	lda	sp,2(sp)
                           2205 ;	game.c 347
                           2206 ;	genGoto
   0427 C3 33 04           2207 	jp	00113$
                           2208 ;	game.c 349
                           2209 ;	genLabel
   042A                    2210 00111$:
                           2211 ;	genIpush
                           2212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2213 	ld	hl,#_MapTest
   042D E5                 2214 	push	hl
                           2215 ;	genCall
   042E CD 45 03           2216 	call	_helper_copy_map
   0431 E8 02              2217 	lda	sp,2(sp)
                           2218 ;	game.c 352
                           2219 ;	genLabel
   0433                    2220 00113$:
                           2221 ;	genEndFunction
                           2222 	
   0433 C9                 2223 	ret
   0434                    2224 ___copy_map_end:
                           2225 ;	game.c 356
                           2226 ;	genLabel
                           2227 ;	genFunction
                           2228 ;	---------------------------------
                           2229 ; Function map_init
                           2230 ; ---------------------------------
   0434                    2231 ___map_init_start:
   0434                    2232 _map_init:
                           2233 	
                           2234 ;	game.c 357
                           2235 ;	genCall
                           2236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2237 	call	_copy_map
                           2238 ;	game.c 358
                           2239 ;	genIpush
                           2240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2241 	ld	hl,#_map
   043A E5                 2242 	push	hl
                           2243 ;	genIpush
   043B 21 14 12           2244 	ld	hl,#0x1214
   043E E5                 2245 	push	hl
                           2246 ;	genIpush
   043F 21 00 00           2247 	ld	hl,#0x0000
   0442 E5                 2248 	push	hl
                           2249 ;	genCall
   0443 CD 00 00           2250 	call	_set_bkg_tiles
   0446 E8 06              2251 	lda	sp,6(sp)
                           2252 ;	game.c 359
                           2253 ;	genCall
                           2254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2255 	call	_instanciate_chars
                           2256 ;	genLabel
   044B                    2257 00101$:
                           2258 ;	genEndFunction
                           2259 	
   044B C9                 2260 	ret
   044C                    2261 ___map_init_end:
                           2262 ;	game.c 374
                           2263 ;	genLabel
                           2264 ;	genFunction
                           2265 ;	---------------------------------
                           2266 ; Function instanciate_chars
                           2267 ; ---------------------------------
   044C                    2268 ___instanciate_chars_start:
   044C                    2269 _instanciate_chars:
                           2270 	
                           2271 ;	game.c 376
                           2272 ;	genAssign (pointer)
   044C 11 6D 1A           2273 	ld	de,#_bunny
   044F 3E 08              2274 	ld	a,#0x08
   0451 12                 2275 	ld	(de),a
                           2276 ;	game.c 377
                           2277 ;	genPlus
                           2278 ;	genPlusIncr
   0452 21 6E 1A           2279 	ld	hl,#_bunny + 1
                           2280 ;	genAssign (pointer)
   0455 36 10              2281 	ld	(hl),#0x10
                           2282 ;	game.c 378
                           2283 ;	genPlus
                           2284 ;	genPlusIncr
   0457 23                 2285 	inc	hl
                           2286 ;	genAssign (pointer)
   0458 36 00              2287 	ld	(hl),#0x00
                           2288 ;	game.c 379
                           2289 ;	genPlus
                           2290 ;	genPlusIncr
   045A 23                 2291 	inc	hl
                           2292 ;	genAssign (pointer)
   045B 36 01              2293 	ld	(hl),#0x01
                           2294 ;	game.c 380
                           2295 ;	genPlus
                           2296 ;	genPlusIncr
   045D 23                 2297 	inc	hl
                           2298 ;	genAssign (pointer)
   045E 36 02              2299 	ld	(hl),#0x02
                           2300 ;	game.c 381
                           2301 ;	genPlus
                           2302 ;	genPlusIncr
   0460 23                 2303 	inc	hl
                           2304 ;	genAssign (pointer)
   0461 36 10              2305 	ld	(hl),#0x10
                           2306 ;	game.c 382
                           2307 ;	genPlus
                           2308 ;	genPlusIncr
   0463 23                 2309 	inc	hl
                           2310 ;	genAssign (pointer)
   0464 36 11              2311 	ld	(hl),#0x11
                           2312 ;	game.c 383
                           2313 ;	genPlus
                           2314 ;	genPlusIncr
   0466 23                 2315 	inc	hl
                           2316 ;	genAssign (pointer)
   0467 36 12              2317 	ld	(hl),#0x12
                           2318 ;	game.c 384
                           2319 ;	genPlus
                           2320 ;	genPlusIncr
   0469 23                 2321 	inc	hl
                           2322 ;	genAssign (pointer)
   046A 36 00              2323 	ld	(hl),#0x00
                           2324 ;	game.c 385
                           2325 ;	genPlus
                           2326 ;	genPlusIncr
   046C 23                 2327 	inc	hl
                           2328 ;	genAssign (pointer)
   046D 36 00              2329 	ld	(hl),#0x00
                           2330 ;	game.c 386
                           2331 ;	genPlus
                           2332 ;	genPlusIncr
   046F 23                 2333 	inc	hl
   0470 23                 2334 	inc	hl
                           2335 ;	genAssign (pointer)
   0471 36 01              2336 	ld	(hl),#0x01
                           2337 ;	game.c 387
                           2338 ;	genPlus
                           2339 ;	genPlusIncr
   0473 23                 2340 	inc	hl
                           2341 ;	genAssign (pointer)
   0474 5D                 2342 	ld	e,l
   0475 54                 2343 	ld	d,h
   0476 3E 90              2344 	ld	a,#0x90
   0478 12                 2345 	ld	(de),a
   0479 13                 2346 	inc	de
   047A 3E 01              2347 	ld	a,#0x01
   047C 12                 2348 	ld	(de),a
                           2349 ;	game.c 389
                           2350 ;	genAssign (pointer)
   047D 11 7B 1A           2351 	ld	de,#_dog1
   0480 3E 10              2352 	ld	a,#0x10
   0482 12                 2353 	ld	(de),a
                           2354 ;	game.c 390
                           2355 ;	genPlus
                           2356 ;	genPlusIncr
   0483 21 7C 1A           2357 	ld	hl,#_dog1 + 1
                           2358 ;	genAssign (pointer)
   0486 36 10              2359 	ld	(hl),#0x10
                           2360 ;	game.c 391
                           2361 ;	genPlus
                           2362 ;	genPlusIncr
   0488 23                 2363 	inc	hl
                           2364 ;	genAssign (pointer)
   0489 36 03              2365 	ld	(hl),#0x03
                           2366 ;	game.c 392
                           2367 ;	genPlus
                           2368 ;	genPlusIncr
   048B 23                 2369 	inc	hl
                           2370 ;	genAssign (pointer)
   048C 36 04              2371 	ld	(hl),#0x04
                           2372 ;	game.c 393
                           2373 ;	genPlus
                           2374 ;	genPlusIncr
   048E 23                 2375 	inc	hl
                           2376 ;	genAssign (pointer)
   048F 36 05              2377 	ld	(hl),#0x05
                           2378 ;	game.c 394
                           2379 ;	genPlus
                           2380 ;	genPlusIncr
   0491 23                 2381 	inc	hl
                           2382 ;	genAssign (pointer)
   0492 36 13              2383 	ld	(hl),#0x13
                           2384 ;	game.c 395
                           2385 ;	genPlus
                           2386 ;	genPlusIncr
   0494 23                 2387 	inc	hl
                           2388 ;	genAssign (pointer)
   0495 36 14              2389 	ld	(hl),#0x14
                           2390 ;	game.c 396
                           2391 ;	genPlus
                           2392 ;	genPlusIncr
   0497 23                 2393 	inc	hl
                           2394 ;	genAssign (pointer)
   0498 36 15              2395 	ld	(hl),#0x15
                           2396 ;	game.c 397
                           2397 ;	genPlus
                           2398 ;	genPlusIncr
   049A 23                 2399 	inc	hl
                           2400 ;	genAssign (pointer)
   049B 36 00              2401 	ld	(hl),#0x00
                           2402 ;	game.c 398
                           2403 ;	genPlus
                           2404 ;	genPlusIncr
   049D 23                 2405 	inc	hl
                           2406 ;	genAssign (pointer)
   049E 36 00              2407 	ld	(hl),#0x00
                           2408 ;	game.c 399
                           2409 ;	genPlus
                           2410 ;	genPlusIncr
   04A0 23                 2411 	inc	hl
   04A1 23                 2412 	inc	hl
                           2413 ;	genAssign (pointer)
   04A2 36 02              2414 	ld	(hl),#0x02
                           2415 ;	game.c 400
                           2416 ;	genPlus
                           2417 ;	genPlusIncr
   04A4 23                 2418 	inc	hl
                           2419 ;	genAssign (pointer)
   04A5 5D                 2420 	ld	e,l
   04A6 54                 2421 	ld	d,h
   04A7 3E 90              2422 	ld	a,#0x90
   04A9 12                 2423 	ld	(de),a
   04AA 13                 2424 	inc	de
   04AB 3E 01              2425 	ld	a,#0x01
   04AD 12                 2426 	ld	(de),a
                           2427 ;	game.c 402
                           2428 ;	genAssign (pointer)
   04AE 11 89 1A           2429 	ld	de,#_dog2
   04B1 3E 08              2430 	ld	a,#0x08
   04B3 12                 2431 	ld	(de),a
                           2432 ;	game.c 403
                           2433 ;	genPlus
                           2434 ;	genPlusIncr
   04B4 21 8A 1A           2435 	ld	hl,#_dog2 + 1
                           2436 ;	genAssign (pointer)
   04B7 36 18              2437 	ld	(hl),#0x18
                           2438 ;	game.c 404
                           2439 ;	genPlus
                           2440 ;	genPlusIncr
   04B9 23                 2441 	inc	hl
                           2442 ;	genAssign (pointer)
   04BA 36 06              2443 	ld	(hl),#0x06
                           2444 ;	game.c 405
                           2445 ;	genPlus
                           2446 ;	genPlusIncr
   04BC 23                 2447 	inc	hl
                           2448 ;	genAssign (pointer)
   04BD 36 07              2449 	ld	(hl),#0x07
                           2450 ;	game.c 406
                           2451 ;	genPlus
                           2452 ;	genPlusIncr
   04BF 23                 2453 	inc	hl
                           2454 ;	genAssign (pointer)
   04C0 36 08              2455 	ld	(hl),#0x08
                           2456 ;	game.c 407
                           2457 ;	genPlus
                           2458 ;	genPlusIncr
   04C2 23                 2459 	inc	hl
                           2460 ;	genAssign (pointer)
   04C3 36 13              2461 	ld	(hl),#0x13
                           2462 ;	game.c 408
                           2463 ;	genPlus
                           2464 ;	genPlusIncr
   04C5 23                 2465 	inc	hl
                           2466 ;	genAssign (pointer)
   04C6 36 14              2467 	ld	(hl),#0x14
                           2468 ;	game.c 409
                           2469 ;	genPlus
                           2470 ;	genPlusIncr
   04C8 23                 2471 	inc	hl
                           2472 ;	genAssign (pointer)
   04C9 36 15              2473 	ld	(hl),#0x15
                           2474 ;	game.c 410
                           2475 ;	genPlus
                           2476 ;	genPlusIncr
   04CB 23                 2477 	inc	hl
                           2478 ;	genAssign (pointer)
   04CC 36 00              2479 	ld	(hl),#0x00
                           2480 ;	game.c 411
                           2481 ;	genPlus
                           2482 ;	genPlusIncr
   04CE 23                 2483 	inc	hl
                           2484 ;	genAssign (pointer)
   04CF 36 00              2485 	ld	(hl),#0x00
                           2486 ;	game.c 412
                           2487 ;	genPlus
                           2488 ;	genPlusIncr
   04D1 23                 2489 	inc	hl
   04D2 23                 2490 	inc	hl
                           2491 ;	genAssign (pointer)
   04D3 36 03              2492 	ld	(hl),#0x03
                           2493 ;	game.c 413
                           2494 ;	genPlus
                           2495 ;	genPlusIncr
   04D5 23                 2496 	inc	hl
                           2497 ;	genAssign (pointer)
   04D6 5D                 2498 	ld	e,l
   04D7 54                 2499 	ld	d,h
   04D8 3E 90              2500 	ld	a,#0x90
   04DA 12                 2501 	ld	(de),a
   04DB 13                 2502 	inc	de
   04DC 3E 01              2503 	ld	a,#0x01
   04DE 12                 2504 	ld	(de),a
                           2505 ;	game.c 415
                           2506 ;	genAssign (pointer)
   04DF 11 97 1A           2507 	ld	de,#_cat
   04E2 3E 10              2508 	ld	a,#0x10
   04E4 12                 2509 	ld	(de),a
                           2510 ;	game.c 416
                           2511 ;	genPlus
                           2512 ;	genPlusIncr
   04E5 21 98 1A           2513 	ld	hl,#_cat + 1
                           2514 ;	genAssign (pointer)
   04E8 36 18              2515 	ld	(hl),#0x18
                           2516 ;	game.c 417
                           2517 ;	genPlus
                           2518 ;	genPlusIncr
   04EA 23                 2519 	inc	hl
                           2520 ;	genAssign (pointer)
   04EB 36 09              2521 	ld	(hl),#0x09
                           2522 ;	game.c 418
                           2523 ;	genPlus
                           2524 ;	genPlusIncr
   04ED 23                 2525 	inc	hl
                           2526 ;	genAssign (pointer)
   04EE 36 0A              2527 	ld	(hl),#0x0A
                           2528 ;	game.c 419
                           2529 ;	genPlus
                           2530 ;	genPlusIncr
   04F0 23                 2531 	inc	hl
                           2532 ;	genAssign (pointer)
   04F1 36 05              2533 	ld	(hl),#0x05
                           2534 ;	game.c 420
                           2535 ;	genPlus
                           2536 ;	genPlusIncr
   04F3 23                 2537 	inc	hl
                           2538 ;	genAssign (pointer)
   04F4 36 13              2539 	ld	(hl),#0x13
                           2540 ;	game.c 421
                           2541 ;	genPlus
                           2542 ;	genPlusIncr
   04F6 23                 2543 	inc	hl
                           2544 ;	genAssign (pointer)
   04F7 36 14              2545 	ld	(hl),#0x14
                           2546 ;	game.c 422
                           2547 ;	genPlus
                           2548 ;	genPlusIncr
   04F9 23                 2549 	inc	hl
                           2550 ;	genAssign (pointer)
   04FA 36 15              2551 	ld	(hl),#0x15
                           2552 ;	game.c 423
                           2553 ;	genPlus
                           2554 ;	genPlusIncr
   04FC 23                 2555 	inc	hl
                           2556 ;	genAssign (pointer)
   04FD 36 00              2557 	ld	(hl),#0x00
                           2558 ;	game.c 424
                           2559 ;	genPlus
                           2560 ;	genPlusIncr
   04FF 23                 2561 	inc	hl
                           2562 ;	genAssign (pointer)
   0500 36 00              2563 	ld	(hl),#0x00
                           2564 ;	game.c 425
                           2565 ;	genPlus
                           2566 ;	genPlusIncr
   0502 23                 2567 	inc	hl
   0503 23                 2568 	inc	hl
                           2569 ;	genAssign (pointer)
   0504 36 04              2570 	ld	(hl),#0x04
                           2571 ;	game.c 426
                           2572 ;	genPlus
                           2573 ;	genPlusIncr
   0506 23                 2574 	inc	hl
                           2575 ;	genAssign (pointer)
   0507 5D                 2576 	ld	e,l
   0508 54                 2577 	ld	d,h
   0509 3E 90              2578 	ld	a,#0x90
   050B 12                 2579 	ld	(de),a
   050C 13                 2580 	inc	de
   050D 3E 01              2581 	ld	a,#0x01
   050F 12                 2582 	ld	(de),a
                           2583 ;	game.c 429
                           2584 ;	genIpush
                           2585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0510 21 6D 1A           2586 	ld	hl,#_bunny
   0513 E5                 2587 	push	hl
                           2588 ;	genCall
   0514 CD F8 1A           2589 	call	_set_character_sprite
   0517 E8 02              2590 	lda	sp,2(sp)
                           2591 ;	game.c 430
                           2592 ;	genIpush
                           2593 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0519 21 7B 1A           2594 	ld	hl,#_dog1
   051C E5                 2595 	push	hl
                           2596 ;	genCall
   051D CD F8 1A           2597 	call	_set_character_sprite
   0520 E8 02              2598 	lda	sp,2(sp)
                           2599 ;	game.c 431
                           2600 ;	genIpush
                           2601 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0522 21 89 1A           2602 	ld	hl,#_dog2
   0525 E5                 2603 	push	hl
                           2604 ;	genCall
   0526 CD F8 1A           2605 	call	_set_character_sprite
   0529 E8 02              2606 	lda	sp,2(sp)
                           2607 ;	game.c 432
                           2608 ;	genIpush
                           2609 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   052B 21 97 1A           2610 	ld	hl,#_cat
   052E E5                 2611 	push	hl
                           2612 ;	genCall
   052F CD F8 1A           2613 	call	_set_character_sprite
   0532 E8 02              2614 	lda	sp,2(sp)
                           2615 ;	genLabel
   0534                    2616 00101$:
                           2617 ;	genEndFunction
                           2618 	
   0534 C9                 2619 	ret
   0535                    2620 ___instanciate_chars_end:
                           2621 ;	game.c 436
                           2622 ;	genLabel
                           2623 ;	genFunction
                           2624 ;	---------------------------------
                           2625 ; Function got_key
                           2626 ; ---------------------------------
   0535                    2627 ___got_key_start:
   0535                    2628 _got_key:
   0535 E8 FC              2629 	lda	sp,-4(sp)
                           2630 ;	game.c 437
                           2631 ;	genAssign
                           2632 ;	AOP_HL for _player
   0537 21 B3 1A           2633 	ld	hl,#_player
   053A 4E                 2634 	ld	c,(hl)
   053B 23                 2635 	inc	hl
   053C 46                 2636 	ld	b,(hl)
                           2637 ;	genPlus
                           2638 ;	genPlusIncr
   053D 03                 2639 	inc	bc
                           2640 ;	genPointerGet
   053E 0A                 2641 	ld	a,(bc)
   053F 4F                 2642 	ld	c,a
                           2643 ;	genAssign
                           2644 ;	AOP_HL for _player
                           2645 ;	AOP_STK for _got_key_sloc0_1_0
   0540 2B                 2646 	dec	hl
   0541 2A                 2647 	ld	a,(hl+)
   0542 5E                 2648 	ld	e,(hl)
   0543 F8 00              2649 	lda	hl,0(sp)
   0545 22                 2650 	ld	(hl+),a
   0546 73                 2651 	ld	(hl),e
                           2652 ;	genPointerGet
                           2653 ;	AOP_STK for _got_key_sloc0_1_0
   0547 2B                 2654 	dec	hl
   0548 5E                 2655 	ld	e,(hl)
   0549 23                 2656 	inc	hl
   054A 56                 2657 	ld	d,(hl)
   054B 1A                 2658 	ld	a,(de)
   054C 47                 2659 	ld	b,a
                           2660 ;	genIpush
                           2661 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054D 79                 2662 	ld	a,c
   054E F5                 2663 	push	af
   054F 33                 2664 	inc	sp
                           2665 ;	genIpush
   0550 78                 2666 	ld	a,b
   0551 F5                 2667 	push	af
   0552 33                 2668 	inc	sp
                           2669 ;	genCall
   0553 CD 50 0D           2670 	call	__get_map_position_from_xy
   0556 42                 2671 	ld	b,d
   0557 4B                 2672 	ld	c,e
   0558 E8 02              2673 	lda	sp,2(sp)
                           2674 ;	genAssign
                           2675 ;	(registers are the same)
                           2676 ;	game.c 440
                           2677 ;	genPlus
                           2678 ;	Can't optimise plus by inc, falling back to the normal way
   055A 21 05 19           2679 	ld	hl,#_map
   055D 09                 2680 	add	hl,bc
   055E 4D                 2681 	ld	c,l
   055F 44                 2682 	ld	b,h
                           2683 ;	genPointerGet
   0560 0A                 2684 	ld	a,(bc)
   0561 4F                 2685 	ld	c,a
                           2686 ;	genCast
                           2687 ; Removed redundent load
   0562 06 00              2688 	ld	b,#0x00
                           2689 ;	genCmpEq
                           2690 ; genCmpEq: left 2, right 2, result 0
   0564 79                 2691 	ld	a,c
   0565 FE 2E              2692 	cp	a,#0x2E
   0567 C2 71 05           2693 	jp	nz,00116$
   056A 78                 2694 	ld	a,b
   056B B7                 2695 	or	a,a
   056C C2 DF 05           2696 	jp	nz,00109$
   056F 18 03              2697 	jr	00117$
   0571                    2698 00116$:
   0571 C3 DF 05           2699 	jp	00109$
   0574                    2700 00117$:
                           2701 ;	game.c 445
                           2702 ;	genAssign
                           2703 ;	AOP_STK for _got_key_map_position_2_2
   0574 F8 02              2704 	lda	hl,2(sp)
   0576 36 68              2705 	ld	(hl),#0x68
   0578 23                 2706 	inc	hl
   0579 36 01              2707 	ld	(hl),#0x01
                           2708 ;	game.c 446
                           2709 ;	genLabel
   057B                    2710 00104$:
                           2711 ;	genCmpEq
                           2712 ;	AOP_STK for _got_key_map_position_2_2
                           2713 ; genCmpEq: left 2, right 2, result 0
   057B F8 02              2714 	lda	hl,2(sp)
   057D 2A                 2715 	ld	a,(hl+)
   057E B6                 2716 	or	a,(hl)
   057F CA CE 05           2717 	jp	z,00106$
   0582                    2718 00118$:
                           2719 ;	game.c 447
                           2720 ;	genMinus
                           2721 ;	AOP_STK for _got_key_map_position_2_2
   0582 F8 02              2722 	lda	hl,2(sp)
   0584 5E                 2723 	ld	e,(hl)
   0585 23                 2724 	inc	hl
   0586 56                 2725 	ld	d,(hl)
   0587 1B                 2726 	dec	de
   0588 2B                 2727 	dec	hl
   0589 73                 2728 	ld	(hl),e
   058A 23                 2729 	inc	hl
   058B 72                 2730 	ld	(hl),d
                           2731 ;	game.c 449
                           2732 ;	genPlus
                           2733 ;	AOP_STK for _got_key_map_position_2_2
                           2734 ;	AOP_STK for _got_key_sloc0_1_0
                           2735 ;	Can't optimise plus by inc, falling back to the normal way
   058C 11 05 19           2736 	ld	de,#_map
   058F 2B                 2737 	dec	hl
   0590 2A                 2738 	ld	a,(hl+)
   0591 66                 2739 	ld	h,(hl)
   0592 6F                 2740 	ld	l,a
   0593 19                 2741 	add	hl,de
   0594 7D                 2742 	ld	a,l
   0595 54                 2743 	ld	d,h
   0596 F8 00              2744 	lda	hl,0(sp)
                           2745 ;	genPointerGet
                           2746 ;	AOP_STK for _got_key_sloc0_1_0
   0598 22                 2747 	ld	(hl+),a
   0599 72                 2748 	ld	(hl),d
   059A 5F                 2749 	ld	e,a
   059B 1A                 2750 	ld	a,(de)
   059C 4F                 2751 	ld	c,a
                           2752 ;	genCast
                           2753 ; Removed redundent load
   059D 06 00              2754 	ld	b,#0x00
                           2755 ;	genCmpEq
                           2756 ; genCmpEq: left 2, right 2, result 0
   059F 79                 2757 	ld	a,c
   05A0 FE 29              2758 	cp	a,#0x29
   05A2 C2 AA 05           2759 	jp	nz,00119$
   05A5 78                 2760 	ld	a,b
   05A6 B7                 2761 	or	a,a
   05A7 CA B8 05           2762 	jp	z,00101$
   05AA                    2763 00119$:
                           2764 ;	genCmpEq
                           2765 ; genCmpEq: left 2, right 2, result 0
   05AA 79                 2766 	ld	a,c
   05AB FE 2E              2767 	cp	a,#0x2E
   05AD C2 B5 05           2768 	jp	nz,00120$
   05B0 78                 2769 	ld	a,b
   05B1 B7                 2770 	or	a,a
   05B2 CA C3 05           2771 	jp	z,00102$
   05B5                    2772 00120$:
                           2773 ;	genGoto
   05B5 C3 7B 05           2774 	jp	00104$
                           2775 ;	game.c 451
                           2776 ;	genLabel
   05B8                    2777 00101$:
                           2778 ;	genAssign (pointer)
                           2779 ;	AOP_STK for _got_key_sloc0_1_0
   05B8 F8 00              2780 	lda	hl,0(sp)
   05BA 5E                 2781 	ld	e,(hl)
   05BB 23                 2782 	inc	hl
   05BC 56                 2783 	ld	d,(hl)
   05BD 3E 2A              2784 	ld	a,#0x2A
   05BF 12                 2785 	ld	(de),a
                           2786 ;	game.c 452
                           2787 ;	genGoto
   05C0 C3 7B 05           2788 	jp	00104$
                           2789 ;	game.c 454
                           2790 ;	genLabel
   05C3                    2791 00102$:
                           2792 ;	genAssign (pointer)
                           2793 ;	AOP_STK for _got_key_sloc0_1_0
   05C3 F8 00              2794 	lda	hl,0(sp)
   05C5 5E                 2795 	ld	e,(hl)
   05C6 23                 2796 	inc	hl
   05C7 56                 2797 	ld	d,(hl)
   05C8 3E 09              2798 	ld	a,#0x09
   05CA 12                 2799 	ld	(de),a
                           2800 ;	game.c 457
                           2801 ;	genGoto
   05CB C3 7B 05           2802 	jp	00104$
                           2803 ;	genLabel
   05CE                    2804 00106$:
                           2805 ;	game.c 459
                           2806 ;	genIpush
                           2807 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05CE 21 05 19           2808 	ld	hl,#_map
   05D1 E5                 2809 	push	hl
                           2810 ;	genIpush
   05D2 21 14 12           2811 	ld	hl,#0x1214
   05D5 E5                 2812 	push	hl
                           2813 ;	genIpush
   05D6 21 00 00           2814 	ld	hl,#0x0000
   05D9 E5                 2815 	push	hl
                           2816 ;	genCall
   05DA CD 00 00           2817 	call	_set_bkg_tiles
   05DD E8 06              2818 	lda	sp,6(sp)
                           2819 ;	genLabel
   05DF                    2820 00109$:
                           2821 ;	genEndFunction
   05DF E8 04              2822 	lda	sp,4(sp)
   05E1 C9                 2823 	ret
   05E2                    2824 ___got_key_end:
                           2825 ;	game.c 463
                           2826 ;	genLabel
                           2827 ;	genFunction
                           2828 ;	---------------------------------
                           2829 ; Function got_door
                           2830 ; ---------------------------------
   05E2                    2831 ___got_door_start:
   05E2                    2832 _got_door:
   05E2 E8 FE              2833 	lda	sp,-2(sp)
                           2834 ;	game.c 464
                           2835 ;	genAssign
                           2836 ;	AOP_HL for _player
   05E4 21 B3 1A           2837 	ld	hl,#_player
   05E7 4E                 2838 	ld	c,(hl)
   05E8 23                 2839 	inc	hl
   05E9 46                 2840 	ld	b,(hl)
                           2841 ;	genPlus
                           2842 ;	genPlusIncr
   05EA 03                 2843 	inc	bc
                           2844 ;	genPointerGet
   05EB 0A                 2845 	ld	a,(bc)
   05EC 4F                 2846 	ld	c,a
                           2847 ;	genAssign
                           2848 ;	AOP_HL for _player
                           2849 ;	AOP_STK for _got_door_sloc0_1_0
   05ED 2B                 2850 	dec	hl
   05EE 2A                 2851 	ld	a,(hl+)
   05EF 5E                 2852 	ld	e,(hl)
   05F0 F8 00              2853 	lda	hl,0(sp)
   05F2 22                 2854 	ld	(hl+),a
   05F3 73                 2855 	ld	(hl),e
                           2856 ;	genPointerGet
                           2857 ;	AOP_STK for _got_door_sloc0_1_0
   05F4 2B                 2858 	dec	hl
   05F5 5E                 2859 	ld	e,(hl)
   05F6 23                 2860 	inc	hl
   05F7 56                 2861 	ld	d,(hl)
   05F8 1A                 2862 	ld	a,(de)
   05F9 47                 2863 	ld	b,a
                           2864 ;	genIpush
                           2865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05FA 79                 2866 	ld	a,c
   05FB F5                 2867 	push	af
   05FC 33                 2868 	inc	sp
                           2869 ;	genIpush
   05FD 78                 2870 	ld	a,b
   05FE F5                 2871 	push	af
   05FF 33                 2872 	inc	sp
                           2873 ;	genCall
   0600 CD 50 0D           2874 	call	__get_map_position_from_xy
   0603 42                 2875 	ld	b,d
   0604 4B                 2876 	ld	c,e
   0605 E8 02              2877 	lda	sp,2(sp)
                           2878 ;	genAssign
                           2879 ;	(registers are the same)
                           2880 ;	game.c 466
                           2881 ;	genPlus
                           2882 ;	Can't optimise plus by inc, falling back to the normal way
   0607 21 05 19           2883 	ld	hl,#_map
   060A 09                 2884 	add	hl,bc
   060B 4D                 2885 	ld	c,l
   060C 44                 2886 	ld	b,h
                           2887 ;	genPointerGet
   060D 0A                 2888 	ld	a,(bc)
   060E 4F                 2889 	ld	c,a
                           2890 ;	genCast
                           2891 ; Removed redundent load
   060F 06 00              2892 	ld	b,#0x00
                           2893 ;	genCmpEq
                           2894 ; genCmpEq: left 2, right 2, result 0
   0611 79                 2895 	ld	a,c
   0612 FE 65              2896 	cp	a,#0x65
   0614 C2 1C 06           2897 	jp	nz,00144$
   0617 78                 2898 	ld	a,b
   0618 B7                 2899 	or	a,a
   0619 CA F0 06           2900 	jp	z,00101$
   061C                    2901 00144$:
                           2902 ;	genCmpEq
                           2903 ; genCmpEq: left 2, right 2, result 0
   061C 79                 2904 	ld	a,c
   061D FE 66              2905 	cp	a,#0x66
   061F C2 27 06           2906 	jp	nz,00145$
   0622 78                 2907 	ld	a,b
   0623 B7                 2908 	or	a,a
   0624 CA FB 06           2909 	jp	z,00102$
   0627                    2910 00145$:
                           2911 ;	genCmpEq
                           2912 ; genCmpEq: left 2, right 2, result 0
   0627 79                 2913 	ld	a,c
   0628 FE 67              2914 	cp	a,#0x67
   062A C2 32 06           2915 	jp	nz,00146$
   062D 78                 2916 	ld	a,b
   062E B7                 2917 	or	a,a
   062F CA 06 07           2918 	jp	z,00103$
   0632                    2919 00146$:
                           2920 ;	genCmpEq
                           2921 ; genCmpEq: left 2, right 2, result 0
   0632 79                 2922 	ld	a,c
   0633 FE 68              2923 	cp	a,#0x68
   0635 C2 3D 06           2924 	jp	nz,00147$
   0638 78                 2925 	ld	a,b
   0639 B7                 2926 	or	a,a
   063A CA 11 07           2927 	jp	z,00104$
   063D                    2928 00147$:
                           2929 ;	genCmpEq
                           2930 ; genCmpEq: left 2, right 2, result 0
   063D 79                 2931 	ld	a,c
   063E FE 69              2932 	cp	a,#0x69
   0640 C2 48 06           2933 	jp	nz,00148$
   0643 78                 2934 	ld	a,b
   0644 B7                 2935 	or	a,a
   0645 CA 1C 07           2936 	jp	z,00105$
   0648                    2937 00148$:
                           2938 ;	genCmpEq
                           2939 ; genCmpEq: left 2, right 2, result 0
   0648 79                 2940 	ld	a,c
   0649 FE 6A              2941 	cp	a,#0x6A
   064B C2 53 06           2942 	jp	nz,00149$
   064E 78                 2943 	ld	a,b
   064F B7                 2944 	or	a,a
   0650 CA 27 07           2945 	jp	z,00106$
   0653                    2946 00149$:
                           2947 ;	genCmpEq
                           2948 ; genCmpEq: left 2, right 2, result 0
   0653 79                 2949 	ld	a,c
   0654 FE 6B              2950 	cp	a,#0x6B
   0656 C2 5E 06           2951 	jp	nz,00150$
   0659 78                 2952 	ld	a,b
   065A B7                 2953 	or	a,a
   065B CA 32 07           2954 	jp	z,00107$
   065E                    2955 00150$:
                           2956 ;	genCmpEq
                           2957 ; genCmpEq: left 2, right 2, result 0
   065E 79                 2958 	ld	a,c
   065F FE 6C              2959 	cp	a,#0x6C
   0661 C2 69 06           2960 	jp	nz,00151$
   0664 78                 2961 	ld	a,b
   0665 B7                 2962 	or	a,a
   0666 CA 3D 07           2963 	jp	z,00108$
   0669                    2964 00151$:
                           2965 ;	genCmpEq
                           2966 ; genCmpEq: left 2, right 2, result 0
   0669 79                 2967 	ld	a,c
   066A FE 6D              2968 	cp	a,#0x6D
   066C C2 74 06           2969 	jp	nz,00152$
   066F 78                 2970 	ld	a,b
   0670 B7                 2971 	or	a,a
   0671 CA 48 07           2972 	jp	z,00109$
   0674                    2973 00152$:
                           2974 ;	genCmpEq
                           2975 ; genCmpEq: left 2, right 2, result 0
   0674 79                 2976 	ld	a,c
   0675 FE 6E              2977 	cp	a,#0x6E
   0677 C2 7F 06           2978 	jp	nz,00153$
   067A 78                 2979 	ld	a,b
   067B B7                 2980 	or	a,a
   067C CA 53 07           2981 	jp	z,00110$
   067F                    2982 00153$:
                           2983 ;	genCmpEq
                           2984 ; genCmpEq: left 2, right 2, result 0
   067F 79                 2985 	ld	a,c
   0680 FE 6F              2986 	cp	a,#0x6F
   0682 C2 8A 06           2987 	jp	nz,00154$
   0685 78                 2988 	ld	a,b
   0686 B7                 2989 	or	a,a
   0687 CA 5E 07           2990 	jp	z,00111$
   068A                    2991 00154$:
                           2992 ;	genCmpEq
                           2993 ; genCmpEq: left 2, right 2, result 0
   068A 79                 2994 	ld	a,c
   068B FE 70              2995 	cp	a,#0x70
   068D C2 95 06           2996 	jp	nz,00155$
   0690 78                 2997 	ld	a,b
   0691 B7                 2998 	or	a,a
   0692 CA 69 07           2999 	jp	z,00112$
   0695                    3000 00155$:
                           3001 ;	genCmpEq
                           3002 ; genCmpEq: left 2, right 2, result 0
   0695 79                 3003 	ld	a,c
   0696 FE 71              3004 	cp	a,#0x71
   0698 C2 A0 06           3005 	jp	nz,00156$
   069B 78                 3006 	ld	a,b
   069C B7                 3007 	or	a,a
   069D CA 74 07           3008 	jp	z,00113$
   06A0                    3009 00156$:
                           3010 ;	genCmpEq
                           3011 ; genCmpEq: left 2, right 2, result 0
   06A0 79                 3012 	ld	a,c
   06A1 FE 72              3013 	cp	a,#0x72
   06A3 C2 AB 06           3014 	jp	nz,00157$
   06A6 78                 3015 	ld	a,b
   06A7 B7                 3016 	or	a,a
   06A8 CA 7F 07           3017 	jp	z,00114$
   06AB                    3018 00157$:
                           3019 ;	genCmpEq
                           3020 ; genCmpEq: left 2, right 2, result 0
   06AB 79                 3021 	ld	a,c
   06AC FE 73              3022 	cp	a,#0x73
   06AE C2 B6 06           3023 	jp	nz,00158$
   06B1 78                 3024 	ld	a,b
   06B2 B7                 3025 	or	a,a
   06B3 CA 8A 07           3026 	jp	z,00115$
   06B6                    3027 00158$:
                           3028 ;	genCmpEq
                           3029 ; genCmpEq: left 2, right 2, result 0
   06B6 79                 3030 	ld	a,c
   06B7 FE 74              3031 	cp	a,#0x74
   06B9 C2 C1 06           3032 	jp	nz,00159$
   06BC 78                 3033 	ld	a,b
   06BD B7                 3034 	or	a,a
   06BE CA 95 07           3035 	jp	z,00116$
   06C1                    3036 00159$:
                           3037 ;	genCmpEq
                           3038 ; genCmpEq: left 2, right 2, result 0
   06C1 79                 3039 	ld	a,c
   06C2 FE 75              3040 	cp	a,#0x75
   06C4 C2 CC 06           3041 	jp	nz,00160$
   06C7 78                 3042 	ld	a,b
   06C8 B7                 3043 	or	a,a
   06C9 CA A0 07           3044 	jp	z,00117$
   06CC                    3045 00160$:
                           3046 ;	genCmpEq
                           3047 ; genCmpEq: left 2, right 2, result 0
   06CC 79                 3048 	ld	a,c
   06CD FE 76              3049 	cp	a,#0x76
   06CF C2 D7 06           3050 	jp	nz,00161$
   06D2 78                 3051 	ld	a,b
   06D3 B7                 3052 	or	a,a
   06D4 CA AB 07           3053 	jp	z,00118$
   06D7                    3054 00161$:
                           3055 ;	genCmpEq
                           3056 ; genCmpEq: left 2, right 2, result 0
   06D7 79                 3057 	ld	a,c
   06D8 FE 77              3058 	cp	a,#0x77
   06DA C2 E2 06           3059 	jp	nz,00162$
   06DD 78                 3060 	ld	a,b
   06DE B7                 3061 	or	a,a
   06DF CA B6 07           3062 	jp	z,00119$
   06E2                    3063 00162$:
                           3064 ;	genCmpEq
                           3065 ; genCmpEq: left 2, right 2, result 0
   06E2 79                 3066 	ld	a,c
   06E3 FE 78              3067 	cp	a,#0x78
   06E5 C2 ED 06           3068 	jp	nz,00163$
   06E8 78                 3069 	ld	a,b
   06E9 B7                 3070 	or	a,a
   06EA CA C1 07           3071 	jp	z,00120$
   06ED                    3072 00163$:
                           3073 ;	genGoto
   06ED C3 C9 07           3074 	jp	00122$
                           3075 ;	game.c 468
                           3076 ;	genLabel
   06F0                    3077 00101$:
                           3078 ;	genAssign
                           3079 ;	AOP_HL for _current_map
   06F0 21 04 19           3080 	ld	hl,#_current_map
   06F3 36 01              3081 	ld	(hl),#0x01
                           3082 ;	game.c 469
                           3083 ;	genCall
                           3084 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 CD 34 04           3085 	call	_map_init
                           3086 ;	game.c 470
                           3087 ;	genGoto
   06F8 C3 C9 07           3088 	jp	00122$
                           3089 ;	game.c 472
                           3090 ;	genLabel
   06FB                    3091 00102$:
                           3092 ;	genAssign
                           3093 ;	AOP_HL for _current_map
   06FB 21 04 19           3094 	ld	hl,#_current_map
   06FE 36 02              3095 	ld	(hl),#0x02
                           3096 ;	game.c 473
                           3097 ;	genCall
                           3098 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0700 CD 34 04           3099 	call	_map_init
                           3100 ;	game.c 474
                           3101 ;	genGoto
   0703 C3 C9 07           3102 	jp	00122$
                           3103 ;	game.c 476
                           3104 ;	genLabel
   0706                    3105 00103$:
                           3106 ;	genAssign
                           3107 ;	AOP_HL for _current_map
   0706 21 04 19           3108 	ld	hl,#_current_map
   0709 36 03              3109 	ld	(hl),#0x03
                           3110 ;	game.c 477
                           3111 ;	genCall
                           3112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   070B CD 34 04           3113 	call	_map_init
                           3114 ;	game.c 478
                           3115 ;	genGoto
   070E C3 C9 07           3116 	jp	00122$
                           3117 ;	game.c 480
                           3118 ;	genLabel
   0711                    3119 00104$:
                           3120 ;	genAssign
                           3121 ;	AOP_HL for _current_map
   0711 21 04 19           3122 	ld	hl,#_current_map
   0714 36 04              3123 	ld	(hl),#0x04
                           3124 ;	game.c 481
                           3125 ;	genCall
                           3126 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0716 CD 34 04           3127 	call	_map_init
                           3128 ;	game.c 482
                           3129 ;	genGoto
   0719 C3 C9 07           3130 	jp	00122$
                           3131 ;	game.c 484
                           3132 ;	genLabel
   071C                    3133 00105$:
                           3134 ;	genAssign
                           3135 ;	AOP_HL for _current_map
   071C 21 04 19           3136 	ld	hl,#_current_map
   071F 36 05              3137 	ld	(hl),#0x05
                           3138 ;	game.c 485
                           3139 ;	genCall
                           3140 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0721 CD 34 04           3141 	call	_map_init
                           3142 ;	game.c 486
                           3143 ;	genGoto
   0724 C3 C9 07           3144 	jp	00122$
                           3145 ;	game.c 488
                           3146 ;	genLabel
   0727                    3147 00106$:
                           3148 ;	genAssign
                           3149 ;	AOP_HL for _current_map
   0727 21 04 19           3150 	ld	hl,#_current_map
   072A 36 06              3151 	ld	(hl),#0x06
                           3152 ;	game.c 489
                           3153 ;	genCall
                           3154 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   072C CD 34 04           3155 	call	_map_init
                           3156 ;	game.c 490
                           3157 ;	genGoto
   072F C3 C9 07           3158 	jp	00122$
                           3159 ;	game.c 492
                           3160 ;	genLabel
   0732                    3161 00107$:
                           3162 ;	genAssign
                           3163 ;	AOP_HL for _current_map
   0732 21 04 19           3164 	ld	hl,#_current_map
   0735 36 07              3165 	ld	(hl),#0x07
                           3166 ;	game.c 493
                           3167 ;	genCall
                           3168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0737 CD 34 04           3169 	call	_map_init
                           3170 ;	game.c 494
                           3171 ;	genGoto
   073A C3 C9 07           3172 	jp	00122$
                           3173 ;	game.c 496
                           3174 ;	genLabel
   073D                    3175 00108$:
                           3176 ;	genAssign
                           3177 ;	AOP_HL for _current_map
   073D 21 04 19           3178 	ld	hl,#_current_map
   0740 36 08              3179 	ld	(hl),#0x08
                           3180 ;	game.c 497
                           3181 ;	genCall
                           3182 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0742 CD 34 04           3183 	call	_map_init
                           3184 ;	game.c 498
                           3185 ;	genGoto
   0745 C3 C9 07           3186 	jp	00122$
                           3187 ;	game.c 500
                           3188 ;	genLabel
   0748                    3189 00109$:
                           3190 ;	genAssign
                           3191 ;	AOP_HL for _current_map
   0748 21 04 19           3192 	ld	hl,#_current_map
   074B 36 09              3193 	ld	(hl),#0x09
                           3194 ;	game.c 501
                           3195 ;	genCall
                           3196 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   074D CD 34 04           3197 	call	_map_init
                           3198 ;	game.c 502
                           3199 ;	genGoto
   0750 C3 C9 07           3200 	jp	00122$
                           3201 ;	game.c 504
                           3202 ;	genLabel
   0753                    3203 00110$:
                           3204 ;	genAssign
                           3205 ;	AOP_HL for _current_map
   0753 21 04 19           3206 	ld	hl,#_current_map
   0756 36 0A              3207 	ld	(hl),#0x0A
                           3208 ;	game.c 505
                           3209 ;	genCall
                           3210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0758 CD 34 04           3211 	call	_map_init
                           3212 ;	game.c 506
                           3213 ;	genGoto
   075B C3 C9 07           3214 	jp	00122$
                           3215 ;	game.c 508
                           3216 ;	genLabel
   075E                    3217 00111$:
                           3218 ;	genAssign
                           3219 ;	AOP_HL for _current_map
   075E 21 04 19           3220 	ld	hl,#_current_map
   0761 36 0B              3221 	ld	(hl),#0x0B
                           3222 ;	game.c 509
                           3223 ;	genCall
                           3224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0763 CD 34 04           3225 	call	_map_init
                           3226 ;	game.c 510
                           3227 ;	genGoto
   0766 C3 C9 07           3228 	jp	00122$
                           3229 ;	game.c 512
                           3230 ;	genLabel
   0769                    3231 00112$:
                           3232 ;	genAssign
                           3233 ;	AOP_HL for _current_map
   0769 21 04 19           3234 	ld	hl,#_current_map
   076C 36 0C              3235 	ld	(hl),#0x0C
                           3236 ;	game.c 513
                           3237 ;	genCall
                           3238 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076E CD 34 04           3239 	call	_map_init
                           3240 ;	game.c 514
                           3241 ;	genGoto
   0771 C3 C9 07           3242 	jp	00122$
                           3243 ;	game.c 516
                           3244 ;	genLabel
   0774                    3245 00113$:
                           3246 ;	genAssign
                           3247 ;	AOP_HL for _current_map
   0774 21 04 19           3248 	ld	hl,#_current_map
   0777 36 0D              3249 	ld	(hl),#0x0D
                           3250 ;	game.c 517
                           3251 ;	genCall
                           3252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0779 CD 34 04           3253 	call	_map_init
                           3254 ;	game.c 518
                           3255 ;	genGoto
   077C C3 C9 07           3256 	jp	00122$
                           3257 ;	game.c 520
                           3258 ;	genLabel
   077F                    3259 00114$:
                           3260 ;	genAssign
                           3261 ;	AOP_HL for _current_map
   077F 21 04 19           3262 	ld	hl,#_current_map
   0782 36 0E              3263 	ld	(hl),#0x0E
                           3264 ;	game.c 521
                           3265 ;	genCall
                           3266 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0784 CD 34 04           3267 	call	_map_init
                           3268 ;	game.c 522
                           3269 ;	genGoto
   0787 C3 C9 07           3270 	jp	00122$
                           3271 ;	game.c 524
                           3272 ;	genLabel
   078A                    3273 00115$:
                           3274 ;	genAssign
                           3275 ;	AOP_HL for _current_map
   078A 21 04 19           3276 	ld	hl,#_current_map
   078D 36 0F              3277 	ld	(hl),#0x0F
                           3278 ;	game.c 525
                           3279 ;	genCall
                           3280 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078F CD 34 04           3281 	call	_map_init
                           3282 ;	game.c 526
                           3283 ;	genGoto
   0792 C3 C9 07           3284 	jp	00122$
                           3285 ;	game.c 528
                           3286 ;	genLabel
   0795                    3287 00116$:
                           3288 ;	genAssign
                           3289 ;	AOP_HL for _current_map
   0795 21 04 19           3290 	ld	hl,#_current_map
   0798 36 10              3291 	ld	(hl),#0x10
                           3292 ;	game.c 529
                           3293 ;	genCall
                           3294 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079A CD 34 04           3295 	call	_map_init
                           3296 ;	game.c 530
                           3297 ;	genGoto
   079D C3 C9 07           3298 	jp	00122$
                           3299 ;	game.c 532
                           3300 ;	genLabel
   07A0                    3301 00117$:
                           3302 ;	genAssign
                           3303 ;	AOP_HL for _current_map
   07A0 21 04 19           3304 	ld	hl,#_current_map
   07A3 36 11              3305 	ld	(hl),#0x11
                           3306 ;	game.c 533
                           3307 ;	genCall
                           3308 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07A5 CD 34 04           3309 	call	_map_init
                           3310 ;	game.c 534
                           3311 ;	genGoto
   07A8 C3 C9 07           3312 	jp	00122$
                           3313 ;	game.c 536
                           3314 ;	genLabel
   07AB                    3315 00118$:
                           3316 ;	genAssign
                           3317 ;	AOP_HL for _current_map
   07AB 21 04 19           3318 	ld	hl,#_current_map
   07AE 36 12              3319 	ld	(hl),#0x12
                           3320 ;	game.c 537
                           3321 ;	genCall
                           3322 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B0 CD 34 04           3323 	call	_map_init
                           3324 ;	game.c 538
                           3325 ;	genGoto
   07B3 C3 C9 07           3326 	jp	00122$
                           3327 ;	game.c 540
                           3328 ;	genLabel
   07B6                    3329 00119$:
                           3330 ;	genAssign
                           3331 ;	AOP_HL for _current_map
   07B6 21 04 19           3332 	ld	hl,#_current_map
   07B9 36 13              3333 	ld	(hl),#0x13
                           3334 ;	game.c 541
                           3335 ;	genCall
                           3336 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BB CD 34 04           3337 	call	_map_init
                           3338 ;	game.c 542
                           3339 ;	genGoto
   07BE C3 C9 07           3340 	jp	00122$
                           3341 ;	game.c 544
                           3342 ;	genLabel
   07C1                    3343 00120$:
                           3344 ;	genAssign
                           3345 ;	AOP_HL for _current_map
   07C1 21 04 19           3346 	ld	hl,#_current_map
   07C4 36 14              3347 	ld	(hl),#0x14
                           3348 ;	game.c 545
                           3349 ;	genCall
                           3350 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C6 CD 34 04           3351 	call	_map_init
                           3352 ;	game.c 547
                           3353 ;	genLabel
   07C9                    3354 00122$:
                           3355 ;	genEndFunction
   07C9 E8 02              3356 	lda	sp,2(sp)
   07CB C9                 3357 	ret
   07CC                    3358 ___got_door_end:
                           3359 ;	game.c 552
                           3360 ;	genLabel
                           3361 ;	genFunction
                           3362 ;	---------------------------------
                           3363 ; Function is_ded
                           3364 ; ---------------------------------
   07CC                    3365 ___is_ded_start:
   07CC                    3366 _is_ded:
   07CC E8 FD              3367 	lda	sp,-3(sp)
                           3368 ;	game.c 556
                           3369 ;	genAssign
                           3370 ;	AOP_STK for 
   07CE F8 05              3371 	lda	hl,5(sp)
   07D0 4E                 3372 	ld	c,(hl)
   07D1 23                 3373 	inc	hl
   07D2 46                 3374 	ld	b,(hl)
                           3375 ;	genPointerGet
   07D3 59                 3376 	ld	e,c
   07D4 50                 3377 	ld	d,b
   07D5 1A                 3378 	ld	a,(de)
   07D6 4F                 3379 	ld	c,a
   07D7 13                 3380 	inc	de
   07D8 1A                 3381 	ld	a,(de)
   07D9 47                 3382 	ld	b,a
                           3383 ;	genPlus
                           3384 ;	AOP_STK for _is_ded_sloc0_1_0
                           3385 ;	genPlusIncr
                           3386 ;	Can't optimise plus by inc, falling back to the normal way
   07DA 21 09 00           3387 	ld	hl,#0x0009
   07DD 09                 3388 	add	hl,bc
   07DE 7D                 3389 	ld	a,l
   07DF 54                 3390 	ld	d,h
   07E0 F8 01              3391 	lda	hl,1(sp)
                           3392 ;	genPointerGet
                           3393 ;	AOP_STK for _is_ded_sloc0_1_0
   07E2 22                 3394 	ld	(hl+),a
   07E3 72                 3395 	ld	(hl),d
   07E4 5F                 3396 	ld	e,a
   07E5 1A                 3397 	ld	a,(de)
                           3398 ;	genIfx
   07E6 B7                 3399 	or	a,a
   07E7 CA 09 08           3400 	jp	z,00102$
                           3401 ;	genPlus
                           3402 ;	AOP_STK for _is_ded_sloc0_1_0
                           3403 ;	genPlusIncr
                           3404 ;	Can't optimise plus by inc, falling back to the normal way
   07EA 21 0B 00           3405 	ld	hl,#0x000B
   07ED 09                 3406 	add	hl,bc
   07EE 7D                 3407 	ld	a,l
   07EF 54                 3408 	ld	d,h
   07F0 F8 01              3409 	lda	hl,1(sp)
                           3410 ;	genPointerGet
                           3411 ;	AOP_STK for _is_ded_sloc0_1_0
                           3412 ;	AOP_STK for _is_ded_sloc1_1_0
   07F2 22                 3413 	ld	(hl+),a
   07F3 72                 3414 	ld	(hl),d
   07F4 5F                 3415 	ld	e,a
   07F5 1A                 3416 	ld	a,(de)
   07F6 2B                 3417 	dec	hl
   07F7 2B                 3418 	dec	hl
                           3419 ;	genCmpEq
                           3420 ;	AOP_STK for _is_ded_sloc1_1_0
                           3421 ; genCmpEq: left 1, right 1, result 0
   07F8 77                 3422 	ld      (hl),a
                           3423 ; Removed redundent load
   07F9 FE 01              3424 	cp	a,#0x01
   07FB C2 09 08           3425 	jp	nz,00102$
   07FE 18 03              3426 	jr	00113$
   0800                    3427 00112$:
   0800 C3 09 08           3428 	jp	00102$
   0803                    3429 00113$:
                           3430 ;	game.c 558
                           3431 ;	genRet
   0803 11 00 00           3432 	ld	de,#0x0000
   0806 C3 55 08           3433 	jp	00107$
                           3434 ;	genLabel
   0809                    3435 00102$:
                           3436 ;	game.c 562
                           3437 ;	genPlus
                           3438 ;	AOP_STK for _is_ded_sloc0_1_0
                           3439 ;	genPlusIncr
                           3440 ;	Can't optimise plus by inc, falling back to the normal way
   0809 21 01 00           3441 	ld	hl,#0x0001
   080C 09                 3442 	add	hl,bc
   080D 7D                 3443 	ld	a,l
   080E 54                 3444 	ld	d,h
   080F F8 01              3445 	lda	hl,1(sp)
                           3446 ;	genPointerGet
                           3447 ;	AOP_STK for _is_ded_sloc0_1_0
                           3448 ;	AOP_STK for _is_ded_sloc1_1_0
   0811 22                 3449 	ld	(hl+),a
   0812 72                 3450 	ld	(hl),d
   0813 5F                 3451 	ld	e,a
   0814 1A                 3452 	ld	a,(de)
   0815 2B                 3453 	dec	hl
   0816 2B                 3454 	dec	hl
   0817 77                 3455 	ld	(hl),a
                           3456 ;	genPointerGet
   0818 0A                 3457 	ld	a,(bc)
   0819 4F                 3458 	ld	c,a
                           3459 ;	genIpush
                           3460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3461 ;	AOP_STK for _is_ded_sloc1_1_0
   081A 7E                 3462 	ld	a,(hl)
   081B F5                 3463 	push	af
   081C 33                 3464 	inc	sp
                           3465 ;	genIpush
   081D 79                 3466 	ld	a,c
   081E F5                 3467 	push	af
   081F 33                 3468 	inc	sp
                           3469 ;	genCall
   0820 CD 50 0D           3470 	call	__get_map_position_from_xy
   0823 42                 3471 	ld	b,d
   0824 4B                 3472 	ld	c,e
   0825 E8 02              3473 	lda	sp,2(sp)
                           3474 ;	genAssign
                           3475 ;	(registers are the same)
                           3476 ;	game.c 565
                           3477 ;	genPlus
                           3478 ;	Can't optimise plus by inc, falling back to the normal way
   0827 21 05 19           3479 	ld	hl,#_map
   082A 09                 3480 	add	hl,bc
   082B 4D                 3481 	ld	c,l
   082C 44                 3482 	ld	b,h
                           3483 ;	genPointerGet
   082D 0A                 3484 	ld	a,(bc)
   082E 4F                 3485 	ld	c,a
                           3486 ;	genCast
                           3487 ; Removed redundent load
   082F 06 00              3488 	ld	b,#0x00
                           3489 ;	genCmpEq
                           3490 ; genCmpEq: left 2, right 2, result 0
   0831 79                 3491 	ld	a,c
   0832 FE 0B              3492 	cp	a,#0x0B
   0834 C2 3C 08           3493 	jp	nz,00114$
   0837 78                 3494 	ld	a,b
   0838 B7                 3495 	or	a,a
   0839 CA 4C 08           3496 	jp	z,00104$
   083C                    3497 00114$:
                           3498 ;	genCmpEq
                           3499 ; genCmpEq: left 2, right 2, result 0
   083C 79                 3500 	ld	a,c
   083D FE 0C              3501 	cp	a,#0x0C
   083F C2 49 08           3502 	jp	nz,00115$
   0842 78                 3503 	ld	a,b
   0843 B7                 3504 	or	a,a
   0844 C2 52 08           3505 	jp	nz,00106$
   0847 18 03              3506 	jr	00116$
   0849                    3507 00115$:
   0849 C3 52 08           3508 	jp	00106$
   084C                    3509 00116$:
                           3510 ;	game.c 569
                           3511 ;	genLabel
   084C                    3512 00104$:
                           3513 ;	genRet
   084C 11 01 00           3514 	ld	de,#0x0001
   084F C3 55 08           3515 	jp	00107$
                           3516 ;	game.c 570
                           3517 ;	genLabel
   0852                    3518 00106$:
                           3519 ;	game.c 571
                           3520 ;	genRet
   0852 11 00 00           3521 	ld	de,#0x0000
                           3522 ;	genLabel
   0855                    3523 00107$:
                           3524 ;	genEndFunction
   0855 E8 03              3525 	lda	sp,3(sp)
   0857 C9                 3526 	ret
   0858                    3527 ___is_ded_end:
                           3528 ;	game.c 592
                           3529 ;	genLabel
                           3530 ;	genFunction
                           3531 ;	---------------------------------
                           3532 ; Function dog1_power
                           3533 ; ---------------------------------
   0858                    3534 ___dog1_power_start:
   0858                    3535 _dog1_power:
   0858 E8 F8              3536 	lda	sp,-8(sp)
                           3537 ;	game.c 596
                           3538 ;	genAssign
                           3539 ;	AOP_HL for _player
   085A 21 B3 1A           3540 	ld	hl,#_player
   085D 4E                 3541 	ld	c,(hl)
   085E 23                 3542 	inc	hl
   085F 46                 3543 	ld	b,(hl)
                           3544 ;	genPlus
                           3545 ;	genPlusIncr
   0860 03                 3546 	inc	bc
   0861 03                 3547 	inc	bc
   0862 03                 3548 	inc	bc
   0863 03                 3549 	inc	bc
                           3550 ;	genPointerGet
   0864 0A                 3551 	ld	a,(bc)
   0865 4F                 3552 	ld	c,a
                           3553 ;	genAssign
                           3554 ;	AOP_HL for _player
                           3555 ;	AOP_STK for _dog1_power_sloc0_1_0
   0866 2B                 3556 	dec	hl
   0867 2A                 3557 	ld	a,(hl+)
   0868 5E                 3558 	ld	e,(hl)
   0869 F8 02              3559 	lda	hl,2(sp)
   086B 22                 3560 	ld	(hl+),a
   086C 73                 3561 	ld	(hl),e
                           3562 ;	genPlus
                           3563 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3564 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3565 ;	genPlusIncr
                           3566 ;	Can't optimise plus by inc, falling back to the normal way
   086D 2B                 3567 	dec	hl
   086E 5E                 3568 	ld	e,(hl)
   086F 23                 3569 	inc	hl
   0870 56                 3570 	ld	d,(hl)
   0871 21 0B 00           3571 	ld	hl,#0x000B
   0874 19                 3572 	add	hl,de
   0875 7D                 3573 	ld	a,l
   0876 54                 3574 	ld	d,h
   0877 F8 00              3575 	lda	hl,0(sp)
                           3576 ;	genPointerGet
                           3577 ;	AOP_STK for _dog1_power_sloc1_1_0
   0879 22                 3578 	ld	(hl+),a
   087A 72                 3579 	ld	(hl),d
   087B 5F                 3580 	ld	e,a
   087C 1A                 3581 	ld	a,(de)
   087D 47                 3582 	ld	b,a
                           3583 ;	genIpush
                           3584 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   087E 79                 3585 	ld	a,c
   087F F5                 3586 	push	af
   0880 33                 3587 	inc	sp
                           3588 ;	genIpush
   0881 78                 3589 	ld	a,b
   0882 F5                 3590 	push	af
   0883 33                 3591 	inc	sp
                           3592 ;	genCall
   0884 CD 00 00           3593 	call	_set_sprite_tile
   0887 E8 02              3594 	lda	sp,2(sp)
                           3595 ;	game.c 598
                           3596 ;	genAssign
                           3597 ;	AOP_HL for _player
   0889 21 B3 1A           3598 	ld	hl,#_player
   088C 4E                 3599 	ld	c,(hl)
   088D 23                 3600 	inc	hl
   088E 46                 3601 	ld	b,(hl)
                           3602 ;	genPlus
                           3603 ;	genPlusIncr
   088F 03                 3604 	inc	bc
                           3605 ;	genPointerGet
   0890 0A                 3606 	ld	a,(bc)
   0891 4F                 3607 	ld	c,a
                           3608 ;	genAssign
                           3609 ;	AOP_HL for _player
                           3610 ;	AOP_STK for _dog1_power_sloc1_1_0
   0892 2B                 3611 	dec	hl
   0893 2A                 3612 	ld	a,(hl+)
   0894 5E                 3613 	ld	e,(hl)
   0895 F8 00              3614 	lda	hl,0(sp)
   0897 22                 3615 	ld	(hl+),a
   0898 73                 3616 	ld	(hl),e
                           3617 ;	genPointerGet
                           3618 ;	AOP_STK for _dog1_power_sloc1_1_0
   0899 2B                 3619 	dec	hl
   089A 5E                 3620 	ld	e,(hl)
   089B 23                 3621 	inc	hl
   089C 56                 3622 	ld	d,(hl)
   089D 1A                 3623 	ld	a,(de)
   089E 47                 3624 	ld	b,a
                           3625 ;	genIpush
                           3626 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   089F 79                 3627 	ld	a,c
   08A0 F5                 3628 	push	af
   08A1 33                 3629 	inc	sp
                           3630 ;	genIpush
   08A2 78                 3631 	ld	a,b
   08A3 F5                 3632 	push	af
   08A4 33                 3633 	inc	sp
                           3634 ;	genCall
   08A5 CD 50 0D           3635 	call	__get_map_position_from_xy
   08A8 42                 3636 	ld	b,d
   08A9 4B                 3637 	ld	c,e
   08AA E8 02              3638 	lda	sp,2(sp)
                           3639 ;	genAssign
                           3640 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08AC F8 06              3641 	lda	hl,6(sp)
   08AE 71                 3642 	ld	(hl),c
   08AF 23                 3643 	inc	hl
   08B0 70                 3644 	ld	(hl),b
                           3645 ;	game.c 600
                           3646 ;	genAssign
                           3647 ;	AOP_HL for _player
   08B1 21 B3 1A           3648 	ld	hl,#_player
   08B4 4E                 3649 	ld	c,(hl)
   08B5 23                 3650 	inc	hl
   08B6 46                 3651 	ld	b,(hl)
                           3652 ;	genPlus
                           3653 ;	genPlusIncr
                           3654 ;	Can't optimise plus by inc, falling back to the normal way
   08B7 79                 3655 	ld	a,c
   08B8 C6 08              3656 	add	a,#0x08
   08BA 4F                 3657 	ld	c,a
   08BB 78                 3658 	ld	a,b
   08BC CE 00              3659 	adc	a,#0x00
   08BE 47                 3660 	ld	b,a
                           3661 ;	genPointerGet
   08BF 0A                 3662 	ld	a,(bc)
                           3663 ;	genIpush
                           3664 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08C0 4F                 3665 	ld	c,a
   08C1 F5                 3666 	push	af
   08C2 33                 3667 	inc	sp
                           3668 ;	genIpush
                           3669 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08C3 F8 07              3670 	lda	hl,7(sp)
   08C5 2A                 3671 	ld	a,(hl+)
   08C6 66                 3672 	ld	h,(hl)
   08C7 6F                 3673 	ld	l,a
   08C8 E5                 3674 	push	hl
                           3675 ;	genCall
   08C9 CD EF 0A           3676 	call	__get_next_map_position
   08CC 42                 3677 	ld	b,d
   08CD 4B                 3678 	ld	c,e
   08CE E8 03              3679 	lda	sp,3(sp)
                           3680 ;	genAssign
                           3681 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08D0 F8 06              3682 	lda	hl,6(sp)
   08D2 71                 3683 	ld	(hl),c
   08D3 23                 3684 	inc	hl
   08D4 70                 3685 	ld	(hl),b
                           3686 ;	game.c 601
                           3687 ;	genAssign
                           3688 ;	AOP_HL for _player
   08D5 21 B3 1A           3689 	ld	hl,#_player
   08D8 4E                 3690 	ld	c,(hl)
   08D9 23                 3691 	inc	hl
   08DA 46                 3692 	ld	b,(hl)
                           3693 ;	genPlus
                           3694 ;	genPlusIncr
                           3695 ;	Can't optimise plus by inc, falling back to the normal way
   08DB 79                 3696 	ld	a,c
   08DC C6 08              3697 	add	a,#0x08
   08DE 4F                 3698 	ld	c,a
   08DF 78                 3699 	ld	a,b
   08E0 CE 00              3700 	adc	a,#0x00
   08E2 47                 3701 	ld	b,a
                           3702 ;	genPointerGet
   08E3 0A                 3703 	ld	a,(bc)
                           3704 ;	genIpush
                           3705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08E4 4F                 3706 	ld	c,a
   08E5 F5                 3707 	push	af
   08E6 33                 3708 	inc	sp
                           3709 ;	genIpush
                           3710 ;	AOP_STK for _dog1_power_map_position_block_1_1
   08E7 F8 07              3711 	lda	hl,7(sp)
   08E9 2A                 3712 	ld	a,(hl+)
   08EA 66                 3713 	ld	h,(hl)
   08EB 6F                 3714 	ld	l,a
   08EC E5                 3715 	push	hl
                           3716 ;	genCall
   08ED CD EF 0A           3717 	call	__get_next_map_position
   08F0 42                 3718 	ld	b,d
   08F1 4B                 3719 	ld	c,e
   08F2 E8 03              3720 	lda	sp,3(sp)
                           3721 ;	genAssign
                           3722 ;	AOP_STK for _dog1_power_map_position_next_1_1
   08F4 F8 04              3723 	lda	hl,4(sp)
   08F6 71                 3724 	ld	(hl),c
   08F7 23                 3725 	inc	hl
   08F8 70                 3726 	ld	(hl),b
                           3727 ;	game.c 604
                           3728 ;	genPlus
                           3729 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3730 ;	Can't optimise plus by inc, falling back to the normal way
   08F9 11 05 19           3731 	ld	de,#_map
   08FC 23                 3732 	inc	hl
   08FD 2A                 3733 	ld	a,(hl+)
   08FE 66                 3734 	ld	h,(hl)
   08FF 6F                 3735 	ld	l,a
   0900 19                 3736 	add	hl,de
   0901 4D                 3737 	ld	c,l
   0902 44                 3738 	ld	b,h
                           3739 ;	genPointerGet
   0903 0A                 3740 	ld	a,(bc)
   0904 4F                 3741 	ld	c,a
                           3742 ;	genCast
                           3743 ; Removed redundent load
   0905 06 00              3744 	ld	b,#0x00
                           3745 ;	genCmpEq
                           3746 ; genCmpEq: left 2, right 2, result 0
   0907 79                 3747 	ld	a,c
   0908 FE 0F              3748 	cp	a,#0x0F
   090A C2 12 09           3749 	jp	nz,00137$
   090D 78                 3750 	ld	a,b
   090E B7                 3751 	or	a,a
   090F CA 2D 09           3752 	jp	z,00103$
   0912                    3753 00137$:
                           3754 ;	genCmpEq
                           3755 ; genCmpEq: left 2, right 2, result 0
   0912 79                 3756 	ld	a,c
   0913 FE 10              3757 	cp	a,#0x10
   0915 C2 1D 09           3758 	jp	nz,00138$
   0918 78                 3759 	ld	a,b
   0919 B7                 3760 	or	a,a
   091A CA 2D 09           3761 	jp	z,00103$
   091D                    3762 00138$:
                           3763 ;	genCmpEq
                           3764 ; genCmpEq: left 2, right 2, result 0
   091D 79                 3765 	ld	a,c
   091E FE 2D              3766 	cp	a,#0x2D
   0920 C2 2A 09           3767 	jp	nz,00139$
   0923 78                 3768 	ld	a,b
   0924 B7                 3769 	or	a,a
   0925 C2 BF 0A           3770 	jp	nz,00122$
   0928 18 03              3771 	jr	00140$
   092A                    3772 00139$:
   092A C3 BF 0A           3773 	jp	00122$
   092D                    3774 00140$:
                           3775 ;	game.c 619
                           3776 ;	genLabel
   092D                    3777 00103$:
                           3778 ;	game.c 611
                           3779 ;	genIpush
                           3780 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3781 ;	AOP_STK for _dog1_power_map_position_next_1_1
   092D F8 04              3782 	lda	hl,4(sp)
   092F 2A                 3783 	ld	a,(hl+)
   0930 66                 3784 	ld	h,(hl)
   0931 6F                 3785 	ld	l,a
   0932 E5                 3786 	push	hl
                           3787 ;	genCall
   0933 CD 40 0F           3788 	call	_can_move_to_map_pos
   0936 42                 3789 	ld	b,d
   0937 4B                 3790 	ld	c,e
   0938 E8 02              3791 	lda	sp,2(sp)
                           3792 ;	genCmpEq
                           3793 ; genCmpEq: left 2, right 2, result 0
   093A 79                 3794 	ld	a,c
   093B B0                 3795 	or	a,b
   093C CA BF 0A           3796 	jp	z,00122$
   093F                    3797 00141$:
                           3798 ;	game.c 619
                           3799 ;	genPlus
                           3800 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3801 ;	Can't optimise plus by inc, falling back to the normal way
   093F 11 05 19           3802 	ld	de,#_map
   0942 F8 04              3803 	lda	hl,4(sp)
   0944 2A                 3804 	ld	a,(hl+)
   0945 66                 3805 	ld	h,(hl)
   0946 6F                 3806 	ld	l,a
   0947 19                 3807 	add	hl,de
   0948 4D                 3808 	ld	c,l
   0949 44                 3809 	ld	b,h
                           3810 ;	genPointerGet
   094A 0A                 3811 	ld	a,(bc)
   094B 4F                 3812 	ld	c,a
                           3813 ;	genCast
                           3814 ; Removed redundent load
   094C 06 00              3815 	ld	b,#0x00
                           3816 ;	genCmpLt
   094E 79                 3817 	ld	a,c
   094F D6 0D              3818 	sub	a,#0x0D
   0951 78                 3819 	ld	a,b
   0952 DE 00              3820 	sbc	a,#0x00
   0954 DA 7D 09           3821 	jp	c,00106$
                           3822 ;	game.c 620
                           3823 ;	genCmpEq
                           3824 ; genCmpEq: left 2, right 2, result 0
   0957 79                 3825 	ld	a,c
   0958 FE 2F              3826 	cp	a,#0x2F
   095A C2 62 09           3827 	jp	nz,00142$
   095D 78                 3828 	ld	a,b
   095E B7                 3829 	or	a,a
   095F CA 7D 09           3830 	jp	z,00106$
   0962                    3831 00142$:
                           3832 ;	game.c 621
                           3833 ;	genCmpEq
                           3834 ; genCmpEq: left 2, right 2, result 0
   0962 79                 3835 	ld	a,c
   0963 FE 30              3836 	cp	a,#0x30
   0965 C2 6D 09           3837 	jp	nz,00143$
   0968 78                 3838 	ld	a,b
   0969 B7                 3839 	or	a,a
   096A CA 7D 09           3840 	jp	z,00106$
   096D                    3841 00143$:
                           3842 ;	game.c 622
                           3843 ;	genCmpEq
                           3844 ; genCmpEq: left 2, right 2, result 0
   096D 79                 3845 	ld	a,c
   096E FE 2A              3846 	cp	a,#0x2A
   0970 C2 7A 09           3847 	jp	nz,00144$
   0973 78                 3848 	ld	a,b
   0974 B7                 3849 	or	a,a
   0975 C2 B1 09           3850 	jp	nz,00107$
   0978 18 03              3851 	jr	00145$
   097A                    3852 00144$:
   097A C3 B1 09           3853 	jp	00107$
   097D                    3854 00145$:
                           3855 ;	genLabel
   097D                    3856 00106$:
                           3857 ;	game.c 624
                           3858 ;	genAssign
                           3859 ;	AOP_HL for _player
                           3860 ;	AOP_STK for _dog1_power_sloc1_1_0
   097D 21 B3 1A           3861 	ld	hl,#_player
   0980 2A                 3862 	ld	a,(hl+)
   0981 5E                 3863 	ld	e,(hl)
   0982 F8 00              3864 	lda	hl,0(sp)
   0984 22                 3865 	ld	(hl+),a
   0985 73                 3866 	ld	(hl),e
                           3867 ;	genPlus
                           3868 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3869 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3870 ;	genPlusIncr
                           3871 ;	Can't optimise plus by inc, falling back to the normal way
   0986 2B                 3872 	dec	hl
   0987 5E                 3873 	ld	e,(hl)
   0988 23                 3874 	inc	hl
   0989 56                 3875 	ld	d,(hl)
   098A 21 08 00           3876 	ld	hl,#0x0008
   098D 19                 3877 	add	hl,de
   098E 7D                 3878 	ld	a,l
   098F 54                 3879 	ld	d,h
   0990 F8 02              3880 	lda	hl,2(sp)
                           3881 ;	genPointerGet
                           3882 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3883 ;	AOP_STK for _dog1_power_sloc1_1_0
   0992 22                 3884 	ld	(hl+),a
   0993 72                 3885 	ld	(hl),d
   0994 5F                 3886 	ld	e,a
   0995 1A                 3887 	ld	a,(de)
   0996 F8 00              3888 	lda	hl,0(sp)
   0998 77                 3889 	ld	(hl),a
                           3890 ;	genIpush
                           3891 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0999 C5                 3892 	push	bc
                           3893 ;	AOP_STK for _dog1_power_map_position_next_1_1
   099A F8 06              3894 	lda	hl,6(sp)
   099C 2A                 3895 	ld	a,(hl+)
   099D 66                 3896 	ld	h,(hl)
   099E 6F                 3897 	ld	l,a
   099F E5                 3898 	push	hl
                           3899 ;	genIpush
                           3900 ;	AOP_STK for _dog1_power_sloc1_1_0
   09A0 F8 04              3901 	lda	hl,4(sp)
   09A2 7E                 3902 	ld	a,(hl)
   09A3 F5                 3903 	push	af
   09A4 33                 3904 	inc	sp
                           3905 ;	genIpush
                           3906 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09A5 F8 0B              3907 	lda	hl,11(sp)
   09A7 2A                 3908 	ld	a,(hl+)
   09A8 66                 3909 	ld	h,(hl)
   09A9 6F                 3910 	ld	l,a
   09AA E5                 3911 	push	hl
                           3912 ;	genCall
   09AB CD A3 0B           3913 	call	_dog1_power_apply
   09AE E8 05              3914 	lda	sp,5(sp)
   09B0 C1                 3915 	pop	bc
                           3916 ;	genLabel
   09B1                    3917 00107$:
                           3918 ;	game.c 628
                           3919 ;	genCmpEq
                           3920 ; genCmpEq: left 2, right 2, result 0
   09B1 79                 3921 	ld	a,c
   09B2 FE 0D              3922 	cp	a,#0x0D
   09B4 C2 BC 09           3923 	jp	nz,00146$
   09B7 78                 3924 	ld	a,b
   09B8 B7                 3925 	or	a,a
   09B9 CA CC 09           3926 	jp	z,00119$
   09BC                    3927 00146$:
                           3928 ;	genCmpEq
                           3929 ; genCmpEq: left 2, right 2, result 0
   09BC 79                 3930 	ld	a,c
   09BD FE 0E              3931 	cp	a,#0x0E
   09BF C2 C9 09           3932 	jp	nz,00147$
   09C2 78                 3933 	ld	a,b
   09C3 B7                 3934 	or	a,a
   09C4 C2 BF 0A           3935 	jp	nz,00122$
   09C7 18 03              3936 	jr	00148$
   09C9                    3937 00147$:
   09C9 C3 BF 0A           3938 	jp	00122$
   09CC                    3939 00148$:
                           3940 ;	genLabel
   09CC                    3941 00119$:
                           3942 ;	game.c 630
                           3943 ;	genAssign
                           3944 ;	AOP_HL for _player
   09CC 21 B3 1A           3945 	ld	hl,#_player
   09CF 4E                 3946 	ld	c,(hl)
   09D0 23                 3947 	inc	hl
   09D1 46                 3948 	ld	b,(hl)
                           3949 ;	genPlus
                           3950 ;	genPlusIncr
                           3951 ;	Can't optimise plus by inc, falling back to the normal way
   09D2 79                 3952 	ld	a,c
   09D3 C6 08              3953 	add	a,#0x08
   09D5 4F                 3954 	ld	c,a
   09D6 78                 3955 	ld	a,b
   09D7 CE 00              3956 	adc	a,#0x00
   09D9 47                 3957 	ld	b,a
                           3958 ;	genPointerGet
   09DA 0A                 3959 	ld	a,(bc)
   09DB 4F                 3960 	ld	c,a
                           3961 ;	genIpush
                           3962 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3963 ;	AOP_STK for _dog1_power_map_position_next_1_1
   09DC F8 04              3964 	lda	hl,4(sp)
   09DE 2A                 3965 	ld	a,(hl+)
   09DF 66                 3966 	ld	h,(hl)
   09E0 6F                 3967 	ld	l,a
   09E1 E5                 3968 	push	hl
                           3969 ;	genIpush
   09E2 79                 3970 	ld	a,c
   09E3 F5                 3971 	push	af
   09E4 33                 3972 	inc	sp
                           3973 ;	genIpush
                           3974 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09E5 F8 09              3975 	lda	hl,9(sp)
   09E7 2A                 3976 	ld	a,(hl+)
   09E8 66                 3977 	ld	h,(hl)
   09E9 6F                 3978 	ld	l,a
   09EA E5                 3979 	push	hl
                           3980 ;	genCall
   09EB CD A3 0B           3981 	call	_dog1_power_apply
   09EE E8 05              3982 	lda	sp,5(sp)
                           3983 ;	game.c 631
                           3984 ;	genAssign
                           3985 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3986 ;	AOP_STK for _dog1_power_map_position_block_1_1
   09F0 F8 04              3987 	lda	hl,4(sp)
   09F2 2A                 3988 	ld	a,(hl+)
   09F3 5E                 3989 	ld	e,(hl)
   09F4 23                 3990 	inc	hl
   09F5 22                 3991 	ld	(hl+),a
   09F6 73                 3992 	ld	(hl),e
                           3993 ;	game.c 632
                           3994 ;	genAssign
                           3995 ;	AOP_HL for _player
   09F7 21 B3 1A           3996 	ld	hl,#_player
   09FA 4E                 3997 	ld	c,(hl)
   09FB 23                 3998 	inc	hl
   09FC 46                 3999 	ld	b,(hl)
                           4000 ;	genPlus
                           4001 ;	genPlusIncr
                           4002 ;	Can't optimise plus by inc, falling back to the normal way
   09FD 79                 4003 	ld	a,c
   09FE C6 08              4004 	add	a,#0x08
   0A00 4F                 4005 	ld	c,a
   0A01 78                 4006 	ld	a,b
   0A02 CE 00              4007 	adc	a,#0x00
   0A04 47                 4008 	ld	b,a
                           4009 ;	genPointerGet
   0A05 0A                 4010 	ld	a,(bc)
                           4011 ;	genIpush
                           4012 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A06 4F                 4013 	ld	c,a
   0A07 F5                 4014 	push	af
   0A08 33                 4015 	inc	sp
                           4016 ;	genIpush
                           4017 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A09 F8 05              4018 	lda	hl,5(sp)
   0A0B 2A                 4019 	ld	a,(hl+)
   0A0C 66                 4020 	ld	h,(hl)
   0A0D 6F                 4021 	ld	l,a
   0A0E E5                 4022 	push	hl
                           4023 ;	genCall
   0A0F CD EF 0A           4024 	call	__get_next_map_position
   0A12 42                 4025 	ld	b,d
   0A13 4B                 4026 	ld	c,e
   0A14 E8 03              4027 	lda	sp,3(sp)
                           4028 ;	genAssign
                           4029 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A16 F8 04              4030 	lda	hl,4(sp)
   0A18 71                 4031 	ld	(hl),c
   0A19 23                 4032 	inc	hl
   0A1A 70                 4033 	ld	(hl),b
                           4034 ;	game.c 634
                           4035 ;	genLabel
   0A1B                    4036 00116$:
                           4037 ;	genPlus
                           4038 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           4039 ;	Can't optimise plus by inc, falling back to the normal way
   0A1B 11 05 19           4040 	ld	de,#_map
   0A1E F8 06              4041 	lda	hl,6(sp)
   0A20 2A                 4042 	ld	a,(hl+)
   0A21 66                 4043 	ld	h,(hl)
   0A22 6F                 4044 	ld	l,a
   0A23 19                 4045 	add	hl,de
   0A24 4D                 4046 	ld	c,l
   0A25 44                 4047 	ld	b,h
                           4048 ;	genPointerGet
   0A26 0A                 4049 	ld	a,(bc)
   0A27 4F                 4050 	ld	c,a
                           4051 ;	genCast
                           4052 ; Removed redundent load
   0A28 06 00              4053 	ld	b,#0x00
                           4054 ;	genCmpEq
                           4055 ; genCmpEq: left 2, right 2, result 0
   0A2A 79                 4056 	ld	a,c
   0A2B FE 0D              4057 	cp	a,#0x0D
   0A2D C2 35 0A           4058 	jp	nz,00149$
   0A30 78                 4059 	ld	a,b
   0A31 B7                 4060 	or	a,a
   0A32 CA 5B 0A           4061 	jp	z,00117$
   0A35                    4062 00149$:
                           4063 ;	game.c 635
                           4064 ;	genCmpEq
                           4065 ; genCmpEq: left 2, right 2, result 0
   0A35 79                 4066 	ld	a,c
   0A36 FE 0E              4067 	cp	a,#0x0E
   0A38 C2 40 0A           4068 	jp	nz,00150$
   0A3B 78                 4069 	ld	a,b
   0A3C B7                 4070 	or	a,a
   0A3D CA 5B 0A           4071 	jp	z,00117$
   0A40                    4072 00150$:
                           4073 ;	game.c 636
                           4074 ;	genCmpEq
                           4075 ; genCmpEq: left 2, right 2, result 0
   0A40 79                 4076 	ld	a,c
   0A41 FE 0F              4077 	cp	a,#0x0F
   0A43 C2 4B 0A           4078 	jp	nz,00151$
   0A46 78                 4079 	ld	a,b
   0A47 B7                 4080 	or	a,a
   0A48 CA 5B 0A           4081 	jp	z,00117$
   0A4B                    4082 00151$:
                           4083 ;	game.c 637
                           4084 ;	genCmpEq
                           4085 ; genCmpEq: left 2, right 2, result 0
   0A4B 79                 4086 	ld	a,c
   0A4C FE 10              4087 	cp	a,#0x10
   0A4E C2 58 0A           4088 	jp	nz,00152$
   0A51 78                 4089 	ld	a,b
   0A52 B7                 4090 	or	a,a
   0A53 C2 BF 0A           4091 	jp	nz,00122$
   0A56 18 03              4092 	jr	00153$
   0A58                    4093 00152$:
   0A58 C3 BF 0A           4094 	jp	00122$
   0A5B                    4095 00153$:
                           4096 ;	genLabel
   0A5B                    4097 00117$:
                           4098 ;	game.c 639
                           4099 ;	genIpush
                           4100 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4101 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A5B F8 04              4102 	lda	hl,4(sp)
   0A5D 2A                 4103 	ld	a,(hl+)
   0A5E 66                 4104 	ld	h,(hl)
   0A5F 6F                 4105 	ld	l,a
   0A60 E5                 4106 	push	hl
                           4107 ;	genCall
   0A61 CD 40 0F           4108 	call	_can_move_to_map_pos
   0A64 42                 4109 	ld	b,d
   0A65 4B                 4110 	ld	c,e
   0A66 E8 02              4111 	lda	sp,2(sp)
                           4112 ;	genCmpEq
                           4113 ; genCmpEq: left 2, right 2, result 0
   0A68 79                 4114 	ld	a,c
   0A69 B0                 4115 	or	a,b
   0A6A CA BF 0A           4116 	jp	z,00122$
   0A6D                    4117 00154$:
                           4118 ;	game.c 642
                           4119 ;	genAssign
                           4120 ;	AOP_HL for _player
   0A6D 21 B3 1A           4121 	ld	hl,#_player
   0A70 4E                 4122 	ld	c,(hl)
   0A71 23                 4123 	inc	hl
   0A72 46                 4124 	ld	b,(hl)
                           4125 ;	genPlus
                           4126 ;	genPlusIncr
                           4127 ;	Can't optimise plus by inc, falling back to the normal way
   0A73 79                 4128 	ld	a,c
   0A74 C6 08              4129 	add	a,#0x08
   0A76 4F                 4130 	ld	c,a
   0A77 78                 4131 	ld	a,b
   0A78 CE 00              4132 	adc	a,#0x00
   0A7A 47                 4133 	ld	b,a
                           4134 ;	genPointerGet
   0A7B 0A                 4135 	ld	a,(bc)
   0A7C 4F                 4136 	ld	c,a
                           4137 ;	genIpush
                           4138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4139 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A7D F8 04              4140 	lda	hl,4(sp)
   0A7F 2A                 4141 	ld	a,(hl+)
   0A80 66                 4142 	ld	h,(hl)
   0A81 6F                 4143 	ld	l,a
   0A82 E5                 4144 	push	hl
                           4145 ;	genIpush
   0A83 79                 4146 	ld	a,c
   0A84 F5                 4147 	push	af
   0A85 33                 4148 	inc	sp
                           4149 ;	genIpush
                           4150 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A86 F8 09              4151 	lda	hl,9(sp)
   0A88 2A                 4152 	ld	a,(hl+)
   0A89 66                 4153 	ld	h,(hl)
   0A8A 6F                 4154 	ld	l,a
   0A8B E5                 4155 	push	hl
                           4156 ;	genCall
   0A8C CD A3 0B           4157 	call	_dog1_power_apply
   0A8F E8 05              4158 	lda	sp,5(sp)
                           4159 ;	game.c 643
                           4160 ;	genAssign
                           4161 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           4162 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A91 F8 04              4163 	lda	hl,4(sp)
   0A93 2A                 4164 	ld	a,(hl+)
   0A94 5E                 4165 	ld	e,(hl)
   0A95 23                 4166 	inc	hl
   0A96 22                 4167 	ld	(hl+),a
   0A97 73                 4168 	ld	(hl),e
                           4169 ;	game.c 644
                           4170 ;	genAssign
                           4171 ;	AOP_HL for _player
   0A98 21 B3 1A           4172 	ld	hl,#_player
   0A9B 4E                 4173 	ld	c,(hl)
   0A9C 23                 4174 	inc	hl
   0A9D 46                 4175 	ld	b,(hl)
                           4176 ;	genPlus
                           4177 ;	genPlusIncr
                           4178 ;	Can't optimise plus by inc, falling back to the normal way
   0A9E 79                 4179 	ld	a,c
   0A9F C6 08              4180 	add	a,#0x08
   0AA1 4F                 4181 	ld	c,a
   0AA2 78                 4182 	ld	a,b
   0AA3 CE 00              4183 	adc	a,#0x00
   0AA5 47                 4184 	ld	b,a
                           4185 ;	genPointerGet
   0AA6 0A                 4186 	ld	a,(bc)
                           4187 ;	genIpush
                           4188 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AA7 4F                 4189 	ld	c,a
   0AA8 F5                 4190 	push	af
   0AA9 33                 4191 	inc	sp
                           4192 ;	genIpush
                           4193 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AAA F8 05              4194 	lda	hl,5(sp)
   0AAC 2A                 4195 	ld	a,(hl+)
   0AAD 66                 4196 	ld	h,(hl)
   0AAE 6F                 4197 	ld	l,a
   0AAF E5                 4198 	push	hl
                           4199 ;	genCall
   0AB0 CD EF 0A           4200 	call	__get_next_map_position
   0AB3 42                 4201 	ld	b,d
   0AB4 4B                 4202 	ld	c,e
   0AB5 E8 03              4203 	lda	sp,3(sp)
                           4204 ;	genAssign
                           4205 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0AB7 F8 04              4206 	lda	hl,4(sp)
   0AB9 71                 4207 	ld	(hl),c
   0ABA 23                 4208 	inc	hl
   0ABB 70                 4209 	ld	(hl),b
                           4210 ;	genGoto
   0ABC C3 1B 0A           4211 	jp	00116$
                           4212 ;	game.c 654
                           4213 ;	genLabel
   0ABF                    4214 00122$:
                           4215 ;	game.c 659
                           4216 ;	genAssign
                           4217 ;	AOP_HL for _player
   0ABF 21 B3 1A           4218 	ld	hl,#_player
   0AC2 4E                 4219 	ld	c,(hl)
   0AC3 23                 4220 	inc	hl
   0AC4 46                 4221 	ld	b,(hl)
                           4222 ;	genPlus
                           4223 ;	genPlusIncr
   0AC5 03                 4224 	inc	bc
   0AC6 03                 4225 	inc	bc
                           4226 ;	genPointerGet
   0AC7 0A                 4227 	ld	a,(bc)
   0AC8 4F                 4228 	ld	c,a
                           4229 ;	genAssign
                           4230 ;	AOP_HL for _player
                           4231 ;	AOP_STK for _dog1_power_sloc1_1_0
   0AC9 2B                 4232 	dec	hl
   0ACA 2A                 4233 	ld	a,(hl+)
   0ACB 5E                 4234 	ld	e,(hl)
   0ACC F8 00              4235 	lda	hl,0(sp)
   0ACE 22                 4236 	ld	(hl+),a
   0ACF 73                 4237 	ld	(hl),e
                           4238 ;	genPlus
                           4239 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4240 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4241 ;	genPlusIncr
                           4242 ;	Can't optimise plus by inc, falling back to the normal way
   0AD0 2B                 4243 	dec	hl
   0AD1 5E                 4244 	ld	e,(hl)
   0AD2 23                 4245 	inc	hl
   0AD3 56                 4246 	ld	d,(hl)
   0AD4 21 0B 00           4247 	ld	hl,#0x000B
   0AD7 19                 4248 	add	hl,de
   0AD8 7D                 4249 	ld	a,l
   0AD9 54                 4250 	ld	d,h
   0ADA F8 02              4251 	lda	hl,2(sp)
                           4252 ;	genPointerGet
                           4253 ;	AOP_STK for _dog1_power_sloc0_1_0
   0ADC 22                 4254 	ld	(hl+),a
   0ADD 72                 4255 	ld	(hl),d
   0ADE 5F                 4256 	ld	e,a
   0ADF 1A                 4257 	ld	a,(de)
   0AE0 47                 4258 	ld	b,a
                           4259 ;	genIpush
                           4260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AE1 79                 4261 	ld	a,c
   0AE2 F5                 4262 	push	af
   0AE3 33                 4263 	inc	sp
                           4264 ;	genIpush
   0AE4 78                 4265 	ld	a,b
   0AE5 F5                 4266 	push	af
   0AE6 33                 4267 	inc	sp
                           4268 ;	genCall
   0AE7 CD 00 00           4269 	call	_set_sprite_tile
   0AEA E8 02              4270 	lda	sp,2(sp)
                           4271 ;	genLabel
   0AEC                    4272 00123$:
                           4273 ;	genEndFunction
   0AEC E8 08              4274 	lda	sp,8(sp)
   0AEE C9                 4275 	ret
   0AEF                    4276 ___dog1_power_end:
                           4277 ;	game.c 662
                           4278 ;	genLabel
                           4279 ;	genFunction
                           4280 ;	---------------------------------
                           4281 ; Function _get_next_map_position
                           4282 ; ---------------------------------
   0AEF                    4283 ____get_next_map_position_start:
   0AEF                    4284 __get_next_map_position:
   0AEF E8 FE              4285 	lda	sp,-2(sp)
                           4286 ;	game.c 663
                           4287 ;	genCmpLt
                           4288 ;	AOP_STK for 
   0AF1 F8 06              4289 	lda	hl,6(sp)
   0AF3 7E                 4290 	ld	a,(hl)
   0AF4 FE 01              4291 	cp	#0x01
   0AF6 DA 9B 0B           4292 	jp	c,00113$
                           4293 ;	genCmpGt
                           4294 ;	AOP_STK for 
   0AF9 3E 04              4295 	ld	a,#0x04
   0AFB 96                 4296 	sub	a,(hl)
   0AFC DA 9B 0B           4297 	jp	c,00113$
                           4298 ;	genMinus
                           4299 ;	AOP_STK for 
   0AFF 7E                 4300 	ld	a,(hl)
   0B00 C6 FF              4301 	add	a,#0xFF
   0B02 4F                 4302 	ld	c,a
                           4303 ;	genJumpTab
   0B03 59                 4304 	ld	e,c
   0B04 16 00              4305 	ld	d,#0x00
   0B06 21 0D 0B           4306 	ld	hl,#00122$
   0B09 19                 4307 	add	hl,de
   0B0A 19                 4308 	add	hl,de
   0B0B 19                 4309 	add	hl,de
   0B0C E9                 4310 	jp	(hl)
   0B0D                    4311 00122$:
   0B0D C3 19 0B           4312 	jp	00103$
   0B10 C3 38 0B           4313 	jp	00106$
   0B13 C3 5E 0B           4314 	jp	00109$
   0B16 C3 7B 0B           4315 	jp	00112$
                           4316 ;	game.c 668
                           4317 ;	genLabel
   0B19                    4318 00103$:
                           4319 ;	game.c 665
                           4320 ;	genCmpGt
                           4321 ;	AOP_STK for 
   0B19 3E 14              4322 	ld	a,#0x14
   0B1B F8 04              4323 	lda	hl,4(sp)
   0B1D 96                 4324 	sub	a,(hl)
   0B1E 3E 00              4325 	ld	a,#0x00
   0B20 23                 4326 	inc	hl
   0B21 9E                 4327 	sbc	a,(hl)
   0B22 D2 9B 0B           4328 	jp	nc,00113$
                           4329 ;	game.c 666
                           4330 ;	genMinus
                           4331 ;	AOP_STK for 
   0B25 2B                 4332 	dec	hl
   0B26 5E                 4333 	ld	e,(hl)
   0B27 23                 4334 	inc	hl
   0B28 56                 4335 	ld	d,(hl)
   0B29 21 14 00           4336 	ld	hl,#0x0014
   0B2C 7B                 4337 	ld	a,e
   0B2D 95                 4338 	sub	a,l
   0B2E 5F                 4339 	ld	e,a
   0B2F 7A                 4340 	ld	a,d
   0B30 9C                 4341 	sbc	a,h
   0B31 F8 05              4342 	lda	hl,5(sp)
   0B33 32                 4343 	ld      (hl-),a
   0B34 73                 4344 	ld	(hl),e
                           4345 ;	game.c 668
                           4346 ;	genGoto
   0B35 C3 9B 0B           4347 	jp	00113$
                           4348 ;	game.c 673
                           4349 ;	genLabel
   0B38                    4350 00106$:
                           4351 ;	game.c 670
                           4352 ;	genPlus
                           4353 ;	AOP_STK for 
                           4354 ;	genPlusIncr
   0B38 F8 04              4355 	lda	hl,4(sp)
   0B3A 4E                 4356 	ld	c,(hl)
   0B3B 23                 4357 	inc	hl
   0B3C 46                 4358 	ld	b,(hl)
   0B3D 03                 4359 	inc	bc
                           4360 ;	genIpush
                           4361 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B3E C5                 4362 	push	bc
   0B3F 21 14 00           4363 	ld	hl,#0x0014
   0B42 E5                 4364 	push	hl
                           4365 ;	genIpush
   0B43 C5                 4366 	push	bc
                           4367 ;	genCall
   0B44 CD 00 00           4368 	call	__moduint_rrx_s
                           4369 ;	AOP_STK for __get_next_map_position_sloc0_1_0
   0B47 F8 07              4370 	lda	hl,7(sp)
   0B49 72                 4371 	ld	(hl),d
   0B4A 2B                 4372 	dec	hl
   0B4B 73                 4373 	ld	(hl),e
   0B4C E8 04              4374 	lda	sp,4(sp)
   0B4E C1                 4375 	pop	bc
                           4376 ;	genCmpEq
                           4377 ;	AOP_STK for __get_next_map_position_sloc0_1_0
                           4378 ; genCmpEq: left 2, right 2, result 0
   0B4F F8 00              4379 	lda	hl,0(sp)
   0B51 2A                 4380 	ld	a,(hl+)
   0B52 B6                 4381 	or	a,(hl)
   0B53 CA 9B 0B           4382 	jp	z,00113$
   0B56                    4383 00123$:
                           4384 ;	game.c 671
                           4385 ;	genAssign
                           4386 ;	(registers are the same)
                           4387 ;	genAssign
                           4388 ;	AOP_STK for 
   0B56 F8 04              4389 	lda	hl,4(sp)
   0B58 71                 4390 	ld	(hl),c
   0B59 23                 4391 	inc	hl
   0B5A 70                 4392 	ld	(hl),b
                           4393 ;	game.c 673
                           4394 ;	genGoto
   0B5B C3 9B 0B           4395 	jp	00113$
                           4396 ;	game.c 678
                           4397 ;	genLabel
   0B5E                    4398 00109$:
                           4399 ;	game.c 675
                           4400 ;	genCmpLt
                           4401 ;	AOP_STK for 
   0B5E F8 04              4402 	lda	hl,4(sp)
   0B60 7E                 4403 	ld	a,(hl)
   0B61 D6 54              4404 	sub	a,#0x54
   0B63 23                 4405 	inc	hl
   0B64 7E                 4406 	ld	a,(hl)
   0B65 DE 01              4407 	sbc	a,#0x01
   0B67 D2 9B 0B           4408 	jp	nc,00113$
                           4409 ;	game.c 676
                           4410 ;	genPlus
                           4411 ;	AOP_STK for 
                           4412 ;	genPlusIncr
                           4413 ;	Can't optimise plus by inc, falling back to the normal way
   0B6A 2B                 4414 	dec	hl
   0B6B 5E                 4415 	ld	e,(hl)
   0B6C 23                 4416 	inc	hl
   0B6D 56                 4417 	ld	d,(hl)
   0B6E 21 14 00           4418 	ld	hl,#0x0014
   0B71 19                 4419 	add	hl,de
   0B72 7D                 4420 	ld	a,l
   0B73 54                 4421 	ld	d,h
   0B74 F8 04              4422 	lda	hl,4(sp)
   0B76 22                 4423 	ld	(hl+),a
   0B77 72                 4424 	ld	(hl),d
                           4425 ;	game.c 678
                           4426 ;	genGoto
   0B78 C3 9B 0B           4427 	jp	00113$
                           4428 ;	game.c 684
                           4429 ;	genLabel
   0B7B                    4430 00112$:
                           4431 ;	game.c 680
                           4432 ;	genIpush
                           4433 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B7B 21 14 00           4434 	ld	hl,#0x0014
   0B7E E5                 4435 	push	hl
                           4436 ;	genIpush
                           4437 ;	AOP_STK for 
   0B7F F8 06              4438 	lda	hl,6(sp)
   0B81 2A                 4439 	ld	a,(hl+)
   0B82 66                 4440 	ld	h,(hl)
   0B83 6F                 4441 	ld	l,a
   0B84 E5                 4442 	push	hl
                           4443 ;	genCall
   0B85 CD 00 00           4444 	call	__moduint_rrx_s
   0B88 42                 4445 	ld	b,d
   0B89 4B                 4446 	ld	c,e
   0B8A E8 04              4447 	lda	sp,4(sp)
                           4448 ;	genCmpEq
                           4449 ; genCmpEq: left 2, right 2, result 0
   0B8C 79                 4450 	ld	a,c
   0B8D B0                 4451 	or	a,b
   0B8E CA 9B 0B           4452 	jp	z,00113$
   0B91                    4453 00124$:
                           4454 ;	game.c 681
                           4455 ;	genMinus
                           4456 ;	AOP_STK for 
   0B91 F8 04              4457 	lda	hl,4(sp)
   0B93 5E                 4458 	ld	e,(hl)
   0B94 23                 4459 	inc	hl
   0B95 56                 4460 	ld	d,(hl)
   0B96 1B                 4461 	dec	de
   0B97 2B                 4462 	dec	hl
   0B98 73                 4463 	ld	(hl),e
   0B99 23                 4464 	inc	hl
   0B9A 72                 4465 	ld	(hl),d
                           4466 ;	game.c 685
                           4467 ;	genLabel
   0B9B                    4468 00113$:
                           4469 ;	game.c 686
                           4470 ;	genRet
                           4471 ;	AOP_STK for 
   0B9B F8 04              4472 	lda	hl,4(sp)
   0B9D 5E                 4473 	ld	e,(hl)
   0B9E 23                 4474 	inc	hl
   0B9F 56                 4475 	ld	d,(hl)
                           4476 ;	genLabel
   0BA0                    4477 00114$:
                           4478 ;	genEndFunction
   0BA0 E8 02              4479 	lda	sp,2(sp)
   0BA2 C9                 4480 	ret
   0BA3                    4481 ____get_next_map_position_end:
                           4482 ;	game.c 689
                           4483 ;	genLabel
                           4484 ;	genFunction
                           4485 ;	---------------------------------
                           4486 ; Function dog1_power_apply
                           4487 ; ---------------------------------
   0BA3                    4488 ___dog1_power_apply_start:
   0BA3                    4489 _dog1_power_apply:
   0BA3 E8 F9              4490 	lda	sp,-7(sp)
                           4491 ;	game.c 695
                           4492 ;	genPlus
                           4493 ;	AOP_STK for 
                           4494 ;	Can't optimise plus by inc, falling back to the normal way
   0BA5 11 05 19           4495 	ld	de,#_map
   0BA8 F8 09              4496 	lda	hl,9(sp)
   0BAA 2A                 4497 	ld	a,(hl+)
   0BAB 66                 4498 	ld	h,(hl)
   0BAC 6F                 4499 	ld	l,a
   0BAD 19                 4500 	add	hl,de
   0BAE 4D                 4501 	ld	c,l
   0BAF 44                 4502 	ld	b,h
                           4503 ;	genPointerGet
                           4504 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0BB0 0A                 4505 	ld	a,(bc)
   0BB1 F8 04              4506 	lda	hl,4(sp)
                           4507 ;	genCast
                           4508 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4509 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4510 ; Removed redundent load
   0BB3 32                 4511 	ld      (hl-),a
   0BB4 2B                 4512 	dec	hl
   0BB5 22                 4513 	ld	(hl+),a
   0BB6 36 00              4514 	ld	(hl),#0x00
                           4515 ;	genCmpEq
                           4516 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4517 ; genCmpEq: left 2, right 2, result 0
   0BB8 2B                 4518 	dec	hl
   0BB9 7E                 4519 	ld	a,(hl)
   0BBA FE 2D              4520 	cp	a,#0x2D
   0BBC C2 C7 0B           4521 	jp	nz,00132$
   0BBF 23                 4522 	inc	hl
   0BC0 7E                 4523 	ld	a,(hl)
   0BC1 B7                 4524 	or	a,a
   0BC2 C2 CD 0B           4525 	jp	nz,00102$
   0BC5 18 03              4526 	jr	00133$
   0BC7                    4527 00132$:
   0BC7 C3 CD 0B           4528 	jp	00102$
   0BCA                    4529 00133$:
                           4530 ;	game.c 696
                           4531 ;	genAssign (pointer)
   0BCA 3E 2F              4532 	ld	a,#0x2F
   0BCC 02                 4533 	ld	(bc),a
                           4534 ;	genLabel
   0BCD                    4535 00102$:
                           4536 ;	game.c 698
                           4537 ;	genPointerGet
                           4538 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0BCD 0A                 4539 	ld	a,(bc)
   0BCE F8 02              4540 	lda	hl,2(sp)
                           4541 ;	genCast
                           4542 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4543 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4544 ; Removed redundent load
   0BD0 32                 4545 	ld      (hl-),a
   0BD1 2B                 4546 	dec	hl
   0BD2 22                 4547 	ld	(hl+),a
   0BD3 36 00              4548 	ld	(hl),#0x00
                           4549 ;	genCmpEq
                           4550 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4551 ; genCmpEq: left 2, right 2, result 0
   0BD5 2B                 4552 	dec	hl
   0BD6 7E                 4553 	ld	a,(hl)
   0BD7 FE 0F              4554 	cp	a,#0x0F
   0BD9 C2 E4 0B           4555 	jp	nz,00134$
   0BDC 23                 4556 	inc	hl
   0BDD 7E                 4557 	ld	a,(hl)
   0BDE B7                 4558 	or	a,a
   0BDF C2 EA 0B           4559 	jp	nz,00104$
   0BE2 18 03              4560 	jr	00135$
   0BE4                    4561 00134$:
   0BE4 C3 EA 0B           4562 	jp	00104$
   0BE7                    4563 00135$:
                           4564 ;	game.c 699
                           4565 ;	genAssign (pointer)
   0BE7 3E 0D              4566 	ld	a,#0x0D
   0BE9 02                 4567 	ld	(bc),a
                           4568 ;	genLabel
   0BEA                    4569 00104$:
                           4570 ;	game.c 701
                           4571 ;	genPointerGet
                           4572 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0BEA 0A                 4573 	ld	a,(bc)
   0BEB F8 00              4574 	lda	hl,0(sp)
   0BED 77                 4575 	ld	(hl),a
                           4576 ;	genCast
                           4577 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4578 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0BEE 2A                 4579 	ld	a,(hl+)
   0BEF 23                 4580 	inc	hl
   0BF0 22                 4581 	ld	(hl+),a
   0BF1 36 00              4582 	ld	(hl),#0x00
                           4583 ;	genCmpEq
                           4584 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
                           4585 ; genCmpEq: left 2, right 2, result 0
   0BF3 2B                 4586 	dec	hl
   0BF4 7E                 4587 	ld	a,(hl)
   0BF5 FE 10              4588 	cp	a,#0x10
   0BF7 C2 02 0C           4589 	jp	nz,00136$
   0BFA 23                 4590 	inc	hl
   0BFB 7E                 4591 	ld	a,(hl)
   0BFC B7                 4592 	or	a,a
   0BFD C2 08 0C           4593 	jp	nz,00106$
   0C00 18 03              4594 	jr	00137$
   0C02                    4595 00136$:
   0C02 C3 08 0C           4596 	jp	00106$
   0C05                    4597 00137$:
                           4598 ;	game.c 702
                           4599 ;	genAssign (pointer)
   0C05 3E 0C              4600 	ld	a,#0x0C
   0C07 02                 4601 	ld	(bc),a
                           4602 ;	genLabel
   0C08                    4603 00106$:
                           4604 ;	game.c 707
                           4605 ;	genIpush
                           4606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C08 21 14 00           4607 	ld	hl,#0x0014
   0C0B E5                 4608 	push	hl
                           4609 ;	genIpush
                           4610 ;	AOP_STK for 
   0C0C F8 0B              4611 	lda	hl,11(sp)
   0C0E 2A                 4612 	ld	a,(hl+)
   0C0F 66                 4613 	ld	h,(hl)
   0C10 6F                 4614 	ld	l,a
   0C11 E5                 4615 	push	hl
                           4616 ;	genCall
   0C12 CD 00 00           4617 	call	__divuint_rrx_s
   0C15 42                 4618 	ld	b,d
   0C16 4B                 4619 	ld	c,e
   0C17 E8 04              4620 	lda	sp,4(sp)
                           4621 ;	genLeftShift
   0C19 3E 04              4622 	ld	a,#0x03+1
   0C1B 18 04              4623 	jr	00139$
   0C1D                    4624 00138$:
   0C1D CB 21              4625 	sla	c
   0C1F CB 10              4626 	rl	b
   0C21                    4627 00139$:
   0C21 3D                 4628 	dec	a
   0C22 20 F9              4629 	jr	nz,00138$
                           4630 ;	genPlus
                           4631 ;	genPlusIncr
                           4632 ;	Can't optimise plus by inc, falling back to the normal way
   0C24 79                 4633 	ld	a,c
   0C25 C6 10              4634 	add	a,#0x10
   0C27 4F                 4635 	ld	c,a
   0C28 78                 4636 	ld	a,b
   0C29 CE 00              4637 	adc	a,#0x00
   0C2B 47                 4638 	ld	b,a
                           4639 ;	genCast
                           4640 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C2C F8 06              4641 	lda	hl,6(sp)
   0C2E 71                 4642 	ld	(hl),c
                           4643 ;	game.c 708
                           4644 ;	genIpush
                           4645 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C2F 21 14 00           4646 	ld	hl,#0x0014
   0C32 E5                 4647 	push	hl
                           4648 ;	genIpush
                           4649 ;	AOP_STK for 
   0C33 F8 0B              4650 	lda	hl,11(sp)
   0C35 2A                 4651 	ld	a,(hl+)
   0C36 66                 4652 	ld	h,(hl)
   0C37 6F                 4653 	ld	l,a
   0C38 E5                 4654 	push	hl
                           4655 ;	genCall
   0C39 CD 00 00           4656 	call	__moduint_rrx_s
   0C3C 4A                 4657 	ld	c,d
   0C3D 43                 4658 	ld	b,e
   0C3E E8 04              4659 	lda	sp,4(sp)
                           4660 ;	genLeftShift
   0C40 3E 04              4661 	ld	a,#0x03+1
   0C42 18 04              4662 	jr	00141$
   0C44                    4663 00140$:
   0C44 CB 20              4664 	sla	b
   0C46 CB 11              4665 	rl	c
   0C48                    4666 00141$:
   0C48 3D                 4667 	dec	a
   0C49 20 F9              4668 	jr	nz,00140$
                           4669 ;	genPlus
                           4670 ;	genPlusIncr
                           4671 ;	Can't optimise plus by inc, falling back to the normal way
   0C4B 78                 4672 	ld	a,b
   0C4C C6 08              4673 	add	a,#0x08
   0C4E 47                 4674 	ld	b,a
   0C4F 79                 4675 	ld	a,c
   0C50 CE 00              4676 	adc	a,#0x00
   0C52 4F                 4677 	ld	c,a
                           4678 ;	genCast
   0C53 48                 4679 	ld	c,b
                           4680 ;	game.c 709
                           4681 ;	genIpush
                           4682 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C54 C5                 4683 	push	bc
   0C55 21 05 0F           4684 	ld	hl,#0x0F05
   0C58 E5                 4685 	push	hl
                           4686 ;	genCall
   0C59 CD 00 00           4687 	call	_set_sprite_tile
   0C5C E8 02              4688 	lda	sp,2(sp)
   0C5E E1                 4689 	pop	hl
   0C5F 4D                 4690 	ld	c,l
                           4691 ;	game.c 712
                           4692 ;	genAssign
                           4693 ;	AOP_STK for _dog1_power_apply_i_1_1
   0C60 F8 05              4694 	lda	hl,5(sp)
   0C62 36 04              4695 	ld	(hl),#0x04
                           4696 ;	game.c 713
                           4697 ;	genIpush
                           4698 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C64 C5                 4699 	push	bc
                           4700 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C65 23                 4701 	inc	hl
   0C66 7E                 4702 	ld	a,(hl)
   0C67 F5                 4703 	push	af
   0C68 33                 4704 	inc	sp
                           4705 ;	genIpush
   0C69 79                 4706 	ld	a,c
   0C6A F5                 4707 	push	af
   0C6B 33                 4708 	inc	sp
                           4709 ;	genIpush
   0C6C 3E 05              4710 	ld	a,#0x05
   0C6E F5                 4711 	push	af
   0C6F 33                 4712 	inc	sp
                           4713 ;	genCall
   0C70 CD 00 00           4714 	call	_move_sprite
   0C73 E8 03              4715 	lda	sp,3(sp)
   0C75 E1                 4716 	pop	hl
   0C76 4D                 4717 	ld	c,l
                           4718 ;	game.c 715
                           4719 ;	genLabel
   0C77                    4720 00112$:
                           4721 ;	genCmpEq
                           4722 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4723 ; genCmpEq: left 1, right 1, result 0
   0C77 F8 05              4724 	lda	hl,5(sp)
   0C79 7E                 4725 	ld	a,(hl)
   0C7A B7                 4726 	or	a,a
   0C7B CA E1 0C           4727 	jp	z,00114$
   0C7E                    4728 00142$:
                           4729 ;	game.c 716
                           4730 ;	genCmpLt
                           4731 ;	AOP_STK for 
   0C7E F8 0B              4732 	lda	hl,11(sp)
   0C80 7E                 4733 	ld	a,(hl)
   0C81 FE 01              4734 	cp	#0x01
   0C83 DA BB 0C           4735 	jp	c,00111$
                           4736 ;	genCmpGt
                           4737 ;	AOP_STK for 
   0C86 3E 04              4738 	ld	a,#0x04
   0C88 96                 4739 	sub	a,(hl)
   0C89 DA BB 0C           4740 	jp	c,00111$
                           4741 ;	genMinus
                           4742 ;	AOP_STK for 
   0C8C 7E                 4743 	ld	a,(hl)
   0C8D C6 FF              4744 	add	a,#0xFF
   0C8F 47                 4745 	ld	b,a
                           4746 ;	genJumpTab
   0C90 58                 4747 	ld	e,b
   0C91 16 00              4748 	ld	d,#0x00
   0C93 21 9A 0C           4749 	ld	hl,#00143$
   0C96 19                 4750 	add	hl,de
   0C97 19                 4751 	add	hl,de
   0C98 19                 4752 	add	hl,de
   0C99 E9                 4753 	jp	(hl)
   0C9A                    4754 00143$:
   0C9A C3 A6 0C           4755 	jp	00107$
   0C9D C3 AD 0C           4756 	jp	00108$
   0CA0 C3 B2 0C           4757 	jp	00109$
   0CA3 C3 B9 0C           4758 	jp	00110$
                           4759 ;	game.c 718
                           4760 ;	genLabel
   0CA6                    4761 00107$:
                           4762 ;	genMinus
                           4763 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CA6 F8 06              4764 	lda	hl,6(sp)
   0CA8 35                 4765 	dec	(hl)
   0CA9 35                 4766 	dec	(hl)
                           4767 ;	game.c 719
                           4768 ;	genGoto
   0CAA C3 BB 0C           4769 	jp	00111$
                           4770 ;	game.c 721
                           4771 ;	genLabel
   0CAD                    4772 00108$:
                           4773 ;	genPlus
                           4774 ;	genPlusIncr
                           4775 ; Removed redundent load
   0CAD 0C                 4776 	inc	c
   0CAE 0C                 4777 	inc	c
                           4778 ;	game.c 722
                           4779 ;	genGoto
   0CAF C3 BB 0C           4780 	jp	00111$
                           4781 ;	game.c 724
                           4782 ;	genLabel
   0CB2                    4783 00109$:
                           4784 ;	genPlus
                           4785 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4786 ;	genPlusIncr
   0CB2 F8 06              4787 	lda	hl,6(sp)
   0CB4 34                 4788 	inc	(hl)
   0CB5 34                 4789 	inc	(hl)
                           4790 ;	game.c 725
                           4791 ;	genGoto
   0CB6 C3 BB 0C           4792 	jp	00111$
                           4793 ;	game.c 727
                           4794 ;	genLabel
   0CB9                    4795 00110$:
                           4796 ;	genMinus
   0CB9 0D                 4797 	dec	c
   0CBA 0D                 4798 	dec	c
                           4799 ;	game.c 729
                           4800 ;	genLabel
   0CBB                    4801 00111$:
                           4802 ;	game.c 730
                           4803 ;	genIpush
                           4804 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CBB C5                 4805 	push	bc
   0CBC 3E 02              4806 	ld	a,#0x02
   0CBE F5                 4807 	push	af
   0CBF 33                 4808 	inc	sp
                           4809 ;	genCall
   0CC0 CD 00 00           4810 	call	_performantDelay
   0CC3 E8 01              4811 	lda	sp,1(sp)
   0CC5 E1                 4812 	pop	hl
   0CC6 4D                 4813 	ld	c,l
                           4814 ;	game.c 731
                           4815 ;	genIpush
                           4816 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CC7 C5                 4817 	push	bc
                           4818 ;	AOP_STK for _dog1_power_apply_y_1_1
   0CC8 F8 08              4819 	lda	hl,8(sp)
   0CCA 7E                 4820 	ld	a,(hl)
   0CCB F5                 4821 	push	af
   0CCC 33                 4822 	inc	sp
                           4823 ;	genIpush
   0CCD 79                 4824 	ld	a,c
   0CCE F5                 4825 	push	af
   0CCF 33                 4826 	inc	sp
                           4827 ;	genIpush
   0CD0 3E 05              4828 	ld	a,#0x05
   0CD2 F5                 4829 	push	af
   0CD3 33                 4830 	inc	sp
                           4831 ;	genCall
   0CD4 CD 00 00           4832 	call	_move_sprite
   0CD7 E8 03              4833 	lda	sp,3(sp)
   0CD9 E1                 4834 	pop	hl
   0CDA 4D                 4835 	ld	c,l
                           4836 ;	game.c 732
                           4837 ;	genMinus
                           4838 ;	AOP_STK for _dog1_power_apply_i_1_1
   0CDB F8 05              4839 	lda	hl,5(sp)
   0CDD 35                 4840 	dec	(hl)
                           4841 ;	genGoto
   0CDE C3 77 0C           4842 	jp	00112$
                           4843 ;	genLabel
   0CE1                    4844 00114$:
                           4845 ;	game.c 737
                           4846 ;	genPlus
                           4847 ;	AOP_STK for 
                           4848 ;	Can't optimise plus by inc, falling back to the normal way
   0CE1 11 05 19           4849 	ld	de,#_map
   0CE4 F8 0C              4850 	lda	hl,12(sp)
   0CE6 2A                 4851 	ld	a,(hl+)
   0CE7 66                 4852 	ld	h,(hl)
   0CE8 6F                 4853 	ld	l,a
   0CE9 19                 4854 	add	hl,de
   0CEA 4D                 4855 	ld	c,l
   0CEB 44                 4856 	ld	b,h
                           4857 ;	genPointerGet
                           4858 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0CEC 0A                 4859 	ld	a,(bc)
   0CED F8 00              4860 	lda	hl,0(sp)
                           4861 ;	genCmpLt
                           4862 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0CEF 77                 4863 	ld      (hl),a
                           4864 ; Removed redundent load
   0CF0 FE 0B              4865 	cp	#0x0B
   0CF2 DA 2C 0D           4866 	jp	c,00119$
                           4867 ;	genCmpGt
                           4868 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
   0CF5 3E 0E              4869 	ld	a,#0x0E
   0CF7 96                 4870 	sub	a,(hl)
   0CF8 DA 2C 0D           4871 	jp	c,00119$
                           4872 ;	genMinus
                           4873 ;	AOP_STK for _dog1_power_apply_sloc2_1_0
                           4874 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0CFB 7E                 4875 	ld	a,(hl)
   0CFC C6 F5              4876 	add	a,#0xF5
   0CFE 23                 4877 	inc	hl
   0CFF 23                 4878 	inc	hl
                           4879 ;	genJumpTab
                           4880 ;	AOP_STK for _dog1_power_apply_sloc1_1_0
   0D00 77                 4881 	ld      (hl),a
   0D01 5F                 4882 	ld      e,a
   0D02 16 00              4883 	ld	d,#0x00
   0D04 21 0B 0D           4884 	ld	hl,#00144$
   0D07 19                 4885 	add	hl,de
   0D08 19                 4886 	add	hl,de
   0D09 19                 4887 	add	hl,de
   0D0A E9                 4888 	jp	(hl)
   0D0B                    4889 00144$:
   0D0B C3 17 0D           4890 	jp	00115$
   0D0E C3 1D 0D           4891 	jp	00116$
   0D11 C3 20 0D           4892 	jp	00117$
   0D14 C3 26 0D           4893 	jp	00118$
                           4894 ;	game.c 739
                           4895 ;	genLabel
   0D17                    4896 00115$:
                           4897 ;	genAssign (pointer)
   0D17 3E 30              4898 	ld	a,#0x30
   0D19 02                 4899 	ld	(bc),a
                           4900 ;	game.c 740
                           4901 ;	genGoto
   0D1A C3 2F 0D           4902 	jp	00120$
                           4903 ;	game.c 742
                           4904 ;	genLabel
   0D1D                    4905 00116$:
                           4906 ;	genGoto
   0D1D C3 2F 0D           4907 	jp	00120$
                           4908 ;	game.c 744
                           4909 ;	genLabel
   0D20                    4910 00117$:
                           4911 ;	genAssign (pointer)
   0D20 3E 0F              4912 	ld	a,#0x0F
   0D22 02                 4913 	ld	(bc),a
                           4914 ;	game.c 745
                           4915 ;	genGoto
   0D23 C3 2F 0D           4916 	jp	00120$
                           4917 ;	game.c 747
                           4918 ;	genLabel
   0D26                    4919 00118$:
                           4920 ;	genAssign (pointer)
   0D26 3E 10              4921 	ld	a,#0x10
   0D28 02                 4922 	ld	(bc),a
                           4923 ;	game.c 748
                           4924 ;	genGoto
   0D29 C3 2F 0D           4925 	jp	00120$
                           4926 ;	game.c 750
                           4927 ;	genLabel
   0D2C                    4928 00119$:
                           4929 ;	genAssign (pointer)
   0D2C 3E 2D              4930 	ld	a,#0x2D
   0D2E 02                 4931 	ld	(bc),a
                           4932 ;	game.c 752
                           4933 ;	genLabel
   0D2F                    4934 00120$:
                           4935 ;	game.c 753
                           4936 ;	genIpush
                           4937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D2F 21 05 19           4938 	ld	hl,#_map
   0D32 E5                 4939 	push	hl
                           4940 ;	genIpush
   0D33 21 14 12           4941 	ld	hl,#0x1214
   0D36 E5                 4942 	push	hl
                           4943 ;	genIpush
   0D37 21 00 00           4944 	ld	hl,#0x0000
   0D3A E5                 4945 	push	hl
                           4946 ;	genCall
   0D3B CD 00 00           4947 	call	_set_bkg_tiles
   0D3E E8 06              4948 	lda	sp,6(sp)
                           4949 ;	game.c 754
                           4950 ;	genIpush
                           4951 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D40 21 00 00           4952 	ld	hl,#0x0000
   0D43 E5                 4953 	push	hl
                           4954 ;	genIpush
   0D44 3E 05              4955 	ld	a,#0x05
   0D46 F5                 4956 	push	af
   0D47 33                 4957 	inc	sp
                           4958 ;	genCall
   0D48 CD 00 00           4959 	call	_move_sprite
   0D4B E8 03              4960 	lda	sp,3(sp)
                           4961 ;	genLabel
   0D4D                    4962 00121$:
                           4963 ;	genEndFunction
   0D4D E8 07              4964 	lda	sp,7(sp)
   0D4F C9                 4965 	ret
   0D50                    4966 ___dog1_power_apply_end:
                           4967 ;	game.c 761
                           4968 ;	genLabel
                           4969 ;	genFunction
                           4970 ;	---------------------------------
                           4971 ; Function _get_map_position_from_xy
                           4972 ; ---------------------------------
   0D50                    4973 ____get_map_position_from_xy_start:
   0D50                    4974 __get_map_position_from_xy:
   0D50 E8 FC              4975 	lda	sp,-4(sp)
                           4976 ;	game.c 769
                           4977 ;	genCast
                           4978 ;	AOP_STK for 
   0D52 F8 06              4979 	lda	hl,6(sp)
   0D54 4E                 4980 	ld	c,(hl)
   0D55 06 00              4981 	ld	b,#0x00
                           4982 ;	genRightShift
   0D57 CB 38              4983 	srl	b
   0D59 CB 19              4984 	rr	c
   0D5B CB 38              4985 	srl	b
   0D5D CB 19              4986 	rr	c
   0D5F CB 38              4987 	srl	b
   0D61 CB 19              4988 	rr	c
                           4989 ;	genMinus
   0D63 0B                 4990 	dec	bc
                           4991 ;	genCast
                           4992 ;	AOP_STK for __get_map_position_from_xy__x_1_1
   0D64 F8 03              4993 	lda	hl,3(sp)
   0D66 71                 4994 	ld	(hl),c
                           4995 ;	game.c 770
                           4996 ;	genCast
                           4997 ;	AOP_STK for 
   0D67 F8 07              4998 	lda	hl,7(sp)
   0D69 46                 4999 	ld	b,(hl)
   0D6A 0E 00              5000 	ld	c,#0x00
                           5001 ;	genRightShift
   0D6C CB 39              5002 	srl	c
   0D6E CB 18              5003 	rr	b
   0D70 CB 39              5004 	srl	c
   0D72 CB 18              5005 	rr	b
   0D74 CB 39              5006 	srl	c
   0D76 CB 18              5007 	rr	b
                           5008 ;	genMinus
   0D78 58                 5009 	ld	e,b
   0D79 51                 5010 	ld	d,c
   0D7A 1B                 5011 	dec	de
   0D7B 1B                 5012 	dec	de
   0D7C 43                 5013 	ld	b,e
   0D7D 4A                 5014 	ld	c,d
                           5015 ;	genCast
                           5016 ;	AOP_STK for __get_map_position_from_xy__y_1_1
   0D7E F8 02              5017 	lda	hl,2(sp)
   0D80 70                 5018 	ld	(hl),b
                           5019 ;	game.c 774
                           5020 ;	genCast
                           5021 ;	AOP_STK for __get_map_position_from_xy__x_1_1
                           5022 ;	AOP_STK for __get_map_position_from_xy_map_position_1_1
   0D81 23                 5023 	inc	hl
   0D82 7E                 5024 	ld	a,(hl)
   0D83 F8 00              5025 	lda	hl,0(sp)
   0D85 22                 5026 	ld	(hl+),a
   0D86 36 00              5027 	ld	(hl),#0x00
                           5028 ;	game.c 775
                           5029 ;	genCast
                           5030 ;	AOP_STK for __get_map_position_from_xy__y_1_1
   0D88 23                 5031 	inc	hl
   0D89 4E                 5032 	ld	c,(hl)
   0D8A 06 00              5033 	ld	b,#0x00
                           5034 ;	genMult
   0D8C 59                 5035 	ld	e,c
   0D8D 50                 5036 	ld	d,b
   0D8E 6B                 5037 	ld	l,e
   0D8F 62                 5038 	ld	h,d
   0D90 29                 5039 	add	hl,hl
   0D91 29                 5040 	add	hl,hl
   0D92 19                 5041 	add	hl,de
   0D93 29                 5042 	add	hl,hl
   0D94 29                 5043 	add	hl,hl
   0D95 4D                 5044 	ld	c,l
   0D96 44                 5045 	ld	b,h
                           5046 ;	genPlus
                           5047 ;	AOP_STK for __get_map_position_from_xy_map_position_1_1
                           5048 ;	Can't optimise plus by inc, falling back to the normal way
   0D97 F8 00              5049 	lda	hl,0(sp)
   0D99 2A                 5050 	ld	a,(hl+)
   0D9A 66                 5051 	ld	h,(hl)
   0D9B 6F                 5052 	ld	l,a
   0D9C 09                 5053 	add	hl,bc
   0D9D 7D                 5054 	ld	a,l
   0D9E 54                 5055 	ld	d,h
   0D9F F8 00              5056 	lda	hl,0(sp)
   0DA1 22                 5057 	ld	(hl+),a
   0DA2 72                 5058 	ld	(hl),d
                           5059 ;	game.c 777
                           5060 ;	genRet
                           5061 ;	AOP_STK for __get_map_position_from_xy_map_position_1_1
   0DA3 2B                 5062 	dec	hl
   0DA4 5E                 5063 	ld	e,(hl)
   0DA5 23                 5064 	inc	hl
   0DA6 56                 5065 	ld	d,(hl)
                           5066 ;	genLabel
   0DA7                    5067 00101$:
                           5068 ;	genEndFunction
   0DA7 E8 04              5069 	lda	sp,4(sp)
   0DA9 C9                 5070 	ret
   0DAA                    5071 ____get_map_position_from_xy_end:
                           5072 ;	game.c 780
                           5073 ;	genLabel
                           5074 ;	genFunction
                           5075 ;	---------------------------------
                           5076 ; Function player_input
                           5077 ; ---------------------------------
   0DAA                    5078 ___player_input_start:
   0DAA                    5079 _player_input:
   0DAA E8 FB              5080 	lda	sp,-5(sp)
                           5081 ;	game.c 783
                           5082 ;	genAssign
                           5083 ;	AOP_STK for 
   0DAC F8 07              5084 	lda	hl,7(sp)
   0DAE 4E                 5085 	ld	c,(hl)
   0DAF 23                 5086 	inc	hl
   0DB0 46                 5087 	ld	b,(hl)
                           5088 ;	genPointerGet
                           5089 ;	AOP_STK for _player_input_sloc0_1_0
   0DB1 59                 5090 	ld	e,c
   0DB2 50                 5091 	ld	d,b
   0DB3 1A                 5092 	ld	a,(de)
   0DB4 F8 03              5093 	lda	hl,3(sp)
   0DB6 77                 5094 	ld	(hl),a
   0DB7 13                 5095 	inc	de
   0DB8 1A                 5096 	ld	a,(de)
   0DB9 23                 5097 	inc	hl
                           5098 ;	genPlus
                           5099 ;	AOP_STK for _player_input_sloc0_1_0
                           5100 ;	AOP_STK for _player_input_sloc1_1_0
                           5101 ;	genPlusIncr
                           5102 ;	Can't optimise plus by inc, falling back to the normal way
   0DBA 32                 5103 	ld      (hl-),a
   0DBB 5E                 5104 	ld	e,(hl)
   0DBC 23                 5105 	inc	hl
   0DBD 56                 5106 	ld	d,(hl)
   0DBE 21 0A 00           5107 	ld	hl,#0x000A
   0DC1 19                 5108 	add	hl,de
   0DC2 7D                 5109 	ld	a,l
   0DC3 54                 5110 	ld	d,h
   0DC4 F8 01              5111 	lda	hl,1(sp)
                           5112 ;	genPointerGet
                           5113 ;	AOP_STK for _player_input_sloc1_1_0
                           5114 ;	AOP_STK for _player_input_sloc0_1_0
   0DC6 22                 5115 	ld	(hl+),a
   0DC7 72                 5116 	ld	(hl),d
   0DC8 5F                 5117 	ld	e,a
   0DC9 1A                 5118 	ld	a,(de)
   0DCA 23                 5119 	inc	hl
                           5120 ;	genCmpEq
                           5121 ;	AOP_STK for _player_input_sloc0_1_0
                           5122 ; genCmpEq: left 1, right 1, result 0
   0DCB 77                 5123 	ld      (hl),a
                           5124 ; Removed redundent load
   0DCC B7                 5125 	or	a,a
   0DCD C2 3D 0F           5126 	jp	nz,00119$
   0DD0 18 03              5127 	jr	00134$
   0DD2                    5128 00133$:
   0DD2 C3 3D 0F           5129 	jp	00119$
   0DD5                    5130 00134$:
                           5131 ;	genCmpEq
                           5132 ;	AOP_HL for _input_timer
                           5133 ; genCmpEq: left 1, right 1, result 0
   0DD5 21 03 19           5134 	ld	hl,#_input_timer
   0DD8 7E                 5135 	ld	a,(hl)
   0DD9 B7                 5136 	or	a,a
   0DDA C2 3D 0F           5137 	jp	nz,00119$
   0DDD 18 03              5138 	jr	00136$
   0DDF                    5139 00135$:
   0DDF C3 3D 0F           5140 	jp	00119$
   0DE2                    5141 00136$:
                           5142 ;	game.c 785
                           5143 ;	genCall
                           5144 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0DE2 C5                 5145 	push	bc
   0DE3 CD 00 00           5146 	call	_joypad
                           5147 ;	AOP_STK for _player_input_sloc1_1_0
   0DE6 F8 03              5148 	lda	hl,3(sp)
   0DE8 73                 5149 	ld	(hl),e
   0DE9 C1                 5150 	pop	bc
                           5151 ;	genCmpEq
                           5152 ;	AOP_STK for _player_input_sloc1_1_0
                           5153 ; genCmpEq: left 1, right 1, result 0
   0DEA F8 01              5154 	lda	hl,1(sp)
   0DEC 7E                 5155 	ld	a,(hl)
   0DED FE 01              5156 	cp	a,#0x01
   0DEF CA 9D 0E           5157 	jp	z,00108$
   0DF2                    5158 00137$:
                           5159 ;	genCmpEq
                           5160 ;	AOP_STK for _player_input_sloc1_1_0
                           5161 ; genCmpEq: left 1, right 1, result 0
   0DF2 F8 01              5162 	lda	hl,1(sp)
   0DF4 7E                 5163 	ld	a,(hl)
   0DF5 FE 02              5164 	cp	a,#0x02
   0DF7 CA 7E 0E           5165 	jp	z,00107$
   0DFA                    5166 00138$:
                           5167 ;	genCmpEq
                           5168 ;	AOP_STK for _player_input_sloc1_1_0
                           5169 ; genCmpEq: left 1, right 1, result 0
   0DFA F8 01              5170 	lda	hl,1(sp)
   0DFC 7E                 5171 	ld	a,(hl)
   0DFD FE 04              5172 	cp	a,#0x04
   0DFF CA BC 0E           5173 	jp	z,00109$
   0E02                    5174 00139$:
                           5175 ;	genCmpEq
                           5176 ;	AOP_STK for _player_input_sloc1_1_0
                           5177 ; genCmpEq: left 1, right 1, result 0
   0E02 F8 01              5178 	lda	hl,1(sp)
   0E04 7E                 5179 	ld	a,(hl)
   0E05 FE 08              5180 	cp	a,#0x08
   0E07 CA DB 0E           5181 	jp	z,00110$
   0E0A                    5182 00140$:
                           5183 ;	genCmpEq
                           5184 ;	AOP_STK for _player_input_sloc1_1_0
                           5185 ; genCmpEq: left 1, right 1, result 0
   0E0A F8 01              5186 	lda	hl,1(sp)
   0E0C 7E                 5187 	ld	a,(hl)
   0E0D FE 10              5188 	cp	a,#0x10
   0E0F CA 1D 0E           5189 	jp	z,00103$
   0E12                    5190 00141$:
                           5191 ;	genCmpEq
                           5192 ;	AOP_STK for _player_input_sloc1_1_0
                           5193 ; genCmpEq: left 1, right 1, result 0
   0E12 F8 01              5194 	lda	hl,1(sp)
   0E14 7E                 5195 	ld	a,(hl)
   0E15 FE 20              5196 	cp	a,#0x20
   0E17 CA 76 0E           5197 	jp	z,00106$
   0E1A                    5198 00142$:
                           5199 ;	genGoto
   0E1A C3 F7 0E           5200 	jp	00111$
                           5201 ;	game.c 791
                           5202 ;	genLabel
   0E1D                    5203 00103$:
                           5204 ;	game.c 787
                           5205 ;	genPointerGet
                           5206 ;	AOP_STK for _player_input_sloc1_1_0
   0E1D 59                 5207 	ld	e,c
   0E1E 50                 5208 	ld	d,b
   0E1F 1A                 5209 	ld	a,(de)
   0E20 F8 01              5210 	lda	hl,1(sp)
   0E22 77                 5211 	ld	(hl),a
   0E23 13                 5212 	inc	de
   0E24 1A                 5213 	ld	a,(de)
   0E25 23                 5214 	inc	hl
                           5215 ;	genPlus
                           5216 ;	AOP_STK for _player_input_sloc1_1_0
                           5217 ;	AOP_STK for _player_input_sloc0_1_0
                           5218 ;	genPlusIncr
                           5219 ;	Can't optimise plus by inc, falling back to the normal way
   0E26 32                 5220 	ld      (hl-),a
   0E27 5E                 5221 	ld	e,(hl)
   0E28 23                 5222 	inc	hl
   0E29 56                 5223 	ld	d,(hl)
   0E2A 21 0B 00           5224 	ld	hl,#0x000B
   0E2D 19                 5225 	add	hl,de
   0E2E 7D                 5226 	ld	a,l
   0E2F 54                 5227 	ld	d,h
   0E30 F8 03              5228 	lda	hl,3(sp)
                           5229 ;	genPointerGet
                           5230 ;	AOP_STK for _player_input_sloc0_1_0
                           5231 ;	AOP_STK for _player_input_sloc2_1_0
   0E32 22                 5232 	ld	(hl+),a
   0E33 72                 5233 	ld	(hl),d
   0E34 5F                 5234 	ld	e,a
   0E35 1A                 5235 	ld	a,(de)
   0E36 F8 00              5236 	lda	hl,0(sp)
                           5237 ;	genCmpEq
                           5238 ;	AOP_STK for _player_input_sloc2_1_0
                           5239 ; genCmpEq: left 1, right 1, result 0
   0E38 77                 5240 	ld      (hl),a
                           5241 ; Removed redundent load
   0E39 FE 01              5242 	cp	a,#0x01
   0E3B C2 61 0E           5243 	jp	nz,00102$
   0E3E 18 03              5244 	jr	00144$
   0E40                    5245 00143$:
   0E40 C3 61 0E           5246 	jp	00102$
   0E43                    5247 00144$:
                           5248 ;	game.c 788
                           5249 ;	genPlus
                           5250 ;	AOP_STK for _player_input_sloc1_1_0
                           5251 ;	genPlusIncr
                           5252 ;	Can't optimise plus by inc, falling back to the normal way
   0E43 F8 01              5253 	lda	hl,1(sp)
   0E45 5E                 5254 	ld	e,(hl)
   0E46 23                 5255 	inc	hl
   0E47 56                 5256 	ld	d,(hl)
   0E48 21 0A 00           5257 	ld	hl,#0x000A
   0E4B 19                 5258 	add	hl,de
   0E4C 7D                 5259 	ld	a,l
   0E4D 54                 5260 	ld	d,h
   0E4E 6F                 5261 	ld	l,a
   0E4F 62                 5262 	ld	h,d
                           5263 ;	genAssign (pointer)
   0E50 36 10              5264 	ld	(hl),#0x10
                           5265 ;	game.c 789
                           5266 ;	genPlus
                           5267 ;	AOP_STK for _player_input_sloc1_1_0
                           5268 ;	genPlusIncr
                           5269 ;	Can't optimise plus by inc, falling back to the normal way
   0E52 F8 01              5270 	lda	hl,1(sp)
   0E54 5E                 5271 	ld	e,(hl)
   0E55 23                 5272 	inc	hl
   0E56 56                 5273 	ld	d,(hl)
   0E57 21 09 00           5274 	ld	hl,#0x0009
   0E5A 19                 5275 	add	hl,de
   0E5B 7D                 5276 	ld	a,l
   0E5C 54                 5277 	ld	d,h
   0E5D 6F                 5278 	ld	l,a
   0E5E 62                 5279 	ld	h,d
                           5280 ;	genAssign (pointer)
   0E5F 36 01              5281 	ld	(hl),#0x01
                           5282 ;	genLabel
   0E61                    5283 00102$:
                           5284 ;	game.c 791
                           5285 ;	genCmpEq
                           5286 ;	AOP_STK for _player_input_sloc2_1_0
                           5287 ; genCmpEq: left 1, right 1, result 0
   0E61 F8 00              5288 	lda	hl,0(sp)
   0E63 7E                 5289 	ld	a,(hl)
   0E64 FE 02              5290 	cp	a,#0x02
   0E66 C2 F7 0E           5291 	jp	nz,00111$
   0E69 18 03              5292 	jr	00146$
   0E6B                    5293 00145$:
   0E6B C3 F7 0E           5294 	jp	00111$
   0E6E                    5295 00146$:
                           5296 ;	game.c 792
                           5297 ;	genCall
                           5298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E6E C5                 5299 	push	bc
   0E6F CD 58 08           5300 	call	_dog1_power
   0E72 C1                 5301 	pop	bc
                           5302 ;	game.c 796
                           5303 ;	genGoto
   0E73 C3 F7 0E           5304 	jp	00111$
                           5305 ;	game.c 800
                           5306 ;	genLabel
   0E76                    5307 00106$:
                           5308 ;	genCall
                           5309 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E76 C5                 5310 	push	bc
   0E77 CD CA 01           5311 	call	_change_char
   0E7A C1                 5312 	pop	bc
                           5313 ;	game.c 801
                           5314 ;	genGoto
   0E7B C3 F7 0E           5315 	jp	00111$
                           5316 ;	game.c 804
                           5317 ;	genLabel
   0E7E                    5318 00107$:
                           5319 ;	genAssign
                           5320 ;	AOP_HL for _input_timer
   0E7E 21 03 19           5321 	ld	hl,#_input_timer
   0E81 36 04              5322 	ld	(hl),#0x04
                           5323 ;	game.c 805
                           5324 ;	genPointerGet
                           5325 ;	AOP_STK for _player_input_sloc1_1_0
   0E83 59                 5326 	ld	e,c
   0E84 50                 5327 	ld	d,b
   0E85 1A                 5328 	ld	a,(de)
   0E86 F8 01              5329 	lda	hl,1(sp)
   0E88 77                 5330 	ld	(hl),a
   0E89 13                 5331 	inc	de
   0E8A 1A                 5332 	ld	a,(de)
   0E8B 23                 5333 	inc	hl
                           5334 ;	genPlus
                           5335 ;	AOP_STK for _player_input_sloc1_1_0
                           5336 ;	genPlusIncr
                           5337 ;	Can't optimise plus by inc, falling back to the normal way
   0E8C 32                 5338 	ld      (hl-),a
   0E8D 5E                 5339 	ld	e,(hl)
   0E8E 23                 5340 	inc	hl
   0E8F 56                 5341 	ld	d,(hl)
   0E90 21 08 00           5342 	ld	hl,#0x0008
   0E93 19                 5343 	add	hl,de
   0E94 7D                 5344 	ld	a,l
   0E95 54                 5345 	ld	d,h
   0E96 6F                 5346 	ld	l,a
   0E97 62                 5347 	ld	h,d
                           5348 ;	genAssign (pointer)
   0E98 36 04              5349 	ld	(hl),#0x04
                           5350 ;	game.c 806
                           5351 ;	genGoto
   0E9A C3 F7 0E           5352 	jp	00111$
                           5353 ;	game.c 808
                           5354 ;	genLabel
   0E9D                    5355 00108$:
                           5356 ;	genAssign
                           5357 ;	AOP_HL for _input_timer
   0E9D 21 03 19           5358 	ld	hl,#_input_timer
   0EA0 36 04              5359 	ld	(hl),#0x04
                           5360 ;	game.c 809
                           5361 ;	genPointerGet
                           5362 ;	AOP_STK for _player_input_sloc1_1_0
   0EA2 59                 5363 	ld	e,c
   0EA3 50                 5364 	ld	d,b
   0EA4 1A                 5365 	ld	a,(de)
   0EA5 F8 01              5366 	lda	hl,1(sp)
   0EA7 77                 5367 	ld	(hl),a
   0EA8 13                 5368 	inc	de
   0EA9 1A                 5369 	ld	a,(de)
   0EAA 23                 5370 	inc	hl
                           5371 ;	genPlus
                           5372 ;	AOP_STK for _player_input_sloc1_1_0
                           5373 ;	genPlusIncr
                           5374 ;	Can't optimise plus by inc, falling back to the normal way
   0EAB 32                 5375 	ld      (hl-),a
   0EAC 5E                 5376 	ld	e,(hl)
   0EAD 23                 5377 	inc	hl
   0EAE 56                 5378 	ld	d,(hl)
   0EAF 21 08 00           5379 	ld	hl,#0x0008
   0EB2 19                 5380 	add	hl,de
   0EB3 7D                 5381 	ld	a,l
   0EB4 54                 5382 	ld	d,h
   0EB5 6F                 5383 	ld	l,a
   0EB6 62                 5384 	ld	h,d
                           5385 ;	genAssign (pointer)
   0EB7 36 02              5386 	ld	(hl),#0x02
                           5387 ;	game.c 810
                           5388 ;	genGoto
   0EB9 C3 F7 0E           5389 	jp	00111$
                           5390 ;	game.c 812
                           5391 ;	genLabel
   0EBC                    5392 00109$:
                           5393 ;	genAssign
                           5394 ;	AOP_HL for _input_timer
   0EBC 21 03 19           5395 	ld	hl,#_input_timer
   0EBF 36 04              5396 	ld	(hl),#0x04
                           5397 ;	game.c 813
                           5398 ;	genPointerGet
                           5399 ;	AOP_STK for _player_input_sloc1_1_0
   0EC1 59                 5400 	ld	e,c
   0EC2 50                 5401 	ld	d,b
   0EC3 1A                 5402 	ld	a,(de)
   0EC4 F8 01              5403 	lda	hl,1(sp)
   0EC6 77                 5404 	ld	(hl),a
   0EC7 13                 5405 	inc	de
   0EC8 1A                 5406 	ld	a,(de)
   0EC9 23                 5407 	inc	hl
                           5408 ;	genPlus
                           5409 ;	AOP_STK for _player_input_sloc1_1_0
                           5410 ;	genPlusIncr
                           5411 ;	Can't optimise plus by inc, falling back to the normal way
   0ECA 32                 5412 	ld      (hl-),a
   0ECB 5E                 5413 	ld	e,(hl)
   0ECC 23                 5414 	inc	hl
   0ECD 56                 5415 	ld	d,(hl)
   0ECE 21 08 00           5416 	ld	hl,#0x0008
   0ED1 19                 5417 	add	hl,de
   0ED2 7D                 5418 	ld	a,l
   0ED3 54                 5419 	ld	d,h
   0ED4 6F                 5420 	ld	l,a
   0ED5 62                 5421 	ld	h,d
                           5422 ;	genAssign (pointer)
   0ED6 36 01              5423 	ld	(hl),#0x01
                           5424 ;	game.c 814
                           5425 ;	genGoto
   0ED8 C3 F7 0E           5426 	jp	00111$
                           5427 ;	game.c 816
                           5428 ;	genLabel
   0EDB                    5429 00110$:
                           5430 ;	genPointerGet
                           5431 ;	AOP_STK for _player_input_sloc1_1_0
   0EDB 59                 5432 	ld	e,c
   0EDC 50                 5433 	ld	d,b
   0EDD 1A                 5434 	ld	a,(de)
   0EDE F8 01              5435 	lda	hl,1(sp)
   0EE0 77                 5436 	ld	(hl),a
   0EE1 13                 5437 	inc	de
   0EE2 1A                 5438 	ld	a,(de)
   0EE3 23                 5439 	inc	hl
                           5440 ;	genPlus
                           5441 ;	AOP_STK for _player_input_sloc1_1_0
                           5442 ;	genPlusIncr
                           5443 ;	Can't optimise plus by inc, falling back to the normal way
   0EE4 32                 5444 	ld      (hl-),a
   0EE5 5E                 5445 	ld	e,(hl)
   0EE6 23                 5446 	inc	hl
   0EE7 56                 5447 	ld	d,(hl)
   0EE8 21 08 00           5448 	ld	hl,#0x0008
   0EEB 19                 5449 	add	hl,de
   0EEC 7D                 5450 	ld	a,l
   0EED 54                 5451 	ld	d,h
   0EEE 6F                 5452 	ld	l,a
   0EEF 62                 5453 	ld	h,d
                           5454 ;	genAssign (pointer)
   0EF0 36 03              5455 	ld	(hl),#0x03
                           5456 ;	game.c 817
                           5457 ;	genAssign
                           5458 ;	AOP_HL for _input_timer
   0EF2 21 03 19           5459 	ld	hl,#_input_timer
   0EF5 36 04              5460 	ld	(hl),#0x04
                           5461 ;	game.c 821
                           5462 ;	genLabel
   0EF7                    5463 00111$:
                           5464 ;	game.c 822
                           5465 ;	genCmpEq
                           5466 ;	AOP_HL for _input_timer
                           5467 ; genCmpEq: left 1, right 1, result 0
   0EF7 21 03 19           5468 	ld	hl,#_input_timer
   0EFA 7E                 5469 	ld	a,(hl)
   0EFB B7                 5470 	or	a,a
   0EFC CA 3D 0F           5471 	jp	z,00119$
   0EFF                    5472 00147$:
                           5473 ;	game.c 823
                           5474 ;	genPointerGet
   0EFF 59                 5475 	ld	e,c
   0F00 50                 5476 	ld	d,b
   0F01 1A                 5477 	ld	a,(de)
   0F02 4F                 5478 	ld	c,a
   0F03 13                 5479 	inc	de
   0F04 1A                 5480 	ld	a,(de)
   0F05 47                 5481 	ld	b,a
                           5482 ;	genPlus
                           5483 ;	genPlusIncr
                           5484 ;	Can't optimise plus by inc, falling back to the normal way
   0F06 79                 5485 	ld	a,c
   0F07 C6 0C              5486 	add	a,#0x0C
   0F09 4F                 5487 	ld	c,a
   0F0A 78                 5488 	ld	a,b
   0F0B CE 00              5489 	adc	a,#0x00
   0F0D 47                 5490 	ld	b,a
                           5491 ;	genPointerGet
   0F0E 59                 5492 	ld	e,c
   0F0F 50                 5493 	ld	d,b
   0F10 1A                 5494 	ld	a,(de)
   0F11 4F                 5495 	ld	c,a
   0F12 13                 5496 	inc	de
   0F13 1A                 5497 	ld	a,(de)
   0F14 47                 5498 	ld	b,a
                           5499 ;	genPlus
                           5500 ;	Can't optimise plus by inc, falling back to the normal way
   0F15 21 05 19           5501 	ld	hl,#_map
   0F18 09                 5502 	add	hl,bc
   0F19 4D                 5503 	ld	c,l
   0F1A 44                 5504 	ld	b,h
                           5505 ;	genPointerGet
                           5506 ;	AOP_STK for _player_input_sloc2_1_0
   0F1B 0A                 5507 	ld	a,(bc)
   0F1C F8 00              5508 	lda	hl,0(sp)
                           5509 ;	genCmpEq
                           5510 ;	AOP_STK for _player_input_sloc2_1_0
                           5511 ; genCmpEq: left 1, right 1, result 0
   0F1E 77                 5512 	ld      (hl),a
                           5513 ; Removed redundent load
   0F1F FE 0E              5514 	cp	a,#0x0E
   0F21 C2 3D 0F           5515 	jp	nz,00119$
   0F24 18 03              5516 	jr	00149$
   0F26                    5517 00148$:
   0F26 C3 3D 0F           5518 	jp	00119$
   0F29                    5519 00149$:
                           5520 ;	game.c 825
                           5521 ;	genAssign (pointer)
   0F29 3E 0C              5522 	ld	a,#0x0C
   0F2B 02                 5523 	ld	(bc),a
                           5524 ;	game.c 826
                           5525 ;	genIpush
                           5526 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F2C 21 05 19           5527 	ld	hl,#_map
   0F2F E5                 5528 	push	hl
                           5529 ;	genIpush
   0F30 21 14 12           5530 	ld	hl,#0x1214
   0F33 E5                 5531 	push	hl
                           5532 ;	genIpush
   0F34 21 00 00           5533 	ld	hl,#0x0000
   0F37 E5                 5534 	push	hl
                           5535 ;	genCall
   0F38 CD 00 00           5536 	call	_set_bkg_tiles
   0F3B E8 06              5537 	lda	sp,6(sp)
                           5538 ;	genLabel
   0F3D                    5539 00119$:
                           5540 ;	genEndFunction
   0F3D E8 05              5541 	lda	sp,5(sp)
   0F3F C9                 5542 	ret
   0F40                    5543 ___player_input_end:
                           5544 ;	game.c 839
                           5545 ;	genLabel
                           5546 ;	genFunction
                           5547 ;	---------------------------------
                           5548 ; Function can_move_to_map_pos
                           5549 ; ---------------------------------
   0F40                    5550 ___can_move_to_map_pos_start:
   0F40                    5551 _can_move_to_map_pos:
                           5552 	
                           5553 ;	game.c 841
                           5554 ;	genPlus
                           5555 ;	AOP_STK for 
                           5556 ;	Can't optimise plus by inc, falling back to the normal way
   0F40 11 05 19           5557 	ld	de,#_map
   0F43 F8 02              5558 	lda	hl,2(sp)
   0F45 2A                 5559 	ld	a,(hl+)
   0F46 66                 5560 	ld	h,(hl)
   0F47 6F                 5561 	ld	l,a
   0F48 19                 5562 	add	hl,de
   0F49 4D                 5563 	ld	c,l
   0F4A 44                 5564 	ld	b,h
                           5565 ;	genPointerGet
   0F4B 0A                 5566 	ld	a,(bc)
   0F4C 4F                 5567 	ld	c,a
                           5568 ;	genCast
                           5569 ; Removed redundent load
   0F4D 06 00              5570 	ld	b,#0x00
                           5571 ;	genCmpGt
   0F4F 3E 14              5572 	ld	a,#0x14
   0F51 91                 5573 	sub	a,c
   0F52 3E 00              5574 	ld	a,#0x00
   0F54 98                 5575 	sbc	a,b
   0F55 D2 67 0F           5576 	jp	nc,00102$
                           5577 ;	game.c 842
                           5578 ;	genCmpLt
   0F58 79                 5579 	ld	a,c
   0F59 D6 29              5580 	sub	a,#0x29
   0F5B 78                 5581 	ld	a,b
   0F5C DE 00              5582 	sbc	a,#0x00
   0F5E D2 67 0F           5583 	jp	nc,00102$
                           5584 ;	game.c 844
                           5585 ;	genRet
   0F61 11 00 00           5586 	ld	de,#0x0000
   0F64 C3 08 10           5587 	jp	00114$
                           5588 ;	genLabel
   0F67                    5589 00102$:
                           5590 ;	game.c 848
                           5591 ;	genCmpEq
                           5592 ; genCmpEq: left 2, right 2, result 0
   0F67 79                 5593 	ld	a,c
   0F68 FE 0F              5594 	cp	a,#0x0F
   0F6A C2 72 0F           5595 	jp	nz,00124$
   0F6D 78                 5596 	ld	a,b
   0F6E B7                 5597 	or	a,a
   0F6F CA 98 0F           5598 	jp	z,00104$
   0F72                    5599 00124$:
                           5600 ;	genCmpEq
                           5601 ; genCmpEq: left 2, right 2, result 0
   0F72 79                 5602 	ld	a,c
   0F73 FE 10              5603 	cp	a,#0x10
   0F75 C2 7D 0F           5604 	jp	nz,00125$
   0F78 78                 5605 	ld	a,b
   0F79 B7                 5606 	or	a,a
   0F7A CA 98 0F           5607 	jp	z,00104$
   0F7D                    5608 00125$:
                           5609 ;	genCmpEq
                           5610 ; genCmpEq: left 2, right 2, result 0
   0F7D 79                 5611 	ld	a,c
   0F7E FE 29              5612 	cp	a,#0x29
   0F80 C2 88 0F           5613 	jp	nz,00126$
   0F83 78                 5614 	ld	a,b
   0F84 B7                 5615 	or	a,a
   0F85 CA 98 0F           5616 	jp	z,00104$
   0F88                    5617 00126$:
                           5618 ;	genCmpEq
                           5619 ; genCmpEq: left 2, right 2, result 0
   0F88 79                 5620 	ld	a,c
   0F89 FE 2D              5621 	cp	a,#0x2D
   0F8B C2 95 0F           5622 	jp	nz,00127$
   0F8E 78                 5623 	ld	a,b
   0F8F B7                 5624 	or	a,a
   0F90 C2 9E 0F           5625 	jp	nz,00108$
   0F93 18 03              5626 	jr	00128$
   0F95                    5627 00127$:
   0F95 C3 9E 0F           5628 	jp	00108$
   0F98                    5629 00128$:
                           5630 ;	game.c 856
                           5631 ;	genLabel
   0F98                    5632 00104$:
                           5633 ;	genRet
   0F98 11 00 00           5634 	ld	de,#0x0000
   0F9B C3 08 10           5635 	jp	00114$
                           5636 ;	game.c 858
                           5637 ;	genLabel
   0F9E                    5638 00108$:
                           5639 ;	game.c 860
                           5640 ;	genPlus
                           5641 ;	genPlusIncr
   0F9E 01 79 1A           5642 	ld	bc,#_bunny + 12
                           5643 ;	genPointerGet
   0FA1 59                 5644 	ld	e,c
   0FA2 50                 5645 	ld	d,b
   0FA3 1A                 5646 	ld	a,(de)
   0FA4 4F                 5647 	ld	c,a
   0FA5 13                 5648 	inc	de
   0FA6 1A                 5649 	ld	a,(de)
   0FA7 47                 5650 	ld	b,a
                           5651 ;	genCmpEq
                           5652 ;	AOP_STK for 
                           5653 ; genCmpEq: left 2, right 2, result 0
   0FA8 F8 02              5654 	lda	hl,2(sp)
   0FAA 7E                 5655 	ld	a,(hl)
   0FAB B9                 5656 	cp	c
   0FAC C2 B5 0F           5657 	jp	nz,00129$
   0FAF 23                 5658 	inc	hl
   0FB0 7E                 5659 	ld	a,(hl)
   0FB1 B8                 5660 	cp	b
   0FB2 CA FF 0F           5661 	jp	z,00109$
   0FB5                    5662 00129$:
                           5663 ;	game.c 861
                           5664 ;	genPlus
                           5665 ;	genPlusIncr
   0FB5 01 87 1A           5666 	ld	bc,#_dog1 + 12
                           5667 ;	genPointerGet
   0FB8 59                 5668 	ld	e,c
   0FB9 50                 5669 	ld	d,b
   0FBA 1A                 5670 	ld	a,(de)
   0FBB 4F                 5671 	ld	c,a
   0FBC 13                 5672 	inc	de
   0FBD 1A                 5673 	ld	a,(de)
   0FBE 47                 5674 	ld	b,a
                           5675 ;	genCmpEq
                           5676 ;	AOP_STK for 
                           5677 ; genCmpEq: left 2, right 2, result 0
   0FBF F8 02              5678 	lda	hl,2(sp)
   0FC1 7E                 5679 	ld	a,(hl)
   0FC2 B9                 5680 	cp	c
   0FC3 C2 CC 0F           5681 	jp	nz,00130$
   0FC6 23                 5682 	inc	hl
   0FC7 7E                 5683 	ld	a,(hl)
   0FC8 B8                 5684 	cp	b
   0FC9 CA FF 0F           5685 	jp	z,00109$
   0FCC                    5686 00130$:
                           5687 ;	game.c 862
                           5688 ;	genPlus
                           5689 ;	genPlusIncr
   0FCC 01 95 1A           5690 	ld	bc,#_dog2 + 12
                           5691 ;	genPointerGet
   0FCF 59                 5692 	ld	e,c
   0FD0 50                 5693 	ld	d,b
   0FD1 1A                 5694 	ld	a,(de)
   0FD2 4F                 5695 	ld	c,a
   0FD3 13                 5696 	inc	de
   0FD4 1A                 5697 	ld	a,(de)
   0FD5 47                 5698 	ld	b,a
                           5699 ;	genCmpEq
                           5700 ;	AOP_STK for 
                           5701 ; genCmpEq: left 2, right 2, result 0
   0FD6 F8 02              5702 	lda	hl,2(sp)
   0FD8 7E                 5703 	ld	a,(hl)
   0FD9 B9                 5704 	cp	c
   0FDA C2 E3 0F           5705 	jp	nz,00131$
   0FDD 23                 5706 	inc	hl
   0FDE 7E                 5707 	ld	a,(hl)
   0FDF B8                 5708 	cp	b
   0FE0 CA FF 0F           5709 	jp	z,00109$
   0FE3                    5710 00131$:
                           5711 ;	game.c 863
                           5712 ;	genPlus
                           5713 ;	genPlusIncr
   0FE3 01 A3 1A           5714 	ld	bc,#_cat + 12
                           5715 ;	genPointerGet
   0FE6 59                 5716 	ld	e,c
   0FE7 50                 5717 	ld	d,b
   0FE8 1A                 5718 	ld	a,(de)
   0FE9 4F                 5719 	ld	c,a
   0FEA 13                 5720 	inc	de
   0FEB 1A                 5721 	ld	a,(de)
   0FEC 47                 5722 	ld	b,a
                           5723 ;	genCmpEq
                           5724 ;	AOP_STK for 
                           5725 ; genCmpEq: left 2, right 2, result 0
   0FED F8 02              5726 	lda	hl,2(sp)
   0FEF 7E                 5727 	ld	a,(hl)
   0FF0 B9                 5728 	cp	c
   0FF1 C2 FC 0F           5729 	jp	nz,00132$
   0FF4 23                 5730 	inc	hl
   0FF5 7E                 5731 	ld	a,(hl)
   0FF6 B8                 5732 	cp	b
   0FF7 C2 05 10           5733 	jp	nz,00110$
   0FFA 18 03              5734 	jr	00133$
   0FFC                    5735 00132$:
   0FFC C3 05 10           5736 	jp	00110$
   0FFF                    5737 00133$:
                           5738 ;	genLabel
   0FFF                    5739 00109$:
                           5740 ;	game.c 865
                           5741 ;	genRet
   0FFF 11 00 00           5742 	ld	de,#0x0000
   1002 C3 08 10           5743 	jp	00114$
                           5744 ;	genLabel
   1005                    5745 00110$:
                           5746 ;	game.c 868
                           5747 ;	genRet
   1005 11 01 00           5748 	ld	de,#0x0001
                           5749 ;	genLabel
   1008                    5750 00114$:
                           5751 ;	genEndFunction
                           5752 	
   1008 C9                 5753 	ret
   1009                    5754 ___can_move_to_map_pos_end:
                           5755 ;	game.c 871
                           5756 ;	genLabel
                           5757 ;	genFunction
                           5758 ;	---------------------------------
                           5759 ; Function can_move
                           5760 ; ---------------------------------
   1009                    5761 ___can_move_start:
   1009                    5762 _can_move:
   1009 E8 FA              5763 	lda	sp,-6(sp)
                           5764 ;	game.c 882
                           5765 ;	genCmpGt
                           5766 ;	AOP_STK for 
   100B 3E 04              5767 	ld	a,#0x04
   100D F8 0A              5768 	lda	hl,10(sp)
   100F 96                 5769 	sub	a,(hl)
   1010 DA 56 10           5770 	jp	c,00106$
                           5771 ;	genJumpTab
                           5772 ;	AOP_STK for 
   1013 5E                 5773 	ld	e,(hl)
   1014 16 00              5774 	ld	d,#0x00
   1016 21 1D 10           5775 	ld	hl,#00121$
   1019 19                 5776 	add	hl,de
   101A 19                 5777 	add	hl,de
   101B 19                 5778 	add	hl,de
   101C E9                 5779 	jp	(hl)
   101D                    5780 00121$:
   101D C3 50 10           5781 	jp	00105$
   1020 C3 3E 10           5782 	jp	00103$
   1023 C3 35 10           5783 	jp	00102$
   1026 C3 47 10           5784 	jp	00104$
   1029 C3 2C 10           5785 	jp	00101$
                           5786 ;	game.c 884
                           5787 ;	genLabel
   102C                    5788 00101$:
                           5789 ;	genMinus
                           5790 ;	AOP_STK for 
   102C F8 08              5791 	lda	hl,8(sp)
   102E 7E                 5792 	ld	a,(hl)
   102F C6 F8              5793 	add	a,#0xF8
   1031 77                 5794 	ld	(hl),a
                           5795 ;	game.c 885
                           5796 ;	genGoto
   1032 C3 56 10           5797 	jp	00106$
                           5798 ;	game.c 887
                           5799 ;	genLabel
   1035                    5800 00102$:
                           5801 ;	genPlus
                           5802 ;	AOP_STK for 
                           5803 ;	genPlusIncr
                           5804 ;	Can't optimise plus by inc, falling back to the normal way
   1035 F8 08              5805 	lda	hl,8(sp)
   1037 7E                 5806 	ld	a,(hl)
   1038 C6 08              5807 	add	a,#0x08
   103A 77                 5808 	ld	(hl),a
                           5809 ;	game.c 888
                           5810 ;	genGoto
   103B C3 56 10           5811 	jp	00106$
                           5812 ;	game.c 890
                           5813 ;	genLabel
   103E                    5814 00103$:
                           5815 ;	genMinus
                           5816 ;	AOP_STK for 
   103E F8 09              5817 	lda	hl,9(sp)
   1040 7E                 5818 	ld	a,(hl)
   1041 C6 F8              5819 	add	a,#0xF8
   1043 77                 5820 	ld	(hl),a
                           5821 ;	game.c 891
                           5822 ;	genGoto
   1044 C3 56 10           5823 	jp	00106$
                           5824 ;	game.c 893
                           5825 ;	genLabel
   1047                    5826 00104$:
                           5827 ;	genPlus
                           5828 ;	AOP_STK for 
                           5829 ;	genPlusIncr
                           5830 ;	Can't optimise plus by inc, falling back to the normal way
   1047 F8 09              5831 	lda	hl,9(sp)
   1049 7E                 5832 	ld	a,(hl)
   104A C6 08              5833 	add	a,#0x08
   104C 77                 5834 	ld	(hl),a
                           5835 ;	game.c 894
                           5836 ;	genGoto
   104D C3 56 10           5837 	jp	00106$
                           5838 ;	game.c 896
                           5839 ;	genLabel
   1050                    5840 00105$:
                           5841 ;	genRet
   1050 11 00 00           5842 	ld	de,#0x0000
   1053 C3 EF 10           5843 	jp	00114$
                           5844 ;	game.c 897
                           5845 ;	genLabel
   1056                    5846 00106$:
                           5847 ;	game.c 899
                           5848 ;	genCast
                           5849 ;	AOP_STK for 
   1056 F8 08              5850 	lda	hl,8(sp)
   1058 4E                 5851 	ld	c,(hl)
   1059 06 00              5852 	ld	b,#0x00
                           5853 ;	genRightShift
   105B CB 38              5854 	srl	b
   105D CB 19              5855 	rr	c
   105F CB 38              5856 	srl	b
   1061 CB 19              5857 	rr	c
   1063 CB 38              5858 	srl	b
   1065 CB 19              5859 	rr	c
                           5860 ;	genMinus
   1067 0B                 5861 	dec	bc
                           5862 ;	genCast
                           5863 ;	AOP_STK for _can_move__x_1_1
   1068 F8 05              5864 	lda	hl,5(sp)
   106A 71                 5865 	ld	(hl),c
                           5866 ;	game.c 900
                           5867 ;	genCast
                           5868 ;	AOP_STK for 
   106B F8 09              5869 	lda	hl,9(sp)
   106D 46                 5870 	ld	b,(hl)
   106E 0E 00              5871 	ld	c,#0x00
                           5872 ;	genRightShift
   1070 CB 39              5873 	srl	c
   1072 CB 18              5874 	rr	b
   1074 CB 39              5875 	srl	c
   1076 CB 18              5876 	rr	b
   1078 CB 39              5877 	srl	c
   107A CB 18              5878 	rr	b
                           5879 ;	genMinus
   107C 58                 5880 	ld	e,b
   107D 51                 5881 	ld	d,c
   107E 1B                 5882 	dec	de
   107F 1B                 5883 	dec	de
   1080 43                 5884 	ld	b,e
   1081 4A                 5885 	ld	c,d
                           5886 ;	genCast
                           5887 ;	AOP_STK for _can_move__y_1_1
   1082 F8 04              5888 	lda	hl,4(sp)
   1084 70                 5889 	ld	(hl),b
                           5890 ;	game.c 907
                           5891 ;	genCmpLt
                           5892 ;	AOP_STK for _can_move__x_1_1
   1085 23                 5893 	inc	hl
   1086 7E                 5894 	ld	a,(hl)
   1087 FE 00              5895 	cp	#0x00
   1089 DA B0 10           5896 	jp	c,00107$
                           5897 ;	genCast
                           5898 ;	AOP_STK for _can_move__x_1_1
   108C 46                 5899 	ld	b,(hl)
   108D 0E 00              5900 	ld	c,#0x00
                           5901 ;	genCmpGt
   108F 3E 13              5902 	ld	a,#0x13
   1091 90                 5903 	sub	a,b
   1092 3E 00              5904 	ld	a,#0x00
   1094 99                 5905 	sbc	a,c
   1095 DA B0 10           5906 	jp	c,00107$
                           5907 ;	genCmpLt
                           5908 ;	AOP_STK for _can_move__y_1_1
   1098 2B                 5909 	dec	hl
   1099 7E                 5910 	ld	a,(hl)
   109A FE 00              5911 	cp	#0x00
   109C DA B0 10           5912 	jp	c,00107$
                           5913 ;	genCast
                           5914 ;	AOP_STK for _can_move__y_1_1
                           5915 ;	AOP_STK for _can_move_sloc0_1_0
   109F 7E                 5916 	ld	a,(hl)
   10A0 F8 00              5917 	lda	hl,0(sp)
   10A2 22                 5918 	ld	(hl+),a
   10A3 36 00              5919 	ld	(hl),#0x00
                           5920 ;	genCmpGt
                           5921 ;	AOP_STK for _can_move_sloc0_1_0
   10A5 3E 11              5922 	ld	a,#0x11
   10A7 2B                 5923 	dec	hl
   10A8 96                 5924 	sub	a,(hl)
   10A9 3E 00              5925 	ld	a,#0x00
   10AB 23                 5926 	inc	hl
   10AC 9E                 5927 	sbc	a,(hl)
   10AD D2 B6 10           5928 	jp	nc,00108$
                           5929 ;	genLabel
   10B0                    5930 00107$:
                           5931 ;	game.c 909
                           5932 ;	genRet
   10B0 11 00 00           5933 	ld	de,#0x0000
   10B3 C3 EF 10           5934 	jp	00114$
                           5935 ;	genLabel
   10B6                    5936 00108$:
                           5937 ;	game.c 916
                           5938 ;	genAssign
                           5939 ;	(registers are the same)
                           5940 ;	genAssign
                           5941 ;	AOP_STK for _can_move_map_position_1_1
   10B6 F8 02              5942 	lda	hl,2(sp)
   10B8 70                 5943 	ld	(hl),b
   10B9 23                 5944 	inc	hl
   10BA 71                 5945 	ld	(hl),c
                           5946 ;	game.c 917
                           5947 ;	genMult
                           5948 ;	AOP_STK for _can_move_sloc0_1_0
   10BB F8 00              5949 	lda	hl,0(sp)
   10BD 5E                 5950 	ld	e,(hl)
   10BE 23                 5951 	inc	hl
   10BF 56                 5952 	ld	d,(hl)
   10C0 6B                 5953 	ld	l,e
   10C1 62                 5954 	ld	h,d
   10C2 29                 5955 	add	hl,hl
   10C3 29                 5956 	add	hl,hl
   10C4 19                 5957 	add	hl,de
   10C5 29                 5958 	add	hl,hl
   10C6 29                 5959 	add	hl,hl
   10C7 4D                 5960 	ld	c,l
   10C8 44                 5961 	ld	b,h
                           5962 ;	genPlus
                           5963 ;	AOP_STK for _can_move_map_position_1_1
                           5964 ;	Can't optimise plus by inc, falling back to the normal way
   10C9 F8 02              5965 	lda	hl,2(sp)
   10CB 2A                 5966 	ld	a,(hl+)
   10CC 66                 5967 	ld	h,(hl)
   10CD 6F                 5968 	ld	l,a
   10CE 09                 5969 	add	hl,bc
   10CF 7D                 5970 	ld	a,l
   10D0 54                 5971 	ld	d,h
   10D1 F8 02              5972 	lda	hl,2(sp)
   10D3 22                 5973 	ld	(hl+),a
   10D4 72                 5974 	ld	(hl),d
                           5975 ;	game.c 919
                           5976 ;	genIpush
                           5977 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5978 ;	AOP_STK for _can_move_map_position_1_1
   10D5 2B                 5979 	dec	hl
   10D6 2A                 5980 	ld	a,(hl+)
   10D7 66                 5981 	ld	h,(hl)
   10D8 6F                 5982 	ld	l,a
   10D9 E5                 5983 	push	hl
                           5984 ;	genCall
   10DA CD 40 0F           5985 	call	_can_move_to_map_pos
   10DD 42                 5986 	ld	b,d
   10DE 4B                 5987 	ld	c,e
   10DF E8 02              5988 	lda	sp,2(sp)
                           5989 ;	genIfx
   10E1 79                 5990 	ld	a,c
   10E2 B0                 5991 	or	a,b
   10E3 CA EC 10           5992 	jp	z,00113$
                           5993 ;	game.c 920
                           5994 ;	genRet
   10E6 11 01 00           5995 	ld	de,#0x0001
   10E9 C3 EF 10           5996 	jp	00114$
                           5997 ;	genLabel
   10EC                    5998 00113$:
                           5999 ;	game.c 923
                           6000 ;	genRet
   10EC 11 00 00           6001 	ld	de,#0x0000
                           6002 ;	genLabel
   10EF                    6003 00114$:
                           6004 ;	genEndFunction
   10EF E8 06              6005 	lda	sp,6(sp)
   10F1 C9                 6006 	ret
   10F2                    6007 ___can_move_end:
                           6008 ;	game.c 926
                           6009 ;	genLabel
                           6010 ;	genFunction
                           6011 ;	---------------------------------
                           6012 ; Function rotate_player
                           6013 ; ---------------------------------
   10F2                    6014 ___rotate_player_start:
   10F2                    6015 _rotate_player:
   10F2 E8 FC              6016 	lda	sp,-4(sp)
                           6017 ;	game.c 927
                           6018 ;	genAssign
                           6019 ;	AOP_HL for _player
   10F4 21 B3 1A           6020 	ld	hl,#_player
   10F7 4E                 6021 	ld	c,(hl)
   10F8 23                 6022 	inc	hl
   10F9 46                 6023 	ld	b,(hl)
                           6024 ;	genPlus
                           6025 ;	genPlusIncr
                           6026 ;	Can't optimise plus by inc, falling back to the normal way
   10FA 79                 6027 	ld	a,c
   10FB C6 07              6028 	add	a,#0x07
   10FD 4F                 6029 	ld	c,a
   10FE 78                 6030 	ld	a,b
   10FF CE 00              6031 	adc	a,#0x00
   1101 47                 6032 	ld	b,a
                           6033 ;	genPointerGet
   1102 0A                 6034 	ld	a,(bc)
   1103 4F                 6035 	ld	c,a
                           6036 ;	genAssign
                           6037 ;	AOP_HL for _player
                           6038 ;	AOP_STK for _rotate_player_sloc0_1_0
   1104 2B                 6039 	dec	hl
   1105 2A                 6040 	ld	a,(hl+)
   1106 5E                 6041 	ld	e,(hl)
   1107 F8 02              6042 	lda	hl,2(sp)
   1109 22                 6043 	ld	(hl+),a
   110A 73                 6044 	ld	(hl),e
                           6045 ;	genPlus
                           6046 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6047 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6048 ;	genPlusIncr
                           6049 ;	Can't optimise plus by inc, falling back to the normal way
   110B 2B                 6050 	dec	hl
   110C 5E                 6051 	ld	e,(hl)
   110D 23                 6052 	inc	hl
   110E 56                 6053 	ld	d,(hl)
   110F 21 0B 00           6054 	ld	hl,#0x000B
   1112 19                 6055 	add	hl,de
   1113 7D                 6056 	ld	a,l
   1114 54                 6057 	ld	d,h
   1115 F8 00              6058 	lda	hl,0(sp)
                           6059 ;	genPointerGet
                           6060 ;	AOP_STK for _rotate_player_sloc1_1_0
   1117 22                 6061 	ld	(hl+),a
   1118 72                 6062 	ld	(hl),d
   1119 5F                 6063 	ld	e,a
   111A 1A                 6064 	ld	a,(de)
   111B 47                 6065 	ld	b,a
                           6066 ;	genIpush
                           6067 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   111C 79                 6068 	ld	a,c
   111D F5                 6069 	push	af
   111E 33                 6070 	inc	sp
                           6071 ;	genIpush
   111F 78                 6072 	ld	a,b
   1120 F5                 6073 	push	af
   1121 33                 6074 	inc	sp
                           6075 ;	genCall
   1122 CD 00 00           6076 	call	_set_sprite_tile
   1125 E8 02              6077 	lda	sp,2(sp)
                           6078 ;	game.c 928
                           6079 ;	genAssign
                           6080 ;	AOP_HL for _player
   1127 21 B3 1A           6081 	ld	hl,#_player
   112A 4E                 6082 	ld	c,(hl)
   112B 23                 6083 	inc	hl
   112C 46                 6084 	ld	b,(hl)
                           6085 ;	genPlus
                           6086 ;	genPlusIncr
                           6087 ;	Can't optimise plus by inc, falling back to the normal way
   112D 79                 6088 	ld	a,c
   112E C6 0B              6089 	add	a,#0x0B
   1130 4F                 6090 	ld	c,a
   1131 78                 6091 	ld	a,b
   1132 CE 00              6092 	adc	a,#0x00
   1134 47                 6093 	ld	b,a
                           6094 ;	genPointerGet
   1135 0A                 6095 	ld	a,(bc)
   1136 4F                 6096 	ld	c,a
                           6097 ;	genIpush
                           6098 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1137 3E 20              6099 	ld	a,#0x20
   1139 F5                 6100 	push	af
   113A 33                 6101 	inc	sp
                           6102 ;	genIpush
   113B 79                 6103 	ld	a,c
   113C F5                 6104 	push	af
   113D 33                 6105 	inc	sp
                           6106 ;	genCall
   113E CD 00 00           6107 	call	_set_sprite_prop
   1141 E8 02              6108 	lda	sp,2(sp)
                           6109 ;	game.c 929
                           6110 ;	genIpush
                           6111 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1143 3E 05              6112 	ld	a,#0x05
   1145 F5                 6113 	push	af
   1146 33                 6114 	inc	sp
                           6115 ;	genCall
   1147 CD 00 00           6116 	call	_performantDelay
   114A E8 01              6117 	lda	sp,1(sp)
                           6118 ;	game.c 930
                           6119 ;	genAssign
                           6120 ;	AOP_HL for _player
   114C 21 B3 1A           6121 	ld	hl,#_player
   114F 4E                 6122 	ld	c,(hl)
   1150 23                 6123 	inc	hl
   1151 46                 6124 	ld	b,(hl)
                           6125 ;	genPlus
                           6126 ;	genPlusIncr
   1152 03                 6127 	inc	bc
   1153 03                 6128 	inc	bc
   1154 03                 6129 	inc	bc
   1155 03                 6130 	inc	bc
                           6131 ;	genPointerGet
   1156 0A                 6132 	ld	a,(bc)
   1157 4F                 6133 	ld	c,a
                           6134 ;	genAssign
                           6135 ;	AOP_HL for _player
                           6136 ;	AOP_STK for _rotate_player_sloc1_1_0
   1158 2B                 6137 	dec	hl
   1159 2A                 6138 	ld	a,(hl+)
   115A 5E                 6139 	ld	e,(hl)
   115B F8 00              6140 	lda	hl,0(sp)
   115D 22                 6141 	ld	(hl+),a
   115E 73                 6142 	ld	(hl),e
                           6143 ;	genPlus
                           6144 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6145 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6146 ;	genPlusIncr
                           6147 ;	Can't optimise plus by inc, falling back to the normal way
   115F 2B                 6148 	dec	hl
   1160 5E                 6149 	ld	e,(hl)
   1161 23                 6150 	inc	hl
   1162 56                 6151 	ld	d,(hl)
   1163 21 0B 00           6152 	ld	hl,#0x000B
   1166 19                 6153 	add	hl,de
   1167 7D                 6154 	ld	a,l
   1168 54                 6155 	ld	d,h
   1169 F8 02              6156 	lda	hl,2(sp)
                           6157 ;	genPointerGet
                           6158 ;	AOP_STK for _rotate_player_sloc0_1_0
   116B 22                 6159 	ld	(hl+),a
   116C 72                 6160 	ld	(hl),d
   116D 5F                 6161 	ld	e,a
   116E 1A                 6162 	ld	a,(de)
   116F 47                 6163 	ld	b,a
                           6164 ;	genIpush
                           6165 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1170 79                 6166 	ld	a,c
   1171 F5                 6167 	push	af
   1172 33                 6168 	inc	sp
                           6169 ;	genIpush
   1173 78                 6170 	ld	a,b
   1174 F5                 6171 	push	af
   1175 33                 6172 	inc	sp
                           6173 ;	genCall
   1176 CD 00 00           6174 	call	_set_sprite_tile
   1179 E8 02              6175 	lda	sp,2(sp)
                           6176 ;	game.c 931
                           6177 ;	genAssign
                           6178 ;	AOP_HL for _player
   117B 21 B3 1A           6179 	ld	hl,#_player
   117E 4E                 6180 	ld	c,(hl)
   117F 23                 6181 	inc	hl
   1180 46                 6182 	ld	b,(hl)
                           6183 ;	genPlus
                           6184 ;	genPlusIncr
                           6185 ;	Can't optimise plus by inc, falling back to the normal way
   1181 79                 6186 	ld	a,c
   1182 C6 0B              6187 	add	a,#0x0B
   1184 4F                 6188 	ld	c,a
   1185 78                 6189 	ld	a,b
   1186 CE 00              6190 	adc	a,#0x00
   1188 47                 6191 	ld	b,a
                           6192 ;	genPointerGet
   1189 0A                 6193 	ld	a,(bc)
   118A 4F                 6194 	ld	c,a
                           6195 ;	genIpush
                           6196 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   118B 3E 60              6197 	ld	a,#0x60
   118D F5                 6198 	push	af
   118E 33                 6199 	inc	sp
                           6200 ;	genIpush
   118F 79                 6201 	ld	a,c
   1190 F5                 6202 	push	af
   1191 33                 6203 	inc	sp
                           6204 ;	genCall
   1192 CD 00 00           6205 	call	_set_sprite_prop
   1195 E8 02              6206 	lda	sp,2(sp)
                           6207 ;	game.c 932
                           6208 ;	genIpush
                           6209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1197 3E 05              6210 	ld	a,#0x05
   1199 F5                 6211 	push	af
   119A 33                 6212 	inc	sp
                           6213 ;	genCall
   119B CD 00 00           6214 	call	_performantDelay
   119E E8 01              6215 	lda	sp,1(sp)
                           6216 ;	game.c 933
                           6217 ;	genAssign
                           6218 ;	AOP_HL for _player
   11A0 21 B3 1A           6219 	ld	hl,#_player
   11A3 4E                 6220 	ld	c,(hl)
   11A4 23                 6221 	inc	hl
   11A5 46                 6222 	ld	b,(hl)
                           6223 ;	genPlus
                           6224 ;	genPlusIncr
                           6225 ;	Can't optimise plus by inc, falling back to the normal way
   11A6 79                 6226 	ld	a,c
   11A7 C6 07              6227 	add	a,#0x07
   11A9 4F                 6228 	ld	c,a
   11AA 78                 6229 	ld	a,b
   11AB CE 00              6230 	adc	a,#0x00
   11AD 47                 6231 	ld	b,a
                           6232 ;	genPointerGet
   11AE 0A                 6233 	ld	a,(bc)
   11AF 4F                 6234 	ld	c,a
                           6235 ;	genAssign
                           6236 ;	AOP_HL for _player
                           6237 ;	AOP_STK for _rotate_player_sloc1_1_0
   11B0 2B                 6238 	dec	hl
   11B1 2A                 6239 	ld	a,(hl+)
   11B2 5E                 6240 	ld	e,(hl)
   11B3 F8 00              6241 	lda	hl,0(sp)
   11B5 22                 6242 	ld	(hl+),a
   11B6 73                 6243 	ld	(hl),e
                           6244 ;	genPlus
                           6245 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6246 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6247 ;	genPlusIncr
                           6248 ;	Can't optimise plus by inc, falling back to the normal way
   11B7 2B                 6249 	dec	hl
   11B8 5E                 6250 	ld	e,(hl)
   11B9 23                 6251 	inc	hl
   11BA 56                 6252 	ld	d,(hl)
   11BB 21 0B 00           6253 	ld	hl,#0x000B
   11BE 19                 6254 	add	hl,de
   11BF 7D                 6255 	ld	a,l
   11C0 54                 6256 	ld	d,h
   11C1 F8 02              6257 	lda	hl,2(sp)
                           6258 ;	genPointerGet
                           6259 ;	AOP_STK for _rotate_player_sloc0_1_0
   11C3 22                 6260 	ld	(hl+),a
   11C4 72                 6261 	ld	(hl),d
   11C5 5F                 6262 	ld	e,a
   11C6 1A                 6263 	ld	a,(de)
   11C7 47                 6264 	ld	b,a
                           6265 ;	genIpush
                           6266 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11C8 79                 6267 	ld	a,c
   11C9 F5                 6268 	push	af
   11CA 33                 6269 	inc	sp
                           6270 ;	genIpush
   11CB 78                 6271 	ld	a,b
   11CC F5                 6272 	push	af
   11CD 33                 6273 	inc	sp
                           6274 ;	genCall
   11CE CD 00 00           6275 	call	_set_sprite_tile
   11D1 E8 02              6276 	lda	sp,2(sp)
                           6277 ;	game.c 934
                           6278 ;	genAssign
                           6279 ;	AOP_HL for _player
   11D3 21 B3 1A           6280 	ld	hl,#_player
   11D6 4E                 6281 	ld	c,(hl)
   11D7 23                 6282 	inc	hl
   11D8 46                 6283 	ld	b,(hl)
                           6284 ;	genPlus
                           6285 ;	genPlusIncr
                           6286 ;	Can't optimise plus by inc, falling back to the normal way
   11D9 79                 6287 	ld	a,c
   11DA C6 0B              6288 	add	a,#0x0B
   11DC 4F                 6289 	ld	c,a
   11DD 78                 6290 	ld	a,b
   11DE CE 00              6291 	adc	a,#0x00
   11E0 47                 6292 	ld	b,a
                           6293 ;	genPointerGet
   11E1 0A                 6294 	ld	a,(bc)
   11E2 4F                 6295 	ld	c,a
                           6296 ;	genIpush
                           6297 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11E3 3E 40              6298 	ld	a,#0x40
   11E5 F5                 6299 	push	af
   11E6 33                 6300 	inc	sp
                           6301 ;	genIpush
   11E7 79                 6302 	ld	a,c
   11E8 F5                 6303 	push	af
   11E9 33                 6304 	inc	sp
                           6305 ;	genCall
   11EA CD 00 00           6306 	call	_set_sprite_prop
   11ED E8 02              6307 	lda	sp,2(sp)
                           6308 ;	game.c 935
                           6309 ;	genIpush
                           6310 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11EF 3E 05              6311 	ld	a,#0x05
   11F1 F5                 6312 	push	af
   11F2 33                 6313 	inc	sp
                           6314 ;	genCall
   11F3 CD 00 00           6315 	call	_performantDelay
   11F6 E8 01              6316 	lda	sp,1(sp)
                           6317 ;	game.c 936
                           6318 ;	genAssign
                           6319 ;	AOP_HL for _player
   11F8 21 B3 1A           6320 	ld	hl,#_player
   11FB 4E                 6321 	ld	c,(hl)
   11FC 23                 6322 	inc	hl
   11FD 46                 6323 	ld	b,(hl)
                           6324 ;	genPlus
                           6325 ;	genPlusIncr
   11FE 03                 6326 	inc	bc
   11FF 03                 6327 	inc	bc
   1200 03                 6328 	inc	bc
   1201 03                 6329 	inc	bc
                           6330 ;	genPointerGet
   1202 0A                 6331 	ld	a,(bc)
   1203 4F                 6332 	ld	c,a
                           6333 ;	genAssign
                           6334 ;	AOP_HL for _player
                           6335 ;	AOP_STK for _rotate_player_sloc1_1_0
   1204 2B                 6336 	dec	hl
   1205 2A                 6337 	ld	a,(hl+)
   1206 5E                 6338 	ld	e,(hl)
   1207 F8 00              6339 	lda	hl,0(sp)
   1209 22                 6340 	ld	(hl+),a
   120A 73                 6341 	ld	(hl),e
                           6342 ;	genPlus
                           6343 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6344 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6345 ;	genPlusIncr
                           6346 ;	Can't optimise plus by inc, falling back to the normal way
   120B 2B                 6347 	dec	hl
   120C 5E                 6348 	ld	e,(hl)
   120D 23                 6349 	inc	hl
   120E 56                 6350 	ld	d,(hl)
   120F 21 0B 00           6351 	ld	hl,#0x000B
   1212 19                 6352 	add	hl,de
   1213 7D                 6353 	ld	a,l
   1214 54                 6354 	ld	d,h
   1215 F8 02              6355 	lda	hl,2(sp)
                           6356 ;	genPointerGet
                           6357 ;	AOP_STK for _rotate_player_sloc0_1_0
   1217 22                 6358 	ld	(hl+),a
   1218 72                 6359 	ld	(hl),d
   1219 5F                 6360 	ld	e,a
   121A 1A                 6361 	ld	a,(de)
   121B 47                 6362 	ld	b,a
                           6363 ;	genIpush
                           6364 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   121C 79                 6365 	ld	a,c
   121D F5                 6366 	push	af
   121E 33                 6367 	inc	sp
                           6368 ;	genIpush
   121F 78                 6369 	ld	a,b
   1220 F5                 6370 	push	af
   1221 33                 6371 	inc	sp
                           6372 ;	genCall
   1222 CD 00 00           6373 	call	_set_sprite_tile
   1225 E8 02              6374 	lda	sp,2(sp)
                           6375 ;	game.c 937
                           6376 ;	genAssign
                           6377 ;	AOP_HL for _player
   1227 21 B3 1A           6378 	ld	hl,#_player
   122A 4E                 6379 	ld	c,(hl)
   122B 23                 6380 	inc	hl
   122C 46                 6381 	ld	b,(hl)
                           6382 ;	genPlus
                           6383 ;	genPlusIncr
                           6384 ;	Can't optimise plus by inc, falling back to the normal way
   122D 79                 6385 	ld	a,c
   122E C6 0B              6386 	add	a,#0x0B
   1230 4F                 6387 	ld	c,a
   1231 78                 6388 	ld	a,b
   1232 CE 00              6389 	adc	a,#0x00
   1234 47                 6390 	ld	b,a
                           6391 ;	genPointerGet
   1235 0A                 6392 	ld	a,(bc)
   1236 4F                 6393 	ld	c,a
                           6394 ;	genIpush
                           6395 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1237 3E 00              6396 	ld	a,#0x00
   1239 F5                 6397 	push	af
   123A 33                 6398 	inc	sp
                           6399 ;	genIpush
   123B 79                 6400 	ld	a,c
   123C F5                 6401 	push	af
   123D 33                 6402 	inc	sp
                           6403 ;	genCall
   123E CD 00 00           6404 	call	_set_sprite_prop
   1241 E8 02              6405 	lda	sp,2(sp)
                           6406 ;	game.c 938
                           6407 ;	genIpush
                           6408 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1243 3E 05              6409 	ld	a,#0x05
   1245 F5                 6410 	push	af
   1246 33                 6411 	inc	sp
                           6412 ;	genCall
   1247 CD 00 00           6413 	call	_performantDelay
   124A E8 01              6414 	lda	sp,1(sp)
                           6415 ;	game.c 939
                           6416 ;	genAssign
                           6417 ;	AOP_HL for _player
   124C 21 B3 1A           6418 	ld	hl,#_player
   124F 4E                 6419 	ld	c,(hl)
   1250 23                 6420 	inc	hl
   1251 46                 6421 	ld	b,(hl)
                           6422 ;	genPlus
                           6423 ;	genPlusIncr
   1252 03                 6424 	inc	bc
   1253 03                 6425 	inc	bc
                           6426 ;	genPointerGet
   1254 0A                 6427 	ld	a,(bc)
   1255 4F                 6428 	ld	c,a
                           6429 ;	genAssign
                           6430 ;	AOP_HL for _player
                           6431 ;	AOP_STK for _rotate_player_sloc1_1_0
   1256 2B                 6432 	dec	hl
   1257 2A                 6433 	ld	a,(hl+)
   1258 5E                 6434 	ld	e,(hl)
   1259 F8 00              6435 	lda	hl,0(sp)
   125B 22                 6436 	ld	(hl+),a
   125C 73                 6437 	ld	(hl),e
                           6438 ;	genPlus
                           6439 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6440 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6441 ;	genPlusIncr
                           6442 ;	Can't optimise plus by inc, falling back to the normal way
   125D 2B                 6443 	dec	hl
   125E 5E                 6444 	ld	e,(hl)
   125F 23                 6445 	inc	hl
   1260 56                 6446 	ld	d,(hl)
   1261 21 0B 00           6447 	ld	hl,#0x000B
   1264 19                 6448 	add	hl,de
   1265 7D                 6449 	ld	a,l
   1266 54                 6450 	ld	d,h
   1267 F8 02              6451 	lda	hl,2(sp)
                           6452 ;	genPointerGet
                           6453 ;	AOP_STK for _rotate_player_sloc0_1_0
   1269 22                 6454 	ld	(hl+),a
   126A 72                 6455 	ld	(hl),d
   126B 5F                 6456 	ld	e,a
   126C 1A                 6457 	ld	a,(de)
   126D 47                 6458 	ld	b,a
                           6459 ;	genIpush
                           6460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   126E 79                 6461 	ld	a,c
   126F F5                 6462 	push	af
   1270 33                 6463 	inc	sp
                           6464 ;	genIpush
   1271 78                 6465 	ld	a,b
   1272 F5                 6466 	push	af
   1273 33                 6467 	inc	sp
                           6468 ;	genCall
   1274 CD 00 00           6469 	call	_set_sprite_tile
   1277 E8 02              6470 	lda	sp,2(sp)
                           6471 ;	game.c 940
                           6472 ;	genAssign
                           6473 ;	AOP_HL for _player
   1279 21 B3 1A           6474 	ld	hl,#_player
   127C 4E                 6475 	ld	c,(hl)
   127D 23                 6476 	inc	hl
   127E 46                 6477 	ld	b,(hl)
                           6478 ;	genPlus
                           6479 ;	genPlusIncr
                           6480 ;	Can't optimise plus by inc, falling back to the normal way
   127F 79                 6481 	ld	a,c
   1280 C6 0B              6482 	add	a,#0x0B
   1282 4F                 6483 	ld	c,a
   1283 78                 6484 	ld	a,b
   1284 CE 00              6485 	adc	a,#0x00
   1286 47                 6486 	ld	b,a
                           6487 ;	genPointerGet
   1287 0A                 6488 	ld	a,(bc)
   1288 4F                 6489 	ld	c,a
                           6490 ;	genIpush
                           6491 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1289 3E 00              6492 	ld	a,#0x00
   128B F5                 6493 	push	af
   128C 33                 6494 	inc	sp
                           6495 ;	genIpush
   128D 79                 6496 	ld	a,c
   128E F5                 6497 	push	af
   128F 33                 6498 	inc	sp
                           6499 ;	genCall
   1290 CD 00 00           6500 	call	_set_sprite_prop
   1293 E8 02              6501 	lda	sp,2(sp)
                           6502 ;	genLabel
   1295                    6503 00101$:
                           6504 ;	genEndFunction
   1295 E8 04              6505 	lda	sp,4(sp)
   1297 C9                 6506 	ret
   1298                    6507 ___rotate_player_end:
                           6508 ;	game.c 943
                           6509 ;	genLabel
                           6510 ;	genFunction
                           6511 ;	---------------------------------
                           6512 ; Function move_character
                           6513 ; ---------------------------------
   1298                    6514 ___move_character_start:
   1298                    6515 _move_character:
   1298 E8 F1              6516 	lda	sp,-15(sp)
                           6517 ;	game.c 946
                           6518 ;	genAssign
                           6519 ;	AOP_HL for _player
   129A 21 B3 1A           6520 	ld	hl,#_player
   129D 4E                 6521 	ld	c,(hl)
   129E 23                 6522 	inc	hl
   129F 46                 6523 	ld	b,(hl)
                           6524 ;	genPlus
                           6525 ;	genPlusIncr
                           6526 ;	Can't optimise plus by inc, falling back to the normal way
   12A0 79                 6527 	ld	a,c
   12A1 C6 0B              6528 	add	a,#0x0B
   12A3 4F                 6529 	ld	c,a
   12A4 78                 6530 	ld	a,b
   12A5 CE 00              6531 	adc	a,#0x00
   12A7 47                 6532 	ld	b,a
                           6533 ;	genPointerGet
   12A8 0A                 6534 	ld	a,(bc)
   12A9 4F                 6535 	ld	c,a
                           6536 ;	genAssign
                           6537 ;	AOP_STK for 
                           6538 ;	AOP_STK for _move_character_sloc0_1_0
   12AA F8 11              6539 	lda	hl,17(sp)
   12AC 2A                 6540 	ld	a,(hl+)
   12AD 5E                 6541 	ld	e,(hl)
   12AE F8 0D              6542 	lda	hl,13(sp)
   12B0 22                 6543 	ld	(hl+),a
   12B1 73                 6544 	ld	(hl),e
                           6545 ;	genPlus
                           6546 ;	AOP_STK for _move_character_sloc0_1_0
                           6547 ;	AOP_STK for _move_character_sloc1_1_0
                           6548 ;	genPlusIncr
                           6549 ;	Can't optimise plus by inc, falling back to the normal way
   12B2 2B                 6550 	dec	hl
   12B3 5E                 6551 	ld	e,(hl)
   12B4 23                 6552 	inc	hl
   12B5 56                 6553 	ld	d,(hl)
   12B6 21 0B 00           6554 	ld	hl,#0x000B
   12B9 19                 6555 	add	hl,de
   12BA 7D                 6556 	ld	a,l
   12BB 54                 6557 	ld	d,h
   12BC F8 0B              6558 	lda	hl,11(sp)
                           6559 ;	genPointerGet
                           6560 ;	AOP_STK for _move_character_sloc1_1_0
   12BE 22                 6561 	ld	(hl+),a
   12BF 72                 6562 	ld	(hl),d
   12C0 5F                 6563 	ld	e,a
   12C1 1A                 6564 	ld	a,(de)
   12C2 47                 6565 	ld	b,a
                           6566 ;	genCmpEq
                           6567 ; genCmpEq: left 1, right 1, result 0
   12C3 79                 6568 	ld	a,c
   12C4 B8                 6569 	cp	b
                           6570 ;	game.c 947
                           6571 ;	genRet
                           6572 ;	genLabel
   12C5 CA CB 12           6573 	jp	z,00102$
   12C8                    6574 00197$:
   12C8 C3 F5 1A           6575 	jp	00166$
   12CB                    6576 00102$:
                           6577 ;	game.c 950
                           6578 ;	genPlus
                           6579 ;	AOP_STK for _move_character_sloc0_1_0
                           6580 ;	AOP_STK for _move_character_sloc2_1_0
                           6581 ;	genPlusIncr
                           6582 ;	Can't optimise plus by inc, falling back to the normal way
   12CB F8 0D              6583 	lda	hl,13(sp)
   12CD 5E                 6584 	ld	e,(hl)
   12CE 23                 6585 	inc	hl
   12CF 56                 6586 	ld	d,(hl)
   12D0 21 09 00           6587 	ld	hl,#0x0009
   12D3 19                 6588 	add	hl,de
   12D4 7D                 6589 	ld	a,l
   12D5 54                 6590 	ld	d,h
   12D6 F8 09              6591 	lda	hl,9(sp)
                           6592 ;	genPointerGet
                           6593 ;	AOP_STK for _move_character_sloc2_1_0
   12D8 22                 6594 	ld	(hl+),a
   12D9 72                 6595 	ld	(hl),d
   12DA 5F                 6596 	ld	e,a
   12DB 1A                 6597 	ld	a,(de)
                           6598 ;	genCmpEq
                           6599 ; genCmpEq: left 1, right 1, result 0
   12DC 4F                 6600 	ld	c,a
   12DD B7                 6601 	or	a,a
   12DE CA DC 16           6602 	jp	z,00164$
   12E1                    6603 00198$:
                           6604 ;	game.c 953
                           6605 ;	genCmpEq
                           6606 ; genCmpEq: left 1, right 1, result 0
   12E1 78                 6607 	ld	a,b
   12E2 FE 01              6608 	cp	a,#0x01
   12E4 C2 32 16           6609 	jp	nz,00124$
   12E7 18 03              6610 	jr	00200$
   12E9                    6611 00199$:
   12E9 C3 32 16           6612 	jp	00124$
   12EC                    6613 00200$:
                           6614 ;	game.c 955
                           6615 ;	genAssign
   12EC 0E 02              6616 	ld	c,#0x02
                           6617 ;	game.c 958
                           6618 ;	genPlus
                           6619 ;	AOP_STK for _move_character_sloc0_1_0
                           6620 ;	AOP_STK for _move_character_sloc3_1_0
                           6621 ;	genPlusIncr
                           6622 ;	Can't optimise plus by inc, falling back to the normal way
   12EE F8 0D              6623 	lda	hl,13(sp)
   12F0 5E                 6624 	ld	e,(hl)
   12F1 23                 6625 	inc	hl
   12F2 56                 6626 	ld	d,(hl)
   12F3 21 0A 00           6627 	ld	hl,#0x000A
   12F6 19                 6628 	add	hl,de
   12F7 7D                 6629 	ld	a,l
   12F8 54                 6630 	ld	d,h
   12F9 F8 07              6631 	lda	hl,7(sp)
                           6632 ;	genPointerGet
                           6633 ;	AOP_STK for _move_character_sloc3_1_0
                           6634 ;	AOP_STK for _move_character_sloc4_1_0
   12FB 22                 6635 	ld	(hl+),a
   12FC 72                 6636 	ld	(hl),d
   12FD 5F                 6637 	ld	e,a
   12FE 1A                 6638 	ld	a,(de)
   12FF 2B                 6639 	dec	hl
   1300 2B                 6640 	dec	hl
                           6641 ;	genCmpEq
                           6642 ;	AOP_STK for _move_character_sloc4_1_0
                           6643 ; genCmpEq: left 1, right 1, result 0
   1301 77                 6644 	ld      (hl),a
                           6645 ; Removed redundent load
   1302 FE 04              6646 	cp	a,#0x04
   1304 CA 24 13           6647 	jp	z,00105$
   1307                    6648 00201$:
                           6649 ;	game.c 959
                           6650 ;	genCmpEq
                           6651 ;	AOP_STK for _move_character_sloc4_1_0
                           6652 ; genCmpEq: left 1, right 1, result 0
   1307 F8 06              6653 	lda	hl,6(sp)
   1309 7E                 6654 	ld	a,(hl)
   130A FE 08              6655 	cp	a,#0x08
   130C CA 24 13           6656 	jp	z,00105$
   130F                    6657 00202$:
                           6658 ;	game.c 960
                           6659 ;	genCmpEq
                           6660 ;	AOP_STK for _move_character_sloc4_1_0
                           6661 ; genCmpEq: left 1, right 1, result 0
   130F F8 06              6662 	lda	hl,6(sp)
   1311 7E                 6663 	ld	a,(hl)
   1312 FE 0C              6664 	cp	a,#0x0C
   1314 CA 24 13           6665 	jp	z,00105$
   1317                    6666 00203$:
                           6667 ;	game.c 961
                           6668 ;	genCmpEq
                           6669 ;	AOP_STK for _move_character_sloc4_1_0
                           6670 ; genCmpEq: left 1, right 1, result 0
   1317 F8 06              6671 	lda	hl,6(sp)
   1319 7E                 6672 	ld	a,(hl)
   131A FE 10              6673 	cp	a,#0x10
   131C C2 7F 13           6674 	jp	nz,00106$
   131F 18 03              6675 	jr	00205$
   1321                    6676 00204$:
   1321 C3 7F 13           6677 	jp	00106$
   1324                    6678 00205$:
                           6679 ;	genLabel
   1324                    6680 00105$:
                           6681 ;	game.c 963
                           6682 ;	genPlus
                           6683 ;	AOP_STK for _move_character_sloc0_1_0
                           6684 ;	AOP_STK for _move_character_sloc5_1_0
                           6685 ;	genPlusIncr
                           6686 ;	Can't optimise plus by inc, falling back to the normal way
   1324 F8 0D              6687 	lda	hl,13(sp)
   1326 5E                 6688 	ld	e,(hl)
   1327 23                 6689 	inc	hl
   1328 56                 6690 	ld	d,(hl)
   1329 21 08 00           6691 	ld	hl,#0x0008
   132C 19                 6692 	add	hl,de
   132D 7D                 6693 	ld	a,l
   132E 54                 6694 	ld	d,h
   132F F8 04              6695 	lda	hl,4(sp)
                           6696 ;	genPointerGet
                           6697 ;	AOP_STK for _move_character_sloc5_1_0
                           6698 ;	AOP_STK for _move_character_sloc4_1_0
   1331 22                 6699 	ld	(hl+),a
   1332 72                 6700 	ld	(hl),d
   1333 5F                 6701 	ld	e,a
   1334 1A                 6702 	ld	a,(de)
   1335 23                 6703 	inc	hl
   1336 77                 6704 	ld	(hl),a
                           6705 ;	genPlus
                           6706 ;	AOP_STK for _move_character_sloc0_1_0
                           6707 ;	AOP_STK for _move_character_sloc5_1_0
                           6708 ;	genPlusIncr
                           6709 ;	Can't optimise plus by inc, falling back to the normal way
   1337 F8 0D              6710 	lda	hl,13(sp)
   1339 5E                 6711 	ld	e,(hl)
   133A 23                 6712 	inc	hl
   133B 56                 6713 	ld	d,(hl)
   133C 21 01 00           6714 	ld	hl,#0x0001
   133F 19                 6715 	add	hl,de
   1340 7D                 6716 	ld	a,l
   1341 54                 6717 	ld	d,h
   1342 F8 04              6718 	lda	hl,4(sp)
                           6719 ;	genPointerGet
                           6720 ;	AOP_STK for _move_character_sloc5_1_0
                           6721 ;	AOP_STK for _move_character_sloc6_1_0
   1344 22                 6722 	ld	(hl+),a
   1345 72                 6723 	ld	(hl),d
   1346 5F                 6724 	ld	e,a
   1347 1A                 6725 	ld	a,(de)
   1348 2B                 6726 	dec	hl
   1349 2B                 6727 	dec	hl
   134A 77                 6728 	ld	(hl),a
                           6729 ;	genPointerGet
                           6730 ;	AOP_STK for _move_character_sloc0_1_0
                           6731 ;	AOP_STK for _move_character_sloc5_1_0
   134B F8 0D              6732 	lda	hl,13(sp)
   134D 5E                 6733 	ld	e,(hl)
   134E 23                 6734 	inc	hl
   134F 56                 6735 	ld	d,(hl)
   1350 1A                 6736 	ld	a,(de)
   1351 F8 04              6737 	lda	hl,4(sp)
   1353 77                 6738 	ld	(hl),a
                           6739 ;	genIpush
                           6740 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1354 C5                 6741 	push	bc
                           6742 ;	AOP_STK for _move_character_sloc4_1_0
   1355 23                 6743 	inc	hl
   1356 23                 6744 	inc	hl
   1357 7E                 6745 	ld	a,(hl)
   1358 F5                 6746 	push	af
   1359 33                 6747 	inc	sp
                           6748 ;	genIpush
                           6749 ;	AOP_STK for _move_character_sloc6_1_0
   135A F8 06              6750 	lda	hl,6(sp)
   135C 7E                 6751 	ld	a,(hl)
   135D F5                 6752 	push	af
   135E 33                 6753 	inc	sp
                           6754 ;	genIpush
                           6755 ;	AOP_STK for _move_character_sloc5_1_0
   135F 23                 6756 	inc	hl
   1360 7E                 6757 	ld	a,(hl)
   1361 F5                 6758 	push	af
   1362 33                 6759 	inc	sp
                           6760 ;	genCall
   1363 CD 09 10           6761 	call	_can_move
                           6762 ;	AOP_STK for _move_character_sloc5_1_0
   1366 F8 0A              6763 	lda	hl,10(sp)
   1368 72                 6764 	ld	(hl),d
   1369 2B                 6765 	dec	hl
   136A 73                 6766 	ld	(hl),e
   136B E8 03              6767 	lda	sp,3(sp)
   136D C1                 6768 	pop	bc
                           6769 ;	genIfx
                           6770 ;	AOP_STK for _move_character_sloc5_1_0
   136E F8 04              6771 	lda	hl,4(sp)
   1370 2A                 6772 	ld	a,(hl+)
   1371 B6                 6773 	or	a,(hl)
   1372 C2 7F 13           6774 	jp	nz,00106$
                           6775 ;	game.c 964
                           6776 ;	genAssign (pointer)
                           6777 ;	AOP_STK for _move_character_sloc3_1_0
   1375 23                 6778 	inc	hl
   1376 23                 6779 	inc	hl
   1377 5E                 6780 	ld	e,(hl)
   1378 23                 6781 	inc	hl
   1379 56                 6782 	ld	d,(hl)
   137A 3E 01              6783 	ld	a,#0x01
   137C 12                 6784 	ld	(de),a
                           6785 ;	game.c 966
                           6786 ;	genAssign
   137D 0E 00              6787 	ld	c,#0x00
                           6788 ;	genLabel
   137F                    6789 00106$:
                           6790 ;	game.c 971
                           6791 ;	genPlus
                           6792 ;	AOP_STK for _move_character_sloc0_1_0
                           6793 ;	AOP_STK for _move_character_sloc5_1_0
                           6794 ;	genPlusIncr
                           6795 ;	Can't optimise plus by inc, falling back to the normal way
   137F F8 0D              6796 	lda	hl,13(sp)
   1381 5E                 6797 	ld	e,(hl)
   1382 23                 6798 	inc	hl
   1383 56                 6799 	ld	d,(hl)
   1384 21 08 00           6800 	ld	hl,#0x0008
   1387 19                 6801 	add	hl,de
   1388 7D                 6802 	ld	a,l
   1389 54                 6803 	ld	d,h
   138A F8 04              6804 	lda	hl,4(sp)
                           6805 ;	genPointerGet
                           6806 ;	AOP_STK for _move_character_sloc5_1_0
                           6807 ;	AOP_STK for _move_character_sloc6_1_0
   138C 22                 6808 	ld	(hl+),a
   138D 72                 6809 	ld	(hl),d
   138E 5F                 6810 	ld	e,a
   138F 1A                 6811 	ld	a,(de)
   1390 2B                 6812 	dec	hl
   1391 2B                 6813 	dec	hl
   1392 77                 6814 	ld	(hl),a
                           6815 ;	genCmpGt
                           6816 ;	AOP_STK for _move_character_sloc6_1_0
                           6817 ;	AOP_STK for _move_character_sloc5_1_0
   1393 3E 04              6818 	ld	a,#0x04
   1395 96                 6819 	sub	a,(hl)
   1396 3E 00              6820 	ld	a,#0x00
   1398 17                 6821 	rla
   1399 23                 6822 	inc	hl
   139A 77                 6823 	ld	(hl),a
                           6824 ;	genIfx
                           6825 ;	AOP_STK for _move_character_sloc5_1_0
   139B AF                 6826 	xor	a,a
   139C B6                 6827 	or	a,(hl)
   139D C2 08 15           6828 	jp	nz,00115$
                           6829 ;	genJumpTab
                           6830 ;	AOP_STK for _move_character_sloc6_1_0
   13A0 2B                 6831 	dec	hl
   13A1 5E                 6832 	ld	e,(hl)
   13A2 16 00              6833 	ld	d,#0x00
   13A4 21 AB 13           6834 	ld	hl,#00206$
   13A7 19                 6835 	add	hl,de
   13A8 19                 6836 	add	hl,de
   13A9 19                 6837 	add	hl,de
   13AA E9                 6838 	jp	(hl)
   13AB                    6839 00206$:
   13AB C3 02 15           6840 	jp	00114$
   13AE C3 54 14           6841 	jp	00112$
   13B1 C3 0A 14           6842 	jp	00111$
   13B4 C3 AE 14           6843 	jp	00113$
   13B7 C3 BA 13           6844 	jp	00110$
                           6845 ;	game.c 973
                           6846 ;	genLabel
   13BA                    6847 00110$:
                           6848 ;	genPointerGet
                           6849 ;	AOP_STK for _move_character_sloc0_1_0
                           6850 ;	AOP_STK for _move_character_sloc4_1_0
   13BA F8 0D              6851 	lda	hl,13(sp)
   13BC 5E                 6852 	ld	e,(hl)
   13BD 23                 6853 	inc	hl
   13BE 56                 6854 	ld	d,(hl)
   13BF 1A                 6855 	ld	a,(de)
   13C0 F8 06              6856 	lda	hl,6(sp)
                           6857 ;	genMinus
                           6858 ;	AOP_STK for _move_character_sloc4_1_0
                           6859 ;	AOP_STK for _move_character_sloc7_1_0
   13C2 77                 6860 	ld      (hl),a
                           6861 ; Removed redundent load
   13C3 91                 6862 	sub	a,c
   13C4 F8 02              6863 	lda	hl,2(sp)
   13C6 77                 6864 	ld	(hl),a
                           6865 ;	genAssign (pointer)
                           6866 ;	AOP_STK for _move_character_sloc0_1_0
                           6867 ;	AOP_STK for _move_character_sloc7_1_0
   13C7 F8 0D              6868 	lda	hl,13(sp)
   13C9 5E                 6869 	ld	e,(hl)
   13CA 23                 6870 	inc	hl
   13CB 56                 6871 	ld	d,(hl)
   13CC F8 02              6872 	lda	hl,2(sp)
   13CE 7E                 6873 	ld	a,(hl)
   13CF 12                 6874 	ld	(de),a
                           6875 ;	game.c 974
                           6876 ;	genPlus
                           6877 ;	AOP_STK for _move_character_sloc0_1_0
                           6878 ;	AOP_STK for _move_character_sloc8_1_0
                           6879 ;	genPlusIncr
                           6880 ;	Can't optimise plus by inc, falling back to the normal way
   13D0 F8 0D              6881 	lda	hl,13(sp)
   13D2 5E                 6882 	ld	e,(hl)
   13D3 23                 6883 	inc	hl
   13D4 56                 6884 	ld	d,(hl)
   13D5 21 04 00           6885 	ld	hl,#0x0004
   13D8 19                 6886 	add	hl,de
   13D9 7D                 6887 	ld	a,l
   13DA 54                 6888 	ld	d,h
   13DB F8 00              6889 	lda	hl,0(sp)
                           6890 ;	genPointerGet
                           6891 ;	AOP_STK for _move_character_sloc8_1_0
                           6892 ;	AOP_STK for _move_character_sloc7_1_0
   13DD 22                 6893 	ld	(hl+),a
   13DE 72                 6894 	ld	(hl),d
   13DF 5F                 6895 	ld	e,a
   13E0 1A                 6896 	ld	a,(de)
   13E1 23                 6897 	inc	hl
   13E2 77                 6898 	ld	(hl),a
                           6899 ;	genIpush
                           6900 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13E3 C5                 6901 	push	bc
                           6902 ;	AOP_STK for _move_character_sloc7_1_0
   13E4 7E                 6903 	ld	a,(hl)
   13E5 F5                 6904 	push	af
   13E6 33                 6905 	inc	sp
                           6906 ;	genIpush
   13E7 78                 6907 	ld	a,b
   13E8 F5                 6908 	push	af
   13E9 33                 6909 	inc	sp
                           6910 ;	genCall
   13EA CD 00 00           6911 	call	_set_sprite_tile
   13ED E8 02              6912 	lda	sp,2(sp)
   13EF C1                 6913 	pop	bc
                           6914 ;	game.c 975
                           6915 ;	genPointerGet
                           6916 ;	AOP_STK for _move_character_sloc1_1_0
                           6917 ;	AOP_STK for _move_character_sloc8_1_0
   13F0 F8 0B              6918 	lda	hl,11(sp)
   13F2 5E                 6919 	ld	e,(hl)
   13F3 23                 6920 	inc	hl
   13F4 56                 6921 	ld	d,(hl)
   13F5 1A                 6922 	ld	a,(de)
   13F6 F8 00              6923 	lda	hl,0(sp)
   13F8 77                 6924 	ld	(hl),a
                           6925 ;	genIpush
                           6926 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13F9 C5                 6927 	push	bc
   13FA 3E 20              6928 	ld	a,#0x20
   13FC F5                 6929 	push	af
   13FD 33                 6930 	inc	sp
                           6931 ;	genIpush
                           6932 ;	AOP_STK for _move_character_sloc8_1_0
   13FE 7E                 6933 	ld	a,(hl)
   13FF F5                 6934 	push	af
   1400 33                 6935 	inc	sp
                           6936 ;	genCall
   1401 CD 00 00           6937 	call	_set_sprite_prop
   1404 E8 02              6938 	lda	sp,2(sp)
   1406 C1                 6939 	pop	bc
                           6940 ;	game.c 976
                           6941 ;	genGoto
   1407 C3 08 15           6942 	jp	00115$
                           6943 ;	game.c 978
                           6944 ;	genLabel
   140A                    6945 00111$:
                           6946 ;	genPlus
                           6947 ;	AOP_STK for _move_character_sloc0_1_0
                           6948 ;	AOP_STK for _move_character_sloc8_1_0
                           6949 ;	genPlusIncr
                           6950 ;	Can't optimise plus by inc, falling back to the normal way
   140A F8 0D              6951 	lda	hl,13(sp)
   140C 5E                 6952 	ld	e,(hl)
   140D 23                 6953 	inc	hl
   140E 56                 6954 	ld	d,(hl)
   140F 21 04 00           6955 	ld	hl,#0x0004
   1412 19                 6956 	add	hl,de
   1413 7D                 6957 	ld	a,l
   1414 54                 6958 	ld	d,h
   1415 F8 00              6959 	lda	hl,0(sp)
                           6960 ;	genPointerGet
                           6961 ;	AOP_STK for _move_character_sloc8_1_0
                           6962 ;	AOP_STK for _move_character_sloc7_1_0
   1417 22                 6963 	ld	(hl+),a
   1418 72                 6964 	ld	(hl),d
   1419 5F                 6965 	ld	e,a
   141A 1A                 6966 	ld	a,(de)
   141B 23                 6967 	inc	hl
   141C 77                 6968 	ld	(hl),a
                           6969 ;	genIpush
                           6970 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   141D C5                 6971 	push	bc
                           6972 ;	AOP_STK for _move_character_sloc7_1_0
   141E 7E                 6973 	ld	a,(hl)
   141F F5                 6974 	push	af
   1420 33                 6975 	inc	sp
                           6976 ;	genIpush
   1421 78                 6977 	ld	a,b
   1422 F5                 6978 	push	af
   1423 33                 6979 	inc	sp
                           6980 ;	genCall
   1424 CD 00 00           6981 	call	_set_sprite_tile
   1427 E8 02              6982 	lda	sp,2(sp)
   1429 C1                 6983 	pop	bc
                           6984 ;	game.c 979
                           6985 ;	genPointerGet
                           6986 ;	AOP_STK for _move_character_sloc1_1_0
                           6987 ;	AOP_STK for _move_character_sloc8_1_0
   142A F8 0B              6988 	lda	hl,11(sp)
   142C 5E                 6989 	ld	e,(hl)
   142D 23                 6990 	inc	hl
   142E 56                 6991 	ld	d,(hl)
   142F 1A                 6992 	ld	a,(de)
   1430 F8 00              6993 	lda	hl,0(sp)
   1432 77                 6994 	ld	(hl),a
                           6995 ;	genIpush
                           6996 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1433 C5                 6997 	push	bc
   1434 3E 00              6998 	ld	a,#0x00
   1436 F5                 6999 	push	af
   1437 33                 7000 	inc	sp
                           7001 ;	genIpush
                           7002 ;	AOP_STK for _move_character_sloc8_1_0
   1438 7E                 7003 	ld	a,(hl)
   1439 F5                 7004 	push	af
   143A 33                 7005 	inc	sp
                           7006 ;	genCall
   143B CD 00 00           7007 	call	_set_sprite_prop
   143E E8 02              7008 	lda	sp,2(sp)
   1440 C1                 7009 	pop	bc
                           7010 ;	game.c 980
                           7011 ;	genPointerGet
                           7012 ;	AOP_STK for _move_character_sloc0_1_0
                           7013 ;	AOP_STK for _move_character_sloc8_1_0
   1441 F8 0D              7014 	lda	hl,13(sp)
   1443 5E                 7015 	ld	e,(hl)
   1444 23                 7016 	inc	hl
   1445 56                 7017 	ld	d,(hl)
   1446 1A                 7018 	ld	a,(de)
   1447 F8 00              7019 	lda	hl,0(sp)
                           7020 ;	genPlus
                           7021 ;	AOP_STK for _move_character_sloc8_1_0
                           7022 ;	Can't optimise plus by inc, falling back to the normal way
   1449 77                 7023 	ld      (hl),a
                           7024 ; Removed redundent load
   144A 81                 7025 	add	a,c
                           7026 ;	genAssign (pointer)
                           7027 ;	AOP_STK for _move_character_sloc0_1_0
   144B F8 0D              7028 	lda	hl,13(sp)
   144D 5E                 7029 	ld	e,(hl)
   144E 23                 7030 	inc	hl
   144F 56                 7031 	ld	d,(hl)
   1450 12                 7032 	ld	(de),a
                           7033 ;	game.c 981
                           7034 ;	genGoto
   1451 C3 08 15           7035 	jp	00115$
                           7036 ;	game.c 983
                           7037 ;	genLabel
   1454                    7038 00112$:
                           7039 ;	genPlus
                           7040 ;	AOP_STK for _move_character_sloc0_1_0
                           7041 ;	AOP_STK for _move_character_sloc8_1_0
                           7042 ;	genPlusIncr
                           7043 ;	Can't optimise plus by inc, falling back to the normal way
   1454 F8 0D              7044 	lda	hl,13(sp)
   1456 5E                 7045 	ld	e,(hl)
   1457 23                 7046 	inc	hl
   1458 56                 7047 	ld	d,(hl)
   1459 21 07 00           7048 	ld	hl,#0x0007
   145C 19                 7049 	add	hl,de
   145D 7D                 7050 	ld	a,l
   145E 54                 7051 	ld	d,h
   145F F8 00              7052 	lda	hl,0(sp)
                           7053 ;	genPointerGet
                           7054 ;	AOP_STK for _move_character_sloc8_1_0
                           7055 ;	AOP_STK for _move_character_sloc7_1_0
   1461 22                 7056 	ld	(hl+),a
   1462 72                 7057 	ld	(hl),d
   1463 5F                 7058 	ld	e,a
   1464 1A                 7059 	ld	a,(de)
   1465 23                 7060 	inc	hl
   1466 77                 7061 	ld	(hl),a
                           7062 ;	genIpush
                           7063 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1467 C5                 7064 	push	bc
                           7065 ;	AOP_STK for _move_character_sloc7_1_0
   1468 7E                 7066 	ld	a,(hl)
   1469 F5                 7067 	push	af
   146A 33                 7068 	inc	sp
                           7069 ;	genIpush
   146B 78                 7070 	ld	a,b
   146C F5                 7071 	push	af
   146D 33                 7072 	inc	sp
                           7073 ;	genCall
   146E CD 00 00           7074 	call	_set_sprite_tile
   1471 E8 02              7075 	lda	sp,2(sp)
   1473 C1                 7076 	pop	bc
                           7077 ;	game.c 984
                           7078 ;	genPointerGet
                           7079 ;	AOP_STK for _move_character_sloc1_1_0
                           7080 ;	AOP_STK for _move_character_sloc8_1_0
   1474 F8 0B              7081 	lda	hl,11(sp)
   1476 5E                 7082 	ld	e,(hl)
   1477 23                 7083 	inc	hl
   1478 56                 7084 	ld	d,(hl)
   1479 1A                 7085 	ld	a,(de)
   147A F8 00              7086 	lda	hl,0(sp)
   147C 77                 7087 	ld	(hl),a
                           7088 ;	genIpush
                           7089 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   147D C5                 7090 	push	bc
   147E 3E 20              7091 	ld	a,#0x20
   1480 F5                 7092 	push	af
   1481 33                 7093 	inc	sp
                           7094 ;	genIpush
                           7095 ;	AOP_STK for _move_character_sloc8_1_0
   1482 7E                 7096 	ld	a,(hl)
   1483 F5                 7097 	push	af
   1484 33                 7098 	inc	sp
                           7099 ;	genCall
   1485 CD 00 00           7100 	call	_set_sprite_prop
   1488 E8 02              7101 	lda	sp,2(sp)
   148A C1                 7102 	pop	bc
                           7103 ;	game.c 985
                           7104 ;	genPlus
                           7105 ;	AOP_STK for _move_character_sloc0_1_0
                           7106 ;	AOP_STK for _move_character_sloc8_1_0
                           7107 ;	genPlusIncr
                           7108 ;	Can't optimise plus by inc, falling back to the normal way
   148B F8 0D              7109 	lda	hl,13(sp)
   148D 5E                 7110 	ld	e,(hl)
   148E 23                 7111 	inc	hl
   148F 56                 7112 	ld	d,(hl)
   1490 21 01 00           7113 	ld	hl,#0x0001
   1493 19                 7114 	add	hl,de
   1494 7D                 7115 	ld	a,l
   1495 54                 7116 	ld	d,h
   1496 F8 00              7117 	lda	hl,0(sp)
                           7118 ;	genPointerGet
                           7119 ;	AOP_STK for _move_character_sloc8_1_0
                           7120 ;	AOP_STK for _move_character_sloc7_1_0
   1498 22                 7121 	ld	(hl+),a
   1499 72                 7122 	ld	(hl),d
   149A 5F                 7123 	ld	e,a
   149B 1A                 7124 	ld	a,(de)
   149C 23                 7125 	inc	hl
                           7126 ;	genMinus
                           7127 ;	AOP_STK for _move_character_sloc7_1_0
                           7128 ;	AOP_STK for _move_character_sloc4_1_0
   149D 77                 7129 	ld      (hl),a
                           7130 ; Removed redundent load
   149E 91                 7131 	sub	a,c
   149F F8 06              7132 	lda	hl,6(sp)
   14A1 77                 7133 	ld	(hl),a
                           7134 ;	genAssign (pointer)
                           7135 ;	AOP_STK for _move_character_sloc8_1_0
                           7136 ;	AOP_STK for _move_character_sloc4_1_0
   14A2 F8 00              7137 	lda	hl,0(sp)
   14A4 5E                 7138 	ld	e,(hl)
   14A5 23                 7139 	inc	hl
   14A6 56                 7140 	ld	d,(hl)
   14A7 F8 06              7141 	lda	hl,6(sp)
   14A9 7E                 7142 	ld	a,(hl)
   14AA 12                 7143 	ld	(de),a
                           7144 ;	game.c 986
                           7145 ;	genGoto
   14AB C3 08 15           7146 	jp	00115$
                           7147 ;	game.c 988
                           7148 ;	genLabel
   14AE                    7149 00113$:
                           7150 ;	genPlus
                           7151 ;	AOP_STK for _move_character_sloc0_1_0
                           7152 ;	AOP_STK for _move_character_sloc8_1_0
                           7153 ;	genPlusIncr
                           7154 ;	Can't optimise plus by inc, falling back to the normal way
   14AE F8 0D              7155 	lda	hl,13(sp)
   14B0 5E                 7156 	ld	e,(hl)
   14B1 23                 7157 	inc	hl
   14B2 56                 7158 	ld	d,(hl)
   14B3 21 07 00           7159 	ld	hl,#0x0007
   14B6 19                 7160 	add	hl,de
   14B7 7D                 7161 	ld	a,l
   14B8 54                 7162 	ld	d,h
   14B9 F8 00              7163 	lda	hl,0(sp)
                           7164 ;	genPointerGet
                           7165 ;	AOP_STK for _move_character_sloc8_1_0
                           7166 ;	AOP_STK for _move_character_sloc7_1_0
   14BB 22                 7167 	ld	(hl+),a
   14BC 72                 7168 	ld	(hl),d
   14BD 5F                 7169 	ld	e,a
   14BE 1A                 7170 	ld	a,(de)
   14BF 23                 7171 	inc	hl
   14C0 77                 7172 	ld	(hl),a
                           7173 ;	genIpush
                           7174 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14C1 C5                 7175 	push	bc
                           7176 ;	AOP_STK for _move_character_sloc7_1_0
   14C2 7E                 7177 	ld	a,(hl)
   14C3 F5                 7178 	push	af
   14C4 33                 7179 	inc	sp
                           7180 ;	genIpush
   14C5 78                 7181 	ld	a,b
   14C6 F5                 7182 	push	af
   14C7 33                 7183 	inc	sp
                           7184 ;	genCall
   14C8 CD 00 00           7185 	call	_set_sprite_tile
   14CB E8 02              7186 	lda	sp,2(sp)
   14CD C1                 7187 	pop	bc
                           7188 ;	game.c 989
                           7189 ;	genPointerGet
                           7190 ;	AOP_STK for _move_character_sloc1_1_0
                           7191 ;	AOP_STK for _move_character_sloc8_1_0
   14CE F8 0B              7192 	lda	hl,11(sp)
   14D0 5E                 7193 	ld	e,(hl)
   14D1 23                 7194 	inc	hl
   14D2 56                 7195 	ld	d,(hl)
   14D3 1A                 7196 	ld	a,(de)
   14D4 F8 00              7197 	lda	hl,0(sp)
   14D6 77                 7198 	ld	(hl),a
                           7199 ;	genIpush
                           7200 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14D7 C5                 7201 	push	bc
   14D8 3E 40              7202 	ld	a,#0x40
   14DA F5                 7203 	push	af
   14DB 33                 7204 	inc	sp
                           7205 ;	genIpush
                           7206 ;	AOP_STK for _move_character_sloc8_1_0
   14DC 7E                 7207 	ld	a,(hl)
   14DD F5                 7208 	push	af
   14DE 33                 7209 	inc	sp
                           7210 ;	genCall
   14DF CD 00 00           7211 	call	_set_sprite_prop
   14E2 E8 02              7212 	lda	sp,2(sp)
   14E4 C1                 7213 	pop	bc
                           7214 ;	game.c 990
                           7215 ;	genPlus
                           7216 ;	AOP_STK for _move_character_sloc0_1_0
                           7217 ;	AOP_STK for _move_character_sloc8_1_0
                           7218 ;	genPlusIncr
                           7219 ;	Can't optimise plus by inc, falling back to the normal way
   14E5 F8 0D              7220 	lda	hl,13(sp)
   14E7 5E                 7221 	ld	e,(hl)
   14E8 23                 7222 	inc	hl
   14E9 56                 7223 	ld	d,(hl)
   14EA 21 01 00           7224 	ld	hl,#0x0001
   14ED 19                 7225 	add	hl,de
   14EE 7D                 7226 	ld	a,l
   14EF 54                 7227 	ld	d,h
   14F0 F8 00              7228 	lda	hl,0(sp)
                           7229 ;	genPointerGet
                           7230 ;	AOP_STK for _move_character_sloc8_1_0
                           7231 ;	AOP_STK for _move_character_sloc7_1_0
   14F2 22                 7232 	ld	(hl+),a
   14F3 72                 7233 	ld	(hl),d
   14F4 5F                 7234 	ld	e,a
   14F5 1A                 7235 	ld	a,(de)
   14F6 23                 7236 	inc	hl
                           7237 ;	genPlus
                           7238 ;	AOP_STK for _move_character_sloc7_1_0
                           7239 ;	Can't optimise plus by inc, falling back to the normal way
   14F7 77                 7240 	ld      (hl),a
                           7241 ; Removed redundent load
   14F8 81                 7242 	add	a,c
                           7243 ;	genAssign (pointer)
                           7244 ;	AOP_STK for _move_character_sloc8_1_0
   14F9 2B                 7245 	dec	hl
   14FA 2B                 7246 	dec	hl
   14FB 5E                 7247 	ld	e,(hl)
   14FC 23                 7248 	inc	hl
   14FD 56                 7249 	ld	d,(hl)
   14FE 12                 7250 	ld	(de),a
                           7251 ;	game.c 991
                           7252 ;	genGoto
   14FF C3 08 15           7253 	jp	00115$
                           7254 ;	game.c 993
                           7255 ;	genLabel
   1502                    7256 00114$:
                           7257 ;	genCall
                           7258 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1502 C5                 7259 	push	bc
   1503 CD F2 10           7260 	call	_rotate_player
   1506 E1                 7261 	pop	hl
   1507 44                 7262 	ld	b,h
                           7263 ;	game.c 995
                           7264 ;	genLabel
   1508                    7265 00115$:
                           7266 ;	game.c 997
                           7267 ;	genPointerGet
                           7268 ;	AOP_STK for _move_character_sloc3_1_0
   1508 F8 07              7269 	lda	hl,7(sp)
   150A 5E                 7270 	ld	e,(hl)
   150B 23                 7271 	inc	hl
   150C 56                 7272 	ld	d,(hl)
   150D 1A                 7273 	ld	a,(de)
   150E 4F                 7274 	ld	c,a
                           7275 ;	genMinus
   150F 0D                 7276 	dec	c
                           7277 ;	genAssign (pointer)
                           7278 ;	AOP_STK for _move_character_sloc3_1_0
   1510 2B                 7279 	dec	hl
   1511 5E                 7280 	ld	e,(hl)
   1512 23                 7281 	inc	hl
   1513 56                 7282 	ld	d,(hl)
   1514 79                 7283 	ld	a,c
   1515 12                 7284 	ld	(de),a
                           7285 ;	game.c 998
                           7286 ;	genCmpEq
                           7287 ; genCmpEq: left 1, right 1, result 0
   1516 79                 7288 	ld	a,c
   1517 B7                 7289 	or	a,a
   1518 C2 32 16           7290 	jp	nz,00124$
   151B 18 03              7291 	jr	00208$
   151D                    7292 00207$:
   151D C3 32 16           7293 	jp	00124$
   1520                    7294 00208$:
                           7295 ;	game.c 999
                           7296 ;	genAssign (pointer)
                           7297 ;	AOP_STK for _move_character_sloc2_1_0
   1520 F8 09              7298 	lda	hl,9(sp)
   1522 5E                 7299 	ld	e,(hl)
   1523 23                 7300 	inc	hl
   1524 56                 7301 	ld	d,(hl)
   1525 3E 00              7302 	ld	a,#0x00
   1527 12                 7303 	ld	(de),a
                           7304 ;	game.c 1000
                           7305 ;	genCmpLt
                           7306 ;	AOP_STK for _move_character_sloc6_1_0
   1528 F8 03              7307 	lda	hl,3(sp)
   152A 7E                 7308 	ld	a,(hl)
   152B FE 01              7309 	cp	#0x01
   152D DA 32 16           7310 	jp	c,00124$
                           7311 ;	genIfx
                           7312 ;	AOP_STK for _move_character_sloc5_1_0
   1530 AF                 7313 	xor	a,a
   1531 23                 7314 	inc	hl
   1532 B6                 7315 	or	a,(hl)
   1533 C2 32 16           7316 	jp	nz,00124$
                           7317 ;	genMinus
                           7318 ;	AOP_STK for _move_character_sloc6_1_0
   1536 2B                 7319 	dec	hl
   1537 7E                 7320 	ld	a,(hl)
   1538 C6 FF              7321 	add	a,#0xFF
   153A 4F                 7322 	ld	c,a
                           7323 ;	genJumpTab
   153B 59                 7324 	ld	e,c
   153C 16 00              7325 	ld	d,#0x00
   153E 21 45 15           7326 	ld	hl,#00209$
   1541 19                 7327 	add	hl,de
   1542 19                 7328 	add	hl,de
   1543 19                 7329 	add	hl,de
   1544 E9                 7330 	jp	(hl)
   1545                    7331 00209$:
   1545 C3 C3 15           7332 	jp	00118$
   1548 C3 8A 15           7333 	jp	00117$
   154B C3 FC 15           7334 	jp	00119$
   154E C3 51 15           7335 	jp	00116$
                           7336 ;	game.c 1003
                           7337 ;	genLabel
   1551                    7338 00116$:
                           7339 ;	genPlus
                           7340 ;	AOP_STK for _move_character_sloc0_1_0
                           7341 ;	AOP_STK for _move_character_sloc8_1_0
                           7342 ;	genPlusIncr
                           7343 ;	Can't optimise plus by inc, falling back to the normal way
   1551 F8 0D              7344 	lda	hl,13(sp)
   1553 5E                 7345 	ld	e,(hl)
   1554 23                 7346 	inc	hl
   1555 56                 7347 	ld	d,(hl)
   1556 21 02 00           7348 	ld	hl,#0x0002
   1559 19                 7349 	add	hl,de
   155A 7D                 7350 	ld	a,l
   155B 54                 7351 	ld	d,h
   155C F8 00              7352 	lda	hl,0(sp)
                           7353 ;	genPointerGet
                           7354 ;	AOP_STK for _move_character_sloc8_1_0
   155E 22                 7355 	ld	(hl+),a
   155F 72                 7356 	ld	(hl),d
   1560 5F                 7357 	ld	e,a
   1561 1A                 7358 	ld	a,(de)
   1562 4F                 7359 	ld	c,a
                           7360 ;	genIpush
                           7361 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1563 C5                 7362 	push	bc
   1564 79                 7363 	ld	a,c
   1565 F5                 7364 	push	af
   1566 33                 7365 	inc	sp
                           7366 ;	genIpush
   1567 78                 7367 	ld	a,b
   1568 F5                 7368 	push	af
   1569 33                 7369 	inc	sp
                           7370 ;	genCall
   156A CD 00 00           7371 	call	_set_sprite_tile
   156D E8 02              7372 	lda	sp,2(sp)
   156F E1                 7373 	pop	hl
   1570 44                 7374 	ld	b,h
                           7375 ;	game.c 1004
                           7376 ;	genPointerGet
                           7377 ;	AOP_STK for _move_character_sloc1_1_0
   1571 F8 0B              7378 	lda	hl,11(sp)
   1573 5E                 7379 	ld	e,(hl)
   1574 23                 7380 	inc	hl
   1575 56                 7381 	ld	d,(hl)
   1576 1A                 7382 	ld	a,(de)
   1577 4F                 7383 	ld	c,a
                           7384 ;	genIpush
                           7385 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1578 C5                 7386 	push	bc
   1579 3E 20              7387 	ld	a,#0x20
   157B F5                 7388 	push	af
   157C 33                 7389 	inc	sp
                           7390 ;	genIpush
   157D 79                 7391 	ld	a,c
   157E F5                 7392 	push	af
   157F 33                 7393 	inc	sp
                           7394 ;	genCall
   1580 CD 00 00           7395 	call	_set_sprite_prop
   1583 E8 02              7396 	lda	sp,2(sp)
   1585 E1                 7397 	pop	hl
   1586 44                 7398 	ld	b,h
                           7399 ;	game.c 1005
                           7400 ;	genGoto
   1587 C3 32 16           7401 	jp	00124$
                           7402 ;	game.c 1008
                           7403 ;	genLabel
   158A                    7404 00117$:
                           7405 ;	genPlus
                           7406 ;	AOP_STK for _move_character_sloc0_1_0
                           7407 ;	AOP_STK for _move_character_sloc8_1_0
                           7408 ;	genPlusIncr
                           7409 ;	Can't optimise plus by inc, falling back to the normal way
   158A F8 0D              7410 	lda	hl,13(sp)
   158C 5E                 7411 	ld	e,(hl)
   158D 23                 7412 	inc	hl
   158E 56                 7413 	ld	d,(hl)
   158F 21 02 00           7414 	ld	hl,#0x0002
   1592 19                 7415 	add	hl,de
   1593 7D                 7416 	ld	a,l
   1594 54                 7417 	ld	d,h
   1595 F8 00              7418 	lda	hl,0(sp)
                           7419 ;	genPointerGet
                           7420 ;	AOP_STK for _move_character_sloc8_1_0
   1597 22                 7421 	ld	(hl+),a
   1598 72                 7422 	ld	(hl),d
   1599 5F                 7423 	ld	e,a
   159A 1A                 7424 	ld	a,(de)
   159B 4F                 7425 	ld	c,a
                           7426 ;	genIpush
                           7427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   159C C5                 7428 	push	bc
   159D 79                 7429 	ld	a,c
   159E F5                 7430 	push	af
   159F 33                 7431 	inc	sp
                           7432 ;	genIpush
   15A0 78                 7433 	ld	a,b
   15A1 F5                 7434 	push	af
   15A2 33                 7435 	inc	sp
                           7436 ;	genCall
   15A3 CD 00 00           7437 	call	_set_sprite_tile
   15A6 E8 02              7438 	lda	sp,2(sp)
   15A8 E1                 7439 	pop	hl
   15A9 44                 7440 	ld	b,h
                           7441 ;	game.c 1009
                           7442 ;	genPointerGet
                           7443 ;	AOP_STK for _move_character_sloc1_1_0
   15AA F8 0B              7444 	lda	hl,11(sp)
   15AC 5E                 7445 	ld	e,(hl)
   15AD 23                 7446 	inc	hl
   15AE 56                 7447 	ld	d,(hl)
   15AF 1A                 7448 	ld	a,(de)
   15B0 4F                 7449 	ld	c,a
                           7450 ;	genIpush
                           7451 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15B1 C5                 7452 	push	bc
   15B2 3E 00              7453 	ld	a,#0x00
   15B4 F5                 7454 	push	af
   15B5 33                 7455 	inc	sp
                           7456 ;	genIpush
   15B6 79                 7457 	ld	a,c
   15B7 F5                 7458 	push	af
   15B8 33                 7459 	inc	sp
                           7460 ;	genCall
   15B9 CD 00 00           7461 	call	_set_sprite_prop
   15BC E8 02              7462 	lda	sp,2(sp)
   15BE E1                 7463 	pop	hl
   15BF 44                 7464 	ld	b,h
                           7465 ;	game.c 1010
                           7466 ;	genGoto
   15C0 C3 32 16           7467 	jp	00124$
                           7468 ;	game.c 1012
                           7469 ;	genLabel
   15C3                    7470 00118$:
                           7471 ;	genPlus
                           7472 ;	AOP_STK for _move_character_sloc0_1_0
                           7473 ;	AOP_STK for _move_character_sloc8_1_0
                           7474 ;	genPlusIncr
                           7475 ;	Can't optimise plus by inc, falling back to the normal way
   15C3 F8 0D              7476 	lda	hl,13(sp)
   15C5 5E                 7477 	ld	e,(hl)
   15C6 23                 7478 	inc	hl
   15C7 56                 7479 	ld	d,(hl)
   15C8 21 05 00           7480 	ld	hl,#0x0005
   15CB 19                 7481 	add	hl,de
   15CC 7D                 7482 	ld	a,l
   15CD 54                 7483 	ld	d,h
   15CE F8 00              7484 	lda	hl,0(sp)
                           7485 ;	genPointerGet
                           7486 ;	AOP_STK for _move_character_sloc8_1_0
   15D0 22                 7487 	ld	(hl+),a
   15D1 72                 7488 	ld	(hl),d
   15D2 5F                 7489 	ld	e,a
   15D3 1A                 7490 	ld	a,(de)
   15D4 4F                 7491 	ld	c,a
                           7492 ;	genIpush
                           7493 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15D5 C5                 7494 	push	bc
   15D6 79                 7495 	ld	a,c
   15D7 F5                 7496 	push	af
   15D8 33                 7497 	inc	sp
                           7498 ;	genIpush
   15D9 78                 7499 	ld	a,b
   15DA F5                 7500 	push	af
   15DB 33                 7501 	inc	sp
                           7502 ;	genCall
   15DC CD 00 00           7503 	call	_set_sprite_tile
   15DF E8 02              7504 	lda	sp,2(sp)
   15E1 E1                 7505 	pop	hl
   15E2 44                 7506 	ld	b,h
                           7507 ;	game.c 1013
                           7508 ;	genPointerGet
                           7509 ;	AOP_STK for _move_character_sloc1_1_0
   15E3 F8 0B              7510 	lda	hl,11(sp)
   15E5 5E                 7511 	ld	e,(hl)
   15E6 23                 7512 	inc	hl
   15E7 56                 7513 	ld	d,(hl)
   15E8 1A                 7514 	ld	a,(de)
   15E9 4F                 7515 	ld	c,a
                           7516 ;	genIpush
                           7517 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15EA C5                 7518 	push	bc
   15EB 3E 20              7519 	ld	a,#0x20
   15ED F5                 7520 	push	af
   15EE 33                 7521 	inc	sp
                           7522 ;	genIpush
   15EF 79                 7523 	ld	a,c
   15F0 F5                 7524 	push	af
   15F1 33                 7525 	inc	sp
                           7526 ;	genCall
   15F2 CD 00 00           7527 	call	_set_sprite_prop
   15F5 E8 02              7528 	lda	sp,2(sp)
   15F7 E1                 7529 	pop	hl
   15F8 44                 7530 	ld	b,h
                           7531 ;	game.c 1014
                           7532 ;	genGoto
   15F9 C3 32 16           7533 	jp	00124$
                           7534 ;	game.c 1016
                           7535 ;	genLabel
   15FC                    7536 00119$:
                           7537 ;	genPlus
                           7538 ;	AOP_STK for _move_character_sloc0_1_0
                           7539 ;	AOP_STK for _move_character_sloc8_1_0
                           7540 ;	genPlusIncr
                           7541 ;	Can't optimise plus by inc, falling back to the normal way
   15FC F8 0D              7542 	lda	hl,13(sp)
   15FE 5E                 7543 	ld	e,(hl)
   15FF 23                 7544 	inc	hl
   1600 56                 7545 	ld	d,(hl)
   1601 21 05 00           7546 	ld	hl,#0x0005
   1604 19                 7547 	add	hl,de
   1605 7D                 7548 	ld	a,l
   1606 54                 7549 	ld	d,h
   1607 F8 00              7550 	lda	hl,0(sp)
                           7551 ;	genPointerGet
                           7552 ;	AOP_STK for _move_character_sloc8_1_0
   1609 22                 7553 	ld	(hl+),a
   160A 72                 7554 	ld	(hl),d
   160B 5F                 7555 	ld	e,a
   160C 1A                 7556 	ld	a,(de)
   160D 4F                 7557 	ld	c,a
                           7558 ;	genIpush
                           7559 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   160E C5                 7560 	push	bc
   160F 79                 7561 	ld	a,c
   1610 F5                 7562 	push	af
   1611 33                 7563 	inc	sp
                           7564 ;	genIpush
   1612 78                 7565 	ld	a,b
   1613 F5                 7566 	push	af
   1614 33                 7567 	inc	sp
                           7568 ;	genCall
   1615 CD 00 00           7569 	call	_set_sprite_tile
   1618 E8 02              7570 	lda	sp,2(sp)
   161A E1                 7571 	pop	hl
   161B 44                 7572 	ld	b,h
                           7573 ;	game.c 1017
                           7574 ;	genPointerGet
                           7575 ;	AOP_STK for _move_character_sloc1_1_0
   161C F8 0B              7576 	lda	hl,11(sp)
   161E 5E                 7577 	ld	e,(hl)
   161F 23                 7578 	inc	hl
   1620 56                 7579 	ld	d,(hl)
   1621 1A                 7580 	ld	a,(de)
   1622 4F                 7581 	ld	c,a
                           7582 ;	genIpush
                           7583 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1623 C5                 7584 	push	bc
   1624 3E 40              7585 	ld	a,#0x40
   1626 F5                 7586 	push	af
   1627 33                 7587 	inc	sp
                           7588 ;	genIpush
   1628 79                 7589 	ld	a,c
   1629 F5                 7590 	push	af
   162A 33                 7591 	inc	sp
                           7592 ;	genCall
   162B CD 00 00           7593 	call	_set_sprite_prop
   162E E8 02              7594 	lda	sp,2(sp)
   1630 E1                 7595 	pop	hl
   1631 44                 7596 	ld	b,h
                           7597 ;	game.c 1019
                           7598 ;	genLabel
   1632                    7599 00124$:
                           7600 ;	game.c 1025
                           7601 ;	genCmpEq
                           7602 ; genCmpEq: left 1, right 1, result 0
   1632 78                 7603 	ld	a,b
   1633 FE 02              7604 	cp	a,#0x02
   1635 C2 90 1A           7605 	jp	nz,00165$
   1638 18 03              7606 	jr	00211$
   163A                    7607 00210$:
   163A C3 90 1A           7608 	jp	00165$
   163D                    7609 00211$:
                           7610 ;	game.c 1026
                           7611 ;	genPlus
                           7612 ;	AOP_STK for _move_character_sloc0_1_0
                           7613 ;	AOP_STK for _move_character_sloc8_1_0
                           7614 ;	genPlusIncr
                           7615 ;	Can't optimise plus by inc, falling back to the normal way
   163D F8 0D              7616 	lda	hl,13(sp)
   163F 5E                 7617 	ld	e,(hl)
   1640 23                 7618 	inc	hl
   1641 56                 7619 	ld	d,(hl)
   1642 21 04 00           7620 	ld	hl,#0x0004
   1645 19                 7621 	add	hl,de
   1646 7D                 7622 	ld	a,l
   1647 54                 7623 	ld	d,h
   1648 F8 00              7624 	lda	hl,0(sp)
                           7625 ;	genPointerGet
                           7626 ;	AOP_STK for _move_character_sloc8_1_0
   164A 22                 7627 	ld	(hl+),a
   164B 72                 7628 	ld	(hl),d
   164C 5F                 7629 	ld	e,a
   164D 1A                 7630 	ld	a,(de)
   164E 4F                 7631 	ld	c,a
                           7632 ;	genIpush
                           7633 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   164F C5                 7634 	push	bc
   1650 79                 7635 	ld	a,c
   1651 F5                 7636 	push	af
   1652 33                 7637 	inc	sp
                           7638 ;	genIpush
   1653 78                 7639 	ld	a,b
   1654 F5                 7640 	push	af
   1655 33                 7641 	inc	sp
                           7642 ;	genCall
   1656 CD 00 00           7643 	call	_set_sprite_tile
   1659 E8 02              7644 	lda	sp,2(sp)
   165B E1                 7645 	pop	hl
   165C 44                 7646 	ld	b,h
                           7647 ;	game.c 1028
                           7648 ;	genPointerGet
                           7649 ;	AOP_STK for _move_character_sloc2_1_0
   165D F8 09              7650 	lda	hl,9(sp)
   165F 5E                 7651 	ld	e,(hl)
   1660 23                 7652 	inc	hl
   1661 56                 7653 	ld	d,(hl)
   1662 1A                 7654 	ld	a,(de)
                           7655 ;	genCmpEq
                           7656 ; genCmpEq: left 1, right 1, result 0
   1663 4F                 7657 	ld	c,a
   1664 FE 01              7658 	cp	a,#0x01
   1666 C2 85 16           7659 	jp	nz,00126$
   1669 18 03              7660 	jr	00213$
   166B                    7661 00212$:
   166B C3 85 16           7662 	jp	00126$
   166E                    7663 00213$:
                           7664 ;	game.c 1030
                           7665 ;	genAssign (pointer)
                           7666 ;	AOP_STK for _move_character_sloc2_1_0
   166E F8 09              7667 	lda	hl,9(sp)
   1670 5E                 7668 	ld	e,(hl)
   1671 23                 7669 	inc	hl
   1672 56                 7670 	ld	d,(hl)
   1673 3E 02              7671 	ld	a,#0x02
   1675 12                 7672 	ld	(de),a
                           7673 ;	game.c 1031
                           7674 ;	genPlus
                           7675 ;	AOP_STK for _move_character_sloc0_1_0
                           7676 ;	genPlusIncr
                           7677 ;	Can't optimise plus by inc, falling back to the normal way
   1676 F8 0D              7678 	lda	hl,13(sp)
   1678 5E                 7679 	ld	e,(hl)
   1679 23                 7680 	inc	hl
   167A 56                 7681 	ld	d,(hl)
   167B 21 0A 00           7682 	ld	hl,#0x000A
   167E 19                 7683 	add	hl,de
   167F 7D                 7684 	ld	a,l
   1680 54                 7685 	ld	d,h
   1681 6F                 7686 	ld	l,a
   1682 62                 7687 	ld	h,d
                           7688 ;	genAssign (pointer)
   1683 36 10              7689 	ld	(hl),#0x10
                           7690 ;	genLabel
   1685                    7691 00126$:
                           7692 ;	game.c 1033
                           7693 ;	genPlus
                           7694 ;	AOP_STK for _move_character_sloc0_1_0
                           7695 ;	AOP_STK for _move_character_sloc8_1_0
                           7696 ;	genPlusIncr
                           7697 ;	Can't optimise plus by inc, falling back to the normal way
   1685 F8 0D              7698 	lda	hl,13(sp)
   1687 5E                 7699 	ld	e,(hl)
   1688 23                 7700 	inc	hl
   1689 56                 7701 	ld	d,(hl)
   168A 21 0A 00           7702 	ld	hl,#0x000A
   168D 19                 7703 	add	hl,de
   168E 7D                 7704 	ld	a,l
   168F 54                 7705 	ld	d,h
   1690 F8 00              7706 	lda	hl,0(sp)
                           7707 ;	genPointerGet
                           7708 ;	AOP_STK for _move_character_sloc8_1_0
   1692 22                 7709 	ld	(hl+),a
   1693 72                 7710 	ld	(hl),d
   1694 5F                 7711 	ld	e,a
   1695 1A                 7712 	ld	a,(de)
   1696 4F                 7713 	ld	c,a
                           7714 ;	genMinus
   1697 0D                 7715 	dec	c
                           7716 ;	genAssign (pointer)
                           7717 ;	AOP_STK for _move_character_sloc8_1_0
   1698 2B                 7718 	dec	hl
   1699 5E                 7719 	ld	e,(hl)
   169A 23                 7720 	inc	hl
   169B 56                 7721 	ld	d,(hl)
   169C 79                 7722 	ld	a,c
   169D 12                 7723 	ld	(de),a
                           7724 ;	game.c 1035
                           7725 ;	genCmpEq
                           7726 ; genCmpEq: left 1, right 1, result 0
   169E 79                 7727 	ld	a,c
   169F B7                 7728 	or	a,a
   16A0 C2 90 1A           7729 	jp	nz,00165$
   16A3 18 03              7730 	jr	00215$
   16A5                    7731 00214$:
   16A5 C3 90 1A           7732 	jp	00165$
   16A8                    7733 00215$:
                           7734 ;	game.c 1036
                           7735 ;	genAssign (pointer)
                           7736 ;	AOP_STK for _move_character_sloc2_1_0
   16A8 F8 09              7737 	lda	hl,9(sp)
   16AA 5E                 7738 	ld	e,(hl)
   16AB 23                 7739 	inc	hl
   16AC 56                 7740 	ld	d,(hl)
   16AD 3E 00              7741 	ld	a,#0x00
   16AF 12                 7742 	ld	(de),a
                           7743 ;	game.c 1037
                           7744 ;	genPlus
                           7745 ;	AOP_STK for _move_character_sloc0_1_0
                           7746 ;	AOP_STK for _move_character_sloc8_1_0
                           7747 ;	genPlusIncr
                           7748 ;	Can't optimise plus by inc, falling back to the normal way
   16B0 F8 0D              7749 	lda	hl,13(sp)
   16B2 5E                 7750 	ld	e,(hl)
   16B3 23                 7751 	inc	hl
   16B4 56                 7752 	ld	d,(hl)
   16B5 21 02 00           7753 	ld	hl,#0x0002
   16B8 19                 7754 	add	hl,de
   16B9 7D                 7755 	ld	a,l
   16BA 54                 7756 	ld	d,h
   16BB F8 00              7757 	lda	hl,0(sp)
                           7758 ;	genPointerGet
                           7759 ;	AOP_STK for _move_character_sloc8_1_0
   16BD 22                 7760 	ld	(hl+),a
   16BE 72                 7761 	ld	(hl),d
   16BF 5F                 7762 	ld	e,a
   16C0 1A                 7763 	ld	a,(de)
   16C1 4F                 7764 	ld	c,a
                           7765 ;	genPointerGet
                           7766 ;	AOP_STK for _move_character_sloc1_1_0
                           7767 ;	AOP_STK for _move_character_sloc8_1_0
   16C2 F8 0B              7768 	lda	hl,11(sp)
   16C4 5E                 7769 	ld	e,(hl)
   16C5 23                 7770 	inc	hl
   16C6 56                 7771 	ld	d,(hl)
   16C7 1A                 7772 	ld	a,(de)
   16C8 F8 00              7773 	lda	hl,0(sp)
   16CA 77                 7774 	ld	(hl),a
                           7775 ;	genIpush
                           7776 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16CB C5                 7777 	push	bc
   16CC 79                 7778 	ld	a,c
   16CD F5                 7779 	push	af
   16CE 33                 7780 	inc	sp
                           7781 ;	genIpush
                           7782 ;	AOP_STK for _move_character_sloc8_1_0
   16CF 7E                 7783 	ld	a,(hl)
   16D0 F5                 7784 	push	af
   16D1 33                 7785 	inc	sp
                           7786 ;	genCall
   16D2 CD 00 00           7787 	call	_set_sprite_tile
   16D5 E8 02              7788 	lda	sp,2(sp)
   16D7 E1                 7789 	pop	hl
   16D8 44                 7790 	ld	b,h
                           7791 ;	genGoto
   16D9 C3 90 1A           7792 	jp	00165$
                           7793 ;	genLabel
   16DC                    7794 00164$:
                           7795 ;	game.c 1046
                           7796 ;	genCmpEq
                           7797 ;	AOP_HL for _input_timer
                           7798 ; genCmpEq: left 1, right 1, result 0
   16DC 21 03 19           7799 	ld	hl,#_input_timer
   16DF 7E                 7800 	ld	a,(hl)
   16E0 FE 04              7801 	cp	a,#0x04
   16E2 C2 3E 17           7802 	jp	nz,00134$
   16E5 18 03              7803 	jr	00217$
   16E7                    7804 00216$:
   16E7 C3 3E 17           7805 	jp	00134$
   16EA                    7806 00217$:
                           7807 ;	game.c 1047
                           7808 ;	genPlus
                           7809 ;	AOP_STK for _move_character_sloc0_1_0
                           7810 ;	AOP_STK for _move_character_sloc8_1_0
                           7811 ;	genPlusIncr
                           7812 ;	Can't optimise plus by inc, falling back to the normal way
   16EA F8 0D              7813 	lda	hl,13(sp)
   16EC 5E                 7814 	ld	e,(hl)
   16ED 23                 7815 	inc	hl
   16EE 56                 7816 	ld	d,(hl)
   16EF 21 08 00           7817 	ld	hl,#0x0008
   16F2 19                 7818 	add	hl,de
   16F3 7D                 7819 	ld	a,l
   16F4 54                 7820 	ld	d,h
   16F5 F8 00              7821 	lda	hl,0(sp)
                           7822 ;	genPointerGet
                           7823 ;	AOP_STK for _move_character_sloc8_1_0
   16F7 22                 7824 	ld	(hl+),a
   16F8 72                 7825 	ld	(hl),d
   16F9 5F                 7826 	ld	e,a
   16FA 1A                 7827 	ld	a,(de)
   16FB 4F                 7828 	ld	c,a
                           7829 ;	genPlus
                           7830 ;	AOP_STK for _move_character_sloc0_1_0
                           7831 ;	AOP_STK for _move_character_sloc8_1_0
                           7832 ;	genPlusIncr
                           7833 ;	Can't optimise plus by inc, falling back to the normal way
   16FC F8 0D              7834 	lda	hl,13(sp)
   16FE 5E                 7835 	ld	e,(hl)
   16FF 23                 7836 	inc	hl
   1700 56                 7837 	ld	d,(hl)
   1701 21 01 00           7838 	ld	hl,#0x0001
   1704 19                 7839 	add	hl,de
   1705 7D                 7840 	ld	a,l
   1706 54                 7841 	ld	d,h
   1707 F8 00              7842 	lda	hl,0(sp)
                           7843 ;	genPointerGet
                           7844 ;	AOP_STK for _move_character_sloc8_1_0
                           7845 ;	AOP_STK for _move_character_sloc7_1_0
   1709 22                 7846 	ld	(hl+),a
   170A 72                 7847 	ld	(hl),d
   170B 5F                 7848 	ld	e,a
   170C 1A                 7849 	ld	a,(de)
   170D 23                 7850 	inc	hl
   170E 77                 7851 	ld	(hl),a
                           7852 ;	genPointerGet
                           7853 ;	AOP_STK for _move_character_sloc0_1_0
                           7854 ;	AOP_STK for _move_character_sloc8_1_0
   170F F8 0D              7855 	lda	hl,13(sp)
   1711 5E                 7856 	ld	e,(hl)
   1712 23                 7857 	inc	hl
   1713 56                 7858 	ld	d,(hl)
   1714 1A                 7859 	ld	a,(de)
   1715 F8 00              7860 	lda	hl,0(sp)
   1717 77                 7861 	ld	(hl),a
                           7862 ;	genIpush
                           7863 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1718 C5                 7864 	push	bc
   1719 79                 7865 	ld	a,c
   171A F5                 7866 	push	af
   171B 33                 7867 	inc	sp
                           7868 ;	genIpush
                           7869 ;	AOP_STK for _move_character_sloc7_1_0
   171C 23                 7870 	inc	hl
   171D 23                 7871 	inc	hl
   171E 7E                 7872 	ld	a,(hl)
   171F F5                 7873 	push	af
   1720 33                 7874 	inc	sp
                           7875 ;	genIpush
                           7876 ;	AOP_STK for _move_character_sloc8_1_0
   1721 2B                 7877 	dec	hl
   1722 2B                 7878 	dec	hl
   1723 7E                 7879 	ld	a,(hl)
   1724 F5                 7880 	push	af
   1725 33                 7881 	inc	sp
                           7882 ;	genCall
   1726 CD 09 10           7883 	call	_can_move
                           7884 ;	AOP_STK for _move_character_sloc8_1_0
   1729 F8 06              7885 	lda	hl,6(sp)
   172B 72                 7886 	ld	(hl),d
   172C 2B                 7887 	dec	hl
   172D 73                 7888 	ld	(hl),e
   172E E8 03              7889 	lda	sp,3(sp)
   1730 E1                 7890 	pop	hl
   1731 44                 7891 	ld	b,h
                           7892 ;	genIfx
                           7893 ;	AOP_STK for _move_character_sloc8_1_0
   1732 F8 00              7894 	lda	hl,0(sp)
   1734 2A                 7895 	ld	a,(hl+)
   1735 B6                 7896 	or	a,(hl)
   1736 C2 3E 17           7897 	jp	nz,00134$
                           7898 ;	game.c 1048
                           7899 ;	genAssign
                           7900 ;	AOP_HL for _input_timer
   1739 21 03 19           7901 	ld	hl,#_input_timer
   173C 36 00              7902 	ld	(hl),#0x00
                           7903 ;	genLabel
   173E                    7904 00134$:
                           7905 ;	game.c 1056
                           7906 ;	genPlus
                           7907 ;	AOP_STK for _move_character_sloc0_1_0
                           7908 ;	AOP_STK for _move_character_sloc8_1_0
                           7909 ;	genPlusIncr
                           7910 ;	Can't optimise plus by inc, falling back to the normal way
   173E F8 0D              7911 	lda	hl,13(sp)
   1740 5E                 7912 	ld	e,(hl)
   1741 23                 7913 	inc	hl
   1742 56                 7914 	ld	d,(hl)
   1743 21 08 00           7915 	ld	hl,#0x0008
   1746 19                 7916 	add	hl,de
   1747 7D                 7917 	ld	a,l
   1748 54                 7918 	ld	d,h
   1749 F8 00              7919 	lda	hl,0(sp)
                           7920 ;	genPointerGet
                           7921 ;	AOP_STK for _move_character_sloc8_1_0
   174B 22                 7922 	ld	(hl+),a
   174C 72                 7923 	ld	(hl),d
   174D 5F                 7924 	ld	e,a
   174E 1A                 7925 	ld	a,(de)
                           7926 ;	genCmpLt
                           7927 ;	AOP_STK for _move_character_sloc8_1_0
   174F 4F                 7928 	ld	c,a
   1750 FE 01              7929 	cp	#0x01
   1752 3E 00              7930 	ld	a,#0x00
   1754 17                 7931 	rla
   1755 2B                 7932 	dec	hl
   1756 77                 7933 	ld	(hl),a
                           7934 ;	genIfx
                           7935 ;	AOP_STK for _move_character_sloc8_1_0
   1757 AF                 7936 	xor	a,a
   1758 B6                 7937 	or	a,(hl)
   1759 C2 0B 1A           7938 	jp	nz,00155$
                           7939 ;	genCmpGt
   175C 3E 04              7940 	ld	a,#0x04
   175E 91                 7941 	sub	a,c
   175F DA 0B 1A           7942 	jp	c,00155$
                           7943 ;	genMinus
                           7944 ;	AOP_STK for _move_character_sloc7_1_0
   1762 79                 7945 	ld	a,c
   1763 C6 FF              7946 	add	a,#0xFF
   1765 23                 7947 	inc	hl
   1766 23                 7948 	inc	hl
                           7949 ;	genJumpTab
                           7950 ;	AOP_STK for _move_character_sloc7_1_0
   1767 77                 7951 	ld      (hl),a
   1768 5F                 7952 	ld      e,a
   1769 16 00              7953 	ld	d,#0x00
   176B 21 72 17           7954 	ld	hl,#00218$
   176E 19                 7955 	add	hl,de
   176F 19                 7956 	add	hl,de
   1770 19                 7957 	add	hl,de
   1771 E9                 7958 	jp	(hl)
   1772                    7959 00218$:
   1772 C3 C6 18           7960 	jp	00145$
   1775 C3 22 18           7961 	jp	00140$
   1778 C3 6A 19           7962 	jp	00150$
   177B C3 7E 17           7963 	jp	00135$
                           7964 ;	game.c 1059
                           7965 ;	genLabel
   177E                    7966 00135$:
                           7967 ;	genPlus
                           7968 ;	AOP_STK for _move_character_sloc0_1_0
                           7969 ;	AOP_STK for _move_character_sloc5_1_0
                           7970 ;	genPlusIncr
                           7971 ;	Can't optimise plus by inc, falling back to the normal way
   177E F8 0D              7972 	lda	hl,13(sp)
   1780 5E                 7973 	ld	e,(hl)
   1781 23                 7974 	inc	hl
   1782 56                 7975 	ld	d,(hl)
   1783 21 02 00           7976 	ld	hl,#0x0002
   1786 19                 7977 	add	hl,de
   1787 7D                 7978 	ld	a,l
   1788 54                 7979 	ld	d,h
   1789 F8 04              7980 	lda	hl,4(sp)
                           7981 ;	genPointerGet
                           7982 ;	AOP_STK for _move_character_sloc5_1_0
                           7983 ;	AOP_STK for _move_character_sloc7_1_0
   178B 22                 7984 	ld	(hl+),a
   178C 72                 7985 	ld	(hl),d
   178D 5F                 7986 	ld	e,a
   178E 1A                 7987 	ld	a,(de)
   178F F8 02              7988 	lda	hl,2(sp)
   1791 77                 7989 	ld	(hl),a
                           7990 ;	genIpush
                           7991 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1792 C5                 7992 	push	bc
                           7993 ;	AOP_STK for _move_character_sloc7_1_0
   1793 7E                 7994 	ld	a,(hl)
   1794 F5                 7995 	push	af
   1795 33                 7996 	inc	sp
                           7997 ;	genIpush
   1796 78                 7998 	ld	a,b
   1797 F5                 7999 	push	af
   1798 33                 8000 	inc	sp
                           8001 ;	genCall
   1799 CD 00 00           8002 	call	_set_sprite_tile
   179C E8 02              8003 	lda	sp,2(sp)
   179E C1                 8004 	pop	bc
                           8005 ;	game.c 1060
                           8006 ;	genCmpEq
                           8007 ;	AOP_HL for _input_timer
                           8008 ; genCmpEq: left 1, right 1, result 0
   179F 21 03 19           8009 	ld	hl,#_input_timer
   17A2 7E                 8010 	ld	a,(hl)
   17A3 FE 04              8011 	cp	a,#0x04
   17A5 C2 D9 17           8012 	jp	nz,00137$
   17A8 18 03              8013 	jr	00220$
   17AA                    8014 00219$:
   17AA C3 D9 17           8015 	jp	00137$
   17AD                    8016 00220$:
                           8017 ;	game.c 1061
                           8018 ;	genPlus
                           8019 ;	AOP_STK for _move_character_sloc0_1_0
                           8020 ;	AOP_STK for _move_character_sloc3_1_0
                           8021 ;	genPlusIncr
                           8022 ;	Can't optimise plus by inc, falling back to the normal way
   17AD F8 0D              8023 	lda	hl,13(sp)
   17AF 5E                 8024 	ld	e,(hl)
   17B0 23                 8025 	inc	hl
   17B1 56                 8026 	ld	d,(hl)
   17B2 21 03 00           8027 	ld	hl,#0x0003
   17B5 19                 8028 	add	hl,de
   17B6 7D                 8029 	ld	a,l
   17B7 54                 8030 	ld	d,h
   17B8 F8 07              8031 	lda	hl,7(sp)
                           8032 ;	genPointerGet
                           8033 ;	AOP_STK for _move_character_sloc3_1_0
                           8034 ;	AOP_STK for _move_character_sloc7_1_0
   17BA 22                 8035 	ld	(hl+),a
   17BB 72                 8036 	ld	(hl),d
   17BC 5F                 8037 	ld	e,a
   17BD 1A                 8038 	ld	a,(de)
   17BE F8 02              8039 	lda	hl,2(sp)
   17C0 77                 8040 	ld	(hl),a
                           8041 ;	genPointerGet
                           8042 ;	AOP_STK for _move_character_sloc1_1_0
                           8043 ;	AOP_STK for _move_character_sloc6_1_0
   17C1 F8 0B              8044 	lda	hl,11(sp)
   17C3 5E                 8045 	ld	e,(hl)
   17C4 23                 8046 	inc	hl
   17C5 56                 8047 	ld	d,(hl)
   17C6 1A                 8048 	ld	a,(de)
   17C7 F8 03              8049 	lda	hl,3(sp)
   17C9 77                 8050 	ld	(hl),a
                           8051 ;	genIpush
                           8052 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17CA C5                 8053 	push	bc
                           8054 ;	AOP_STK for _move_character_sloc7_1_0
   17CB 2B                 8055 	dec	hl
   17CC 7E                 8056 	ld	a,(hl)
   17CD F5                 8057 	push	af
   17CE 33                 8058 	inc	sp
                           8059 ;	genIpush
                           8060 ;	AOP_STK for _move_character_sloc6_1_0
   17CF 23                 8061 	inc	hl
   17D0 7E                 8062 	ld	a,(hl)
   17D1 F5                 8063 	push	af
   17D2 33                 8064 	inc	sp
                           8065 ;	genCall
   17D3 CD 00 00           8066 	call	_set_sprite_tile
   17D6 E8 02              8067 	lda	sp,2(sp)
   17D8 C1                 8068 	pop	bc
                           8069 ;	genLabel
   17D9                    8070 00137$:
                           8071 ;	game.c 1063
                           8072 ;	genCmpEq
                           8073 ;	AOP_HL for _input_timer
                           8074 ; genCmpEq: left 1, right 1, result 0
   17D9 21 03 19           8075 	ld	hl,#_input_timer
   17DC 7E                 8076 	ld	a,(hl)
   17DD FE 02              8077 	cp	a,#0x02
   17DF C2 08 18           8078 	jp	nz,00139$
   17E2 18 03              8079 	jr	00222$
   17E4                    8080 00221$:
   17E4 C3 08 18           8081 	jp	00139$
   17E7                    8082 00222$:
                           8083 ;	game.c 1064
                           8084 ;	genPointerGet
                           8085 ;	AOP_STK for _move_character_sloc5_1_0
                           8086 ;	AOP_STK for _move_character_sloc7_1_0
   17E7 F8 04              8087 	lda	hl,4(sp)
   17E9 5E                 8088 	ld	e,(hl)
   17EA 23                 8089 	inc	hl
   17EB 56                 8090 	ld	d,(hl)
   17EC 1A                 8091 	ld	a,(de)
   17ED F8 02              8092 	lda	hl,2(sp)
   17EF 77                 8093 	ld	(hl),a
                           8094 ;	genPointerGet
                           8095 ;	AOP_STK for _move_character_sloc1_1_0
                           8096 ;	AOP_STK for _move_character_sloc6_1_0
   17F0 F8 0B              8097 	lda	hl,11(sp)
   17F2 5E                 8098 	ld	e,(hl)
   17F3 23                 8099 	inc	hl
   17F4 56                 8100 	ld	d,(hl)
   17F5 1A                 8101 	ld	a,(de)
   17F6 F8 03              8102 	lda	hl,3(sp)
   17F8 77                 8103 	ld	(hl),a
                           8104 ;	genIpush
                           8105 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17F9 C5                 8106 	push	bc
                           8107 ;	AOP_STK for _move_character_sloc7_1_0
   17FA 2B                 8108 	dec	hl
   17FB 7E                 8109 	ld	a,(hl)
   17FC F5                 8110 	push	af
   17FD 33                 8111 	inc	sp
                           8112 ;	genIpush
                           8113 ;	AOP_STK for _move_character_sloc6_1_0
   17FE 23                 8114 	inc	hl
   17FF 7E                 8115 	ld	a,(hl)
   1800 F5                 8116 	push	af
   1801 33                 8117 	inc	sp
                           8118 ;	genCall
   1802 CD 00 00           8119 	call	_set_sprite_tile
   1805 E8 02              8120 	lda	sp,2(sp)
   1807 C1                 8121 	pop	bc
                           8122 ;	genLabel
   1808                    8123 00139$:
                           8124 ;	game.c 1066
                           8125 ;	genPointerGet
                           8126 ;	AOP_STK for _move_character_sloc1_1_0
                           8127 ;	AOP_STK for _move_character_sloc7_1_0
   1808 F8 0B              8128 	lda	hl,11(sp)
   180A 5E                 8129 	ld	e,(hl)
   180B 23                 8130 	inc	hl
   180C 56                 8131 	ld	d,(hl)
   180D 1A                 8132 	ld	a,(de)
   180E F8 02              8133 	lda	hl,2(sp)
   1810 77                 8134 	ld	(hl),a
                           8135 ;	genIpush
                           8136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1811 C5                 8137 	push	bc
   1812 3E 20              8138 	ld	a,#0x20
   1814 F5                 8139 	push	af
   1815 33                 8140 	inc	sp
                           8141 ;	genIpush
                           8142 ;	AOP_STK for _move_character_sloc7_1_0
   1816 7E                 8143 	ld	a,(hl)
   1817 F5                 8144 	push	af
   1818 33                 8145 	inc	sp
                           8146 ;	genCall
   1819 CD 00 00           8147 	call	_set_sprite_prop
   181C E8 02              8148 	lda	sp,2(sp)
   181E C1                 8149 	pop	bc
                           8150 ;	game.c 1067
                           8151 ;	genGoto
   181F C3 0B 1A           8152 	jp	00155$
                           8153 ;	game.c 1070
                           8154 ;	genLabel
   1822                    8155 00140$:
                           8156 ;	genPlus
                           8157 ;	AOP_STK for _move_character_sloc0_1_0
                           8158 ;	AOP_STK for _move_character_sloc5_1_0
                           8159 ;	genPlusIncr
                           8160 ;	Can't optimise plus by inc, falling back to the normal way
   1822 F8 0D              8161 	lda	hl,13(sp)
   1824 5E                 8162 	ld	e,(hl)
   1825 23                 8163 	inc	hl
   1826 56                 8164 	ld	d,(hl)
   1827 21 02 00           8165 	ld	hl,#0x0002
   182A 19                 8166 	add	hl,de
   182B 7D                 8167 	ld	a,l
   182C 54                 8168 	ld	d,h
   182D F8 04              8169 	lda	hl,4(sp)
                           8170 ;	genPointerGet
                           8171 ;	AOP_STK for _move_character_sloc5_1_0
                           8172 ;	AOP_STK for _move_character_sloc7_1_0
   182F 22                 8173 	ld	(hl+),a
   1830 72                 8174 	ld	(hl),d
   1831 5F                 8175 	ld	e,a
   1832 1A                 8176 	ld	a,(de)
   1833 F8 02              8177 	lda	hl,2(sp)
   1835 77                 8178 	ld	(hl),a
                           8179 ;	genIpush
                           8180 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1836 C5                 8181 	push	bc
                           8182 ;	AOP_STK for _move_character_sloc7_1_0
   1837 7E                 8183 	ld	a,(hl)
   1838 F5                 8184 	push	af
   1839 33                 8185 	inc	sp
                           8186 ;	genIpush
   183A 78                 8187 	ld	a,b
   183B F5                 8188 	push	af
   183C 33                 8189 	inc	sp
                           8190 ;	genCall
   183D CD 00 00           8191 	call	_set_sprite_tile
   1840 E8 02              8192 	lda	sp,2(sp)
   1842 C1                 8193 	pop	bc
                           8194 ;	game.c 1071
                           8195 ;	genCmpEq
                           8196 ;	AOP_HL for _input_timer
                           8197 ; genCmpEq: left 1, right 1, result 0
   1843 21 03 19           8198 	ld	hl,#_input_timer
   1846 7E                 8199 	ld	a,(hl)
   1847 FE 04              8200 	cp	a,#0x04
   1849 C2 7D 18           8201 	jp	nz,00142$
   184C 18 03              8202 	jr	00224$
   184E                    8203 00223$:
   184E C3 7D 18           8204 	jp	00142$
   1851                    8205 00224$:
                           8206 ;	game.c 1072
                           8207 ;	genPlus
                           8208 ;	AOP_STK for _move_character_sloc0_1_0
                           8209 ;	AOP_STK for _move_character_sloc3_1_0
                           8210 ;	genPlusIncr
                           8211 ;	Can't optimise plus by inc, falling back to the normal way
   1851 F8 0D              8212 	lda	hl,13(sp)
   1853 5E                 8213 	ld	e,(hl)
   1854 23                 8214 	inc	hl
   1855 56                 8215 	ld	d,(hl)
   1856 21 03 00           8216 	ld	hl,#0x0003
   1859 19                 8217 	add	hl,de
   185A 7D                 8218 	ld	a,l
   185B 54                 8219 	ld	d,h
   185C F8 07              8220 	lda	hl,7(sp)
                           8221 ;	genPointerGet
                           8222 ;	AOP_STK for _move_character_sloc3_1_0
                           8223 ;	AOP_STK for _move_character_sloc7_1_0
   185E 22                 8224 	ld	(hl+),a
   185F 72                 8225 	ld	(hl),d
   1860 5F                 8226 	ld	e,a
   1861 1A                 8227 	ld	a,(de)
   1862 F8 02              8228 	lda	hl,2(sp)
   1864 77                 8229 	ld	(hl),a
                           8230 ;	genPointerGet
                           8231 ;	AOP_STK for _move_character_sloc1_1_0
                           8232 ;	AOP_STK for _move_character_sloc6_1_0
   1865 F8 0B              8233 	lda	hl,11(sp)
   1867 5E                 8234 	ld	e,(hl)
   1868 23                 8235 	inc	hl
   1869 56                 8236 	ld	d,(hl)
   186A 1A                 8237 	ld	a,(de)
   186B F8 03              8238 	lda	hl,3(sp)
   186D 77                 8239 	ld	(hl),a
                           8240 ;	genIpush
                           8241 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   186E C5                 8242 	push	bc
                           8243 ;	AOP_STK for _move_character_sloc7_1_0
   186F 2B                 8244 	dec	hl
   1870 7E                 8245 	ld	a,(hl)
   1871 F5                 8246 	push	af
   1872 33                 8247 	inc	sp
                           8248 ;	genIpush
                           8249 ;	AOP_STK for _move_character_sloc6_1_0
   1873 23                 8250 	inc	hl
   1874 7E                 8251 	ld	a,(hl)
   1875 F5                 8252 	push	af
   1876 33                 8253 	inc	sp
                           8254 ;	genCall
   1877 CD 00 00           8255 	call	_set_sprite_tile
   187A E8 02              8256 	lda	sp,2(sp)
   187C C1                 8257 	pop	bc
                           8258 ;	genLabel
   187D                    8259 00142$:
                           8260 ;	game.c 1074
                           8261 ;	genCmpEq
                           8262 ;	AOP_HL for _input_timer
                           8263 ; genCmpEq: left 1, right 1, result 0
   187D 21 03 19           8264 	ld	hl,#_input_timer
   1880 7E                 8265 	ld	a,(hl)
   1881 FE 02              8266 	cp	a,#0x02
   1883 C2 AC 18           8267 	jp	nz,00144$
   1886 18 03              8268 	jr	00226$
   1888                    8269 00225$:
   1888 C3 AC 18           8270 	jp	00144$
   188B                    8271 00226$:
                           8272 ;	game.c 1075
                           8273 ;	genPointerGet
                           8274 ;	AOP_STK for _move_character_sloc5_1_0
                           8275 ;	AOP_STK for _move_character_sloc7_1_0
   188B F8 04              8276 	lda	hl,4(sp)
   188D 5E                 8277 	ld	e,(hl)
   188E 23                 8278 	inc	hl
   188F 56                 8279 	ld	d,(hl)
   1890 1A                 8280 	ld	a,(de)
   1891 F8 02              8281 	lda	hl,2(sp)
   1893 77                 8282 	ld	(hl),a
                           8283 ;	genPointerGet
                           8284 ;	AOP_STK for _move_character_sloc1_1_0
                           8285 ;	AOP_STK for _move_character_sloc6_1_0
   1894 F8 0B              8286 	lda	hl,11(sp)
   1896 5E                 8287 	ld	e,(hl)
   1897 23                 8288 	inc	hl
   1898 56                 8289 	ld	d,(hl)
   1899 1A                 8290 	ld	a,(de)
   189A F8 03              8291 	lda	hl,3(sp)
   189C 77                 8292 	ld	(hl),a
                           8293 ;	genIpush
                           8294 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   189D C5                 8295 	push	bc
                           8296 ;	AOP_STK for _move_character_sloc7_1_0
   189E 2B                 8297 	dec	hl
   189F 7E                 8298 	ld	a,(hl)
   18A0 F5                 8299 	push	af
   18A1 33                 8300 	inc	sp
                           8301 ;	genIpush
                           8302 ;	AOP_STK for _move_character_sloc6_1_0
   18A2 23                 8303 	inc	hl
   18A3 7E                 8304 	ld	a,(hl)
   18A4 F5                 8305 	push	af
   18A5 33                 8306 	inc	sp
                           8307 ;	genCall
   18A6 CD 00 00           8308 	call	_set_sprite_tile
   18A9 E8 02              8309 	lda	sp,2(sp)
   18AB C1                 8310 	pop	bc
                           8311 ;	genLabel
   18AC                    8312 00144$:
                           8313 ;	game.c 1078
                           8314 ;	genPointerGet
                           8315 ;	AOP_STK for _move_character_sloc1_1_0
                           8316 ;	AOP_STK for _move_character_sloc7_1_0
   18AC F8 0B              8317 	lda	hl,11(sp)
   18AE 5E                 8318 	ld	e,(hl)
   18AF 23                 8319 	inc	hl
   18B0 56                 8320 	ld	d,(hl)
   18B1 1A                 8321 	ld	a,(de)
   18B2 F8 02              8322 	lda	hl,2(sp)
   18B4 77                 8323 	ld	(hl),a
                           8324 ;	genIpush
                           8325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18B5 C5                 8326 	push	bc
   18B6 3E 00              8327 	ld	a,#0x00
   18B8 F5                 8328 	push	af
   18B9 33                 8329 	inc	sp
                           8330 ;	genIpush
                           8331 ;	AOP_STK for _move_character_sloc7_1_0
   18BA 7E                 8332 	ld	a,(hl)
   18BB F5                 8333 	push	af
   18BC 33                 8334 	inc	sp
                           8335 ;	genCall
   18BD CD 00 00           8336 	call	_set_sprite_prop
   18C0 E8 02              8337 	lda	sp,2(sp)
   18C2 C1                 8338 	pop	bc
                           8339 ;	game.c 1079
                           8340 ;	genGoto
   18C3 C3 0B 1A           8341 	jp	00155$
                           8342 ;	game.c 1081
                           8343 ;	genLabel
   18C6                    8344 00145$:
                           8345 ;	genPlus
                           8346 ;	AOP_STK for _move_character_sloc0_1_0
                           8347 ;	AOP_STK for _move_character_sloc5_1_0
                           8348 ;	genPlusIncr
                           8349 ;	Can't optimise plus by inc, falling back to the normal way
   18C6 F8 0D              8350 	lda	hl,13(sp)
   18C8 5E                 8351 	ld	e,(hl)
   18C9 23                 8352 	inc	hl
   18CA 56                 8353 	ld	d,(hl)
   18CB 21 05 00           8354 	ld	hl,#0x0005
   18CE 19                 8355 	add	hl,de
   18CF 7D                 8356 	ld	a,l
   18D0 54                 8357 	ld	d,h
   18D1 F8 04              8358 	lda	hl,4(sp)
                           8359 ;	genPointerGet
                           8360 ;	AOP_STK for _move_character_sloc5_1_0
                           8361 ;	AOP_STK for _move_character_sloc7_1_0
   18D3 22                 8362 	ld	(hl+),a
   18D4 72                 8363 	ld	(hl),d
   18D5 5F                 8364 	ld	e,a
   18D6 1A                 8365 	ld	a,(de)
   18D7 F8 02              8366 	lda	hl,2(sp)
   18D9 77                 8367 	ld	(hl),a
                           8368 ;	genIpush
                           8369 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18DA C5                 8370 	push	bc
                           8371 ;	AOP_STK for _move_character_sloc7_1_0
   18DB 7E                 8372 	ld	a,(hl)
   18DC F5                 8373 	push	af
   18DD 33                 8374 	inc	sp
                           8375 ;	genIpush
   18DE 78                 8376 	ld	a,b
   18DF F5                 8377 	push	af
   18E0 33                 8378 	inc	sp
                           8379 ;	genCall
   18E1 CD 00 00           8380 	call	_set_sprite_tile
   18E4 E8 02              8381 	lda	sp,2(sp)
   18E6 C1                 8382 	pop	bc
                           8383 ;	game.c 1083
                           8384 ;	genCmpEq
                           8385 ;	AOP_HL for _input_timer
                           8386 ; genCmpEq: left 1, right 1, result 0
   18E7 21 03 19           8387 	ld	hl,#_input_timer
   18EA 7E                 8388 	ld	a,(hl)
   18EB FE 04              8389 	cp	a,#0x04
   18ED C2 21 19           8390 	jp	nz,00147$
   18F0 18 03              8391 	jr	00228$
   18F2                    8392 00227$:
   18F2 C3 21 19           8393 	jp	00147$
   18F5                    8394 00228$:
                           8395 ;	game.c 1084
                           8396 ;	genPlus
                           8397 ;	AOP_STK for _move_character_sloc0_1_0
                           8398 ;	AOP_STK for _move_character_sloc3_1_0
                           8399 ;	genPlusIncr
                           8400 ;	Can't optimise plus by inc, falling back to the normal way
   18F5 F8 0D              8401 	lda	hl,13(sp)
   18F7 5E                 8402 	ld	e,(hl)
   18F8 23                 8403 	inc	hl
   18F9 56                 8404 	ld	d,(hl)
   18FA 21 06 00           8405 	ld	hl,#0x0006
   18FD 19                 8406 	add	hl,de
   18FE 7D                 8407 	ld	a,l
   18FF 54                 8408 	ld	d,h
   1900 F8 07              8409 	lda	hl,7(sp)
                           8410 ;	genPointerGet
                           8411 ;	AOP_STK for _move_character_sloc3_1_0
                           8412 ;	AOP_STK for _move_character_sloc7_1_0
   1902 22                 8413 	ld	(hl+),a
   1903 72                 8414 	ld	(hl),d
   1904 5F                 8415 	ld	e,a
   1905 1A                 8416 	ld	a,(de)
   1906 F8 02              8417 	lda	hl,2(sp)
   1908 77                 8418 	ld	(hl),a
                           8419 ;	genPointerGet
                           8420 ;	AOP_STK for _move_character_sloc1_1_0
                           8421 ;	AOP_STK for _move_character_sloc6_1_0
   1909 F8 0B              8422 	lda	hl,11(sp)
   190B 5E                 8423 	ld	e,(hl)
   190C 23                 8424 	inc	hl
   190D 56                 8425 	ld	d,(hl)
   190E 1A                 8426 	ld	a,(de)
   190F F8 03              8427 	lda	hl,3(sp)
   1911 77                 8428 	ld	(hl),a
                           8429 ;	genIpush
                           8430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1912 C5                 8431 	push	bc
                           8432 ;	AOP_STK for _move_character_sloc7_1_0
   1913 2B                 8433 	dec	hl
   1914 7E                 8434 	ld	a,(hl)
   1915 F5                 8435 	push	af
   1916 33                 8436 	inc	sp
                           8437 ;	genIpush
                           8438 ;	AOP_STK for _move_character_sloc6_1_0
   1917 23                 8439 	inc	hl
   1918 7E                 8440 	ld	a,(hl)
   1919 F5                 8441 	push	af
   191A 33                 8442 	inc	sp
                           8443 ;	genCall
   191B CD 00 00           8444 	call	_set_sprite_tile
   191E E8 02              8445 	lda	sp,2(sp)
   1920 C1                 8446 	pop	bc
                           8447 ;	genLabel
   1921                    8448 00147$:
                           8449 ;	game.c 1086
                           8450 ;	genCmpEq
                           8451 ;	AOP_HL for _input_timer
                           8452 ; genCmpEq: left 1, right 1, result 0
   1921 21 03 19           8453 	ld	hl,#_input_timer
   1924 7E                 8454 	ld	a,(hl)
   1925 FE 02              8455 	cp	a,#0x02
   1927 C2 50 19           8456 	jp	nz,00149$
   192A 18 03              8457 	jr	00230$
   192C                    8458 00229$:
   192C C3 50 19           8459 	jp	00149$
   192F                    8460 00230$:
                           8461 ;	game.c 1087
                           8462 ;	genPointerGet
                           8463 ;	AOP_STK for _move_character_sloc5_1_0
                           8464 ;	AOP_STK for _move_character_sloc7_1_0
   192F F8 04              8465 	lda	hl,4(sp)
   1931 5E                 8466 	ld	e,(hl)
   1932 23                 8467 	inc	hl
   1933 56                 8468 	ld	d,(hl)
   1934 1A                 8469 	ld	a,(de)
   1935 F8 02              8470 	lda	hl,2(sp)
   1937 77                 8471 	ld	(hl),a
                           8472 ;	genPointerGet
                           8473 ;	AOP_STK for _move_character_sloc1_1_0
                           8474 ;	AOP_STK for _move_character_sloc6_1_0
   1938 F8 0B              8475 	lda	hl,11(sp)
   193A 5E                 8476 	ld	e,(hl)
   193B 23                 8477 	inc	hl
   193C 56                 8478 	ld	d,(hl)
   193D 1A                 8479 	ld	a,(de)
   193E F8 03              8480 	lda	hl,3(sp)
   1940 77                 8481 	ld	(hl),a
                           8482 ;	genIpush
                           8483 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1941 C5                 8484 	push	bc
                           8485 ;	AOP_STK for _move_character_sloc7_1_0
   1942 2B                 8486 	dec	hl
   1943 7E                 8487 	ld	a,(hl)
   1944 F5                 8488 	push	af
   1945 33                 8489 	inc	sp
                           8490 ;	genIpush
                           8491 ;	AOP_STK for _move_character_sloc6_1_0
   1946 23                 8492 	inc	hl
   1947 7E                 8493 	ld	a,(hl)
   1948 F5                 8494 	push	af
   1949 33                 8495 	inc	sp
                           8496 ;	genCall
   194A CD 00 00           8497 	call	_set_sprite_tile
   194D E8 02              8498 	lda	sp,2(sp)
   194F C1                 8499 	pop	bc
                           8500 ;	genLabel
   1950                    8501 00149$:
                           8502 ;	game.c 1090
                           8503 ;	genPointerGet
                           8504 ;	AOP_STK for _move_character_sloc1_1_0
                           8505 ;	AOP_STK for _move_character_sloc7_1_0
   1950 F8 0B              8506 	lda	hl,11(sp)
   1952 5E                 8507 	ld	e,(hl)
   1953 23                 8508 	inc	hl
   1954 56                 8509 	ld	d,(hl)
   1955 1A                 8510 	ld	a,(de)
   1956 F8 02              8511 	lda	hl,2(sp)
   1958 77                 8512 	ld	(hl),a
                           8513 ;	genIpush
                           8514 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1959 C5                 8515 	push	bc
   195A 3E 20              8516 	ld	a,#0x20
   195C F5                 8517 	push	af
   195D 33                 8518 	inc	sp
                           8519 ;	genIpush
                           8520 ;	AOP_STK for _move_character_sloc7_1_0
   195E 7E                 8521 	ld	a,(hl)
   195F F5                 8522 	push	af
   1960 33                 8523 	inc	sp
                           8524 ;	genCall
   1961 CD 00 00           8525 	call	_set_sprite_prop
   1964 E8 02              8526 	lda	sp,2(sp)
   1966 C1                 8527 	pop	bc
                           8528 ;	game.c 1091
                           8529 ;	genGoto
   1967 C3 0B 1A           8530 	jp	00155$
                           8531 ;	game.c 1093
                           8532 ;	genLabel
   196A                    8533 00150$:
                           8534 ;	genPlus
                           8535 ;	AOP_STK for _move_character_sloc0_1_0
                           8536 ;	AOP_STK for _move_character_sloc5_1_0
                           8537 ;	genPlusIncr
                           8538 ;	Can't optimise plus by inc, falling back to the normal way
   196A F8 0D              8539 	lda	hl,13(sp)
   196C 5E                 8540 	ld	e,(hl)
   196D 23                 8541 	inc	hl
   196E 56                 8542 	ld	d,(hl)
   196F 21 05 00           8543 	ld	hl,#0x0005
   1972 19                 8544 	add	hl,de
   1973 7D                 8545 	ld	a,l
   1974 54                 8546 	ld	d,h
   1975 F8 04              8547 	lda	hl,4(sp)
                           8548 ;	genPointerGet
                           8549 ;	AOP_STK for _move_character_sloc5_1_0
                           8550 ;	AOP_STK for _move_character_sloc7_1_0
   1977 22                 8551 	ld	(hl+),a
   1978 72                 8552 	ld	(hl),d
   1979 5F                 8553 	ld	e,a
   197A 1A                 8554 	ld	a,(de)
   197B F8 02              8555 	lda	hl,2(sp)
   197D 77                 8556 	ld	(hl),a
                           8557 ;	genIpush
                           8558 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   197E C5                 8559 	push	bc
                           8560 ;	AOP_STK for _move_character_sloc7_1_0
   197F 7E                 8561 	ld	a,(hl)
   1980 F5                 8562 	push	af
   1981 33                 8563 	inc	sp
                           8564 ;	genIpush
   1982 78                 8565 	ld	a,b
   1983 F5                 8566 	push	af
   1984 33                 8567 	inc	sp
                           8568 ;	genCall
   1985 CD 00 00           8569 	call	_set_sprite_tile
   1988 E8 02              8570 	lda	sp,2(sp)
   198A C1                 8571 	pop	bc
                           8572 ;	game.c 1095
                           8573 ;	genCmpEq
                           8574 ;	AOP_HL for _input_timer
                           8575 ; genCmpEq: left 1, right 1, result 0
   198B 21 03 19           8576 	ld	hl,#_input_timer
   198E 7E                 8577 	ld	a,(hl)
   198F FE 04              8578 	cp	a,#0x04
   1991 C2 C5 19           8579 	jp	nz,00152$
   1994 18 03              8580 	jr	00232$
   1996                    8581 00231$:
   1996 C3 C5 19           8582 	jp	00152$
   1999                    8583 00232$:
                           8584 ;	game.c 1096
                           8585 ;	genPlus
                           8586 ;	AOP_STK for _move_character_sloc0_1_0
                           8587 ;	AOP_STK for _move_character_sloc3_1_0
                           8588 ;	genPlusIncr
                           8589 ;	Can't optimise plus by inc, falling back to the normal way
   1999 F8 0D              8590 	lda	hl,13(sp)
   199B 5E                 8591 	ld	e,(hl)
   199C 23                 8592 	inc	hl
   199D 56                 8593 	ld	d,(hl)
   199E 21 06 00           8594 	ld	hl,#0x0006
   19A1 19                 8595 	add	hl,de
   19A2 7D                 8596 	ld	a,l
   19A3 54                 8597 	ld	d,h
   19A4 F8 07              8598 	lda	hl,7(sp)
                           8599 ;	genPointerGet
                           8600 ;	AOP_STK for _move_character_sloc3_1_0
                           8601 ;	AOP_STK for _move_character_sloc7_1_0
   19A6 22                 8602 	ld	(hl+),a
   19A7 72                 8603 	ld	(hl),d
   19A8 5F                 8604 	ld	e,a
   19A9 1A                 8605 	ld	a,(de)
   19AA F8 02              8606 	lda	hl,2(sp)
   19AC 77                 8607 	ld	(hl),a
                           8608 ;	genPointerGet
                           8609 ;	AOP_STK for _move_character_sloc1_1_0
                           8610 ;	AOP_STK for _move_character_sloc6_1_0
   19AD F8 0B              8611 	lda	hl,11(sp)
   19AF 5E                 8612 	ld	e,(hl)
   19B0 23                 8613 	inc	hl
   19B1 56                 8614 	ld	d,(hl)
   19B2 1A                 8615 	ld	a,(de)
   19B3 F8 03              8616 	lda	hl,3(sp)
   19B5 77                 8617 	ld	(hl),a
                           8618 ;	genIpush
                           8619 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19B6 C5                 8620 	push	bc
                           8621 ;	AOP_STK for _move_character_sloc7_1_0
   19B7 2B                 8622 	dec	hl
   19B8 7E                 8623 	ld	a,(hl)
   19B9 F5                 8624 	push	af
   19BA 33                 8625 	inc	sp
                           8626 ;	genIpush
                           8627 ;	AOP_STK for _move_character_sloc6_1_0
   19BB 23                 8628 	inc	hl
   19BC 7E                 8629 	ld	a,(hl)
   19BD F5                 8630 	push	af
   19BE 33                 8631 	inc	sp
                           8632 ;	genCall
   19BF CD 00 00           8633 	call	_set_sprite_tile
   19C2 E8 02              8634 	lda	sp,2(sp)
   19C4 C1                 8635 	pop	bc
                           8636 ;	genLabel
   19C5                    8637 00152$:
                           8638 ;	game.c 1098
                           8639 ;	genCmpEq
                           8640 ;	AOP_HL for _input_timer
                           8641 ; genCmpEq: left 1, right 1, result 0
   19C5 21 03 19           8642 	ld	hl,#_input_timer
   19C8 7E                 8643 	ld	a,(hl)
   19C9 FE 02              8644 	cp	a,#0x02
   19CB C2 F4 19           8645 	jp	nz,00154$
   19CE 18 03              8646 	jr	00234$
   19D0                    8647 00233$:
   19D0 C3 F4 19           8648 	jp	00154$
   19D3                    8649 00234$:
                           8650 ;	game.c 1099
                           8651 ;	genPointerGet
                           8652 ;	AOP_STK for _move_character_sloc5_1_0
                           8653 ;	AOP_STK for _move_character_sloc7_1_0
   19D3 F8 04              8654 	lda	hl,4(sp)
   19D5 5E                 8655 	ld	e,(hl)
   19D6 23                 8656 	inc	hl
   19D7 56                 8657 	ld	d,(hl)
   19D8 1A                 8658 	ld	a,(de)
   19D9 F8 02              8659 	lda	hl,2(sp)
   19DB 77                 8660 	ld	(hl),a
                           8661 ;	genPointerGet
                           8662 ;	AOP_STK for _move_character_sloc1_1_0
                           8663 ;	AOP_STK for _move_character_sloc6_1_0
   19DC F8 0B              8664 	lda	hl,11(sp)
   19DE 5E                 8665 	ld	e,(hl)
   19DF 23                 8666 	inc	hl
   19E0 56                 8667 	ld	d,(hl)
   19E1 1A                 8668 	ld	a,(de)
   19E2 F8 03              8669 	lda	hl,3(sp)
   19E4 77                 8670 	ld	(hl),a
                           8671 ;	genIpush
                           8672 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19E5 C5                 8673 	push	bc
                           8674 ;	AOP_STK for _move_character_sloc7_1_0
   19E6 2B                 8675 	dec	hl
   19E7 7E                 8676 	ld	a,(hl)
   19E8 F5                 8677 	push	af
   19E9 33                 8678 	inc	sp
                           8679 ;	genIpush
                           8680 ;	AOP_STK for _move_character_sloc6_1_0
   19EA 23                 8681 	inc	hl
   19EB 7E                 8682 	ld	a,(hl)
   19EC F5                 8683 	push	af
   19ED 33                 8684 	inc	sp
                           8685 ;	genCall
   19EE CD 00 00           8686 	call	_set_sprite_tile
   19F1 E8 02              8687 	lda	sp,2(sp)
   19F3 C1                 8688 	pop	bc
                           8689 ;	genLabel
   19F4                    8690 00154$:
                           8691 ;	game.c 1101
                           8692 ;	genPointerGet
                           8693 ;	AOP_STK for _move_character_sloc1_1_0
                           8694 ;	AOP_STK for _move_character_sloc7_1_0
   19F4 F8 0B              8695 	lda	hl,11(sp)
   19F6 5E                 8696 	ld	e,(hl)
   19F7 23                 8697 	inc	hl
   19F8 56                 8698 	ld	d,(hl)
   19F9 1A                 8699 	ld	a,(de)
   19FA F8 02              8700 	lda	hl,2(sp)
   19FC 77                 8701 	ld	(hl),a
                           8702 ;	genIpush
                           8703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19FD C5                 8704 	push	bc
   19FE 3E 40              8705 	ld	a,#0x40
   1A00 F5                 8706 	push	af
   1A01 33                 8707 	inc	sp
                           8708 ;	genIpush
                           8709 ;	AOP_STK for _move_character_sloc7_1_0
   1A02 7E                 8710 	ld	a,(hl)
   1A03 F5                 8711 	push	af
   1A04 33                 8712 	inc	sp
                           8713 ;	genCall
   1A05 CD 00 00           8714 	call	_set_sprite_prop
   1A08 E8 02              8715 	lda	sp,2(sp)
   1A0A C1                 8716 	pop	bc
                           8717 ;	game.c 1103
                           8718 ;	genLabel
   1A0B                    8719 00155$:
                           8720 ;	game.c 1106
                           8721 ;	genCmpEq
                           8722 ;	AOP_HL for _input_timer
                           8723 ; genCmpEq: left 1, right 1, result 0
   1A0B 21 03 19           8724 	ld	hl,#_input_timer
   1A0E 7E                 8725 	ld	a,(hl)
   1A0F B7                 8726 	or	a,a
   1A10 CA 90 1A           8727 	jp	z,00165$
   1A13                    8728 00235$:
                           8729 ;	game.c 1108
                           8730 ;	genIfx
                           8731 ;	AOP_STK for _move_character_sloc8_1_0
   1A13 AF                 8732 	xor	a,a
   1A14 F8 00              8733 	lda	hl,0(sp)
   1A16 B6                 8734 	or	a,(hl)
   1A17 C2 90 1A           8735 	jp	nz,00165$
                           8736 ;	genCmpGt
   1A1A 3E 04              8737 	ld	a,#0x04
   1A1C 91                 8738 	sub	a,c
   1A1D DA 90 1A           8739 	jp	c,00165$
                           8740 ;	genMinus
   1A20 0D                 8741 	dec	c
                           8742 ;	genJumpTab
   1A21 59                 8743 	ld	e,c
   1A22 16 00              8744 	ld	d,#0x00
   1A24 21 2B 1A           8745 	ld	hl,#00236$
   1A27 19                 8746 	add	hl,de
   1A28 19                 8747 	add	hl,de
   1A29 19                 8748 	add	hl,de
   1A2A E9                 8749 	jp	(hl)
   1A2B                    8750 00236$:
   1A2B C3 5A 1A           8751 	jp	00158$
   1A2E C3 49 1A           8752 	jp	00157$
   1A31 C3 77 1A           8753 	jp	00159$
   1A34 C3 37 1A           8754 	jp	00156$
                           8755 ;	game.c 1110
                           8756 ;	genLabel
   1A37                    8757 00156$:
                           8758 ;	genPointerGet
                           8759 ;	AOP_STK for _move_character_sloc0_1_0
   1A37 F8 0D              8760 	lda	hl,13(sp)
   1A39 5E                 8761 	ld	e,(hl)
   1A3A 23                 8762 	inc	hl
   1A3B 56                 8763 	ld	d,(hl)
   1A3C 1A                 8764 	ld	a,(de)
   1A3D 4F                 8765 	ld	c,a
                           8766 ;	genMinus
   1A3E 0D                 8767 	dec	c
   1A3F 0D                 8768 	dec	c
                           8769 ;	genAssign (pointer)
                           8770 ;	AOP_STK for _move_character_sloc0_1_0
   1A40 2B                 8771 	dec	hl
   1A41 5E                 8772 	ld	e,(hl)
   1A42 23                 8773 	inc	hl
   1A43 56                 8774 	ld	d,(hl)
   1A44 79                 8775 	ld	a,c
   1A45 12                 8776 	ld	(de),a
                           8777 ;	game.c 1111
                           8778 ;	genGoto
   1A46 C3 90 1A           8779 	jp	00165$
                           8780 ;	game.c 1113
                           8781 ;	genLabel
   1A49                    8782 00157$:
                           8783 ;	genPointerGet
                           8784 ;	AOP_STK for _move_character_sloc0_1_0
   1A49 F8 0D              8785 	lda	hl,13(sp)
   1A4B 5E                 8786 	ld	e,(hl)
   1A4C 23                 8787 	inc	hl
   1A4D 56                 8788 	ld	d,(hl)
   1A4E 1A                 8789 	ld	a,(de)
                           8790 ;	genPlus
                           8791 ;	genPlusIncr
                           8792 ;	Can't optimise plus by inc, falling back to the normal way
   1A4F 4F                 8793 	ld	c,a
   1A50 C6 02              8794 	add	a,#0x02
                           8795 ;	genAssign (pointer)
                           8796 ;	AOP_STK for _move_character_sloc0_1_0
   1A52 2B                 8797 	dec	hl
   1A53 5E                 8798 	ld	e,(hl)
   1A54 23                 8799 	inc	hl
   1A55 56                 8800 	ld	d,(hl)
   1A56 12                 8801 	ld	(de),a
                           8802 ;	game.c 1114
                           8803 ;	genGoto
   1A57 C3 90 1A           8804 	jp	00165$
                           8805 ;	game.c 1116
                           8806 ;	genLabel
   1A5A                    8807 00158$:
                           8808 ;	genPlus
                           8809 ;	AOP_STK for _move_character_sloc0_1_0
                           8810 ;	AOP_STK for _move_character_sloc8_1_0
                           8811 ;	genPlusIncr
                           8812 ;	Can't optimise plus by inc, falling back to the normal way
   1A5A F8 0D              8813 	lda	hl,13(sp)
   1A5C 5E                 8814 	ld	e,(hl)
   1A5D 23                 8815 	inc	hl
   1A5E 56                 8816 	ld	d,(hl)
   1A5F 21 01 00           8817 	ld	hl,#0x0001
   1A62 19                 8818 	add	hl,de
   1A63 7D                 8819 	ld	a,l
   1A64 54                 8820 	ld	d,h
   1A65 F8 00              8821 	lda	hl,0(sp)
                           8822 ;	genPointerGet
                           8823 ;	AOP_STK for _move_character_sloc8_1_0
   1A67 22                 8824 	ld	(hl+),a
   1A68 72                 8825 	ld	(hl),d
   1A69 5F                 8826 	ld	e,a
   1A6A 1A                 8827 	ld	a,(de)
   1A6B 4F                 8828 	ld	c,a
                           8829 ;	genMinus
   1A6C 0D                 8830 	dec	c
   1A6D 0D                 8831 	dec	c
                           8832 ;	genAssign (pointer)
                           8833 ;	AOP_STK for _move_character_sloc8_1_0
   1A6E 2B                 8834 	dec	hl
   1A6F 5E                 8835 	ld	e,(hl)
   1A70 23                 8836 	inc	hl
   1A71 56                 8837 	ld	d,(hl)
   1A72 79                 8838 	ld	a,c
   1A73 12                 8839 	ld	(de),a
                           8840 ;	game.c 1117
                           8841 ;	genGoto
   1A74 C3 90 1A           8842 	jp	00165$
                           8843 ;	game.c 1119
                           8844 ;	genLabel
   1A77                    8845 00159$:
                           8846 ;	genPlus
                           8847 ;	AOP_STK for _move_character_sloc0_1_0
                           8848 ;	AOP_STK for _move_character_sloc8_1_0
                           8849 ;	genPlusIncr
                           8850 ;	Can't optimise plus by inc, falling back to the normal way
   1A77 F8 0D              8851 	lda	hl,13(sp)
   1A79 5E                 8852 	ld	e,(hl)
   1A7A 23                 8853 	inc	hl
   1A7B 56                 8854 	ld	d,(hl)
   1A7C 21 01 00           8855 	ld	hl,#0x0001
   1A7F 19                 8856 	add	hl,de
   1A80 7D                 8857 	ld	a,l
   1A81 54                 8858 	ld	d,h
   1A82 F8 00              8859 	lda	hl,0(sp)
                           8860 ;	genPointerGet
                           8861 ;	AOP_STK for _move_character_sloc8_1_0
   1A84 22                 8862 	ld	(hl+),a
   1A85 72                 8863 	ld	(hl),d
   1A86 5F                 8864 	ld	e,a
   1A87 1A                 8865 	ld	a,(de)
                           8866 ;	genPlus
                           8867 ;	genPlusIncr
                           8868 ;	Can't optimise plus by inc, falling back to the normal way
   1A88 4F                 8869 	ld	c,a
   1A89 C6 02              8870 	add	a,#0x02
                           8871 ;	genAssign (pointer)
                           8872 ;	AOP_STK for _move_character_sloc8_1_0
   1A8B 2B                 8873 	dec	hl
   1A8C 5E                 8874 	ld	e,(hl)
   1A8D 23                 8875 	inc	hl
   1A8E 56                 8876 	ld	d,(hl)
   1A8F 12                 8877 	ld	(de),a
                           8878 ;	game.c 1121
                           8879 ;	genLabel
   1A90                    8880 00165$:
                           8881 ;	game.c 1126
                           8882 ;	genPlus
                           8883 ;	AOP_STK for _move_character_sloc0_1_0
                           8884 ;	AOP_STK for _move_character_sloc8_1_0
                           8885 ;	genPlusIncr
                           8886 ;	Can't optimise plus by inc, falling back to the normal way
   1A90 F8 0D              8887 	lda	hl,13(sp)
   1A92 5E                 8888 	ld	e,(hl)
   1A93 23                 8889 	inc	hl
   1A94 56                 8890 	ld	d,(hl)
   1A95 21 01 00           8891 	ld	hl,#0x0001
   1A98 19                 8892 	add	hl,de
   1A99 7D                 8893 	ld	a,l
   1A9A 54                 8894 	ld	d,h
   1A9B F8 00              8895 	lda	hl,0(sp)
                           8896 ;	genPointerGet
                           8897 ;	AOP_STK for _move_character_sloc8_1_0
   1A9D 22                 8898 	ld	(hl+),a
   1A9E 72                 8899 	ld	(hl),d
   1A9F 5F                 8900 	ld	e,a
   1AA0 1A                 8901 	ld	a,(de)
   1AA1 4F                 8902 	ld	c,a
                           8903 ;	genPointerGet
                           8904 ;	AOP_STK for _move_character_sloc0_1_0
                           8905 ;	AOP_STK for _move_character_sloc7_1_0
   1AA2 F8 0D              8906 	lda	hl,13(sp)
   1AA4 5E                 8907 	ld	e,(hl)
   1AA5 23                 8908 	inc	hl
   1AA6 56                 8909 	ld	d,(hl)
   1AA7 1A                 8910 	ld	a,(de)
   1AA8 F8 02              8911 	lda	hl,2(sp)
   1AAA 77                 8912 	ld	(hl),a
                           8913 ;	genIpush
                           8914 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AAB 79                 8915 	ld	a,c
   1AAC F5                 8916 	push	af
   1AAD 33                 8917 	inc	sp
                           8918 ;	genIpush
                           8919 ;	AOP_STK for _move_character_sloc7_1_0
   1AAE 7E                 8920 	ld	a,(hl)
   1AAF F5                 8921 	push	af
   1AB0 33                 8922 	inc	sp
                           8923 ;	genIpush
   1AB1 78                 8924 	ld	a,b
   1AB2 F5                 8925 	push	af
   1AB3 33                 8926 	inc	sp
                           8927 ;	genCall
   1AB4 CD 00 00           8928 	call	_move_sprite
   1AB7 E8 03              8929 	lda	sp,3(sp)
                           8930 ;	game.c 1127
                           8931 ;	genPlus
                           8932 ;	AOP_STK for _move_character_sloc0_1_0
                           8933 ;	genPlusIncr
                           8934 ;	Can't optimise plus by inc, falling back to the normal way
   1AB9 F8 0D              8935 	lda	hl,13(sp)
   1ABB 5E                 8936 	ld	e,(hl)
   1ABC 23                 8937 	inc	hl
   1ABD 56                 8938 	ld	d,(hl)
   1ABE 21 0C 00           8939 	ld	hl,#0x000C
   1AC1 19                 8940 	add	hl,de
   1AC2 4D                 8941 	ld	c,l
   1AC3 44                 8942 	ld	b,h
                           8943 ;	genPointerGet
                           8944 ;	AOP_STK for _move_character_sloc8_1_0
                           8945 ;	AOP_STK for _move_character_sloc7_1_0
   1AC4 F8 00              8946 	lda	hl,0(sp)
   1AC6 5E                 8947 	ld	e,(hl)
   1AC7 23                 8948 	inc	hl
   1AC8 56                 8949 	ld	d,(hl)
   1AC9 1A                 8950 	ld	a,(de)
   1ACA 23                 8951 	inc	hl
   1ACB 77                 8952 	ld	(hl),a
                           8953 ;	genPointerGet
                           8954 ;	AOP_STK for _move_character_sloc0_1_0
                           8955 ;	AOP_STK for _move_character_sloc8_1_0
   1ACC F8 0D              8956 	lda	hl,13(sp)
   1ACE 5E                 8957 	ld	e,(hl)
   1ACF 23                 8958 	inc	hl
   1AD0 56                 8959 	ld	d,(hl)
   1AD1 1A                 8960 	ld	a,(de)
   1AD2 F8 00              8961 	lda	hl,0(sp)
   1AD4 77                 8962 	ld	(hl),a
                           8963 ;	genIpush
                           8964 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1AD5 C5                 8965 	push	bc
                           8966 ;	AOP_STK for _move_character_sloc7_1_0
   1AD6 23                 8967 	inc	hl
   1AD7 23                 8968 	inc	hl
   1AD8 7E                 8969 	ld	a,(hl)
   1AD9 F5                 8970 	push	af
   1ADA 33                 8971 	inc	sp
                           8972 ;	genIpush
                           8973 ;	AOP_STK for _move_character_sloc8_1_0
   1ADB 2B                 8974 	dec	hl
   1ADC 2B                 8975 	dec	hl
   1ADD 7E                 8976 	ld	a,(hl)
   1ADE F5                 8977 	push	af
   1ADF 33                 8978 	inc	sp
                           8979 ;	genCall
   1AE0 CD 50 0D           8980 	call	__get_map_position_from_xy
                           8981 ;	AOP_STK for _move_character_sloc8_1_0
   1AE3 F8 05              8982 	lda	hl,5(sp)
   1AE5 72                 8983 	ld	(hl),d
   1AE6 2B                 8984 	dec	hl
   1AE7 73                 8985 	ld	(hl),e
   1AE8 E8 02              8986 	lda	sp,2(sp)
   1AEA C1                 8987 	pop	bc
                           8988 ;	genAssign (pointer)
                           8989 ;	AOP_STK for _move_character_sloc8_1_0
   1AEB 59                 8990 	ld	e,c
   1AEC 50                 8991 	ld	d,b
   1AED F8 00              8992 	lda	hl,0(sp)
   1AEF 7E                 8993 	ld	a,(hl)
   1AF0 12                 8994 	ld	(de),a
   1AF1 13                 8995 	inc	de
   1AF2 23                 8996 	inc	hl
   1AF3 7E                 8997 	ld	a,(hl)
   1AF4 12                 8998 	ld	(de),a
                           8999 ;	genLabel
   1AF5                    9000 00166$:
                           9001 ;	genEndFunction
   1AF5 E8 0F              9002 	lda	sp,15(sp)
   1AF7 C9                 9003 	ret
   1AF8                    9004 ___move_character_end:
                           9005 ;	game.c 1130
                           9006 ;	genLabel
                           9007 ;	genFunction
                           9008 ;	---------------------------------
                           9009 ; Function set_character_sprite
                           9010 ; ---------------------------------
   1AF8                    9011 ___set_character_sprite_start:
   1AF8                    9012 _set_character_sprite:
   1AF8 E8 F9              9013 	lda	sp,-7(sp)
                           9014 ;	game.c 1131
                           9015 ;	genAssign
                           9016 ;	AOP_STK for 
   1AFA F8 09              9017 	lda	hl,9(sp)
   1AFC 4E                 9018 	ld	c,(hl)
   1AFD 23                 9019 	inc	hl
   1AFE 46                 9020 	ld	b,(hl)
                           9021 ;	genPlus
                           9022 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9023 ;	genPlusIncr
                           9024 ;	Can't optimise plus by inc, falling back to the normal way
   1AFF 21 0B 00           9025 	ld	hl,#0x000B
   1B02 09                 9026 	add	hl,bc
   1B03 7D                 9027 	ld	a,l
   1B04 54                 9028 	ld	d,h
   1B05 F8 05              9029 	lda	hl,5(sp)
                           9030 ;	genPointerGet
                           9031 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9032 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B07 22                 9033 	ld	(hl+),a
   1B08 72                 9034 	ld	(hl),d
   1B09 5F                 9035 	ld	e,a
   1B0A 1A                 9036 	ld	a,(de)
   1B0B 2B                 9037 	dec	hl
   1B0C 2B                 9038 	dec	hl
   1B0D 77                 9039 	ld	(hl),a
                           9040 ;	genCmpGt
                           9041 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           9042 ;	AOP_HL for _characters_available
   1B0E 21 02 19           9043 	ld	hl,#_characters_available
   1B11 7E                 9044 	ld	a,(hl)
   1B12 F8 04              9045 	lda	hl,4(sp)
   1B14 96                 9046 	sub	a,(hl)
   1B15 DA 91 1B           9047 	jp	c,00103$
                           9048 ;	game.c 1132
                           9049 ;	genPlus
                           9050 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9051 ;	genPlusIncr
                           9052 ;	Can't optimise plus by inc, falling back to the normal way
   1B18 21 02 00           9053 	ld	hl,#0x0002
   1B1B 09                 9054 	add	hl,bc
   1B1C 7D                 9055 	ld	a,l
   1B1D 54                 9056 	ld	d,h
   1B1E F8 02              9057 	lda	hl,2(sp)
                           9058 ;	genPointerGet
                           9059 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9060 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B20 22                 9061 	ld	(hl+),a
   1B21 72                 9062 	ld	(hl),d
   1B22 5F                 9063 	ld	e,a
   1B23 1A                 9064 	ld	a,(de)
   1B24 2B                 9065 	dec	hl
   1B25 2B                 9066 	dec	hl
   1B26 77                 9067 	ld	(hl),a
                           9068 ;	genIpush
                           9069 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1B27 C5                 9070 	push	bc
                           9071 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B28 7E                 9072 	ld	a,(hl)
   1B29 F5                 9073 	push	af
   1B2A 33                 9074 	inc	sp
                           9075 ;	genIpush
                           9076 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B2B F8 07              9077 	lda	hl,7(sp)
   1B2D 7E                 9078 	ld	a,(hl)
   1B2E F5                 9079 	push	af
   1B2F 33                 9080 	inc	sp
                           9081 ;	genCall
   1B30 CD 00 00           9082 	call	_set_sprite_tile
   1B33 E8 02              9083 	lda	sp,2(sp)
   1B35 C1                 9084 	pop	bc
                           9085 ;	game.c 1133
                           9086 ;	genPlus
                           9087 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9088 ;	genPlusIncr
                           9089 ;	Can't optimise plus by inc, falling back to the normal way
   1B36 21 01 00           9090 	ld	hl,#0x0001
   1B39 09                 9091 	add	hl,bc
   1B3A 7D                 9092 	ld	a,l
   1B3B 54                 9093 	ld	d,h
   1B3C F8 02              9094 	lda	hl,2(sp)
                           9095 ;	genPointerGet
                           9096 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9097 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B3E 22                 9098 	ld	(hl+),a
   1B3F 72                 9099 	ld	(hl),d
   1B40 5F                 9100 	ld	e,a
   1B41 1A                 9101 	ld	a,(de)
   1B42 2B                 9102 	dec	hl
   1B43 2B                 9103 	dec	hl
   1B44 77                 9104 	ld	(hl),a
                           9105 ;	genPointerGet
                           9106 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B45 0A                 9107 	ld	a,(bc)
   1B46 F8 04              9108 	lda	hl,4(sp)
                           9109 ;	genPointerGet
                           9110 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9111 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B48 22                 9112 	ld	(hl+),a
   1B49 5E                 9113 	ld	e,(hl)
   1B4A 23                 9114 	inc	hl
   1B4B 56                 9115 	ld	d,(hl)
   1B4C 1A                 9116 	ld	a,(de)
   1B4D F8 00              9117 	lda	hl,0(sp)
   1B4F 77                 9118 	ld	(hl),a
                           9119 ;	genIpush
                           9120 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1B50 C5                 9121 	push	bc
                           9122 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1B51 23                 9123 	inc	hl
   1B52 7E                 9124 	ld	a,(hl)
   1B53 F5                 9125 	push	af
   1B54 33                 9126 	inc	sp
                           9127 ;	genIpush
                           9128 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1B55 F8 07              9129 	lda	hl,7(sp)
   1B57 7E                 9130 	ld	a,(hl)
   1B58 F5                 9131 	push	af
   1B59 33                 9132 	inc	sp
                           9133 ;	genIpush
                           9134 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B5A F8 04              9135 	lda	hl,4(sp)
   1B5C 7E                 9136 	ld	a,(hl)
   1B5D F5                 9137 	push	af
   1B5E 33                 9138 	inc	sp
                           9139 ;	genCall
   1B5F CD 00 00           9140 	call	_move_sprite
   1B62 E8 03              9141 	lda	sp,3(sp)
   1B64 C1                 9142 	pop	bc
                           9143 ;	game.c 1134
                           9144 ;	genPlus
                           9145 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           9146 ;	genPlusIncr
                           9147 ;	Can't optimise plus by inc, falling back to the normal way
   1B65 21 0C 00           9148 	ld	hl,#0x000C
   1B68 09                 9149 	add	hl,bc
   1B69 7D                 9150 	ld	a,l
   1B6A 54                 9151 	ld	d,h
   1B6B F8 05              9152 	lda	hl,5(sp)
   1B6D 22                 9153 	ld	(hl+),a
   1B6E 72                 9154 	ld	(hl),d
                           9155 ;	genPointerGet
                           9156 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           9157 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B6F F8 02              9158 	lda	hl,2(sp)
   1B71 5E                 9159 	ld	e,(hl)
   1B72 23                 9160 	inc	hl
   1B73 56                 9161 	ld	d,(hl)
   1B74 1A                 9162 	ld	a,(de)
   1B75 F8 00              9163 	lda	hl,0(sp)
   1B77 77                 9164 	ld	(hl),a
                           9165 ;	genPointerGet
   1B78 0A                 9166 	ld	a,(bc)
   1B79 4F                 9167 	ld	c,a
                           9168 ;	genIpush
                           9169 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           9170 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1B7A 7E                 9171 	ld	a,(hl)
   1B7B F5                 9172 	push	af
   1B7C 33                 9173 	inc	sp
                           9174 ;	genIpush
   1B7D 79                 9175 	ld	a,c
   1B7E F5                 9176 	push	af
   1B7F 33                 9177 	inc	sp
                           9178 ;	genCall
   1B80 CD 50 0D           9179 	call	__get_map_position_from_xy
   1B83 42                 9180 	ld	b,d
   1B84 4B                 9181 	ld	c,e
   1B85 E8 02              9182 	lda	sp,2(sp)
                           9183 ;	genAssign (pointer)
                           9184 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   1B87 F8 05              9185 	lda	hl,5(sp)
   1B89 5E                 9186 	ld	e,(hl)
   1B8A 23                 9187 	inc	hl
   1B8B 56                 9188 	ld	d,(hl)
   1B8C 79                 9189 	ld	a,c
   1B8D 12                 9190 	ld	(de),a
   1B8E 13                 9191 	inc	de
   1B8F 78                 9192 	ld	a,b
   1B90 12                 9193 	ld	(de),a
                           9194 ;	genLabel
   1B91                    9195 00103$:
                           9196 ;	genEndFunction
   1B91 E8 07              9197 	lda	sp,7(sp)
   1B93 C9                 9198 	ret
   1B94                    9199 ___set_character_sprite_end:
                           9200 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_map_position_from_xy_end   0DAA R
  0 ____get_map_position_from_xy_sta   0D50 R
  0 ____get_next_map_position_end      0BA3 R
  0 ____get_next_map_position_start    0AEF R
  0 ___can_move_end                    10F2 R
  0 ___can_move_start                  1009 R
  0 ___can_move_to_map_pos_end         1009 R
  0 ___can_move_to_map_pos_start       0F40 R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0D50 R
  0 ___dog1_power_apply_start          0BA3 R
  0 ___dog1_power_end                  0AEF R
  0 ___dog1_power_start                0858 R
  0 ___got_door_end                    07CC R
  0 ___got_door_start                  05E2 R
  0 ___got_key_end                     05E2 R
  0 ___got_key_start                   0535 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0535 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      0858 R
  0 ___is_ded_start                    07CC R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              1AF8 R
  0 ___move_character_start            1298 R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0F40 R
  0 ___player_input_start              0DAA R
  0 ___rotate_player_end               1298 R
  0 ___rotate_player_start             10F2 R
  0 ___set_character_sprite_end        1B94 R
  0 ___set_character_sprite_start      1AF8 R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_map_position_from_xy         0D50 GR
  0 __get_next_map_position            0AEF GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          1009 GR
  0 _can_move_to_map_pos               0F40 GR
  1 _cat                               1A97 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7B GR
  0 _dog1_power                        0858 GR
  0 _dog1_power_apply                  0BA3 GR
  1 _dog2                              1A89 GR
  0 _got_door                          05E2 GR
  0 _got_key                           0535 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA5 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07CC GR
  1 _item1                             1ABB GR
  1 _item2                             1AC1 GR
  1 _item3                             1AC7 GR
    _joypad                            **** GX
  1 _key                               1AB5 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    1298 GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AB3 GR
  0 _player_input                      0DAA GR
    _printf                            **** GX
  0 _rotate_player                     10F2 GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              1AF8 GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1B94   flags 0
   1 _DATA                              size 1ACD   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 1039   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
