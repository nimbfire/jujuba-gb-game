                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Thu Feb 27 16:14:58 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc152040
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rotate_player
                             12 	.globl _dog1_power
                             13 	.globl _ice_should_slide
                             14 	.globl _instanciate_chars
                             15 	.globl _copy_map
                             16 	.globl _helper_copy_map
                             17 	.globl _change_char
                             18 	.globl _map_water
                             19 	.globl _init
                             20 	.globl _main
                             21 	.globl _timers
                             22 	.globl _performantDelay
                             23 	.globl _item3
                             24 	.globl _item2
                             25 	.globl _item1
                             26 	.globl _key
                             27 	.globl _player
                             28 	.globl _horse
                             29 	.globl _cat
                             30 	.globl _dog2
                             31 	.globl _dog1
                             32 	.globl _bunny
                             33 	.globl _map
                             34 	.globl _current_map
                             35 	.globl _input_timer
                             36 	.globl _characters_available
                             37 	.globl _timer
                             38 	.globl _running
                             39 	.globl _spritePalette
                             40 	.globl _sprites_park
                             41 	.globl _MapTest
                             42 	.globl _Map10
                             43 	.globl _Map9
                             44 	.globl _Map8
                             45 	.globl _Map7
                             46 	.globl _Map6
                             47 	.globl _Map5
                             48 	.globl _Map4
                             49 	.globl _Map3
                             50 	.globl _Map2
                             51 	.globl _Map1
                             52 	.globl _Characters
                             53 	.globl _map_loop
                             54 	.globl _map_init
                             55 	.globl _got_key
                             56 	.globl _got_door
                             57 	.globl _is_ded
                             58 	.globl __get_next_map_position
                             59 	.globl _dog1_power_apply
                             60 	.globl _get_player_map_position
                             61 	.globl _player_input
                             62 	.globl _can_move_to_map_pos
                             63 	.globl _can_move
                             64 	.globl _move_character
                             65 	.globl _set_character_sprite
                             66 ;--------------------------------------------------------
                             67 ; special function registers
                             68 ;--------------------------------------------------------
                             69 ;--------------------------------------------------------
                             70 ; special function bits 
                             71 ;--------------------------------------------------------
                             72 ;--------------------------------------------------------
                             73 ; internal ram data
                             74 ;--------------------------------------------------------
                             75 	.area _DATA
   0000                      76 _Characters::
   0000                      77 	.ds 496
   01F0                      78 _Map1::
   01F0                      79 	.ds 360
   0358                      80 _Map2::
   0358                      81 	.ds 360
   04C0                      82 _Map3::
   04C0                      83 	.ds 360
   0628                      84 _Map4::
   0628                      85 	.ds 360
   0790                      86 _Map5::
   0790                      87 	.ds 360
   08F8                      88 _Map6::
   08F8                      89 	.ds 360
   0A60                      90 _Map7::
   0A60                      91 	.ds 360
   0BC8                      92 _Map8::
   0BC8                      93 	.ds 360
   0D30                      94 _Map9::
   0D30                      95 	.ds 360
   0E98                      96 _Map10::
   0E98                      97 	.ds 360
   1000                      98 _MapTest::
   1000                      99 	.ds 360
   1168                     100 _sprites_park::
   1168                     101 	.ds 1936
   18F8                     102 _spritePalette::
   18F8                     103 	.ds 8
   1900                     104 _running::
   1900                     105 	.ds 1
   1901                     106 _timer::
   1901                     107 	.ds 1
   1902                     108 _characters_available::
   1902                     109 	.ds 1
   1903                     110 _input_timer::
   1903                     111 	.ds 1
   1904                     112 _current_map::
   1904                     113 	.ds 1
   1905                     114 _map::
   1905                     115 	.ds 360
   1A6D                     116 _bunny::
   1A6D                     117 	.ds 14
   1A7B                     118 _dog1::
   1A7B                     119 	.ds 14
   1A89                     120 _dog2::
   1A89                     121 	.ds 14
   1A97                     122 _cat::
   1A97                     123 	.ds 14
   1AA5                     124 _horse::
   1AA5                     125 	.ds 14
   1AB3                     126 _player::
   1AB3                     127 	.ds 2
   1AB5                     128 _key::
   1AB5                     129 	.ds 6
   1ABB                     130 _item1::
   1ABB                     131 	.ds 6
   1AC1                     132 _item2::
   1AC1                     133 	.ds 6
   1AC7                     134 _item3::
   1AC7                     135 	.ds 6
                            136 ;--------------------------------------------------------
                            137 ; overlayable items in internal ram 
                            138 ;--------------------------------------------------------
                            139 	.area _OVERLAY
                            140 ;--------------------------------------------------------
                            141 ; indirectly addressable internal ram data
                            142 ;--------------------------------------------------------
                            143 	.area _ISEG
                            144 ;--------------------------------------------------------
                            145 ; bit data
                            146 ;--------------------------------------------------------
                            147 	.area _BSEG
                            148 ;--------------------------------------------------------
                            149 ; external ram data
                            150 ;--------------------------------------------------------
                            151 	.area _XSEG
                            152 ;--------------------------------------------------------
                            153 ; global & static initialisations
                            154 ;--------------------------------------------------------
                            155 	.area _GSINIT
                            156 	.area _GSFINAL
                            157 	.area _GSINIT
                            158 ;	game.c 26
                            159 ;	game.c 1096
                            160 ;	genArrayInit
                            161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            162 	ld	hl,#_Characters
   0003 CD 00 00            163 	call	__initrleblock
   0006 2C                  164 	.db	44
   0007 09 00 00 09 00 09   165 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00   166 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45
        00 45
   0017 09 00 00 09 00 09   167 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00   168 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x2A
        00 2A
   0027 24 12 00 09 0F 00   169 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 1A 25         170 	.db	0xFF, 0x00, 0x1A, 0x25
   0033 FB 00               171 	.db	-5,0x00
   0035 7F                  172 	.db	127
   0036 13 00 1E 0A 9E 00   173 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   003E FF 00 FF 00 7E 00   174 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x00
        4A 00
   0046 13 00 1E 0A 9E 00   175 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   004E FF 00 FF 00 7E 00   176 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x94, 0x00
        94 00
   0056 01 00 9F 02 9F 00   177 	.db	0x01, 0x00, 0x9F, 0x02, 0x9F, 0x00, 0xFF, 0x0A
        FF 0A
   005E FF 00 FD 18 60 00   178 	.db	0xFF, 0x00, 0xFD, 0x18, 0x60, 0x00, 0x94, 0x94
        94 94
   0066 00 9C 00 9E 0A FF   179 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   006E 00 7C 00 4A 00 49   180 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x94
        00 94
   0076 00 9C 00 9E 0A FF   181 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   007E 00 7C 00 4A 00 92   182 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x92, 0x00, 0x00
        00 00
   0086 10 05 10 05 70 05   183 	.db	0x10, 0x05, 0x10, 0x05, 0x70, 0x05, 0x50, 0x05
        50 05
   008E 70 00 00 00 00 15   184 	.db	0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x89
        15 89
   0096 89 4F 4F 4F 4A 8F   185 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   009E 9F 7F 7F 7F 7F 45   186 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x49
        45 49
   00A6 49 8F 8F 8F 8A 4F   187 	.db	0x49, 0x8F, 0x8F, 0x8F, 0x8A, 0x4F, 0x4F, 0x5F
        4F 5F
   00AE 5F 7F 7F 7F 7F 2A   188 	.db	0x5F, 0x7F, 0x7F, 0x7F, 0x7F, 0x2A, 0x2A
        2A
   00B5 7F                  189 	.db	127
   00B6 00 00 04 70 04 40   190 	.db	0x00, 0x00, 0x04, 0x70, 0x04, 0x40, 0x04, 0x40
        04 40
   00BE 04 70 00 00 00 00   191 	.db	0x04, 0x70, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   00C6 7E 7E 81 81 81 89   192 	.db	0x7E, 0x7E, 0x81, 0x81, 0x81, 0x89, 0x89, 0x85
        89 85
   00CE 91 81 A1 81 81 81   193 	.db	0x91, 0x81, 0xA1, 0x81, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   00D6 3C 3C 42 7E 81 FF   194 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00DE A1 FF 81 FF 81 FF   195 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   00E6 00 00 04 02 01 09   196 	.db	0x00, 0x00, 0x04, 0x02, 0x01, 0x09, 0x09, 0xF9
        09 F9
   00EE A9 A9 06 06 00 00   197 	.db	0xA9, 0xA9, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00
        00 00
   00F6 7E 7E F3 8D C1 BF   198 	.db	0x7E, 0x7E, 0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF
        C1 BF
   00FE 81 FF 81 FF 81 FF   199 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0106 69 96 78 00 68 90   200 	.db	0x69, 0x96, 0x78, 0x00, 0x68, 0x90, 0x79, 0x06
        79 06
   010E 60 00 40 00 30 80   201 	.db	0x60, 0x00, 0x40, 0x00, 0x30, 0x80, 0x30, 0x00
        30 00
   0116 69 16 78 80 68 10   202 	.db	0x69, 0x16, 0x78, 0x80, 0x68, 0x10, 0x79, 0x86
        79 86
   011E 60 00 60 80 30 00   203 	.db	0x60, 0x00, 0x60, 0x80, 0x30, 0x00, 0x30, 0x00
        30 00
   0126 14 2A 3C 01 15 28   204 	.db	0x14, 0x2A, 0x3C, 0x01, 0x15, 0x28, 0x3C, 0x02
        3C 02
   012E 30 01 11 20 18 00   205 	.db	0x30, 0x01, 0x11, 0x20, 0x18, 0x00, 0x18
        18
   0135 3E                  206 	.db	62
   0136 00 00 39 14 FF 00   207 	.db	0x00, 0x00, 0x39, 0x14, 0xFF, 0x00, 0x7E, 0x04
        7E 04
   013E FE 00 7F 00 70 00   208 	.db	0xFE, 0x00, 0x7F, 0x00, 0x70, 0x00, 0xF0, 0x00
        F0 00
   0146 3C 00 39 14 7F 00   209 	.db	0x3C, 0x00, 0x39, 0x14, 0x7F, 0x00, 0xFE, 0x04
        FE 04
   014E 7E 00 FF 00 70 00   210 	.db	0x7E, 0x00, 0xFF, 0x00, 0x70, 0x00, 0x70, 0x00
        70 00
   0156 BC 00 3F 14 1E 00   211 	.db	0xBC, 0x00, 0x3F, 0x14, 0x1E, 0x00, 0xBE, 0x50
        BE 50
   015E 3E 40 BE 00 78 00   212 	.db	0x3E, 0x40, 0xBE, 0x00, 0x78, 0x00, 0x78, 0x00
        78 00
   0166 BE 1C 00 79 00 5F   213 	.db	0xBE, 0x1C, 0x00, 0x79, 0x00, 0x5F, 0x00, 0x72
        00 72
   016E 00 76 00 3C 00 1C   214 	.db	0x00, 0x76, 0x00, 0x3C, 0x00, 0x1C
   0174 81 00               215 	.db	-127,0x00
   0176 04                  216 	.db	4
   0177 00 00 00 00         217 	.db	0x00, 0x00, 0x00, 0x00
   017B 00                  218 	.db	0
                            219 ;	game.c 25
                            220 ;	game.c 1096
                            221 ;	genArrayInit
                            222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017C 21 F0 01            223 	ld	hl,#_Map1
   017F CD 00 00            224 	call	__initrleblock
   0182 04                  225 	.db	4
   0183 01 01 01 01         226 	.db	0x01, 0x01, 0x01, 0x01
   0187 F0 16               227 	.db	-16,0x16
   0189 04                  228 	.db	4
   018A 01 0A 02 01         229 	.db	0x01, 0x0A, 0x02, 0x01
   018E F1 09               230 	.db	-15,0x09
   0190 0C                  231 	.db	12
   0191 16 01 01 02 15 15   232 	.db	0x16, 0x01, 0x01, 0x02, 0x15, 0x15, 0x15, 0x15
        15 15
   0199 17 17 17 17         233 	.db	0x17, 0x17, 0x17, 0x17
   019D FA 15               234 	.db	-6,0x15
   019F 09                  235 	.db	9
   01A0 02 09 16 02 01 02   236 	.db	0x02, 0x09, 0x16, 0x02, 0x01, 0x02, 0x15, 0x17
        15 17
   01A8 17                  237 	.db	0x17
   01A9 FA 15               238 	.db	-6,0x15
   01AB 20                  239 	.db	32
   01AC 17 15 15 15 17 15   240 	.db	0x17, 0x15, 0x15, 0x15, 0x17, 0x15, 0x09, 0x16
        09 16
   01B4 0A 01 02 2D 01 01   241 	.db	0x0A, 0x01, 0x02, 0x2D, 0x01, 0x01, 0x02, 0x02
        02 02
   01BC 01 02 15 15 15 17   242 	.db	0x01, 0x02, 0x15, 0x15, 0x15, 0x17, 0x15, 0x15
        15 15
   01C4 15 15 09 16 15 15   243 	.db	0x15, 0x15, 0x09, 0x16, 0x15, 0x15, 0x15, 0x15
        15 15
   01CC FB 02               244 	.db	-5,0x02
   01CE 06                  245 	.db	6
   01CF 01 15 01 01 01 17   246 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x17
   01D5 FB 0B               247 	.db	-5,0x0B
   01D7 3E                  248 	.db	62
   01D8 01 01 01 15 02 02   249 	.db	0x01, 0x01, 0x01, 0x15, 0x02, 0x02, 0x0A, 0x02
        0A 02
   01E0 01 01 15 01 66 01   250 	.db	0x01, 0x01, 0x15, 0x01, 0x66, 0x01, 0x15, 0x0B
        15 0B
   01E8 0B 05 09 05 01 2B   251 	.db	0x0B, 0x05, 0x09, 0x05, 0x01, 0x2B, 0x01, 0x15
        01 15
   01F0 01 02 02 02 01 01   252 	.db	0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x29, 0x02
        29 02
   01F8 02 01 15 0B 05 01   253 	.db	0x02, 0x01, 0x15, 0x0B, 0x05, 0x01, 0x09, 0x02
        09 02
   0200 01 01 0A 15 01 02   254 	.db	0x01, 0x01, 0x0A, 0x15, 0x01, 0x02, 0x02, 0x02
        02 02
   0208 01 01 15 02 02 01   255 	.db	0x01, 0x01, 0x15, 0x02, 0x02, 0x01, 0x15, 0x05
        15 05
   0210 01 09 0A 02 01 01   256 	.db	0x01, 0x09, 0x0A, 0x02, 0x01, 0x01
   0216 FA 15               257 	.db	-6,0x15
   0218 0C                  258 	.db	12
   0219 02 02 15 02 02 02   259 	.db	0x02, 0x02, 0x15, 0x02, 0x02, 0x02, 0x17, 0x01
        17 01
   0221 01 09 01 01         260 	.db	0x01, 0x09, 0x01, 0x01
   0225 F8 15               261 	.db	-8,0x15
   0227 3C                  262 	.db	60
   0228 17 17 17 15 15 15   263 	.db	0x17, 0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x01
        01 01
   0230 09 02 02 01 02 06   264 	.db	0x09, 0x02, 0x02, 0x01, 0x02, 0x06, 0x0B, 0x0B
        0B 0B
   0238 0B 04 02 01 01 02   265 	.db	0x0B, 0x04, 0x02, 0x01, 0x01, 0x02, 0x02, 0x06
        02 06
   0240 0B 04 01 09 01 02   266 	.db	0x0B, 0x04, 0x01, 0x09, 0x01, 0x02, 0x02, 0x15
        02 15
   0248 02 06 0B 0B 0B 04   267 	.db	0x02, 0x06, 0x0B, 0x0B, 0x0B, 0x04, 0x02, 0x02
        02 02
   0250 02 01 02 06 0B 09   268 	.db	0x02, 0x01, 0x02, 0x06, 0x0B, 0x09, 0x09, 0x02
        09 02
   0258 0A 02 02 17 01 02   269 	.db	0x0A, 0x02, 0x02, 0x17, 0x01, 0x02, 0x15, 0x15
        15 15
   0260 17 17 17 17         270 	.db	0x17, 0x17, 0x17, 0x17
   0264 F9 15               271 	.db	-7,0x15
   0266 07                  272 	.db	7
   0267 17 17 15 15 15 01   273 	.db	0x17, 0x17, 0x15, 0x15, 0x15, 0x01, 0x02
        02
   026E F6 15               274 	.db	-10,0x15
   0270 28                  275 	.db	40
   0271 17 15 15 15 15 17   276 	.db	0x17, 0x15, 0x15, 0x15, 0x15, 0x17, 0x15, 0x17
        15 17
   0279 02 02 02 06 0B 0B   277 	.db	0x02, 0x02, 0x02, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0281 0B 0B 04 06 0B 0B   278 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x09, 0x0B
        09 0B
   0289 0B 04 00 00 02 0A   279 	.db	0x0B, 0x04, 0x00, 0x00, 0x02, 0x0A, 0x02, 0x06
        02 06
   0291 0B 0B 04 06 0B 0B   280 	.db	0x0B, 0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        04 06
   0299 FB 0B               281 	.db	-5,0x0B
   029B 0F                  282 	.db	15
   029C 04 2E 00 02 01 02   283 	.db	0x04, 0x2E, 0x00, 0x02, 0x01, 0x02, 0x06, 0x0B
        06 0B
   02A4 0B 04 06 0B 0B 04   284 	.db	0x0B, 0x04, 0x06, 0x0B, 0x0B, 0x04, 0x06
        06
   02AB FB 0B               285 	.db	-5,0x0B
   02AD 03                  286 	.db	3
   02AE 04 00 00            287 	.db	0x04, 0x00, 0x00
   02B1 00                  288 	.db	0
                            289 ;	game.c 25
                            290 ;	game.c 1096
                            291 ;	genArrayInit
                            292 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02B2 21 58 03            293 	ld	hl,#_Map2
   02B5 CD 00 00            294 	call	__initrleblock
   02B8 FB 00               295 	.db	-5,0x00
   02BA 01                  296 	.db	1
   02BB 2D                  297 	.db	0x2D
   02BC F9 00               298 	.db	-7,0x00
   02BE 04                  299 	.db	4
   02BF 2D 00 15 15         300 	.db	0x2D, 0x00, 0x15, 0x15
   02C3 FA 00               301 	.db	-6,0x00
   02C5 7F                  302 	.db	127
   02C6 0B 0B 00 0B 0B 0B   303 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02CE 0B 0B 00 0B 15 15   304 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x15, 0x00, 0x2E
        00 2E
   02D6 00 00 00 00 0B 0B   305 	.db	0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02DE 0B 0B 2D 0B 0B 0B   306 	.db	0x0B, 0x0B, 0x2D, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02E6 0B 0B 00 00 00 15   307 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00
        00 00
   02EE 0B 0B 00 0B 0B 0B   308 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B
        00 0B
   02F6 0B 0B 00 00 00 00   309 	.db	0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B
        0B 0B
   02FE 0B 15 2D 2D 00 00   310 	.db	0x0B, 0x15, 0x2D, 0x2D, 0x00, 0x00, 0x29, 0x2D
        29 2D
   0306 00 00 2D 00 00 00   311 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x15, 0x0B
        15 0B
   030E 0B 00 0B 00 0B 15   312 	.db	0x0B, 0x00, 0x0B, 0x00, 0x0B, 0x15, 0x00, 0x00
        00 00
   0316 0B 0B 0B 00 00 0B   313 	.db	0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x0B, 0x00, 0x0B
        00 0B
   031E 00 00 0B 0B 0B 00   314 	.db	0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0326 0B 15 00 00 0B 0B   315 	.db	0x0B, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x00
        0B 00
   032E 0B 0B 00 0B 0B 00   316 	.db	0x0B, 0x0B, 0x00, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   0336 0B 00 0B 0B 0B 15   317 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x2D, 0x2D
        2D 2D
   033E 00 00 00 2D 2D 00   318 	.db	0x00, 0x00, 0x00, 0x2D, 0x2D, 0x00, 0x2D
        2D
   0345 35                  319 	.db	53
   0346 00 00 2D 00 00 00   320 	.db	0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x0B, 0x15
        0B 15
   034E 00 15 15 00 00 0B   321 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x0B, 0x0B, 0x0B
        0B 0B
   0356 00 0B 15 00 15 0B   322 	.db	0x00, 0x0B, 0x15, 0x00, 0x15, 0x0B, 0x00, 0x0B
        00 0B
   035E 0B 0B 15 15 00 15   323 	.db	0x0B, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15, 0x00
        15 00
   0366 00 0B 0B 0B 00 0B   324 	.db	0x00, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x00
        15 00
   036E 15 0B 00 0B 0B 0B   325 	.db	0x15, 0x0B, 0x00, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0376 0B 15 15 00 15      326 	.db	0x0B, 0x15, 0x15, 0x00, 0x15
   037B FB 0B               327 	.db	-5,0x0B
   037D 03                  328 	.db	3
   037E 15 00 15            329 	.db	0x15, 0x00, 0x15
   0381 FB 0B               330 	.db	-5,0x0B
   0383 37                  331 	.db	55
   0384 15 15 0B 15 15 00   332 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x0B
        15 0B
   038C 0B 0B 0B 15 00 67   333 	.db	0x0B, 0x0B, 0x0B, 0x15, 0x00, 0x67, 0x00, 0x15
        00 15
   0394 0B 0B 0B 0B 15 0B   334 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x00, 0x15
        00 15
   039C 15 00 15 15 0B 0B   335 	.db	0x15, 0x00, 0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x15
        0B 15
   03A4 00 00 00 15 0B 0B   336 	.db	0x00, 0x00, 0x00, 0x15, 0x0B, 0x0B, 0x0B, 0x0B
        0B 0B
   03AC 15 15 00 15 15 00   337 	.db	0x15, 0x15, 0x00, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03B4 15 0B 0B 0B 15 15   338 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x15, 0x15
        15
   03BB FB 0B               339 	.db	-5,0x0B
   03BD 09                  340 	.db	9
   03BE 15 15 0B 15 15 00   341 	.db	0x15, 0x15, 0x0B, 0x15, 0x15, 0x00, 0x15, 0x15
        15 15
   03C6 15                  342 	.db	0x15
   03C7 F6 0B               343 	.db	-10,0x0B
   03C9 07                  344 	.db	7
   03CA 15 15 15 0B 15 15   345 	.db	0x15, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x00
        00
   03D1 F0 15               346 	.db	-16,0x15
   03D3 09                  347 	.db	9
   03D4 00 15 15 00 00 00   348 	.db	0x00, 0x15, 0x15, 0x00, 0x00, 0x00, 0x15, 0x15
        15 15
   03DC 15                  349 	.db	0x15
   03DD F9 00               350 	.db	-7,0x00
   03DF 09                  351 	.db	9
   03E0 15 15 15 00 00 15   352 	.db	0x15, 0x15, 0x15, 0x00, 0x00, 0x15, 0x15, 0x15
        15 15
   03E8 15                  353 	.db	0x15
   03E9 FB 00               354 	.db	-5,0x00
   03EB FB 15               355 	.db	-5,0x15
   03ED FB 00               356 	.db	-5,0x00
   03EF 02                  357 	.db	2
   03F0 15 15               358 	.db	0x15, 0x15
   03F2 00                  359 	.db	0
                            360 ;	game.c 25
                            361 ;	game.c 1096
                            362 ;	genArrayInit
                            363 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F3 21 C0 04            364 	ld	hl,#_Map3
   03F6 CD 00 00            365 	call	__initrleblock
   03F9 F2 01               366 	.db	-14,0x01
   03FB 03                  367 	.db	3
   03FC 2D 0B 0B            368 	.db	0x2D, 0x0B, 0x0B
   03FF FB 01               369 	.db	-5,0x01
   0401 02                  370 	.db	2
   0402 17 17               371 	.db	0x17, 0x17
   0404 FA 15               372 	.db	-6,0x15
   0406 0E                  373 	.db	14
   0407 17 17 15 15 0B 15   374 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15, 0x01
        15 01
   040F 2E 01 01 01 17 15   375 	.db	0x2E, 0x01, 0x01, 0x01, 0x17, 0x15
   0415 FB 01               376 	.db	-5,0x01
   0417 08                  377 	.db	8
   0418 29 01 01 01 2D 01   378 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   0420 FB 01               379 	.db	-5,0x01
   0422 7F                  380 	.db	127
   0423 15 15 2D 15 15 15   381 	.db	0x15, 0x15, 0x2D, 0x15, 0x15, 0x15, 0x15, 0x2D
        15 2D
   042B 15 15 15 15 01 15   382 	.db	0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17, 0x15
        17 15
   0433 2D 01 01 01 01 15   383 	.db	0x2D, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   043B 17 15 15 01 15 01   384 	.db	0x17, 0x15, 0x15, 0x01, 0x15, 0x01, 0x01, 0x01
        01 01
   0443 2D 01 01 01 0B 01   385 	.db	0x2D, 0x01, 0x01, 0x01, 0x0B, 0x01, 0x01, 0x01
        01 01
   044B 01 15 01 15 17 15   386 	.db	0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01
        17 01
   0453 15 15 01 15 01 15   387 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   045B 15 15 01 01 01 15   388 	.db	0x15, 0x15, 0x01, 0x01, 0x01, 0x15, 0x01, 0x15
        01 15
   0463 15 15 15 29 15 15   389 	.db	0x15, 0x15, 0x15, 0x29, 0x15, 0x15, 0x01, 0x15
        01 15
   046B 01 15 15 01 15 17   390 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x17, 0x01, 0x01
        01 01
   0473 01 01 29 2D 01 01   391 	.db	0x01, 0x01, 0x29, 0x2D, 0x01, 0x01, 0x29, 0x68
        29 68
   047B 29 01 2D 01 29 15   392 	.db	0x29, 0x01, 0x2D, 0x01, 0x29, 0x15, 0x15, 0x01
        15 01
   0483 15 15 01 2D 01 01   393 	.db	0x15, 0x15, 0x01, 0x2D, 0x01, 0x01, 0x01, 0x15
        01 15
   048B 15 15 15 29 17 15   394 	.db	0x15, 0x15, 0x15, 0x29, 0x17, 0x15, 0x01, 0x15
        01 15
   0493 2D 01 01 2D 01 01   395 	.db	0x2D, 0x01, 0x01, 0x2D, 0x01, 0x01, 0x15, 0x01
        15 01
   049B 15 15 01 15 15 15   396 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15
   04A2 3D                  397 	.db	61
   04A3 01 15 17 15 15 01   398 	.db	0x01, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15, 0x15
        15 15
   04AB 01 15 01 15 01 15   399 	.db	0x01, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   04B3 15 2B 15 15 01 15   400 	.db	0x15, 0x2B, 0x15, 0x15, 0x01, 0x15, 0x15, 0x17
        15 17
   04BB 15 01 15 17 01 15   401 	.db	0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B, 0x15
        0B 15
   04C3 01 15 15 01 15 15   402 	.db	0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   04CB 2D 15 15 17 15 01   403 	.db	0x2D, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15, 0x17
        15 17
   04D3 01 15 0B 01 01 15   404 	.db	0x01, 0x15, 0x0B, 0x01, 0x01, 0x15, 0x15, 0x01
        15 01
   04DB 2D 01 01 01 29      405 	.db	0x2D, 0x01, 0x01, 0x01, 0x29
   04E0 FB 01               406 	.db	-5,0x01
   04E2 0B                  407 	.db	11
   04E3 15 15 01 15 2D 01   408 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   04EB 15 15 0B            409 	.db	0x15, 0x15, 0x0B
   04EE FB 15               410 	.db	-5,0x15
   04F0 59                  411 	.db	89
   04F1 17 15 15 17 15 15   412 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   04F9 01 01 2D 01 2D 01   413 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0501 2D 01 2D 01 2D 01   414 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0509 15 15 01 15 01 2D   415 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   0511 0B 2D 01 2D 01 2D   416 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   0519 01 2D 01 15 17 15   417 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   0521 01 0B 2D 0B 2D 0B   418 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   0529 2D 00 2D 0B 2D 01   419 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   0531 15 15 01 17 15 2D   420 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   0539 01 2D 01 2D 15 2D   421 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   0541 01 2D 0B 01 01 01   422 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   0549 17                  423 	.db	0x17
   054A 00                  424 	.db	0
                            425 ;	game.c 25
                            426 ;	game.c 1096
                            427 ;	genArrayInit
                            428 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 28 06            429 	ld	hl,#_Map4
   054E CD 00 00            430 	call	__initrleblock
   0551 06                  431 	.db	6
   0552 00 00 0A 0A 15 15   432 	.db	0x00, 0x00, 0x0A, 0x0A, 0x15, 0x15
   0558 FB 0B               433 	.db	-5,0x0B
   055A 01                  434 	.db	1
   055B 15                  435 	.db	0x15
   055C FA 0B               436 	.db	-6,0x0B
   055E 25                  437 	.db	37
   055F 15 15 00 0A 2D 06   438 	.db	0x15, 0x15, 0x00, 0x0A, 0x2D, 0x06, 0x0B, 0x0B
        0B 0B
   0567 01 0B 00 15 0B 0B   439 	.db	0x01, 0x0B, 0x00, 0x15, 0x0B, 0x0B, 0x15, 0x01
        15 01
   056F 01 0B 0B 02 07 15   440 	.db	0x01, 0x0B, 0x0B, 0x02, 0x07, 0x15, 0x01, 0x2D
        01 2D
   0577 01 00 0B 0B 0A 0B   441 	.db	0x01, 0x00, 0x0B, 0x0B, 0x0A, 0x0B, 0x15, 0x01
        15 01
   057F 0A 0B 0B 01 0A      442 	.db	0x0A, 0x0B, 0x0B, 0x01, 0x0A
   0584 FB 0B               443 	.db	-5,0x0B
   0586 08                  444 	.db	8
   0587 0A 07 0B 0B 15 0B   445 	.db	0x0A, 0x07, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x00
        0B 00
   058F FB 0B               446 	.db	-5,0x0B
   0591 01                  447 	.db	1
   0592 15                  448 	.db	0x15
   0593 F6 0B               449 	.db	-10,0x0B
   0595 42                  450 	.db	66
   0596 00 2D 0B 01 00 0B   451 	.db	0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B, 0x01
        0B 01
   059E 01 0B 01 0B 01 0B   452 	.db	0x01, 0x0B, 0x01, 0x0B, 0x01, 0x0B, 0x02, 0x0A
        02 0A
   05A6 0B 00 2D 0B 01 00   453 	.db	0x0B, 0x00, 0x2D, 0x0B, 0x01, 0x00, 0x0B, 0x0B
        0B 0B
   05AE 0B 02 0B 0B 0B 02   454 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x15
        0B 15
   05B6 0B 0B 0B 01 00 2D   455 	.db	0x0B, 0x0B, 0x0B, 0x01, 0x00, 0x2D, 0x00, 0x0B
        00 0B
   05BE 15 15 00 0B 0B 0B   456 	.db	0x15, 0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x02, 0x0B
        02 0B
   05C6 0B 01 02 0B 0B 0B   457 	.db	0x0B, 0x01, 0x02, 0x0B, 0x0B, 0x0B, 0x02, 0x00
        02 00
   05CE 0B 0B 0B 0B 15 0B   458 	.db	0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x0B, 0x15
        0B 15
   05D6 15 00               459 	.db	0x15, 0x00
   05D8 F9 0B               460 	.db	-7,0x0B
   05DA 43                  461 	.db	67
   05DB 15 0B 0B 00 0B 15   462 	.db	0x15, 0x0B, 0x0B, 0x00, 0x0B, 0x15, 0x0B, 0x0B
        0B 0B
   05E3 00 01 0B 0B 0B 00   463 	.db	0x00, 0x01, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   05EB 0B 01 01 15 0B 15   464 	.db	0x0B, 0x01, 0x01, 0x15, 0x0B, 0x15, 0x0B, 0x00
        0B 00
   05F3 15 00 0B 0B 0B 0B   465 	.db	0x15, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   05FB 02 0B 15 15 0B 0B   466 	.db	0x02, 0x0B, 0x15, 0x15, 0x0B, 0x0B, 0x01, 0x01
        01 01
   0603 0B 0B 0B 07 15 01   467 	.db	0x0B, 0x0B, 0x0B, 0x07, 0x15, 0x01, 0x0B, 0x0B
        0B 0B
   060B 00 0A 00 0B 0B 02   468 	.db	0x00, 0x0A, 0x00, 0x0B, 0x0B, 0x02, 0x15, 0x15
        15 15
   0613 00 01 0B 01 0B 00   469 	.db	0x00, 0x01, 0x0B, 0x01, 0x0B, 0x00, 0x02, 0x0B
        02 0B
   061B 15 0B 15            470 	.db	0x15, 0x0B, 0x15
   061E F9 0B               471 	.db	-7,0x0B
   0620 16                  472 	.db	22
   0621 15 15 0B 0B 0B 0B   473 	.db	0x15, 0x15, 0x0B, 0x0B, 0x0B, 0x0B, 0x15, 0x15
        15 15
   0629 01 00 00 0B 0B 0B   474 	.db	0x01, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x01, 0x0B
        01 0B
   0631 0B 00 0B 0B 15 01   475 	.db	0x0B, 0x00, 0x0B, 0x0B, 0x15, 0x01
   0637 FB 0B               476 	.db	-5,0x0B
   0639 66                  477 	.db	102
   063A 15 0A 07 15 00 02   478 	.db	0x15, 0x0A, 0x07, 0x15, 0x00, 0x02, 0x0B, 0x0B
        0B 0B
   0642 0B 02 0B 0B 0B 00   479 	.db	0x0B, 0x02, 0x0B, 0x0B, 0x0B, 0x00, 0x0B, 0x0B
        0B 0B
   064A 01 0B 0B 0B 0B 04   480 	.db	0x01, 0x0B, 0x0B, 0x0B, 0x0B, 0x04, 0x0B, 0x00
        0B 00
   0652 0A 0B 0B 0B 02 0B   481 	.db	0x0A, 0x0B, 0x0B, 0x0B, 0x02, 0x0B, 0x0B, 0x0B
        0B 0B
   065A 0A 0B 0B 15 69 15   482 	.db	0x0A, 0x0B, 0x0B, 0x15, 0x69, 0x15, 0x0B, 0x0B
        0B 0B
   0662 15 01 0B 01 00 0B   483 	.db	0x15, 0x01, 0x0B, 0x01, 0x00, 0x0B, 0x15, 0x0B
        15 0B
   066A 0B 0B 15 15 01 0B   484 	.db	0x0B, 0x0B, 0x15, 0x15, 0x01, 0x0B, 0x0B, 0x0B
        0B 0B
   0672 15 0B 0B 15 15 0A   485 	.db	0x15, 0x0B, 0x0B, 0x15, 0x15, 0x0A, 0x0B, 0x15
        0B 15
   067A 0B 15 0B 01 01 01   486 	.db	0x0B, 0x15, 0x0B, 0x01, 0x01, 0x01, 0x0B, 0x15
        0B 15
   0682 15 0B 0B 0B 15 0B   487 	.db	0x15, 0x0B, 0x0B, 0x0B, 0x15, 0x0B, 0x15, 0x15
        15 15
   068A 15 00 01 01 00 0A   488 	.db	0x15, 0x00, 0x01, 0x01, 0x00, 0x0A, 0x01, 0x00
        01 00
   0692 2D 00 01 00 0A 00   489 	.db	0x2D, 0x00, 0x01, 0x00, 0x0A, 0x00, 0x01, 0x00
        01 00
   069A 01 00 0A 00 0A 01   490 	.db	0x01, 0x00, 0x0A, 0x00, 0x0A, 0x01
   06A0 00                  491 	.db	0
                            492 ;	game.c 25
                            493 ;	game.c 1096
                            494 ;	genArrayInit
                            495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 90 07            496 	ld	hl,#_Map5
   06A4 CD 00 00            497 	call	__initrleblock
   06A7 F2 01               498 	.db	-14,0x01
   06A9 03                  499 	.db	3
   06AA 2D 0B 0B            500 	.db	0x2D, 0x0B, 0x0B
   06AD FB 01               501 	.db	-5,0x01
   06AF 02                  502 	.db	2
   06B0 17 17               503 	.db	0x17, 0x17
   06B2 FA 15               504 	.db	-6,0x15
   06B4 07                  505 	.db	7
   06B5 17 17 15 15 0B 15   506 	.db	0x17, 0x17, 0x15, 0x15, 0x0B, 0x15, 0x15
        15
   06BC FB 01               507 	.db	-5,0x01
   06BE 02                  508 	.db	2
   06BF 17 15               509 	.db	0x17, 0x15
   06C1 FB 01               510 	.db	-5,0x01
   06C3 7F                  511 	.db	127
   06C4 29 01 01 01 2D 01   512 	.db	0x29, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x15, 0x15
        15 15
   06CC 01 2E 01 01 01 15   513 	.db	0x01, 0x2E, 0x01, 0x01, 0x01, 0x15, 0x15, 0x2D
        15 2D
   06D4 15 15 15 15 2D 15   514 	.db	0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15, 0x15
        15 15
   06DC 15 01 15 17 15 17   515 	.db	0x15, 0x01, 0x15, 0x17, 0x15, 0x17, 0x01, 0x01
        01 01
   06E4 01 01 15 01 15 17   516 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x17, 0x15, 0x15
        15 15
   06EC 01 15 01 01 01 2D   517 	.db	0x01, 0x15, 0x01, 0x01, 0x01, 0x2D, 0x01, 0x01
        01 01
   06F4 01 0B 01 01 01 01   518 	.db	0x01, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15, 0x01
        15 01
   06FC 15 17 15 17 01 15   519 	.db	0x15, 0x17, 0x15, 0x17, 0x01, 0x15, 0x15, 0x01
        15 01
   0704 15 01 15 15 01 15   520 	.db	0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   070C 01 01 15 01 15 15   521 	.db	0x01, 0x01, 0x15, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   0714 29 15 15 01 15 01   522 	.db	0x29, 0x15, 0x15, 0x01, 0x15, 0x01, 0x15, 0x15
        15 15
   071C 01 15 17 01 01 01   523 	.db	0x01, 0x15, 0x17, 0x01, 0x01, 0x01, 0x01, 0x29
        01 29
   0724 2D 01 01 29 68 29   524 	.db	0x2D, 0x01, 0x01, 0x29, 0x68, 0x29, 0x01, 0x2D
        01 2D
   072C 01 29 15 15 01 15   525 	.db	0x01, 0x29, 0x15, 0x15, 0x01, 0x15, 0x15, 0x01
        15 01
   0734 2D 01 0B 01 15 15   526 	.db	0x2D, 0x01, 0x0B, 0x01, 0x15, 0x15, 0x15, 0x15
        15 15
   073C 29 17 15 01 15 2D   527 	.db	0x29, 0x17, 0x15, 0x01, 0x15, 0x2D, 0x01
        01
   0743 4A                  528 	.db	74
   0744 01 2D 01 01 01 15   529 	.db	0x01, 0x2D, 0x01, 0x01, 0x01, 0x15, 0x15, 0x15
        15 15
   074C 01 15 15 15 15 01   530 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x01, 0x15, 0x17
        15 17
   0754 15 15 01 15 15 01   531 	.db	0x15, 0x15, 0x01, 0x15, 0x15, 0x01, 0x15, 0x01
        15 01
   075C 01 01 15 15 01 15   532 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x15, 0x2B, 0x15
        2B 15
   0764 15 01 15 15 17 15   533 	.db	0x15, 0x01, 0x15, 0x15, 0x17, 0x15, 0x01, 0x15
        01 15
   076C 17 01 15 0B 15 01   534 	.db	0x17, 0x01, 0x15, 0x0B, 0x15, 0x01, 0x15, 0x15
        15 15
   0774 01 15 15 15 15 2D   535 	.db	0x01, 0x15, 0x15, 0x15, 0x15, 0x2D, 0x15, 0x15
        15 15
   077C 17 15 01 15 17 01   536 	.db	0x17, 0x15, 0x01, 0x15, 0x17, 0x01, 0x15, 0x0B
        15 0B
   0784 01 01 15 15 01 2D   537 	.db	0x01, 0x01, 0x15, 0x15, 0x01, 0x2D, 0x01, 0x01
        01 01
   078C 01 29               538 	.db	0x01, 0x29
   078E FB 01               539 	.db	-5,0x01
   0790 0B                  540 	.db	11
   0791 15 15 01 15 2D 01   541 	.db	0x15, 0x15, 0x01, 0x15, 0x2D, 0x01, 0x15, 0x15
        15 15
   0799 15 15 0B            542 	.db	0x15, 0x15, 0x0B
   079C FB 15               543 	.db	-5,0x15
   079E 59                  544 	.db	89
   079F 17 15 15 17 15 15   545 	.db	0x17, 0x15, 0x15, 0x17, 0x15, 0x15, 0x01, 0x15
        01 15
   07A7 01 01 2D 01 2D 01   546 	.db	0x01, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07AF 2D 01 2D 01 2D 01   547 	.db	0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07B7 15 15 01 15 01 2D   548 	.db	0x15, 0x15, 0x01, 0x15, 0x01, 0x2D, 0x01, 0x2D
        01 2D
   07BF 0B 2D 01 2D 01 2D   549 	.db	0x0B, 0x2D, 0x01, 0x2D, 0x01, 0x2D, 0x0B, 0x2D
        0B 2D
   07C7 01 2D 01 15 17 15   550 	.db	0x01, 0x2D, 0x01, 0x15, 0x17, 0x15, 0x2D, 0x01
        2D 01
   07CF 01 0B 2D 0B 2D 0B   551 	.db	0x01, 0x0B, 0x2D, 0x0B, 0x2D, 0x0B, 0x2D, 0x01
        2D 01
   07D7 2D 00 2D 0B 2D 01   552 	.db	0x2D, 0x00, 0x2D, 0x0B, 0x2D, 0x01, 0x2D, 0x15
        2D 15
   07DF 15 15 01 17 15 2D   553 	.db	0x15, 0x15, 0x01, 0x17, 0x15, 0x2D, 0x01, 0x2D
        01 2D
   07E7 01 2D 01 2D 15 2D   554 	.db	0x01, 0x2D, 0x01, 0x2D, 0x15, 0x2D, 0x29, 0x2D
        29 2D
   07EF 01 2D 0B 01 01 01   555 	.db	0x01, 0x2D, 0x0B, 0x01, 0x01, 0x01, 0x01, 0x15
        01 15
   07F7 17                  556 	.db	0x17
   07F8 00                  557 	.db	0
                            558 ;	game.c 25
                            559 ;	game.c 1096
                            560 ;	genArrayInit
                            561 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F9 21 F8 08            562 	ld	hl,#_Map6
   07FC CD 00 00            563 	call	__initrleblock
   07FF BF 00               564 	.db	-65,0x00
   0801 02                  565 	.db	2
   0802 0C 0C               566 	.db	0x0C, 0x0C
   0804 EE 00               567 	.db	-18,0x00
   0806 02                  568 	.db	2
   0807 0C 0C               569 	.db	0x0C, 0x0C
   0809 81 00               570 	.db	-127,0x00
   080B 81 00               571 	.db	-127,0x00
   080D ED 00               572 	.db	-19,0x00
   080F 00                  573 	.db	0
                            574 ;	game.c 25
                            575 ;	game.c 1096
                            576 ;	genArrayInit
                            577 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0810 21 60 0A            578 	ld	hl,#_Map7
   0813 CD 00 00            579 	call	__initrleblock
   0816 BF 00               580 	.db	-65,0x00
   0818 02                  581 	.db	2
   0819 0C 0C               582 	.db	0x0C, 0x0C
   081B EE 00               583 	.db	-18,0x00
   081D 02                  584 	.db	2
   081E 0C 0C               585 	.db	0x0C, 0x0C
   0820 81 00               586 	.db	-127,0x00
   0822 81 00               587 	.db	-127,0x00
   0824 ED 00               588 	.db	-19,0x00
   0826 00                  589 	.db	0
                            590 ;	game.c 25
                            591 ;	game.c 1096
                            592 ;	genArrayInit
                            593 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0827 21 C8 0B            594 	ld	hl,#_Map8
   082A CD 00 00            595 	call	__initrleblock
   082D BF 00               596 	.db	-65,0x00
   082F 02                  597 	.db	2
   0830 0C 0C               598 	.db	0x0C, 0x0C
   0832 EE 00               599 	.db	-18,0x00
   0834 02                  600 	.db	2
   0835 0C 0C               601 	.db	0x0C, 0x0C
   0837 81 00               602 	.db	-127,0x00
   0839 81 00               603 	.db	-127,0x00
   083B ED 00               604 	.db	-19,0x00
   083D 00                  605 	.db	0
                            606 ;	game.c 25
                            607 ;	game.c 1096
                            608 ;	genArrayInit
                            609 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   083E 21 30 0D            610 	ld	hl,#_Map9
   0841 CD 00 00            611 	call	__initrleblock
   0844 BF 00               612 	.db	-65,0x00
   0846 02                  613 	.db	2
   0847 0C 0C               614 	.db	0x0C, 0x0C
   0849 EE 00               615 	.db	-18,0x00
   084B 02                  616 	.db	2
   084C 0C 0C               617 	.db	0x0C, 0x0C
   084E 81 00               618 	.db	-127,0x00
   0850 81 00               619 	.db	-127,0x00
   0852 ED 00               620 	.db	-19,0x00
   0854 00                  621 	.db	0
                            622 ;	game.c 25
                            623 ;	game.c 1096
                            624 ;	genArrayInit
                            625 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0855 21 98 0E            626 	ld	hl,#_Map10
   0858 CD 00 00            627 	call	__initrleblock
   085B BF 00               628 	.db	-65,0x00
   085D 02                  629 	.db	2
   085E 0C 0C               630 	.db	0x0C, 0x0C
   0860 EE 00               631 	.db	-18,0x00
   0862 02                  632 	.db	2
   0863 0C 0C               633 	.db	0x0C, 0x0C
   0865 81 00               634 	.db	-127,0x00
   0867 81 00               635 	.db	-127,0x00
   0869 ED 00               636 	.db	-19,0x00
   086B 00                  637 	.db	0
                            638 ;	game.c 25
                            639 ;	game.c 1096
                            640 ;	genArrayInit
                            641 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 00 10            642 	ld	hl,#_MapTest
   086F CD 00 00            643 	call	__initrleblock
   0872 02                  644 	.db	2
   0873 00 16               645 	.db	0x00, 0x16
   0875 EA 00               646 	.db	-22,0x00
   0877 06                  647 	.db	6
   0878 47 4A 59 46 00 5F   648 	.db	0x47, 0x4A, 0x59, 0x46, 0x00, 0x5F
   087E D9 00               649 	.db	-39,0x00
   0880 0A                  650 	.db	10
   0881 4B 46 58 4A 00 5F   651 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5F, 0x00, 0x62
        00 62
   0889 00 65               652 	.db	0x00, 0x65
   088B F6 00               653 	.db	-10,0x00
   088D 0A                  654 	.db	10
   088E 4B 46 58 4A 00 60   655 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x60, 0x00, 0x62
        00 62
   0896 00 66               656 	.db	0x00, 0x66
   0898 F6 00               657 	.db	-10,0x00
   089A 0A                  658 	.db	10
   089B 4B 46 58 4A 00 5C   659 	.db	0x4B, 0x46, 0x58, 0x4A, 0x00, 0x5C, 0x00, 0x62
        00 62
   08A3 00 67               660 	.db	0x00, 0x67
   08A5 ED 00               661 	.db	-19,0x00
   08A7 01                  662 	.db	1
   08A8 68                  663 	.db	0x68
   08A9 EB 00               664 	.db	-21,0x00
   08AB 0A                  665 	.db	10
   08AC 46 62 55 54 49 4A   666 	.db	0x46, 0x62, 0x55, 0x54, 0x49, 0x4A, 0x57, 0x00
        57 00
   08B4 49 54               667 	.db	0x49, 0x54
   08B6 F4 00               668 	.db	-12,0x00
   08B8 0A                  669 	.db	10
   08B9 55 4A 57 58 54 53   670 	.db	0x55, 0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C
        46 4C
   08C1 4A 52               671 	.db	0x4A, 0x52
   08C3 FB 00               672 	.db	-5,0x00
   08C5 01                  673 	.db	1
   08C6 2E                  674 	.db	0x2E
   08C7 EF 00               675 	.db	-17,0x00
   08C9 0C                  676 	.db	12
   08CA 2D 00 00 00 00 47   677 	.db	0x2D, 0x00, 0x00, 0x00, 0x00, 0x47, 0x62, 0x59
        62 59
   08D2 57 54 48 46         678 	.db	0x57, 0x54, 0x48, 0x46
   08D6 F8 00               679 	.db	-8,0x00
   08D8 18                  680 	.db	24
   08D9 2D 00 0B 0B 00 00   681 	.db	0x2D, 0x00, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x55
        00 55
   08E1 4A 57 58 54 53 46   682 	.db	0x4A, 0x57, 0x58, 0x54, 0x53, 0x46, 0x4C, 0x4A
        4C 4A
   08E9 52 00 00 00 2D 00   683 	.db	0x52, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x0C, 0x0C
        0C 0C
   08F1 F0 00               684 	.db	-16,0x00
   08F3 0B                  685 	.db	11
   08F4 2D 00 0D 0D 00 32   686 	.db	0x2D, 0x00, 0x0D, 0x0D, 0x00, 0x32, 0x62, 0x55
        62 55
   08FC 5A 51 46            687 	.db	0x5A, 0x51, 0x46
   08FF F7 00               688 	.db	-9,0x00
   0901 0E                  689 	.db	14
   0902 2D 00 0E 0E 00 33   690 	.db	0x2D, 0x00, 0x0E, 0x0E, 0x00, 0x33, 0x62, 0x4A
        62 4A
   090A 52 55 5A 57 57 46   691 	.db	0x52, 0x55, 0x5A, 0x57, 0x57, 0x46
   0910 FA 00               692 	.db	-6,0x00
   0912 0D                  693 	.db	13
   0913 2D 00 29 29 00 00   694 	.db	0x2D, 0x00, 0x29, 0x29, 0x00, 0x00, 0x00, 0x47
        00 47
   091B 51 54 48 54 58      695 	.db	0x51, 0x54, 0x48, 0x54, 0x58
   0920 E0 00               696 	.db	-32,0x00
   0922 00                  697 	.db	0
                            698 ;	game.c 26
                            699 ;	game.c 1096
                            700 ;	genArrayInit
                            701 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0923 21 68 11            702 	ld	hl,#_sprites_park
   0926 CD 00 00            703 	call	__initrleblock
   0929 EC 00               704 	.db	-20,0x00
   092B 09                  705 	.db	9
   092C 10 00 00 00 02 00   706 	.db	0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
        00 00
   0934 20                  707 	.db	0x20
   0935 F7 00               708 	.db	-9,0x00
   0937 01                  709 	.db	1
   0938 10                  710 	.db	0x10
   0939 F7 00               711 	.db	-9,0x00
   093B 21                  712 	.db	33
   093C 94 08 00 00 42 00   713 	.db	0x94, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x08
        00 08
   0944 00 80 25 00 50 00   714 	.db	0x00, 0x80, 0x25, 0x00, 0x50, 0x00, 0x02, 0x40
        02 40
   094C 00 00 90 00 00 00   715 	.db	0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x84, 0x00
        84 00
   0954 80 00 00 10 80 00   716 	.db	0x80, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00
        00 00
   095C 5A                  717 	.db	0x5A
   095D FB 00               718 	.db	-5,0x00
   095F 05                  719 	.db	5
   0960 02 20 00 00 08      720 	.db	0x02, 0x20, 0x00, 0x00, 0x08
   0965 F9 00               721 	.db	-7,0x00
   0967 0B                  722 	.db	11
   0968 01 00 00 08 01 00   723 	.db	0x01, 0x00, 0x00, 0x08, 0x01, 0x00, 0x21, 0x00
        21 00
   0970 00 00 09            724 	.db	0x00, 0x00, 0x09
   0973 F9 00               725 	.db	-7,0x00
   0975 7F                  726 	.db	127
   0976 10 08 00 00 40 04   727 	.db	0x10, 0x08, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
        00 00
   097E 00 00 5A 00 7F 00   728 	.db	0x00, 0x00, 0x5A, 0x00, 0x7F, 0x00, 0x80, 0x00
        80 00
   0986 80 00 80 00 80 00   729 	.db	0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
        80 00
   098E 80 00 80 00 7E 00   730 	.db	0x80, 0x00, 0x80, 0x00, 0x7E, 0x00, 0x81, 0x00
        81 00
   0996 81 00 81 00 81 00   731 	.db	0x81, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x00
        81 00
   099E 81 00 7E 00 00 00   732 	.db	0x81, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x20, 0x00
        20 00
   09A6 50 00 20 00 00 00   733 	.db	0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00
        04 00
   09AE 0A 00 04 00 FF 00   734 	.db	0x0A, 0x00, 0x04, 0x00, 0xFF, 0x00, 0xDD, 0x00
        DD 00
   09B6 AA 00 FF 00 FF 00   735 	.db	0xAA, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xBB, 0x00
        BB 00
   09BE 55 00 FF 00 FE FF   736 	.db	0x55, 0x00, 0xFF, 0x00, 0xFE, 0xFF, 0xEF, 0xFF
        EF FF
   09C6 BB FF FF FF EF FF   737 	.db	0xBB, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFB, 0xFF
        FB FF
   09CE BF FF FF FF FF 00   738 	.db	0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF9, 0x00
        F9 00
   09D6 2F 00 FF 00 D8 00   739 	.db	0x2F, 0x00, 0xFF, 0x00, 0xD8, 0x00, 0xFF, 0x00
        FF 00
   09DE A5 00 FF 00 AD 00   740 	.db	0xA5, 0x00, 0xFF, 0x00, 0xAD, 0x00, 0x5C, 0x00
        5C 00
   09E6 DB 00 29 00 F6 00   741 	.db	0xDB, 0x00, 0x29, 0x00, 0xF6, 0x00, 0x49, 0x00
        49 00
   09EE BA 00 D6 00 00 00   742 	.db	0xBA, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x42
        42
   09F5 0A                  743 	.db	10
   09F6 00 24 00 18 00 18   744 	.db	0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00, 0x24
        00 24
   09FE 00 42               745 	.db	0x00, 0x42
   0A00 FB 00               746 	.db	-5,0x00
   0A02 0B                  747 	.db	11
   0A03 42 00 24 00 18 00   748 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A0B 24 00 42            749 	.db	0x24, 0x00, 0x42
   0A0E FB 00               750 	.db	-5,0x00
   0A10 0B                  751 	.db	11
   0A11 42 00 24 00 18 00   752 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A19 24 00 42            753 	.db	0x24, 0x00, 0x42
   0A1C FB 00               754 	.db	-5,0x00
   0A1E 0B                  755 	.db	11
   0A1F 42 00 24 00 18 00   756 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A27 24 00 42            757 	.db	0x24, 0x00, 0x42
   0A2A EB 00               758 	.db	-21,0x00
   0A2C 4B                  759 	.db	75
   0A2D 42 00 24 00 18 00   760 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A35 24 00 42 00 00 00   761 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x3C, 0x00
        3C 00
   0A3D 6E 10 FF 00 BF 40   762 	.db	0x6E, 0x10, 0xFF, 0x00, 0xBF, 0x40, 0xDD, 0x22
        DD 22
   0A45 76 08 00 3C 00 3C   763 	.db	0x76, 0x08, 0x00, 0x3C, 0x00, 0x3C, 0x7E, 0x81
        7E 81
   0A4D 80 7F 80 7F 80 7F   764 	.db	0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x7F
        80 7F
   0A55 80 7F 80 7F 00 FF   765 	.db	0x80, 0x7F, 0x80, 0x7F, 0x00, 0xFF, 0x3C, 0x00
        3C 00
   0A5D 7E 00 DF 20 FF 00   766 	.db	0x7E, 0x00, 0xDF, 0x20, 0xFF, 0x00, 0xF3, 0x0C
        F3 0C
   0A65 7E 00 18 24 00 3C   767 	.db	0x7E, 0x00, 0x18, 0x24, 0x00, 0x3C, 0x00, 0x00
        00 00
   0A6D 42 00 24 00 18 00   768 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A75 24 00 42            769 	.db	0x24, 0x00, 0x42
   0A78 FB 00               770 	.db	-5,0x00
   0A7A 0B                  771 	.db	11
   0A7B 42 00 24 00 18 00   772 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A83 24 00 42            773 	.db	0x24, 0x00, 0x42
   0A86 FB 00               774 	.db	-5,0x00
   0A88 0B                  775 	.db	11
   0A89 42 00 24 00 18 00   776 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A91 24 00 42            777 	.db	0x24, 0x00, 0x42
   0A94 FB 00               778 	.db	-5,0x00
   0A96 0B                  779 	.db	11
   0A97 42 00 24 00 18 00   780 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0A9F 24 00 42            781 	.db	0x24, 0x00, 0x42
   0AA2 FB 00               782 	.db	-5,0x00
   0AA4 0B                  783 	.db	11
   0AA5 42 00 24 00 18 00   784 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AAD 24 00 42            785 	.db	0x24, 0x00, 0x42
   0AB0 FB 00               786 	.db	-5,0x00
   0AB2 0B                  787 	.db	11
   0AB3 42 00 24 00 18 00   788 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0ABB 24 00 42            789 	.db	0x24, 0x00, 0x42
   0ABE FB 00               790 	.db	-5,0x00
   0AC0 0B                  791 	.db	11
   0AC1 42 00 24 00 18 00   792 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AC9 24 00 42            793 	.db	0x24, 0x00, 0x42
   0ACC FB 00               794 	.db	-5,0x00
   0ACE 0B                  795 	.db	11
   0ACF 42 00 24 00 18 00   796 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AD7 24 00 42            797 	.db	0x24, 0x00, 0x42
   0ADA FB 00               798 	.db	-5,0x00
   0ADC 0B                  799 	.db	11
   0ADD 42 00 24 00 18 00   800 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AE5 24 00 42            801 	.db	0x24, 0x00, 0x42
   0AE8 EB 00               802 	.db	-21,0x00
   0AEA 0B                  803 	.db	11
   0AEB 42 00 24 00 18 00   804 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0AF3 24 00 42            805 	.db	0x24, 0x00, 0x42
   0AF6 FB 00               806 	.db	-5,0x00
   0AF8 0B                  807 	.db	11
   0AF9 42 00 24 00 18 00   808 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B01 24 00 42            809 	.db	0x24, 0x00, 0x42
   0B04 FB 00               810 	.db	-5,0x00
   0B06 0B                  811 	.db	11
   0B07 42 00 24 00 18 00   812 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B0F 24 00 42            813 	.db	0x24, 0x00, 0x42
   0B12 FB 00               814 	.db	-5,0x00
   0B14 0B                  815 	.db	11
   0B15 42 00 24 00 18 00   816 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B1D 24 00 42            817 	.db	0x24, 0x00, 0x42
   0B20 FB 00               818 	.db	-5,0x00
   0B22 0B                  819 	.db	11
   0B23 42 00 24 00 18 00   820 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B2B 24 00 42            821 	.db	0x24, 0x00, 0x42
   0B2E FB 00               822 	.db	-5,0x00
   0B30 0B                  823 	.db	11
   0B31 42 00 24 00 18 00   824 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B39 24 00 42            825 	.db	0x24, 0x00, 0x42
   0B3C FB 00               826 	.db	-5,0x00
   0B3E 7F                  827 	.db	127
   0B3F 42 00 24 00 18 00   828 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0B47 24 00 42 00 00 00   829 	.db	0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x7E, 0xFF
        7E FF
   0B4F C7 C7 BB BB BB BB   830 	.db	0xC7, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xD7, 0xD7
        D7 D7
   0B57 D7 D7 DB DB 42 C3   831 	.db	0xD7, 0xD7, 0xDB, 0xDB, 0x42, 0xC3, 0xFF, 0x00
        FF 00
   0B5F FF 00 C7 00 C7 00   832 	.db	0xFF, 0x00, 0xC7, 0x00, 0xC7, 0x00, 0xEF, 0x00
        EF 00
   0B67 EF 00 E7 00 FF 00   833 	.db	0xEF, 0x00, 0xE7, 0x00, 0xFF, 0x00, 0x3C, 0x00
        3C 00
   0B6F 76 00 FF 00 BF 00   834 	.db	0x76, 0x00, 0xFF, 0x00, 0xBF, 0x00, 0xFB, 0x00
        FB 00
   0B77 7E 00 00 3C 00 3C   835 	.db	0x7E, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x3C, 0x3C
        3C 3C
   0B7F 42 7E 81 FF 81 FF   836 	.db	0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF, 0xA1, 0xFF
        A1 FF
   0B87 81 FF 81 FF 81 FF   837 	.db	0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E
        7E 7E
   0B8F F3 8D C1 BF C1 BF   838 	.db	0xF3, 0x8D, 0xC1, 0xBF, 0xC1, 0xBF, 0x81, 0xFF
        81 FF
   0B97 81 FF 81 FF 7E 7E   839 	.db	0x81, 0xFF, 0x81, 0xFF, 0x7E, 0x7E, 0x00, 0x00
        00 00
   0B9F 04 02 01 09 09 F9   840 	.db	0x04, 0x02, 0x01, 0x09, 0x09, 0xF9, 0xA9, 0xA9
        A9 A9
   0BA7 06 06 00 00 00 00   841 	.db	0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00
        55 00
   0BAF AA 00 55 00 AA 00   842 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00
        55 00
   0BB7 AA 00 55 00 AA 00   843 	.db	0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55
        55
   0BBE 6C                  844 	.db	108
   0BBF AA AA 55 55 AA AA   845 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x55
        55 55
   0BC7 AA AA 55 55 AA AA   846 	.db	0xAA, 0xAA, 0x55, 0x55, 0xAA, 0xAA, 0x55, 0x00
        55 00
   0BCF 00 42 00 24 00 18   847 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0BD7 00 24 00 42 00 00   848 	.db	0x00, 0x24, 0x00, 0x42, 0x00, 0x00, 0x00, 0x09
        00 09
   0BDF 00 00 09 00 09 0F   849 	.db	0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00, 0xCA
        00 CA
   0BE7 05 FF 00 3F 00 00   850 	.db	0x05, 0xFF, 0x00, 0x3F, 0x00, 0x00, 0x45, 0x00
        45 00
   0BEF 13 00 1E 0A 9E 00   851 	.db	0x13, 0x00, 0x1E, 0x0A, 0x9E, 0x00, 0x9F, 0x02
        9F 02
   0BF7 FF 00 FF 00 7E 00   852 	.db	0xFF, 0x00, 0xFF, 0x00, 0x7E, 0x00, 0x4A, 0x94
        4A 94
   0BFF 00 9C 00 9E 0A FF   853 	.db	0x00, 0x9C, 0x00, 0x9E, 0x0A, 0xFF, 0x01, 0xFE
        01 FE
   0C07 00 7C 00 4A 00 49   854 	.db	0x00, 0x7C, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x89
        00 89
   0C0F 89 4F 4F 4F 4A 8F   855 	.db	0x89, 0x4F, 0x4F, 0x4F, 0x4A, 0x8F, 0x8F, 0x9F
        8F 9F
   0C17 9F 7F 7F 7F 7F 45   856 	.db	0x9F, 0x7F, 0x7F, 0x7F, 0x7F, 0x45, 0x45, 0x00
        45 00
   0C1F 00 42 00 24 00 18   857 	.db	0x00, 0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18
        00 18
   0C27 00 24 00 42         858 	.db	0x00, 0x24, 0x00, 0x42
   0C2B FB 00               859 	.db	-5,0x00
   0C2D 0B                  860 	.db	11
   0C2E 42 00 24 00 18 00   861 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C36 24 00 42            862 	.db	0x24, 0x00, 0x42
   0C39 FB 00               863 	.db	-5,0x00
   0C3B 0B                  864 	.db	11
   0C3C 42 00 24 00 18 00   865 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C44 24 00 42            866 	.db	0x24, 0x00, 0x42
   0C47 FB 00               867 	.db	-5,0x00
   0C49 0B                  868 	.db	11
   0C4A 42 00 24 00 18 00   869 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C52 24 00 42            870 	.db	0x24, 0x00, 0x42
   0C55 FB 00               871 	.db	-5,0x00
   0C57 0B                  872 	.db	11
   0C58 42 00 24 00 18 00   873 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C60 24 00 42            874 	.db	0x24, 0x00, 0x42
   0C63 FB 00               875 	.db	-5,0x00
   0C65 0B                  876 	.db	11
   0C66 42 00 24 00 18 00   877 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C6E 24 00 42            878 	.db	0x24, 0x00, 0x42
   0C71 FB 00               879 	.db	-5,0x00
   0C73 0B                  880 	.db	11
   0C74 42 00 24 00 18 00   881 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C7C 24 00 42            882 	.db	0x24, 0x00, 0x42
   0C7F FB 00               883 	.db	-5,0x00
   0C81 0B                  884 	.db	11
   0C82 42 00 24 00 18 00   885 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C8A 24 00 42            886 	.db	0x24, 0x00, 0x42
   0C8D FB 00               887 	.db	-5,0x00
   0C8F 0B                  888 	.db	11
   0C90 42 00 24 00 18 00   889 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0C98 24 00 42            890 	.db	0x24, 0x00, 0x42
   0C9B FB 00               891 	.db	-5,0x00
   0C9D 0B                  892 	.db	11
   0C9E 42 00 24 00 18 00   893 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CA6 24 00 42            894 	.db	0x24, 0x00, 0x42
   0CA9 EB 00               895 	.db	-21,0x00
   0CAB 0B                  896 	.db	11
   0CAC 42 00 24 00 18 00   897 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CB4 24 00 42            898 	.db	0x24, 0x00, 0x42
   0CB7 FB 00               899 	.db	-5,0x00
   0CB9 0B                  900 	.db	11
   0CBA 42 00 24 00 18 00   901 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CC2 24 00 42            902 	.db	0x24, 0x00, 0x42
   0CC5 FB 00               903 	.db	-5,0x00
   0CC7 0B                  904 	.db	11
   0CC8 42 00 24 00 18 00   905 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CD0 24 00 42            906 	.db	0x24, 0x00, 0x42
   0CD3 FB 00               907 	.db	-5,0x00
   0CD5 0B                  908 	.db	11
   0CD6 42 00 24 00 18 00   909 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CDE 24 00 42            910 	.db	0x24, 0x00, 0x42
   0CE1 FB 00               911 	.db	-5,0x00
   0CE3 0B                  912 	.db	11
   0CE4 42 00 24 00 18 00   913 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x18, 0x00
        18 00
   0CEC 24 00 42            914 	.db	0x24, 0x00, 0x42
   0CEF FA 00               915 	.db	-6,0x00
   0CF1 7F                  916 	.db	127
   0CF2 38 00 44 00 44 00   917 	.db	0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0CFA 44 00 44 00 44 00   918 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00, 0x00
        00 00
   0D02 78 00 44 00 44 00   919 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78, 0x00
        78 00
   0D0A 44 00 44 00 78 00   920 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D12 1C 00 20 00 40 00   921 	.db	0x1C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0D1A 40 00 20 00 1C 00   922 	.db	0x40, 0x00, 0x20, 0x00, 0x1C, 0x00, 0x00, 0x00
        00 00
   0D22 78 00 44 00 44 00   923 	.db	0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0D2A 44 00 44 00 78 00   924 	.db	0x44, 0x00, 0x44, 0x00, 0x78, 0x00, 0x00, 0x00
        00 00
   0D32 7C 00 40 00 40 00   925 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D3A 40 00 40 00 7C 00   926 	.db	0x40, 0x00, 0x40, 0x00, 0x7C, 0x00, 0x00, 0x00
        00 00
   0D42 7C 00 40 00 40 00   927 	.db	0x7C, 0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00
        78 00
   0D4A 40 00 40 00 40 00   928 	.db	0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00
        00 00
   0D52 18 00 20 00 40 00   929 	.db	0x18, 0x00, 0x20, 0x00, 0x40, 0x00, 0x4E, 0x00
        4E 00
   0D5A 42 00 24 00 18 00   930 	.db	0x42, 0x00, 0x24, 0x00, 0x18, 0x00, 0x00, 0x00
        00 00
   0D62 44 00 44 00 44 00   931 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x7C, 0x00
        7C 00
   0D6A 44 00 44 00 44 00   932 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00
   0D71 7F                  933 	.db	127
   0D72 00 10 00 00 00 10   934 	.db	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10
        00 10
   0D7A 00 10 00 10 00 10   935 	.db	0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00
        00 00
   0D82 00 3E 00 08 00 08   936 	.db	0x00, 0x3E, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08
        00 08
   0D8A 00 08 00 48 00 30   937 	.db	0x00, 0x08, 0x00, 0x48, 0x00, 0x30, 0x00, 0x00
        00 00
   0D92 00 44 00 48 00 50   938 	.db	0x00, 0x44, 0x00, 0x48, 0x00, 0x50, 0x00, 0x60
        00 60
   0D9A 00 50 00 48 00 44   939 	.db	0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00, 0x00
        00 00
   0DA2 00 40 00 40 00 40   940 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40
        00 40
   0DAA 00 40 00 40 00 78   941 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x78, 0x00, 0x00
        00 00
   0DB2 00 44 00 6C 00 54   942 	.db	0x00, 0x44, 0x00, 0x6C, 0x00, 0x54, 0x00, 0x44
        00 44
   0DBA 00 44 00 44 00 44   943 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x00
        00 00
   0DC2 00 44 00 64 00 64   944 	.db	0x00, 0x44, 0x00, 0x64, 0x00, 0x64, 0x00, 0x54
        00 54
   0DCA 00 54 00 4C 00 4C   945 	.db	0x00, 0x54, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x00
        00 00
   0DD2 00 38 00 44 00 44   946 	.db	0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44
        00 44
   0DDA 00 44 00 44 00 38   947 	.db	0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00, 0x00
        00 00
   0DE2 00 78 00 44 00 44   948 	.db	0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00, 0x78
        00 78
   0DEA 00 40 00 40 00 40   949 	.db	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00
        00
   0DF1 7F                  950 	.db	127
   0DF2 00 00 38 00 44 00   951 	.db	0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0DFA 44 00 54 00 38 00   952 	.db	0x44, 0x00, 0x54, 0x00, 0x38, 0x00, 0x08, 0x00
        08 00
   0E02 00 00 78 00 44 00   953 	.db	0x00, 0x00, 0x78, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E0A 78 00 50 00 48 00   954 	.db	0x78, 0x00, 0x50, 0x00, 0x48, 0x00, 0x44, 0x00
        44 00
   0E12 00 00 38 00 40 00   955 	.db	0x00, 0x00, 0x38, 0x00, 0x40, 0x00, 0x40, 0x00
        40 00
   0E1A 38 00 04 00 04 00   956 	.db	0x38, 0x00, 0x04, 0x00, 0x04, 0x00, 0x38, 0x00
        38 00
   0E22 00 00 7C 00 10 00   957 	.db	0x00, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E2A 10 00 10 00 10 00   958 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00
        10 00
   0E32 00 00 44 00 44 00   959 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E3A 44 00 44 00 44 00   960 	.db	0x44, 0x00, 0x44, 0x00, 0x44, 0x00, 0x38, 0x00
        38 00
   0E42 00 00 41 00 41 00   961 	.db	0x00, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00
        41 00
   0E4A 49 00 2A 00 2A 00   962 	.db	0x49, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x14, 0x00
        14 00
   0E52 00 00 44 00 44 00   963 	.db	0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28, 0x00
        28 00
   0E5A 10 00 28 00 44 00   964 	.db	0x10, 0x00, 0x28, 0x00, 0x44, 0x00, 0x44, 0x00
        44 00
   0E62 00 00 44 00 28 00   965 	.db	0x00, 0x00, 0x44, 0x00, 0x28, 0x00, 0x10, 0x00
        10 00
   0E6A 10 00 10 00 10 00   966 	.db	0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        10
   0E71 7F                  967 	.db	127
   0E72 00 00 00 7C 00 04   968 	.db	0x00, 0x00, 0x00, 0x7C, 0x00, 0x04, 0x00, 0x08
        00 08
   0E7A 00 10 00 20 00 40   969 	.db	0x00, 0x10, 0x00, 0x20, 0x00, 0x40, 0x00, 0x7C
        00 7C
   0E82 00 08 00 18 00 28   970 	.db	0x00, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x08
        00 08
   0E8A 00 08 00 08 00 08   971 	.db	0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x3E
        00 3E
   0E92 00 00 00 38 00 44   972 	.db	0x00, 0x00, 0x00, 0x38, 0x00, 0x44, 0x00, 0x04
        00 04
   0E9A 00 08 00 10 00 20   973 	.db	0x00, 0x08, 0x00, 0x10, 0x00, 0x20, 0x00, 0x7C
        00 7C
   0EA2 00 00 00 70 00 08   974 	.db	0x00, 0x00, 0x00, 0x70, 0x00, 0x08, 0x00, 0x08
        00 08
   0EAA 00 30 00 08 00 08   975 	.db	0x00, 0x30, 0x00, 0x08, 0x00, 0x08, 0x00, 0x70
        00 70
   0EB2 00 00 00 10 00 08   976 	.db	0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04
        00 04
   0EBA 00 7E 00 04 00 08   977 	.db	0x00, 0x7E, 0x00, 0x04, 0x00, 0x08, 0x00, 0x10
        00 10
   0EC2 00 00 00 44 00 44   978 	.db	0x00, 0x00, 0x00, 0x44, 0x00, 0x44, 0x00, 0x28
        00 28
   0ECA 00 28 00 10 00 10   979 	.db	0x00, 0x28, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10
        00 10
   0ED2 3C 3C 42 7E 81 FF   980 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EDA A1 FF 81 FF 81 FF   981 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EE2 3C 3C 42 7E 81 FF   982 	.db	0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0EEA A1 FF 81 FF 81 FF   983 	.db	0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        81
   0EF1 7F                  984 	.db	127
   0EF2 FF 3C 3C 42 7E 81   985 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0EFA FF A1 FF 81 FF 81   986 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F02 FF 3C 3C 42 7E 81   987 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F0A FF A1 FF 81 FF 81   988 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F12 FF 3C 3C 42 7E 81   989 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F1A FF A1 FF 81 FF 81   990 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F22 FF 3C 3C 42 7E 81   991 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F2A FF A1 FF 81 FF 81   992 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F32 FF 3C 3C 42 7E 81   993 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F3A FF A1 FF 81 FF 81   994 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F42 FF 3C 3C 42 7E 81   995 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F4A FF A1 FF 81 FF 81   996 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F52 FF 3C 3C 42 7E 81   997 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F5A FF A1 FF 81 FF 81   998 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   0F62 FF 3C 3C 42 7E 81   999 	.db	0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF, 0x81
        FF 81
   0F6A FF A1 FF 81 FF 81  1000 	.db	0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        FF
   0F71 7F                 1001 	.db	127
   0F72 81 FF 3C 3C 42 7E  1002 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F7A 81 FF A1 FF 81 FF  1003 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F82 81 FF 3C 3C 42 7E  1004 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F8A 81 FF A1 FF 81 FF  1005 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0F92 81 FF 3C 3C 42 7E  1006 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0F9A 81 FF A1 FF 81 FF  1007 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FA2 81 FF 3C 3C 42 7E  1008 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FAA 81 FF A1 FF 81 FF  1009 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FB2 81 FF 3C 3C 42 7E  1010 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FBA 81 FF A1 FF 81 FF  1011 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FC2 81 FF 3C 3C 42 7E  1012 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FCA 81 FF A1 FF 81 FF  1013 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FD2 81 FF 3C 3C 42 7E  1014 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FDA 81 FF A1 FF 81 FF  1015 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81, 0xFF
        81 FF
   0FE2 81 FF 3C 3C 42 7E  1016 	.db	0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81, 0xFF
        81 FF
   0FEA 81 FF A1 FF 81 FF  1017 	.db	0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        81
   0FF1 33                 1018 	.db	51
   0FF2 FF 81 FF 3C 3C 42  1019 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   0FFA FF 81 FF A1 FF 81  1020 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1002 FF 81 FF 3C 3C 42  1021 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   100A FF 81 FF A1 FF 81  1022 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1012 FF 81 FF 3C 3C 42  1023 	.db	0xFF, 0x81, 0xFF, 0x3C, 0x3C, 0x42, 0x7E, 0x81
        7E 81
   101A FF 81 FF A1 FF 81  1024 	.db	0xFF, 0x81, 0xFF, 0xA1, 0xFF, 0x81, 0xFF, 0x81
        FF 81
   1022 FF 81 FF           1025 	.db	0xFF, 0x81, 0xFF
   1025 00                 1026 	.db	0
                           1027 ;	game.c 44
                           1028 ;	game.c 1096
                           1029 ;	genArrayInit
                           1030 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1026 21 F8 18           1031 	ld	hl,#_spritePalette
   1029 CD 00 00           1032 	call	__initrleblock
   102C 08                 1033 	.db	8
   102D DC 6B D2 3A 87 29  1034 	.db	0xDC, 0x6B, 0xD2, 0x3A, 0x87, 0x29, 0x61, 0x10
        61 10
   1035 00                 1035 	.db	0
                           1036 ;--------------------------------------------------------
                           1037 ; Home
                           1038 ;--------------------------------------------------------
                           1039 	.area _HOME
                           1040 	.area _CODE
                           1041 ;--------------------------------------------------------
                           1042 ; code
                           1043 ;--------------------------------------------------------
                           1044 	.area _CODE
                           1045 ;	game.c 70
                           1046 ;	genLabel
                           1047 ;	genFunction
                           1048 ;	---------------------------------
                           1049 ; Function performantDelay
                           1050 ; ---------------------------------
   0000                    1051 ___performantDelay_start:
   0000                    1052 _performantDelay:
                           1053 	
                           1054 ;	game.c 72
                           1055 ;	genAssign
   0000 0E 00              1056 	ld	c,#0x00
                           1057 ;	genLabel
   0002                    1058 00101$:
                           1059 ;	genCmpEq
                           1060 ;	AOP_STK for 
                           1061 ; genCmpEq: left 1, right 1, result 0
   0002 F8 02              1062 	lda	hl,2(sp)
   0004 7E                 1063 	ld	a,(hl)
   0005 B9                 1064 	cp	c
   0006 20 03              1065 	jr	nz,00109$
   0008 C3 15 00           1066 	jp	00105$
   000B                    1067 00109$:
                           1068 ;	game.c 73
                           1069 ;	genCall
                           1070 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                 1071 	push	bc
   000C CD 00 00           1072 	call	_wait_vbl_done
   000F E1                 1073 	pop	hl
   0010 4D                 1074 	ld	c,l
                           1075 ;	game.c 72
                           1076 ;	genPlus
                           1077 ;	genPlusIncr
                           1078 ; Removed redundent load
   0011 0C                 1079 	inc	c
                           1080 ;	genGoto
   0012 C3 02 00           1081 	jp	00101$
                           1082 ;	genLabel
   0015                    1083 00105$:
                           1084 ;	genEndFunction
                           1085 	
   0015 C9                 1086 	ret
   0016                    1087 ___performantDelay_end:
                           1088 ;	game.c 107
                           1089 ;	genLabel
                           1090 ;	genFunction
                           1091 ;	---------------------------------
                           1092 ; Function timers
                           1093 ; ---------------------------------
   0016                    1094 ___timers_start:
   0016                    1095 _timers:
                           1096 	
                           1097 ;	game.c 109
                           1098 ;	genCmpEq
                           1099 ;	AOP_HL for _input_timer
                           1100 ; genCmpEq: left 1, right 1, result 0
   0016 21 03 19           1101 	ld	hl,#_input_timer
   0019 7E                 1102 	ld	a,(hl)
   001A B7                 1103 	or	a,a
   001B CA 22 00           1104 	jp	z,00102$
   001E                    1105 00106$:
                           1106 ;	game.c 110
                           1107 ;	genMinus
                           1108 ;	AOP_HL for _input_timer
   001E 21 03 19           1109 	ld	hl,#_input_timer
   0021 35                 1110 	dec	(hl)
                           1111 ;	genLabel
   0022                    1112 00102$:
                           1113 ;	game.c 112
                           1114 ;	genPlus
                           1115 ;	AOP_HL for _timer
                           1116 ;	genPlusIncr
   0022 21 01 19           1117 	ld	hl,#_timer
   0025 34                 1118 	inc	(hl)
                           1119 ;	genLabel
   0026                    1120 00103$:
                           1121 ;	genEndFunction
                           1122 	
   0026 C9                 1123 	ret
   0027                    1124 ___timers_end:
                           1125 ;	game.c 116
                           1126 ;	genLabel
                           1127 ;	genFunction
                           1128 ;	---------------------------------
                           1129 ; Function main
                           1130 ; ---------------------------------
   0027                    1131 ___main_start:
   0027                    1132 _main:
                           1133 	
                           1134 ;	game.c 118
                           1135 ;	genCall
                           1136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0027 CD 5D 00           1137 	call	_init
                           1138 ;	game.c 119
                           1139 ;	genCall
                           1140 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002A CD 34 04           1141 	call	_map_init
                           1142 ;	game.c 121
                           1143 ;	genLabel
   002D                    1144 00101$:
                           1145 ;	genIfx
                           1146 ;	AOP_HL for _running
   002D AF                 1147 	xor	a,a
   002E 21 00 19           1148 	ld	hl,#_running
   0031 B6                 1149 	or	a,(hl)
   0032 CA 47 00           1150 	jp	z,00103$
                           1151 ;	game.c 123
                           1152 ;	genCall
                           1153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 CD 16 00           1154 	call	_timers
                           1155 ;	game.c 124
                           1156 ;	genCall
                           1157 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0038 CD EF 02           1158 	call	_map_loop
                           1159 ;	game.c 125
                           1160 ;	genIpush
                           1161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 3E 02              1162 	ld	a,#0x02
   003D F5                 1163 	push	af
   003E 33                 1164 	inc	sp
                           1165 ;	genCall
   003F CD 00 00           1166 	call	_performantDelay
   0042 E8 01              1167 	lda	sp,1(sp)
                           1168 ;	genGoto
   0044 C3 2D 00           1169 	jp	00101$
                           1170 ;	genLabel
   0047                    1171 00103$:
                           1172 ;	game.c 129
                           1173 ;	genIpush
                           1174 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 21 54 00           1175 	ld	hl,#__str_0
   004A E5                 1176 	push	hl
                           1177 ;	genCall
   004B CD 00 00           1178 	call	_printf
   004E E8 02              1179 	lda	sp,2(sp)
                           1180 ;	game.c 130
                           1181 ;	genLabel
   0050                    1182 00105$:
                           1183 ;	genGoto
   0050 C3 50 00           1184 	jp	00105$
                           1185 ;	genLabel
   0053                    1186 00107$:
                           1187 ;	genEndFunction
                           1188 	
   0053 C9                 1189 	ret
   0054                    1190 ___main_end:
   0054                    1191 __str_0:
   0054 54 68 65 20 65 6E  1192 	.ascii "The end"
        64
   005B 0A                 1193 	.db 0x0A
   005C 00                 1194 	.db 0x00
                           1195 ;	game.c 135
                           1196 ;	genLabel
                           1197 ;	genFunction
                           1198 ;	---------------------------------
                           1199 ; Function init
                           1200 ; ---------------------------------
   005D                    1201 ___init_start:
   005D                    1202 _init:
   005D E8 FD              1203 	lda	sp,-3(sp)
                           1204 ;	game.c 136
                           1205 ;	genAssign
                           1206 ;	AOP_HL for _current_map
   005F 21 04 19           1207 	ld	hl,#_current_map
   0062 36 C8              1208 	ld	(hl),#0xC8
                           1209 ;	game.c 137
                           1210 ;	genAssign
                           1211 ;	AOP_HL for _characters_available
   0064 21 02 19           1212 	ld	hl,#_characters_available
   0067 36 02              1213 	ld	(hl),#0x02
                           1214 ;	game.c 139
                           1215 ;	genCall
                           1216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0069 CD 77 03           1217 	call	_copy_map
                           1218 ;	game.c 140
                           1219 ;	genIpush
                           1220 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006C 21 68 11           1221 	ld	hl,#_sprites_park
   006F E5                 1222 	push	hl
                           1223 ;	genIpush
   0070 21 00 78           1224 	ld	hl,#0x7800
   0073 E5                 1225 	push	hl
                           1226 ;	genCall
   0074 CD 00 00           1227 	call	_set_bkg_data
   0077 E8 04              1228 	lda	sp,4(sp)
                           1229 ;	game.c 141
                           1230 ;	genIpush
                           1231 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 05 19           1232 	ld	hl,#_map
   007C E5                 1233 	push	hl
                           1234 ;	genIpush
   007D 21 14 12           1235 	ld	hl,#0x1214
   0080 E5                 1236 	push	hl
                           1237 ;	genIpush
   0081 21 00 00           1238 	ld	hl,#0x0000
   0084 E5                 1239 	push	hl
                           1240 ;	genCall
   0085 CD 00 00           1241 	call	_set_bkg_tiles
   0088 E8 06              1242 	lda	sp,6(sp)
                           1243 ;	game.c 143
                           1244 ;	genIpush
                           1245 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008A 21 00 00           1246 	ld	hl,#_Characters
   008D E5                 1247 	push	hl
                           1248 ;	genIpush
   008E 21 00 1E           1249 	ld	hl,#0x1E00
   0091 E5                 1250 	push	hl
                           1251 ;	genCall
   0092 CD 00 00           1252 	call	_set_sprite_data
   0095 E8 04              1253 	lda	sp,4(sp)
                           1254 ;	game.c 144
                           1255 ;	genIpush
                           1256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 F8 18           1257 	ld	hl,#_spritePalette
   009A E5                 1258 	push	hl
                           1259 ;	genIpush
   009B 21 00 04           1260 	ld	hl,#0x0400
   009E E5                 1261 	push	hl
                           1262 ;	genCall
   009F CD 00 00           1263 	call	_set_sprite_palette
   00A2 E8 04              1264 	lda	sp,4(sp)
                           1265 ;	game.c 148
                           1266 ;	genIpush
                           1267 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A4 21 F8 18           1268 	ld	hl,#_spritePalette
   00A7 E5                 1269 	push	hl
                           1270 ;	genIpush
   00A8 21 00 03           1271 	ld	hl,#0x0300
   00AB E5                 1272 	push	hl
                           1273 ;	genCall
   00AC CD 00 00           1274 	call	_set_bkg_palette
   00AF E8 04              1275 	lda	sp,4(sp)
                           1276 ;	game.c 149
                           1277 ;	genIpush
                           1278 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B1 21 00 00           1279 	ld	hl,#0x0000
   00B4 E5                 1280 	push	hl
                           1281 ;	genCall
   00B5 CD 00 00           1282 	call	_set_sprite_prop
   00B8 E8 02              1283 	lda	sp,2(sp)
                           1284 ;	game.c 154
                           1285 ;	genAssign
   00BA 01 47 FF           1286 	ld	bc,#0xFF47
                           1287 ;	genAssign (pointer)
   00BD 3E E4              1288 	ld	a,#0xE4
   00BF 02                 1289 	ld	(bc),a
                           1290 ;	game.c 156
                           1291 ;	genAssign
   00C0 01 40 FF           1292 	ld	bc,#0xFF40
                           1293 ;	genAssign
                           1294 ;	AOP_STK for _init_sloc0_1_0
   00C3 F8 01              1295 	lda	hl,1(sp)
   00C5 36 40              1296 	ld	(hl),#0x40
   00C7 23                 1297 	inc	hl
   00C8 36 FF              1298 	ld	(hl),#0xFF
                           1299 ;	genPointerGet
                           1300 ;	AOP_STK for _init_sloc0_1_0
                           1301 ;	AOP_STK for _init_sloc1_1_0
   00CA 2B                 1302 	dec	hl
   00CB 5E                 1303 	ld	e,(hl)
   00CC 23                 1304 	inc	hl
   00CD 56                 1305 	ld	d,(hl)
   00CE 1A                 1306 	ld	a,(de)
   00CF 2B                 1307 	dec	hl
   00D0 2B                 1308 	dec	hl
                           1309 ;	genOr
                           1310 ;	AOP_STK for _init_sloc1_1_0
   00D1 77                 1311 	ld      (hl),a
   00D2 7F                 1312 	ld      a,a
   00D3 F6 80              1313 	or	a,#0x80
                           1314 ;	genAssign (pointer)
   00D5 02                 1315 	ld	(bc),a
                           1316 ;	game.c 158
                           1317 ;	genAssign
   00D6 01 40 FF           1318 	ld	bc,#0xFF40
                           1319 ;	genAssign
                           1320 ;	AOP_STK for _init_sloc0_1_0
   00D9 23                 1321 	inc	hl
   00DA 36 40              1322 	ld	(hl),#0x40
   00DC 23                 1323 	inc	hl
   00DD 36 FF              1324 	ld	(hl),#0xFF
                           1325 ;	genPointerGet
                           1326 ;	AOP_STK for _init_sloc0_1_0
                           1327 ;	AOP_STK for _init_sloc1_1_0
   00DF 2B                 1328 	dec	hl
   00E0 5E                 1329 	ld	e,(hl)
   00E1 23                 1330 	inc	hl
   00E2 56                 1331 	ld	d,(hl)
   00E3 1A                 1332 	ld	a,(de)
   00E4 2B                 1333 	dec	hl
   00E5 2B                 1334 	dec	hl
                           1335 ;	genOr
                           1336 ;	AOP_STK for _init_sloc1_1_0
   00E6 77                 1337 	ld      (hl),a
   00E7 7F                 1338 	ld      a,a
   00E8 F6 01              1339 	or	a,#0x01
                           1340 ;	genAssign (pointer)
   00EA 02                 1341 	ld	(bc),a
                           1342 ;	game.c 160
                           1343 ;	genAssign
   00EB 01 40 FF           1344 	ld	bc,#0xFF40
                           1345 ;	genAssign
                           1346 ;	AOP_STK for _init_sloc0_1_0
   00EE 23                 1347 	inc	hl
   00EF 36 40              1348 	ld	(hl),#0x40
   00F1 23                 1349 	inc	hl
   00F2 36 FF              1350 	ld	(hl),#0xFF
                           1351 ;	genPointerGet
                           1352 ;	AOP_STK for _init_sloc0_1_0
                           1353 ;	AOP_STK for _init_sloc1_1_0
   00F4 2B                 1354 	dec	hl
   00F5 5E                 1355 	ld	e,(hl)
   00F6 23                 1356 	inc	hl
   00F7 56                 1357 	ld	d,(hl)
   00F8 1A                 1358 	ld	a,(de)
   00F9 2B                 1359 	dec	hl
   00FA 2B                 1360 	dec	hl
                           1361 ;	genOr
                           1362 ;	AOP_STK for _init_sloc1_1_0
   00FB 77                 1363 	ld      (hl),a
   00FC 7F                 1364 	ld      a,a
   00FD F6 02              1365 	or	a,#0x02
                           1366 ;	genAssign (pointer)
   00FF 02                 1367 	ld	(bc),a
                           1368 ;	game.c 162
                           1369 ;	genAssign
                           1370 ;	AOP_HL for _input_timer
   0100 21 03 19           1371 	ld	hl,#_input_timer
   0103 36 00              1372 	ld	(hl),#0x00
                           1373 ;	game.c 163
                           1374 ;	genAssign
                           1375 ;	AOP_HL for _running
   0105 21 00 19           1376 	ld	hl,#_running
   0108 36 01              1377 	ld	(hl),#0x01
                           1378 ;	game.c 164
                           1379 ;	genAssign
                           1380 ;	AOP_HL for _timer
   010A 21 01 19           1381 	ld	hl,#_timer
   010D 36 01              1382 	ld	(hl),#0x01
                           1383 ;	game.c 165
                           1384 ;	genAddrOf
                           1385 ;	AOP_HL for _player
   010F 11 6D 1A           1386 	ld	de,#_bunny
   0112 21 B3 1A           1387 	ld	hl,#_player
   0115 73                 1388 	ld	(hl),e
   0116 23                 1389 	inc	hl
   0117 72                 1390 	ld	(hl),d
                           1391 ;	genLabel
   0118                    1392 00101$:
                           1393 ;	genEndFunction
   0118 E8 03              1394 	lda	sp,3(sp)
   011A C9                 1395 	ret
   011B                    1396 ___init_end:
                           1397 ;	game.c 169
                           1398 ;	genLabel
                           1399 ;	genFunction
                           1400 ;	---------------------------------
                           1401 ; Function map_water
                           1402 ; ---------------------------------
   011B                    1403 ___map_water_start:
   011B                    1404 _map_water:
   011B E8 DC              1405 	lda	sp,-36(sp)
                           1406 ;	game.c 170
                           1407 ;	genAddrOf
   011D F8 14              1408 	lda	hl,20(sp)
   011F 4D                 1409 	ld	c,l
   0120 44                 1410 	ld	b,h
                           1411 ;	genAssign
                           1412 ;	AOP_STK for _map_water_sloc0_1_0
   0121 F8 02              1413 	lda	hl,2(sp)
   0123 71                 1414 	ld	(hl),c
   0124 23                 1415 	inc	hl
   0125 70                 1416 	ld	(hl),b
                           1417 ;	genArrayInit
                           1418 ;	AOP_STK for _map_water_sloc0_1_0
                           1419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0126 C5                 1420 	push	bc
   0127 2B                 1421 	dec	hl
   0128 2A                 1422 	ld	a,(hl+)
   0129 66                 1423 	ld	h,(hl)
   012A 6F                 1424 	ld	l,a
   012B CD 00 00           1425 	call	__initrleblock
   012E 10                 1426 	.db	16
   012F FF 00 DD 00 AA 00  1427 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0137 FF 00 BB 00 55 00  1428 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   013F 00                 1429 	.db	0
   0140 C1                 1430 	pop	bc
                           1431 ;	game.c 176
                           1432 ;	genAddrOf
                           1433 ;	AOP_STK for _map_water_sloc0_1_0
   0141 F8 04              1434 	lda	hl,4(sp)
   0143 7D                 1435 	ld	a,l
   0144 54                 1436 	ld	d,h
   0145 F8 02              1437 	lda	hl,2(sp)
   0147 22                 1438 	ld	(hl+),a
   0148 72                 1439 	ld	(hl),d
                           1440 ;	genAssign
                           1441 ;	AOP_STK for _map_water_sloc0_1_0
                           1442 ;	AOP_STK for _map_water_sloc1_1_0
   0149 2B                 1443 	dec	hl
   014A 2A                 1444 	ld	a,(hl+)
   014B 5E                 1445 	ld	e,(hl)
   014C F8 00              1446 	lda	hl,0(sp)
   014E 22                 1447 	ld	(hl+),a
   014F 73                 1448 	ld	(hl),e
                           1449 ;	genArrayInit
                           1450 ;	AOP_STK for _map_water_sloc1_1_0
                           1451 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0150 C5                 1452 	push	bc
   0151 2B                 1453 	dec	hl
   0152 2A                 1454 	ld	a,(hl+)
   0153 66                 1455 	ld	h,(hl)
   0154 6F                 1456 	ld	l,a
   0155 CD 00 00           1457 	call	__initrleblock
   0158 10                 1458 	.db	16
   0159 FF 00 BB 00 55 00  1459 	.db	0xFF, 0x00, 0xBB, 0x00, 0x55, 0x00, 0xFF, 0x00
        FF 00
   0161 FF 00 DD 00 AA 00  1460 	.db	0xFF, 0x00, 0xDD, 0x00, 0xAA, 0x00, 0xFF, 0x00
        FF 00
   0169 00                 1461 	.db	0
   016A C1                 1462 	pop	bc
                           1463 ;	game.c 182
                           1464 ;	genIpush
                           1465 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016B C5                 1466 	push	bc
   016C 3E 20              1467 	ld	a,#0x20
   016E F5                 1468 	push	af
   016F 33                 1469 	inc	sp
                           1470 ;	genIpush
                           1471 ;	AOP_HL for _timer
   0170 21 01 19           1472 	ld	hl,#_timer
   0173 7E                 1473 	ld	a,(hl)
   0174 F5                 1474 	push	af
   0175 33                 1475 	inc	sp
                           1476 ;	genCall
   0176 CD 00 00           1477 	call	__moduchar_rrx_s
                           1478 ;	AOP_STK for _map_water_sloc1_1_0
   0179 F8 04              1479 	lda	hl,4(sp)
   017B 73                 1480 	ld	(hl),e
   017C E8 02              1481 	lda	sp,2(sp)
   017E C1                 1482 	pop	bc
                           1483 ;	genCmpEq
                           1484 ;	AOP_STK for _map_water_sloc1_1_0
                           1485 ; genCmpEq: left 1, right 1, result 0
   017F F8 00              1486 	lda	hl,0(sp)
   0181 7E                 1487 	ld	a,(hl)
   0182 B7                 1488 	or	a,a
   0183 C2 C7 01           1489 	jp	nz,00106$
   0186 18 03              1490 	jr	00111$
   0188                    1491 00110$:
   0188 C3 C7 01           1492 	jp	00106$
   018B                    1493 00111$:
                           1494 ;	game.c 183
                           1495 ;	genIpush
                           1496 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   018B C5                 1497 	push	bc
   018C 3E 40              1498 	ld	a,#0x40
   018E F5                 1499 	push	af
   018F 33                 1500 	inc	sp
                           1501 ;	genIpush
                           1502 ;	AOP_HL for _timer
   0190 21 01 19           1503 	ld	hl,#_timer
   0193 7E                 1504 	ld	a,(hl)
   0194 F5                 1505 	push	af
   0195 33                 1506 	inc	sp
                           1507 ;	genCall
   0196 CD 00 00           1508 	call	__moduchar_rrx_s
                           1509 ;	AOP_STK for _map_water_sloc1_1_0
   0199 F8 04              1510 	lda	hl,4(sp)
   019B 73                 1511 	ld	(hl),e
   019C E8 02              1512 	lda	sp,2(sp)
   019E C1                 1513 	pop	bc
                           1514 ;	genCmpEq
                           1515 ;	AOP_STK for _map_water_sloc1_1_0
                           1516 ; genCmpEq: left 1, right 1, result 0
   019F F8 00              1517 	lda	hl,0(sp)
   01A1 7E                 1518 	ld	a,(hl)
   01A2 B7                 1519 	or	a,a
   01A3 C2 B8 01           1520 	jp	nz,00102$
   01A6 18 03              1521 	jr	00113$
   01A8                    1522 00112$:
   01A8 C3 B8 01           1523 	jp	00102$
   01AB                    1524 00113$:
                           1525 ;	game.c 184
                           1526 ;	genIpush
                           1527 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01AB C5                 1528 	push	bc
                           1529 ;	genIpush
   01AC 21 0B 01           1530 	ld	hl,#0x010B
   01AF E5                 1531 	push	hl
                           1532 ;	genCall
   01B0 CD 00 00           1533 	call	_set_bkg_data
   01B3 E8 04              1534 	lda	sp,4(sp)
                           1535 ;	genGoto
   01B5 C3 C7 01           1536 	jp	00106$
                           1537 ;	genLabel
   01B8                    1538 00102$:
                           1539 ;	game.c 188
                           1540 ;	genIpush
                           1541 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1542 ;	AOP_STK for _map_water_sloc0_1_0
   01B8 F8 02              1543 	lda	hl,2(sp)
   01BA 2A                 1544 	ld	a,(hl+)
   01BB 66                 1545 	ld	h,(hl)
   01BC 6F                 1546 	ld	l,a
   01BD E5                 1547 	push	hl
                           1548 ;	genIpush
   01BE 21 0B 01           1549 	ld	hl,#0x010B
   01C1 E5                 1550 	push	hl
                           1551 ;	genCall
   01C2 CD 00 00           1552 	call	_set_bkg_data
   01C5 E8 04              1553 	lda	sp,4(sp)
                           1554 ;	genLabel
   01C7                    1555 00106$:
                           1556 ;	genEndFunction
   01C7 E8 24              1557 	lda	sp,36(sp)
   01C9 C9                 1558 	ret
   01CA                    1559 ___map_water_end:
                           1560 ;	game.c 233
                           1561 ;	genLabel
                           1562 ;	genFunction
                           1563 ;	---------------------------------
                           1564 ; Function change_char
                           1565 ; ---------------------------------
   01CA                    1566 ___change_char_start:
   01CA                    1567 _change_char:
                           1568 	
                           1569 ;	game.c 235
                           1570 ;	genCmpEq
                           1571 ;	AOP_HL for _characters_available
                           1572 ; genCmpEq: left 1, right 1, result 0
   01CA 21 02 19           1573 	ld	hl,#_characters_available
   01CD 7E                 1574 	ld	a,(hl)
   01CE FE 01              1575 	cp	a,#0x01
   01D0 C2 DE 01           1576 	jp	nz,00102$
   01D3 18 03              1577 	jr	00135$
   01D5                    1578 00134$:
   01D5 C3 DE 01           1579 	jp	00102$
   01D8                    1580 00135$:
                           1581 ;	game.c 236
                           1582 ;	genRet
   01D8 11 00 00           1583 	ld	de,#0x0000
   01DB C3 EE 02           1584 	jp	00121$
                           1585 ;	genLabel
   01DE                    1586 00102$:
                           1587 ;	game.c 239
                           1588 ;	genAssign
                           1589 ;	AOP_HL for _player
   01DE 21 B3 1A           1590 	ld	hl,#_player
   01E1 4E                 1591 	ld	c,(hl)
   01E2 23                 1592 	inc	hl
   01E3 46                 1593 	ld	b,(hl)
                           1594 ;	genPlus
                           1595 ;	genPlusIncr
   01E4 21 08 00           1596 	ld	hl,#0x0008
   01E7 09                 1597 	add	hl,bc
                           1598 ;	genAssign (pointer)
   01E8 36 00              1599 	ld	(hl),#0x00
                           1600 ;	game.c 241
                           1601 ;	genCmpEq
                           1602 ;	AOP_HL for _characters_available
                           1603 ; genCmpEq: left 1, right 1, result 0
   01EA 21 02 19           1604 	ld	hl,#_characters_available
   01ED 7E                 1605 	ld	a,(hl)
   01EE FE 02              1606 	cp	a,#0x02
   01F0 C2 2B 02           1607 	jp	nz,00107$
   01F3 18 03              1608 	jr	00137$
   01F5                    1609 00136$:
   01F5 C3 2B 02           1610 	jp	00107$
   01F8                    1611 00137$:
                           1612 ;	game.c 242
                           1613 ;	genAssign
                           1614 ;	AOP_HL for _player
   01F8 21 B3 1A           1615 	ld	hl,#_player
   01FB 4E                 1616 	ld	c,(hl)
   01FC 23                 1617 	inc	hl
   01FD 46                 1618 	ld	b,(hl)
                           1619 ;	genPlus
                           1620 ;	genPlusIncr
                           1621 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 79                 1622 	ld	a,c
   01FF C6 0B              1623 	add	a,#0x0B
   0201 4F                 1624 	ld	c,a
   0202 78                 1625 	ld	a,b
   0203 CE 00              1626 	adc	a,#0x00
   0205 47                 1627 	ld	b,a
                           1628 ;	genPointerGet
   0206 0A                 1629 	ld	a,(bc)
                           1630 ;	genCmpEq
                           1631 ; genCmpEq: left 1, right 1, result 0
   0207 4F                 1632 	ld	c,a
   0208 FE 01              1633 	cp	a,#0x01
   020A CA 16 02           1634 	jp	z,00103$
   020D                    1635 00138$:
                           1636 ;	genCmpEq
                           1637 ; genCmpEq: left 1, right 1, result 0
   020D 79                 1638 	ld	a,c
   020E FE 02              1639 	cp	a,#0x02
   0210 CA 22 02           1640 	jp	z,00104$
   0213                    1641 00139$:
                           1642 ;	genGoto
   0213 C3 2B 02           1643 	jp	00107$
                           1644 ;	game.c 244
                           1645 ;	genLabel
   0216                    1646 00103$:
                           1647 ;	genAddrOf
                           1648 ;	AOP_HL for _player
   0216 11 7B 1A           1649 	ld	de,#_dog1
   0219 21 B3 1A           1650 	ld	hl,#_player
   021C 73                 1651 	ld	(hl),e
   021D 23                 1652 	inc	hl
   021E 72                 1653 	ld	(hl),d
                           1654 ;	game.c 245
                           1655 ;	genGoto
   021F C3 2B 02           1656 	jp	00107$
                           1657 ;	game.c 247
                           1658 ;	genLabel
   0222                    1659 00104$:
                           1660 ;	genAddrOf
                           1661 ;	AOP_HL for _player
   0222 11 6D 1A           1662 	ld	de,#_bunny
   0225 21 B3 1A           1663 	ld	hl,#_player
   0228 73                 1664 	ld	(hl),e
   0229 23                 1665 	inc	hl
   022A 72                 1666 	ld	(hl),d
                           1667 ;	game.c 249
                           1668 ;	genLabel
   022B                    1669 00107$:
                           1670 ;	game.c 251
                           1671 ;	genCmpEq
                           1672 ;	AOP_HL for _characters_available
                           1673 ; genCmpEq: left 1, right 1, result 0
   022B 21 02 19           1674 	ld	hl,#_characters_available
   022E 7E                 1675 	ld	a,(hl)
   022F FE 03              1676 	cp	a,#0x03
   0231 C2 7E 02           1677 	jp	nz,00113$
   0234 18 03              1678 	jr	00141$
   0236                    1679 00140$:
   0236 C3 7E 02           1680 	jp	00113$
   0239                    1681 00141$:
                           1682 ;	game.c 252
                           1683 ;	genAssign
                           1684 ;	AOP_HL for _player
   0239 21 B3 1A           1685 	ld	hl,#_player
   023C 4E                 1686 	ld	c,(hl)
   023D 23                 1687 	inc	hl
   023E 46                 1688 	ld	b,(hl)
                           1689 ;	genPlus
                           1690 ;	genPlusIncr
                           1691 ;	Can't optimise plus by inc, falling back to the normal way
   023F 79                 1692 	ld	a,c
   0240 C6 0B              1693 	add	a,#0x0B
   0242 4F                 1694 	ld	c,a
   0243 78                 1695 	ld	a,b
   0244 CE 00              1696 	adc	a,#0x00
   0246 47                 1697 	ld	b,a
                           1698 ;	genPointerGet
   0247 0A                 1699 	ld	a,(bc)
                           1700 ;	genCmpEq
                           1701 ; genCmpEq: left 1, right 1, result 0
   0248 4F                 1702 	ld	c,a
   0249 FE 01              1703 	cp	a,#0x01
   024B CA 5D 02           1704 	jp	z,00108$
   024E                    1705 00142$:
                           1706 ;	genCmpEq
                           1707 ; genCmpEq: left 1, right 1, result 0
   024E 79                 1708 	ld	a,c
   024F FE 02              1709 	cp	a,#0x02
   0251 CA 69 02           1710 	jp	z,00109$
   0254                    1711 00143$:
                           1712 ;	genCmpEq
                           1713 ; genCmpEq: left 1, right 1, result 0
   0254 79                 1714 	ld	a,c
   0255 FE 03              1715 	cp	a,#0x03
   0257 CA 75 02           1716 	jp	z,00110$
   025A                    1717 00144$:
                           1718 ;	genGoto
   025A C3 7E 02           1719 	jp	00113$
                           1720 ;	game.c 254
                           1721 ;	genLabel
   025D                    1722 00108$:
                           1723 ;	genAddrOf
                           1724 ;	AOP_HL for _player
   025D 11 7B 1A           1725 	ld	de,#_dog1
   0260 21 B3 1A           1726 	ld	hl,#_player
   0263 73                 1727 	ld	(hl),e
   0264 23                 1728 	inc	hl
   0265 72                 1729 	ld	(hl),d
                           1730 ;	game.c 255
                           1731 ;	genGoto
   0266 C3 7E 02           1732 	jp	00113$
                           1733 ;	game.c 257
                           1734 ;	genLabel
   0269                    1735 00109$:
                           1736 ;	genAddrOf
                           1737 ;	AOP_HL for _player
   0269 11 89 1A           1738 	ld	de,#_dog2
   026C 21 B3 1A           1739 	ld	hl,#_player
   026F 73                 1740 	ld	(hl),e
   0270 23                 1741 	inc	hl
   0271 72                 1742 	ld	(hl),d
                           1743 ;	game.c 258
                           1744 ;	genGoto
   0272 C3 7E 02           1745 	jp	00113$
                           1746 ;	game.c 260
                           1747 ;	genLabel
   0275                    1748 00110$:
                           1749 ;	genAddrOf
                           1750 ;	AOP_HL for _player
   0275 11 6D 1A           1751 	ld	de,#_bunny
   0278 21 B3 1A           1752 	ld	hl,#_player
   027B 73                 1753 	ld	(hl),e
   027C 23                 1754 	inc	hl
   027D 72                 1755 	ld	(hl),d
                           1756 ;	game.c 262
                           1757 ;	genLabel
   027E                    1758 00113$:
                           1759 ;	game.c 264
                           1760 ;	genCmpEq
                           1761 ;	AOP_HL for _characters_available
                           1762 ; genCmpEq: left 1, right 1, result 0
   027E 21 02 19           1763 	ld	hl,#_characters_available
   0281 7E                 1764 	ld	a,(hl)
   0282 FE 04              1765 	cp	a,#0x04
   0284 C2 EB 02           1766 	jp	nz,00120$
   0287 18 03              1767 	jr	00146$
   0289                    1768 00145$:
   0289 C3 EB 02           1769 	jp	00120$
   028C                    1770 00146$:
                           1771 ;	game.c 265
                           1772 ;	genAssign
                           1773 ;	AOP_HL for _player
   028C 21 B3 1A           1774 	ld	hl,#_player
   028F 4E                 1775 	ld	c,(hl)
   0290 23                 1776 	inc	hl
   0291 46                 1777 	ld	b,(hl)
                           1778 ;	genPlus
                           1779 ;	genPlusIncr
                           1780 ;	Can't optimise plus by inc, falling back to the normal way
   0292 79                 1781 	ld	a,c
   0293 C6 0B              1782 	add	a,#0x0B
   0295 4F                 1783 	ld	c,a
   0296 78                 1784 	ld	a,b
   0297 CE 00              1785 	adc	a,#0x00
   0299 47                 1786 	ld	b,a
                           1787 ;	genPointerGet
   029A 0A                 1788 	ld	a,(bc)
                           1789 ;	genCmpLt
   029B 4F                 1790 	ld	c,a
   029C FE 01              1791 	cp	#0x01
   029E DA EB 02           1792 	jp	c,00120$
                           1793 ;	genCmpGt
   02A1 3E 04              1794 	ld	a,#0x04
   02A3 91                 1795 	sub	a,c
   02A4 DA EB 02           1796 	jp	c,00120$
                           1797 ;	genMinus
   02A7 0D                 1798 	dec	c
                           1799 ;	genJumpTab
   02A8 59                 1800 	ld	e,c
   02A9 16 00              1801 	ld	d,#0x00
   02AB 21 B2 02           1802 	ld	hl,#00147$
   02AE 19                 1803 	add	hl,de
   02AF 19                 1804 	add	hl,de
   02B0 19                 1805 	add	hl,de
   02B1 E9                 1806 	jp	(hl)
   02B2                    1807 00147$:
   02B2 C3 BE 02           1808 	jp	00114$
   02B5 C3 CA 02           1809 	jp	00115$
   02B8 C3 D6 02           1810 	jp	00116$
   02BB C3 E2 02           1811 	jp	00117$
                           1812 ;	game.c 267
                           1813 ;	genLabel
   02BE                    1814 00114$:
                           1815 ;	genAddrOf
                           1816 ;	AOP_HL for _player
   02BE 11 7B 1A           1817 	ld	de,#_dog1
   02C1 21 B3 1A           1818 	ld	hl,#_player
   02C4 73                 1819 	ld	(hl),e
   02C5 23                 1820 	inc	hl
   02C6 72                 1821 	ld	(hl),d
                           1822 ;	game.c 268
                           1823 ;	genGoto
   02C7 C3 EB 02           1824 	jp	00120$
                           1825 ;	game.c 270
                           1826 ;	genLabel
   02CA                    1827 00115$:
                           1828 ;	genAddrOf
                           1829 ;	AOP_HL for _player
   02CA 11 89 1A           1830 	ld	de,#_dog2
   02CD 21 B3 1A           1831 	ld	hl,#_player
   02D0 73                 1832 	ld	(hl),e
   02D1 23                 1833 	inc	hl
   02D2 72                 1834 	ld	(hl),d
                           1835 ;	game.c 271
                           1836 ;	genGoto
   02D3 C3 EB 02           1837 	jp	00120$
                           1838 ;	game.c 273
                           1839 ;	genLabel
   02D6                    1840 00116$:
                           1841 ;	genAddrOf
                           1842 ;	AOP_HL for _player
   02D6 11 97 1A           1843 	ld	de,#_cat
   02D9 21 B3 1A           1844 	ld	hl,#_player
   02DC 73                 1845 	ld	(hl),e
   02DD 23                 1846 	inc	hl
   02DE 72                 1847 	ld	(hl),d
                           1848 ;	game.c 274
                           1849 ;	genGoto
   02DF C3 EB 02           1850 	jp	00120$
                           1851 ;	game.c 276
                           1852 ;	genLabel
   02E2                    1853 00117$:
                           1854 ;	genAddrOf
                           1855 ;	AOP_HL for _player
   02E2 11 6D 1A           1856 	ld	de,#_bunny
   02E5 21 B3 1A           1857 	ld	hl,#_player
   02E8 73                 1858 	ld	(hl),e
   02E9 23                 1859 	inc	hl
   02EA 72                 1860 	ld	(hl),d
                           1861 ;	game.c 278
                           1862 ;	genLabel
   02EB                    1863 00120$:
                           1864 ;	game.c 283
                           1865 ;	genCall
                           1866 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EB CD AA 0F           1867 	call	_rotate_player
                           1868 ;	genLabel
   02EE                    1869 00121$:
                           1870 ;	genEndFunction
                           1871 	
   02EE C9                 1872 	ret
   02EF                    1873 ___change_char_end:
                           1874 ;	game.c 287
                           1875 ;	genLabel
                           1876 ;	genFunction
                           1877 ;	---------------------------------
                           1878 ; Function map_loop
                           1879 ; ---------------------------------
   02EF                    1880 ___map_loop_start:
   02EF                    1881 _map_loop:
                           1882 	
                           1883 ;	game.c 289
                           1884 ;	genIpush
                           1885 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02EF 21 B3 1A           1886 	ld	hl,#_player
   02F2 E5                 1887 	push	hl
                           1888 ;	genCall
   02F3 CD CC 07           1889 	call	_is_ded
   02F6 42                 1890 	ld	b,d
   02F7 4B                 1891 	ld	c,e
   02F8 E8 02              1892 	lda	sp,2(sp)
                           1893 ;	genIfx
   02FA 79                 1894 	ld	a,c
   02FB B0                 1895 	or	a,b
   02FC CA 02 03           1896 	jp	z,00102$
                           1897 ;	game.c 290
                           1898 ;	genCall
                           1899 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FF CD 34 04           1900 	call	_map_init
                           1901 ;	genLabel
   0302                    1902 00102$:
                           1903 ;	game.c 292
                           1904 ;	genIpush
                           1905 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0302 21 B3 1A           1906 	ld	hl,#_player
   0305 E5                 1907 	push	hl
                           1908 ;	genCall
   0306 CD E2 05           1909 	call	_got_door
   0309 E8 02              1910 	lda	sp,2(sp)
                           1911 ;	game.c 294
                           1912 ;	genIpush
                           1913 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   030B 21 B3 1A           1914 	ld	hl,#_player
   030E E5                 1915 	push	hl
                           1916 ;	genCall
   030F CD 35 05           1917 	call	_got_key
   0312 E8 02              1918 	lda	sp,2(sp)
                           1919 ;	game.c 295
                           1920 ;	genCall
                           1921 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 CD 1B 01           1922 	call	_map_water
                           1923 ;	game.c 298
                           1924 ;	genIpush
                           1925 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0317 21 B3 1A           1926 	ld	hl,#_player
   031A E5                 1927 	push	hl
                           1928 ;	genCall
   031B CD C8 0C           1929 	call	_player_input
   031E E8 02              1930 	lda	sp,2(sp)
                           1931 ;	game.c 301
                           1932 ;	genIpush
                           1933 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 6D 1A           1934 	ld	hl,#_bunny
   0323 E5                 1935 	push	hl
                           1936 ;	genCall
   0324 CD 50 11           1937 	call	_move_character
   0327 E8 02              1938 	lda	sp,2(sp)
                           1939 ;	game.c 302
                           1940 ;	genIpush
                           1941 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 7B 1A           1942 	ld	hl,#_dog1
   032C E5                 1943 	push	hl
                           1944 ;	genCall
   032D CD 50 11           1945 	call	_move_character
   0330 E8 02              1946 	lda	sp,2(sp)
                           1947 ;	game.c 303
                           1948 ;	genIpush
                           1949 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 89 1A           1950 	ld	hl,#_dog2
   0335 E5                 1951 	push	hl
                           1952 ;	genCall
   0336 CD 50 11           1953 	call	_move_character
   0339 E8 02              1954 	lda	sp,2(sp)
                           1955 ;	game.c 304
                           1956 ;	genIpush
                           1957 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 97 1A           1958 	ld	hl,#_cat
   033E E5                 1959 	push	hl
                           1960 ;	genCall
   033F CD 50 11           1961 	call	_move_character
   0342 E8 02              1962 	lda	sp,2(sp)
                           1963 ;	genLabel
   0344                    1964 00103$:
                           1965 ;	genEndFunction
                           1966 	
   0344 C9                 1967 	ret
   0345                    1968 ___map_loop_end:
                           1969 ;	game.c 309
                           1970 ;	genLabel
                           1971 ;	genFunction
                           1972 ;	---------------------------------
                           1973 ; Function helper_copy_map
                           1974 ; ---------------------------------
   0345                    1975 ___helper_copy_map_start:
   0345                    1976 _helper_copy_map:
   0345 E8 FC              1977 	lda	sp,-4(sp)
                           1978 ;	game.c 311
                           1979 ;	genAssign
   0347 01 00 00           1980 	ld	bc,#0x0000
                           1981 ;	genLabel
   034A                    1982 00101$:
                           1983 ;	genCmpLt
   034A 79                 1984 	ld	a,c
   034B D6 68              1985 	sub	a,#0x68
   034D 78                 1986 	ld	a,b
   034E DE 01              1987 	sbc	a,#0x01
   0350 D2 74 03           1988 	jp	nc,00105$
                           1989 ;	game.c 312
                           1990 ;	genPlus
                           1991 ;	AOP_STK for _helper_copy_map_sloc0_1_0
                           1992 ;	Can't optimise plus by inc, falling back to the normal way
   0353 21 05 19           1993 	ld	hl,#_map
   0356 09                 1994 	add	hl,bc
   0357 7D                 1995 	ld	a,l
   0358 54                 1996 	ld	d,h
   0359 F8 02              1997 	lda	hl,2(sp)
   035B 22                 1998 	ld	(hl+),a
   035C 72                 1999 	ld	(hl),d
                           2000 ;	genPlus
                           2001 ;	AOP_STK for 
                           2002 ;	AOP_STK for _helper_copy_map_sloc1_1_0
                           2003 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 06              2004 	lda	hl,6(sp)
   035F 2A                 2005 	ld	a,(hl+)
   0360 66                 2006 	ld	h,(hl)
   0361 6F                 2007 	ld	l,a
   0362 09                 2008 	add	hl,bc
   0363 7D                 2009 	ld	a,l
   0364 54                 2010 	ld	d,h
   0365 F8 00              2011 	lda	hl,0(sp)
                           2012 ;	genPointerGet
                           2013 ;	AOP_STK for _helper_copy_map_sloc1_1_0
   0367 22                 2014 	ld	(hl+),a
   0368 72                 2015 	ld	(hl),d
   0369 5F                 2016 	ld	e,a
   036A 1A                 2017 	ld	a,(de)
                           2018 ;	genAssign (pointer)
                           2019 ;	AOP_STK for _helper_copy_map_sloc0_1_0
   036B 23                 2020 	inc	hl
   036C 5E                 2021 	ld	e,(hl)
   036D 23                 2022 	inc	hl
   036E 56                 2023 	ld	d,(hl)
   036F 12                 2024 	ld	(de),a
                           2025 ;	game.c 311
                           2026 ;	genPlus
                           2027 ;	genPlusIncr
   0370 03                 2028 	inc	bc
                           2029 ;	genGoto
   0371 C3 4A 03           2030 	jp	00101$
                           2031 ;	genLabel
   0374                    2032 00105$:
                           2033 ;	genEndFunction
   0374 E8 04              2034 	lda	sp,4(sp)
   0376 C9                 2035 	ret
   0377                    2036 ___helper_copy_map_end:
                           2037 ;	game.c 316
                           2038 ;	genLabel
                           2039 ;	genFunction
                           2040 ;	---------------------------------
                           2041 ; Function copy_map
                           2042 ; ---------------------------------
   0377                    2043 ___copy_map_start:
   0377                    2044 _copy_map:
                           2045 	
                           2046 ;	game.c 317
                           2047 ;	genCmpLt
                           2048 ;	AOP_HL for _current_map
   0377 21 04 19           2049 	ld	hl,#_current_map
   037A 7E                 2050 	ld	a,(hl)
   037B FE 01              2051 	cp	#0x01
   037D DA 2A 04           2052 	jp	c,00111$
                           2053 ;	genCmpGt
                           2054 ;	AOP_HL for _current_map
   0380 3E 0A              2055 	ld	a,#0x0A
   0382 96                 2056 	sub	a,(hl)
   0383 DA 2A 04           2057 	jp	c,00111$
                           2058 ;	genMinus
                           2059 ;	AOP_HL for _current_map
   0386 7E                 2060 	ld	a,(hl)
   0387 C6 FF              2061 	add	a,#0xFF
   0389 4F                 2062 	ld	c,a
                           2063 ;	genJumpTab
   038A 59                 2064 	ld	e,c
   038B 16 00              2065 	ld	d,#0x00
   038D 21 94 03           2066 	ld	hl,#00117$
   0390 19                 2067 	add	hl,de
   0391 19                 2068 	add	hl,de
   0392 19                 2069 	add	hl,de
   0393 E9                 2070 	jp	(hl)
   0394                    2071 00117$:
   0394 C3 B2 03           2072 	jp	00101$
   0397 C3 BE 03           2073 	jp	00102$
   039A C3 CA 03           2074 	jp	00103$
   039D C3 D6 03           2075 	jp	00104$
   03A0 C3 E2 03           2076 	jp	00105$
   03A3 C3 EE 03           2077 	jp	00106$
   03A6 C3 FA 03           2078 	jp	00107$
   03A9 C3 06 04           2079 	jp	00108$
   03AC C3 12 04           2080 	jp	00109$
   03AF C3 1E 04           2081 	jp	00110$
                           2082 ;	game.c 319
                           2083 ;	genLabel
   03B2                    2084 00101$:
                           2085 ;	genIpush
                           2086 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03B2 21 F0 01           2087 	ld	hl,#_Map1
   03B5 E5                 2088 	push	hl
                           2089 ;	genCall
   03B6 CD 45 03           2090 	call	_helper_copy_map
   03B9 E8 02              2091 	lda	sp,2(sp)
                           2092 ;	game.c 320
                           2093 ;	genGoto
   03BB C3 33 04           2094 	jp	00113$
                           2095 ;	game.c 322
                           2096 ;	genLabel
   03BE                    2097 00102$:
                           2098 ;	genIpush
                           2099 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BE 21 58 03           2100 	ld	hl,#_Map2
   03C1 E5                 2101 	push	hl
                           2102 ;	genCall
   03C2 CD 45 03           2103 	call	_helper_copy_map
   03C5 E8 02              2104 	lda	sp,2(sp)
                           2105 ;	game.c 323
                           2106 ;	genGoto
   03C7 C3 33 04           2107 	jp	00113$
                           2108 ;	game.c 325
                           2109 ;	genLabel
   03CA                    2110 00103$:
                           2111 ;	genIpush
                           2112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CA 21 C0 04           2113 	ld	hl,#_Map3
   03CD E5                 2114 	push	hl
                           2115 ;	genCall
   03CE CD 45 03           2116 	call	_helper_copy_map
   03D1 E8 02              2117 	lda	sp,2(sp)
                           2118 ;	game.c 326
                           2119 ;	genGoto
   03D3 C3 33 04           2120 	jp	00113$
                           2121 ;	game.c 328
                           2122 ;	genLabel
   03D6                    2123 00104$:
                           2124 ;	genIpush
                           2125 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D6 21 28 06           2126 	ld	hl,#_Map4
   03D9 E5                 2127 	push	hl
                           2128 ;	genCall
   03DA CD 45 03           2129 	call	_helper_copy_map
   03DD E8 02              2130 	lda	sp,2(sp)
                           2131 ;	game.c 329
                           2132 ;	genGoto
   03DF C3 33 04           2133 	jp	00113$
                           2134 ;	game.c 331
                           2135 ;	genLabel
   03E2                    2136 00105$:
                           2137 ;	genIpush
                           2138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03E2 21 00 10           2139 	ld	hl,#_MapTest
   03E5 E5                 2140 	push	hl
                           2141 ;	genCall
   03E6 CD 45 03           2142 	call	_helper_copy_map
   03E9 E8 02              2143 	lda	sp,2(sp)
                           2144 ;	game.c 332
                           2145 ;	genGoto
   03EB C3 33 04           2146 	jp	00113$
                           2147 ;	game.c 334
                           2148 ;	genLabel
   03EE                    2149 00106$:
                           2150 ;	genIpush
                           2151 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EE 21 00 10           2152 	ld	hl,#_MapTest
   03F1 E5                 2153 	push	hl
                           2154 ;	genCall
   03F2 CD 45 03           2155 	call	_helper_copy_map
   03F5 E8 02              2156 	lda	sp,2(sp)
                           2157 ;	game.c 335
                           2158 ;	genGoto
   03F7 C3 33 04           2159 	jp	00113$
                           2160 ;	game.c 337
                           2161 ;	genLabel
   03FA                    2162 00107$:
                           2163 ;	genIpush
                           2164 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03FA 21 00 10           2165 	ld	hl,#_MapTest
   03FD E5                 2166 	push	hl
                           2167 ;	genCall
   03FE CD 45 03           2168 	call	_helper_copy_map
   0401 E8 02              2169 	lda	sp,2(sp)
                           2170 ;	game.c 338
                           2171 ;	genGoto
   0403 C3 33 04           2172 	jp	00113$
                           2173 ;	game.c 340
                           2174 ;	genLabel
   0406                    2175 00108$:
                           2176 ;	genIpush
                           2177 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0406 21 00 10           2178 	ld	hl,#_MapTest
   0409 E5                 2179 	push	hl
                           2180 ;	genCall
   040A CD 45 03           2181 	call	_helper_copy_map
   040D E8 02              2182 	lda	sp,2(sp)
                           2183 ;	game.c 341
                           2184 ;	genGoto
   040F C3 33 04           2185 	jp	00113$
                           2186 ;	game.c 343
                           2187 ;	genLabel
   0412                    2188 00109$:
                           2189 ;	genIpush
                           2190 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0412 21 00 10           2191 	ld	hl,#_MapTest
   0415 E5                 2192 	push	hl
                           2193 ;	genCall
   0416 CD 45 03           2194 	call	_helper_copy_map
   0419 E8 02              2195 	lda	sp,2(sp)
                           2196 ;	game.c 344
                           2197 ;	genGoto
   041B C3 33 04           2198 	jp	00113$
                           2199 ;	game.c 346
                           2200 ;	genLabel
   041E                    2201 00110$:
                           2202 ;	genIpush
                           2203 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   041E 21 00 10           2204 	ld	hl,#_MapTest
   0421 E5                 2205 	push	hl
                           2206 ;	genCall
   0422 CD 45 03           2207 	call	_helper_copy_map
   0425 E8 02              2208 	lda	sp,2(sp)
                           2209 ;	game.c 347
                           2210 ;	genGoto
   0427 C3 33 04           2211 	jp	00113$
                           2212 ;	game.c 349
                           2213 ;	genLabel
   042A                    2214 00111$:
                           2215 ;	genIpush
                           2216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   042A 21 00 10           2217 	ld	hl,#_MapTest
   042D E5                 2218 	push	hl
                           2219 ;	genCall
   042E CD 45 03           2220 	call	_helper_copy_map
   0431 E8 02              2221 	lda	sp,2(sp)
                           2222 ;	game.c 352
                           2223 ;	genLabel
   0433                    2224 00113$:
                           2225 ;	genEndFunction
                           2226 	
   0433 C9                 2227 	ret
   0434                    2228 ___copy_map_end:
                           2229 ;	game.c 356
                           2230 ;	genLabel
                           2231 ;	genFunction
                           2232 ;	---------------------------------
                           2233 ; Function map_init
                           2234 ; ---------------------------------
   0434                    2235 ___map_init_start:
   0434                    2236 _map_init:
                           2237 	
                           2238 ;	game.c 357
                           2239 ;	genCall
                           2240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0434 CD 77 03           2241 	call	_copy_map
                           2242 ;	game.c 358
                           2243 ;	genIpush
                           2244 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0437 21 05 19           2245 	ld	hl,#_map
   043A E5                 2246 	push	hl
                           2247 ;	genIpush
   043B 21 14 12           2248 	ld	hl,#0x1214
   043E E5                 2249 	push	hl
                           2250 ;	genIpush
   043F 21 00 00           2251 	ld	hl,#0x0000
   0442 E5                 2252 	push	hl
                           2253 ;	genCall
   0443 CD 00 00           2254 	call	_set_bkg_tiles
   0446 E8 06              2255 	lda	sp,6(sp)
                           2256 ;	game.c 359
                           2257 ;	genCall
                           2258 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0448 CD 4C 04           2259 	call	_instanciate_chars
                           2260 ;	genLabel
   044B                    2261 00101$:
                           2262 ;	genEndFunction
                           2263 	
   044B C9                 2264 	ret
   044C                    2265 ___map_init_end:
                           2266 ;	game.c 374
                           2267 ;	genLabel
                           2268 ;	genFunction
                           2269 ;	---------------------------------
                           2270 ; Function instanciate_chars
                           2271 ; ---------------------------------
   044C                    2272 ___instanciate_chars_start:
   044C                    2273 _instanciate_chars:
                           2274 	
                           2275 ;	game.c 376
                           2276 ;	genAssign (pointer)
   044C 11 6D 1A           2277 	ld	de,#_bunny
   044F 3E 08              2278 	ld	a,#0x08
   0451 12                 2279 	ld	(de),a
                           2280 ;	game.c 377
                           2281 ;	genPlus
                           2282 ;	genPlusIncr
   0452 21 6E 1A           2283 	ld	hl,#_bunny + 1
                           2284 ;	genAssign (pointer)
   0455 36 10              2285 	ld	(hl),#0x10
                           2286 ;	game.c 378
                           2287 ;	genPlus
                           2288 ;	genPlusIncr
   0457 23                 2289 	inc	hl
                           2290 ;	genAssign (pointer)
   0458 36 00              2291 	ld	(hl),#0x00
                           2292 ;	game.c 379
                           2293 ;	genPlus
                           2294 ;	genPlusIncr
   045A 23                 2295 	inc	hl
                           2296 ;	genAssign (pointer)
   045B 36 01              2297 	ld	(hl),#0x01
                           2298 ;	game.c 380
                           2299 ;	genPlus
                           2300 ;	genPlusIncr
   045D 23                 2301 	inc	hl
                           2302 ;	genAssign (pointer)
   045E 36 02              2303 	ld	(hl),#0x02
                           2304 ;	game.c 381
                           2305 ;	genPlus
                           2306 ;	genPlusIncr
   0460 23                 2307 	inc	hl
                           2308 ;	genAssign (pointer)
   0461 36 10              2309 	ld	(hl),#0x10
                           2310 ;	game.c 382
                           2311 ;	genPlus
                           2312 ;	genPlusIncr
   0463 23                 2313 	inc	hl
                           2314 ;	genAssign (pointer)
   0464 36 11              2315 	ld	(hl),#0x11
                           2316 ;	game.c 383
                           2317 ;	genPlus
                           2318 ;	genPlusIncr
   0466 23                 2319 	inc	hl
                           2320 ;	genAssign (pointer)
   0467 36 12              2321 	ld	(hl),#0x12
                           2322 ;	game.c 384
                           2323 ;	genPlus
                           2324 ;	genPlusIncr
   0469 23                 2325 	inc	hl
                           2326 ;	genAssign (pointer)
   046A 36 00              2327 	ld	(hl),#0x00
                           2328 ;	game.c 385
                           2329 ;	genPlus
                           2330 ;	genPlusIncr
   046C 23                 2331 	inc	hl
                           2332 ;	genAssign (pointer)
   046D 36 00              2333 	ld	(hl),#0x00
                           2334 ;	game.c 386
                           2335 ;	genPlus
                           2336 ;	genPlusIncr
   046F 23                 2337 	inc	hl
   0470 23                 2338 	inc	hl
                           2339 ;	genAssign (pointer)
   0471 36 01              2340 	ld	(hl),#0x01
                           2341 ;	game.c 387
                           2342 ;	genPlus
                           2343 ;	genPlusIncr
   0473 23                 2344 	inc	hl
                           2345 ;	genAssign (pointer)
   0474 5D                 2346 	ld	e,l
   0475 54                 2347 	ld	d,h
   0476 3E 90              2348 	ld	a,#0x90
   0478 12                 2349 	ld	(de),a
   0479 13                 2350 	inc	de
   047A 3E 01              2351 	ld	a,#0x01
   047C 12                 2352 	ld	(de),a
                           2353 ;	game.c 389
                           2354 ;	genAssign (pointer)
   047D 11 7B 1A           2355 	ld	de,#_dog1
   0480 3E 10              2356 	ld	a,#0x10
   0482 12                 2357 	ld	(de),a
                           2358 ;	game.c 390
                           2359 ;	genPlus
                           2360 ;	genPlusIncr
   0483 21 7C 1A           2361 	ld	hl,#_dog1 + 1
                           2362 ;	genAssign (pointer)
   0486 36 10              2363 	ld	(hl),#0x10
                           2364 ;	game.c 391
                           2365 ;	genPlus
                           2366 ;	genPlusIncr
   0488 23                 2367 	inc	hl
                           2368 ;	genAssign (pointer)
   0489 36 03              2369 	ld	(hl),#0x03
                           2370 ;	game.c 392
                           2371 ;	genPlus
                           2372 ;	genPlusIncr
   048B 23                 2373 	inc	hl
                           2374 ;	genAssign (pointer)
   048C 36 04              2375 	ld	(hl),#0x04
                           2376 ;	game.c 393
                           2377 ;	genPlus
                           2378 ;	genPlusIncr
   048E 23                 2379 	inc	hl
                           2380 ;	genAssign (pointer)
   048F 36 05              2381 	ld	(hl),#0x05
                           2382 ;	game.c 394
                           2383 ;	genPlus
                           2384 ;	genPlusIncr
   0491 23                 2385 	inc	hl
                           2386 ;	genAssign (pointer)
   0492 36 13              2387 	ld	(hl),#0x13
                           2388 ;	game.c 395
                           2389 ;	genPlus
                           2390 ;	genPlusIncr
   0494 23                 2391 	inc	hl
                           2392 ;	genAssign (pointer)
   0495 36 14              2393 	ld	(hl),#0x14
                           2394 ;	game.c 396
                           2395 ;	genPlus
                           2396 ;	genPlusIncr
   0497 23                 2397 	inc	hl
                           2398 ;	genAssign (pointer)
   0498 36 15              2399 	ld	(hl),#0x15
                           2400 ;	game.c 397
                           2401 ;	genPlus
                           2402 ;	genPlusIncr
   049A 23                 2403 	inc	hl
                           2404 ;	genAssign (pointer)
   049B 36 00              2405 	ld	(hl),#0x00
                           2406 ;	game.c 398
                           2407 ;	genPlus
                           2408 ;	genPlusIncr
   049D 23                 2409 	inc	hl
                           2410 ;	genAssign (pointer)
   049E 36 00              2411 	ld	(hl),#0x00
                           2412 ;	game.c 399
                           2413 ;	genPlus
                           2414 ;	genPlusIncr
   04A0 23                 2415 	inc	hl
   04A1 23                 2416 	inc	hl
                           2417 ;	genAssign (pointer)
   04A2 36 02              2418 	ld	(hl),#0x02
                           2419 ;	game.c 400
                           2420 ;	genPlus
                           2421 ;	genPlusIncr
   04A4 23                 2422 	inc	hl
                           2423 ;	genAssign (pointer)
   04A5 5D                 2424 	ld	e,l
   04A6 54                 2425 	ld	d,h
   04A7 3E 90              2426 	ld	a,#0x90
   04A9 12                 2427 	ld	(de),a
   04AA 13                 2428 	inc	de
   04AB 3E 01              2429 	ld	a,#0x01
   04AD 12                 2430 	ld	(de),a
                           2431 ;	game.c 402
                           2432 ;	genAssign (pointer)
   04AE 11 89 1A           2433 	ld	de,#_dog2
   04B1 3E 08              2434 	ld	a,#0x08
   04B3 12                 2435 	ld	(de),a
                           2436 ;	game.c 403
                           2437 ;	genPlus
                           2438 ;	genPlusIncr
   04B4 21 8A 1A           2439 	ld	hl,#_dog2 + 1
                           2440 ;	genAssign (pointer)
   04B7 36 18              2441 	ld	(hl),#0x18
                           2442 ;	game.c 404
                           2443 ;	genPlus
                           2444 ;	genPlusIncr
   04B9 23                 2445 	inc	hl
                           2446 ;	genAssign (pointer)
   04BA 36 06              2447 	ld	(hl),#0x06
                           2448 ;	game.c 405
                           2449 ;	genPlus
                           2450 ;	genPlusIncr
   04BC 23                 2451 	inc	hl
                           2452 ;	genAssign (pointer)
   04BD 36 07              2453 	ld	(hl),#0x07
                           2454 ;	game.c 406
                           2455 ;	genPlus
                           2456 ;	genPlusIncr
   04BF 23                 2457 	inc	hl
                           2458 ;	genAssign (pointer)
   04C0 36 08              2459 	ld	(hl),#0x08
                           2460 ;	game.c 407
                           2461 ;	genPlus
                           2462 ;	genPlusIncr
   04C2 23                 2463 	inc	hl
                           2464 ;	genAssign (pointer)
   04C3 36 13              2465 	ld	(hl),#0x13
                           2466 ;	game.c 408
                           2467 ;	genPlus
                           2468 ;	genPlusIncr
   04C5 23                 2469 	inc	hl
                           2470 ;	genAssign (pointer)
   04C6 36 14              2471 	ld	(hl),#0x14
                           2472 ;	game.c 409
                           2473 ;	genPlus
                           2474 ;	genPlusIncr
   04C8 23                 2475 	inc	hl
                           2476 ;	genAssign (pointer)
   04C9 36 15              2477 	ld	(hl),#0x15
                           2478 ;	game.c 410
                           2479 ;	genPlus
                           2480 ;	genPlusIncr
   04CB 23                 2481 	inc	hl
                           2482 ;	genAssign (pointer)
   04CC 36 00              2483 	ld	(hl),#0x00
                           2484 ;	game.c 411
                           2485 ;	genPlus
                           2486 ;	genPlusIncr
   04CE 23                 2487 	inc	hl
                           2488 ;	genAssign (pointer)
   04CF 36 00              2489 	ld	(hl),#0x00
                           2490 ;	game.c 412
                           2491 ;	genPlus
                           2492 ;	genPlusIncr
   04D1 23                 2493 	inc	hl
   04D2 23                 2494 	inc	hl
                           2495 ;	genAssign (pointer)
   04D3 36 03              2496 	ld	(hl),#0x03
                           2497 ;	game.c 413
                           2498 ;	genPlus
                           2499 ;	genPlusIncr
   04D5 23                 2500 	inc	hl
                           2501 ;	genAssign (pointer)
   04D6 5D                 2502 	ld	e,l
   04D7 54                 2503 	ld	d,h
   04D8 3E 90              2504 	ld	a,#0x90
   04DA 12                 2505 	ld	(de),a
   04DB 13                 2506 	inc	de
   04DC 3E 01              2507 	ld	a,#0x01
   04DE 12                 2508 	ld	(de),a
                           2509 ;	game.c 415
                           2510 ;	genAssign (pointer)
   04DF 11 97 1A           2511 	ld	de,#_cat
   04E2 3E 10              2512 	ld	a,#0x10
   04E4 12                 2513 	ld	(de),a
                           2514 ;	game.c 416
                           2515 ;	genPlus
                           2516 ;	genPlusIncr
   04E5 21 98 1A           2517 	ld	hl,#_cat + 1
                           2518 ;	genAssign (pointer)
   04E8 36 18              2519 	ld	(hl),#0x18
                           2520 ;	game.c 417
                           2521 ;	genPlus
                           2522 ;	genPlusIncr
   04EA 23                 2523 	inc	hl
                           2524 ;	genAssign (pointer)
   04EB 36 09              2525 	ld	(hl),#0x09
                           2526 ;	game.c 418
                           2527 ;	genPlus
                           2528 ;	genPlusIncr
   04ED 23                 2529 	inc	hl
                           2530 ;	genAssign (pointer)
   04EE 36 0A              2531 	ld	(hl),#0x0A
                           2532 ;	game.c 419
                           2533 ;	genPlus
                           2534 ;	genPlusIncr
   04F0 23                 2535 	inc	hl
                           2536 ;	genAssign (pointer)
   04F1 36 05              2537 	ld	(hl),#0x05
                           2538 ;	game.c 420
                           2539 ;	genPlus
                           2540 ;	genPlusIncr
   04F3 23                 2541 	inc	hl
                           2542 ;	genAssign (pointer)
   04F4 36 13              2543 	ld	(hl),#0x13
                           2544 ;	game.c 421
                           2545 ;	genPlus
                           2546 ;	genPlusIncr
   04F6 23                 2547 	inc	hl
                           2548 ;	genAssign (pointer)
   04F7 36 14              2549 	ld	(hl),#0x14
                           2550 ;	game.c 422
                           2551 ;	genPlus
                           2552 ;	genPlusIncr
   04F9 23                 2553 	inc	hl
                           2554 ;	genAssign (pointer)
   04FA 36 15              2555 	ld	(hl),#0x15
                           2556 ;	game.c 423
                           2557 ;	genPlus
                           2558 ;	genPlusIncr
   04FC 23                 2559 	inc	hl
                           2560 ;	genAssign (pointer)
   04FD 36 00              2561 	ld	(hl),#0x00
                           2562 ;	game.c 424
                           2563 ;	genPlus
                           2564 ;	genPlusIncr
   04FF 23                 2565 	inc	hl
                           2566 ;	genAssign (pointer)
   0500 36 00              2567 	ld	(hl),#0x00
                           2568 ;	game.c 425
                           2569 ;	genPlus
                           2570 ;	genPlusIncr
   0502 23                 2571 	inc	hl
   0503 23                 2572 	inc	hl
                           2573 ;	genAssign (pointer)
   0504 36 04              2574 	ld	(hl),#0x04
                           2575 ;	game.c 426
                           2576 ;	genPlus
                           2577 ;	genPlusIncr
   0506 23                 2578 	inc	hl
                           2579 ;	genAssign (pointer)
   0507 5D                 2580 	ld	e,l
   0508 54                 2581 	ld	d,h
   0509 3E 90              2582 	ld	a,#0x90
   050B 12                 2583 	ld	(de),a
   050C 13                 2584 	inc	de
   050D 3E 01              2585 	ld	a,#0x01
   050F 12                 2586 	ld	(de),a
                           2587 ;	game.c 429
                           2588 ;	genIpush
                           2589 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0510 21 6D 1A           2590 	ld	hl,#_bunny
   0513 E5                 2591 	push	hl
                           2592 ;	genCall
   0514 CD B0 19           2593 	call	_set_character_sprite
   0517 E8 02              2594 	lda	sp,2(sp)
                           2595 ;	game.c 430
                           2596 ;	genIpush
                           2597 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0519 21 7B 1A           2598 	ld	hl,#_dog1
   051C E5                 2599 	push	hl
                           2600 ;	genCall
   051D CD B0 19           2601 	call	_set_character_sprite
   0520 E8 02              2602 	lda	sp,2(sp)
                           2603 ;	game.c 431
                           2604 ;	genIpush
                           2605 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0522 21 89 1A           2606 	ld	hl,#_dog2
   0525 E5                 2607 	push	hl
                           2608 ;	genCall
   0526 CD B0 19           2609 	call	_set_character_sprite
   0529 E8 02              2610 	lda	sp,2(sp)
                           2611 ;	game.c 432
                           2612 ;	genIpush
                           2613 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   052B 21 97 1A           2614 	ld	hl,#_cat
   052E E5                 2615 	push	hl
                           2616 ;	genCall
   052F CD B0 19           2617 	call	_set_character_sprite
   0532 E8 02              2618 	lda	sp,2(sp)
                           2619 ;	genLabel
   0534                    2620 00101$:
                           2621 ;	genEndFunction
                           2622 	
   0534 C9                 2623 	ret
   0535                    2624 ___instanciate_chars_end:
                           2625 ;	game.c 436
                           2626 ;	genLabel
                           2627 ;	genFunction
                           2628 ;	---------------------------------
                           2629 ; Function got_key
                           2630 ; ---------------------------------
   0535                    2631 ___got_key_start:
   0535                    2632 _got_key:
   0535 E8 FC              2633 	lda	sp,-4(sp)
                           2634 ;	game.c 437
                           2635 ;	genAssign
                           2636 ;	AOP_HL for _player
   0537 21 B3 1A           2637 	ld	hl,#_player
   053A 4E                 2638 	ld	c,(hl)
   053B 23                 2639 	inc	hl
   053C 46                 2640 	ld	b,(hl)
                           2641 ;	genPlus
                           2642 ;	genPlusIncr
   053D 03                 2643 	inc	bc
                           2644 ;	genPointerGet
   053E 0A                 2645 	ld	a,(bc)
   053F 4F                 2646 	ld	c,a
                           2647 ;	genAssign
                           2648 ;	AOP_HL for _player
                           2649 ;	AOP_STK for _got_key_sloc0_1_0
   0540 2B                 2650 	dec	hl
   0541 2A                 2651 	ld	a,(hl+)
   0542 5E                 2652 	ld	e,(hl)
   0543 F8 00              2653 	lda	hl,0(sp)
   0545 22                 2654 	ld	(hl+),a
   0546 73                 2655 	ld	(hl),e
                           2656 ;	genPointerGet
                           2657 ;	AOP_STK for _got_key_sloc0_1_0
   0547 2B                 2658 	dec	hl
   0548 5E                 2659 	ld	e,(hl)
   0549 23                 2660 	inc	hl
   054A 56                 2661 	ld	d,(hl)
   054B 1A                 2662 	ld	a,(de)
   054C 47                 2663 	ld	b,a
                           2664 ;	genIpush
                           2665 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054D 79                 2666 	ld	a,c
   054E F5                 2667 	push	af
   054F 33                 2668 	inc	sp
                           2669 ;	genIpush
   0550 78                 2670 	ld	a,b
   0551 F5                 2671 	push	af
   0552 33                 2672 	inc	sp
                           2673 ;	genCall
   0553 CD 6E 0C           2674 	call	_get_player_map_position
   0556 42                 2675 	ld	b,d
   0557 4B                 2676 	ld	c,e
   0558 E8 02              2677 	lda	sp,2(sp)
                           2678 ;	genAssign
                           2679 ;	(registers are the same)
                           2680 ;	game.c 440
                           2681 ;	genPlus
                           2682 ;	Can't optimise plus by inc, falling back to the normal way
   055A 21 05 19           2683 	ld	hl,#_map
   055D 09                 2684 	add	hl,bc
   055E 4D                 2685 	ld	c,l
   055F 44                 2686 	ld	b,h
                           2687 ;	genPointerGet
   0560 0A                 2688 	ld	a,(bc)
   0561 4F                 2689 	ld	c,a
                           2690 ;	genCast
                           2691 ; Removed redundent load
   0562 06 00              2692 	ld	b,#0x00
                           2693 ;	genCmpEq
                           2694 ; genCmpEq: left 2, right 2, result 0
   0564 79                 2695 	ld	a,c
   0565 FE 2E              2696 	cp	a,#0x2E
   0567 C2 71 05           2697 	jp	nz,00116$
   056A 78                 2698 	ld	a,b
   056B B7                 2699 	or	a,a
   056C C2 DF 05           2700 	jp	nz,00109$
   056F 18 03              2701 	jr	00117$
   0571                    2702 00116$:
   0571 C3 DF 05           2703 	jp	00109$
   0574                    2704 00117$:
                           2705 ;	game.c 445
                           2706 ;	genAssign
                           2707 ;	AOP_STK for _got_key_map_position_2_2
   0574 F8 02              2708 	lda	hl,2(sp)
   0576 36 68              2709 	ld	(hl),#0x68
   0578 23                 2710 	inc	hl
   0579 36 01              2711 	ld	(hl),#0x01
                           2712 ;	game.c 446
                           2713 ;	genLabel
   057B                    2714 00104$:
                           2715 ;	genCmpEq
                           2716 ;	AOP_STK for _got_key_map_position_2_2
                           2717 ; genCmpEq: left 2, right 2, result 0
   057B F8 02              2718 	lda	hl,2(sp)
   057D 2A                 2719 	ld	a,(hl+)
   057E B6                 2720 	or	a,(hl)
   057F CA CE 05           2721 	jp	z,00106$
   0582                    2722 00118$:
                           2723 ;	game.c 447
                           2724 ;	genMinus
                           2725 ;	AOP_STK for _got_key_map_position_2_2
   0582 F8 02              2726 	lda	hl,2(sp)
   0584 5E                 2727 	ld	e,(hl)
   0585 23                 2728 	inc	hl
   0586 56                 2729 	ld	d,(hl)
   0587 1B                 2730 	dec	de
   0588 2B                 2731 	dec	hl
   0589 73                 2732 	ld	(hl),e
   058A 23                 2733 	inc	hl
   058B 72                 2734 	ld	(hl),d
                           2735 ;	game.c 449
                           2736 ;	genPlus
                           2737 ;	AOP_STK for _got_key_map_position_2_2
                           2738 ;	AOP_STK for _got_key_sloc0_1_0
                           2739 ;	Can't optimise plus by inc, falling back to the normal way
   058C 11 05 19           2740 	ld	de,#_map
   058F 2B                 2741 	dec	hl
   0590 2A                 2742 	ld	a,(hl+)
   0591 66                 2743 	ld	h,(hl)
   0592 6F                 2744 	ld	l,a
   0593 19                 2745 	add	hl,de
   0594 7D                 2746 	ld	a,l
   0595 54                 2747 	ld	d,h
   0596 F8 00              2748 	lda	hl,0(sp)
                           2749 ;	genPointerGet
                           2750 ;	AOP_STK for _got_key_sloc0_1_0
   0598 22                 2751 	ld	(hl+),a
   0599 72                 2752 	ld	(hl),d
   059A 5F                 2753 	ld	e,a
   059B 1A                 2754 	ld	a,(de)
   059C 4F                 2755 	ld	c,a
                           2756 ;	genCast
                           2757 ; Removed redundent load
   059D 06 00              2758 	ld	b,#0x00
                           2759 ;	genCmpEq
                           2760 ; genCmpEq: left 2, right 2, result 0
   059F 79                 2761 	ld	a,c
   05A0 FE 29              2762 	cp	a,#0x29
   05A2 C2 AA 05           2763 	jp	nz,00119$
   05A5 78                 2764 	ld	a,b
   05A6 B7                 2765 	or	a,a
   05A7 CA B8 05           2766 	jp	z,00101$
   05AA                    2767 00119$:
                           2768 ;	genCmpEq
                           2769 ; genCmpEq: left 2, right 2, result 0
   05AA 79                 2770 	ld	a,c
   05AB FE 2E              2771 	cp	a,#0x2E
   05AD C2 B5 05           2772 	jp	nz,00120$
   05B0 78                 2773 	ld	a,b
   05B1 B7                 2774 	or	a,a
   05B2 CA C3 05           2775 	jp	z,00102$
   05B5                    2776 00120$:
                           2777 ;	genGoto
   05B5 C3 7B 05           2778 	jp	00104$
                           2779 ;	game.c 451
                           2780 ;	genLabel
   05B8                    2781 00101$:
                           2782 ;	genAssign (pointer)
                           2783 ;	AOP_STK for _got_key_sloc0_1_0
   05B8 F8 00              2784 	lda	hl,0(sp)
   05BA 5E                 2785 	ld	e,(hl)
   05BB 23                 2786 	inc	hl
   05BC 56                 2787 	ld	d,(hl)
   05BD 3E 2A              2788 	ld	a,#0x2A
   05BF 12                 2789 	ld	(de),a
                           2790 ;	game.c 452
                           2791 ;	genGoto
   05C0 C3 7B 05           2792 	jp	00104$
                           2793 ;	game.c 454
                           2794 ;	genLabel
   05C3                    2795 00102$:
                           2796 ;	genAssign (pointer)
                           2797 ;	AOP_STK for _got_key_sloc0_1_0
   05C3 F8 00              2798 	lda	hl,0(sp)
   05C5 5E                 2799 	ld	e,(hl)
   05C6 23                 2800 	inc	hl
   05C7 56                 2801 	ld	d,(hl)
   05C8 3E 09              2802 	ld	a,#0x09
   05CA 12                 2803 	ld	(de),a
                           2804 ;	game.c 457
                           2805 ;	genGoto
   05CB C3 7B 05           2806 	jp	00104$
                           2807 ;	genLabel
   05CE                    2808 00106$:
                           2809 ;	game.c 459
                           2810 ;	genIpush
                           2811 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05CE 21 05 19           2812 	ld	hl,#_map
   05D1 E5                 2813 	push	hl
                           2814 ;	genIpush
   05D2 21 14 12           2815 	ld	hl,#0x1214
   05D5 E5                 2816 	push	hl
                           2817 ;	genIpush
   05D6 21 00 00           2818 	ld	hl,#0x0000
   05D9 E5                 2819 	push	hl
                           2820 ;	genCall
   05DA CD 00 00           2821 	call	_set_bkg_tiles
   05DD E8 06              2822 	lda	sp,6(sp)
                           2823 ;	genLabel
   05DF                    2824 00109$:
                           2825 ;	genEndFunction
   05DF E8 04              2826 	lda	sp,4(sp)
   05E1 C9                 2827 	ret
   05E2                    2828 ___got_key_end:
                           2829 ;	game.c 463
                           2830 ;	genLabel
                           2831 ;	genFunction
                           2832 ;	---------------------------------
                           2833 ; Function got_door
                           2834 ; ---------------------------------
   05E2                    2835 ___got_door_start:
   05E2                    2836 _got_door:
   05E2 E8 FE              2837 	lda	sp,-2(sp)
                           2838 ;	game.c 464
                           2839 ;	genAssign
                           2840 ;	AOP_HL for _player
   05E4 21 B3 1A           2841 	ld	hl,#_player
   05E7 4E                 2842 	ld	c,(hl)
   05E8 23                 2843 	inc	hl
   05E9 46                 2844 	ld	b,(hl)
                           2845 ;	genPlus
                           2846 ;	genPlusIncr
   05EA 03                 2847 	inc	bc
                           2848 ;	genPointerGet
   05EB 0A                 2849 	ld	a,(bc)
   05EC 4F                 2850 	ld	c,a
                           2851 ;	genAssign
                           2852 ;	AOP_HL for _player
                           2853 ;	AOP_STK for _got_door_sloc0_1_0
   05ED 2B                 2854 	dec	hl
   05EE 2A                 2855 	ld	a,(hl+)
   05EF 5E                 2856 	ld	e,(hl)
   05F0 F8 00              2857 	lda	hl,0(sp)
   05F2 22                 2858 	ld	(hl+),a
   05F3 73                 2859 	ld	(hl),e
                           2860 ;	genPointerGet
                           2861 ;	AOP_STK for _got_door_sloc0_1_0
   05F4 2B                 2862 	dec	hl
   05F5 5E                 2863 	ld	e,(hl)
   05F6 23                 2864 	inc	hl
   05F7 56                 2865 	ld	d,(hl)
   05F8 1A                 2866 	ld	a,(de)
   05F9 47                 2867 	ld	b,a
                           2868 ;	genIpush
                           2869 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05FA 79                 2870 	ld	a,c
   05FB F5                 2871 	push	af
   05FC 33                 2872 	inc	sp
                           2873 ;	genIpush
   05FD 78                 2874 	ld	a,b
   05FE F5                 2875 	push	af
   05FF 33                 2876 	inc	sp
                           2877 ;	genCall
   0600 CD 6E 0C           2878 	call	_get_player_map_position
   0603 42                 2879 	ld	b,d
   0604 4B                 2880 	ld	c,e
   0605 E8 02              2881 	lda	sp,2(sp)
                           2882 ;	genAssign
                           2883 ;	(registers are the same)
                           2884 ;	game.c 466
                           2885 ;	genPlus
                           2886 ;	Can't optimise plus by inc, falling back to the normal way
   0607 21 05 19           2887 	ld	hl,#_map
   060A 09                 2888 	add	hl,bc
   060B 4D                 2889 	ld	c,l
   060C 44                 2890 	ld	b,h
                           2891 ;	genPointerGet
   060D 0A                 2892 	ld	a,(bc)
   060E 4F                 2893 	ld	c,a
                           2894 ;	genCast
                           2895 ; Removed redundent load
   060F 06 00              2896 	ld	b,#0x00
                           2897 ;	genCmpEq
                           2898 ; genCmpEq: left 2, right 2, result 0
   0611 79                 2899 	ld	a,c
   0612 FE 65              2900 	cp	a,#0x65
   0614 C2 1C 06           2901 	jp	nz,00144$
   0617 78                 2902 	ld	a,b
   0618 B7                 2903 	or	a,a
   0619 CA F0 06           2904 	jp	z,00101$
   061C                    2905 00144$:
                           2906 ;	genCmpEq
                           2907 ; genCmpEq: left 2, right 2, result 0
   061C 79                 2908 	ld	a,c
   061D FE 66              2909 	cp	a,#0x66
   061F C2 27 06           2910 	jp	nz,00145$
   0622 78                 2911 	ld	a,b
   0623 B7                 2912 	or	a,a
   0624 CA FB 06           2913 	jp	z,00102$
   0627                    2914 00145$:
                           2915 ;	genCmpEq
                           2916 ; genCmpEq: left 2, right 2, result 0
   0627 79                 2917 	ld	a,c
   0628 FE 67              2918 	cp	a,#0x67
   062A C2 32 06           2919 	jp	nz,00146$
   062D 78                 2920 	ld	a,b
   062E B7                 2921 	or	a,a
   062F CA 06 07           2922 	jp	z,00103$
   0632                    2923 00146$:
                           2924 ;	genCmpEq
                           2925 ; genCmpEq: left 2, right 2, result 0
   0632 79                 2926 	ld	a,c
   0633 FE 68              2927 	cp	a,#0x68
   0635 C2 3D 06           2928 	jp	nz,00147$
   0638 78                 2929 	ld	a,b
   0639 B7                 2930 	or	a,a
   063A CA 11 07           2931 	jp	z,00104$
   063D                    2932 00147$:
                           2933 ;	genCmpEq
                           2934 ; genCmpEq: left 2, right 2, result 0
   063D 79                 2935 	ld	a,c
   063E FE 69              2936 	cp	a,#0x69
   0640 C2 48 06           2937 	jp	nz,00148$
   0643 78                 2938 	ld	a,b
   0644 B7                 2939 	or	a,a
   0645 CA 1C 07           2940 	jp	z,00105$
   0648                    2941 00148$:
                           2942 ;	genCmpEq
                           2943 ; genCmpEq: left 2, right 2, result 0
   0648 79                 2944 	ld	a,c
   0649 FE 6A              2945 	cp	a,#0x6A
   064B C2 53 06           2946 	jp	nz,00149$
   064E 78                 2947 	ld	a,b
   064F B7                 2948 	or	a,a
   0650 CA 27 07           2949 	jp	z,00106$
   0653                    2950 00149$:
                           2951 ;	genCmpEq
                           2952 ; genCmpEq: left 2, right 2, result 0
   0653 79                 2953 	ld	a,c
   0654 FE 6B              2954 	cp	a,#0x6B
   0656 C2 5E 06           2955 	jp	nz,00150$
   0659 78                 2956 	ld	a,b
   065A B7                 2957 	or	a,a
   065B CA 32 07           2958 	jp	z,00107$
   065E                    2959 00150$:
                           2960 ;	genCmpEq
                           2961 ; genCmpEq: left 2, right 2, result 0
   065E 79                 2962 	ld	a,c
   065F FE 6C              2963 	cp	a,#0x6C
   0661 C2 69 06           2964 	jp	nz,00151$
   0664 78                 2965 	ld	a,b
   0665 B7                 2966 	or	a,a
   0666 CA 3D 07           2967 	jp	z,00108$
   0669                    2968 00151$:
                           2969 ;	genCmpEq
                           2970 ; genCmpEq: left 2, right 2, result 0
   0669 79                 2971 	ld	a,c
   066A FE 6D              2972 	cp	a,#0x6D
   066C C2 74 06           2973 	jp	nz,00152$
   066F 78                 2974 	ld	a,b
   0670 B7                 2975 	or	a,a
   0671 CA 48 07           2976 	jp	z,00109$
   0674                    2977 00152$:
                           2978 ;	genCmpEq
                           2979 ; genCmpEq: left 2, right 2, result 0
   0674 79                 2980 	ld	a,c
   0675 FE 6E              2981 	cp	a,#0x6E
   0677 C2 7F 06           2982 	jp	nz,00153$
   067A 78                 2983 	ld	a,b
   067B B7                 2984 	or	a,a
   067C CA 53 07           2985 	jp	z,00110$
   067F                    2986 00153$:
                           2987 ;	genCmpEq
                           2988 ; genCmpEq: left 2, right 2, result 0
   067F 79                 2989 	ld	a,c
   0680 FE 6F              2990 	cp	a,#0x6F
   0682 C2 8A 06           2991 	jp	nz,00154$
   0685 78                 2992 	ld	a,b
   0686 B7                 2993 	or	a,a
   0687 CA 5E 07           2994 	jp	z,00111$
   068A                    2995 00154$:
                           2996 ;	genCmpEq
                           2997 ; genCmpEq: left 2, right 2, result 0
   068A 79                 2998 	ld	a,c
   068B FE 70              2999 	cp	a,#0x70
   068D C2 95 06           3000 	jp	nz,00155$
   0690 78                 3001 	ld	a,b
   0691 B7                 3002 	or	a,a
   0692 CA 69 07           3003 	jp	z,00112$
   0695                    3004 00155$:
                           3005 ;	genCmpEq
                           3006 ; genCmpEq: left 2, right 2, result 0
   0695 79                 3007 	ld	a,c
   0696 FE 71              3008 	cp	a,#0x71
   0698 C2 A0 06           3009 	jp	nz,00156$
   069B 78                 3010 	ld	a,b
   069C B7                 3011 	or	a,a
   069D CA 74 07           3012 	jp	z,00113$
   06A0                    3013 00156$:
                           3014 ;	genCmpEq
                           3015 ; genCmpEq: left 2, right 2, result 0
   06A0 79                 3016 	ld	a,c
   06A1 FE 72              3017 	cp	a,#0x72
   06A3 C2 AB 06           3018 	jp	nz,00157$
   06A6 78                 3019 	ld	a,b
   06A7 B7                 3020 	or	a,a
   06A8 CA 7F 07           3021 	jp	z,00114$
   06AB                    3022 00157$:
                           3023 ;	genCmpEq
                           3024 ; genCmpEq: left 2, right 2, result 0
   06AB 79                 3025 	ld	a,c
   06AC FE 73              3026 	cp	a,#0x73
   06AE C2 B6 06           3027 	jp	nz,00158$
   06B1 78                 3028 	ld	a,b
   06B2 B7                 3029 	or	a,a
   06B3 CA 8A 07           3030 	jp	z,00115$
   06B6                    3031 00158$:
                           3032 ;	genCmpEq
                           3033 ; genCmpEq: left 2, right 2, result 0
   06B6 79                 3034 	ld	a,c
   06B7 FE 74              3035 	cp	a,#0x74
   06B9 C2 C1 06           3036 	jp	nz,00159$
   06BC 78                 3037 	ld	a,b
   06BD B7                 3038 	or	a,a
   06BE CA 95 07           3039 	jp	z,00116$
   06C1                    3040 00159$:
                           3041 ;	genCmpEq
                           3042 ; genCmpEq: left 2, right 2, result 0
   06C1 79                 3043 	ld	a,c
   06C2 FE 75              3044 	cp	a,#0x75
   06C4 C2 CC 06           3045 	jp	nz,00160$
   06C7 78                 3046 	ld	a,b
   06C8 B7                 3047 	or	a,a
   06C9 CA A0 07           3048 	jp	z,00117$
   06CC                    3049 00160$:
                           3050 ;	genCmpEq
                           3051 ; genCmpEq: left 2, right 2, result 0
   06CC 79                 3052 	ld	a,c
   06CD FE 76              3053 	cp	a,#0x76
   06CF C2 D7 06           3054 	jp	nz,00161$
   06D2 78                 3055 	ld	a,b
   06D3 B7                 3056 	or	a,a
   06D4 CA AB 07           3057 	jp	z,00118$
   06D7                    3058 00161$:
                           3059 ;	genCmpEq
                           3060 ; genCmpEq: left 2, right 2, result 0
   06D7 79                 3061 	ld	a,c
   06D8 FE 77              3062 	cp	a,#0x77
   06DA C2 E2 06           3063 	jp	nz,00162$
   06DD 78                 3064 	ld	a,b
   06DE B7                 3065 	or	a,a
   06DF CA B6 07           3066 	jp	z,00119$
   06E2                    3067 00162$:
                           3068 ;	genCmpEq
                           3069 ; genCmpEq: left 2, right 2, result 0
   06E2 79                 3070 	ld	a,c
   06E3 FE 78              3071 	cp	a,#0x78
   06E5 C2 ED 06           3072 	jp	nz,00163$
   06E8 78                 3073 	ld	a,b
   06E9 B7                 3074 	or	a,a
   06EA CA C1 07           3075 	jp	z,00120$
   06ED                    3076 00163$:
                           3077 ;	genGoto
   06ED C3 C9 07           3078 	jp	00122$
                           3079 ;	game.c 468
                           3080 ;	genLabel
   06F0                    3081 00101$:
                           3082 ;	genAssign
                           3083 ;	AOP_HL for _current_map
   06F0 21 04 19           3084 	ld	hl,#_current_map
   06F3 36 01              3085 	ld	(hl),#0x01
                           3086 ;	game.c 469
                           3087 ;	genCall
                           3088 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 CD 34 04           3089 	call	_map_init
                           3090 ;	game.c 470
                           3091 ;	genGoto
   06F8 C3 C9 07           3092 	jp	00122$
                           3093 ;	game.c 472
                           3094 ;	genLabel
   06FB                    3095 00102$:
                           3096 ;	genAssign
                           3097 ;	AOP_HL for _current_map
   06FB 21 04 19           3098 	ld	hl,#_current_map
   06FE 36 02              3099 	ld	(hl),#0x02
                           3100 ;	game.c 473
                           3101 ;	genCall
                           3102 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0700 CD 34 04           3103 	call	_map_init
                           3104 ;	game.c 474
                           3105 ;	genGoto
   0703 C3 C9 07           3106 	jp	00122$
                           3107 ;	game.c 476
                           3108 ;	genLabel
   0706                    3109 00103$:
                           3110 ;	genAssign
                           3111 ;	AOP_HL for _current_map
   0706 21 04 19           3112 	ld	hl,#_current_map
   0709 36 03              3113 	ld	(hl),#0x03
                           3114 ;	game.c 477
                           3115 ;	genCall
                           3116 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   070B CD 34 04           3117 	call	_map_init
                           3118 ;	game.c 478
                           3119 ;	genGoto
   070E C3 C9 07           3120 	jp	00122$
                           3121 ;	game.c 480
                           3122 ;	genLabel
   0711                    3123 00104$:
                           3124 ;	genAssign
                           3125 ;	AOP_HL for _current_map
   0711 21 04 19           3126 	ld	hl,#_current_map
   0714 36 04              3127 	ld	(hl),#0x04
                           3128 ;	game.c 481
                           3129 ;	genCall
                           3130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0716 CD 34 04           3131 	call	_map_init
                           3132 ;	game.c 482
                           3133 ;	genGoto
   0719 C3 C9 07           3134 	jp	00122$
                           3135 ;	game.c 484
                           3136 ;	genLabel
   071C                    3137 00105$:
                           3138 ;	genAssign
                           3139 ;	AOP_HL for _current_map
   071C 21 04 19           3140 	ld	hl,#_current_map
   071F 36 05              3141 	ld	(hl),#0x05
                           3142 ;	game.c 485
                           3143 ;	genCall
                           3144 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0721 CD 34 04           3145 	call	_map_init
                           3146 ;	game.c 486
                           3147 ;	genGoto
   0724 C3 C9 07           3148 	jp	00122$
                           3149 ;	game.c 488
                           3150 ;	genLabel
   0727                    3151 00106$:
                           3152 ;	genAssign
                           3153 ;	AOP_HL for _current_map
   0727 21 04 19           3154 	ld	hl,#_current_map
   072A 36 06              3155 	ld	(hl),#0x06
                           3156 ;	game.c 489
                           3157 ;	genCall
                           3158 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   072C CD 34 04           3159 	call	_map_init
                           3160 ;	game.c 490
                           3161 ;	genGoto
   072F C3 C9 07           3162 	jp	00122$
                           3163 ;	game.c 492
                           3164 ;	genLabel
   0732                    3165 00107$:
                           3166 ;	genAssign
                           3167 ;	AOP_HL for _current_map
   0732 21 04 19           3168 	ld	hl,#_current_map
   0735 36 07              3169 	ld	(hl),#0x07
                           3170 ;	game.c 493
                           3171 ;	genCall
                           3172 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0737 CD 34 04           3173 	call	_map_init
                           3174 ;	game.c 494
                           3175 ;	genGoto
   073A C3 C9 07           3176 	jp	00122$
                           3177 ;	game.c 496
                           3178 ;	genLabel
   073D                    3179 00108$:
                           3180 ;	genAssign
                           3181 ;	AOP_HL for _current_map
   073D 21 04 19           3182 	ld	hl,#_current_map
   0740 36 08              3183 	ld	(hl),#0x08
                           3184 ;	game.c 497
                           3185 ;	genCall
                           3186 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0742 CD 34 04           3187 	call	_map_init
                           3188 ;	game.c 498
                           3189 ;	genGoto
   0745 C3 C9 07           3190 	jp	00122$
                           3191 ;	game.c 500
                           3192 ;	genLabel
   0748                    3193 00109$:
                           3194 ;	genAssign
                           3195 ;	AOP_HL for _current_map
   0748 21 04 19           3196 	ld	hl,#_current_map
   074B 36 09              3197 	ld	(hl),#0x09
                           3198 ;	game.c 501
                           3199 ;	genCall
                           3200 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   074D CD 34 04           3201 	call	_map_init
                           3202 ;	game.c 502
                           3203 ;	genGoto
   0750 C3 C9 07           3204 	jp	00122$
                           3205 ;	game.c 504
                           3206 ;	genLabel
   0753                    3207 00110$:
                           3208 ;	genAssign
                           3209 ;	AOP_HL for _current_map
   0753 21 04 19           3210 	ld	hl,#_current_map
   0756 36 0A              3211 	ld	(hl),#0x0A
                           3212 ;	game.c 505
                           3213 ;	genCall
                           3214 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0758 CD 34 04           3215 	call	_map_init
                           3216 ;	game.c 506
                           3217 ;	genGoto
   075B C3 C9 07           3218 	jp	00122$
                           3219 ;	game.c 508
                           3220 ;	genLabel
   075E                    3221 00111$:
                           3222 ;	genAssign
                           3223 ;	AOP_HL for _current_map
   075E 21 04 19           3224 	ld	hl,#_current_map
   0761 36 0B              3225 	ld	(hl),#0x0B
                           3226 ;	game.c 509
                           3227 ;	genCall
                           3228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0763 CD 34 04           3229 	call	_map_init
                           3230 ;	game.c 510
                           3231 ;	genGoto
   0766 C3 C9 07           3232 	jp	00122$
                           3233 ;	game.c 512
                           3234 ;	genLabel
   0769                    3235 00112$:
                           3236 ;	genAssign
                           3237 ;	AOP_HL for _current_map
   0769 21 04 19           3238 	ld	hl,#_current_map
   076C 36 0C              3239 	ld	(hl),#0x0C
                           3240 ;	game.c 513
                           3241 ;	genCall
                           3242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076E CD 34 04           3243 	call	_map_init
                           3244 ;	game.c 514
                           3245 ;	genGoto
   0771 C3 C9 07           3246 	jp	00122$
                           3247 ;	game.c 516
                           3248 ;	genLabel
   0774                    3249 00113$:
                           3250 ;	genAssign
                           3251 ;	AOP_HL for _current_map
   0774 21 04 19           3252 	ld	hl,#_current_map
   0777 36 0D              3253 	ld	(hl),#0x0D
                           3254 ;	game.c 517
                           3255 ;	genCall
                           3256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0779 CD 34 04           3257 	call	_map_init
                           3258 ;	game.c 518
                           3259 ;	genGoto
   077C C3 C9 07           3260 	jp	00122$
                           3261 ;	game.c 520
                           3262 ;	genLabel
   077F                    3263 00114$:
                           3264 ;	genAssign
                           3265 ;	AOP_HL for _current_map
   077F 21 04 19           3266 	ld	hl,#_current_map
   0782 36 0E              3267 	ld	(hl),#0x0E
                           3268 ;	game.c 521
                           3269 ;	genCall
                           3270 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0784 CD 34 04           3271 	call	_map_init
                           3272 ;	game.c 522
                           3273 ;	genGoto
   0787 C3 C9 07           3274 	jp	00122$
                           3275 ;	game.c 524
                           3276 ;	genLabel
   078A                    3277 00115$:
                           3278 ;	genAssign
                           3279 ;	AOP_HL for _current_map
   078A 21 04 19           3280 	ld	hl,#_current_map
   078D 36 0F              3281 	ld	(hl),#0x0F
                           3282 ;	game.c 525
                           3283 ;	genCall
                           3284 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078F CD 34 04           3285 	call	_map_init
                           3286 ;	game.c 526
                           3287 ;	genGoto
   0792 C3 C9 07           3288 	jp	00122$
                           3289 ;	game.c 528
                           3290 ;	genLabel
   0795                    3291 00116$:
                           3292 ;	genAssign
                           3293 ;	AOP_HL for _current_map
   0795 21 04 19           3294 	ld	hl,#_current_map
   0798 36 10              3295 	ld	(hl),#0x10
                           3296 ;	game.c 529
                           3297 ;	genCall
                           3298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079A CD 34 04           3299 	call	_map_init
                           3300 ;	game.c 530
                           3301 ;	genGoto
   079D C3 C9 07           3302 	jp	00122$
                           3303 ;	game.c 532
                           3304 ;	genLabel
   07A0                    3305 00117$:
                           3306 ;	genAssign
                           3307 ;	AOP_HL for _current_map
   07A0 21 04 19           3308 	ld	hl,#_current_map
   07A3 36 11              3309 	ld	(hl),#0x11
                           3310 ;	game.c 533
                           3311 ;	genCall
                           3312 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07A5 CD 34 04           3313 	call	_map_init
                           3314 ;	game.c 534
                           3315 ;	genGoto
   07A8 C3 C9 07           3316 	jp	00122$
                           3317 ;	game.c 536
                           3318 ;	genLabel
   07AB                    3319 00118$:
                           3320 ;	genAssign
                           3321 ;	AOP_HL for _current_map
   07AB 21 04 19           3322 	ld	hl,#_current_map
   07AE 36 12              3323 	ld	(hl),#0x12
                           3324 ;	game.c 537
                           3325 ;	genCall
                           3326 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B0 CD 34 04           3327 	call	_map_init
                           3328 ;	game.c 538
                           3329 ;	genGoto
   07B3 C3 C9 07           3330 	jp	00122$
                           3331 ;	game.c 540
                           3332 ;	genLabel
   07B6                    3333 00119$:
                           3334 ;	genAssign
                           3335 ;	AOP_HL for _current_map
   07B6 21 04 19           3336 	ld	hl,#_current_map
   07B9 36 13              3337 	ld	(hl),#0x13
                           3338 ;	game.c 541
                           3339 ;	genCall
                           3340 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BB CD 34 04           3341 	call	_map_init
                           3342 ;	game.c 542
                           3343 ;	genGoto
   07BE C3 C9 07           3344 	jp	00122$
                           3345 ;	game.c 544
                           3346 ;	genLabel
   07C1                    3347 00120$:
                           3348 ;	genAssign
                           3349 ;	AOP_HL for _current_map
   07C1 21 04 19           3350 	ld	hl,#_current_map
   07C4 36 14              3351 	ld	(hl),#0x14
                           3352 ;	game.c 545
                           3353 ;	genCall
                           3354 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C6 CD 34 04           3355 	call	_map_init
                           3356 ;	game.c 547
                           3357 ;	genLabel
   07C9                    3358 00122$:
                           3359 ;	genEndFunction
   07C9 E8 02              3360 	lda	sp,2(sp)
   07CB C9                 3361 	ret
   07CC                    3362 ___got_door_end:
                           3363 ;	game.c 552
                           3364 ;	genLabel
                           3365 ;	genFunction
                           3366 ;	---------------------------------
                           3367 ; Function is_ded
                           3368 ; ---------------------------------
   07CC                    3369 ___is_ded_start:
   07CC                    3370 _is_ded:
   07CC E8 F7              3371 	lda	sp,-9(sp)
                           3372 ;	game.c 558
                           3373 ;	genAssign
                           3374 ;	AOP_STK for 
   07CE F8 0B              3375 	lda	hl,11(sp)
   07D0 4E                 3376 	ld	c,(hl)
   07D1 23                 3377 	inc	hl
   07D2 46                 3378 	ld	b,(hl)
                           3379 ;	genPointerGet
   07D3 59                 3380 	ld	e,c
   07D4 50                 3381 	ld	d,b
   07D5 1A                 3382 	ld	a,(de)
   07D6 4F                 3383 	ld	c,a
   07D7 13                 3384 	inc	de
   07D8 1A                 3385 	ld	a,(de)
   07D9 47                 3386 	ld	b,a
                           3387 ;	genPlus
                           3388 ;	AOP_STK for _is_ded_sloc0_1_0
                           3389 ;	genPlusIncr
                           3390 ;	Can't optimise plus by inc, falling back to the normal way
   07DA 21 09 00           3391 	ld	hl,#0x0009
   07DD 09                 3392 	add	hl,bc
   07DE 7D                 3393 	ld	a,l
   07DF 54                 3394 	ld	d,h
   07E0 F8 03              3395 	lda	hl,3(sp)
                           3396 ;	genPointerGet
                           3397 ;	AOP_STK for _is_ded_sloc0_1_0
   07E2 22                 3398 	ld	(hl+),a
   07E3 72                 3399 	ld	(hl),d
   07E4 5F                 3400 	ld	e,a
   07E5 1A                 3401 	ld	a,(de)
                           3402 ;	genIfx
   07E6 B7                 3403 	or	a,a
   07E7 CA 09 08           3404 	jp	z,00102$
                           3405 ;	genPlus
                           3406 ;	AOP_STK for _is_ded_sloc0_1_0
                           3407 ;	genPlusIncr
                           3408 ;	Can't optimise plus by inc, falling back to the normal way
   07EA 21 0B 00           3409 	ld	hl,#0x000B
   07ED 09                 3410 	add	hl,bc
   07EE 7D                 3411 	ld	a,l
   07EF 54                 3412 	ld	d,h
   07F0 F8 03              3413 	lda	hl,3(sp)
                           3414 ;	genPointerGet
                           3415 ;	AOP_STK for _is_ded_sloc0_1_0
                           3416 ;	AOP_STK for _is_ded_sloc1_1_0
   07F2 22                 3417 	ld	(hl+),a
   07F3 72                 3418 	ld	(hl),d
   07F4 5F                 3419 	ld	e,a
   07F5 1A                 3420 	ld	a,(de)
   07F6 2B                 3421 	dec	hl
   07F7 2B                 3422 	dec	hl
                           3423 ;	genCmpEq
                           3424 ;	AOP_STK for _is_ded_sloc1_1_0
                           3425 ; genCmpEq: left 1, right 1, result 0
   07F8 77                 3426 	ld      (hl),a
                           3427 ; Removed redundent load
   07F9 FE 01              3428 	cp	a,#0x01
   07FB C2 09 08           3429 	jp	nz,00102$
   07FE 18 03              3430 	jr	00112$
   0800                    3431 00111$:
   0800 C3 09 08           3432 	jp	00102$
   0803                    3433 00112$:
                           3434 ;	game.c 559
                           3435 ;	genRet
   0803 11 00 00           3436 	ld	de,#0x0000
   0806 C3 9E 08           3437 	jp	00106$
                           3438 ;	genLabel
   0809                    3439 00102$:
                           3440 ;	game.c 564
                           3441 ;	genPointerGet
                           3442 ;	AOP_STK for _is_ded_sloc1_1_0
   0809 0A                 3443 	ld	a,(bc)
   080A F8 02              3444 	lda	hl,2(sp)
   080C 77                 3445 	ld	(hl),a
                           3446 ;	genCast
                           3447 ;	AOP_STK for _is_ded_sloc1_1_0
                           3448 ;	AOP_STK for _is_ded_sloc0_1_0
   080D 2A                 3449 	ld	a,(hl+)
   080E 22                 3450 	ld	(hl+),a
   080F 36 00              3451 	ld	(hl),#0x00
                           3452 ;	genRightShift
                           3453 ;	AOP_STK for _is_ded_sloc0_1_0
                           3454 ;	AOP_STK for _is_ded_sloc2_1_0
   0811 2B                 3455 	dec	hl
   0812 7E                 3456 	ld	a,(hl)
   0813 F8 00              3457 	lda	hl,0(sp)
   0815 77                 3458 	ld	(hl),a
   0816 F8 04              3459 	lda	hl,4(sp)
   0818 7E                 3460 	ld	a,(hl)
   0819 F8 01              3461 	lda	hl,1(sp)
   081B 77                 3462 	ld	(hl),a
   081C CB 3E              3463 	srl	(hl)
   081E 2B                 3464 	dec	hl
   081F CB 1E              3465 	rr	(hl)
   0821 23                 3466 	inc	hl
   0822 CB 3E              3467 	srl	(hl)
   0824 2B                 3468 	dec	hl
   0825 CB 1E              3469 	rr	(hl)
   0827 23                 3470 	inc	hl
   0828 CB 3E              3471 	srl	(hl)
   082A 2B                 3472 	dec	hl
   082B CB 1E              3473 	rr	(hl)
                           3474 ;	genMinus
                           3475 ;	AOP_STK for _is_ded_sloc2_1_0
                           3476 ;	AOP_STK for _is_ded_sloc0_1_0
   082D 5E                 3477 	ld	e,(hl)
   082E 23                 3478 	inc	hl
   082F 56                 3479 	ld	d,(hl)
   0830 21 01 00           3480 	ld	hl,#0x0001
   0833 7B                 3481 	ld	a,e
   0834 95                 3482 	sub	a,l
   0835 5F                 3483 	ld	e,a
   0836 7A                 3484 	ld	a,d
   0837 9C                 3485 	sbc	a,h
   0838 F8 04              3486 	lda	hl,4(sp)
   083A 32                 3487 	ld      (hl-),a
   083B 73                 3488 	ld	(hl),e
                           3489 ;	genCast
                           3490 ;	AOP_STK for _is_ded_sloc0_1_0
                           3491 ;	AOP_STK for _is_ded__x_1_1
   083C 7E                 3492 	ld	a,(hl)
   083D F8 08              3493 	lda	hl,8(sp)
   083F 77                 3494 	ld	(hl),a
                           3495 ;	game.c 565
                           3496 ;	genPlus
                           3497 ;	genPlusIncr
   0840 03                 3498 	inc	bc
                           3499 ;	genPointerGet
   0841 0A                 3500 	ld	a,(bc)
   0842 4F                 3501 	ld	c,a
                           3502 ;	genCast
                           3503 ; Removed redundent load
   0843 06 00              3504 	ld	b,#0x00
                           3505 ;	genRightShift
   0845 CB 38              3506 	srl	b
   0847 CB 19              3507 	rr	c
   0849 CB 38              3508 	srl	b
   084B CB 19              3509 	rr	c
   084D CB 38              3510 	srl	b
   084F CB 19              3511 	rr	c
                           3512 ;	genMinus
   0851 0B                 3513 	dec	bc
   0852 0B                 3514 	dec	bc
                           3515 ;	genCast
                           3516 ;	AOP_STK for _is_ded__y_1_1
   0853 2B                 3517 	dec	hl
   0854 71                 3518 	ld	(hl),c
                           3519 ;	game.c 570
                           3520 ;	genCast
                           3521 ;	AOP_STK for _is_ded__x_1_1
                           3522 ;	AOP_STK for _is_ded_map_position_1_1
   0855 23                 3523 	inc	hl
   0856 7E                 3524 	ld	a,(hl)
   0857 F8 05              3525 	lda	hl,5(sp)
   0859 22                 3526 	ld	(hl+),a
   085A 36 00              3527 	ld	(hl),#0x00
                           3528 ;	game.c 571
                           3529 ;	genCast
                           3530 ;	AOP_STK for _is_ded__y_1_1
   085C 23                 3531 	inc	hl
   085D 4E                 3532 	ld	c,(hl)
   085E 06 00              3533 	ld	b,#0x00
                           3534 ;	genMult
   0860 59                 3535 	ld	e,c
   0861 50                 3536 	ld	d,b
   0862 6B                 3537 	ld	l,e
   0863 62                 3538 	ld	h,d
   0864 29                 3539 	add	hl,hl
   0865 29                 3540 	add	hl,hl
   0866 19                 3541 	add	hl,de
   0867 29                 3542 	add	hl,hl
   0868 29                 3543 	add	hl,hl
   0869 4D                 3544 	ld	c,l
   086A 44                 3545 	ld	b,h
                           3546 ;	genPlus
                           3547 ;	AOP_STK for _is_ded_map_position_1_1
                           3548 ;	Can't optimise plus by inc, falling back to the normal way
   086B F8 05              3549 	lda	hl,5(sp)
   086D 2A                 3550 	ld	a,(hl+)
   086E 66                 3551 	ld	h,(hl)
   086F 6F                 3552 	ld	l,a
   0870 09                 3553 	add	hl,bc
   0871 7D                 3554 	ld	a,l
   0872 54                 3555 	ld	d,h
   0873 F8 05              3556 	lda	hl,5(sp)
   0875 22                 3557 	ld	(hl+),a
   0876 72                 3558 	ld	(hl),d
                           3559 ;	game.c 573
                           3560 ;	genPlus
                           3561 ;	AOP_STK for _is_ded_map_position_1_1
                           3562 ;	Can't optimise plus by inc, falling back to the normal way
   0877 11 05 19           3563 	ld	de,#_map
   087A 2B                 3564 	dec	hl
   087B 2A                 3565 	ld	a,(hl+)
   087C 66                 3566 	ld	h,(hl)
   087D 6F                 3567 	ld	l,a
   087E 19                 3568 	add	hl,de
   087F 4D                 3569 	ld	c,l
   0880 44                 3570 	ld	b,h
                           3571 ;	genPointerGet
   0881 0A                 3572 	ld	a,(bc)
   0882 4F                 3573 	ld	c,a
                           3574 ;	genCast
                           3575 ; Removed redundent load
   0883 06 00              3576 	ld	b,#0x00
                           3577 ;	genCmpEq
                           3578 ; genCmpEq: left 2, right 2, result 0
   0885 79                 3579 	ld	a,c
   0886 FE 0B              3580 	cp	a,#0x0B
   0888 C2 92 08           3581 	jp	nz,00117$
   088B 78                 3582 	ld	a,b
   088C B7                 3583 	or	a,a
   088D C2 9B 08           3584 	jp	nz,00105$
   0890 18 03              3585 	jr	00118$
   0892                    3586 00117$:
   0892 C3 9B 08           3587 	jp	00105$
   0895                    3588 00118$:
                           3589 ;	game.c 577
                           3590 ;	genRet
   0895 11 01 00           3591 	ld	de,#0x0001
   0898 C3 9E 08           3592 	jp	00106$
                           3593 ;	game.c 578
                           3594 ;	genLabel
   089B                    3595 00105$:
                           3596 ;	game.c 579
                           3597 ;	genRet
   089B 11 00 00           3598 	ld	de,#0x0000
                           3599 ;	genLabel
   089E                    3600 00106$:
                           3601 ;	genEndFunction
   089E E8 09              3602 	lda	sp,9(sp)
   08A0 C9                 3603 	ret
   08A1                    3604 ___is_ded_end:
                           3605 ;	game.c 584
                           3606 ;	genLabel
                           3607 ;	genFunction
                           3608 ;	---------------------------------
                           3609 ; Function ice_should_slide
                           3610 ; ---------------------------------
   08A1                    3611 ___ice_should_slide_start:
   08A1                    3612 _ice_should_slide:
                           3613 	
                           3614 ;	game.c 588
                           3615 ;	genPlus
                           3616 ;	AOP_STK for 
                           3617 ;	Can't optimise plus by inc, falling back to the normal way
   08A1 11 05 19           3618 	ld	de,#_map
   08A4 F8 02              3619 	lda	hl,2(sp)
   08A6 2A                 3620 	ld	a,(hl+)
   08A7 66                 3621 	ld	h,(hl)
   08A8 6F                 3622 	ld	l,a
   08A9 19                 3623 	add	hl,de
   08AA 4D                 3624 	ld	c,l
   08AB 44                 3625 	ld	b,h
                           3626 ;	genPointerGet
   08AC 0A                 3627 	ld	a,(bc)
   08AD 4F                 3628 	ld	c,a
                           3629 ;	genCast
                           3630 ; Removed redundent load
   08AE 06 00              3631 	ld	b,#0x00
                           3632 ;	genCmpEq
                           3633 ; genCmpEq: left 2, right 2, result 0
   08B0 79                 3634 	ld	a,c
   08B1 FE 0D              3635 	cp	a,#0x0D
   08B3 C2 BB 08           3636 	jp	nz,00110$
   08B6 78                 3637 	ld	a,b
   08B7 B7                 3638 	or	a,a
   08B8 CA CB 08           3639 	jp	z,00103$
   08BB                    3640 00110$:
                           3641 ;	genCmpEq
                           3642 ; genCmpEq: left 2, right 2, result 0
   08BB 79                 3643 	ld	a,c
   08BC FE 0E              3644 	cp	a,#0x0E
   08BE C2 C8 08           3645 	jp	nz,00111$
   08C1 78                 3646 	ld	a,b
   08C2 B7                 3647 	or	a,a
   08C3 C2 FB 08           3648 	jp	nz,00104$
   08C6 18 03              3649 	jr	00112$
   08C8                    3650 00111$:
   08C8 C3 FB 08           3651 	jp	00104$
   08CB                    3652 00112$:
                           3653 ;	genLabel
   08CB                    3654 00103$:
                           3655 ;	game.c 589
                           3656 ;	genIpush
                           3657 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3658 ;	AOP_STK for 
   08CB F8 04              3659 	lda	hl,4(sp)
   08CD 7E                 3660 	ld	a,(hl)
   08CE F5                 3661 	push	af
   08CF 33                 3662 	inc	sp
                           3663 ;	genIpush
                           3664 ;	AOP_STK for 
   08D0 2B                 3665 	dec	hl
   08D1 2B                 3666 	dec	hl
   08D2 2A                 3667 	ld	a,(hl+)
   08D3 66                 3668 	ld	h,(hl)
   08D4 6F                 3669 	ld	l,a
   08D5 E5                 3670 	push	hl
                           3671 ;	genCall
   08D6 CD 96 0A           3672 	call	__get_next_map_position
   08D9 42                 3673 	ld	b,d
   08DA 4B                 3674 	ld	c,e
   08DB E8 03              3675 	lda	sp,3(sp)
                           3676 ;	genAssign
                           3677 ;	(registers are the same)
                           3678 ;	game.c 590
                           3679 ;	genCmpEq
                           3680 ;	AOP_STK for 
                           3681 ; genCmpEq: left 2, right 2, result 0
   08DD F8 02              3682 	lda	hl,2(sp)
   08DF 7E                 3683 	ld	a,(hl)
   08E0 B9                 3684 	cp	c
   08E1 C2 EC 08           3685 	jp	nz,00113$
   08E4 23                 3686 	inc	hl
   08E5 7E                 3687 	ld	a,(hl)
   08E6 B8                 3688 	cp	b
   08E7 C2 F5 08           3689 	jp	nz,00102$
   08EA 18 03              3690 	jr	00114$
   08EC                    3691 00113$:
   08EC C3 F5 08           3692 	jp	00102$
   08EF                    3693 00114$:
                           3694 ;	game.c 591
                           3695 ;	genRet
   08EF 11 00 00           3696 	ld	de,#0x0000
   08F2 C3 FE 08           3697 	jp	00106$
                           3698 ;	genLabel
   08F5                    3699 00102$:
                           3700 ;	game.c 593
                           3701 ;	genRet
   08F5 11 01 00           3702 	ld	de,#0x0001
   08F8 C3 FE 08           3703 	jp	00106$
                           3704 ;	genLabel
   08FB                    3705 00104$:
                           3706 ;	game.c 597
                           3707 ;	genRet
   08FB 11 00 00           3708 	ld	de,#0x0000
                           3709 ;	genLabel
   08FE                    3710 00106$:
                           3711 ;	genEndFunction
                           3712 	
   08FE C9                 3713 	ret
   08FF                    3714 ___ice_should_slide_end:
                           3715 ;	game.c 600
                           3716 ;	genLabel
                           3717 ;	genFunction
                           3718 ;	---------------------------------
                           3719 ; Function dog1_power
                           3720 ; ---------------------------------
   08FF                    3721 ___dog1_power_start:
   08FF                    3722 _dog1_power:
   08FF E8 F8              3723 	lda	sp,-8(sp)
                           3724 ;	game.c 604
                           3725 ;	genAssign
                           3726 ;	AOP_HL for _player
   0901 21 B3 1A           3727 	ld	hl,#_player
   0904 4E                 3728 	ld	c,(hl)
   0905 23                 3729 	inc	hl
   0906 46                 3730 	ld	b,(hl)
                           3731 ;	genPlus
                           3732 ;	genPlusIncr
   0907 03                 3733 	inc	bc
   0908 03                 3734 	inc	bc
   0909 03                 3735 	inc	bc
   090A 03                 3736 	inc	bc
                           3737 ;	genPointerGet
   090B 0A                 3738 	ld	a,(bc)
   090C 4F                 3739 	ld	c,a
                           3740 ;	genAssign
                           3741 ;	AOP_HL for _player
                           3742 ;	AOP_STK for _dog1_power_sloc0_1_0
   090D 2B                 3743 	dec	hl
   090E 2A                 3744 	ld	a,(hl+)
   090F 5E                 3745 	ld	e,(hl)
   0910 F8 02              3746 	lda	hl,2(sp)
   0912 22                 3747 	ld	(hl+),a
   0913 73                 3748 	ld	(hl),e
                           3749 ;	genPlus
                           3750 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3751 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3752 ;	genPlusIncr
                           3753 ;	Can't optimise plus by inc, falling back to the normal way
   0914 2B                 3754 	dec	hl
   0915 5E                 3755 	ld	e,(hl)
   0916 23                 3756 	inc	hl
   0917 56                 3757 	ld	d,(hl)
   0918 21 0B 00           3758 	ld	hl,#0x000B
   091B 19                 3759 	add	hl,de
   091C 7D                 3760 	ld	a,l
   091D 54                 3761 	ld	d,h
   091E F8 00              3762 	lda	hl,0(sp)
                           3763 ;	genPointerGet
                           3764 ;	AOP_STK for _dog1_power_sloc1_1_0
   0920 22                 3765 	ld	(hl+),a
   0921 72                 3766 	ld	(hl),d
   0922 5F                 3767 	ld	e,a
   0923 1A                 3768 	ld	a,(de)
   0924 47                 3769 	ld	b,a
                           3770 ;	genIpush
                           3771 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0925 79                 3772 	ld	a,c
   0926 F5                 3773 	push	af
   0927 33                 3774 	inc	sp
                           3775 ;	genIpush
   0928 78                 3776 	ld	a,b
   0929 F5                 3777 	push	af
   092A 33                 3778 	inc	sp
                           3779 ;	genCall
   092B CD 00 00           3780 	call	_set_sprite_tile
   092E E8 02              3781 	lda	sp,2(sp)
                           3782 ;	game.c 606
                           3783 ;	genAssign
                           3784 ;	AOP_HL for _player
   0930 21 B3 1A           3785 	ld	hl,#_player
   0933 4E                 3786 	ld	c,(hl)
   0934 23                 3787 	inc	hl
   0935 46                 3788 	ld	b,(hl)
                           3789 ;	genPlus
                           3790 ;	genPlusIncr
   0936 03                 3791 	inc	bc
                           3792 ;	genPointerGet
   0937 0A                 3793 	ld	a,(bc)
   0938 4F                 3794 	ld	c,a
                           3795 ;	genAssign
                           3796 ;	AOP_HL for _player
                           3797 ;	AOP_STK for _dog1_power_sloc1_1_0
   0939 2B                 3798 	dec	hl
   093A 2A                 3799 	ld	a,(hl+)
   093B 5E                 3800 	ld	e,(hl)
   093C F8 00              3801 	lda	hl,0(sp)
   093E 22                 3802 	ld	(hl+),a
   093F 73                 3803 	ld	(hl),e
                           3804 ;	genPointerGet
                           3805 ;	AOP_STK for _dog1_power_sloc1_1_0
   0940 2B                 3806 	dec	hl
   0941 5E                 3807 	ld	e,(hl)
   0942 23                 3808 	inc	hl
   0943 56                 3809 	ld	d,(hl)
   0944 1A                 3810 	ld	a,(de)
   0945 47                 3811 	ld	b,a
                           3812 ;	genIpush
                           3813 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0946 79                 3814 	ld	a,c
   0947 F5                 3815 	push	af
   0948 33                 3816 	inc	sp
                           3817 ;	genIpush
   0949 78                 3818 	ld	a,b
   094A F5                 3819 	push	af
   094B 33                 3820 	inc	sp
                           3821 ;	genCall
   094C CD 6E 0C           3822 	call	_get_player_map_position
   094F 42                 3823 	ld	b,d
   0950 4B                 3824 	ld	c,e
   0951 E8 02              3825 	lda	sp,2(sp)
                           3826 ;	genAssign
                           3827 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0953 F8 06              3828 	lda	hl,6(sp)
   0955 71                 3829 	ld	(hl),c
   0956 23                 3830 	inc	hl
   0957 70                 3831 	ld	(hl),b
                           3832 ;	game.c 608
                           3833 ;	genAssign
                           3834 ;	AOP_HL for _player
   0958 21 B3 1A           3835 	ld	hl,#_player
   095B 4E                 3836 	ld	c,(hl)
   095C 23                 3837 	inc	hl
   095D 46                 3838 	ld	b,(hl)
                           3839 ;	genPlus
                           3840 ;	genPlusIncr
                           3841 ;	Can't optimise plus by inc, falling back to the normal way
   095E 79                 3842 	ld	a,c
   095F C6 08              3843 	add	a,#0x08
   0961 4F                 3844 	ld	c,a
   0962 78                 3845 	ld	a,b
   0963 CE 00              3846 	adc	a,#0x00
   0965 47                 3847 	ld	b,a
                           3848 ;	genPointerGet
   0966 0A                 3849 	ld	a,(bc)
                           3850 ;	genIpush
                           3851 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0967 4F                 3852 	ld	c,a
   0968 F5                 3853 	push	af
   0969 33                 3854 	inc	sp
                           3855 ;	genIpush
                           3856 ;	AOP_STK for _dog1_power_map_position_block_1_1
   096A F8 07              3857 	lda	hl,7(sp)
   096C 2A                 3858 	ld	a,(hl+)
   096D 66                 3859 	ld	h,(hl)
   096E 6F                 3860 	ld	l,a
   096F E5                 3861 	push	hl
                           3862 ;	genCall
   0970 CD 96 0A           3863 	call	__get_next_map_position
   0973 42                 3864 	ld	b,d
   0974 4B                 3865 	ld	c,e
   0975 E8 03              3866 	lda	sp,3(sp)
                           3867 ;	genAssign
                           3868 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0977 F8 06              3869 	lda	hl,6(sp)
   0979 71                 3870 	ld	(hl),c
   097A 23                 3871 	inc	hl
   097B 70                 3872 	ld	(hl),b
                           3873 ;	game.c 609
                           3874 ;	genAssign
                           3875 ;	AOP_HL for _player
   097C 21 B3 1A           3876 	ld	hl,#_player
   097F 4E                 3877 	ld	c,(hl)
   0980 23                 3878 	inc	hl
   0981 46                 3879 	ld	b,(hl)
                           3880 ;	genPlus
                           3881 ;	genPlusIncr
                           3882 ;	Can't optimise plus by inc, falling back to the normal way
   0982 79                 3883 	ld	a,c
   0983 C6 08              3884 	add	a,#0x08
   0985 4F                 3885 	ld	c,a
   0986 78                 3886 	ld	a,b
   0987 CE 00              3887 	adc	a,#0x00
   0989 47                 3888 	ld	b,a
                           3889 ;	genPointerGet
   098A 0A                 3890 	ld	a,(bc)
                           3891 ;	genIpush
                           3892 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   098B 4F                 3893 	ld	c,a
   098C F5                 3894 	push	af
   098D 33                 3895 	inc	sp
                           3896 ;	genIpush
                           3897 ;	AOP_STK for _dog1_power_map_position_block_1_1
   098E F8 07              3898 	lda	hl,7(sp)
   0990 2A                 3899 	ld	a,(hl+)
   0991 66                 3900 	ld	h,(hl)
   0992 6F                 3901 	ld	l,a
   0993 E5                 3902 	push	hl
                           3903 ;	genCall
   0994 CD 96 0A           3904 	call	__get_next_map_position
   0997 42                 3905 	ld	b,d
   0998 4B                 3906 	ld	c,e
   0999 E8 03              3907 	lda	sp,3(sp)
                           3908 ;	genAssign
                           3909 ;	AOP_STK for _dog1_power_map_position_next_1_1
   099B F8 04              3910 	lda	hl,4(sp)
   099D 71                 3911 	ld	(hl),c
   099E 23                 3912 	inc	hl
   099F 70                 3913 	ld	(hl),b
                           3914 ;	game.c 612
                           3915 ;	genPlus
                           3916 ;	AOP_STK for _dog1_power_map_position_block_1_1
                           3917 ;	Can't optimise plus by inc, falling back to the normal way
   09A0 11 05 19           3918 	ld	de,#_map
   09A3 23                 3919 	inc	hl
   09A4 2A                 3920 	ld	a,(hl+)
   09A5 66                 3921 	ld	h,(hl)
   09A6 6F                 3922 	ld	l,a
   09A7 19                 3923 	add	hl,de
   09A8 4D                 3924 	ld	c,l
   09A9 44                 3925 	ld	b,h
                           3926 ;	genPointerGet
                           3927 ;	AOP_STK for _dog1_power_sloc1_1_0
   09AA 0A                 3928 	ld	a,(bc)
   09AB F8 00              3929 	lda	hl,0(sp)
   09AD 77                 3930 	ld	(hl),a
                           3931 ;	genCast
                           3932 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3933 ;	AOP_STK for _dog1_power_sloc0_1_0
   09AE 2A                 3934 	ld	a,(hl+)
   09AF 23                 3935 	inc	hl
   09B0 22                 3936 	ld	(hl+),a
   09B1 36 00              3937 	ld	(hl),#0x00
                           3938 ;	genCmpEq
                           3939 ;	AOP_STK for _dog1_power_sloc0_1_0
                           3940 ; genCmpEq: left 2, right 2, result 0
   09B3 2B                 3941 	dec	hl
   09B4 7E                 3942 	ld	a,(hl)
   09B5 FE 2D              3943 	cp	a,#0x2D
   09B7 C2 C2 09           3944 	jp	nz,00117$
   09BA 23                 3945 	inc	hl
   09BB 7E                 3946 	ld	a,(hl)
   09BC B7                 3947 	or	a,a
   09BD C2 66 0A           3948 	jp	nz,00109$
   09C0 18 03              3949 	jr	00118$
   09C2                    3950 00117$:
   09C2 C3 66 0A           3951 	jp	00109$
   09C5                    3952 00118$:
                           3953 ;	game.c 617
                           3954 ;	genIpush
                           3955 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09C5 C5                 3956 	push	bc
                           3957 ;	AOP_STK for _dog1_power_map_position_next_1_1
   09C6 F8 06              3958 	lda	hl,6(sp)
   09C8 2A                 3959 	ld	a,(hl+)
   09C9 66                 3960 	ld	h,(hl)
   09CA 6F                 3961 	ld	l,a
   09CB E5                 3962 	push	hl
                           3963 ;	genCall
   09CC CD 0E 0E           3964 	call	_can_move_to_map_pos
                           3965 ;	AOP_STK for _dog1_power_sloc1_1_0
   09CF F8 05              3966 	lda	hl,5(sp)
   09D1 72                 3967 	ld	(hl),d
   09D2 2B                 3968 	dec	hl
   09D3 73                 3969 	ld	(hl),e
   09D4 E8 02              3970 	lda	sp,2(sp)
   09D6 C1                 3971 	pop	bc
                           3972 ;	genCmpEq
                           3973 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3974 ; genCmpEq: left 2, right 2, result 0
   09D7 F8 00              3975 	lda	hl,0(sp)
   09D9 2A                 3976 	ld	a,(hl+)
   09DA B6                 3977 	or	a,(hl)
   09DB CA 66 0A           3978 	jp	z,00109$
   09DE                    3979 00119$:
                           3980 ;	game.c 623
                           3981 ;	genPlus
                           3982 ;	AOP_STK for _dog1_power_map_position_next_1_1
                           3983 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3984 ;	Can't optimise plus by inc, falling back to the normal way
   09DE 11 05 19           3985 	ld	de,#_map
   09E1 F8 04              3986 	lda	hl,4(sp)
   09E3 2A                 3987 	ld	a,(hl+)
   09E4 66                 3988 	ld	h,(hl)
   09E5 6F                 3989 	ld	l,a
   09E6 19                 3990 	add	hl,de
   09E7 7D                 3991 	ld	a,l
   09E8 54                 3992 	ld	d,h
   09E9 F8 00              3993 	lda	hl,0(sp)
                           3994 ;	genPointerGet
                           3995 ;	AOP_STK for _dog1_power_sloc1_1_0
                           3996 ;	AOP_STK for _dog1_power_sloc0_1_0
   09EB 22                 3997 	ld	(hl+),a
   09EC 72                 3998 	ld	(hl),d
   09ED 5F                 3999 	ld	e,a
   09EE 1A                 4000 	ld	a,(de)
   09EF 23                 4001 	inc	hl
                           4002 ;	genCast
                           4003 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4004 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4005 ; Removed redundent load
   09F0 32                 4006 	ld      (hl-),a
   09F1 2B                 4007 	dec	hl
   09F2 22                 4008 	ld	(hl+),a
   09F3 36 00              4009 	ld	(hl),#0x00
                           4010 ;	genCmpLt
                           4011 ;	AOP_STK for _dog1_power_sloc1_1_0
   09F5 2B                 4012 	dec	hl
   09F6 7E                 4013 	ld	a,(hl)
   09F7 D6 0F              4014 	sub	a,#0x0F
   09F9 23                 4015 	inc	hl
   09FA 7E                 4016 	ld	a,(hl)
   09FB DE 00              4017 	sbc	a,#0x00
   09FD DA 2E 0A           4018 	jp	c,00104$
                           4019 ;	game.c 624
                           4020 ;	genCmpEq
                           4021 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4022 ; genCmpEq: left 2, right 2, result 0
   0A00 2B                 4023 	dec	hl
   0A01 7E                 4024 	ld	a,(hl)
   0A02 FE 2F              4025 	cp	a,#0x2F
   0A04 C2 0D 0A           4026 	jp	nz,00120$
   0A07 23                 4027 	inc	hl
   0A08 7E                 4028 	ld	a,(hl)
   0A09 B7                 4029 	or	a,a
   0A0A CA 2E 0A           4030 	jp	z,00104$
   0A0D                    4031 00120$:
                           4032 ;	game.c 625
                           4033 ;	genCmpEq
                           4034 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4035 ; genCmpEq: left 2, right 2, result 0
   0A0D F8 00              4036 	lda	hl,0(sp)
   0A0F 7E                 4037 	ld	a,(hl)
   0A10 FE 30              4038 	cp	a,#0x30
   0A12 C2 1B 0A           4039 	jp	nz,00121$
   0A15 23                 4040 	inc	hl
   0A16 7E                 4041 	ld	a,(hl)
   0A17 B7                 4042 	or	a,a
   0A18 CA 2E 0A           4043 	jp	z,00104$
   0A1B                    4044 00121$:
                           4045 ;	game.c 626
                           4046 ;	genCmpEq
                           4047 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4048 ; genCmpEq: left 2, right 2, result 0
   0A1B F8 00              4049 	lda	hl,0(sp)
   0A1D 7E                 4050 	ld	a,(hl)
   0A1E FE 2A              4051 	cp	a,#0x2A
   0A20 C2 2B 0A           4052 	jp	nz,00122$
   0A23 23                 4053 	inc	hl
   0A24 7E                 4054 	ld	a,(hl)
   0A25 B7                 4055 	or	a,a
   0A26 C2 66 0A           4056 	jp	nz,00109$
   0A29 18 03              4057 	jr	00123$
   0A2B                    4058 00122$:
   0A2B C3 66 0A           4059 	jp	00109$
   0A2E                    4060 00123$:
                           4061 ;	genLabel
   0A2E                    4062 00104$:
                           4063 ;	game.c 627
                           4064 ;	genAssign (pointer)
   0A2E 3E 2F              4065 	ld	a,#0x2F
   0A30 02                 4066 	ld	(bc),a
                           4067 ;	game.c 628
                           4068 ;	genIpush
                           4069 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A31 21 05 19           4070 	ld	hl,#_map
   0A34 E5                 4071 	push	hl
                           4072 ;	genIpush
   0A35 21 14 12           4073 	ld	hl,#0x1214
   0A38 E5                 4074 	push	hl
                           4075 ;	genIpush
   0A39 21 00 00           4076 	ld	hl,#0x0000
   0A3C E5                 4077 	push	hl
                           4078 ;	genCall
   0A3D CD 00 00           4079 	call	_set_bkg_tiles
   0A40 E8 06              4080 	lda	sp,6(sp)
                           4081 ;	game.c 629
                           4082 ;	genAssign
                           4083 ;	AOP_HL for _player
   0A42 21 B3 1A           4084 	ld	hl,#_player
   0A45 4E                 4085 	ld	c,(hl)
   0A46 23                 4086 	inc	hl
   0A47 46                 4087 	ld	b,(hl)
                           4088 ;	genPlus
                           4089 ;	genPlusIncr
                           4090 ;	Can't optimise plus by inc, falling back to the normal way
   0A48 79                 4091 	ld	a,c
   0A49 C6 08              4092 	add	a,#0x08
   0A4B 4F                 4093 	ld	c,a
   0A4C 78                 4094 	ld	a,b
   0A4D CE 00              4095 	adc	a,#0x00
   0A4F 47                 4096 	ld	b,a
                           4097 ;	genPointerGet
   0A50 0A                 4098 	ld	a,(bc)
   0A51 4F                 4099 	ld	c,a
                           4100 ;	genIpush
                           4101 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4102 ;	AOP_STK for _dog1_power_map_position_next_1_1
   0A52 F8 04              4103 	lda	hl,4(sp)
   0A54 2A                 4104 	ld	a,(hl+)
   0A55 66                 4105 	ld	h,(hl)
   0A56 6F                 4106 	ld	l,a
   0A57 E5                 4107 	push	hl
                           4108 ;	genIpush
   0A58 79                 4109 	ld	a,c
   0A59 F5                 4110 	push	af
   0A5A 33                 4111 	inc	sp
                           4112 ;	genIpush
                           4113 ;	AOP_STK for _dog1_power_map_position_block_1_1
   0A5B F8 09              4114 	lda	hl,9(sp)
   0A5D 2A                 4115 	ld	a,(hl+)
   0A5E 66                 4116 	ld	h,(hl)
   0A5F 6F                 4117 	ld	l,a
   0A60 E5                 4118 	push	hl
                           4119 ;	genCall
   0A61 CD 4A 0B           4120 	call	_dog1_power_apply
   0A64 E8 05              4121 	lda	sp,5(sp)
                           4122 ;	game.c 640
                           4123 ;	genLabel
   0A66                    4124 00109$:
                           4125 ;	game.c 645
                           4126 ;	genAssign
                           4127 ;	AOP_HL for _player
   0A66 21 B3 1A           4128 	ld	hl,#_player
   0A69 4E                 4129 	ld	c,(hl)
   0A6A 23                 4130 	inc	hl
   0A6B 46                 4131 	ld	b,(hl)
                           4132 ;	genPlus
                           4133 ;	genPlusIncr
   0A6C 03                 4134 	inc	bc
   0A6D 03                 4135 	inc	bc
                           4136 ;	genPointerGet
   0A6E 0A                 4137 	ld	a,(bc)
   0A6F 4F                 4138 	ld	c,a
                           4139 ;	genAssign
                           4140 ;	AOP_HL for _player
                           4141 ;	AOP_STK for _dog1_power_sloc1_1_0
   0A70 2B                 4142 	dec	hl
   0A71 2A                 4143 	ld	a,(hl+)
   0A72 5E                 4144 	ld	e,(hl)
   0A73 F8 00              4145 	lda	hl,0(sp)
   0A75 22                 4146 	ld	(hl+),a
   0A76 73                 4147 	ld	(hl),e
                           4148 ;	genPlus
                           4149 ;	AOP_STK for _dog1_power_sloc1_1_0
                           4150 ;	AOP_STK for _dog1_power_sloc0_1_0
                           4151 ;	genPlusIncr
                           4152 ;	Can't optimise plus by inc, falling back to the normal way
   0A77 2B                 4153 	dec	hl
   0A78 5E                 4154 	ld	e,(hl)
   0A79 23                 4155 	inc	hl
   0A7A 56                 4156 	ld	d,(hl)
   0A7B 21 0B 00           4157 	ld	hl,#0x000B
   0A7E 19                 4158 	add	hl,de
   0A7F 7D                 4159 	ld	a,l
   0A80 54                 4160 	ld	d,h
   0A81 F8 02              4161 	lda	hl,2(sp)
                           4162 ;	genPointerGet
                           4163 ;	AOP_STK for _dog1_power_sloc0_1_0
   0A83 22                 4164 	ld	(hl+),a
   0A84 72                 4165 	ld	(hl),d
   0A85 5F                 4166 	ld	e,a
   0A86 1A                 4167 	ld	a,(de)
   0A87 47                 4168 	ld	b,a
                           4169 ;	genIpush
                           4170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A88 79                 4171 	ld	a,c
   0A89 F5                 4172 	push	af
   0A8A 33                 4173 	inc	sp
                           4174 ;	genIpush
   0A8B 78                 4175 	ld	a,b
   0A8C F5                 4176 	push	af
   0A8D 33                 4177 	inc	sp
                           4178 ;	genCall
   0A8E CD 00 00           4179 	call	_set_sprite_tile
   0A91 E8 02              4180 	lda	sp,2(sp)
                           4181 ;	genLabel
   0A93                    4182 00110$:
                           4183 ;	genEndFunction
   0A93 E8 08              4184 	lda	sp,8(sp)
   0A95 C9                 4185 	ret
   0A96                    4186 ___dog1_power_end:
                           4187 ;	game.c 648
                           4188 ;	genLabel
                           4189 ;	genFunction
                           4190 ;	---------------------------------
                           4191 ; Function _get_next_map_position
                           4192 ; ---------------------------------
   0A96                    4193 ____get_next_map_position_start:
   0A96                    4194 __get_next_map_position:
   0A96 E8 FE              4195 	lda	sp,-2(sp)
                           4196 ;	game.c 649
                           4197 ;	genCmpLt
                           4198 ;	AOP_STK for 
   0A98 F8 06              4199 	lda	hl,6(sp)
   0A9A 7E                 4200 	ld	a,(hl)
   0A9B FE 01              4201 	cp	#0x01
   0A9D DA 42 0B           4202 	jp	c,00113$
                           4203 ;	genCmpGt
                           4204 ;	AOP_STK for 
   0AA0 3E 04              4205 	ld	a,#0x04
   0AA2 96                 4206 	sub	a,(hl)
   0AA3 DA 42 0B           4207 	jp	c,00113$
                           4208 ;	genMinus
                           4209 ;	AOP_STK for 
   0AA6 7E                 4210 	ld	a,(hl)
   0AA7 C6 FF              4211 	add	a,#0xFF
   0AA9 4F                 4212 	ld	c,a
                           4213 ;	genJumpTab
   0AAA 59                 4214 	ld	e,c
   0AAB 16 00              4215 	ld	d,#0x00
   0AAD 21 B4 0A           4216 	ld	hl,#00122$
   0AB0 19                 4217 	add	hl,de
   0AB1 19                 4218 	add	hl,de
   0AB2 19                 4219 	add	hl,de
   0AB3 E9                 4220 	jp	(hl)
   0AB4                    4221 00122$:
   0AB4 C3 C0 0A           4222 	jp	00103$
   0AB7 C3 DF 0A           4223 	jp	00106$
   0ABA C3 05 0B           4224 	jp	00109$
   0ABD C3 22 0B           4225 	jp	00112$
                           4226 ;	game.c 654
                           4227 ;	genLabel
   0AC0                    4228 00103$:
                           4229 ;	game.c 651
                           4230 ;	genCmpGt
                           4231 ;	AOP_STK for 
   0AC0 3E 14              4232 	ld	a,#0x14
   0AC2 F8 04              4233 	lda	hl,4(sp)
   0AC4 96                 4234 	sub	a,(hl)
   0AC5 3E 00              4235 	ld	a,#0x00
   0AC7 23                 4236 	inc	hl
   0AC8 9E                 4237 	sbc	a,(hl)
   0AC9 D2 42 0B           4238 	jp	nc,00113$
                           4239 ;	game.c 652
                           4240 ;	genMinus
                           4241 ;	AOP_STK for 
   0ACC 2B                 4242 	dec	hl
   0ACD 5E                 4243 	ld	e,(hl)
   0ACE 23                 4244 	inc	hl
   0ACF 56                 4245 	ld	d,(hl)
   0AD0 21 14 00           4246 	ld	hl,#0x0014
   0AD3 7B                 4247 	ld	a,e
   0AD4 95                 4248 	sub	a,l
   0AD5 5F                 4249 	ld	e,a
   0AD6 7A                 4250 	ld	a,d
   0AD7 9C                 4251 	sbc	a,h
   0AD8 F8 05              4252 	lda	hl,5(sp)
   0ADA 32                 4253 	ld      (hl-),a
   0ADB 73                 4254 	ld	(hl),e
                           4255 ;	game.c 654
                           4256 ;	genGoto
   0ADC C3 42 0B           4257 	jp	00113$
                           4258 ;	game.c 659
                           4259 ;	genLabel
   0ADF                    4260 00106$:
                           4261 ;	game.c 656
                           4262 ;	genPlus
                           4263 ;	AOP_STK for 
                           4264 ;	genPlusIncr
   0ADF F8 04              4265 	lda	hl,4(sp)
   0AE1 4E                 4266 	ld	c,(hl)
   0AE2 23                 4267 	inc	hl
   0AE3 46                 4268 	ld	b,(hl)
   0AE4 03                 4269 	inc	bc
                           4270 ;	genIpush
                           4271 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AE5 C5                 4272 	push	bc
   0AE6 21 14 00           4273 	ld	hl,#0x0014
   0AE9 E5                 4274 	push	hl
                           4275 ;	genIpush
   0AEA C5                 4276 	push	bc
                           4277 ;	genCall
   0AEB CD 00 00           4278 	call	__moduint_rrx_s
                           4279 ;	AOP_STK for __get_next_map_position_sloc0_1_0
   0AEE F8 07              4280 	lda	hl,7(sp)
   0AF0 72                 4281 	ld	(hl),d
   0AF1 2B                 4282 	dec	hl
   0AF2 73                 4283 	ld	(hl),e
   0AF3 E8 04              4284 	lda	sp,4(sp)
   0AF5 C1                 4285 	pop	bc
                           4286 ;	genCmpEq
                           4287 ;	AOP_STK for __get_next_map_position_sloc0_1_0
                           4288 ; genCmpEq: left 2, right 2, result 0
   0AF6 F8 00              4289 	lda	hl,0(sp)
   0AF8 2A                 4290 	ld	a,(hl+)
   0AF9 B6                 4291 	or	a,(hl)
   0AFA CA 42 0B           4292 	jp	z,00113$
   0AFD                    4293 00123$:
                           4294 ;	game.c 657
                           4295 ;	genAssign
                           4296 ;	(registers are the same)
                           4297 ;	genAssign
                           4298 ;	AOP_STK for 
   0AFD F8 04              4299 	lda	hl,4(sp)
   0AFF 71                 4300 	ld	(hl),c
   0B00 23                 4301 	inc	hl
   0B01 70                 4302 	ld	(hl),b
                           4303 ;	game.c 659
                           4304 ;	genGoto
   0B02 C3 42 0B           4305 	jp	00113$
                           4306 ;	game.c 664
                           4307 ;	genLabel
   0B05                    4308 00109$:
                           4309 ;	game.c 661
                           4310 ;	genCmpLt
                           4311 ;	AOP_STK for 
   0B05 F8 04              4312 	lda	hl,4(sp)
   0B07 7E                 4313 	ld	a,(hl)
   0B08 D6 54              4314 	sub	a,#0x54
   0B0A 23                 4315 	inc	hl
   0B0B 7E                 4316 	ld	a,(hl)
   0B0C DE 01              4317 	sbc	a,#0x01
   0B0E D2 42 0B           4318 	jp	nc,00113$
                           4319 ;	game.c 662
                           4320 ;	genPlus
                           4321 ;	AOP_STK for 
                           4322 ;	genPlusIncr
                           4323 ;	Can't optimise plus by inc, falling back to the normal way
   0B11 2B                 4324 	dec	hl
   0B12 5E                 4325 	ld	e,(hl)
   0B13 23                 4326 	inc	hl
   0B14 56                 4327 	ld	d,(hl)
   0B15 21 14 00           4328 	ld	hl,#0x0014
   0B18 19                 4329 	add	hl,de
   0B19 7D                 4330 	ld	a,l
   0B1A 54                 4331 	ld	d,h
   0B1B F8 04              4332 	lda	hl,4(sp)
   0B1D 22                 4333 	ld	(hl+),a
   0B1E 72                 4334 	ld	(hl),d
                           4335 ;	game.c 664
                           4336 ;	genGoto
   0B1F C3 42 0B           4337 	jp	00113$
                           4338 ;	game.c 670
                           4339 ;	genLabel
   0B22                    4340 00112$:
                           4341 ;	game.c 666
                           4342 ;	genIpush
                           4343 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B22 21 14 00           4344 	ld	hl,#0x0014
   0B25 E5                 4345 	push	hl
                           4346 ;	genIpush
                           4347 ;	AOP_STK for 
   0B26 F8 06              4348 	lda	hl,6(sp)
   0B28 2A                 4349 	ld	a,(hl+)
   0B29 66                 4350 	ld	h,(hl)
   0B2A 6F                 4351 	ld	l,a
   0B2B E5                 4352 	push	hl
                           4353 ;	genCall
   0B2C CD 00 00           4354 	call	__moduint_rrx_s
   0B2F 42                 4355 	ld	b,d
   0B30 4B                 4356 	ld	c,e
   0B31 E8 04              4357 	lda	sp,4(sp)
                           4358 ;	genCmpEq
                           4359 ; genCmpEq: left 2, right 2, result 0
   0B33 79                 4360 	ld	a,c
   0B34 B0                 4361 	or	a,b
   0B35 CA 42 0B           4362 	jp	z,00113$
   0B38                    4363 00124$:
                           4364 ;	game.c 667
                           4365 ;	genMinus
                           4366 ;	AOP_STK for 
   0B38 F8 04              4367 	lda	hl,4(sp)
   0B3A 5E                 4368 	ld	e,(hl)
   0B3B 23                 4369 	inc	hl
   0B3C 56                 4370 	ld	d,(hl)
   0B3D 1B                 4371 	dec	de
   0B3E 2B                 4372 	dec	hl
   0B3F 73                 4373 	ld	(hl),e
   0B40 23                 4374 	inc	hl
   0B41 72                 4375 	ld	(hl),d
                           4376 ;	game.c 671
                           4377 ;	genLabel
   0B42                    4378 00113$:
                           4379 ;	game.c 672
                           4380 ;	genRet
                           4381 ;	AOP_STK for 
   0B42 F8 04              4382 	lda	hl,4(sp)
   0B44 5E                 4383 	ld	e,(hl)
   0B45 23                 4384 	inc	hl
   0B46 56                 4385 	ld	d,(hl)
                           4386 ;	genLabel
   0B47                    4387 00114$:
                           4388 ;	genEndFunction
   0B47 E8 02              4389 	lda	sp,2(sp)
   0B49 C9                 4390 	ret
   0B4A                    4391 ____get_next_map_position_end:
                           4392 ;	game.c 675
                           4393 ;	genLabel
                           4394 ;	genFunction
                           4395 ;	---------------------------------
                           4396 ; Function dog1_power_apply
                           4397 ; ---------------------------------
   0B4A                    4398 ___dog1_power_apply_start:
   0B4A                    4399 _dog1_power_apply:
   0B4A E8 FD              4400 	lda	sp,-3(sp)
                           4401 ;	game.c 681
                           4402 ;	genIpush
                           4403 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B4C 21 14 00           4404 	ld	hl,#0x0014
   0B4F E5                 4405 	push	hl
                           4406 ;	genIpush
                           4407 ;	AOP_STK for 
   0B50 F8 07              4408 	lda	hl,7(sp)
   0B52 2A                 4409 	ld	a,(hl+)
   0B53 66                 4410 	ld	h,(hl)
   0B54 6F                 4411 	ld	l,a
   0B55 E5                 4412 	push	hl
                           4413 ;	genCall
   0B56 CD 00 00           4414 	call	__divuint_rrx_s
   0B59 42                 4415 	ld	b,d
   0B5A 4B                 4416 	ld	c,e
   0B5B E8 04              4417 	lda	sp,4(sp)
                           4418 ;	genLeftShift
   0B5D 3E 04              4419 	ld	a,#0x03+1
   0B5F 18 04              4420 	jr	00122$
   0B61                    4421 00121$:
   0B61 CB 21              4422 	sla	c
   0B63 CB 10              4423 	rl	b
   0B65                    4424 00122$:
   0B65 3D                 4425 	dec	a
   0B66 20 F9              4426 	jr	nz,00121$
                           4427 ;	genPlus
                           4428 ;	genPlusIncr
                           4429 ;	Can't optimise plus by inc, falling back to the normal way
   0B68 79                 4430 	ld	a,c
   0B69 C6 10              4431 	add	a,#0x10
   0B6B 4F                 4432 	ld	c,a
   0B6C 78                 4433 	ld	a,b
   0B6D CE 00              4434 	adc	a,#0x00
   0B6F 47                 4435 	ld	b,a
                           4436 ;	genCast
                           4437 ;	AOP_STK for _dog1_power_apply_y_1_1
   0B70 F8 02              4438 	lda	hl,2(sp)
   0B72 71                 4439 	ld	(hl),c
                           4440 ;	game.c 682
                           4441 ;	genIpush
                           4442 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B73 21 14 00           4443 	ld	hl,#0x0014
   0B76 E5                 4444 	push	hl
                           4445 ;	genIpush
                           4446 ;	AOP_STK for 
   0B77 F8 07              4447 	lda	hl,7(sp)
   0B79 2A                 4448 	ld	a,(hl+)
   0B7A 66                 4449 	ld	h,(hl)
   0B7B 6F                 4450 	ld	l,a
   0B7C E5                 4451 	push	hl
                           4452 ;	genCall
   0B7D CD 00 00           4453 	call	__moduint_rrx_s
   0B80 4A                 4454 	ld	c,d
   0B81 43                 4455 	ld	b,e
   0B82 E8 04              4456 	lda	sp,4(sp)
                           4457 ;	genLeftShift
   0B84 3E 04              4458 	ld	a,#0x03+1
   0B86 18 04              4459 	jr	00124$
   0B88                    4460 00123$:
   0B88 CB 20              4461 	sla	b
   0B8A CB 11              4462 	rl	c
   0B8C                    4463 00124$:
   0B8C 3D                 4464 	dec	a
   0B8D 20 F9              4465 	jr	nz,00123$
                           4466 ;	genPlus
                           4467 ;	genPlusIncr
                           4468 ;	Can't optimise plus by inc, falling back to the normal way
   0B8F 78                 4469 	ld	a,b
   0B90 C6 08              4470 	add	a,#0x08
   0B92 47                 4471 	ld	b,a
   0B93 79                 4472 	ld	a,c
   0B94 CE 00              4473 	adc	a,#0x00
   0B96 4F                 4474 	ld	c,a
                           4475 ;	genCast
   0B97 48                 4476 	ld	c,b
                           4477 ;	game.c 683
                           4478 ;	genIpush
                           4479 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B98 C5                 4480 	push	bc
   0B99 21 05 0F           4481 	ld	hl,#0x0F05
   0B9C E5                 4482 	push	hl
                           4483 ;	genCall
   0B9D CD 00 00           4484 	call	_set_sprite_tile
   0BA0 E8 02              4485 	lda	sp,2(sp)
   0BA2 E1                 4486 	pop	hl
   0BA3 4D                 4487 	ld	c,l
                           4488 ;	game.c 686
                           4489 ;	genAssign
                           4490 ;	AOP_STK for _dog1_power_apply_i_1_1
   0BA4 F8 01              4491 	lda	hl,1(sp)
   0BA6 36 04              4492 	ld	(hl),#0x04
                           4493 ;	game.c 687
                           4494 ;	genIpush
                           4495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BA8 C5                 4496 	push	bc
                           4497 ;	AOP_STK for _dog1_power_apply_y_1_1
   0BA9 23                 4498 	inc	hl
   0BAA 7E                 4499 	ld	a,(hl)
   0BAB F5                 4500 	push	af
   0BAC 33                 4501 	inc	sp
                           4502 ;	genIpush
   0BAD 79                 4503 	ld	a,c
   0BAE F5                 4504 	push	af
   0BAF 33                 4505 	inc	sp
                           4506 ;	genIpush
   0BB0 3E 05              4507 	ld	a,#0x05
   0BB2 F5                 4508 	push	af
   0BB3 33                 4509 	inc	sp
                           4510 ;	genCall
   0BB4 CD 00 00           4511 	call	_move_sprite
   0BB7 E8 03              4512 	lda	sp,3(sp)
   0BB9 E1                 4513 	pop	hl
   0BBA 4D                 4514 	ld	c,l
                           4515 ;	game.c 689
                           4516 ;	genLabel
   0BBB                    4517 00106$:
                           4518 ;	genCmpEq
                           4519 ;	AOP_STK for _dog1_power_apply_i_1_1
                           4520 ; genCmpEq: left 1, right 1, result 0
   0BBB F8 01              4521 	lda	hl,1(sp)
   0BBD 7E                 4522 	ld	a,(hl)
   0BBE B7                 4523 	or	a,a
   0BBF CA 25 0C           4524 	jp	z,00108$
   0BC2                    4525 00125$:
                           4526 ;	game.c 690
                           4527 ;	genCmpLt
                           4528 ;	AOP_STK for 
   0BC2 F8 07              4529 	lda	hl,7(sp)
   0BC4 7E                 4530 	ld	a,(hl)
   0BC5 FE 01              4531 	cp	#0x01
   0BC7 DA FF 0B           4532 	jp	c,00105$
                           4533 ;	genCmpGt
                           4534 ;	AOP_STK for 
   0BCA 3E 04              4535 	ld	a,#0x04
   0BCC 96                 4536 	sub	a,(hl)
   0BCD DA FF 0B           4537 	jp	c,00105$
                           4538 ;	genMinus
                           4539 ;	AOP_STK for 
   0BD0 7E                 4540 	ld	a,(hl)
   0BD1 C6 FF              4541 	add	a,#0xFF
   0BD3 47                 4542 	ld	b,a
                           4543 ;	genJumpTab
   0BD4 58                 4544 	ld	e,b
   0BD5 16 00              4545 	ld	d,#0x00
   0BD7 21 DE 0B           4546 	ld	hl,#00126$
   0BDA 19                 4547 	add	hl,de
   0BDB 19                 4548 	add	hl,de
   0BDC 19                 4549 	add	hl,de
   0BDD E9                 4550 	jp	(hl)
   0BDE                    4551 00126$:
   0BDE C3 EA 0B           4552 	jp	00101$
   0BE1 C3 F1 0B           4553 	jp	00102$
   0BE4 C3 F6 0B           4554 	jp	00103$
   0BE7 C3 FD 0B           4555 	jp	00104$
                           4556 ;	game.c 692
                           4557 ;	genLabel
   0BEA                    4558 00101$:
                           4559 ;	genMinus
                           4560 ;	AOP_STK for _dog1_power_apply_y_1_1
   0BEA F8 02              4561 	lda	hl,2(sp)
   0BEC 35                 4562 	dec	(hl)
   0BED 35                 4563 	dec	(hl)
                           4564 ;	game.c 693
                           4565 ;	genGoto
   0BEE C3 FF 0B           4566 	jp	00105$
                           4567 ;	game.c 695
                           4568 ;	genLabel
   0BF1                    4569 00102$:
                           4570 ;	genPlus
                           4571 ;	genPlusIncr
                           4572 ; Removed redundent load
   0BF1 0C                 4573 	inc	c
   0BF2 0C                 4574 	inc	c
                           4575 ;	game.c 696
                           4576 ;	genGoto
   0BF3 C3 FF 0B           4577 	jp	00105$
                           4578 ;	game.c 698
                           4579 ;	genLabel
   0BF6                    4580 00103$:
                           4581 ;	genPlus
                           4582 ;	AOP_STK for _dog1_power_apply_y_1_1
                           4583 ;	genPlusIncr
   0BF6 F8 02              4584 	lda	hl,2(sp)
   0BF8 34                 4585 	inc	(hl)
   0BF9 34                 4586 	inc	(hl)
                           4587 ;	game.c 699
                           4588 ;	genGoto
   0BFA C3 FF 0B           4589 	jp	00105$
                           4590 ;	game.c 701
                           4591 ;	genLabel
   0BFD                    4592 00104$:
                           4593 ;	genMinus
   0BFD 0D                 4594 	dec	c
   0BFE 0D                 4595 	dec	c
                           4596 ;	game.c 703
                           4597 ;	genLabel
   0BFF                    4598 00105$:
                           4599 ;	game.c 704
                           4600 ;	genIpush
                           4601 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BFF C5                 4602 	push	bc
   0C00 3E 02              4603 	ld	a,#0x02
   0C02 F5                 4604 	push	af
   0C03 33                 4605 	inc	sp
                           4606 ;	genCall
   0C04 CD 00 00           4607 	call	_performantDelay
   0C07 E8 01              4608 	lda	sp,1(sp)
   0C09 E1                 4609 	pop	hl
   0C0A 4D                 4610 	ld	c,l
                           4611 ;	game.c 705
                           4612 ;	genIpush
                           4613 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C0B C5                 4614 	push	bc
                           4615 ;	AOP_STK for _dog1_power_apply_y_1_1
   0C0C F8 04              4616 	lda	hl,4(sp)
   0C0E 7E                 4617 	ld	a,(hl)
   0C0F F5                 4618 	push	af
   0C10 33                 4619 	inc	sp
                           4620 ;	genIpush
   0C11 79                 4621 	ld	a,c
   0C12 F5                 4622 	push	af
   0C13 33                 4623 	inc	sp
                           4624 ;	genIpush
   0C14 3E 05              4625 	ld	a,#0x05
   0C16 F5                 4626 	push	af
   0C17 33                 4627 	inc	sp
                           4628 ;	genCall
   0C18 CD 00 00           4629 	call	_move_sprite
   0C1B E8 03              4630 	lda	sp,3(sp)
   0C1D E1                 4631 	pop	hl
   0C1E 4D                 4632 	ld	c,l
                           4633 ;	game.c 706
                           4634 ;	genMinus
                           4635 ;	AOP_STK for _dog1_power_apply_i_1_1
   0C1F F8 01              4636 	lda	hl,1(sp)
   0C21 35                 4637 	dec	(hl)
                           4638 ;	genGoto
   0C22 C3 BB 0B           4639 	jp	00106$
                           4640 ;	genLabel
   0C25                    4641 00108$:
                           4642 ;	game.c 708
                           4643 ;	genPlus
                           4644 ;	AOP_STK for 
                           4645 ;	Can't optimise plus by inc, falling back to the normal way
   0C25 11 05 19           4646 	ld	de,#_map
   0C28 F8 08              4647 	lda	hl,8(sp)
   0C2A 2A                 4648 	ld	a,(hl+)
   0C2B 66                 4649 	ld	h,(hl)
   0C2C 6F                 4650 	ld	l,a
   0C2D 19                 4651 	add	hl,de
   0C2E 4D                 4652 	ld	c,l
   0C2F 44                 4653 	ld	b,h
                           4654 ;	genPointerGet
                           4655 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
   0C30 0A                 4656 	ld	a,(bc)
   0C31 F8 00              4657 	lda	hl,0(sp)
                           4658 ;	genCmpEq
                           4659 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4660 ; genCmpEq: left 1, right 1, result 0
   0C33 77                 4661 	ld      (hl),a
                           4662 ; Removed redundent load
   0C34 FE 0B              4663 	cp	a,#0x0B
   0C36 CA 44 0C           4664 	jp	z,00109$
   0C39                    4665 00127$:
                           4666 ;	genCmpEq
                           4667 ;	AOP_STK for _dog1_power_apply_sloc0_1_0
                           4668 ; genCmpEq: left 1, right 1, result 0
   0C39 F8 00              4669 	lda	hl,0(sp)
   0C3B 7E                 4670 	ld	a,(hl)
   0C3C FE 0C              4671 	cp	a,#0x0C
   0C3E CA 4D 0C           4672 	jp	z,00112$
   0C41                    4673 00128$:
                           4674 ;	genGoto
   0C41 C3 4A 0C           4675 	jp	00111$
                           4676 ;	game.c 710
                           4677 ;	genLabel
   0C44                    4678 00109$:
                           4679 ;	genAssign (pointer)
   0C44 3E 30              4680 	ld	a,#0x30
   0C46 02                 4681 	ld	(bc),a
                           4682 ;	game.c 711
                           4683 ;	genGoto
   0C47 C3 4D 0C           4684 	jp	00112$
                           4685 ;	game.c 715
                           4686 ;	genLabel
   0C4A                    4687 00111$:
                           4688 ;	genAssign (pointer)
   0C4A 3E 2D              4689 	ld	a,#0x2D
   0C4C 02                 4690 	ld	(bc),a
                           4691 ;	game.c 717
                           4692 ;	genLabel
   0C4D                    4693 00112$:
                           4694 ;	game.c 718
                           4695 ;	genIpush
                           4696 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C4D 21 05 19           4697 	ld	hl,#_map
   0C50 E5                 4698 	push	hl
                           4699 ;	genIpush
   0C51 21 14 12           4700 	ld	hl,#0x1214
   0C54 E5                 4701 	push	hl
                           4702 ;	genIpush
   0C55 21 00 00           4703 	ld	hl,#0x0000
   0C58 E5                 4704 	push	hl
                           4705 ;	genCall
   0C59 CD 00 00           4706 	call	_set_bkg_tiles
   0C5C E8 06              4707 	lda	sp,6(sp)
                           4708 ;	game.c 719
                           4709 ;	genIpush
                           4710 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C5E 21 00 00           4711 	ld	hl,#0x0000
   0C61 E5                 4712 	push	hl
                           4713 ;	genIpush
   0C62 3E 05              4714 	ld	a,#0x05
   0C64 F5                 4715 	push	af
   0C65 33                 4716 	inc	sp
                           4717 ;	genCall
   0C66 CD 00 00           4718 	call	_move_sprite
   0C69 E8 03              4719 	lda	sp,3(sp)
                           4720 ;	genLabel
   0C6B                    4721 00113$:
                           4722 ;	genEndFunction
   0C6B E8 03              4723 	lda	sp,3(sp)
   0C6D C9                 4724 	ret
   0C6E                    4725 ___dog1_power_apply_end:
                           4726 ;	game.c 725
                           4727 ;	genLabel
                           4728 ;	genFunction
                           4729 ;	---------------------------------
                           4730 ; Function get_player_map_position
                           4731 ; ---------------------------------
   0C6E                    4732 ___get_player_map_position_start:
   0C6E                    4733 _get_player_map_position:
   0C6E E8 FC              4734 	lda	sp,-4(sp)
                           4735 ;	game.c 733
                           4736 ;	genCast
                           4737 ;	AOP_STK for 
   0C70 F8 06              4738 	lda	hl,6(sp)
   0C72 4E                 4739 	ld	c,(hl)
   0C73 06 00              4740 	ld	b,#0x00
                           4741 ;	genRightShift
   0C75 CB 38              4742 	srl	b
   0C77 CB 19              4743 	rr	c
   0C79 CB 38              4744 	srl	b
   0C7B CB 19              4745 	rr	c
   0C7D CB 38              4746 	srl	b
   0C7F CB 19              4747 	rr	c
                           4748 ;	genMinus
   0C81 0B                 4749 	dec	bc
                           4750 ;	genCast
                           4751 ;	AOP_STK for _get_player_map_position__x_1_1
   0C82 F8 03              4752 	lda	hl,3(sp)
   0C84 71                 4753 	ld	(hl),c
                           4754 ;	game.c 734
                           4755 ;	genCast
                           4756 ;	AOP_STK for 
   0C85 F8 07              4757 	lda	hl,7(sp)
   0C87 46                 4758 	ld	b,(hl)
   0C88 0E 00              4759 	ld	c,#0x00
                           4760 ;	genRightShift
   0C8A CB 39              4761 	srl	c
   0C8C CB 18              4762 	rr	b
   0C8E CB 39              4763 	srl	c
   0C90 CB 18              4764 	rr	b
   0C92 CB 39              4765 	srl	c
   0C94 CB 18              4766 	rr	b
                           4767 ;	genMinus
   0C96 58                 4768 	ld	e,b
   0C97 51                 4769 	ld	d,c
   0C98 1B                 4770 	dec	de
   0C99 1B                 4771 	dec	de
   0C9A 43                 4772 	ld	b,e
   0C9B 4A                 4773 	ld	c,d
                           4774 ;	genCast
                           4775 ;	AOP_STK for _get_player_map_position__y_1_1
   0C9C F8 02              4776 	lda	hl,2(sp)
   0C9E 70                 4777 	ld	(hl),b
                           4778 ;	game.c 738
                           4779 ;	genCast
                           4780 ;	AOP_STK for _get_player_map_position__x_1_1
                           4781 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0C9F 23                 4782 	inc	hl
   0CA0 7E                 4783 	ld	a,(hl)
   0CA1 F8 00              4784 	lda	hl,0(sp)
   0CA3 22                 4785 	ld	(hl+),a
   0CA4 36 00              4786 	ld	(hl),#0x00
                           4787 ;	game.c 739
                           4788 ;	genCast
                           4789 ;	AOP_STK for _get_player_map_position__y_1_1
   0CA6 23                 4790 	inc	hl
   0CA7 4E                 4791 	ld	c,(hl)
   0CA8 06 00              4792 	ld	b,#0x00
                           4793 ;	genMult
   0CAA 59                 4794 	ld	e,c
   0CAB 50                 4795 	ld	d,b
   0CAC 6B                 4796 	ld	l,e
   0CAD 62                 4797 	ld	h,d
   0CAE 29                 4798 	add	hl,hl
   0CAF 29                 4799 	add	hl,hl
   0CB0 19                 4800 	add	hl,de
   0CB1 29                 4801 	add	hl,hl
   0CB2 29                 4802 	add	hl,hl
   0CB3 4D                 4803 	ld	c,l
   0CB4 44                 4804 	ld	b,h
                           4805 ;	genPlus
                           4806 ;	AOP_STK for _get_player_map_position_map_position_1_1
                           4807 ;	Can't optimise plus by inc, falling back to the normal way
   0CB5 F8 00              4808 	lda	hl,0(sp)
   0CB7 2A                 4809 	ld	a,(hl+)
   0CB8 66                 4810 	ld	h,(hl)
   0CB9 6F                 4811 	ld	l,a
   0CBA 09                 4812 	add	hl,bc
   0CBB 7D                 4813 	ld	a,l
   0CBC 54                 4814 	ld	d,h
   0CBD F8 00              4815 	lda	hl,0(sp)
   0CBF 22                 4816 	ld	(hl+),a
   0CC0 72                 4817 	ld	(hl),d
                           4818 ;	game.c 741
                           4819 ;	genRet
                           4820 ;	AOP_STK for _get_player_map_position_map_position_1_1
   0CC1 2B                 4821 	dec	hl
   0CC2 5E                 4822 	ld	e,(hl)
   0CC3 23                 4823 	inc	hl
   0CC4 56                 4824 	ld	d,(hl)
                           4825 ;	genLabel
   0CC5                    4826 00101$:
                           4827 ;	genEndFunction
   0CC5 E8 04              4828 	lda	sp,4(sp)
   0CC7 C9                 4829 	ret
   0CC8                    4830 ___get_player_map_position_end:
                           4831 ;	game.c 744
                           4832 ;	genLabel
                           4833 ;	genFunction
                           4834 ;	---------------------------------
                           4835 ; Function player_input
                           4836 ; ---------------------------------
   0CC8                    4837 ___player_input_start:
   0CC8                    4838 _player_input:
   0CC8 E8 FB              4839 	lda	sp,-5(sp)
                           4840 ;	game.c 747
                           4841 ;	genAssign
                           4842 ;	AOP_STK for 
   0CCA F8 07              4843 	lda	hl,7(sp)
   0CCC 4E                 4844 	ld	c,(hl)
   0CCD 23                 4845 	inc	hl
   0CCE 46                 4846 	ld	b,(hl)
                           4847 ;	genPointerGet
                           4848 ;	AOP_STK for _player_input_sloc0_1_0
   0CCF 59                 4849 	ld	e,c
   0CD0 50                 4850 	ld	d,b
   0CD1 1A                 4851 	ld	a,(de)
   0CD2 F8 03              4852 	lda	hl,3(sp)
   0CD4 77                 4853 	ld	(hl),a
   0CD5 13                 4854 	inc	de
   0CD6 1A                 4855 	ld	a,(de)
   0CD7 23                 4856 	inc	hl
                           4857 ;	genPlus
                           4858 ;	AOP_STK for _player_input_sloc0_1_0
                           4859 ;	AOP_STK for _player_input_sloc1_1_0
                           4860 ;	genPlusIncr
                           4861 ;	Can't optimise plus by inc, falling back to the normal way
   0CD8 32                 4862 	ld      (hl-),a
   0CD9 5E                 4863 	ld	e,(hl)
   0CDA 23                 4864 	inc	hl
   0CDB 56                 4865 	ld	d,(hl)
   0CDC 21 0A 00           4866 	ld	hl,#0x000A
   0CDF 19                 4867 	add	hl,de
   0CE0 7D                 4868 	ld	a,l
   0CE1 54                 4869 	ld	d,h
   0CE2 F8 01              4870 	lda	hl,1(sp)
                           4871 ;	genPointerGet
                           4872 ;	AOP_STK for _player_input_sloc1_1_0
                           4873 ;	AOP_STK for _player_input_sloc0_1_0
   0CE4 22                 4874 	ld	(hl+),a
   0CE5 72                 4875 	ld	(hl),d
   0CE6 5F                 4876 	ld	e,a
   0CE7 1A                 4877 	ld	a,(de)
   0CE8 23                 4878 	inc	hl
                           4879 ;	genCmpEq
                           4880 ;	AOP_STK for _player_input_sloc0_1_0
                           4881 ; genCmpEq: left 1, right 1, result 0
   0CE9 77                 4882 	ld      (hl),a
                           4883 ; Removed redundent load
   0CEA B7                 4884 	or	a,a
   0CEB C2 0B 0E           4885 	jp	nz,00115$
   0CEE 18 03              4886 	jr	00128$
   0CF0                    4887 00127$:
   0CF0 C3 0B 0E           4888 	jp	00115$
   0CF3                    4889 00128$:
                           4890 ;	genCmpEq
                           4891 ;	AOP_HL for _input_timer
                           4892 ; genCmpEq: left 1, right 1, result 0
   0CF3 21 03 19           4893 	ld	hl,#_input_timer
   0CF6 7E                 4894 	ld	a,(hl)
   0CF7 B7                 4895 	or	a,a
   0CF8 C2 0B 0E           4896 	jp	nz,00115$
   0CFB 18 03              4897 	jr	00130$
   0CFD                    4898 00129$:
   0CFD C3 0B 0E           4899 	jp	00115$
   0D00                    4900 00130$:
                           4901 ;	game.c 749
                           4902 ;	genCall
                           4903 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D00 C5                 4904 	push	bc
   0D01 CD 00 00           4905 	call	_joypad
                           4906 ;	AOP_STK for _player_input_sloc1_1_0
   0D04 F8 03              4907 	lda	hl,3(sp)
   0D06 73                 4908 	ld	(hl),e
   0D07 C1                 4909 	pop	bc
                           4910 ;	genCmpEq
                           4911 ;	AOP_STK for _player_input_sloc1_1_0
                           4912 ; genCmpEq: left 1, right 1, result 0
   0D08 F8 01              4913 	lda	hl,1(sp)
   0D0A 7E                 4914 	ld	a,(hl)
   0D0B FE 01              4915 	cp	a,#0x01
   0D0D CA BB 0D           4916 	jp	z,00108$
   0D10                    4917 00131$:
                           4918 ;	genCmpEq
                           4919 ;	AOP_STK for _player_input_sloc1_1_0
                           4920 ; genCmpEq: left 1, right 1, result 0
   0D10 F8 01              4921 	lda	hl,1(sp)
   0D12 7E                 4922 	ld	a,(hl)
   0D13 FE 02              4923 	cp	a,#0x02
   0D15 CA 9C 0D           4924 	jp	z,00107$
   0D18                    4925 00132$:
                           4926 ;	genCmpEq
                           4927 ;	AOP_STK for _player_input_sloc1_1_0
                           4928 ; genCmpEq: left 1, right 1, result 0
   0D18 F8 01              4929 	lda	hl,1(sp)
   0D1A 7E                 4930 	ld	a,(hl)
   0D1B FE 04              4931 	cp	a,#0x04
   0D1D CA DA 0D           4932 	jp	z,00109$
   0D20                    4933 00133$:
                           4934 ;	genCmpEq
                           4935 ;	AOP_STK for _player_input_sloc1_1_0
                           4936 ; genCmpEq: left 1, right 1, result 0
   0D20 F8 01              4937 	lda	hl,1(sp)
   0D22 7E                 4938 	ld	a,(hl)
   0D23 FE 08              4939 	cp	a,#0x08
   0D25 CA F9 0D           4940 	jp	z,00110$
   0D28                    4941 00134$:
                           4942 ;	genCmpEq
                           4943 ;	AOP_STK for _player_input_sloc1_1_0
                           4944 ; genCmpEq: left 1, right 1, result 0
   0D28 F8 01              4945 	lda	hl,1(sp)
   0D2A 7E                 4946 	ld	a,(hl)
   0D2B FE 10              4947 	cp	a,#0x10
   0D2D CA 3B 0D           4948 	jp	z,00103$
   0D30                    4949 00135$:
                           4950 ;	genCmpEq
                           4951 ;	AOP_STK for _player_input_sloc1_1_0
                           4952 ; genCmpEq: left 1, right 1, result 0
   0D30 F8 01              4953 	lda	hl,1(sp)
   0D32 7E                 4954 	ld	a,(hl)
   0D33 FE 20              4955 	cp	a,#0x20
   0D35 CA 94 0D           4956 	jp	z,00106$
   0D38                    4957 00136$:
                           4958 ;	genGoto
   0D38 C3 0B 0E           4959 	jp	00115$
                           4960 ;	game.c 755
                           4961 ;	genLabel
   0D3B                    4962 00103$:
                           4963 ;	game.c 751
                           4964 ;	genPointerGet
                           4965 ;	AOP_STK for _player_input_sloc1_1_0
   0D3B 59                 4966 	ld	e,c
   0D3C 50                 4967 	ld	d,b
   0D3D 1A                 4968 	ld	a,(de)
   0D3E F8 01              4969 	lda	hl,1(sp)
   0D40 77                 4970 	ld	(hl),a
   0D41 13                 4971 	inc	de
   0D42 1A                 4972 	ld	a,(de)
   0D43 23                 4973 	inc	hl
                           4974 ;	genPlus
                           4975 ;	AOP_STK for _player_input_sloc1_1_0
                           4976 ;	AOP_STK for _player_input_sloc0_1_0
                           4977 ;	genPlusIncr
                           4978 ;	Can't optimise plus by inc, falling back to the normal way
   0D44 32                 4979 	ld      (hl-),a
   0D45 5E                 4980 	ld	e,(hl)
   0D46 23                 4981 	inc	hl
   0D47 56                 4982 	ld	d,(hl)
   0D48 21 0B 00           4983 	ld	hl,#0x000B
   0D4B 19                 4984 	add	hl,de
   0D4C 7D                 4985 	ld	a,l
   0D4D 54                 4986 	ld	d,h
   0D4E F8 03              4987 	lda	hl,3(sp)
                           4988 ;	genPointerGet
                           4989 ;	AOP_STK for _player_input_sloc0_1_0
                           4990 ;	AOP_STK for _player_input_sloc2_1_0
   0D50 22                 4991 	ld	(hl+),a
   0D51 72                 4992 	ld	(hl),d
   0D52 5F                 4993 	ld	e,a
   0D53 1A                 4994 	ld	a,(de)
   0D54 F8 00              4995 	lda	hl,0(sp)
                           4996 ;	genCmpEq
                           4997 ;	AOP_STK for _player_input_sloc2_1_0
                           4998 ; genCmpEq: left 1, right 1, result 0
   0D56 77                 4999 	ld      (hl),a
                           5000 ; Removed redundent load
   0D57 FE 01              5001 	cp	a,#0x01
   0D59 C2 7F 0D           5002 	jp	nz,00102$
   0D5C 18 03              5003 	jr	00138$
   0D5E                    5004 00137$:
   0D5E C3 7F 0D           5005 	jp	00102$
   0D61                    5006 00138$:
                           5007 ;	game.c 752
                           5008 ;	genPlus
                           5009 ;	AOP_STK for _player_input_sloc1_1_0
                           5010 ;	genPlusIncr
                           5011 ;	Can't optimise plus by inc, falling back to the normal way
   0D61 F8 01              5012 	lda	hl,1(sp)
   0D63 5E                 5013 	ld	e,(hl)
   0D64 23                 5014 	inc	hl
   0D65 56                 5015 	ld	d,(hl)
   0D66 21 0A 00           5016 	ld	hl,#0x000A
   0D69 19                 5017 	add	hl,de
   0D6A 7D                 5018 	ld	a,l
   0D6B 54                 5019 	ld	d,h
   0D6C 6F                 5020 	ld	l,a
   0D6D 62                 5021 	ld	h,d
                           5022 ;	genAssign (pointer)
   0D6E 36 10              5023 	ld	(hl),#0x10
                           5024 ;	game.c 753
                           5025 ;	genPlus
                           5026 ;	AOP_STK for _player_input_sloc1_1_0
                           5027 ;	genPlusIncr
                           5028 ;	Can't optimise plus by inc, falling back to the normal way
   0D70 F8 01              5029 	lda	hl,1(sp)
   0D72 5E                 5030 	ld	e,(hl)
   0D73 23                 5031 	inc	hl
   0D74 56                 5032 	ld	d,(hl)
   0D75 21 09 00           5033 	ld	hl,#0x0009
   0D78 19                 5034 	add	hl,de
   0D79 7D                 5035 	ld	a,l
   0D7A 54                 5036 	ld	d,h
   0D7B 6F                 5037 	ld	l,a
   0D7C 62                 5038 	ld	h,d
                           5039 ;	genAssign (pointer)
   0D7D 36 01              5040 	ld	(hl),#0x01
                           5041 ;	genLabel
   0D7F                    5042 00102$:
                           5043 ;	game.c 755
                           5044 ;	genCmpEq
                           5045 ;	AOP_STK for _player_input_sloc2_1_0
                           5046 ; genCmpEq: left 1, right 1, result 0
   0D7F F8 00              5047 	lda	hl,0(sp)
   0D81 7E                 5048 	ld	a,(hl)
   0D82 FE 02              5049 	cp	a,#0x02
   0D84 C2 0B 0E           5050 	jp	nz,00115$
   0D87 18 03              5051 	jr	00140$
   0D89                    5052 00139$:
   0D89 C3 0B 0E           5053 	jp	00115$
   0D8C                    5054 00140$:
                           5055 ;	game.c 756
                           5056 ;	genCall
                           5057 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D8C C5                 5058 	push	bc
   0D8D CD FF 08           5059 	call	_dog1_power
   0D90 C1                 5060 	pop	bc
                           5061 ;	game.c 760
                           5062 ;	genGoto
   0D91 C3 0B 0E           5063 	jp	00115$
                           5064 ;	game.c 764
                           5065 ;	genLabel
   0D94                    5066 00106$:
                           5067 ;	genCall
                           5068 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0D94 C5                 5069 	push	bc
   0D95 CD CA 01           5070 	call	_change_char
   0D98 C1                 5071 	pop	bc
                           5072 ;	game.c 765
                           5073 ;	genGoto
   0D99 C3 0B 0E           5074 	jp	00115$
                           5075 ;	game.c 768
                           5076 ;	genLabel
   0D9C                    5077 00107$:
                           5078 ;	genAssign
                           5079 ;	AOP_HL for _input_timer
   0D9C 21 03 19           5080 	ld	hl,#_input_timer
   0D9F 36 04              5081 	ld	(hl),#0x04
                           5082 ;	game.c 769
                           5083 ;	genPointerGet
                           5084 ;	AOP_STK for _player_input_sloc1_1_0
   0DA1 59                 5085 	ld	e,c
   0DA2 50                 5086 	ld	d,b
   0DA3 1A                 5087 	ld	a,(de)
   0DA4 F8 01              5088 	lda	hl,1(sp)
   0DA6 77                 5089 	ld	(hl),a
   0DA7 13                 5090 	inc	de
   0DA8 1A                 5091 	ld	a,(de)
   0DA9 23                 5092 	inc	hl
                           5093 ;	genPlus
                           5094 ;	AOP_STK for _player_input_sloc1_1_0
                           5095 ;	genPlusIncr
                           5096 ;	Can't optimise plus by inc, falling back to the normal way
   0DAA 32                 5097 	ld      (hl-),a
   0DAB 5E                 5098 	ld	e,(hl)
   0DAC 23                 5099 	inc	hl
   0DAD 56                 5100 	ld	d,(hl)
   0DAE 21 08 00           5101 	ld	hl,#0x0008
   0DB1 19                 5102 	add	hl,de
   0DB2 7D                 5103 	ld	a,l
   0DB3 54                 5104 	ld	d,h
   0DB4 6F                 5105 	ld	l,a
   0DB5 62                 5106 	ld	h,d
                           5107 ;	genAssign (pointer)
   0DB6 36 04              5108 	ld	(hl),#0x04
                           5109 ;	game.c 770
                           5110 ;	genGoto
   0DB8 C3 0B 0E           5111 	jp	00115$
                           5112 ;	game.c 772
                           5113 ;	genLabel
   0DBB                    5114 00108$:
                           5115 ;	genAssign
                           5116 ;	AOP_HL for _input_timer
   0DBB 21 03 19           5117 	ld	hl,#_input_timer
   0DBE 36 04              5118 	ld	(hl),#0x04
                           5119 ;	game.c 773
                           5120 ;	genPointerGet
                           5121 ;	AOP_STK for _player_input_sloc1_1_0
   0DC0 59                 5122 	ld	e,c
   0DC1 50                 5123 	ld	d,b
   0DC2 1A                 5124 	ld	a,(de)
   0DC3 F8 01              5125 	lda	hl,1(sp)
   0DC5 77                 5126 	ld	(hl),a
   0DC6 13                 5127 	inc	de
   0DC7 1A                 5128 	ld	a,(de)
   0DC8 23                 5129 	inc	hl
                           5130 ;	genPlus
                           5131 ;	AOP_STK for _player_input_sloc1_1_0
                           5132 ;	genPlusIncr
                           5133 ;	Can't optimise plus by inc, falling back to the normal way
   0DC9 32                 5134 	ld      (hl-),a
   0DCA 5E                 5135 	ld	e,(hl)
   0DCB 23                 5136 	inc	hl
   0DCC 56                 5137 	ld	d,(hl)
   0DCD 21 08 00           5138 	ld	hl,#0x0008
   0DD0 19                 5139 	add	hl,de
   0DD1 7D                 5140 	ld	a,l
   0DD2 54                 5141 	ld	d,h
   0DD3 6F                 5142 	ld	l,a
   0DD4 62                 5143 	ld	h,d
                           5144 ;	genAssign (pointer)
   0DD5 36 02              5145 	ld	(hl),#0x02
                           5146 ;	game.c 774
                           5147 ;	genGoto
   0DD7 C3 0B 0E           5148 	jp	00115$
                           5149 ;	game.c 776
                           5150 ;	genLabel
   0DDA                    5151 00109$:
                           5152 ;	genAssign
                           5153 ;	AOP_HL for _input_timer
   0DDA 21 03 19           5154 	ld	hl,#_input_timer
   0DDD 36 04              5155 	ld	(hl),#0x04
                           5156 ;	game.c 777
                           5157 ;	genPointerGet
                           5158 ;	AOP_STK for _player_input_sloc1_1_0
   0DDF 59                 5159 	ld	e,c
   0DE0 50                 5160 	ld	d,b
   0DE1 1A                 5161 	ld	a,(de)
   0DE2 F8 01              5162 	lda	hl,1(sp)
   0DE4 77                 5163 	ld	(hl),a
   0DE5 13                 5164 	inc	de
   0DE6 1A                 5165 	ld	a,(de)
   0DE7 23                 5166 	inc	hl
                           5167 ;	genPlus
                           5168 ;	AOP_STK for _player_input_sloc1_1_0
                           5169 ;	genPlusIncr
                           5170 ;	Can't optimise plus by inc, falling back to the normal way
   0DE8 32                 5171 	ld      (hl-),a
   0DE9 5E                 5172 	ld	e,(hl)
   0DEA 23                 5173 	inc	hl
   0DEB 56                 5174 	ld	d,(hl)
   0DEC 21 08 00           5175 	ld	hl,#0x0008
   0DEF 19                 5176 	add	hl,de
   0DF0 7D                 5177 	ld	a,l
   0DF1 54                 5178 	ld	d,h
   0DF2 6F                 5179 	ld	l,a
   0DF3 62                 5180 	ld	h,d
                           5181 ;	genAssign (pointer)
   0DF4 36 01              5182 	ld	(hl),#0x01
                           5183 ;	game.c 778
                           5184 ;	genGoto
   0DF6 C3 0B 0E           5185 	jp	00115$
                           5186 ;	game.c 780
                           5187 ;	genLabel
   0DF9                    5188 00110$:
                           5189 ;	genPointerGet
   0DF9 59                 5190 	ld	e,c
   0DFA 50                 5191 	ld	d,b
   0DFB 1A                 5192 	ld	a,(de)
   0DFC 4F                 5193 	ld	c,a
   0DFD 13                 5194 	inc	de
   0DFE 1A                 5195 	ld	a,(de)
   0DFF 47                 5196 	ld	b,a
                           5197 ;	genPlus
                           5198 ;	genPlusIncr
   0E00 21 08 00           5199 	ld	hl,#0x0008
   0E03 09                 5200 	add	hl,bc
                           5201 ;	genAssign (pointer)
   0E04 36 03              5202 	ld	(hl),#0x03
                           5203 ;	game.c 781
                           5204 ;	genAssign
                           5205 ;	AOP_HL for _input_timer
   0E06 21 03 19           5206 	ld	hl,#_input_timer
   0E09 36 04              5207 	ld	(hl),#0x04
                           5208 ;	game.c 785
                           5209 ;	genLabel
   0E0B                    5210 00115$:
                           5211 ;	genEndFunction
   0E0B E8 05              5212 	lda	sp,5(sp)
   0E0D C9                 5213 	ret
   0E0E                    5214 ___player_input_end:
                           5215 ;	game.c 794
                           5216 ;	genLabel
                           5217 ;	genFunction
                           5218 ;	---------------------------------
                           5219 ; Function can_move_to_map_pos
                           5220 ; ---------------------------------
   0E0E                    5221 ___can_move_to_map_pos_start:
   0E0E                    5222 _can_move_to_map_pos:
                           5223 	
                           5224 ;	game.c 796
                           5225 ;	genPlus
                           5226 ;	AOP_STK for 
                           5227 ;	Can't optimise plus by inc, falling back to the normal way
   0E0E 11 05 19           5228 	ld	de,#_map
   0E11 F8 02              5229 	lda	hl,2(sp)
   0E13 2A                 5230 	ld	a,(hl+)
   0E14 66                 5231 	ld	h,(hl)
   0E15 6F                 5232 	ld	l,a
   0E16 19                 5233 	add	hl,de
   0E17 4D                 5234 	ld	c,l
   0E18 44                 5235 	ld	b,h
                           5236 ;	genPointerGet
   0E19 0A                 5237 	ld	a,(bc)
   0E1A 4F                 5238 	ld	c,a
                           5239 ;	genCast
                           5240 ; Removed redundent load
   0E1B 06 00              5241 	ld	b,#0x00
                           5242 ;	genCmpGt
   0E1D 3E 14              5243 	ld	a,#0x14
   0E1F 91                 5244 	sub	a,c
   0E20 3E 00              5245 	ld	a,#0x00
   0E22 98                 5246 	sbc	a,b
   0E23 D2 35 0E           5247 	jp	nc,00102$
                           5248 ;	game.c 797
                           5249 ;	genCmpLt
   0E26 79                 5250 	ld	a,c
   0E27 D6 29              5251 	sub	a,#0x29
   0E29 78                 5252 	ld	a,b
   0E2A DE 00              5253 	sbc	a,#0x00
   0E2C D2 35 0E           5254 	jp	nc,00102$
                           5255 ;	game.c 799
                           5256 ;	genRet
   0E2F 11 00 00           5257 	ld	de,#0x0000
   0E32 C3 C0 0E           5258 	jp	00112$
                           5259 ;	genLabel
   0E35                    5260 00102$:
                           5261 ;	game.c 803
                           5262 ;	genCmpEq
                           5263 ; genCmpEq: left 2, right 2, result 0
   0E35 79                 5264 	ld	a,c
   0E36 FE 29              5265 	cp	a,#0x29
   0E38 C2 40 0E           5266 	jp	nz,00120$
   0E3B 78                 5267 	ld	a,b
   0E3C B7                 5268 	or	a,a
   0E3D CA 50 0E           5269 	jp	z,00104$
   0E40                    5270 00120$:
                           5271 ;	genCmpEq
                           5272 ; genCmpEq: left 2, right 2, result 0
   0E40 79                 5273 	ld	a,c
   0E41 FE 2D              5274 	cp	a,#0x2D
   0E43 C2 4D 0E           5275 	jp	nz,00121$
   0E46 78                 5276 	ld	a,b
   0E47 B7                 5277 	or	a,a
   0E48 C2 56 0E           5278 	jp	nz,00106$
   0E4B 18 03              5279 	jr	00122$
   0E4D                    5280 00121$:
   0E4D C3 56 0E           5281 	jp	00106$
   0E50                    5282 00122$:
                           5283 ;	game.c 815
                           5284 ;	genLabel
   0E50                    5285 00104$:
                           5286 ;	genRet
   0E50 11 00 00           5287 	ld	de,#0x0000
   0E53 C3 C0 0E           5288 	jp	00112$
                           5289 ;	game.c 817
                           5290 ;	genLabel
   0E56                    5291 00106$:
                           5292 ;	game.c 819
                           5293 ;	genPlus
                           5294 ;	genPlusIncr
   0E56 01 79 1A           5295 	ld	bc,#_bunny + 12
                           5296 ;	genPointerGet
   0E59 59                 5297 	ld	e,c
   0E5A 50                 5298 	ld	d,b
   0E5B 1A                 5299 	ld	a,(de)
   0E5C 4F                 5300 	ld	c,a
   0E5D 13                 5301 	inc	de
   0E5E 1A                 5302 	ld	a,(de)
   0E5F 47                 5303 	ld	b,a
                           5304 ;	genCmpEq
                           5305 ;	AOP_STK for 
                           5306 ; genCmpEq: left 2, right 2, result 0
   0E60 F8 02              5307 	lda	hl,2(sp)
   0E62 7E                 5308 	ld	a,(hl)
   0E63 B9                 5309 	cp	c
   0E64 C2 6D 0E           5310 	jp	nz,00123$
   0E67 23                 5311 	inc	hl
   0E68 7E                 5312 	ld	a,(hl)
   0E69 B8                 5313 	cp	b
   0E6A CA B7 0E           5314 	jp	z,00107$
   0E6D                    5315 00123$:
                           5316 ;	game.c 820
                           5317 ;	genPlus
                           5318 ;	genPlusIncr
   0E6D 01 87 1A           5319 	ld	bc,#_dog1 + 12
                           5320 ;	genPointerGet
   0E70 59                 5321 	ld	e,c
   0E71 50                 5322 	ld	d,b
   0E72 1A                 5323 	ld	a,(de)
   0E73 4F                 5324 	ld	c,a
   0E74 13                 5325 	inc	de
   0E75 1A                 5326 	ld	a,(de)
   0E76 47                 5327 	ld	b,a
                           5328 ;	genCmpEq
                           5329 ;	AOP_STK for 
                           5330 ; genCmpEq: left 2, right 2, result 0
   0E77 F8 02              5331 	lda	hl,2(sp)
   0E79 7E                 5332 	ld	a,(hl)
   0E7A B9                 5333 	cp	c
   0E7B C2 84 0E           5334 	jp	nz,00124$
   0E7E 23                 5335 	inc	hl
   0E7F 7E                 5336 	ld	a,(hl)
   0E80 B8                 5337 	cp	b
   0E81 CA B7 0E           5338 	jp	z,00107$
   0E84                    5339 00124$:
                           5340 ;	game.c 821
                           5341 ;	genPlus
                           5342 ;	genPlusIncr
   0E84 01 95 1A           5343 	ld	bc,#_dog2 + 12
                           5344 ;	genPointerGet
   0E87 59                 5345 	ld	e,c
   0E88 50                 5346 	ld	d,b
   0E89 1A                 5347 	ld	a,(de)
   0E8A 4F                 5348 	ld	c,a
   0E8B 13                 5349 	inc	de
   0E8C 1A                 5350 	ld	a,(de)
   0E8D 47                 5351 	ld	b,a
                           5352 ;	genCmpEq
                           5353 ;	AOP_STK for 
                           5354 ; genCmpEq: left 2, right 2, result 0
   0E8E F8 02              5355 	lda	hl,2(sp)
   0E90 7E                 5356 	ld	a,(hl)
   0E91 B9                 5357 	cp	c
   0E92 C2 9B 0E           5358 	jp	nz,00125$
   0E95 23                 5359 	inc	hl
   0E96 7E                 5360 	ld	a,(hl)
   0E97 B8                 5361 	cp	b
   0E98 CA B7 0E           5362 	jp	z,00107$
   0E9B                    5363 00125$:
                           5364 ;	game.c 822
                           5365 ;	genPlus
                           5366 ;	genPlusIncr
   0E9B 01 A3 1A           5367 	ld	bc,#_cat + 12
                           5368 ;	genPointerGet
   0E9E 59                 5369 	ld	e,c
   0E9F 50                 5370 	ld	d,b
   0EA0 1A                 5371 	ld	a,(de)
   0EA1 4F                 5372 	ld	c,a
   0EA2 13                 5373 	inc	de
   0EA3 1A                 5374 	ld	a,(de)
   0EA4 47                 5375 	ld	b,a
                           5376 ;	genCmpEq
                           5377 ;	AOP_STK for 
                           5378 ; genCmpEq: left 2, right 2, result 0
   0EA5 F8 02              5379 	lda	hl,2(sp)
   0EA7 7E                 5380 	ld	a,(hl)
   0EA8 B9                 5381 	cp	c
   0EA9 C2 B4 0E           5382 	jp	nz,00126$
   0EAC 23                 5383 	inc	hl
   0EAD 7E                 5384 	ld	a,(hl)
   0EAE B8                 5385 	cp	b
   0EAF C2 BD 0E           5386 	jp	nz,00108$
   0EB2 18 03              5387 	jr	00127$
   0EB4                    5388 00126$:
   0EB4 C3 BD 0E           5389 	jp	00108$
   0EB7                    5390 00127$:
                           5391 ;	genLabel
   0EB7                    5392 00107$:
                           5393 ;	game.c 824
                           5394 ;	genRet
   0EB7 11 00 00           5395 	ld	de,#0x0000
   0EBA C3 C0 0E           5396 	jp	00112$
                           5397 ;	genLabel
   0EBD                    5398 00108$:
                           5399 ;	game.c 827
                           5400 ;	genRet
   0EBD 11 01 00           5401 	ld	de,#0x0001
                           5402 ;	genLabel
   0EC0                    5403 00112$:
                           5404 ;	genEndFunction
                           5405 	
   0EC0 C9                 5406 	ret
   0EC1                    5407 ___can_move_to_map_pos_end:
                           5408 ;	game.c 830
                           5409 ;	genLabel
                           5410 ;	genFunction
                           5411 ;	---------------------------------
                           5412 ; Function can_move
                           5413 ; ---------------------------------
   0EC1                    5414 ___can_move_start:
   0EC1                    5415 _can_move:
   0EC1 E8 FA              5416 	lda	sp,-6(sp)
                           5417 ;	game.c 841
                           5418 ;	genCmpGt
                           5419 ;	AOP_STK for 
   0EC3 3E 04              5420 	ld	a,#0x04
   0EC5 F8 0A              5421 	lda	hl,10(sp)
   0EC7 96                 5422 	sub	a,(hl)
   0EC8 DA 0E 0F           5423 	jp	c,00106$
                           5424 ;	genJumpTab
                           5425 ;	AOP_STK for 
   0ECB 5E                 5426 	ld	e,(hl)
   0ECC 16 00              5427 	ld	d,#0x00
   0ECE 21 D5 0E           5428 	ld	hl,#00121$
   0ED1 19                 5429 	add	hl,de
   0ED2 19                 5430 	add	hl,de
   0ED3 19                 5431 	add	hl,de
   0ED4 E9                 5432 	jp	(hl)
   0ED5                    5433 00121$:
   0ED5 C3 08 0F           5434 	jp	00105$
   0ED8 C3 F6 0E           5435 	jp	00103$
   0EDB C3 ED 0E           5436 	jp	00102$
   0EDE C3 FF 0E           5437 	jp	00104$
   0EE1 C3 E4 0E           5438 	jp	00101$
                           5439 ;	game.c 843
                           5440 ;	genLabel
   0EE4                    5441 00101$:
                           5442 ;	genMinus
                           5443 ;	AOP_STK for 
   0EE4 F8 08              5444 	lda	hl,8(sp)
   0EE6 7E                 5445 	ld	a,(hl)
   0EE7 C6 F8              5446 	add	a,#0xF8
   0EE9 77                 5447 	ld	(hl),a
                           5448 ;	game.c 844
                           5449 ;	genGoto
   0EEA C3 0E 0F           5450 	jp	00106$
                           5451 ;	game.c 846
                           5452 ;	genLabel
   0EED                    5453 00102$:
                           5454 ;	genPlus
                           5455 ;	AOP_STK for 
                           5456 ;	genPlusIncr
                           5457 ;	Can't optimise plus by inc, falling back to the normal way
   0EED F8 08              5458 	lda	hl,8(sp)
   0EEF 7E                 5459 	ld	a,(hl)
   0EF0 C6 08              5460 	add	a,#0x08
   0EF2 77                 5461 	ld	(hl),a
                           5462 ;	game.c 847
                           5463 ;	genGoto
   0EF3 C3 0E 0F           5464 	jp	00106$
                           5465 ;	game.c 849
                           5466 ;	genLabel
   0EF6                    5467 00103$:
                           5468 ;	genMinus
                           5469 ;	AOP_STK for 
   0EF6 F8 09              5470 	lda	hl,9(sp)
   0EF8 7E                 5471 	ld	a,(hl)
   0EF9 C6 F8              5472 	add	a,#0xF8
   0EFB 77                 5473 	ld	(hl),a
                           5474 ;	game.c 850
                           5475 ;	genGoto
   0EFC C3 0E 0F           5476 	jp	00106$
                           5477 ;	game.c 852
                           5478 ;	genLabel
   0EFF                    5479 00104$:
                           5480 ;	genPlus
                           5481 ;	AOP_STK for 
                           5482 ;	genPlusIncr
                           5483 ;	Can't optimise plus by inc, falling back to the normal way
   0EFF F8 09              5484 	lda	hl,9(sp)
   0F01 7E                 5485 	ld	a,(hl)
   0F02 C6 08              5486 	add	a,#0x08
   0F04 77                 5487 	ld	(hl),a
                           5488 ;	game.c 853
                           5489 ;	genGoto
   0F05 C3 0E 0F           5490 	jp	00106$
                           5491 ;	game.c 855
                           5492 ;	genLabel
   0F08                    5493 00105$:
                           5494 ;	genRet
   0F08 11 00 00           5495 	ld	de,#0x0000
   0F0B C3 A7 0F           5496 	jp	00114$
                           5497 ;	game.c 856
                           5498 ;	genLabel
   0F0E                    5499 00106$:
                           5500 ;	game.c 858
                           5501 ;	genCast
                           5502 ;	AOP_STK for 
   0F0E F8 08              5503 	lda	hl,8(sp)
   0F10 4E                 5504 	ld	c,(hl)
   0F11 06 00              5505 	ld	b,#0x00
                           5506 ;	genRightShift
   0F13 CB 38              5507 	srl	b
   0F15 CB 19              5508 	rr	c
   0F17 CB 38              5509 	srl	b
   0F19 CB 19              5510 	rr	c
   0F1B CB 38              5511 	srl	b
   0F1D CB 19              5512 	rr	c
                           5513 ;	genMinus
   0F1F 0B                 5514 	dec	bc
                           5515 ;	genCast
                           5516 ;	AOP_STK for _can_move__x_1_1
   0F20 F8 05              5517 	lda	hl,5(sp)
   0F22 71                 5518 	ld	(hl),c
                           5519 ;	game.c 859
                           5520 ;	genCast
                           5521 ;	AOP_STK for 
   0F23 F8 09              5522 	lda	hl,9(sp)
   0F25 46                 5523 	ld	b,(hl)
   0F26 0E 00              5524 	ld	c,#0x00
                           5525 ;	genRightShift
   0F28 CB 39              5526 	srl	c
   0F2A CB 18              5527 	rr	b
   0F2C CB 39              5528 	srl	c
   0F2E CB 18              5529 	rr	b
   0F30 CB 39              5530 	srl	c
   0F32 CB 18              5531 	rr	b
                           5532 ;	genMinus
   0F34 58                 5533 	ld	e,b
   0F35 51                 5534 	ld	d,c
   0F36 1B                 5535 	dec	de
   0F37 1B                 5536 	dec	de
   0F38 43                 5537 	ld	b,e
   0F39 4A                 5538 	ld	c,d
                           5539 ;	genCast
                           5540 ;	AOP_STK for _can_move__y_1_1
   0F3A F8 04              5541 	lda	hl,4(sp)
   0F3C 70                 5542 	ld	(hl),b
                           5543 ;	game.c 866
                           5544 ;	genCmpLt
                           5545 ;	AOP_STK for _can_move__x_1_1
   0F3D 23                 5546 	inc	hl
   0F3E 7E                 5547 	ld	a,(hl)
   0F3F FE 00              5548 	cp	#0x00
   0F41 DA 68 0F           5549 	jp	c,00107$
                           5550 ;	genCast
                           5551 ;	AOP_STK for _can_move__x_1_1
   0F44 46                 5552 	ld	b,(hl)
   0F45 0E 00              5553 	ld	c,#0x00
                           5554 ;	genCmpGt
   0F47 3E 13              5555 	ld	a,#0x13
   0F49 90                 5556 	sub	a,b
   0F4A 3E 00              5557 	ld	a,#0x00
   0F4C 99                 5558 	sbc	a,c
   0F4D DA 68 0F           5559 	jp	c,00107$
                           5560 ;	genCmpLt
                           5561 ;	AOP_STK for _can_move__y_1_1
   0F50 2B                 5562 	dec	hl
   0F51 7E                 5563 	ld	a,(hl)
   0F52 FE 00              5564 	cp	#0x00
   0F54 DA 68 0F           5565 	jp	c,00107$
                           5566 ;	genCast
                           5567 ;	AOP_STK for _can_move__y_1_1
                           5568 ;	AOP_STK for _can_move_sloc0_1_0
   0F57 7E                 5569 	ld	a,(hl)
   0F58 F8 00              5570 	lda	hl,0(sp)
   0F5A 22                 5571 	ld	(hl+),a
   0F5B 36 00              5572 	ld	(hl),#0x00
                           5573 ;	genCmpGt
                           5574 ;	AOP_STK for _can_move_sloc0_1_0
   0F5D 3E 11              5575 	ld	a,#0x11
   0F5F 2B                 5576 	dec	hl
   0F60 96                 5577 	sub	a,(hl)
   0F61 3E 00              5578 	ld	a,#0x00
   0F63 23                 5579 	inc	hl
   0F64 9E                 5580 	sbc	a,(hl)
   0F65 D2 6E 0F           5581 	jp	nc,00108$
                           5582 ;	genLabel
   0F68                    5583 00107$:
                           5584 ;	game.c 868
                           5585 ;	genRet
   0F68 11 00 00           5586 	ld	de,#0x0000
   0F6B C3 A7 0F           5587 	jp	00114$
                           5588 ;	genLabel
   0F6E                    5589 00108$:
                           5590 ;	game.c 875
                           5591 ;	genAssign
                           5592 ;	(registers are the same)
                           5593 ;	genAssign
                           5594 ;	AOP_STK for _can_move_map_position_1_1
   0F6E F8 02              5595 	lda	hl,2(sp)
   0F70 70                 5596 	ld	(hl),b
   0F71 23                 5597 	inc	hl
   0F72 71                 5598 	ld	(hl),c
                           5599 ;	game.c 876
                           5600 ;	genMult
                           5601 ;	AOP_STK for _can_move_sloc0_1_0
   0F73 F8 00              5602 	lda	hl,0(sp)
   0F75 5E                 5603 	ld	e,(hl)
   0F76 23                 5604 	inc	hl
   0F77 56                 5605 	ld	d,(hl)
   0F78 6B                 5606 	ld	l,e
   0F79 62                 5607 	ld	h,d
   0F7A 29                 5608 	add	hl,hl
   0F7B 29                 5609 	add	hl,hl
   0F7C 19                 5610 	add	hl,de
   0F7D 29                 5611 	add	hl,hl
   0F7E 29                 5612 	add	hl,hl
   0F7F 4D                 5613 	ld	c,l
   0F80 44                 5614 	ld	b,h
                           5615 ;	genPlus
                           5616 ;	AOP_STK for _can_move_map_position_1_1
                           5617 ;	Can't optimise plus by inc, falling back to the normal way
   0F81 F8 02              5618 	lda	hl,2(sp)
   0F83 2A                 5619 	ld	a,(hl+)
   0F84 66                 5620 	ld	h,(hl)
   0F85 6F                 5621 	ld	l,a
   0F86 09                 5622 	add	hl,bc
   0F87 7D                 5623 	ld	a,l
   0F88 54                 5624 	ld	d,h
   0F89 F8 02              5625 	lda	hl,2(sp)
   0F8B 22                 5626 	ld	(hl+),a
   0F8C 72                 5627 	ld	(hl),d
                           5628 ;	game.c 878
                           5629 ;	genIpush
                           5630 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5631 ;	AOP_STK for _can_move_map_position_1_1
   0F8D 2B                 5632 	dec	hl
   0F8E 2A                 5633 	ld	a,(hl+)
   0F8F 66                 5634 	ld	h,(hl)
   0F90 6F                 5635 	ld	l,a
   0F91 E5                 5636 	push	hl
                           5637 ;	genCall
   0F92 CD 0E 0E           5638 	call	_can_move_to_map_pos
   0F95 42                 5639 	ld	b,d
   0F96 4B                 5640 	ld	c,e
   0F97 E8 02              5641 	lda	sp,2(sp)
                           5642 ;	genIfx
   0F99 79                 5643 	ld	a,c
   0F9A B0                 5644 	or	a,b
   0F9B CA A4 0F           5645 	jp	z,00113$
                           5646 ;	game.c 879
                           5647 ;	genRet
   0F9E 11 01 00           5648 	ld	de,#0x0001
   0FA1 C3 A7 0F           5649 	jp	00114$
                           5650 ;	genLabel
   0FA4                    5651 00113$:
                           5652 ;	game.c 882
                           5653 ;	genRet
   0FA4 11 00 00           5654 	ld	de,#0x0000
                           5655 ;	genLabel
   0FA7                    5656 00114$:
                           5657 ;	genEndFunction
   0FA7 E8 06              5658 	lda	sp,6(sp)
   0FA9 C9                 5659 	ret
   0FAA                    5660 ___can_move_end:
                           5661 ;	game.c 885
                           5662 ;	genLabel
                           5663 ;	genFunction
                           5664 ;	---------------------------------
                           5665 ; Function rotate_player
                           5666 ; ---------------------------------
   0FAA                    5667 ___rotate_player_start:
   0FAA                    5668 _rotate_player:
   0FAA E8 FC              5669 	lda	sp,-4(sp)
                           5670 ;	game.c 886
                           5671 ;	genAssign
                           5672 ;	AOP_HL for _player
   0FAC 21 B3 1A           5673 	ld	hl,#_player
   0FAF 4E                 5674 	ld	c,(hl)
   0FB0 23                 5675 	inc	hl
   0FB1 46                 5676 	ld	b,(hl)
                           5677 ;	genPlus
                           5678 ;	genPlusIncr
                           5679 ;	Can't optimise plus by inc, falling back to the normal way
   0FB2 79                 5680 	ld	a,c
   0FB3 C6 07              5681 	add	a,#0x07
   0FB5 4F                 5682 	ld	c,a
   0FB6 78                 5683 	ld	a,b
   0FB7 CE 00              5684 	adc	a,#0x00
   0FB9 47                 5685 	ld	b,a
                           5686 ;	genPointerGet
   0FBA 0A                 5687 	ld	a,(bc)
   0FBB 4F                 5688 	ld	c,a
                           5689 ;	genAssign
                           5690 ;	AOP_HL for _player
                           5691 ;	AOP_STK for _rotate_player_sloc0_1_0
   0FBC 2B                 5692 	dec	hl
   0FBD 2A                 5693 	ld	a,(hl+)
   0FBE 5E                 5694 	ld	e,(hl)
   0FBF F8 02              5695 	lda	hl,2(sp)
   0FC1 22                 5696 	ld	(hl+),a
   0FC2 73                 5697 	ld	(hl),e
                           5698 ;	genPlus
                           5699 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5700 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5701 ;	genPlusIncr
                           5702 ;	Can't optimise plus by inc, falling back to the normal way
   0FC3 2B                 5703 	dec	hl
   0FC4 5E                 5704 	ld	e,(hl)
   0FC5 23                 5705 	inc	hl
   0FC6 56                 5706 	ld	d,(hl)
   0FC7 21 0B 00           5707 	ld	hl,#0x000B
   0FCA 19                 5708 	add	hl,de
   0FCB 7D                 5709 	ld	a,l
   0FCC 54                 5710 	ld	d,h
   0FCD F8 00              5711 	lda	hl,0(sp)
                           5712 ;	genPointerGet
                           5713 ;	AOP_STK for _rotate_player_sloc1_1_0
   0FCF 22                 5714 	ld	(hl+),a
   0FD0 72                 5715 	ld	(hl),d
   0FD1 5F                 5716 	ld	e,a
   0FD2 1A                 5717 	ld	a,(de)
   0FD3 47                 5718 	ld	b,a
                           5719 ;	genIpush
                           5720 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD4 79                 5721 	ld	a,c
   0FD5 F5                 5722 	push	af
   0FD6 33                 5723 	inc	sp
                           5724 ;	genIpush
   0FD7 78                 5725 	ld	a,b
   0FD8 F5                 5726 	push	af
   0FD9 33                 5727 	inc	sp
                           5728 ;	genCall
   0FDA CD 00 00           5729 	call	_set_sprite_tile
   0FDD E8 02              5730 	lda	sp,2(sp)
                           5731 ;	game.c 887
                           5732 ;	genAssign
                           5733 ;	AOP_HL for _player
   0FDF 21 B3 1A           5734 	ld	hl,#_player
   0FE2 4E                 5735 	ld	c,(hl)
   0FE3 23                 5736 	inc	hl
   0FE4 46                 5737 	ld	b,(hl)
                           5738 ;	genPlus
                           5739 ;	genPlusIncr
                           5740 ;	Can't optimise plus by inc, falling back to the normal way
   0FE5 79                 5741 	ld	a,c
   0FE6 C6 0B              5742 	add	a,#0x0B
   0FE8 4F                 5743 	ld	c,a
   0FE9 78                 5744 	ld	a,b
   0FEA CE 00              5745 	adc	a,#0x00
   0FEC 47                 5746 	ld	b,a
                           5747 ;	genPointerGet
   0FED 0A                 5748 	ld	a,(bc)
   0FEE 4F                 5749 	ld	c,a
                           5750 ;	genIpush
                           5751 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FEF 3E 20              5752 	ld	a,#0x20
   0FF1 F5                 5753 	push	af
   0FF2 33                 5754 	inc	sp
                           5755 ;	genIpush
   0FF3 79                 5756 	ld	a,c
   0FF4 F5                 5757 	push	af
   0FF5 33                 5758 	inc	sp
                           5759 ;	genCall
   0FF6 CD 00 00           5760 	call	_set_sprite_prop
   0FF9 E8 02              5761 	lda	sp,2(sp)
                           5762 ;	game.c 888
                           5763 ;	genIpush
                           5764 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FFB 3E 05              5765 	ld	a,#0x05
   0FFD F5                 5766 	push	af
   0FFE 33                 5767 	inc	sp
                           5768 ;	genCall
   0FFF CD 00 00           5769 	call	_performantDelay
   1002 E8 01              5770 	lda	sp,1(sp)
                           5771 ;	game.c 889
                           5772 ;	genAssign
                           5773 ;	AOP_HL for _player
   1004 21 B3 1A           5774 	ld	hl,#_player
   1007 4E                 5775 	ld	c,(hl)
   1008 23                 5776 	inc	hl
   1009 46                 5777 	ld	b,(hl)
                           5778 ;	genPlus
                           5779 ;	genPlusIncr
   100A 03                 5780 	inc	bc
   100B 03                 5781 	inc	bc
   100C 03                 5782 	inc	bc
   100D 03                 5783 	inc	bc
                           5784 ;	genPointerGet
   100E 0A                 5785 	ld	a,(bc)
   100F 4F                 5786 	ld	c,a
                           5787 ;	genAssign
                           5788 ;	AOP_HL for _player
                           5789 ;	AOP_STK for _rotate_player_sloc1_1_0
   1010 2B                 5790 	dec	hl
   1011 2A                 5791 	ld	a,(hl+)
   1012 5E                 5792 	ld	e,(hl)
   1013 F8 00              5793 	lda	hl,0(sp)
   1015 22                 5794 	ld	(hl+),a
   1016 73                 5795 	ld	(hl),e
                           5796 ;	genPlus
                           5797 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5798 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5799 ;	genPlusIncr
                           5800 ;	Can't optimise plus by inc, falling back to the normal way
   1017 2B                 5801 	dec	hl
   1018 5E                 5802 	ld	e,(hl)
   1019 23                 5803 	inc	hl
   101A 56                 5804 	ld	d,(hl)
   101B 21 0B 00           5805 	ld	hl,#0x000B
   101E 19                 5806 	add	hl,de
   101F 7D                 5807 	ld	a,l
   1020 54                 5808 	ld	d,h
   1021 F8 02              5809 	lda	hl,2(sp)
                           5810 ;	genPointerGet
                           5811 ;	AOP_STK for _rotate_player_sloc0_1_0
   1023 22                 5812 	ld	(hl+),a
   1024 72                 5813 	ld	(hl),d
   1025 5F                 5814 	ld	e,a
   1026 1A                 5815 	ld	a,(de)
   1027 47                 5816 	ld	b,a
                           5817 ;	genIpush
                           5818 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1028 79                 5819 	ld	a,c
   1029 F5                 5820 	push	af
   102A 33                 5821 	inc	sp
                           5822 ;	genIpush
   102B 78                 5823 	ld	a,b
   102C F5                 5824 	push	af
   102D 33                 5825 	inc	sp
                           5826 ;	genCall
   102E CD 00 00           5827 	call	_set_sprite_tile
   1031 E8 02              5828 	lda	sp,2(sp)
                           5829 ;	game.c 890
                           5830 ;	genAssign
                           5831 ;	AOP_HL for _player
   1033 21 B3 1A           5832 	ld	hl,#_player
   1036 4E                 5833 	ld	c,(hl)
   1037 23                 5834 	inc	hl
   1038 46                 5835 	ld	b,(hl)
                           5836 ;	genPlus
                           5837 ;	genPlusIncr
                           5838 ;	Can't optimise plus by inc, falling back to the normal way
   1039 79                 5839 	ld	a,c
   103A C6 0B              5840 	add	a,#0x0B
   103C 4F                 5841 	ld	c,a
   103D 78                 5842 	ld	a,b
   103E CE 00              5843 	adc	a,#0x00
   1040 47                 5844 	ld	b,a
                           5845 ;	genPointerGet
   1041 0A                 5846 	ld	a,(bc)
   1042 4F                 5847 	ld	c,a
                           5848 ;	genIpush
                           5849 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1043 3E 60              5850 	ld	a,#0x60
   1045 F5                 5851 	push	af
   1046 33                 5852 	inc	sp
                           5853 ;	genIpush
   1047 79                 5854 	ld	a,c
   1048 F5                 5855 	push	af
   1049 33                 5856 	inc	sp
                           5857 ;	genCall
   104A CD 00 00           5858 	call	_set_sprite_prop
   104D E8 02              5859 	lda	sp,2(sp)
                           5860 ;	game.c 891
                           5861 ;	genIpush
                           5862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   104F 3E 05              5863 	ld	a,#0x05
   1051 F5                 5864 	push	af
   1052 33                 5865 	inc	sp
                           5866 ;	genCall
   1053 CD 00 00           5867 	call	_performantDelay
   1056 E8 01              5868 	lda	sp,1(sp)
                           5869 ;	game.c 892
                           5870 ;	genAssign
                           5871 ;	AOP_HL for _player
   1058 21 B3 1A           5872 	ld	hl,#_player
   105B 4E                 5873 	ld	c,(hl)
   105C 23                 5874 	inc	hl
   105D 46                 5875 	ld	b,(hl)
                           5876 ;	genPlus
                           5877 ;	genPlusIncr
                           5878 ;	Can't optimise plus by inc, falling back to the normal way
   105E 79                 5879 	ld	a,c
   105F C6 07              5880 	add	a,#0x07
   1061 4F                 5881 	ld	c,a
   1062 78                 5882 	ld	a,b
   1063 CE 00              5883 	adc	a,#0x00
   1065 47                 5884 	ld	b,a
                           5885 ;	genPointerGet
   1066 0A                 5886 	ld	a,(bc)
   1067 4F                 5887 	ld	c,a
                           5888 ;	genAssign
                           5889 ;	AOP_HL for _player
                           5890 ;	AOP_STK for _rotate_player_sloc1_1_0
   1068 2B                 5891 	dec	hl
   1069 2A                 5892 	ld	a,(hl+)
   106A 5E                 5893 	ld	e,(hl)
   106B F8 00              5894 	lda	hl,0(sp)
   106D 22                 5895 	ld	(hl+),a
   106E 73                 5896 	ld	(hl),e
                           5897 ;	genPlus
                           5898 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5899 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5900 ;	genPlusIncr
                           5901 ;	Can't optimise plus by inc, falling back to the normal way
   106F 2B                 5902 	dec	hl
   1070 5E                 5903 	ld	e,(hl)
   1071 23                 5904 	inc	hl
   1072 56                 5905 	ld	d,(hl)
   1073 21 0B 00           5906 	ld	hl,#0x000B
   1076 19                 5907 	add	hl,de
   1077 7D                 5908 	ld	a,l
   1078 54                 5909 	ld	d,h
   1079 F8 02              5910 	lda	hl,2(sp)
                           5911 ;	genPointerGet
                           5912 ;	AOP_STK for _rotate_player_sloc0_1_0
   107B 22                 5913 	ld	(hl+),a
   107C 72                 5914 	ld	(hl),d
   107D 5F                 5915 	ld	e,a
   107E 1A                 5916 	ld	a,(de)
   107F 47                 5917 	ld	b,a
                           5918 ;	genIpush
                           5919 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1080 79                 5920 	ld	a,c
   1081 F5                 5921 	push	af
   1082 33                 5922 	inc	sp
                           5923 ;	genIpush
   1083 78                 5924 	ld	a,b
   1084 F5                 5925 	push	af
   1085 33                 5926 	inc	sp
                           5927 ;	genCall
   1086 CD 00 00           5928 	call	_set_sprite_tile
   1089 E8 02              5929 	lda	sp,2(sp)
                           5930 ;	game.c 893
                           5931 ;	genAssign
                           5932 ;	AOP_HL for _player
   108B 21 B3 1A           5933 	ld	hl,#_player
   108E 4E                 5934 	ld	c,(hl)
   108F 23                 5935 	inc	hl
   1090 46                 5936 	ld	b,(hl)
                           5937 ;	genPlus
                           5938 ;	genPlusIncr
                           5939 ;	Can't optimise plus by inc, falling back to the normal way
   1091 79                 5940 	ld	a,c
   1092 C6 0B              5941 	add	a,#0x0B
   1094 4F                 5942 	ld	c,a
   1095 78                 5943 	ld	a,b
   1096 CE 00              5944 	adc	a,#0x00
   1098 47                 5945 	ld	b,a
                           5946 ;	genPointerGet
   1099 0A                 5947 	ld	a,(bc)
   109A 4F                 5948 	ld	c,a
                           5949 ;	genIpush
                           5950 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   109B 3E 40              5951 	ld	a,#0x40
   109D F5                 5952 	push	af
   109E 33                 5953 	inc	sp
                           5954 ;	genIpush
   109F 79                 5955 	ld	a,c
   10A0 F5                 5956 	push	af
   10A1 33                 5957 	inc	sp
                           5958 ;	genCall
   10A2 CD 00 00           5959 	call	_set_sprite_prop
   10A5 E8 02              5960 	lda	sp,2(sp)
                           5961 ;	game.c 894
                           5962 ;	genIpush
                           5963 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10A7 3E 05              5964 	ld	a,#0x05
   10A9 F5                 5965 	push	af
   10AA 33                 5966 	inc	sp
                           5967 ;	genCall
   10AB CD 00 00           5968 	call	_performantDelay
   10AE E8 01              5969 	lda	sp,1(sp)
                           5970 ;	game.c 895
                           5971 ;	genAssign
                           5972 ;	AOP_HL for _player
   10B0 21 B3 1A           5973 	ld	hl,#_player
   10B3 4E                 5974 	ld	c,(hl)
   10B4 23                 5975 	inc	hl
   10B5 46                 5976 	ld	b,(hl)
                           5977 ;	genPlus
                           5978 ;	genPlusIncr
   10B6 03                 5979 	inc	bc
   10B7 03                 5980 	inc	bc
   10B8 03                 5981 	inc	bc
   10B9 03                 5982 	inc	bc
                           5983 ;	genPointerGet
   10BA 0A                 5984 	ld	a,(bc)
   10BB 4F                 5985 	ld	c,a
                           5986 ;	genAssign
                           5987 ;	AOP_HL for _player
                           5988 ;	AOP_STK for _rotate_player_sloc1_1_0
   10BC 2B                 5989 	dec	hl
   10BD 2A                 5990 	ld	a,(hl+)
   10BE 5E                 5991 	ld	e,(hl)
   10BF F8 00              5992 	lda	hl,0(sp)
   10C1 22                 5993 	ld	(hl+),a
   10C2 73                 5994 	ld	(hl),e
                           5995 ;	genPlus
                           5996 ;	AOP_STK for _rotate_player_sloc1_1_0
                           5997 ;	AOP_STK for _rotate_player_sloc0_1_0
                           5998 ;	genPlusIncr
                           5999 ;	Can't optimise plus by inc, falling back to the normal way
   10C3 2B                 6000 	dec	hl
   10C4 5E                 6001 	ld	e,(hl)
   10C5 23                 6002 	inc	hl
   10C6 56                 6003 	ld	d,(hl)
   10C7 21 0B 00           6004 	ld	hl,#0x000B
   10CA 19                 6005 	add	hl,de
   10CB 7D                 6006 	ld	a,l
   10CC 54                 6007 	ld	d,h
   10CD F8 02              6008 	lda	hl,2(sp)
                           6009 ;	genPointerGet
                           6010 ;	AOP_STK for _rotate_player_sloc0_1_0
   10CF 22                 6011 	ld	(hl+),a
   10D0 72                 6012 	ld	(hl),d
   10D1 5F                 6013 	ld	e,a
   10D2 1A                 6014 	ld	a,(de)
   10D3 47                 6015 	ld	b,a
                           6016 ;	genIpush
                           6017 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10D4 79                 6018 	ld	a,c
   10D5 F5                 6019 	push	af
   10D6 33                 6020 	inc	sp
                           6021 ;	genIpush
   10D7 78                 6022 	ld	a,b
   10D8 F5                 6023 	push	af
   10D9 33                 6024 	inc	sp
                           6025 ;	genCall
   10DA CD 00 00           6026 	call	_set_sprite_tile
   10DD E8 02              6027 	lda	sp,2(sp)
                           6028 ;	game.c 896
                           6029 ;	genAssign
                           6030 ;	AOP_HL for _player
   10DF 21 B3 1A           6031 	ld	hl,#_player
   10E2 4E                 6032 	ld	c,(hl)
   10E3 23                 6033 	inc	hl
   10E4 46                 6034 	ld	b,(hl)
                           6035 ;	genPlus
                           6036 ;	genPlusIncr
                           6037 ;	Can't optimise plus by inc, falling back to the normal way
   10E5 79                 6038 	ld	a,c
   10E6 C6 0B              6039 	add	a,#0x0B
   10E8 4F                 6040 	ld	c,a
   10E9 78                 6041 	ld	a,b
   10EA CE 00              6042 	adc	a,#0x00
   10EC 47                 6043 	ld	b,a
                           6044 ;	genPointerGet
   10ED 0A                 6045 	ld	a,(bc)
   10EE 4F                 6046 	ld	c,a
                           6047 ;	genIpush
                           6048 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10EF 3E 00              6049 	ld	a,#0x00
   10F1 F5                 6050 	push	af
   10F2 33                 6051 	inc	sp
                           6052 ;	genIpush
   10F3 79                 6053 	ld	a,c
   10F4 F5                 6054 	push	af
   10F5 33                 6055 	inc	sp
                           6056 ;	genCall
   10F6 CD 00 00           6057 	call	_set_sprite_prop
   10F9 E8 02              6058 	lda	sp,2(sp)
                           6059 ;	game.c 897
                           6060 ;	genIpush
                           6061 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10FB 3E 05              6062 	ld	a,#0x05
   10FD F5                 6063 	push	af
   10FE 33                 6064 	inc	sp
                           6065 ;	genCall
   10FF CD 00 00           6066 	call	_performantDelay
   1102 E8 01              6067 	lda	sp,1(sp)
                           6068 ;	game.c 898
                           6069 ;	genAssign
                           6070 ;	AOP_HL for _player
   1104 21 B3 1A           6071 	ld	hl,#_player
   1107 4E                 6072 	ld	c,(hl)
   1108 23                 6073 	inc	hl
   1109 46                 6074 	ld	b,(hl)
                           6075 ;	genPlus
                           6076 ;	genPlusIncr
   110A 03                 6077 	inc	bc
   110B 03                 6078 	inc	bc
                           6079 ;	genPointerGet
   110C 0A                 6080 	ld	a,(bc)
   110D 4F                 6081 	ld	c,a
                           6082 ;	genAssign
                           6083 ;	AOP_HL for _player
                           6084 ;	AOP_STK for _rotate_player_sloc1_1_0
   110E 2B                 6085 	dec	hl
   110F 2A                 6086 	ld	a,(hl+)
   1110 5E                 6087 	ld	e,(hl)
   1111 F8 00              6088 	lda	hl,0(sp)
   1113 22                 6089 	ld	(hl+),a
   1114 73                 6090 	ld	(hl),e
                           6091 ;	genPlus
                           6092 ;	AOP_STK for _rotate_player_sloc1_1_0
                           6093 ;	AOP_STK for _rotate_player_sloc0_1_0
                           6094 ;	genPlusIncr
                           6095 ;	Can't optimise plus by inc, falling back to the normal way
   1115 2B                 6096 	dec	hl
   1116 5E                 6097 	ld	e,(hl)
   1117 23                 6098 	inc	hl
   1118 56                 6099 	ld	d,(hl)
   1119 21 0B 00           6100 	ld	hl,#0x000B
   111C 19                 6101 	add	hl,de
   111D 7D                 6102 	ld	a,l
   111E 54                 6103 	ld	d,h
   111F F8 02              6104 	lda	hl,2(sp)
                           6105 ;	genPointerGet
                           6106 ;	AOP_STK for _rotate_player_sloc0_1_0
   1121 22                 6107 	ld	(hl+),a
   1122 72                 6108 	ld	(hl),d
   1123 5F                 6109 	ld	e,a
   1124 1A                 6110 	ld	a,(de)
   1125 47                 6111 	ld	b,a
                           6112 ;	genIpush
                           6113 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1126 79                 6114 	ld	a,c
   1127 F5                 6115 	push	af
   1128 33                 6116 	inc	sp
                           6117 ;	genIpush
   1129 78                 6118 	ld	a,b
   112A F5                 6119 	push	af
   112B 33                 6120 	inc	sp
                           6121 ;	genCall
   112C CD 00 00           6122 	call	_set_sprite_tile
   112F E8 02              6123 	lda	sp,2(sp)
                           6124 ;	game.c 899
                           6125 ;	genAssign
                           6126 ;	AOP_HL for _player
   1131 21 B3 1A           6127 	ld	hl,#_player
   1134 4E                 6128 	ld	c,(hl)
   1135 23                 6129 	inc	hl
   1136 46                 6130 	ld	b,(hl)
                           6131 ;	genPlus
                           6132 ;	genPlusIncr
                           6133 ;	Can't optimise plus by inc, falling back to the normal way
   1137 79                 6134 	ld	a,c
   1138 C6 0B              6135 	add	a,#0x0B
   113A 4F                 6136 	ld	c,a
   113B 78                 6137 	ld	a,b
   113C CE 00              6138 	adc	a,#0x00
   113E 47                 6139 	ld	b,a
                           6140 ;	genPointerGet
   113F 0A                 6141 	ld	a,(bc)
   1140 4F                 6142 	ld	c,a
                           6143 ;	genIpush
                           6144 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1141 3E 00              6145 	ld	a,#0x00
   1143 F5                 6146 	push	af
   1144 33                 6147 	inc	sp
                           6148 ;	genIpush
   1145 79                 6149 	ld	a,c
   1146 F5                 6150 	push	af
   1147 33                 6151 	inc	sp
                           6152 ;	genCall
   1148 CD 00 00           6153 	call	_set_sprite_prop
   114B E8 02              6154 	lda	sp,2(sp)
                           6155 ;	genLabel
   114D                    6156 00101$:
                           6157 ;	genEndFunction
   114D E8 04              6158 	lda	sp,4(sp)
   114F C9                 6159 	ret
   1150                    6160 ___rotate_player_end:
                           6161 ;	game.c 902
                           6162 ;	genLabel
                           6163 ;	genFunction
                           6164 ;	---------------------------------
                           6165 ; Function move_character
                           6166 ; ---------------------------------
   1150                    6167 ___move_character_start:
   1150                    6168 _move_character:
   1150 E8 F1              6169 	lda	sp,-15(sp)
                           6170 ;	game.c 905
                           6171 ;	genAssign
                           6172 ;	AOP_HL for _player
   1152 21 B3 1A           6173 	ld	hl,#_player
   1155 4E                 6174 	ld	c,(hl)
   1156 23                 6175 	inc	hl
   1157 46                 6176 	ld	b,(hl)
                           6177 ;	genPlus
                           6178 ;	genPlusIncr
                           6179 ;	Can't optimise plus by inc, falling back to the normal way
   1158 79                 6180 	ld	a,c
   1159 C6 0B              6181 	add	a,#0x0B
   115B 4F                 6182 	ld	c,a
   115C 78                 6183 	ld	a,b
   115D CE 00              6184 	adc	a,#0x00
   115F 47                 6185 	ld	b,a
                           6186 ;	genPointerGet
   1160 0A                 6187 	ld	a,(bc)
   1161 4F                 6188 	ld	c,a
                           6189 ;	genAssign
                           6190 ;	AOP_STK for 
                           6191 ;	AOP_STK for _move_character_sloc0_1_0
   1162 F8 11              6192 	lda	hl,17(sp)
   1164 2A                 6193 	ld	a,(hl+)
   1165 5E                 6194 	ld	e,(hl)
   1166 F8 0D              6195 	lda	hl,13(sp)
   1168 22                 6196 	ld	(hl+),a
   1169 73                 6197 	ld	(hl),e
                           6198 ;	genPlus
                           6199 ;	AOP_STK for _move_character_sloc0_1_0
                           6200 ;	AOP_STK for _move_character_sloc1_1_0
                           6201 ;	genPlusIncr
                           6202 ;	Can't optimise plus by inc, falling back to the normal way
   116A 2B                 6203 	dec	hl
   116B 5E                 6204 	ld	e,(hl)
   116C 23                 6205 	inc	hl
   116D 56                 6206 	ld	d,(hl)
   116E 21 0B 00           6207 	ld	hl,#0x000B
   1171 19                 6208 	add	hl,de
   1172 7D                 6209 	ld	a,l
   1173 54                 6210 	ld	d,h
   1174 F8 0B              6211 	lda	hl,11(sp)
                           6212 ;	genPointerGet
                           6213 ;	AOP_STK for _move_character_sloc1_1_0
   1176 22                 6214 	ld	(hl+),a
   1177 72                 6215 	ld	(hl),d
   1178 5F                 6216 	ld	e,a
   1179 1A                 6217 	ld	a,(de)
   117A 47                 6218 	ld	b,a
                           6219 ;	genCmpEq
                           6220 ; genCmpEq: left 1, right 1, result 0
   117B 79                 6221 	ld	a,c
   117C B8                 6222 	cp	b
                           6223 ;	game.c 906
                           6224 ;	genRet
                           6225 ;	genLabel
   117D CA 83 11           6226 	jp	z,00102$
   1180                    6227 00197$:
   1180 C3 AD 19           6228 	jp	00166$
   1183                    6229 00102$:
                           6230 ;	game.c 909
                           6231 ;	genPlus
                           6232 ;	AOP_STK for _move_character_sloc0_1_0
                           6233 ;	AOP_STK for _move_character_sloc2_1_0
                           6234 ;	genPlusIncr
                           6235 ;	Can't optimise plus by inc, falling back to the normal way
   1183 F8 0D              6236 	lda	hl,13(sp)
   1185 5E                 6237 	ld	e,(hl)
   1186 23                 6238 	inc	hl
   1187 56                 6239 	ld	d,(hl)
   1188 21 09 00           6240 	ld	hl,#0x0009
   118B 19                 6241 	add	hl,de
   118C 7D                 6242 	ld	a,l
   118D 54                 6243 	ld	d,h
   118E F8 09              6244 	lda	hl,9(sp)
                           6245 ;	genPointerGet
                           6246 ;	AOP_STK for _move_character_sloc2_1_0
   1190 22                 6247 	ld	(hl+),a
   1191 72                 6248 	ld	(hl),d
   1192 5F                 6249 	ld	e,a
   1193 1A                 6250 	ld	a,(de)
                           6251 ;	genCmpEq
                           6252 ; genCmpEq: left 1, right 1, result 0
   1194 4F                 6253 	ld	c,a
   1195 B7                 6254 	or	a,a
   1196 CA 94 15           6255 	jp	z,00164$
   1199                    6256 00198$:
                           6257 ;	game.c 912
                           6258 ;	genCmpEq
                           6259 ; genCmpEq: left 1, right 1, result 0
   1199 78                 6260 	ld	a,b
   119A FE 01              6261 	cp	a,#0x01
   119C C2 EA 14           6262 	jp	nz,00124$
   119F 18 03              6263 	jr	00200$
   11A1                    6264 00199$:
   11A1 C3 EA 14           6265 	jp	00124$
   11A4                    6266 00200$:
                           6267 ;	game.c 914
                           6268 ;	genAssign
   11A4 0E 02              6269 	ld	c,#0x02
                           6270 ;	game.c 917
                           6271 ;	genPlus
                           6272 ;	AOP_STK for _move_character_sloc0_1_0
                           6273 ;	AOP_STK for _move_character_sloc3_1_0
                           6274 ;	genPlusIncr
                           6275 ;	Can't optimise plus by inc, falling back to the normal way
   11A6 F8 0D              6276 	lda	hl,13(sp)
   11A8 5E                 6277 	ld	e,(hl)
   11A9 23                 6278 	inc	hl
   11AA 56                 6279 	ld	d,(hl)
   11AB 21 0A 00           6280 	ld	hl,#0x000A
   11AE 19                 6281 	add	hl,de
   11AF 7D                 6282 	ld	a,l
   11B0 54                 6283 	ld	d,h
   11B1 F8 07              6284 	lda	hl,7(sp)
                           6285 ;	genPointerGet
                           6286 ;	AOP_STK for _move_character_sloc3_1_0
                           6287 ;	AOP_STK for _move_character_sloc4_1_0
   11B3 22                 6288 	ld	(hl+),a
   11B4 72                 6289 	ld	(hl),d
   11B5 5F                 6290 	ld	e,a
   11B6 1A                 6291 	ld	a,(de)
   11B7 2B                 6292 	dec	hl
   11B8 2B                 6293 	dec	hl
                           6294 ;	genCmpEq
                           6295 ;	AOP_STK for _move_character_sloc4_1_0
                           6296 ; genCmpEq: left 1, right 1, result 0
   11B9 77                 6297 	ld      (hl),a
                           6298 ; Removed redundent load
   11BA FE 04              6299 	cp	a,#0x04
   11BC CA DC 11           6300 	jp	z,00105$
   11BF                    6301 00201$:
                           6302 ;	game.c 918
                           6303 ;	genCmpEq
                           6304 ;	AOP_STK for _move_character_sloc4_1_0
                           6305 ; genCmpEq: left 1, right 1, result 0
   11BF F8 06              6306 	lda	hl,6(sp)
   11C1 7E                 6307 	ld	a,(hl)
   11C2 FE 08              6308 	cp	a,#0x08
   11C4 CA DC 11           6309 	jp	z,00105$
   11C7                    6310 00202$:
                           6311 ;	game.c 919
                           6312 ;	genCmpEq
                           6313 ;	AOP_STK for _move_character_sloc4_1_0
                           6314 ; genCmpEq: left 1, right 1, result 0
   11C7 F8 06              6315 	lda	hl,6(sp)
   11C9 7E                 6316 	ld	a,(hl)
   11CA FE 0C              6317 	cp	a,#0x0C
   11CC CA DC 11           6318 	jp	z,00105$
   11CF                    6319 00203$:
                           6320 ;	game.c 920
                           6321 ;	genCmpEq
                           6322 ;	AOP_STK for _move_character_sloc4_1_0
                           6323 ; genCmpEq: left 1, right 1, result 0
   11CF F8 06              6324 	lda	hl,6(sp)
   11D1 7E                 6325 	ld	a,(hl)
   11D2 FE 10              6326 	cp	a,#0x10
   11D4 C2 37 12           6327 	jp	nz,00106$
   11D7 18 03              6328 	jr	00205$
   11D9                    6329 00204$:
   11D9 C3 37 12           6330 	jp	00106$
   11DC                    6331 00205$:
                           6332 ;	genLabel
   11DC                    6333 00105$:
                           6334 ;	game.c 922
                           6335 ;	genPlus
                           6336 ;	AOP_STK for _move_character_sloc0_1_0
                           6337 ;	AOP_STK for _move_character_sloc5_1_0
                           6338 ;	genPlusIncr
                           6339 ;	Can't optimise plus by inc, falling back to the normal way
   11DC F8 0D              6340 	lda	hl,13(sp)
   11DE 5E                 6341 	ld	e,(hl)
   11DF 23                 6342 	inc	hl
   11E0 56                 6343 	ld	d,(hl)
   11E1 21 08 00           6344 	ld	hl,#0x0008
   11E4 19                 6345 	add	hl,de
   11E5 7D                 6346 	ld	a,l
   11E6 54                 6347 	ld	d,h
   11E7 F8 04              6348 	lda	hl,4(sp)
                           6349 ;	genPointerGet
                           6350 ;	AOP_STK for _move_character_sloc5_1_0
                           6351 ;	AOP_STK for _move_character_sloc4_1_0
   11E9 22                 6352 	ld	(hl+),a
   11EA 72                 6353 	ld	(hl),d
   11EB 5F                 6354 	ld	e,a
   11EC 1A                 6355 	ld	a,(de)
   11ED 23                 6356 	inc	hl
   11EE 77                 6357 	ld	(hl),a
                           6358 ;	genPlus
                           6359 ;	AOP_STK for _move_character_sloc0_1_0
                           6360 ;	AOP_STK for _move_character_sloc5_1_0
                           6361 ;	genPlusIncr
                           6362 ;	Can't optimise plus by inc, falling back to the normal way
   11EF F8 0D              6363 	lda	hl,13(sp)
   11F1 5E                 6364 	ld	e,(hl)
   11F2 23                 6365 	inc	hl
   11F3 56                 6366 	ld	d,(hl)
   11F4 21 01 00           6367 	ld	hl,#0x0001
   11F7 19                 6368 	add	hl,de
   11F8 7D                 6369 	ld	a,l
   11F9 54                 6370 	ld	d,h
   11FA F8 04              6371 	lda	hl,4(sp)
                           6372 ;	genPointerGet
                           6373 ;	AOP_STK for _move_character_sloc5_1_0
                           6374 ;	AOP_STK for _move_character_sloc6_1_0
   11FC 22                 6375 	ld	(hl+),a
   11FD 72                 6376 	ld	(hl),d
   11FE 5F                 6377 	ld	e,a
   11FF 1A                 6378 	ld	a,(de)
   1200 2B                 6379 	dec	hl
   1201 2B                 6380 	dec	hl
   1202 77                 6381 	ld	(hl),a
                           6382 ;	genPointerGet
                           6383 ;	AOP_STK for _move_character_sloc0_1_0
                           6384 ;	AOP_STK for _move_character_sloc5_1_0
   1203 F8 0D              6385 	lda	hl,13(sp)
   1205 5E                 6386 	ld	e,(hl)
   1206 23                 6387 	inc	hl
   1207 56                 6388 	ld	d,(hl)
   1208 1A                 6389 	ld	a,(de)
   1209 F8 04              6390 	lda	hl,4(sp)
   120B 77                 6391 	ld	(hl),a
                           6392 ;	genIpush
                           6393 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   120C C5                 6394 	push	bc
                           6395 ;	AOP_STK for _move_character_sloc4_1_0
   120D 23                 6396 	inc	hl
   120E 23                 6397 	inc	hl
   120F 7E                 6398 	ld	a,(hl)
   1210 F5                 6399 	push	af
   1211 33                 6400 	inc	sp
                           6401 ;	genIpush
                           6402 ;	AOP_STK for _move_character_sloc6_1_0
   1212 F8 06              6403 	lda	hl,6(sp)
   1214 7E                 6404 	ld	a,(hl)
   1215 F5                 6405 	push	af
   1216 33                 6406 	inc	sp
                           6407 ;	genIpush
                           6408 ;	AOP_STK for _move_character_sloc5_1_0
   1217 23                 6409 	inc	hl
   1218 7E                 6410 	ld	a,(hl)
   1219 F5                 6411 	push	af
   121A 33                 6412 	inc	sp
                           6413 ;	genCall
   121B CD C1 0E           6414 	call	_can_move
                           6415 ;	AOP_STK for _move_character_sloc5_1_0
   121E F8 0A              6416 	lda	hl,10(sp)
   1220 72                 6417 	ld	(hl),d
   1221 2B                 6418 	dec	hl
   1222 73                 6419 	ld	(hl),e
   1223 E8 03              6420 	lda	sp,3(sp)
   1225 C1                 6421 	pop	bc
                           6422 ;	genIfx
                           6423 ;	AOP_STK for _move_character_sloc5_1_0
   1226 F8 04              6424 	lda	hl,4(sp)
   1228 2A                 6425 	ld	a,(hl+)
   1229 B6                 6426 	or	a,(hl)
   122A C2 37 12           6427 	jp	nz,00106$
                           6428 ;	game.c 923
                           6429 ;	genAssign (pointer)
                           6430 ;	AOP_STK for _move_character_sloc3_1_0
   122D 23                 6431 	inc	hl
   122E 23                 6432 	inc	hl
   122F 5E                 6433 	ld	e,(hl)
   1230 23                 6434 	inc	hl
   1231 56                 6435 	ld	d,(hl)
   1232 3E 01              6436 	ld	a,#0x01
   1234 12                 6437 	ld	(de),a
                           6438 ;	game.c 925
                           6439 ;	genAssign
   1235 0E 00              6440 	ld	c,#0x00
                           6441 ;	genLabel
   1237                    6442 00106$:
                           6443 ;	game.c 930
                           6444 ;	genPlus
                           6445 ;	AOP_STK for _move_character_sloc0_1_0
                           6446 ;	AOP_STK for _move_character_sloc5_1_0
                           6447 ;	genPlusIncr
                           6448 ;	Can't optimise plus by inc, falling back to the normal way
   1237 F8 0D              6449 	lda	hl,13(sp)
   1239 5E                 6450 	ld	e,(hl)
   123A 23                 6451 	inc	hl
   123B 56                 6452 	ld	d,(hl)
   123C 21 08 00           6453 	ld	hl,#0x0008
   123F 19                 6454 	add	hl,de
   1240 7D                 6455 	ld	a,l
   1241 54                 6456 	ld	d,h
   1242 F8 04              6457 	lda	hl,4(sp)
                           6458 ;	genPointerGet
                           6459 ;	AOP_STK for _move_character_sloc5_1_0
                           6460 ;	AOP_STK for _move_character_sloc6_1_0
   1244 22                 6461 	ld	(hl+),a
   1245 72                 6462 	ld	(hl),d
   1246 5F                 6463 	ld	e,a
   1247 1A                 6464 	ld	a,(de)
   1248 2B                 6465 	dec	hl
   1249 2B                 6466 	dec	hl
   124A 77                 6467 	ld	(hl),a
                           6468 ;	genCmpGt
                           6469 ;	AOP_STK for _move_character_sloc6_1_0
                           6470 ;	AOP_STK for _move_character_sloc5_1_0
   124B 3E 04              6471 	ld	a,#0x04
   124D 96                 6472 	sub	a,(hl)
   124E 3E 00              6473 	ld	a,#0x00
   1250 17                 6474 	rla
   1251 23                 6475 	inc	hl
   1252 77                 6476 	ld	(hl),a
                           6477 ;	genIfx
                           6478 ;	AOP_STK for _move_character_sloc5_1_0
   1253 AF                 6479 	xor	a,a
   1254 B6                 6480 	or	a,(hl)
   1255 C2 C0 13           6481 	jp	nz,00115$
                           6482 ;	genJumpTab
                           6483 ;	AOP_STK for _move_character_sloc6_1_0
   1258 2B                 6484 	dec	hl
   1259 5E                 6485 	ld	e,(hl)
   125A 16 00              6486 	ld	d,#0x00
   125C 21 63 12           6487 	ld	hl,#00206$
   125F 19                 6488 	add	hl,de
   1260 19                 6489 	add	hl,de
   1261 19                 6490 	add	hl,de
   1262 E9                 6491 	jp	(hl)
   1263                    6492 00206$:
   1263 C3 BA 13           6493 	jp	00114$
   1266 C3 0C 13           6494 	jp	00112$
   1269 C3 C2 12           6495 	jp	00111$
   126C C3 66 13           6496 	jp	00113$
   126F C3 72 12           6497 	jp	00110$
                           6498 ;	game.c 932
                           6499 ;	genLabel
   1272                    6500 00110$:
                           6501 ;	genPointerGet
                           6502 ;	AOP_STK for _move_character_sloc0_1_0
                           6503 ;	AOP_STK for _move_character_sloc4_1_0
   1272 F8 0D              6504 	lda	hl,13(sp)
   1274 5E                 6505 	ld	e,(hl)
   1275 23                 6506 	inc	hl
   1276 56                 6507 	ld	d,(hl)
   1277 1A                 6508 	ld	a,(de)
   1278 F8 06              6509 	lda	hl,6(sp)
                           6510 ;	genMinus
                           6511 ;	AOP_STK for _move_character_sloc4_1_0
                           6512 ;	AOP_STK for _move_character_sloc7_1_0
   127A 77                 6513 	ld      (hl),a
                           6514 ; Removed redundent load
   127B 91                 6515 	sub	a,c
   127C F8 02              6516 	lda	hl,2(sp)
   127E 77                 6517 	ld	(hl),a
                           6518 ;	genAssign (pointer)
                           6519 ;	AOP_STK for _move_character_sloc0_1_0
                           6520 ;	AOP_STK for _move_character_sloc7_1_0
   127F F8 0D              6521 	lda	hl,13(sp)
   1281 5E                 6522 	ld	e,(hl)
   1282 23                 6523 	inc	hl
   1283 56                 6524 	ld	d,(hl)
   1284 F8 02              6525 	lda	hl,2(sp)
   1286 7E                 6526 	ld	a,(hl)
   1287 12                 6527 	ld	(de),a
                           6528 ;	game.c 933
                           6529 ;	genPlus
                           6530 ;	AOP_STK for _move_character_sloc0_1_0
                           6531 ;	AOP_STK for _move_character_sloc8_1_0
                           6532 ;	genPlusIncr
                           6533 ;	Can't optimise plus by inc, falling back to the normal way
   1288 F8 0D              6534 	lda	hl,13(sp)
   128A 5E                 6535 	ld	e,(hl)
   128B 23                 6536 	inc	hl
   128C 56                 6537 	ld	d,(hl)
   128D 21 04 00           6538 	ld	hl,#0x0004
   1290 19                 6539 	add	hl,de
   1291 7D                 6540 	ld	a,l
   1292 54                 6541 	ld	d,h
   1293 F8 00              6542 	lda	hl,0(sp)
                           6543 ;	genPointerGet
                           6544 ;	AOP_STK for _move_character_sloc8_1_0
                           6545 ;	AOP_STK for _move_character_sloc7_1_0
   1295 22                 6546 	ld	(hl+),a
   1296 72                 6547 	ld	(hl),d
   1297 5F                 6548 	ld	e,a
   1298 1A                 6549 	ld	a,(de)
   1299 23                 6550 	inc	hl
   129A 77                 6551 	ld	(hl),a
                           6552 ;	genIpush
                           6553 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   129B C5                 6554 	push	bc
                           6555 ;	AOP_STK for _move_character_sloc7_1_0
   129C 7E                 6556 	ld	a,(hl)
   129D F5                 6557 	push	af
   129E 33                 6558 	inc	sp
                           6559 ;	genIpush
   129F 78                 6560 	ld	a,b
   12A0 F5                 6561 	push	af
   12A1 33                 6562 	inc	sp
                           6563 ;	genCall
   12A2 CD 00 00           6564 	call	_set_sprite_tile
   12A5 E8 02              6565 	lda	sp,2(sp)
   12A7 C1                 6566 	pop	bc
                           6567 ;	game.c 934
                           6568 ;	genPointerGet
                           6569 ;	AOP_STK for _move_character_sloc1_1_0
                           6570 ;	AOP_STK for _move_character_sloc8_1_0
   12A8 F8 0B              6571 	lda	hl,11(sp)
   12AA 5E                 6572 	ld	e,(hl)
   12AB 23                 6573 	inc	hl
   12AC 56                 6574 	ld	d,(hl)
   12AD 1A                 6575 	ld	a,(de)
   12AE F8 00              6576 	lda	hl,0(sp)
   12B0 77                 6577 	ld	(hl),a
                           6578 ;	genIpush
                           6579 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12B1 C5                 6580 	push	bc
   12B2 3E 20              6581 	ld	a,#0x20
   12B4 F5                 6582 	push	af
   12B5 33                 6583 	inc	sp
                           6584 ;	genIpush
                           6585 ;	AOP_STK for _move_character_sloc8_1_0
   12B6 7E                 6586 	ld	a,(hl)
   12B7 F5                 6587 	push	af
   12B8 33                 6588 	inc	sp
                           6589 ;	genCall
   12B9 CD 00 00           6590 	call	_set_sprite_prop
   12BC E8 02              6591 	lda	sp,2(sp)
   12BE C1                 6592 	pop	bc
                           6593 ;	game.c 935
                           6594 ;	genGoto
   12BF C3 C0 13           6595 	jp	00115$
                           6596 ;	game.c 937
                           6597 ;	genLabel
   12C2                    6598 00111$:
                           6599 ;	genPlus
                           6600 ;	AOP_STK for _move_character_sloc0_1_0
                           6601 ;	AOP_STK for _move_character_sloc8_1_0
                           6602 ;	genPlusIncr
                           6603 ;	Can't optimise plus by inc, falling back to the normal way
   12C2 F8 0D              6604 	lda	hl,13(sp)
   12C4 5E                 6605 	ld	e,(hl)
   12C5 23                 6606 	inc	hl
   12C6 56                 6607 	ld	d,(hl)
   12C7 21 04 00           6608 	ld	hl,#0x0004
   12CA 19                 6609 	add	hl,de
   12CB 7D                 6610 	ld	a,l
   12CC 54                 6611 	ld	d,h
   12CD F8 00              6612 	lda	hl,0(sp)
                           6613 ;	genPointerGet
                           6614 ;	AOP_STK for _move_character_sloc8_1_0
                           6615 ;	AOP_STK for _move_character_sloc7_1_0
   12CF 22                 6616 	ld	(hl+),a
   12D0 72                 6617 	ld	(hl),d
   12D1 5F                 6618 	ld	e,a
   12D2 1A                 6619 	ld	a,(de)
   12D3 23                 6620 	inc	hl
   12D4 77                 6621 	ld	(hl),a
                           6622 ;	genIpush
                           6623 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12D5 C5                 6624 	push	bc
                           6625 ;	AOP_STK for _move_character_sloc7_1_0
   12D6 7E                 6626 	ld	a,(hl)
   12D7 F5                 6627 	push	af
   12D8 33                 6628 	inc	sp
                           6629 ;	genIpush
   12D9 78                 6630 	ld	a,b
   12DA F5                 6631 	push	af
   12DB 33                 6632 	inc	sp
                           6633 ;	genCall
   12DC CD 00 00           6634 	call	_set_sprite_tile
   12DF E8 02              6635 	lda	sp,2(sp)
   12E1 C1                 6636 	pop	bc
                           6637 ;	game.c 938
                           6638 ;	genPointerGet
                           6639 ;	AOP_STK for _move_character_sloc1_1_0
                           6640 ;	AOP_STK for _move_character_sloc8_1_0
   12E2 F8 0B              6641 	lda	hl,11(sp)
   12E4 5E                 6642 	ld	e,(hl)
   12E5 23                 6643 	inc	hl
   12E6 56                 6644 	ld	d,(hl)
   12E7 1A                 6645 	ld	a,(de)
   12E8 F8 00              6646 	lda	hl,0(sp)
   12EA 77                 6647 	ld	(hl),a
                           6648 ;	genIpush
                           6649 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   12EB C5                 6650 	push	bc
   12EC 3E 00              6651 	ld	a,#0x00
   12EE F5                 6652 	push	af
   12EF 33                 6653 	inc	sp
                           6654 ;	genIpush
                           6655 ;	AOP_STK for _move_character_sloc8_1_0
   12F0 7E                 6656 	ld	a,(hl)
   12F1 F5                 6657 	push	af
   12F2 33                 6658 	inc	sp
                           6659 ;	genCall
   12F3 CD 00 00           6660 	call	_set_sprite_prop
   12F6 E8 02              6661 	lda	sp,2(sp)
   12F8 C1                 6662 	pop	bc
                           6663 ;	game.c 939
                           6664 ;	genPointerGet
                           6665 ;	AOP_STK for _move_character_sloc0_1_0
                           6666 ;	AOP_STK for _move_character_sloc8_1_0
   12F9 F8 0D              6667 	lda	hl,13(sp)
   12FB 5E                 6668 	ld	e,(hl)
   12FC 23                 6669 	inc	hl
   12FD 56                 6670 	ld	d,(hl)
   12FE 1A                 6671 	ld	a,(de)
   12FF F8 00              6672 	lda	hl,0(sp)
                           6673 ;	genPlus
                           6674 ;	AOP_STK for _move_character_sloc8_1_0
                           6675 ;	Can't optimise plus by inc, falling back to the normal way
   1301 77                 6676 	ld      (hl),a
                           6677 ; Removed redundent load
   1302 81                 6678 	add	a,c
                           6679 ;	genAssign (pointer)
                           6680 ;	AOP_STK for _move_character_sloc0_1_0
   1303 F8 0D              6681 	lda	hl,13(sp)
   1305 5E                 6682 	ld	e,(hl)
   1306 23                 6683 	inc	hl
   1307 56                 6684 	ld	d,(hl)
   1308 12                 6685 	ld	(de),a
                           6686 ;	game.c 940
                           6687 ;	genGoto
   1309 C3 C0 13           6688 	jp	00115$
                           6689 ;	game.c 942
                           6690 ;	genLabel
   130C                    6691 00112$:
                           6692 ;	genPlus
                           6693 ;	AOP_STK for _move_character_sloc0_1_0
                           6694 ;	AOP_STK for _move_character_sloc8_1_0
                           6695 ;	genPlusIncr
                           6696 ;	Can't optimise plus by inc, falling back to the normal way
   130C F8 0D              6697 	lda	hl,13(sp)
   130E 5E                 6698 	ld	e,(hl)
   130F 23                 6699 	inc	hl
   1310 56                 6700 	ld	d,(hl)
   1311 21 07 00           6701 	ld	hl,#0x0007
   1314 19                 6702 	add	hl,de
   1315 7D                 6703 	ld	a,l
   1316 54                 6704 	ld	d,h
   1317 F8 00              6705 	lda	hl,0(sp)
                           6706 ;	genPointerGet
                           6707 ;	AOP_STK for _move_character_sloc8_1_0
                           6708 ;	AOP_STK for _move_character_sloc7_1_0
   1319 22                 6709 	ld	(hl+),a
   131A 72                 6710 	ld	(hl),d
   131B 5F                 6711 	ld	e,a
   131C 1A                 6712 	ld	a,(de)
   131D 23                 6713 	inc	hl
   131E 77                 6714 	ld	(hl),a
                           6715 ;	genIpush
                           6716 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   131F C5                 6717 	push	bc
                           6718 ;	AOP_STK for _move_character_sloc7_1_0
   1320 7E                 6719 	ld	a,(hl)
   1321 F5                 6720 	push	af
   1322 33                 6721 	inc	sp
                           6722 ;	genIpush
   1323 78                 6723 	ld	a,b
   1324 F5                 6724 	push	af
   1325 33                 6725 	inc	sp
                           6726 ;	genCall
   1326 CD 00 00           6727 	call	_set_sprite_tile
   1329 E8 02              6728 	lda	sp,2(sp)
   132B C1                 6729 	pop	bc
                           6730 ;	game.c 943
                           6731 ;	genPointerGet
                           6732 ;	AOP_STK for _move_character_sloc1_1_0
                           6733 ;	AOP_STK for _move_character_sloc8_1_0
   132C F8 0B              6734 	lda	hl,11(sp)
   132E 5E                 6735 	ld	e,(hl)
   132F 23                 6736 	inc	hl
   1330 56                 6737 	ld	d,(hl)
   1331 1A                 6738 	ld	a,(de)
   1332 F8 00              6739 	lda	hl,0(sp)
   1334 77                 6740 	ld	(hl),a
                           6741 ;	genIpush
                           6742 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1335 C5                 6743 	push	bc
   1336 3E 20              6744 	ld	a,#0x20
   1338 F5                 6745 	push	af
   1339 33                 6746 	inc	sp
                           6747 ;	genIpush
                           6748 ;	AOP_STK for _move_character_sloc8_1_0
   133A 7E                 6749 	ld	a,(hl)
   133B F5                 6750 	push	af
   133C 33                 6751 	inc	sp
                           6752 ;	genCall
   133D CD 00 00           6753 	call	_set_sprite_prop
   1340 E8 02              6754 	lda	sp,2(sp)
   1342 C1                 6755 	pop	bc
                           6756 ;	game.c 944
                           6757 ;	genPlus
                           6758 ;	AOP_STK for _move_character_sloc0_1_0
                           6759 ;	AOP_STK for _move_character_sloc8_1_0
                           6760 ;	genPlusIncr
                           6761 ;	Can't optimise plus by inc, falling back to the normal way
   1343 F8 0D              6762 	lda	hl,13(sp)
   1345 5E                 6763 	ld	e,(hl)
   1346 23                 6764 	inc	hl
   1347 56                 6765 	ld	d,(hl)
   1348 21 01 00           6766 	ld	hl,#0x0001
   134B 19                 6767 	add	hl,de
   134C 7D                 6768 	ld	a,l
   134D 54                 6769 	ld	d,h
   134E F8 00              6770 	lda	hl,0(sp)
                           6771 ;	genPointerGet
                           6772 ;	AOP_STK for _move_character_sloc8_1_0
                           6773 ;	AOP_STK for _move_character_sloc7_1_0
   1350 22                 6774 	ld	(hl+),a
   1351 72                 6775 	ld	(hl),d
   1352 5F                 6776 	ld	e,a
   1353 1A                 6777 	ld	a,(de)
   1354 23                 6778 	inc	hl
                           6779 ;	genMinus
                           6780 ;	AOP_STK for _move_character_sloc7_1_0
                           6781 ;	AOP_STK for _move_character_sloc4_1_0
   1355 77                 6782 	ld      (hl),a
                           6783 ; Removed redundent load
   1356 91                 6784 	sub	a,c
   1357 F8 06              6785 	lda	hl,6(sp)
   1359 77                 6786 	ld	(hl),a
                           6787 ;	genAssign (pointer)
                           6788 ;	AOP_STK for _move_character_sloc8_1_0
                           6789 ;	AOP_STK for _move_character_sloc4_1_0
   135A F8 00              6790 	lda	hl,0(sp)
   135C 5E                 6791 	ld	e,(hl)
   135D 23                 6792 	inc	hl
   135E 56                 6793 	ld	d,(hl)
   135F F8 06              6794 	lda	hl,6(sp)
   1361 7E                 6795 	ld	a,(hl)
   1362 12                 6796 	ld	(de),a
                           6797 ;	game.c 945
                           6798 ;	genGoto
   1363 C3 C0 13           6799 	jp	00115$
                           6800 ;	game.c 947
                           6801 ;	genLabel
   1366                    6802 00113$:
                           6803 ;	genPlus
                           6804 ;	AOP_STK for _move_character_sloc0_1_0
                           6805 ;	AOP_STK for _move_character_sloc8_1_0
                           6806 ;	genPlusIncr
                           6807 ;	Can't optimise plus by inc, falling back to the normal way
   1366 F8 0D              6808 	lda	hl,13(sp)
   1368 5E                 6809 	ld	e,(hl)
   1369 23                 6810 	inc	hl
   136A 56                 6811 	ld	d,(hl)
   136B 21 07 00           6812 	ld	hl,#0x0007
   136E 19                 6813 	add	hl,de
   136F 7D                 6814 	ld	a,l
   1370 54                 6815 	ld	d,h
   1371 F8 00              6816 	lda	hl,0(sp)
                           6817 ;	genPointerGet
                           6818 ;	AOP_STK for _move_character_sloc8_1_0
                           6819 ;	AOP_STK for _move_character_sloc7_1_0
   1373 22                 6820 	ld	(hl+),a
   1374 72                 6821 	ld	(hl),d
   1375 5F                 6822 	ld	e,a
   1376 1A                 6823 	ld	a,(de)
   1377 23                 6824 	inc	hl
   1378 77                 6825 	ld	(hl),a
                           6826 ;	genIpush
                           6827 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1379 C5                 6828 	push	bc
                           6829 ;	AOP_STK for _move_character_sloc7_1_0
   137A 7E                 6830 	ld	a,(hl)
   137B F5                 6831 	push	af
   137C 33                 6832 	inc	sp
                           6833 ;	genIpush
   137D 78                 6834 	ld	a,b
   137E F5                 6835 	push	af
   137F 33                 6836 	inc	sp
                           6837 ;	genCall
   1380 CD 00 00           6838 	call	_set_sprite_tile
   1383 E8 02              6839 	lda	sp,2(sp)
   1385 C1                 6840 	pop	bc
                           6841 ;	game.c 948
                           6842 ;	genPointerGet
                           6843 ;	AOP_STK for _move_character_sloc1_1_0
                           6844 ;	AOP_STK for _move_character_sloc8_1_0
   1386 F8 0B              6845 	lda	hl,11(sp)
   1388 5E                 6846 	ld	e,(hl)
   1389 23                 6847 	inc	hl
   138A 56                 6848 	ld	d,(hl)
   138B 1A                 6849 	ld	a,(de)
   138C F8 00              6850 	lda	hl,0(sp)
   138E 77                 6851 	ld	(hl),a
                           6852 ;	genIpush
                           6853 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   138F C5                 6854 	push	bc
   1390 3E 40              6855 	ld	a,#0x40
   1392 F5                 6856 	push	af
   1393 33                 6857 	inc	sp
                           6858 ;	genIpush
                           6859 ;	AOP_STK for _move_character_sloc8_1_0
   1394 7E                 6860 	ld	a,(hl)
   1395 F5                 6861 	push	af
   1396 33                 6862 	inc	sp
                           6863 ;	genCall
   1397 CD 00 00           6864 	call	_set_sprite_prop
   139A E8 02              6865 	lda	sp,2(sp)
   139C C1                 6866 	pop	bc
                           6867 ;	game.c 949
                           6868 ;	genPlus
                           6869 ;	AOP_STK for _move_character_sloc0_1_0
                           6870 ;	AOP_STK for _move_character_sloc8_1_0
                           6871 ;	genPlusIncr
                           6872 ;	Can't optimise plus by inc, falling back to the normal way
   139D F8 0D              6873 	lda	hl,13(sp)
   139F 5E                 6874 	ld	e,(hl)
   13A0 23                 6875 	inc	hl
   13A1 56                 6876 	ld	d,(hl)
   13A2 21 01 00           6877 	ld	hl,#0x0001
   13A5 19                 6878 	add	hl,de
   13A6 7D                 6879 	ld	a,l
   13A7 54                 6880 	ld	d,h
   13A8 F8 00              6881 	lda	hl,0(sp)
                           6882 ;	genPointerGet
                           6883 ;	AOP_STK for _move_character_sloc8_1_0
                           6884 ;	AOP_STK for _move_character_sloc7_1_0
   13AA 22                 6885 	ld	(hl+),a
   13AB 72                 6886 	ld	(hl),d
   13AC 5F                 6887 	ld	e,a
   13AD 1A                 6888 	ld	a,(de)
   13AE 23                 6889 	inc	hl
                           6890 ;	genPlus
                           6891 ;	AOP_STK for _move_character_sloc7_1_0
                           6892 ;	Can't optimise plus by inc, falling back to the normal way
   13AF 77                 6893 	ld      (hl),a
                           6894 ; Removed redundent load
   13B0 81                 6895 	add	a,c
                           6896 ;	genAssign (pointer)
                           6897 ;	AOP_STK for _move_character_sloc8_1_0
   13B1 2B                 6898 	dec	hl
   13B2 2B                 6899 	dec	hl
   13B3 5E                 6900 	ld	e,(hl)
   13B4 23                 6901 	inc	hl
   13B5 56                 6902 	ld	d,(hl)
   13B6 12                 6903 	ld	(de),a
                           6904 ;	game.c 950
                           6905 ;	genGoto
   13B7 C3 C0 13           6906 	jp	00115$
                           6907 ;	game.c 952
                           6908 ;	genLabel
   13BA                    6909 00114$:
                           6910 ;	genCall
                           6911 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   13BA C5                 6912 	push	bc
   13BB CD AA 0F           6913 	call	_rotate_player
   13BE E1                 6914 	pop	hl
   13BF 44                 6915 	ld	b,h
                           6916 ;	game.c 954
                           6917 ;	genLabel
   13C0                    6918 00115$:
                           6919 ;	game.c 956
                           6920 ;	genPointerGet
                           6921 ;	AOP_STK for _move_character_sloc3_1_0
   13C0 F8 07              6922 	lda	hl,7(sp)
   13C2 5E                 6923 	ld	e,(hl)
   13C3 23                 6924 	inc	hl
   13C4 56                 6925 	ld	d,(hl)
   13C5 1A                 6926 	ld	a,(de)
   13C6 4F                 6927 	ld	c,a
                           6928 ;	genMinus
   13C7 0D                 6929 	dec	c
                           6930 ;	genAssign (pointer)
                           6931 ;	AOP_STK for _move_character_sloc3_1_0
   13C8 2B                 6932 	dec	hl
   13C9 5E                 6933 	ld	e,(hl)
   13CA 23                 6934 	inc	hl
   13CB 56                 6935 	ld	d,(hl)
   13CC 79                 6936 	ld	a,c
   13CD 12                 6937 	ld	(de),a
                           6938 ;	game.c 957
                           6939 ;	genCmpEq
                           6940 ; genCmpEq: left 1, right 1, result 0
   13CE 79                 6941 	ld	a,c
   13CF B7                 6942 	or	a,a
   13D0 C2 EA 14           6943 	jp	nz,00124$
   13D3 18 03              6944 	jr	00208$
   13D5                    6945 00207$:
   13D5 C3 EA 14           6946 	jp	00124$
   13D8                    6947 00208$:
                           6948 ;	game.c 958
                           6949 ;	genAssign (pointer)
                           6950 ;	AOP_STK for _move_character_sloc2_1_0
   13D8 F8 09              6951 	lda	hl,9(sp)
   13DA 5E                 6952 	ld	e,(hl)
   13DB 23                 6953 	inc	hl
   13DC 56                 6954 	ld	d,(hl)
   13DD 3E 00              6955 	ld	a,#0x00
   13DF 12                 6956 	ld	(de),a
                           6957 ;	game.c 959
                           6958 ;	genCmpLt
                           6959 ;	AOP_STK for _move_character_sloc6_1_0
   13E0 F8 03              6960 	lda	hl,3(sp)
   13E2 7E                 6961 	ld	a,(hl)
   13E3 FE 01              6962 	cp	#0x01
   13E5 DA EA 14           6963 	jp	c,00124$
                           6964 ;	genIfx
                           6965 ;	AOP_STK for _move_character_sloc5_1_0
   13E8 AF                 6966 	xor	a,a
   13E9 23                 6967 	inc	hl
   13EA B6                 6968 	or	a,(hl)
   13EB C2 EA 14           6969 	jp	nz,00124$
                           6970 ;	genMinus
                           6971 ;	AOP_STK for _move_character_sloc6_1_0
   13EE 2B                 6972 	dec	hl
   13EF 7E                 6973 	ld	a,(hl)
   13F0 C6 FF              6974 	add	a,#0xFF
   13F2 4F                 6975 	ld	c,a
                           6976 ;	genJumpTab
   13F3 59                 6977 	ld	e,c
   13F4 16 00              6978 	ld	d,#0x00
   13F6 21 FD 13           6979 	ld	hl,#00209$
   13F9 19                 6980 	add	hl,de
   13FA 19                 6981 	add	hl,de
   13FB 19                 6982 	add	hl,de
   13FC E9                 6983 	jp	(hl)
   13FD                    6984 00209$:
   13FD C3 7B 14           6985 	jp	00118$
   1400 C3 42 14           6986 	jp	00117$
   1403 C3 B4 14           6987 	jp	00119$
   1406 C3 09 14           6988 	jp	00116$
                           6989 ;	game.c 962
                           6990 ;	genLabel
   1409                    6991 00116$:
                           6992 ;	genPlus
                           6993 ;	AOP_STK for _move_character_sloc0_1_0
                           6994 ;	AOP_STK for _move_character_sloc8_1_0
                           6995 ;	genPlusIncr
                           6996 ;	Can't optimise plus by inc, falling back to the normal way
   1409 F8 0D              6997 	lda	hl,13(sp)
   140B 5E                 6998 	ld	e,(hl)
   140C 23                 6999 	inc	hl
   140D 56                 7000 	ld	d,(hl)
   140E 21 02 00           7001 	ld	hl,#0x0002
   1411 19                 7002 	add	hl,de
   1412 7D                 7003 	ld	a,l
   1413 54                 7004 	ld	d,h
   1414 F8 00              7005 	lda	hl,0(sp)
                           7006 ;	genPointerGet
                           7007 ;	AOP_STK for _move_character_sloc8_1_0
   1416 22                 7008 	ld	(hl+),a
   1417 72                 7009 	ld	(hl),d
   1418 5F                 7010 	ld	e,a
   1419 1A                 7011 	ld	a,(de)
   141A 4F                 7012 	ld	c,a
                           7013 ;	genIpush
                           7014 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   141B C5                 7015 	push	bc
   141C 79                 7016 	ld	a,c
   141D F5                 7017 	push	af
   141E 33                 7018 	inc	sp
                           7019 ;	genIpush
   141F 78                 7020 	ld	a,b
   1420 F5                 7021 	push	af
   1421 33                 7022 	inc	sp
                           7023 ;	genCall
   1422 CD 00 00           7024 	call	_set_sprite_tile
   1425 E8 02              7025 	lda	sp,2(sp)
   1427 E1                 7026 	pop	hl
   1428 44                 7027 	ld	b,h
                           7028 ;	game.c 963
                           7029 ;	genPointerGet
                           7030 ;	AOP_STK for _move_character_sloc1_1_0
   1429 F8 0B              7031 	lda	hl,11(sp)
   142B 5E                 7032 	ld	e,(hl)
   142C 23                 7033 	inc	hl
   142D 56                 7034 	ld	d,(hl)
   142E 1A                 7035 	ld	a,(de)
   142F 4F                 7036 	ld	c,a
                           7037 ;	genIpush
                           7038 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1430 C5                 7039 	push	bc
   1431 3E 20              7040 	ld	a,#0x20
   1433 F5                 7041 	push	af
   1434 33                 7042 	inc	sp
                           7043 ;	genIpush
   1435 79                 7044 	ld	a,c
   1436 F5                 7045 	push	af
   1437 33                 7046 	inc	sp
                           7047 ;	genCall
   1438 CD 00 00           7048 	call	_set_sprite_prop
   143B E8 02              7049 	lda	sp,2(sp)
   143D E1                 7050 	pop	hl
   143E 44                 7051 	ld	b,h
                           7052 ;	game.c 964
                           7053 ;	genGoto
   143F C3 EA 14           7054 	jp	00124$
                           7055 ;	game.c 967
                           7056 ;	genLabel
   1442                    7057 00117$:
                           7058 ;	genPlus
                           7059 ;	AOP_STK for _move_character_sloc0_1_0
                           7060 ;	AOP_STK for _move_character_sloc8_1_0
                           7061 ;	genPlusIncr
                           7062 ;	Can't optimise plus by inc, falling back to the normal way
   1442 F8 0D              7063 	lda	hl,13(sp)
   1444 5E                 7064 	ld	e,(hl)
   1445 23                 7065 	inc	hl
   1446 56                 7066 	ld	d,(hl)
   1447 21 02 00           7067 	ld	hl,#0x0002
   144A 19                 7068 	add	hl,de
   144B 7D                 7069 	ld	a,l
   144C 54                 7070 	ld	d,h
   144D F8 00              7071 	lda	hl,0(sp)
                           7072 ;	genPointerGet
                           7073 ;	AOP_STK for _move_character_sloc8_1_0
   144F 22                 7074 	ld	(hl+),a
   1450 72                 7075 	ld	(hl),d
   1451 5F                 7076 	ld	e,a
   1452 1A                 7077 	ld	a,(de)
   1453 4F                 7078 	ld	c,a
                           7079 ;	genIpush
                           7080 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1454 C5                 7081 	push	bc
   1455 79                 7082 	ld	a,c
   1456 F5                 7083 	push	af
   1457 33                 7084 	inc	sp
                           7085 ;	genIpush
   1458 78                 7086 	ld	a,b
   1459 F5                 7087 	push	af
   145A 33                 7088 	inc	sp
                           7089 ;	genCall
   145B CD 00 00           7090 	call	_set_sprite_tile
   145E E8 02              7091 	lda	sp,2(sp)
   1460 E1                 7092 	pop	hl
   1461 44                 7093 	ld	b,h
                           7094 ;	game.c 968
                           7095 ;	genPointerGet
                           7096 ;	AOP_STK for _move_character_sloc1_1_0
   1462 F8 0B              7097 	lda	hl,11(sp)
   1464 5E                 7098 	ld	e,(hl)
   1465 23                 7099 	inc	hl
   1466 56                 7100 	ld	d,(hl)
   1467 1A                 7101 	ld	a,(de)
   1468 4F                 7102 	ld	c,a
                           7103 ;	genIpush
                           7104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1469 C5                 7105 	push	bc
   146A 3E 00              7106 	ld	a,#0x00
   146C F5                 7107 	push	af
   146D 33                 7108 	inc	sp
                           7109 ;	genIpush
   146E 79                 7110 	ld	a,c
   146F F5                 7111 	push	af
   1470 33                 7112 	inc	sp
                           7113 ;	genCall
   1471 CD 00 00           7114 	call	_set_sprite_prop
   1474 E8 02              7115 	lda	sp,2(sp)
   1476 E1                 7116 	pop	hl
   1477 44                 7117 	ld	b,h
                           7118 ;	game.c 969
                           7119 ;	genGoto
   1478 C3 EA 14           7120 	jp	00124$
                           7121 ;	game.c 971
                           7122 ;	genLabel
   147B                    7123 00118$:
                           7124 ;	genPlus
                           7125 ;	AOP_STK for _move_character_sloc0_1_0
                           7126 ;	AOP_STK for _move_character_sloc8_1_0
                           7127 ;	genPlusIncr
                           7128 ;	Can't optimise plus by inc, falling back to the normal way
   147B F8 0D              7129 	lda	hl,13(sp)
   147D 5E                 7130 	ld	e,(hl)
   147E 23                 7131 	inc	hl
   147F 56                 7132 	ld	d,(hl)
   1480 21 05 00           7133 	ld	hl,#0x0005
   1483 19                 7134 	add	hl,de
   1484 7D                 7135 	ld	a,l
   1485 54                 7136 	ld	d,h
   1486 F8 00              7137 	lda	hl,0(sp)
                           7138 ;	genPointerGet
                           7139 ;	AOP_STK for _move_character_sloc8_1_0
   1488 22                 7140 	ld	(hl+),a
   1489 72                 7141 	ld	(hl),d
   148A 5F                 7142 	ld	e,a
   148B 1A                 7143 	ld	a,(de)
   148C 4F                 7144 	ld	c,a
                           7145 ;	genIpush
                           7146 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   148D C5                 7147 	push	bc
   148E 79                 7148 	ld	a,c
   148F F5                 7149 	push	af
   1490 33                 7150 	inc	sp
                           7151 ;	genIpush
   1491 78                 7152 	ld	a,b
   1492 F5                 7153 	push	af
   1493 33                 7154 	inc	sp
                           7155 ;	genCall
   1494 CD 00 00           7156 	call	_set_sprite_tile
   1497 E8 02              7157 	lda	sp,2(sp)
   1499 E1                 7158 	pop	hl
   149A 44                 7159 	ld	b,h
                           7160 ;	game.c 972
                           7161 ;	genPointerGet
                           7162 ;	AOP_STK for _move_character_sloc1_1_0
   149B F8 0B              7163 	lda	hl,11(sp)
   149D 5E                 7164 	ld	e,(hl)
   149E 23                 7165 	inc	hl
   149F 56                 7166 	ld	d,(hl)
   14A0 1A                 7167 	ld	a,(de)
   14A1 4F                 7168 	ld	c,a
                           7169 ;	genIpush
                           7170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14A2 C5                 7171 	push	bc
   14A3 3E 20              7172 	ld	a,#0x20
   14A5 F5                 7173 	push	af
   14A6 33                 7174 	inc	sp
                           7175 ;	genIpush
   14A7 79                 7176 	ld	a,c
   14A8 F5                 7177 	push	af
   14A9 33                 7178 	inc	sp
                           7179 ;	genCall
   14AA CD 00 00           7180 	call	_set_sprite_prop
   14AD E8 02              7181 	lda	sp,2(sp)
   14AF E1                 7182 	pop	hl
   14B0 44                 7183 	ld	b,h
                           7184 ;	game.c 973
                           7185 ;	genGoto
   14B1 C3 EA 14           7186 	jp	00124$
                           7187 ;	game.c 975
                           7188 ;	genLabel
   14B4                    7189 00119$:
                           7190 ;	genPlus
                           7191 ;	AOP_STK for _move_character_sloc0_1_0
                           7192 ;	AOP_STK for _move_character_sloc8_1_0
                           7193 ;	genPlusIncr
                           7194 ;	Can't optimise plus by inc, falling back to the normal way
   14B4 F8 0D              7195 	lda	hl,13(sp)
   14B6 5E                 7196 	ld	e,(hl)
   14B7 23                 7197 	inc	hl
   14B8 56                 7198 	ld	d,(hl)
   14B9 21 05 00           7199 	ld	hl,#0x0005
   14BC 19                 7200 	add	hl,de
   14BD 7D                 7201 	ld	a,l
   14BE 54                 7202 	ld	d,h
   14BF F8 00              7203 	lda	hl,0(sp)
                           7204 ;	genPointerGet
                           7205 ;	AOP_STK for _move_character_sloc8_1_0
   14C1 22                 7206 	ld	(hl+),a
   14C2 72                 7207 	ld	(hl),d
   14C3 5F                 7208 	ld	e,a
   14C4 1A                 7209 	ld	a,(de)
   14C5 4F                 7210 	ld	c,a
                           7211 ;	genIpush
                           7212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14C6 C5                 7213 	push	bc
   14C7 79                 7214 	ld	a,c
   14C8 F5                 7215 	push	af
   14C9 33                 7216 	inc	sp
                           7217 ;	genIpush
   14CA 78                 7218 	ld	a,b
   14CB F5                 7219 	push	af
   14CC 33                 7220 	inc	sp
                           7221 ;	genCall
   14CD CD 00 00           7222 	call	_set_sprite_tile
   14D0 E8 02              7223 	lda	sp,2(sp)
   14D2 E1                 7224 	pop	hl
   14D3 44                 7225 	ld	b,h
                           7226 ;	game.c 976
                           7227 ;	genPointerGet
                           7228 ;	AOP_STK for _move_character_sloc1_1_0
   14D4 F8 0B              7229 	lda	hl,11(sp)
   14D6 5E                 7230 	ld	e,(hl)
   14D7 23                 7231 	inc	hl
   14D8 56                 7232 	ld	d,(hl)
   14D9 1A                 7233 	ld	a,(de)
   14DA 4F                 7234 	ld	c,a
                           7235 ;	genIpush
                           7236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14DB C5                 7237 	push	bc
   14DC 3E 40              7238 	ld	a,#0x40
   14DE F5                 7239 	push	af
   14DF 33                 7240 	inc	sp
                           7241 ;	genIpush
   14E0 79                 7242 	ld	a,c
   14E1 F5                 7243 	push	af
   14E2 33                 7244 	inc	sp
                           7245 ;	genCall
   14E3 CD 00 00           7246 	call	_set_sprite_prop
   14E6 E8 02              7247 	lda	sp,2(sp)
   14E8 E1                 7248 	pop	hl
   14E9 44                 7249 	ld	b,h
                           7250 ;	game.c 978
                           7251 ;	genLabel
   14EA                    7252 00124$:
                           7253 ;	game.c 984
                           7254 ;	genCmpEq
                           7255 ; genCmpEq: left 1, right 1, result 0
   14EA 78                 7256 	ld	a,b
   14EB FE 02              7257 	cp	a,#0x02
   14ED C2 48 19           7258 	jp	nz,00165$
   14F0 18 03              7259 	jr	00211$
   14F2                    7260 00210$:
   14F2 C3 48 19           7261 	jp	00165$
   14F5                    7262 00211$:
                           7263 ;	game.c 985
                           7264 ;	genPlus
                           7265 ;	AOP_STK for _move_character_sloc0_1_0
                           7266 ;	AOP_STK for _move_character_sloc8_1_0
                           7267 ;	genPlusIncr
                           7268 ;	Can't optimise plus by inc, falling back to the normal way
   14F5 F8 0D              7269 	lda	hl,13(sp)
   14F7 5E                 7270 	ld	e,(hl)
   14F8 23                 7271 	inc	hl
   14F9 56                 7272 	ld	d,(hl)
   14FA 21 04 00           7273 	ld	hl,#0x0004
   14FD 19                 7274 	add	hl,de
   14FE 7D                 7275 	ld	a,l
   14FF 54                 7276 	ld	d,h
   1500 F8 00              7277 	lda	hl,0(sp)
                           7278 ;	genPointerGet
                           7279 ;	AOP_STK for _move_character_sloc8_1_0
   1502 22                 7280 	ld	(hl+),a
   1503 72                 7281 	ld	(hl),d
   1504 5F                 7282 	ld	e,a
   1505 1A                 7283 	ld	a,(de)
   1506 4F                 7284 	ld	c,a
                           7285 ;	genIpush
                           7286 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1507 C5                 7287 	push	bc
   1508 79                 7288 	ld	a,c
   1509 F5                 7289 	push	af
   150A 33                 7290 	inc	sp
                           7291 ;	genIpush
   150B 78                 7292 	ld	a,b
   150C F5                 7293 	push	af
   150D 33                 7294 	inc	sp
                           7295 ;	genCall
   150E CD 00 00           7296 	call	_set_sprite_tile
   1511 E8 02              7297 	lda	sp,2(sp)
   1513 E1                 7298 	pop	hl
   1514 44                 7299 	ld	b,h
                           7300 ;	game.c 987
                           7301 ;	genPointerGet
                           7302 ;	AOP_STK for _move_character_sloc2_1_0
   1515 F8 09              7303 	lda	hl,9(sp)
   1517 5E                 7304 	ld	e,(hl)
   1518 23                 7305 	inc	hl
   1519 56                 7306 	ld	d,(hl)
   151A 1A                 7307 	ld	a,(de)
                           7308 ;	genCmpEq
                           7309 ; genCmpEq: left 1, right 1, result 0
   151B 4F                 7310 	ld	c,a
   151C FE 01              7311 	cp	a,#0x01
   151E C2 3D 15           7312 	jp	nz,00126$
   1521 18 03              7313 	jr	00213$
   1523                    7314 00212$:
   1523 C3 3D 15           7315 	jp	00126$
   1526                    7316 00213$:
                           7317 ;	game.c 989
                           7318 ;	genAssign (pointer)
                           7319 ;	AOP_STK for _move_character_sloc2_1_0
   1526 F8 09              7320 	lda	hl,9(sp)
   1528 5E                 7321 	ld	e,(hl)
   1529 23                 7322 	inc	hl
   152A 56                 7323 	ld	d,(hl)
   152B 3E 02              7324 	ld	a,#0x02
   152D 12                 7325 	ld	(de),a
                           7326 ;	game.c 990
                           7327 ;	genPlus
                           7328 ;	AOP_STK for _move_character_sloc0_1_0
                           7329 ;	genPlusIncr
                           7330 ;	Can't optimise plus by inc, falling back to the normal way
   152E F8 0D              7331 	lda	hl,13(sp)
   1530 5E                 7332 	ld	e,(hl)
   1531 23                 7333 	inc	hl
   1532 56                 7334 	ld	d,(hl)
   1533 21 0A 00           7335 	ld	hl,#0x000A
   1536 19                 7336 	add	hl,de
   1537 7D                 7337 	ld	a,l
   1538 54                 7338 	ld	d,h
   1539 6F                 7339 	ld	l,a
   153A 62                 7340 	ld	h,d
                           7341 ;	genAssign (pointer)
   153B 36 10              7342 	ld	(hl),#0x10
                           7343 ;	genLabel
   153D                    7344 00126$:
                           7345 ;	game.c 992
                           7346 ;	genPlus
                           7347 ;	AOP_STK for _move_character_sloc0_1_0
                           7348 ;	AOP_STK for _move_character_sloc8_1_0
                           7349 ;	genPlusIncr
                           7350 ;	Can't optimise plus by inc, falling back to the normal way
   153D F8 0D              7351 	lda	hl,13(sp)
   153F 5E                 7352 	ld	e,(hl)
   1540 23                 7353 	inc	hl
   1541 56                 7354 	ld	d,(hl)
   1542 21 0A 00           7355 	ld	hl,#0x000A
   1545 19                 7356 	add	hl,de
   1546 7D                 7357 	ld	a,l
   1547 54                 7358 	ld	d,h
   1548 F8 00              7359 	lda	hl,0(sp)
                           7360 ;	genPointerGet
                           7361 ;	AOP_STK for _move_character_sloc8_1_0
   154A 22                 7362 	ld	(hl+),a
   154B 72                 7363 	ld	(hl),d
   154C 5F                 7364 	ld	e,a
   154D 1A                 7365 	ld	a,(de)
   154E 4F                 7366 	ld	c,a
                           7367 ;	genMinus
   154F 0D                 7368 	dec	c
                           7369 ;	genAssign (pointer)
                           7370 ;	AOP_STK for _move_character_sloc8_1_0
   1550 2B                 7371 	dec	hl
   1551 5E                 7372 	ld	e,(hl)
   1552 23                 7373 	inc	hl
   1553 56                 7374 	ld	d,(hl)
   1554 79                 7375 	ld	a,c
   1555 12                 7376 	ld	(de),a
                           7377 ;	game.c 994
                           7378 ;	genCmpEq
                           7379 ; genCmpEq: left 1, right 1, result 0
   1556 79                 7380 	ld	a,c
   1557 B7                 7381 	or	a,a
   1558 C2 48 19           7382 	jp	nz,00165$
   155B 18 03              7383 	jr	00215$
   155D                    7384 00214$:
   155D C3 48 19           7385 	jp	00165$
   1560                    7386 00215$:
                           7387 ;	game.c 995
                           7388 ;	genAssign (pointer)
                           7389 ;	AOP_STK for _move_character_sloc2_1_0
   1560 F8 09              7390 	lda	hl,9(sp)
   1562 5E                 7391 	ld	e,(hl)
   1563 23                 7392 	inc	hl
   1564 56                 7393 	ld	d,(hl)
   1565 3E 00              7394 	ld	a,#0x00
   1567 12                 7395 	ld	(de),a
                           7396 ;	game.c 996
                           7397 ;	genPlus
                           7398 ;	AOP_STK for _move_character_sloc0_1_0
                           7399 ;	AOP_STK for _move_character_sloc8_1_0
                           7400 ;	genPlusIncr
                           7401 ;	Can't optimise plus by inc, falling back to the normal way
   1568 F8 0D              7402 	lda	hl,13(sp)
   156A 5E                 7403 	ld	e,(hl)
   156B 23                 7404 	inc	hl
   156C 56                 7405 	ld	d,(hl)
   156D 21 02 00           7406 	ld	hl,#0x0002
   1570 19                 7407 	add	hl,de
   1571 7D                 7408 	ld	a,l
   1572 54                 7409 	ld	d,h
   1573 F8 00              7410 	lda	hl,0(sp)
                           7411 ;	genPointerGet
                           7412 ;	AOP_STK for _move_character_sloc8_1_0
   1575 22                 7413 	ld	(hl+),a
   1576 72                 7414 	ld	(hl),d
   1577 5F                 7415 	ld	e,a
   1578 1A                 7416 	ld	a,(de)
   1579 4F                 7417 	ld	c,a
                           7418 ;	genPointerGet
                           7419 ;	AOP_STK for _move_character_sloc1_1_0
                           7420 ;	AOP_STK for _move_character_sloc8_1_0
   157A F8 0B              7421 	lda	hl,11(sp)
   157C 5E                 7422 	ld	e,(hl)
   157D 23                 7423 	inc	hl
   157E 56                 7424 	ld	d,(hl)
   157F 1A                 7425 	ld	a,(de)
   1580 F8 00              7426 	lda	hl,0(sp)
   1582 77                 7427 	ld	(hl),a
                           7428 ;	genIpush
                           7429 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1583 C5                 7430 	push	bc
   1584 79                 7431 	ld	a,c
   1585 F5                 7432 	push	af
   1586 33                 7433 	inc	sp
                           7434 ;	genIpush
                           7435 ;	AOP_STK for _move_character_sloc8_1_0
   1587 7E                 7436 	ld	a,(hl)
   1588 F5                 7437 	push	af
   1589 33                 7438 	inc	sp
                           7439 ;	genCall
   158A CD 00 00           7440 	call	_set_sprite_tile
   158D E8 02              7441 	lda	sp,2(sp)
   158F E1                 7442 	pop	hl
   1590 44                 7443 	ld	b,h
                           7444 ;	genGoto
   1591 C3 48 19           7445 	jp	00165$
                           7446 ;	genLabel
   1594                    7447 00164$:
                           7448 ;	game.c 1005
                           7449 ;	genCmpEq
                           7450 ;	AOP_HL for _input_timer
                           7451 ; genCmpEq: left 1, right 1, result 0
   1594 21 03 19           7452 	ld	hl,#_input_timer
   1597 7E                 7453 	ld	a,(hl)
   1598 FE 04              7454 	cp	a,#0x04
   159A C2 F6 15           7455 	jp	nz,00134$
   159D 18 03              7456 	jr	00217$
   159F                    7457 00216$:
   159F C3 F6 15           7458 	jp	00134$
   15A2                    7459 00217$:
                           7460 ;	game.c 1006
                           7461 ;	genPlus
                           7462 ;	AOP_STK for _move_character_sloc0_1_0
                           7463 ;	AOP_STK for _move_character_sloc8_1_0
                           7464 ;	genPlusIncr
                           7465 ;	Can't optimise plus by inc, falling back to the normal way
   15A2 F8 0D              7466 	lda	hl,13(sp)
   15A4 5E                 7467 	ld	e,(hl)
   15A5 23                 7468 	inc	hl
   15A6 56                 7469 	ld	d,(hl)
   15A7 21 08 00           7470 	ld	hl,#0x0008
   15AA 19                 7471 	add	hl,de
   15AB 7D                 7472 	ld	a,l
   15AC 54                 7473 	ld	d,h
   15AD F8 00              7474 	lda	hl,0(sp)
                           7475 ;	genPointerGet
                           7476 ;	AOP_STK for _move_character_sloc8_1_0
   15AF 22                 7477 	ld	(hl+),a
   15B0 72                 7478 	ld	(hl),d
   15B1 5F                 7479 	ld	e,a
   15B2 1A                 7480 	ld	a,(de)
   15B3 4F                 7481 	ld	c,a
                           7482 ;	genPlus
                           7483 ;	AOP_STK for _move_character_sloc0_1_0
                           7484 ;	AOP_STK for _move_character_sloc8_1_0
                           7485 ;	genPlusIncr
                           7486 ;	Can't optimise plus by inc, falling back to the normal way
   15B4 F8 0D              7487 	lda	hl,13(sp)
   15B6 5E                 7488 	ld	e,(hl)
   15B7 23                 7489 	inc	hl
   15B8 56                 7490 	ld	d,(hl)
   15B9 21 01 00           7491 	ld	hl,#0x0001
   15BC 19                 7492 	add	hl,de
   15BD 7D                 7493 	ld	a,l
   15BE 54                 7494 	ld	d,h
   15BF F8 00              7495 	lda	hl,0(sp)
                           7496 ;	genPointerGet
                           7497 ;	AOP_STK for _move_character_sloc8_1_0
                           7498 ;	AOP_STK for _move_character_sloc7_1_0
   15C1 22                 7499 	ld	(hl+),a
   15C2 72                 7500 	ld	(hl),d
   15C3 5F                 7501 	ld	e,a
   15C4 1A                 7502 	ld	a,(de)
   15C5 23                 7503 	inc	hl
   15C6 77                 7504 	ld	(hl),a
                           7505 ;	genPointerGet
                           7506 ;	AOP_STK for _move_character_sloc0_1_0
                           7507 ;	AOP_STK for _move_character_sloc8_1_0
   15C7 F8 0D              7508 	lda	hl,13(sp)
   15C9 5E                 7509 	ld	e,(hl)
   15CA 23                 7510 	inc	hl
   15CB 56                 7511 	ld	d,(hl)
   15CC 1A                 7512 	ld	a,(de)
   15CD F8 00              7513 	lda	hl,0(sp)
   15CF 77                 7514 	ld	(hl),a
                           7515 ;	genIpush
                           7516 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   15D0 C5                 7517 	push	bc
   15D1 79                 7518 	ld	a,c
   15D2 F5                 7519 	push	af
   15D3 33                 7520 	inc	sp
                           7521 ;	genIpush
                           7522 ;	AOP_STK for _move_character_sloc7_1_0
   15D4 23                 7523 	inc	hl
   15D5 23                 7524 	inc	hl
   15D6 7E                 7525 	ld	a,(hl)
   15D7 F5                 7526 	push	af
   15D8 33                 7527 	inc	sp
                           7528 ;	genIpush
                           7529 ;	AOP_STK for _move_character_sloc8_1_0
   15D9 2B                 7530 	dec	hl
   15DA 2B                 7531 	dec	hl
   15DB 7E                 7532 	ld	a,(hl)
   15DC F5                 7533 	push	af
   15DD 33                 7534 	inc	sp
                           7535 ;	genCall
   15DE CD C1 0E           7536 	call	_can_move
                           7537 ;	AOP_STK for _move_character_sloc8_1_0
   15E1 F8 06              7538 	lda	hl,6(sp)
   15E3 72                 7539 	ld	(hl),d
   15E4 2B                 7540 	dec	hl
   15E5 73                 7541 	ld	(hl),e
   15E6 E8 03              7542 	lda	sp,3(sp)
   15E8 E1                 7543 	pop	hl
   15E9 44                 7544 	ld	b,h
                           7545 ;	genIfx
                           7546 ;	AOP_STK for _move_character_sloc8_1_0
   15EA F8 00              7547 	lda	hl,0(sp)
   15EC 2A                 7548 	ld	a,(hl+)
   15ED B6                 7549 	or	a,(hl)
   15EE C2 F6 15           7550 	jp	nz,00134$
                           7551 ;	game.c 1007
                           7552 ;	genAssign
                           7553 ;	AOP_HL for _input_timer
   15F1 21 03 19           7554 	ld	hl,#_input_timer
   15F4 36 00              7555 	ld	(hl),#0x00
                           7556 ;	genLabel
   15F6                    7557 00134$:
                           7558 ;	game.c 1015
                           7559 ;	genPlus
                           7560 ;	AOP_STK for _move_character_sloc0_1_0
                           7561 ;	AOP_STK for _move_character_sloc8_1_0
                           7562 ;	genPlusIncr
                           7563 ;	Can't optimise plus by inc, falling back to the normal way
   15F6 F8 0D              7564 	lda	hl,13(sp)
   15F8 5E                 7565 	ld	e,(hl)
   15F9 23                 7566 	inc	hl
   15FA 56                 7567 	ld	d,(hl)
   15FB 21 08 00           7568 	ld	hl,#0x0008
   15FE 19                 7569 	add	hl,de
   15FF 7D                 7570 	ld	a,l
   1600 54                 7571 	ld	d,h
   1601 F8 00              7572 	lda	hl,0(sp)
                           7573 ;	genPointerGet
                           7574 ;	AOP_STK for _move_character_sloc8_1_0
   1603 22                 7575 	ld	(hl+),a
   1604 72                 7576 	ld	(hl),d
   1605 5F                 7577 	ld	e,a
   1606 1A                 7578 	ld	a,(de)
                           7579 ;	genCmpLt
                           7580 ;	AOP_STK for _move_character_sloc8_1_0
   1607 4F                 7581 	ld	c,a
   1608 FE 01              7582 	cp	#0x01
   160A 3E 00              7583 	ld	a,#0x00
   160C 17                 7584 	rla
   160D 2B                 7585 	dec	hl
   160E 77                 7586 	ld	(hl),a
                           7587 ;	genIfx
                           7588 ;	AOP_STK for _move_character_sloc8_1_0
   160F AF                 7589 	xor	a,a
   1610 B6                 7590 	or	a,(hl)
   1611 C2 C3 18           7591 	jp	nz,00155$
                           7592 ;	genCmpGt
   1614 3E 04              7593 	ld	a,#0x04
   1616 91                 7594 	sub	a,c
   1617 DA C3 18           7595 	jp	c,00155$
                           7596 ;	genMinus
                           7597 ;	AOP_STK for _move_character_sloc7_1_0
   161A 79                 7598 	ld	a,c
   161B C6 FF              7599 	add	a,#0xFF
   161D 23                 7600 	inc	hl
   161E 23                 7601 	inc	hl
                           7602 ;	genJumpTab
                           7603 ;	AOP_STK for _move_character_sloc7_1_0
   161F 77                 7604 	ld      (hl),a
   1620 5F                 7605 	ld      e,a
   1621 16 00              7606 	ld	d,#0x00
   1623 21 2A 16           7607 	ld	hl,#00218$
   1626 19                 7608 	add	hl,de
   1627 19                 7609 	add	hl,de
   1628 19                 7610 	add	hl,de
   1629 E9                 7611 	jp	(hl)
   162A                    7612 00218$:
   162A C3 7E 17           7613 	jp	00145$
   162D C3 DA 16           7614 	jp	00140$
   1630 C3 22 18           7615 	jp	00150$
   1633 C3 36 16           7616 	jp	00135$
                           7617 ;	game.c 1018
                           7618 ;	genLabel
   1636                    7619 00135$:
                           7620 ;	genPlus
                           7621 ;	AOP_STK for _move_character_sloc0_1_0
                           7622 ;	AOP_STK for _move_character_sloc5_1_0
                           7623 ;	genPlusIncr
                           7624 ;	Can't optimise plus by inc, falling back to the normal way
   1636 F8 0D              7625 	lda	hl,13(sp)
   1638 5E                 7626 	ld	e,(hl)
   1639 23                 7627 	inc	hl
   163A 56                 7628 	ld	d,(hl)
   163B 21 02 00           7629 	ld	hl,#0x0002
   163E 19                 7630 	add	hl,de
   163F 7D                 7631 	ld	a,l
   1640 54                 7632 	ld	d,h
   1641 F8 04              7633 	lda	hl,4(sp)
                           7634 ;	genPointerGet
                           7635 ;	AOP_STK for _move_character_sloc5_1_0
                           7636 ;	AOP_STK for _move_character_sloc7_1_0
   1643 22                 7637 	ld	(hl+),a
   1644 72                 7638 	ld	(hl),d
   1645 5F                 7639 	ld	e,a
   1646 1A                 7640 	ld	a,(de)
   1647 F8 02              7641 	lda	hl,2(sp)
   1649 77                 7642 	ld	(hl),a
                           7643 ;	genIpush
                           7644 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   164A C5                 7645 	push	bc
                           7646 ;	AOP_STK for _move_character_sloc7_1_0
   164B 7E                 7647 	ld	a,(hl)
   164C F5                 7648 	push	af
   164D 33                 7649 	inc	sp
                           7650 ;	genIpush
   164E 78                 7651 	ld	a,b
   164F F5                 7652 	push	af
   1650 33                 7653 	inc	sp
                           7654 ;	genCall
   1651 CD 00 00           7655 	call	_set_sprite_tile
   1654 E8 02              7656 	lda	sp,2(sp)
   1656 C1                 7657 	pop	bc
                           7658 ;	game.c 1019
                           7659 ;	genCmpEq
                           7660 ;	AOP_HL for _input_timer
                           7661 ; genCmpEq: left 1, right 1, result 0
   1657 21 03 19           7662 	ld	hl,#_input_timer
   165A 7E                 7663 	ld	a,(hl)
   165B FE 04              7664 	cp	a,#0x04
   165D C2 91 16           7665 	jp	nz,00137$
   1660 18 03              7666 	jr	00220$
   1662                    7667 00219$:
   1662 C3 91 16           7668 	jp	00137$
   1665                    7669 00220$:
                           7670 ;	game.c 1020
                           7671 ;	genPlus
                           7672 ;	AOP_STK for _move_character_sloc0_1_0
                           7673 ;	AOP_STK for _move_character_sloc3_1_0
                           7674 ;	genPlusIncr
                           7675 ;	Can't optimise plus by inc, falling back to the normal way
   1665 F8 0D              7676 	lda	hl,13(sp)
   1667 5E                 7677 	ld	e,(hl)
   1668 23                 7678 	inc	hl
   1669 56                 7679 	ld	d,(hl)
   166A 21 03 00           7680 	ld	hl,#0x0003
   166D 19                 7681 	add	hl,de
   166E 7D                 7682 	ld	a,l
   166F 54                 7683 	ld	d,h
   1670 F8 07              7684 	lda	hl,7(sp)
                           7685 ;	genPointerGet
                           7686 ;	AOP_STK for _move_character_sloc3_1_0
                           7687 ;	AOP_STK for _move_character_sloc7_1_0
   1672 22                 7688 	ld	(hl+),a
   1673 72                 7689 	ld	(hl),d
   1674 5F                 7690 	ld	e,a
   1675 1A                 7691 	ld	a,(de)
   1676 F8 02              7692 	lda	hl,2(sp)
   1678 77                 7693 	ld	(hl),a
                           7694 ;	genPointerGet
                           7695 ;	AOP_STK for _move_character_sloc1_1_0
                           7696 ;	AOP_STK for _move_character_sloc6_1_0
   1679 F8 0B              7697 	lda	hl,11(sp)
   167B 5E                 7698 	ld	e,(hl)
   167C 23                 7699 	inc	hl
   167D 56                 7700 	ld	d,(hl)
   167E 1A                 7701 	ld	a,(de)
   167F F8 03              7702 	lda	hl,3(sp)
   1681 77                 7703 	ld	(hl),a
                           7704 ;	genIpush
                           7705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1682 C5                 7706 	push	bc
                           7707 ;	AOP_STK for _move_character_sloc7_1_0
   1683 2B                 7708 	dec	hl
   1684 7E                 7709 	ld	a,(hl)
   1685 F5                 7710 	push	af
   1686 33                 7711 	inc	sp
                           7712 ;	genIpush
                           7713 ;	AOP_STK for _move_character_sloc6_1_0
   1687 23                 7714 	inc	hl
   1688 7E                 7715 	ld	a,(hl)
   1689 F5                 7716 	push	af
   168A 33                 7717 	inc	sp
                           7718 ;	genCall
   168B CD 00 00           7719 	call	_set_sprite_tile
   168E E8 02              7720 	lda	sp,2(sp)
   1690 C1                 7721 	pop	bc
                           7722 ;	genLabel
   1691                    7723 00137$:
                           7724 ;	game.c 1022
                           7725 ;	genCmpEq
                           7726 ;	AOP_HL for _input_timer
                           7727 ; genCmpEq: left 1, right 1, result 0
   1691 21 03 19           7728 	ld	hl,#_input_timer
   1694 7E                 7729 	ld	a,(hl)
   1695 FE 02              7730 	cp	a,#0x02
   1697 C2 C0 16           7731 	jp	nz,00139$
   169A 18 03              7732 	jr	00222$
   169C                    7733 00221$:
   169C C3 C0 16           7734 	jp	00139$
   169F                    7735 00222$:
                           7736 ;	game.c 1023
                           7737 ;	genPointerGet
                           7738 ;	AOP_STK for _move_character_sloc5_1_0
                           7739 ;	AOP_STK for _move_character_sloc7_1_0
   169F F8 04              7740 	lda	hl,4(sp)
   16A1 5E                 7741 	ld	e,(hl)
   16A2 23                 7742 	inc	hl
   16A3 56                 7743 	ld	d,(hl)
   16A4 1A                 7744 	ld	a,(de)
   16A5 F8 02              7745 	lda	hl,2(sp)
   16A7 77                 7746 	ld	(hl),a
                           7747 ;	genPointerGet
                           7748 ;	AOP_STK for _move_character_sloc1_1_0
                           7749 ;	AOP_STK for _move_character_sloc6_1_0
   16A8 F8 0B              7750 	lda	hl,11(sp)
   16AA 5E                 7751 	ld	e,(hl)
   16AB 23                 7752 	inc	hl
   16AC 56                 7753 	ld	d,(hl)
   16AD 1A                 7754 	ld	a,(de)
   16AE F8 03              7755 	lda	hl,3(sp)
   16B0 77                 7756 	ld	(hl),a
                           7757 ;	genIpush
                           7758 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16B1 C5                 7759 	push	bc
                           7760 ;	AOP_STK for _move_character_sloc7_1_0
   16B2 2B                 7761 	dec	hl
   16B3 7E                 7762 	ld	a,(hl)
   16B4 F5                 7763 	push	af
   16B5 33                 7764 	inc	sp
                           7765 ;	genIpush
                           7766 ;	AOP_STK for _move_character_sloc6_1_0
   16B6 23                 7767 	inc	hl
   16B7 7E                 7768 	ld	a,(hl)
   16B8 F5                 7769 	push	af
   16B9 33                 7770 	inc	sp
                           7771 ;	genCall
   16BA CD 00 00           7772 	call	_set_sprite_tile
   16BD E8 02              7773 	lda	sp,2(sp)
   16BF C1                 7774 	pop	bc
                           7775 ;	genLabel
   16C0                    7776 00139$:
                           7777 ;	game.c 1025
                           7778 ;	genPointerGet
                           7779 ;	AOP_STK for _move_character_sloc1_1_0
                           7780 ;	AOP_STK for _move_character_sloc7_1_0
   16C0 F8 0B              7781 	lda	hl,11(sp)
   16C2 5E                 7782 	ld	e,(hl)
   16C3 23                 7783 	inc	hl
   16C4 56                 7784 	ld	d,(hl)
   16C5 1A                 7785 	ld	a,(de)
   16C6 F8 02              7786 	lda	hl,2(sp)
   16C8 77                 7787 	ld	(hl),a
                           7788 ;	genIpush
                           7789 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16C9 C5                 7790 	push	bc
   16CA 3E 20              7791 	ld	a,#0x20
   16CC F5                 7792 	push	af
   16CD 33                 7793 	inc	sp
                           7794 ;	genIpush
                           7795 ;	AOP_STK for _move_character_sloc7_1_0
   16CE 7E                 7796 	ld	a,(hl)
   16CF F5                 7797 	push	af
   16D0 33                 7798 	inc	sp
                           7799 ;	genCall
   16D1 CD 00 00           7800 	call	_set_sprite_prop
   16D4 E8 02              7801 	lda	sp,2(sp)
   16D6 C1                 7802 	pop	bc
                           7803 ;	game.c 1026
                           7804 ;	genGoto
   16D7 C3 C3 18           7805 	jp	00155$
                           7806 ;	game.c 1029
                           7807 ;	genLabel
   16DA                    7808 00140$:
                           7809 ;	genPlus
                           7810 ;	AOP_STK for _move_character_sloc0_1_0
                           7811 ;	AOP_STK for _move_character_sloc5_1_0
                           7812 ;	genPlusIncr
                           7813 ;	Can't optimise plus by inc, falling back to the normal way
   16DA F8 0D              7814 	lda	hl,13(sp)
   16DC 5E                 7815 	ld	e,(hl)
   16DD 23                 7816 	inc	hl
   16DE 56                 7817 	ld	d,(hl)
   16DF 21 02 00           7818 	ld	hl,#0x0002
   16E2 19                 7819 	add	hl,de
   16E3 7D                 7820 	ld	a,l
   16E4 54                 7821 	ld	d,h
   16E5 F8 04              7822 	lda	hl,4(sp)
                           7823 ;	genPointerGet
                           7824 ;	AOP_STK for _move_character_sloc5_1_0
                           7825 ;	AOP_STK for _move_character_sloc7_1_0
   16E7 22                 7826 	ld	(hl+),a
   16E8 72                 7827 	ld	(hl),d
   16E9 5F                 7828 	ld	e,a
   16EA 1A                 7829 	ld	a,(de)
   16EB F8 02              7830 	lda	hl,2(sp)
   16ED 77                 7831 	ld	(hl),a
                           7832 ;	genIpush
                           7833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   16EE C5                 7834 	push	bc
                           7835 ;	AOP_STK for _move_character_sloc7_1_0
   16EF 7E                 7836 	ld	a,(hl)
   16F0 F5                 7837 	push	af
   16F1 33                 7838 	inc	sp
                           7839 ;	genIpush
   16F2 78                 7840 	ld	a,b
   16F3 F5                 7841 	push	af
   16F4 33                 7842 	inc	sp
                           7843 ;	genCall
   16F5 CD 00 00           7844 	call	_set_sprite_tile
   16F8 E8 02              7845 	lda	sp,2(sp)
   16FA C1                 7846 	pop	bc
                           7847 ;	game.c 1030
                           7848 ;	genCmpEq
                           7849 ;	AOP_HL for _input_timer
                           7850 ; genCmpEq: left 1, right 1, result 0
   16FB 21 03 19           7851 	ld	hl,#_input_timer
   16FE 7E                 7852 	ld	a,(hl)
   16FF FE 04              7853 	cp	a,#0x04
   1701 C2 35 17           7854 	jp	nz,00142$
   1704 18 03              7855 	jr	00224$
   1706                    7856 00223$:
   1706 C3 35 17           7857 	jp	00142$
   1709                    7858 00224$:
                           7859 ;	game.c 1031
                           7860 ;	genPlus
                           7861 ;	AOP_STK for _move_character_sloc0_1_0
                           7862 ;	AOP_STK for _move_character_sloc3_1_0
                           7863 ;	genPlusIncr
                           7864 ;	Can't optimise plus by inc, falling back to the normal way
   1709 F8 0D              7865 	lda	hl,13(sp)
   170B 5E                 7866 	ld	e,(hl)
   170C 23                 7867 	inc	hl
   170D 56                 7868 	ld	d,(hl)
   170E 21 03 00           7869 	ld	hl,#0x0003
   1711 19                 7870 	add	hl,de
   1712 7D                 7871 	ld	a,l
   1713 54                 7872 	ld	d,h
   1714 F8 07              7873 	lda	hl,7(sp)
                           7874 ;	genPointerGet
                           7875 ;	AOP_STK for _move_character_sloc3_1_0
                           7876 ;	AOP_STK for _move_character_sloc7_1_0
   1716 22                 7877 	ld	(hl+),a
   1717 72                 7878 	ld	(hl),d
   1718 5F                 7879 	ld	e,a
   1719 1A                 7880 	ld	a,(de)
   171A F8 02              7881 	lda	hl,2(sp)
   171C 77                 7882 	ld	(hl),a
                           7883 ;	genPointerGet
                           7884 ;	AOP_STK for _move_character_sloc1_1_0
                           7885 ;	AOP_STK for _move_character_sloc6_1_0
   171D F8 0B              7886 	lda	hl,11(sp)
   171F 5E                 7887 	ld	e,(hl)
   1720 23                 7888 	inc	hl
   1721 56                 7889 	ld	d,(hl)
   1722 1A                 7890 	ld	a,(de)
   1723 F8 03              7891 	lda	hl,3(sp)
   1725 77                 7892 	ld	(hl),a
                           7893 ;	genIpush
                           7894 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1726 C5                 7895 	push	bc
                           7896 ;	AOP_STK for _move_character_sloc7_1_0
   1727 2B                 7897 	dec	hl
   1728 7E                 7898 	ld	a,(hl)
   1729 F5                 7899 	push	af
   172A 33                 7900 	inc	sp
                           7901 ;	genIpush
                           7902 ;	AOP_STK for _move_character_sloc6_1_0
   172B 23                 7903 	inc	hl
   172C 7E                 7904 	ld	a,(hl)
   172D F5                 7905 	push	af
   172E 33                 7906 	inc	sp
                           7907 ;	genCall
   172F CD 00 00           7908 	call	_set_sprite_tile
   1732 E8 02              7909 	lda	sp,2(sp)
   1734 C1                 7910 	pop	bc
                           7911 ;	genLabel
   1735                    7912 00142$:
                           7913 ;	game.c 1033
                           7914 ;	genCmpEq
                           7915 ;	AOP_HL for _input_timer
                           7916 ; genCmpEq: left 1, right 1, result 0
   1735 21 03 19           7917 	ld	hl,#_input_timer
   1738 7E                 7918 	ld	a,(hl)
   1739 FE 02              7919 	cp	a,#0x02
   173B C2 64 17           7920 	jp	nz,00144$
   173E 18 03              7921 	jr	00226$
   1740                    7922 00225$:
   1740 C3 64 17           7923 	jp	00144$
   1743                    7924 00226$:
                           7925 ;	game.c 1034
                           7926 ;	genPointerGet
                           7927 ;	AOP_STK for _move_character_sloc5_1_0
                           7928 ;	AOP_STK for _move_character_sloc7_1_0
   1743 F8 04              7929 	lda	hl,4(sp)
   1745 5E                 7930 	ld	e,(hl)
   1746 23                 7931 	inc	hl
   1747 56                 7932 	ld	d,(hl)
   1748 1A                 7933 	ld	a,(de)
   1749 F8 02              7934 	lda	hl,2(sp)
   174B 77                 7935 	ld	(hl),a
                           7936 ;	genPointerGet
                           7937 ;	AOP_STK for _move_character_sloc1_1_0
                           7938 ;	AOP_STK for _move_character_sloc6_1_0
   174C F8 0B              7939 	lda	hl,11(sp)
   174E 5E                 7940 	ld	e,(hl)
   174F 23                 7941 	inc	hl
   1750 56                 7942 	ld	d,(hl)
   1751 1A                 7943 	ld	a,(de)
   1752 F8 03              7944 	lda	hl,3(sp)
   1754 77                 7945 	ld	(hl),a
                           7946 ;	genIpush
                           7947 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1755 C5                 7948 	push	bc
                           7949 ;	AOP_STK for _move_character_sloc7_1_0
   1756 2B                 7950 	dec	hl
   1757 7E                 7951 	ld	a,(hl)
   1758 F5                 7952 	push	af
   1759 33                 7953 	inc	sp
                           7954 ;	genIpush
                           7955 ;	AOP_STK for _move_character_sloc6_1_0
   175A 23                 7956 	inc	hl
   175B 7E                 7957 	ld	a,(hl)
   175C F5                 7958 	push	af
   175D 33                 7959 	inc	sp
                           7960 ;	genCall
   175E CD 00 00           7961 	call	_set_sprite_tile
   1761 E8 02              7962 	lda	sp,2(sp)
   1763 C1                 7963 	pop	bc
                           7964 ;	genLabel
   1764                    7965 00144$:
                           7966 ;	game.c 1037
                           7967 ;	genPointerGet
                           7968 ;	AOP_STK for _move_character_sloc1_1_0
                           7969 ;	AOP_STK for _move_character_sloc7_1_0
   1764 F8 0B              7970 	lda	hl,11(sp)
   1766 5E                 7971 	ld	e,(hl)
   1767 23                 7972 	inc	hl
   1768 56                 7973 	ld	d,(hl)
   1769 1A                 7974 	ld	a,(de)
   176A F8 02              7975 	lda	hl,2(sp)
   176C 77                 7976 	ld	(hl),a
                           7977 ;	genIpush
                           7978 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   176D C5                 7979 	push	bc
   176E 3E 00              7980 	ld	a,#0x00
   1770 F5                 7981 	push	af
   1771 33                 7982 	inc	sp
                           7983 ;	genIpush
                           7984 ;	AOP_STK for _move_character_sloc7_1_0
   1772 7E                 7985 	ld	a,(hl)
   1773 F5                 7986 	push	af
   1774 33                 7987 	inc	sp
                           7988 ;	genCall
   1775 CD 00 00           7989 	call	_set_sprite_prop
   1778 E8 02              7990 	lda	sp,2(sp)
   177A C1                 7991 	pop	bc
                           7992 ;	game.c 1038
                           7993 ;	genGoto
   177B C3 C3 18           7994 	jp	00155$
                           7995 ;	game.c 1040
                           7996 ;	genLabel
   177E                    7997 00145$:
                           7998 ;	genPlus
                           7999 ;	AOP_STK for _move_character_sloc0_1_0
                           8000 ;	AOP_STK for _move_character_sloc5_1_0
                           8001 ;	genPlusIncr
                           8002 ;	Can't optimise plus by inc, falling back to the normal way
   177E F8 0D              8003 	lda	hl,13(sp)
   1780 5E                 8004 	ld	e,(hl)
   1781 23                 8005 	inc	hl
   1782 56                 8006 	ld	d,(hl)
   1783 21 05 00           8007 	ld	hl,#0x0005
   1786 19                 8008 	add	hl,de
   1787 7D                 8009 	ld	a,l
   1788 54                 8010 	ld	d,h
   1789 F8 04              8011 	lda	hl,4(sp)
                           8012 ;	genPointerGet
                           8013 ;	AOP_STK for _move_character_sloc5_1_0
                           8014 ;	AOP_STK for _move_character_sloc7_1_0
   178B 22                 8015 	ld	(hl+),a
   178C 72                 8016 	ld	(hl),d
   178D 5F                 8017 	ld	e,a
   178E 1A                 8018 	ld	a,(de)
   178F F8 02              8019 	lda	hl,2(sp)
   1791 77                 8020 	ld	(hl),a
                           8021 ;	genIpush
                           8022 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1792 C5                 8023 	push	bc
                           8024 ;	AOP_STK for _move_character_sloc7_1_0
   1793 7E                 8025 	ld	a,(hl)
   1794 F5                 8026 	push	af
   1795 33                 8027 	inc	sp
                           8028 ;	genIpush
   1796 78                 8029 	ld	a,b
   1797 F5                 8030 	push	af
   1798 33                 8031 	inc	sp
                           8032 ;	genCall
   1799 CD 00 00           8033 	call	_set_sprite_tile
   179C E8 02              8034 	lda	sp,2(sp)
   179E C1                 8035 	pop	bc
                           8036 ;	game.c 1042
                           8037 ;	genCmpEq
                           8038 ;	AOP_HL for _input_timer
                           8039 ; genCmpEq: left 1, right 1, result 0
   179F 21 03 19           8040 	ld	hl,#_input_timer
   17A2 7E                 8041 	ld	a,(hl)
   17A3 FE 04              8042 	cp	a,#0x04
   17A5 C2 D9 17           8043 	jp	nz,00147$
   17A8 18 03              8044 	jr	00228$
   17AA                    8045 00227$:
   17AA C3 D9 17           8046 	jp	00147$
   17AD                    8047 00228$:
                           8048 ;	game.c 1043
                           8049 ;	genPlus
                           8050 ;	AOP_STK for _move_character_sloc0_1_0
                           8051 ;	AOP_STK for _move_character_sloc3_1_0
                           8052 ;	genPlusIncr
                           8053 ;	Can't optimise plus by inc, falling back to the normal way
   17AD F8 0D              8054 	lda	hl,13(sp)
   17AF 5E                 8055 	ld	e,(hl)
   17B0 23                 8056 	inc	hl
   17B1 56                 8057 	ld	d,(hl)
   17B2 21 06 00           8058 	ld	hl,#0x0006
   17B5 19                 8059 	add	hl,de
   17B6 7D                 8060 	ld	a,l
   17B7 54                 8061 	ld	d,h
   17B8 F8 07              8062 	lda	hl,7(sp)
                           8063 ;	genPointerGet
                           8064 ;	AOP_STK for _move_character_sloc3_1_0
                           8065 ;	AOP_STK for _move_character_sloc7_1_0
   17BA 22                 8066 	ld	(hl+),a
   17BB 72                 8067 	ld	(hl),d
   17BC 5F                 8068 	ld	e,a
   17BD 1A                 8069 	ld	a,(de)
   17BE F8 02              8070 	lda	hl,2(sp)
   17C0 77                 8071 	ld	(hl),a
                           8072 ;	genPointerGet
                           8073 ;	AOP_STK for _move_character_sloc1_1_0
                           8074 ;	AOP_STK for _move_character_sloc6_1_0
   17C1 F8 0B              8075 	lda	hl,11(sp)
   17C3 5E                 8076 	ld	e,(hl)
   17C4 23                 8077 	inc	hl
   17C5 56                 8078 	ld	d,(hl)
   17C6 1A                 8079 	ld	a,(de)
   17C7 F8 03              8080 	lda	hl,3(sp)
   17C9 77                 8081 	ld	(hl),a
                           8082 ;	genIpush
                           8083 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17CA C5                 8084 	push	bc
                           8085 ;	AOP_STK for _move_character_sloc7_1_0
   17CB 2B                 8086 	dec	hl
   17CC 7E                 8087 	ld	a,(hl)
   17CD F5                 8088 	push	af
   17CE 33                 8089 	inc	sp
                           8090 ;	genIpush
                           8091 ;	AOP_STK for _move_character_sloc6_1_0
   17CF 23                 8092 	inc	hl
   17D0 7E                 8093 	ld	a,(hl)
   17D1 F5                 8094 	push	af
   17D2 33                 8095 	inc	sp
                           8096 ;	genCall
   17D3 CD 00 00           8097 	call	_set_sprite_tile
   17D6 E8 02              8098 	lda	sp,2(sp)
   17D8 C1                 8099 	pop	bc
                           8100 ;	genLabel
   17D9                    8101 00147$:
                           8102 ;	game.c 1045
                           8103 ;	genCmpEq
                           8104 ;	AOP_HL for _input_timer
                           8105 ; genCmpEq: left 1, right 1, result 0
   17D9 21 03 19           8106 	ld	hl,#_input_timer
   17DC 7E                 8107 	ld	a,(hl)
   17DD FE 02              8108 	cp	a,#0x02
   17DF C2 08 18           8109 	jp	nz,00149$
   17E2 18 03              8110 	jr	00230$
   17E4                    8111 00229$:
   17E4 C3 08 18           8112 	jp	00149$
   17E7                    8113 00230$:
                           8114 ;	game.c 1046
                           8115 ;	genPointerGet
                           8116 ;	AOP_STK for _move_character_sloc5_1_0
                           8117 ;	AOP_STK for _move_character_sloc7_1_0
   17E7 F8 04              8118 	lda	hl,4(sp)
   17E9 5E                 8119 	ld	e,(hl)
   17EA 23                 8120 	inc	hl
   17EB 56                 8121 	ld	d,(hl)
   17EC 1A                 8122 	ld	a,(de)
   17ED F8 02              8123 	lda	hl,2(sp)
   17EF 77                 8124 	ld	(hl),a
                           8125 ;	genPointerGet
                           8126 ;	AOP_STK for _move_character_sloc1_1_0
                           8127 ;	AOP_STK for _move_character_sloc6_1_0
   17F0 F8 0B              8128 	lda	hl,11(sp)
   17F2 5E                 8129 	ld	e,(hl)
   17F3 23                 8130 	inc	hl
   17F4 56                 8131 	ld	d,(hl)
   17F5 1A                 8132 	ld	a,(de)
   17F6 F8 03              8133 	lda	hl,3(sp)
   17F8 77                 8134 	ld	(hl),a
                           8135 ;	genIpush
                           8136 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17F9 C5                 8137 	push	bc
                           8138 ;	AOP_STK for _move_character_sloc7_1_0
   17FA 2B                 8139 	dec	hl
   17FB 7E                 8140 	ld	a,(hl)
   17FC F5                 8141 	push	af
   17FD 33                 8142 	inc	sp
                           8143 ;	genIpush
                           8144 ;	AOP_STK for _move_character_sloc6_1_0
   17FE 23                 8145 	inc	hl
   17FF 7E                 8146 	ld	a,(hl)
   1800 F5                 8147 	push	af
   1801 33                 8148 	inc	sp
                           8149 ;	genCall
   1802 CD 00 00           8150 	call	_set_sprite_tile
   1805 E8 02              8151 	lda	sp,2(sp)
   1807 C1                 8152 	pop	bc
                           8153 ;	genLabel
   1808                    8154 00149$:
                           8155 ;	game.c 1049
                           8156 ;	genPointerGet
                           8157 ;	AOP_STK for _move_character_sloc1_1_0
                           8158 ;	AOP_STK for _move_character_sloc7_1_0
   1808 F8 0B              8159 	lda	hl,11(sp)
   180A 5E                 8160 	ld	e,(hl)
   180B 23                 8161 	inc	hl
   180C 56                 8162 	ld	d,(hl)
   180D 1A                 8163 	ld	a,(de)
   180E F8 02              8164 	lda	hl,2(sp)
   1810 77                 8165 	ld	(hl),a
                           8166 ;	genIpush
                           8167 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1811 C5                 8168 	push	bc
   1812 3E 20              8169 	ld	a,#0x20
   1814 F5                 8170 	push	af
   1815 33                 8171 	inc	sp
                           8172 ;	genIpush
                           8173 ;	AOP_STK for _move_character_sloc7_1_0
   1816 7E                 8174 	ld	a,(hl)
   1817 F5                 8175 	push	af
   1818 33                 8176 	inc	sp
                           8177 ;	genCall
   1819 CD 00 00           8178 	call	_set_sprite_prop
   181C E8 02              8179 	lda	sp,2(sp)
   181E C1                 8180 	pop	bc
                           8181 ;	game.c 1050
                           8182 ;	genGoto
   181F C3 C3 18           8183 	jp	00155$
                           8184 ;	game.c 1052
                           8185 ;	genLabel
   1822                    8186 00150$:
                           8187 ;	genPlus
                           8188 ;	AOP_STK for _move_character_sloc0_1_0
                           8189 ;	AOP_STK for _move_character_sloc5_1_0
                           8190 ;	genPlusIncr
                           8191 ;	Can't optimise plus by inc, falling back to the normal way
   1822 F8 0D              8192 	lda	hl,13(sp)
   1824 5E                 8193 	ld	e,(hl)
   1825 23                 8194 	inc	hl
   1826 56                 8195 	ld	d,(hl)
   1827 21 05 00           8196 	ld	hl,#0x0005
   182A 19                 8197 	add	hl,de
   182B 7D                 8198 	ld	a,l
   182C 54                 8199 	ld	d,h
   182D F8 04              8200 	lda	hl,4(sp)
                           8201 ;	genPointerGet
                           8202 ;	AOP_STK for _move_character_sloc5_1_0
                           8203 ;	AOP_STK for _move_character_sloc7_1_0
   182F 22                 8204 	ld	(hl+),a
   1830 72                 8205 	ld	(hl),d
   1831 5F                 8206 	ld	e,a
   1832 1A                 8207 	ld	a,(de)
   1833 F8 02              8208 	lda	hl,2(sp)
   1835 77                 8209 	ld	(hl),a
                           8210 ;	genIpush
                           8211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1836 C5                 8212 	push	bc
                           8213 ;	AOP_STK for _move_character_sloc7_1_0
   1837 7E                 8214 	ld	a,(hl)
   1838 F5                 8215 	push	af
   1839 33                 8216 	inc	sp
                           8217 ;	genIpush
   183A 78                 8218 	ld	a,b
   183B F5                 8219 	push	af
   183C 33                 8220 	inc	sp
                           8221 ;	genCall
   183D CD 00 00           8222 	call	_set_sprite_tile
   1840 E8 02              8223 	lda	sp,2(sp)
   1842 C1                 8224 	pop	bc
                           8225 ;	game.c 1054
                           8226 ;	genCmpEq
                           8227 ;	AOP_HL for _input_timer
                           8228 ; genCmpEq: left 1, right 1, result 0
   1843 21 03 19           8229 	ld	hl,#_input_timer
   1846 7E                 8230 	ld	a,(hl)
   1847 FE 04              8231 	cp	a,#0x04
   1849 C2 7D 18           8232 	jp	nz,00152$
   184C 18 03              8233 	jr	00232$
   184E                    8234 00231$:
   184E C3 7D 18           8235 	jp	00152$
   1851                    8236 00232$:
                           8237 ;	game.c 1055
                           8238 ;	genPlus
                           8239 ;	AOP_STK for _move_character_sloc0_1_0
                           8240 ;	AOP_STK for _move_character_sloc3_1_0
                           8241 ;	genPlusIncr
                           8242 ;	Can't optimise plus by inc, falling back to the normal way
   1851 F8 0D              8243 	lda	hl,13(sp)
   1853 5E                 8244 	ld	e,(hl)
   1854 23                 8245 	inc	hl
   1855 56                 8246 	ld	d,(hl)
   1856 21 06 00           8247 	ld	hl,#0x0006
   1859 19                 8248 	add	hl,de
   185A 7D                 8249 	ld	a,l
   185B 54                 8250 	ld	d,h
   185C F8 07              8251 	lda	hl,7(sp)
                           8252 ;	genPointerGet
                           8253 ;	AOP_STK for _move_character_sloc3_1_0
                           8254 ;	AOP_STK for _move_character_sloc7_1_0
   185E 22                 8255 	ld	(hl+),a
   185F 72                 8256 	ld	(hl),d
   1860 5F                 8257 	ld	e,a
   1861 1A                 8258 	ld	a,(de)
   1862 F8 02              8259 	lda	hl,2(sp)
   1864 77                 8260 	ld	(hl),a
                           8261 ;	genPointerGet
                           8262 ;	AOP_STK for _move_character_sloc1_1_0
                           8263 ;	AOP_STK for _move_character_sloc6_1_0
   1865 F8 0B              8264 	lda	hl,11(sp)
   1867 5E                 8265 	ld	e,(hl)
   1868 23                 8266 	inc	hl
   1869 56                 8267 	ld	d,(hl)
   186A 1A                 8268 	ld	a,(de)
   186B F8 03              8269 	lda	hl,3(sp)
   186D 77                 8270 	ld	(hl),a
                           8271 ;	genIpush
                           8272 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   186E C5                 8273 	push	bc
                           8274 ;	AOP_STK for _move_character_sloc7_1_0
   186F 2B                 8275 	dec	hl
   1870 7E                 8276 	ld	a,(hl)
   1871 F5                 8277 	push	af
   1872 33                 8278 	inc	sp
                           8279 ;	genIpush
                           8280 ;	AOP_STK for _move_character_sloc6_1_0
   1873 23                 8281 	inc	hl
   1874 7E                 8282 	ld	a,(hl)
   1875 F5                 8283 	push	af
   1876 33                 8284 	inc	sp
                           8285 ;	genCall
   1877 CD 00 00           8286 	call	_set_sprite_tile
   187A E8 02              8287 	lda	sp,2(sp)
   187C C1                 8288 	pop	bc
                           8289 ;	genLabel
   187D                    8290 00152$:
                           8291 ;	game.c 1057
                           8292 ;	genCmpEq
                           8293 ;	AOP_HL for _input_timer
                           8294 ; genCmpEq: left 1, right 1, result 0
   187D 21 03 19           8295 	ld	hl,#_input_timer
   1880 7E                 8296 	ld	a,(hl)
   1881 FE 02              8297 	cp	a,#0x02
   1883 C2 AC 18           8298 	jp	nz,00154$
   1886 18 03              8299 	jr	00234$
   1888                    8300 00233$:
   1888 C3 AC 18           8301 	jp	00154$
   188B                    8302 00234$:
                           8303 ;	game.c 1058
                           8304 ;	genPointerGet
                           8305 ;	AOP_STK for _move_character_sloc5_1_0
                           8306 ;	AOP_STK for _move_character_sloc7_1_0
   188B F8 04              8307 	lda	hl,4(sp)
   188D 5E                 8308 	ld	e,(hl)
   188E 23                 8309 	inc	hl
   188F 56                 8310 	ld	d,(hl)
   1890 1A                 8311 	ld	a,(de)
   1891 F8 02              8312 	lda	hl,2(sp)
   1893 77                 8313 	ld	(hl),a
                           8314 ;	genPointerGet
                           8315 ;	AOP_STK for _move_character_sloc1_1_0
                           8316 ;	AOP_STK for _move_character_sloc6_1_0
   1894 F8 0B              8317 	lda	hl,11(sp)
   1896 5E                 8318 	ld	e,(hl)
   1897 23                 8319 	inc	hl
   1898 56                 8320 	ld	d,(hl)
   1899 1A                 8321 	ld	a,(de)
   189A F8 03              8322 	lda	hl,3(sp)
   189C 77                 8323 	ld	(hl),a
                           8324 ;	genIpush
                           8325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   189D C5                 8326 	push	bc
                           8327 ;	AOP_STK for _move_character_sloc7_1_0
   189E 2B                 8328 	dec	hl
   189F 7E                 8329 	ld	a,(hl)
   18A0 F5                 8330 	push	af
   18A1 33                 8331 	inc	sp
                           8332 ;	genIpush
                           8333 ;	AOP_STK for _move_character_sloc6_1_0
   18A2 23                 8334 	inc	hl
   18A3 7E                 8335 	ld	a,(hl)
   18A4 F5                 8336 	push	af
   18A5 33                 8337 	inc	sp
                           8338 ;	genCall
   18A6 CD 00 00           8339 	call	_set_sprite_tile
   18A9 E8 02              8340 	lda	sp,2(sp)
   18AB C1                 8341 	pop	bc
                           8342 ;	genLabel
   18AC                    8343 00154$:
                           8344 ;	game.c 1060
                           8345 ;	genPointerGet
                           8346 ;	AOP_STK for _move_character_sloc1_1_0
                           8347 ;	AOP_STK for _move_character_sloc7_1_0
   18AC F8 0B              8348 	lda	hl,11(sp)
   18AE 5E                 8349 	ld	e,(hl)
   18AF 23                 8350 	inc	hl
   18B0 56                 8351 	ld	d,(hl)
   18B1 1A                 8352 	ld	a,(de)
   18B2 F8 02              8353 	lda	hl,2(sp)
   18B4 77                 8354 	ld	(hl),a
                           8355 ;	genIpush
                           8356 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   18B5 C5                 8357 	push	bc
   18B6 3E 40              8358 	ld	a,#0x40
   18B8 F5                 8359 	push	af
   18B9 33                 8360 	inc	sp
                           8361 ;	genIpush
                           8362 ;	AOP_STK for _move_character_sloc7_1_0
   18BA 7E                 8363 	ld	a,(hl)
   18BB F5                 8364 	push	af
   18BC 33                 8365 	inc	sp
                           8366 ;	genCall
   18BD CD 00 00           8367 	call	_set_sprite_prop
   18C0 E8 02              8368 	lda	sp,2(sp)
   18C2 C1                 8369 	pop	bc
                           8370 ;	game.c 1062
                           8371 ;	genLabel
   18C3                    8372 00155$:
                           8373 ;	game.c 1065
                           8374 ;	genCmpEq
                           8375 ;	AOP_HL for _input_timer
                           8376 ; genCmpEq: left 1, right 1, result 0
   18C3 21 03 19           8377 	ld	hl,#_input_timer
   18C6 7E                 8378 	ld	a,(hl)
   18C7 B7                 8379 	or	a,a
   18C8 CA 48 19           8380 	jp	z,00165$
   18CB                    8381 00235$:
                           8382 ;	game.c 1067
                           8383 ;	genIfx
                           8384 ;	AOP_STK for _move_character_sloc8_1_0
   18CB AF                 8385 	xor	a,a
   18CC F8 00              8386 	lda	hl,0(sp)
   18CE B6                 8387 	or	a,(hl)
   18CF C2 48 19           8388 	jp	nz,00165$
                           8389 ;	genCmpGt
   18D2 3E 04              8390 	ld	a,#0x04
   18D4 91                 8391 	sub	a,c
   18D5 DA 48 19           8392 	jp	c,00165$
                           8393 ;	genMinus
   18D8 0D                 8394 	dec	c
                           8395 ;	genJumpTab
   18D9 59                 8396 	ld	e,c
   18DA 16 00              8397 	ld	d,#0x00
   18DC 21 E3 18           8398 	ld	hl,#00236$
   18DF 19                 8399 	add	hl,de
   18E0 19                 8400 	add	hl,de
   18E1 19                 8401 	add	hl,de
   18E2 E9                 8402 	jp	(hl)
   18E3                    8403 00236$:
   18E3 C3 12 19           8404 	jp	00158$
   18E6 C3 01 19           8405 	jp	00157$
   18E9 C3 2F 19           8406 	jp	00159$
   18EC C3 EF 18           8407 	jp	00156$
                           8408 ;	game.c 1069
                           8409 ;	genLabel
   18EF                    8410 00156$:
                           8411 ;	genPointerGet
                           8412 ;	AOP_STK for _move_character_sloc0_1_0
   18EF F8 0D              8413 	lda	hl,13(sp)
   18F1 5E                 8414 	ld	e,(hl)
   18F2 23                 8415 	inc	hl
   18F3 56                 8416 	ld	d,(hl)
   18F4 1A                 8417 	ld	a,(de)
   18F5 4F                 8418 	ld	c,a
                           8419 ;	genMinus
   18F6 0D                 8420 	dec	c
   18F7 0D                 8421 	dec	c
                           8422 ;	genAssign (pointer)
                           8423 ;	AOP_STK for _move_character_sloc0_1_0
   18F8 2B                 8424 	dec	hl
   18F9 5E                 8425 	ld	e,(hl)
   18FA 23                 8426 	inc	hl
   18FB 56                 8427 	ld	d,(hl)
   18FC 79                 8428 	ld	a,c
   18FD 12                 8429 	ld	(de),a
                           8430 ;	game.c 1070
                           8431 ;	genGoto
   18FE C3 48 19           8432 	jp	00165$
                           8433 ;	game.c 1072
                           8434 ;	genLabel
   1901                    8435 00157$:
                           8436 ;	genPointerGet
                           8437 ;	AOP_STK for _move_character_sloc0_1_0
   1901 F8 0D              8438 	lda	hl,13(sp)
   1903 5E                 8439 	ld	e,(hl)
   1904 23                 8440 	inc	hl
   1905 56                 8441 	ld	d,(hl)
   1906 1A                 8442 	ld	a,(de)
                           8443 ;	genPlus
                           8444 ;	genPlusIncr
                           8445 ;	Can't optimise plus by inc, falling back to the normal way
   1907 4F                 8446 	ld	c,a
   1908 C6 02              8447 	add	a,#0x02
                           8448 ;	genAssign (pointer)
                           8449 ;	AOP_STK for _move_character_sloc0_1_0
   190A 2B                 8450 	dec	hl
   190B 5E                 8451 	ld	e,(hl)
   190C 23                 8452 	inc	hl
   190D 56                 8453 	ld	d,(hl)
   190E 12                 8454 	ld	(de),a
                           8455 ;	game.c 1073
                           8456 ;	genGoto
   190F C3 48 19           8457 	jp	00165$
                           8458 ;	game.c 1075
                           8459 ;	genLabel
   1912                    8460 00158$:
                           8461 ;	genPlus
                           8462 ;	AOP_STK for _move_character_sloc0_1_0
                           8463 ;	AOP_STK for _move_character_sloc8_1_0
                           8464 ;	genPlusIncr
                           8465 ;	Can't optimise plus by inc, falling back to the normal way
   1912 F8 0D              8466 	lda	hl,13(sp)
   1914 5E                 8467 	ld	e,(hl)
   1915 23                 8468 	inc	hl
   1916 56                 8469 	ld	d,(hl)
   1917 21 01 00           8470 	ld	hl,#0x0001
   191A 19                 8471 	add	hl,de
   191B 7D                 8472 	ld	a,l
   191C 54                 8473 	ld	d,h
   191D F8 00              8474 	lda	hl,0(sp)
                           8475 ;	genPointerGet
                           8476 ;	AOP_STK for _move_character_sloc8_1_0
   191F 22                 8477 	ld	(hl+),a
   1920 72                 8478 	ld	(hl),d
   1921 5F                 8479 	ld	e,a
   1922 1A                 8480 	ld	a,(de)
   1923 4F                 8481 	ld	c,a
                           8482 ;	genMinus
   1924 0D                 8483 	dec	c
   1925 0D                 8484 	dec	c
                           8485 ;	genAssign (pointer)
                           8486 ;	AOP_STK for _move_character_sloc8_1_0
   1926 2B                 8487 	dec	hl
   1927 5E                 8488 	ld	e,(hl)
   1928 23                 8489 	inc	hl
   1929 56                 8490 	ld	d,(hl)
   192A 79                 8491 	ld	a,c
   192B 12                 8492 	ld	(de),a
                           8493 ;	game.c 1076
                           8494 ;	genGoto
   192C C3 48 19           8495 	jp	00165$
                           8496 ;	game.c 1078
                           8497 ;	genLabel
   192F                    8498 00159$:
                           8499 ;	genPlus
                           8500 ;	AOP_STK for _move_character_sloc0_1_0
                           8501 ;	AOP_STK for _move_character_sloc8_1_0
                           8502 ;	genPlusIncr
                           8503 ;	Can't optimise plus by inc, falling back to the normal way
   192F F8 0D              8504 	lda	hl,13(sp)
   1931 5E                 8505 	ld	e,(hl)
   1932 23                 8506 	inc	hl
   1933 56                 8507 	ld	d,(hl)
   1934 21 01 00           8508 	ld	hl,#0x0001
   1937 19                 8509 	add	hl,de
   1938 7D                 8510 	ld	a,l
   1939 54                 8511 	ld	d,h
   193A F8 00              8512 	lda	hl,0(sp)
                           8513 ;	genPointerGet
                           8514 ;	AOP_STK for _move_character_sloc8_1_0
   193C 22                 8515 	ld	(hl+),a
   193D 72                 8516 	ld	(hl),d
   193E 5F                 8517 	ld	e,a
   193F 1A                 8518 	ld	a,(de)
                           8519 ;	genPlus
                           8520 ;	genPlusIncr
                           8521 ;	Can't optimise plus by inc, falling back to the normal way
   1940 4F                 8522 	ld	c,a
   1941 C6 02              8523 	add	a,#0x02
                           8524 ;	genAssign (pointer)
                           8525 ;	AOP_STK for _move_character_sloc8_1_0
   1943 2B                 8526 	dec	hl
   1944 5E                 8527 	ld	e,(hl)
   1945 23                 8528 	inc	hl
   1946 56                 8529 	ld	d,(hl)
   1947 12                 8530 	ld	(de),a
                           8531 ;	game.c 1080
                           8532 ;	genLabel
   1948                    8533 00165$:
                           8534 ;	game.c 1085
                           8535 ;	genPlus
                           8536 ;	AOP_STK for _move_character_sloc0_1_0
                           8537 ;	AOP_STK for _move_character_sloc8_1_0
                           8538 ;	genPlusIncr
                           8539 ;	Can't optimise plus by inc, falling back to the normal way
   1948 F8 0D              8540 	lda	hl,13(sp)
   194A 5E                 8541 	ld	e,(hl)
   194B 23                 8542 	inc	hl
   194C 56                 8543 	ld	d,(hl)
   194D 21 01 00           8544 	ld	hl,#0x0001
   1950 19                 8545 	add	hl,de
   1951 7D                 8546 	ld	a,l
   1952 54                 8547 	ld	d,h
   1953 F8 00              8548 	lda	hl,0(sp)
                           8549 ;	genPointerGet
                           8550 ;	AOP_STK for _move_character_sloc8_1_0
   1955 22                 8551 	ld	(hl+),a
   1956 72                 8552 	ld	(hl),d
   1957 5F                 8553 	ld	e,a
   1958 1A                 8554 	ld	a,(de)
   1959 4F                 8555 	ld	c,a
                           8556 ;	genPointerGet
                           8557 ;	AOP_STK for _move_character_sloc0_1_0
                           8558 ;	AOP_STK for _move_character_sloc7_1_0
   195A F8 0D              8559 	lda	hl,13(sp)
   195C 5E                 8560 	ld	e,(hl)
   195D 23                 8561 	inc	hl
   195E 56                 8562 	ld	d,(hl)
   195F 1A                 8563 	ld	a,(de)
   1960 F8 02              8564 	lda	hl,2(sp)
   1962 77                 8565 	ld	(hl),a
                           8566 ;	genIpush
                           8567 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1963 79                 8568 	ld	a,c
   1964 F5                 8569 	push	af
   1965 33                 8570 	inc	sp
                           8571 ;	genIpush
                           8572 ;	AOP_STK for _move_character_sloc7_1_0
   1966 7E                 8573 	ld	a,(hl)
   1967 F5                 8574 	push	af
   1968 33                 8575 	inc	sp
                           8576 ;	genIpush
   1969 78                 8577 	ld	a,b
   196A F5                 8578 	push	af
   196B 33                 8579 	inc	sp
                           8580 ;	genCall
   196C CD 00 00           8581 	call	_move_sprite
   196F E8 03              8582 	lda	sp,3(sp)
                           8583 ;	game.c 1086
                           8584 ;	genPlus
                           8585 ;	AOP_STK for _move_character_sloc0_1_0
                           8586 ;	genPlusIncr
                           8587 ;	Can't optimise plus by inc, falling back to the normal way
   1971 F8 0D              8588 	lda	hl,13(sp)
   1973 5E                 8589 	ld	e,(hl)
   1974 23                 8590 	inc	hl
   1975 56                 8591 	ld	d,(hl)
   1976 21 0C 00           8592 	ld	hl,#0x000C
   1979 19                 8593 	add	hl,de
   197A 4D                 8594 	ld	c,l
   197B 44                 8595 	ld	b,h
                           8596 ;	genPointerGet
                           8597 ;	AOP_STK for _move_character_sloc8_1_0
                           8598 ;	AOP_STK for _move_character_sloc7_1_0
   197C F8 00              8599 	lda	hl,0(sp)
   197E 5E                 8600 	ld	e,(hl)
   197F 23                 8601 	inc	hl
   1980 56                 8602 	ld	d,(hl)
   1981 1A                 8603 	ld	a,(de)
   1982 23                 8604 	inc	hl
   1983 77                 8605 	ld	(hl),a
                           8606 ;	genPointerGet
                           8607 ;	AOP_STK for _move_character_sloc0_1_0
                           8608 ;	AOP_STK for _move_character_sloc8_1_0
   1984 F8 0D              8609 	lda	hl,13(sp)
   1986 5E                 8610 	ld	e,(hl)
   1987 23                 8611 	inc	hl
   1988 56                 8612 	ld	d,(hl)
   1989 1A                 8613 	ld	a,(de)
   198A F8 00              8614 	lda	hl,0(sp)
   198C 77                 8615 	ld	(hl),a
                           8616 ;	genIpush
                           8617 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   198D C5                 8618 	push	bc
                           8619 ;	AOP_STK for _move_character_sloc7_1_0
   198E 23                 8620 	inc	hl
   198F 23                 8621 	inc	hl
   1990 7E                 8622 	ld	a,(hl)
   1991 F5                 8623 	push	af
   1992 33                 8624 	inc	sp
                           8625 ;	genIpush
                           8626 ;	AOP_STK for _move_character_sloc8_1_0
   1993 2B                 8627 	dec	hl
   1994 2B                 8628 	dec	hl
   1995 7E                 8629 	ld	a,(hl)
   1996 F5                 8630 	push	af
   1997 33                 8631 	inc	sp
                           8632 ;	genCall
   1998 CD 6E 0C           8633 	call	_get_player_map_position
                           8634 ;	AOP_STK for _move_character_sloc8_1_0
   199B F8 05              8635 	lda	hl,5(sp)
   199D 72                 8636 	ld	(hl),d
   199E 2B                 8637 	dec	hl
   199F 73                 8638 	ld	(hl),e
   19A0 E8 02              8639 	lda	sp,2(sp)
   19A2 C1                 8640 	pop	bc
                           8641 ;	genAssign (pointer)
                           8642 ;	AOP_STK for _move_character_sloc8_1_0
   19A3 59                 8643 	ld	e,c
   19A4 50                 8644 	ld	d,b
   19A5 F8 00              8645 	lda	hl,0(sp)
   19A7 7E                 8646 	ld	a,(hl)
   19A8 12                 8647 	ld	(de),a
   19A9 13                 8648 	inc	de
   19AA 23                 8649 	inc	hl
   19AB 7E                 8650 	ld	a,(hl)
   19AC 12                 8651 	ld	(de),a
                           8652 ;	genLabel
   19AD                    8653 00166$:
                           8654 ;	genEndFunction
   19AD E8 0F              8655 	lda	sp,15(sp)
   19AF C9                 8656 	ret
   19B0                    8657 ___move_character_end:
                           8658 ;	game.c 1089
                           8659 ;	genLabel
                           8660 ;	genFunction
                           8661 ;	---------------------------------
                           8662 ; Function set_character_sprite
                           8663 ; ---------------------------------
   19B0                    8664 ___set_character_sprite_start:
   19B0                    8665 _set_character_sprite:
   19B0 E8 F9              8666 	lda	sp,-7(sp)
                           8667 ;	game.c 1090
                           8668 ;	genAssign
                           8669 ;	AOP_STK for 
   19B2 F8 09              8670 	lda	hl,9(sp)
   19B4 4E                 8671 	ld	c,(hl)
   19B5 23                 8672 	inc	hl
   19B6 46                 8673 	ld	b,(hl)
                           8674 ;	genPlus
                           8675 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8676 ;	genPlusIncr
                           8677 ;	Can't optimise plus by inc, falling back to the normal way
   19B7 21 0B 00           8678 	ld	hl,#0x000B
   19BA 09                 8679 	add	hl,bc
   19BB 7D                 8680 	ld	a,l
   19BC 54                 8681 	ld	d,h
   19BD F8 05              8682 	lda	hl,5(sp)
                           8683 ;	genPointerGet
                           8684 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8685 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   19BF 22                 8686 	ld	(hl+),a
   19C0 72                 8687 	ld	(hl),d
   19C1 5F                 8688 	ld	e,a
   19C2 1A                 8689 	ld	a,(de)
   19C3 2B                 8690 	dec	hl
   19C4 2B                 8691 	dec	hl
   19C5 77                 8692 	ld	(hl),a
                           8693 ;	genCmpGt
                           8694 ;	AOP_STK for _set_character_sprite_sloc1_1_0
                           8695 ;	AOP_HL for _characters_available
   19C6 21 02 19           8696 	ld	hl,#_characters_available
   19C9 7E                 8697 	ld	a,(hl)
   19CA F8 04              8698 	lda	hl,4(sp)
   19CC 96                 8699 	sub	a,(hl)
   19CD DA 49 1A           8700 	jp	c,00103$
                           8701 ;	game.c 1091
                           8702 ;	genPlus
                           8703 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8704 ;	genPlusIncr
                           8705 ;	Can't optimise plus by inc, falling back to the normal way
   19D0 21 02 00           8706 	ld	hl,#0x0002
   19D3 09                 8707 	add	hl,bc
   19D4 7D                 8708 	ld	a,l
   19D5 54                 8709 	ld	d,h
   19D6 F8 02              8710 	lda	hl,2(sp)
                           8711 ;	genPointerGet
                           8712 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8713 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   19D8 22                 8714 	ld	(hl+),a
   19D9 72                 8715 	ld	(hl),d
   19DA 5F                 8716 	ld	e,a
   19DB 1A                 8717 	ld	a,(de)
   19DC 2B                 8718 	dec	hl
   19DD 2B                 8719 	dec	hl
   19DE 77                 8720 	ld	(hl),a
                           8721 ;	genIpush
                           8722 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   19DF C5                 8723 	push	bc
                           8724 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   19E0 7E                 8725 	ld	a,(hl)
   19E1 F5                 8726 	push	af
   19E2 33                 8727 	inc	sp
                           8728 ;	genIpush
                           8729 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   19E3 F8 07              8730 	lda	hl,7(sp)
   19E5 7E                 8731 	ld	a,(hl)
   19E6 F5                 8732 	push	af
   19E7 33                 8733 	inc	sp
                           8734 ;	genCall
   19E8 CD 00 00           8735 	call	_set_sprite_tile
   19EB E8 02              8736 	lda	sp,2(sp)
   19ED C1                 8737 	pop	bc
                           8738 ;	game.c 1092
                           8739 ;	genPlus
                           8740 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8741 ;	genPlusIncr
                           8742 ;	Can't optimise plus by inc, falling back to the normal way
   19EE 21 01 00           8743 	ld	hl,#0x0001
   19F1 09                 8744 	add	hl,bc
   19F2 7D                 8745 	ld	a,l
   19F3 54                 8746 	ld	d,h
   19F4 F8 02              8747 	lda	hl,2(sp)
                           8748 ;	genPointerGet
                           8749 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8750 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   19F6 22                 8751 	ld	(hl+),a
   19F7 72                 8752 	ld	(hl),d
   19F8 5F                 8753 	ld	e,a
   19F9 1A                 8754 	ld	a,(de)
   19FA 2B                 8755 	dec	hl
   19FB 2B                 8756 	dec	hl
   19FC 77                 8757 	ld	(hl),a
                           8758 ;	genPointerGet
                           8759 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   19FD 0A                 8760 	ld	a,(bc)
   19FE F8 04              8761 	lda	hl,4(sp)
                           8762 ;	genPointerGet
                           8763 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8764 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A00 22                 8765 	ld	(hl+),a
   1A01 5E                 8766 	ld	e,(hl)
   1A02 23                 8767 	inc	hl
   1A03 56                 8768 	ld	d,(hl)
   1A04 1A                 8769 	ld	a,(de)
   1A05 F8 00              8770 	lda	hl,0(sp)
   1A07 77                 8771 	ld	(hl),a
                           8772 ;	genIpush
                           8773 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1A08 C5                 8774 	push	bc
                           8775 ;	AOP_STK for _set_character_sprite_sloc3_1_0
   1A09 23                 8776 	inc	hl
   1A0A 7E                 8777 	ld	a,(hl)
   1A0B F5                 8778 	push	af
   1A0C 33                 8779 	inc	sp
                           8780 ;	genIpush
                           8781 ;	AOP_STK for _set_character_sprite_sloc1_1_0
   1A0D F8 07              8782 	lda	hl,7(sp)
   1A0F 7E                 8783 	ld	a,(hl)
   1A10 F5                 8784 	push	af
   1A11 33                 8785 	inc	sp
                           8786 ;	genIpush
                           8787 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A12 F8 04              8788 	lda	hl,4(sp)
   1A14 7E                 8789 	ld	a,(hl)
   1A15 F5                 8790 	push	af
   1A16 33                 8791 	inc	sp
                           8792 ;	genCall
   1A17 CD 00 00           8793 	call	_move_sprite
   1A1A E8 03              8794 	lda	sp,3(sp)
   1A1C C1                 8795 	pop	bc
                           8796 ;	game.c 1093
                           8797 ;	genPlus
                           8798 ;	AOP_STK for _set_character_sprite_sloc0_1_0
                           8799 ;	genPlusIncr
                           8800 ;	Can't optimise plus by inc, falling back to the normal way
   1A1D 21 0C 00           8801 	ld	hl,#0x000C
   1A20 09                 8802 	add	hl,bc
   1A21 7D                 8803 	ld	a,l
   1A22 54                 8804 	ld	d,h
   1A23 F8 05              8805 	lda	hl,5(sp)
   1A25 22                 8806 	ld	(hl+),a
   1A26 72                 8807 	ld	(hl),d
                           8808 ;	genPointerGet
                           8809 ;	AOP_STK for _set_character_sprite_sloc2_1_0
                           8810 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A27 F8 02              8811 	lda	hl,2(sp)
   1A29 5E                 8812 	ld	e,(hl)
   1A2A 23                 8813 	inc	hl
   1A2B 56                 8814 	ld	d,(hl)
   1A2C 1A                 8815 	ld	a,(de)
   1A2D F8 00              8816 	lda	hl,0(sp)
   1A2F 77                 8817 	ld	(hl),a
                           8818 ;	genPointerGet
   1A30 0A                 8819 	ld	a,(bc)
   1A31 4F                 8820 	ld	c,a
                           8821 ;	genIpush
                           8822 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8823 ;	AOP_STK for _set_character_sprite_sloc4_1_0
   1A32 7E                 8824 	ld	a,(hl)
   1A33 F5                 8825 	push	af
   1A34 33                 8826 	inc	sp
                           8827 ;	genIpush
   1A35 79                 8828 	ld	a,c
   1A36 F5                 8829 	push	af
   1A37 33                 8830 	inc	sp
                           8831 ;	genCall
   1A38 CD 6E 0C           8832 	call	_get_player_map_position
   1A3B 42                 8833 	ld	b,d
   1A3C 4B                 8834 	ld	c,e
   1A3D E8 02              8835 	lda	sp,2(sp)
                           8836 ;	genAssign (pointer)
                           8837 ;	AOP_STK for _set_character_sprite_sloc0_1_0
   1A3F F8 05              8838 	lda	hl,5(sp)
   1A41 5E                 8839 	ld	e,(hl)
   1A42 23                 8840 	inc	hl
   1A43 56                 8841 	ld	d,(hl)
   1A44 79                 8842 	ld	a,c
   1A45 12                 8843 	ld	(de),a
   1A46 13                 8844 	inc	de
   1A47 78                 8845 	ld	a,b
   1A48 12                 8846 	ld	(de),a
                           8847 ;	genLabel
   1A49                    8848 00103$:
                           8849 ;	genEndFunction
   1A49 E8 07              8850 	lda	sp,7(sp)
   1A4B C9                 8851 	ret
   1A4C                    8852 ___set_character_sprite_end:
                           8853 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  1 _Map1                              01F0 GR
  1 _Map10                             0E98 GR
  1 _Map2                              0358 GR
  1 _Map3                              04C0 GR
  1 _Map4                              0628 GR
  1 _Map5                              0790 GR
  1 _Map6                              08F8 GR
  1 _Map7                              0A60 GR
  1 _Map8                              0BC8 GR
  1 _Map9                              0D30 GR
  1 _MapTest                           1000 GR
  0 ____get_next_map_position_end      0B4A R
  0 ____get_next_map_position_start    0A96 R
  0 ___can_move_end                    0FAA R
  0 ___can_move_start                  0EC1 R
  0 ___can_move_to_map_pos_end         0EC1 R
  0 ___can_move_to_map_pos_start       0E0E R
  0 ___change_char_end                 02EF R
  0 ___change_char_start               01CA R
  0 ___copy_map_end                    0434 R
  0 ___copy_map_start                  0377 R
  0 ___dog1_power_apply_end            0C6E R
  0 ___dog1_power_apply_start          0B4A R
  0 ___dog1_power_end                  0A96 R
  0 ___dog1_power_start                08FF R
  0 ___get_player_map_position_end     0CC8 R
  0 ___get_player_map_position_start   0C6E R
  0 ___got_door_end                    07CC R
  0 ___got_door_start                  05E2 R
  0 ___got_key_end                     05E2 R
  0 ___got_key_start                   0535 R
  0 ___helper_copy_map_end             0377 R
  0 ___helper_copy_map_start           0345 R
  0 ___ice_should_slide_end            08FF R
  0 ___ice_should_slide_start          08A1 R
  0 ___init_end                        011B R
  0 ___init_start                      005D R
  0 ___instanciate_chars_end           0535 R
  0 ___instanciate_chars_start         044C R
  0 ___is_ded_end                      08A1 R
  0 ___is_ded_start                    07CC R
  0 ___main_end                        0054 R
  0 ___main_start                      0027 R
  0 ___map_init_end                    044C R
  0 ___map_init_start                  0434 R
  0 ___map_loop_end                    0345 R
  0 ___map_loop_start                  02EF R
  0 ___map_water_end                   01CA R
  0 ___map_water_start                 011B R
  0 ___move_character_end              19B0 R
  0 ___move_character_start            1150 R
  0 ___performantDelay_end             0016 R
  0 ___performantDelay_start           0000 R
  0 ___player_input_end                0E0E R
  0 ___player_input_start              0CC8 R
  0 ___rotate_player_end               1150 R
  0 ___rotate_player_start             0FAA R
  0 ___set_character_sprite_end        1A4C R
  0 ___set_character_sprite_start      19B0 R
  0 ___timers_end                      0027 R
  0 ___timers_start                    0016 R
    __divuint_rrx_s                    **** GX
  0 __get_next_map_position            0A96 GR
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0054 R
  1 _bunny                             1A6D GR
  0 _can_move                          0EC1 GR
  0 _can_move_to_map_pos               0E0E GR
  1 _cat                               1A97 GR
  0 _change_char                       01CA GR
  1 _characters_available              1902 GR
  0 _copy_map                          0377 GR
  1 _current_map                       1904 GR
  1 _dog1                              1A7B GR
  0 _dog1_power                        08FF GR
  0 _dog1_power_apply                  0B4A GR
  1 _dog2                              1A89 GR
  0 _get_player_map_position           0C6E GR
  0 _got_door                          05E2 GR
  0 _got_key                           0535 GR
  0 _helper_copy_map                   0345 GR
  1 _horse                             1AA5 GR
  0 _ice_should_slide                  08A1 GR
  0 _init                              005D GR
  1 _input_timer                       1903 GR
  0 _instanciate_chars                 044C GR
  0 _is_ded                            07CC GR
  1 _item1                             1ABB GR
  1 _item2                             1AC1 GR
  1 _item3                             1AC7 GR
    _joypad                            **** GX
  1 _key                               1AB5 GR
  0 _main                              0027 GR
  1 _map                               1905 GR
  0 _map_init                          0434 GR
  0 _map_loop                          02EF GR
  0 _map_water                         011B GR
  0 _move_character                    1150 GR
    _move_sprite                       **** GX
  0 _performantDelay                   0000 GR
  1 _player                            1AB3 GR
  0 _player_input                      0CC8 GR
    _printf                            **** GX
  0 _rotate_player                     0FAA GR
  1 _running                           1900 GR
    _set_bkg_data                      **** GX
    _set_bkg_palette                   **** GX
    _set_bkg_tiles                     **** GX
  0 _set_character_sprite              19B0 GR
    _set_sprite_data                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _set_sprite_tile                   **** GX
  1 _spritePalette                     18F8 GR
  1 _sprites_park                      1168 GR
  1 _timer                             1901 GR
  0 _timers                            0016 GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1A4C   flags 0
   1 _DATA                              size 1ACD   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size 1036   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
