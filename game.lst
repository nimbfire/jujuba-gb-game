                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Wed Feb 12 00:26:51 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc154260
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _map
                             13 	.globl _running
                             14 	.globl _Characters
                             15 	.globl _map_1
                             16 	.globl _init
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; special function bits 
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; internal ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
   0000                      27 _Characters::
   0000                      28 	.ds 48
   0030                      29 _running::
   0030                      30 	.ds 1
   0031                      31 _map::
   0031                      32 	.ds 1
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area _OVERLAY
                             37 ;--------------------------------------------------------
                             38 ; indirectly addressable internal ram data
                             39 ;--------------------------------------------------------
                             40 	.area _ISEG
                             41 ;--------------------------------------------------------
                             42 ; bit data
                             43 ;--------------------------------------------------------
                             44 	.area _BSEG
                             45 ;--------------------------------------------------------
                             46 ; external ram data
                             47 ;--------------------------------------------------------
                             48 	.area _XSEG
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area _GSINIT
                             53 	.area _GSFINAL
                             54 	.area _GSINIT
                             55 ;	game.c 26
                             56 ;	game.c 47
                             57 ;	genArrayInit
                             58 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00             59 	ld	hl,#_Characters
   0003 CD 00 00             60 	call	__initrleblock
   0006 30                   61 	.db	48
   0007 09 00 00 09 00 09    62 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   000F CA 05 FF 00 3F 00    63 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x3A, 0x45
        3A 45
   0017 09 00 00 09 00 09    64 	.db	0x09, 0x00, 0x00, 0x09, 0x00, 0x09, 0x0F, 0x00
        0F 00
   001F CA 05 FF 00 3F 00    65 	.db	0xCA, 0x05, 0xFF, 0x00, 0x3F, 0x00, 0x15, 0x2A
        15 2A
   0027 24 12 00 09 0F 00    66 	.db	0x24, 0x12, 0x00, 0x09, 0x0F, 0x00, 0xCA, 0x05
        CA 05
   002F FF 00 3F 00 3A 45    67 	.db	0xFF, 0x00, 0x3F, 0x00, 0x3A, 0x45, 0x00, 0x00
        00 00
   0037 00                   68 	.db	0
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area _HOME
                             73 	.area _CODE
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area _CODE
                             78 ;	game.c 17
                             79 ;	genLabel
                             80 ;	genFunction
                             81 ;	---------------------------------
                             82 ; Function main
                             83 ; ---------------------------------
   0000                      84 ___main_start:
   0000                      85 _main:
                             86 	
                             87 ;	game.c 19
                             88 ;	genCall
                             89 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 CD 36 00             90 	call	_init
                             91 ;	game.c 21
                             92 ;	genLabel
   0003                      93 00103$:
                             94 ;	genIfx
                             95 ;	AOP_HL for _running
   0003 AF                   96 	xor	a,a
   0004 21 30 00             97 	ld	hl,#_running
   0007 B6                   98 	or	a,(hl)
   0008 CA 1F 00             99 	jp	z,00105$
                            100 ;	game.c 22
                            101 ;	genCmpEq
                            102 ;	AOP_HL for _map
                            103 ; genCmpEq: left 1, right 1, result 0
   000B 21 31 00            104 	ld	hl,#_map
   000E 7E                  105 	ld	a,(hl)
   000F FE 01               106 	cp	a,#0x01
   0011 C2 03 00            107 	jp	nz,00103$
   0014 18 03               108 	jr	00116$
   0016                     109 00115$:
   0016 C3 03 00            110 	jp	00103$
   0019                     111 00116$:
                            112 ;	game.c 23
                            113 ;	genCall
                            114 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0019 CD 35 00            115 	call	_map_1
                            116 ;	genGoto
   001C C3 03 00            117 	jp	00103$
                            118 ;	genLabel
   001F                     119 00105$:
                            120 ;	game.c 27
                            121 ;	genIpush
                            122 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   001F 21 2C 00            123 	ld	hl,#__str_0
   0022 E5                  124 	push	hl
                            125 ;	genCall
   0023 CD 00 00            126 	call	_printf
   0026 E8 02               127 	lda	sp,2(sp)
                            128 ;	game.c 28
                            129 ;	genLabel
   0028                     130 00107$:
                            131 ;	genGoto
   0028 C3 28 00            132 	jp	00107$
                            133 ;	genLabel
   002B                     134 00109$:
                            135 ;	genEndFunction
                            136 	
   002B C9                  137 	ret
   002C                     138 ___main_end:
   002C                     139 __str_0:
   002C 54 68 65 20 65 6E   140 	.ascii "The end"
        64
   0033 0A                  141 	.db 0x0A
   0034 00                  142 	.db 0x00
                            143 ;	game.c 33
                            144 ;	genLabel
                            145 ;	genFunction
                            146 ;	---------------------------------
                            147 ; Function map_1
                            148 ; ---------------------------------
   0035                     149 ___map_1_start:
   0035                     150 _map_1:
                            151 	
                            152 ;	game.c 35
                            153 ;	genLabel
   0035                     154 00101$:
                            155 ;	genEndFunction
                            156 	
   0035 C9                  157 	ret
   0036                     158 ___map_1_end:
                            159 ;	game.c 37
                            160 ;	genLabel
                            161 ;	genFunction
                            162 ;	---------------------------------
                            163 ; Function init
                            164 ; ---------------------------------
   0036                     165 ___init_start:
   0036                     166 _init:
   0036 E8 FD               167 	lda	sp,-3(sp)
                            168 ;	game.c 38
                            169 ;	genAssign
                            170 ;	AOP_HL for _running
   0038 21 30 00            171 	ld	hl,#_running
   003B 36 01               172 	ld	(hl),#0x01
                            173 ;	game.c 39
                            174 ;	genAssign
                            175 ;	AOP_HL for _map
   003D 21 31 00            176 	ld	hl,#_map
   0040 36 01               177 	ld	(hl),#0x01
                            178 ;	game.c 40
                            179 ;	genAssign
   0042 01 40 FF            180 	ld	bc,#0xFF40
                            181 ;	genAssign
                            182 ;	AOP_STK for _init_sloc0_1_0
   0045 F8 01               183 	lda	hl,1(sp)
   0047 36 40               184 	ld	(hl),#0x40
   0049 23                  185 	inc	hl
   004A 36 FF               186 	ld	(hl),#0xFF
                            187 ;	genPointerGet
                            188 ;	AOP_STK for _init_sloc0_1_0
                            189 ;	AOP_STK for _init_sloc1_1_0
   004C 2B                  190 	dec	hl
   004D 5E                  191 	ld	e,(hl)
   004E 23                  192 	inc	hl
   004F 56                  193 	ld	d,(hl)
   0050 1A                  194 	ld	a,(de)
   0051 2B                  195 	dec	hl
   0052 2B                  196 	dec	hl
                            197 ;	genOr
                            198 ;	AOP_STK for _init_sloc1_1_0
   0053 77                  199 	ld      (hl),a
   0054 7F                  200 	ld      a,a
   0055 F6 80               201 	or	a,#0x80
                            202 ;	genAssign (pointer)
   0057 02                  203 	ld	(bc),a
                            204 ;	game.c 41
                            205 ;	genAssign
   0058 01 40 FF            206 	ld	bc,#0xFF40
                            207 ;	genAssign
                            208 ;	AOP_STK for _init_sloc0_1_0
   005B 23                  209 	inc	hl
   005C 36 40               210 	ld	(hl),#0x40
   005E 23                  211 	inc	hl
   005F 36 FF               212 	ld	(hl),#0xFF
                            213 ;	genPointerGet
                            214 ;	AOP_STK for _init_sloc0_1_0
                            215 ;	AOP_STK for _init_sloc1_1_0
   0061 2B                  216 	dec	hl
   0062 5E                  217 	ld	e,(hl)
   0063 23                  218 	inc	hl
   0064 56                  219 	ld	d,(hl)
   0065 1A                  220 	ld	a,(de)
   0066 2B                  221 	dec	hl
   0067 2B                  222 	dec	hl
                            223 ;	genOr
                            224 ;	AOP_STK for _init_sloc1_1_0
   0068 77                  225 	ld      (hl),a
   0069 7F                  226 	ld      a,a
   006A F6 02               227 	or	a,#0x02
                            228 ;	genAssign (pointer)
   006C 02                  229 	ld	(bc),a
                            230 ;	game.c 42
                            231 ;	genIpush
                            232 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006D 21 00 00            233 	ld	hl,#_Characters
   0070 E5                  234 	push	hl
                            235 ;	genIpush
   0071 21 00 03            236 	ld	hl,#0x0300
   0074 E5                  237 	push	hl
                            238 ;	genCall
   0075 CD 00 00            239 	call	_set_sprite_data
   0078 E8 04               240 	lda	sp,4(sp)
                            241 ;	game.c 43
                            242 ;	genIpush
                            243 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   007A 21 00 02            244 	ld	hl,#0x0200
   007D E5                  245 	push	hl
                            246 ;	genCall
   007E CD 00 00            247 	call	_set_sprite_tile
   0081 E8 02               248 	lda	sp,2(sp)
                            249 ;	game.c 44
                            250 ;	genIpush
                            251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0083 21 28 28            252 	ld	hl,#0x2828
   0086 E5                  253 	push	hl
                            254 ;	genIpush
   0087 3E 00               255 	ld	a,#0x00
   0089 F5                  256 	push	af
   008A 33                  257 	inc	sp
                            258 ;	genCall
   008B CD 00 00            259 	call	_move_sprite
   008E E8 03               260 	lda	sp,3(sp)
                            261 ;	genLabel
   0090                     262 00101$:
                            263 ;	genEndFunction
   0090 E8 03               264 	lda	sp,3(sp)
   0092 C9                  265 	ret
   0093                     266 ___init_end:
                            267 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _Characters                        0000 GR
  0 ___init_end                        0093 R
  0 ___init_start                      0036 R
  0 ___main_end                        002C R
  0 ___main_start                      0000 R
  0 ___map_1_end                       0036 R
  0 ___map_1_start                     0035 R
    __initrleblock                     **** GX
  0 __str_0                            002C R
  0 _init                              0036 GR
  0 _main                              0000 GR
  1 _map                               0031 GR
  0 _map_1                             0035 GR
    _move_sprite                       **** GX
    _printf                            **** GX
  1 _running                           0030 GR
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   93   flags 0
   1 _DATA                              size   32   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   38   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
